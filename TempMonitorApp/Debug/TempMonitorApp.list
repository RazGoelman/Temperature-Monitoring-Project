
TempMonitorApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002e434  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00004b10  0802e5c8  0802e5c8  0003e5c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080330d8  080330d8  000502f4  2**0
                  CONTENTS
  4 .ARM          00000008  080330d8  080330d8  000430d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080330e0  080330e0  000502f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   0000001c  080330e0  080330e0  000430e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  080330fc  080330fc  000430fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000002f4  20000000  08033104  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00004004  200002f8  080333f8  000502f8  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  200042fc  080333f8  000542fc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000502f4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0002f5ab  00000000  00000000  00050324  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000064ce  00000000  00000000  0007f8cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000021e0  00000000  00000000  00085da0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001f88  00000000  00000000  00087f80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002f94e  00000000  00000000  00089f08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00029f19  00000000  00000000  000b9856  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0010a4ec  00000000  00000000  000e376f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  001edc5b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0001e894  00000000  00000000  001edcac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200002f8 	.word	0x200002f8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0802e5ac 	.word	0x0802e5ac

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200002fc 	.word	0x200002fc
 80001cc:	0802e5ac 	.word	0x0802e5ac

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strcmp>:
 8000270:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000274:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000278:	2a01      	cmp	r2, #1
 800027a:	bf28      	it	cs
 800027c:	429a      	cmpcs	r2, r3
 800027e:	d0f7      	beq.n	8000270 <strcmp>
 8000280:	1ad0      	subs	r0, r2, r3
 8000282:	4770      	bx	lr

08000284 <strlen>:
 8000284:	4603      	mov	r3, r0
 8000286:	f813 2b01 	ldrb.w	r2, [r3], #1
 800028a:	2a00      	cmp	r2, #0
 800028c:	d1fb      	bne.n	8000286 <strlen+0x2>
 800028e:	1a18      	subs	r0, r3, r0
 8000290:	3801      	subs	r0, #1
 8000292:	4770      	bx	lr

08000294 <__aeabi_drsub>:
 8000294:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000298:	e002      	b.n	80002a0 <__adddf3>
 800029a:	bf00      	nop

0800029c <__aeabi_dsub>:
 800029c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002a0 <__adddf3>:
 80002a0:	b530      	push	{r4, r5, lr}
 80002a2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002aa:	ea94 0f05 	teq	r4, r5
 80002ae:	bf08      	it	eq
 80002b0:	ea90 0f02 	teqeq	r0, r2
 80002b4:	bf1f      	itttt	ne
 80002b6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002ba:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002be:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002c2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c6:	f000 80e2 	beq.w	800048e <__adddf3+0x1ee>
 80002ca:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ce:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002d2:	bfb8      	it	lt
 80002d4:	426d      	neglt	r5, r5
 80002d6:	dd0c      	ble.n	80002f2 <__adddf3+0x52>
 80002d8:	442c      	add	r4, r5
 80002da:	ea80 0202 	eor.w	r2, r0, r2
 80002de:	ea81 0303 	eor.w	r3, r1, r3
 80002e2:	ea82 0000 	eor.w	r0, r2, r0
 80002e6:	ea83 0101 	eor.w	r1, r3, r1
 80002ea:	ea80 0202 	eor.w	r2, r0, r2
 80002ee:	ea81 0303 	eor.w	r3, r1, r3
 80002f2:	2d36      	cmp	r5, #54	; 0x36
 80002f4:	bf88      	it	hi
 80002f6:	bd30      	pophi	{r4, r5, pc}
 80002f8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002fc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000300:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000304:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x70>
 800030a:	4240      	negs	r0, r0
 800030c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000310:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000314:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000318:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800031c:	d002      	beq.n	8000324 <__adddf3+0x84>
 800031e:	4252      	negs	r2, r2
 8000320:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000324:	ea94 0f05 	teq	r4, r5
 8000328:	f000 80a7 	beq.w	800047a <__adddf3+0x1da>
 800032c:	f1a4 0401 	sub.w	r4, r4, #1
 8000330:	f1d5 0e20 	rsbs	lr, r5, #32
 8000334:	db0d      	blt.n	8000352 <__adddf3+0xb2>
 8000336:	fa02 fc0e 	lsl.w	ip, r2, lr
 800033a:	fa22 f205 	lsr.w	r2, r2, r5
 800033e:	1880      	adds	r0, r0, r2
 8000340:	f141 0100 	adc.w	r1, r1, #0
 8000344:	fa03 f20e 	lsl.w	r2, r3, lr
 8000348:	1880      	adds	r0, r0, r2
 800034a:	fa43 f305 	asr.w	r3, r3, r5
 800034e:	4159      	adcs	r1, r3
 8000350:	e00e      	b.n	8000370 <__adddf3+0xd0>
 8000352:	f1a5 0520 	sub.w	r5, r5, #32
 8000356:	f10e 0e20 	add.w	lr, lr, #32
 800035a:	2a01      	cmp	r2, #1
 800035c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000360:	bf28      	it	cs
 8000362:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	18c0      	adds	r0, r0, r3
 800036c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000370:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000374:	d507      	bpl.n	8000386 <__adddf3+0xe6>
 8000376:	f04f 0e00 	mov.w	lr, #0
 800037a:	f1dc 0c00 	rsbs	ip, ip, #0
 800037e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000382:	eb6e 0101 	sbc.w	r1, lr, r1
 8000386:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800038a:	d31b      	bcc.n	80003c4 <__adddf3+0x124>
 800038c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000390:	d30c      	bcc.n	80003ac <__adddf3+0x10c>
 8000392:	0849      	lsrs	r1, r1, #1
 8000394:	ea5f 0030 	movs.w	r0, r0, rrx
 8000398:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800039c:	f104 0401 	add.w	r4, r4, #1
 80003a0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a8:	f080 809a 	bcs.w	80004e0 <__adddf3+0x240>
 80003ac:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003b0:	bf08      	it	eq
 80003b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b6:	f150 0000 	adcs.w	r0, r0, #0
 80003ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003be:	ea41 0105 	orr.w	r1, r1, r5
 80003c2:	bd30      	pop	{r4, r5, pc}
 80003c4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c8:	4140      	adcs	r0, r0
 80003ca:	eb41 0101 	adc.w	r1, r1, r1
 80003ce:	3c01      	subs	r4, #1
 80003d0:	bf28      	it	cs
 80003d2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d6:	d2e9      	bcs.n	80003ac <__adddf3+0x10c>
 80003d8:	f091 0f00 	teq	r1, #0
 80003dc:	bf04      	itt	eq
 80003de:	4601      	moveq	r1, r0
 80003e0:	2000      	moveq	r0, #0
 80003e2:	fab1 f381 	clz	r3, r1
 80003e6:	bf08      	it	eq
 80003e8:	3320      	addeq	r3, #32
 80003ea:	f1a3 030b 	sub.w	r3, r3, #11
 80003ee:	f1b3 0220 	subs.w	r2, r3, #32
 80003f2:	da0c      	bge.n	800040e <__adddf3+0x16e>
 80003f4:	320c      	adds	r2, #12
 80003f6:	dd08      	ble.n	800040a <__adddf3+0x16a>
 80003f8:	f102 0c14 	add.w	ip, r2, #20
 80003fc:	f1c2 020c 	rsb	r2, r2, #12
 8000400:	fa01 f00c 	lsl.w	r0, r1, ip
 8000404:	fa21 f102 	lsr.w	r1, r1, r2
 8000408:	e00c      	b.n	8000424 <__adddf3+0x184>
 800040a:	f102 0214 	add.w	r2, r2, #20
 800040e:	bfd8      	it	le
 8000410:	f1c2 0c20 	rsble	ip, r2, #32
 8000414:	fa01 f102 	lsl.w	r1, r1, r2
 8000418:	fa20 fc0c 	lsr.w	ip, r0, ip
 800041c:	bfdc      	itt	le
 800041e:	ea41 010c 	orrle.w	r1, r1, ip
 8000422:	4090      	lslle	r0, r2
 8000424:	1ae4      	subs	r4, r4, r3
 8000426:	bfa2      	ittt	ge
 8000428:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800042c:	4329      	orrge	r1, r5
 800042e:	bd30      	popge	{r4, r5, pc}
 8000430:	ea6f 0404 	mvn.w	r4, r4
 8000434:	3c1f      	subs	r4, #31
 8000436:	da1c      	bge.n	8000472 <__adddf3+0x1d2>
 8000438:	340c      	adds	r4, #12
 800043a:	dc0e      	bgt.n	800045a <__adddf3+0x1ba>
 800043c:	f104 0414 	add.w	r4, r4, #20
 8000440:	f1c4 0220 	rsb	r2, r4, #32
 8000444:	fa20 f004 	lsr.w	r0, r0, r4
 8000448:	fa01 f302 	lsl.w	r3, r1, r2
 800044c:	ea40 0003 	orr.w	r0, r0, r3
 8000450:	fa21 f304 	lsr.w	r3, r1, r4
 8000454:	ea45 0103 	orr.w	r1, r5, r3
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	f1c4 040c 	rsb	r4, r4, #12
 800045e:	f1c4 0220 	rsb	r2, r4, #32
 8000462:	fa20 f002 	lsr.w	r0, r0, r2
 8000466:	fa01 f304 	lsl.w	r3, r1, r4
 800046a:	ea40 0003 	orr.w	r0, r0, r3
 800046e:	4629      	mov	r1, r5
 8000470:	bd30      	pop	{r4, r5, pc}
 8000472:	fa21 f004 	lsr.w	r0, r1, r4
 8000476:	4629      	mov	r1, r5
 8000478:	bd30      	pop	{r4, r5, pc}
 800047a:	f094 0f00 	teq	r4, #0
 800047e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000482:	bf06      	itte	eq
 8000484:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000488:	3401      	addeq	r4, #1
 800048a:	3d01      	subne	r5, #1
 800048c:	e74e      	b.n	800032c <__adddf3+0x8c>
 800048e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000492:	bf18      	it	ne
 8000494:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000498:	d029      	beq.n	80004ee <__adddf3+0x24e>
 800049a:	ea94 0f05 	teq	r4, r5
 800049e:	bf08      	it	eq
 80004a0:	ea90 0f02 	teqeq	r0, r2
 80004a4:	d005      	beq.n	80004b2 <__adddf3+0x212>
 80004a6:	ea54 0c00 	orrs.w	ip, r4, r0
 80004aa:	bf04      	itt	eq
 80004ac:	4619      	moveq	r1, r3
 80004ae:	4610      	moveq	r0, r2
 80004b0:	bd30      	pop	{r4, r5, pc}
 80004b2:	ea91 0f03 	teq	r1, r3
 80004b6:	bf1e      	ittt	ne
 80004b8:	2100      	movne	r1, #0
 80004ba:	2000      	movne	r0, #0
 80004bc:	bd30      	popne	{r4, r5, pc}
 80004be:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004c2:	d105      	bne.n	80004d0 <__adddf3+0x230>
 80004c4:	0040      	lsls	r0, r0, #1
 80004c6:	4149      	adcs	r1, r1
 80004c8:	bf28      	it	cs
 80004ca:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ce:	bd30      	pop	{r4, r5, pc}
 80004d0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d4:	bf3c      	itt	cc
 80004d6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004da:	bd30      	popcc	{r4, r5, pc}
 80004dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004e0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e8:	f04f 0000 	mov.w	r0, #0
 80004ec:	bd30      	pop	{r4, r5, pc}
 80004ee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004f2:	bf1a      	itte	ne
 80004f4:	4619      	movne	r1, r3
 80004f6:	4610      	movne	r0, r2
 80004f8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004fc:	bf1c      	itt	ne
 80004fe:	460b      	movne	r3, r1
 8000500:	4602      	movne	r2, r0
 8000502:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000506:	bf06      	itte	eq
 8000508:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800050c:	ea91 0f03 	teqeq	r1, r3
 8000510:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000514:	bd30      	pop	{r4, r5, pc}
 8000516:	bf00      	nop

08000518 <__aeabi_ui2d>:
 8000518:	f090 0f00 	teq	r0, #0
 800051c:	bf04      	itt	eq
 800051e:	2100      	moveq	r1, #0
 8000520:	4770      	bxeq	lr
 8000522:	b530      	push	{r4, r5, lr}
 8000524:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000528:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800052c:	f04f 0500 	mov.w	r5, #0
 8000530:	f04f 0100 	mov.w	r1, #0
 8000534:	e750      	b.n	80003d8 <__adddf3+0x138>
 8000536:	bf00      	nop

08000538 <__aeabi_i2d>:
 8000538:	f090 0f00 	teq	r0, #0
 800053c:	bf04      	itt	eq
 800053e:	2100      	moveq	r1, #0
 8000540:	4770      	bxeq	lr
 8000542:	b530      	push	{r4, r5, lr}
 8000544:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000548:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800054c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000550:	bf48      	it	mi
 8000552:	4240      	negmi	r0, r0
 8000554:	f04f 0100 	mov.w	r1, #0
 8000558:	e73e      	b.n	80003d8 <__adddf3+0x138>
 800055a:	bf00      	nop

0800055c <__aeabi_f2d>:
 800055c:	0042      	lsls	r2, r0, #1
 800055e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000562:	ea4f 0131 	mov.w	r1, r1, rrx
 8000566:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800056a:	bf1f      	itttt	ne
 800056c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000570:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000574:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000578:	4770      	bxne	lr
 800057a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057e:	bf08      	it	eq
 8000580:	4770      	bxeq	lr
 8000582:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000586:	bf04      	itt	eq
 8000588:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800058c:	4770      	bxeq	lr
 800058e:	b530      	push	{r4, r5, lr}
 8000590:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000594:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000598:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800059c:	e71c      	b.n	80003d8 <__adddf3+0x138>
 800059e:	bf00      	nop

080005a0 <__aeabi_ul2d>:
 80005a0:	ea50 0201 	orrs.w	r2, r0, r1
 80005a4:	bf08      	it	eq
 80005a6:	4770      	bxeq	lr
 80005a8:	b530      	push	{r4, r5, lr}
 80005aa:	f04f 0500 	mov.w	r5, #0
 80005ae:	e00a      	b.n	80005c6 <__aeabi_l2d+0x16>

080005b0 <__aeabi_l2d>:
 80005b0:	ea50 0201 	orrs.w	r2, r0, r1
 80005b4:	bf08      	it	eq
 80005b6:	4770      	bxeq	lr
 80005b8:	b530      	push	{r4, r5, lr}
 80005ba:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005be:	d502      	bpl.n	80005c6 <__aeabi_l2d+0x16>
 80005c0:	4240      	negs	r0, r0
 80005c2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005ca:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ce:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005d2:	f43f aed8 	beq.w	8000386 <__adddf3+0xe6>
 80005d6:	f04f 0203 	mov.w	r2, #3
 80005da:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005de:	bf18      	it	ne
 80005e0:	3203      	addne	r2, #3
 80005e2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e6:	bf18      	it	ne
 80005e8:	3203      	addne	r2, #3
 80005ea:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ee:	f1c2 0320 	rsb	r3, r2, #32
 80005f2:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f6:	fa20 f002 	lsr.w	r0, r0, r2
 80005fa:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fe:	ea40 000e 	orr.w	r0, r0, lr
 8000602:	fa21 f102 	lsr.w	r1, r1, r2
 8000606:	4414      	add	r4, r2
 8000608:	e6bd      	b.n	8000386 <__adddf3+0xe6>
 800060a:	bf00      	nop

0800060c <__aeabi_dmul>:
 800060c:	b570      	push	{r4, r5, r6, lr}
 800060e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000612:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000616:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800061a:	bf1d      	ittte	ne
 800061c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000620:	ea94 0f0c 	teqne	r4, ip
 8000624:	ea95 0f0c 	teqne	r5, ip
 8000628:	f000 f8de 	bleq	80007e8 <__aeabi_dmul+0x1dc>
 800062c:	442c      	add	r4, r5
 800062e:	ea81 0603 	eor.w	r6, r1, r3
 8000632:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000636:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800063a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063e:	bf18      	it	ne
 8000640:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000644:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000648:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800064c:	d038      	beq.n	80006c0 <__aeabi_dmul+0xb4>
 800064e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000652:	f04f 0500 	mov.w	r5, #0
 8000656:	fbe1 e502 	umlal	lr, r5, r1, r2
 800065a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000662:	f04f 0600 	mov.w	r6, #0
 8000666:	fbe1 5603 	umlal	r5, r6, r1, r3
 800066a:	f09c 0f00 	teq	ip, #0
 800066e:	bf18      	it	ne
 8000670:	f04e 0e01 	orrne.w	lr, lr, #1
 8000674:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000678:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800067c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000680:	d204      	bcs.n	800068c <__aeabi_dmul+0x80>
 8000682:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000686:	416d      	adcs	r5, r5
 8000688:	eb46 0606 	adc.w	r6, r6, r6
 800068c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000690:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000694:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000698:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 800069c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006a0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a4:	bf88      	it	hi
 80006a6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006aa:	d81e      	bhi.n	80006ea <__aeabi_dmul+0xde>
 80006ac:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006b0:	bf08      	it	eq
 80006b2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b6:	f150 0000 	adcs.w	r0, r0, #0
 80006ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c4:	ea46 0101 	orr.w	r1, r6, r1
 80006c8:	ea40 0002 	orr.w	r0, r0, r2
 80006cc:	ea81 0103 	eor.w	r1, r1, r3
 80006d0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d4:	bfc2      	ittt	gt
 80006d6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006da:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006de:	bd70      	popgt	{r4, r5, r6, pc}
 80006e0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e4:	f04f 0e00 	mov.w	lr, #0
 80006e8:	3c01      	subs	r4, #1
 80006ea:	f300 80ab 	bgt.w	8000844 <__aeabi_dmul+0x238>
 80006ee:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006f2:	bfde      	ittt	le
 80006f4:	2000      	movle	r0, #0
 80006f6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006fa:	bd70      	pople	{r4, r5, r6, pc}
 80006fc:	f1c4 0400 	rsb	r4, r4, #0
 8000700:	3c20      	subs	r4, #32
 8000702:	da35      	bge.n	8000770 <__aeabi_dmul+0x164>
 8000704:	340c      	adds	r4, #12
 8000706:	dc1b      	bgt.n	8000740 <__aeabi_dmul+0x134>
 8000708:	f104 0414 	add.w	r4, r4, #20
 800070c:	f1c4 0520 	rsb	r5, r4, #32
 8000710:	fa00 f305 	lsl.w	r3, r0, r5
 8000714:	fa20 f004 	lsr.w	r0, r0, r4
 8000718:	fa01 f205 	lsl.w	r2, r1, r5
 800071c:	ea40 0002 	orr.w	r0, r0, r2
 8000720:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000724:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000728:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800072c:	fa21 f604 	lsr.w	r6, r1, r4
 8000730:	eb42 0106 	adc.w	r1, r2, r6
 8000734:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000738:	bf08      	it	eq
 800073a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073e:	bd70      	pop	{r4, r5, r6, pc}
 8000740:	f1c4 040c 	rsb	r4, r4, #12
 8000744:	f1c4 0520 	rsb	r5, r4, #32
 8000748:	fa00 f304 	lsl.w	r3, r0, r4
 800074c:	fa20 f005 	lsr.w	r0, r0, r5
 8000750:	fa01 f204 	lsl.w	r2, r1, r4
 8000754:	ea40 0002 	orr.w	r0, r0, r2
 8000758:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800075c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000760:	f141 0100 	adc.w	r1, r1, #0
 8000764:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000768:	bf08      	it	eq
 800076a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076e:	bd70      	pop	{r4, r5, r6, pc}
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f205 	lsl.w	r2, r0, r5
 8000778:	ea4e 0e02 	orr.w	lr, lr, r2
 800077c:	fa20 f304 	lsr.w	r3, r0, r4
 8000780:	fa01 f205 	lsl.w	r2, r1, r5
 8000784:	ea43 0302 	orr.w	r3, r3, r2
 8000788:	fa21 f004 	lsr.w	r0, r1, r4
 800078c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000790:	fa21 f204 	lsr.w	r2, r1, r4
 8000794:	ea20 0002 	bic.w	r0, r0, r2
 8000798:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 800079c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007a0:	bf08      	it	eq
 80007a2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a6:	bd70      	pop	{r4, r5, r6, pc}
 80007a8:	f094 0f00 	teq	r4, #0
 80007ac:	d10f      	bne.n	80007ce <__aeabi_dmul+0x1c2>
 80007ae:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007b2:	0040      	lsls	r0, r0, #1
 80007b4:	eb41 0101 	adc.w	r1, r1, r1
 80007b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007bc:	bf08      	it	eq
 80007be:	3c01      	subeq	r4, #1
 80007c0:	d0f7      	beq.n	80007b2 <__aeabi_dmul+0x1a6>
 80007c2:	ea41 0106 	orr.w	r1, r1, r6
 80007c6:	f095 0f00 	teq	r5, #0
 80007ca:	bf18      	it	ne
 80007cc:	4770      	bxne	lr
 80007ce:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007d2:	0052      	lsls	r2, r2, #1
 80007d4:	eb43 0303 	adc.w	r3, r3, r3
 80007d8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007dc:	bf08      	it	eq
 80007de:	3d01      	subeq	r5, #1
 80007e0:	d0f7      	beq.n	80007d2 <__aeabi_dmul+0x1c6>
 80007e2:	ea43 0306 	orr.w	r3, r3, r6
 80007e6:	4770      	bx	lr
 80007e8:	ea94 0f0c 	teq	r4, ip
 80007ec:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007f0:	bf18      	it	ne
 80007f2:	ea95 0f0c 	teqne	r5, ip
 80007f6:	d00c      	beq.n	8000812 <__aeabi_dmul+0x206>
 80007f8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007fc:	bf18      	it	ne
 80007fe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000802:	d1d1      	bne.n	80007a8 <__aeabi_dmul+0x19c>
 8000804:	ea81 0103 	eor.w	r1, r1, r3
 8000808:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800080c:	f04f 0000 	mov.w	r0, #0
 8000810:	bd70      	pop	{r4, r5, r6, pc}
 8000812:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000816:	bf06      	itte	eq
 8000818:	4610      	moveq	r0, r2
 800081a:	4619      	moveq	r1, r3
 800081c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000820:	d019      	beq.n	8000856 <__aeabi_dmul+0x24a>
 8000822:	ea94 0f0c 	teq	r4, ip
 8000826:	d102      	bne.n	800082e <__aeabi_dmul+0x222>
 8000828:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800082c:	d113      	bne.n	8000856 <__aeabi_dmul+0x24a>
 800082e:	ea95 0f0c 	teq	r5, ip
 8000832:	d105      	bne.n	8000840 <__aeabi_dmul+0x234>
 8000834:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000838:	bf1c      	itt	ne
 800083a:	4610      	movne	r0, r2
 800083c:	4619      	movne	r1, r3
 800083e:	d10a      	bne.n	8000856 <__aeabi_dmul+0x24a>
 8000840:	ea81 0103 	eor.w	r1, r1, r3
 8000844:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000848:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800084c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000850:	f04f 0000 	mov.w	r0, #0
 8000854:	bd70      	pop	{r4, r5, r6, pc}
 8000856:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800085a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085e:	bd70      	pop	{r4, r5, r6, pc}

08000860 <__aeabi_ddiv>:
 8000860:	b570      	push	{r4, r5, r6, lr}
 8000862:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000866:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800086a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086e:	bf1d      	ittte	ne
 8000870:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000874:	ea94 0f0c 	teqne	r4, ip
 8000878:	ea95 0f0c 	teqne	r5, ip
 800087c:	f000 f8a7 	bleq	80009ce <__aeabi_ddiv+0x16e>
 8000880:	eba4 0405 	sub.w	r4, r4, r5
 8000884:	ea81 0e03 	eor.w	lr, r1, r3
 8000888:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800088c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000890:	f000 8088 	beq.w	80009a4 <__aeabi_ddiv+0x144>
 8000894:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000898:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 800089c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008a0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008ac:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008b0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b8:	429d      	cmp	r5, r3
 80008ba:	bf08      	it	eq
 80008bc:	4296      	cmpeq	r6, r2
 80008be:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008c2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c6:	d202      	bcs.n	80008ce <__aeabi_ddiv+0x6e>
 80008c8:	085b      	lsrs	r3, r3, #1
 80008ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ce:	1ab6      	subs	r6, r6, r2
 80008d0:	eb65 0503 	sbc.w	r5, r5, r3
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008de:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008e2:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ea:	bf22      	ittt	cs
 80008ec:	1ab6      	subcs	r6, r6, r2
 80008ee:	4675      	movcs	r5, lr
 80008f0:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fe:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000902:	bf22      	ittt	cs
 8000904:	1ab6      	subcs	r6, r6, r2
 8000906:	4675      	movcs	r5, lr
 8000908:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800090c:	085b      	lsrs	r3, r3, #1
 800090e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000912:	ebb6 0e02 	subs.w	lr, r6, r2
 8000916:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091a:	bf22      	ittt	cs
 800091c:	1ab6      	subcs	r6, r6, r2
 800091e:	4675      	movcs	r5, lr
 8000920:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000924:	085b      	lsrs	r3, r3, #1
 8000926:	ea4f 0232 	mov.w	r2, r2, rrx
 800092a:	ebb6 0e02 	subs.w	lr, r6, r2
 800092e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000932:	bf22      	ittt	cs
 8000934:	1ab6      	subcs	r6, r6, r2
 8000936:	4675      	movcs	r5, lr
 8000938:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800093c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000940:	d018      	beq.n	8000974 <__aeabi_ddiv+0x114>
 8000942:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000946:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800094a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000952:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000956:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800095a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095e:	d1c0      	bne.n	80008e2 <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	d10b      	bne.n	800097e <__aeabi_ddiv+0x11e>
 8000966:	ea41 0100 	orr.w	r1, r1, r0
 800096a:	f04f 0000 	mov.w	r0, #0
 800096e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000972:	e7b6      	b.n	80008e2 <__aeabi_ddiv+0x82>
 8000974:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000978:	bf04      	itt	eq
 800097a:	4301      	orreq	r1, r0
 800097c:	2000      	moveq	r0, #0
 800097e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000982:	bf88      	it	hi
 8000984:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000988:	f63f aeaf 	bhi.w	80006ea <__aeabi_dmul+0xde>
 800098c:	ebb5 0c03 	subs.w	ip, r5, r3
 8000990:	bf04      	itt	eq
 8000992:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000996:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800099a:	f150 0000 	adcs.w	r0, r0, #0
 800099e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009a2:	bd70      	pop	{r4, r5, r6, pc}
 80009a4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009ac:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009b0:	bfc2      	ittt	gt
 80009b2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009ba:	bd70      	popgt	{r4, r5, r6, pc}
 80009bc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009c0:	f04f 0e00 	mov.w	lr, #0
 80009c4:	3c01      	subs	r4, #1
 80009c6:	e690      	b.n	80006ea <__aeabi_dmul+0xde>
 80009c8:	ea45 0e06 	orr.w	lr, r5, r6
 80009cc:	e68d      	b.n	80006ea <__aeabi_dmul+0xde>
 80009ce:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009d2:	ea94 0f0c 	teq	r4, ip
 80009d6:	bf08      	it	eq
 80009d8:	ea95 0f0c 	teqeq	r5, ip
 80009dc:	f43f af3b 	beq.w	8000856 <__aeabi_dmul+0x24a>
 80009e0:	ea94 0f0c 	teq	r4, ip
 80009e4:	d10a      	bne.n	80009fc <__aeabi_ddiv+0x19c>
 80009e6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009ea:	f47f af34 	bne.w	8000856 <__aeabi_dmul+0x24a>
 80009ee:	ea95 0f0c 	teq	r5, ip
 80009f2:	f47f af25 	bne.w	8000840 <__aeabi_dmul+0x234>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e72c      	b.n	8000856 <__aeabi_dmul+0x24a>
 80009fc:	ea95 0f0c 	teq	r5, ip
 8000a00:	d106      	bne.n	8000a10 <__aeabi_ddiv+0x1b0>
 8000a02:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a06:	f43f aefd 	beq.w	8000804 <__aeabi_dmul+0x1f8>
 8000a0a:	4610      	mov	r0, r2
 8000a0c:	4619      	mov	r1, r3
 8000a0e:	e722      	b.n	8000856 <__aeabi_dmul+0x24a>
 8000a10:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a14:	bf18      	it	ne
 8000a16:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a1a:	f47f aec5 	bne.w	80007a8 <__aeabi_dmul+0x19c>
 8000a1e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a22:	f47f af0d 	bne.w	8000840 <__aeabi_dmul+0x234>
 8000a26:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a2a:	f47f aeeb 	bne.w	8000804 <__aeabi_dmul+0x1f8>
 8000a2e:	e712      	b.n	8000856 <__aeabi_dmul+0x24a>

08000a30 <__gedf2>:
 8000a30:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a34:	e006      	b.n	8000a44 <__cmpdf2+0x4>
 8000a36:	bf00      	nop

08000a38 <__ledf2>:
 8000a38:	f04f 0c01 	mov.w	ip, #1
 8000a3c:	e002      	b.n	8000a44 <__cmpdf2+0x4>
 8000a3e:	bf00      	nop

08000a40 <__cmpdf2>:
 8000a40:	f04f 0c01 	mov.w	ip, #1
 8000a44:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a48:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a4c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a50:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a54:	bf18      	it	ne
 8000a56:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a5a:	d01b      	beq.n	8000a94 <__cmpdf2+0x54>
 8000a5c:	b001      	add	sp, #4
 8000a5e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a62:	bf0c      	ite	eq
 8000a64:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a68:	ea91 0f03 	teqne	r1, r3
 8000a6c:	bf02      	ittt	eq
 8000a6e:	ea90 0f02 	teqeq	r0, r2
 8000a72:	2000      	moveq	r0, #0
 8000a74:	4770      	bxeq	lr
 8000a76:	f110 0f00 	cmn.w	r0, #0
 8000a7a:	ea91 0f03 	teq	r1, r3
 8000a7e:	bf58      	it	pl
 8000a80:	4299      	cmppl	r1, r3
 8000a82:	bf08      	it	eq
 8000a84:	4290      	cmpeq	r0, r2
 8000a86:	bf2c      	ite	cs
 8000a88:	17d8      	asrcs	r0, r3, #31
 8000a8a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8e:	f040 0001 	orr.w	r0, r0, #1
 8000a92:	4770      	bx	lr
 8000a94:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a9c:	d102      	bne.n	8000aa4 <__cmpdf2+0x64>
 8000a9e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aa2:	d107      	bne.n	8000ab4 <__cmpdf2+0x74>
 8000aa4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aac:	d1d6      	bne.n	8000a5c <__cmpdf2+0x1c>
 8000aae:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ab2:	d0d3      	beq.n	8000a5c <__cmpdf2+0x1c>
 8000ab4:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab8:	4770      	bx	lr
 8000aba:	bf00      	nop

08000abc <__aeabi_cdrcmple>:
 8000abc:	4684      	mov	ip, r0
 8000abe:	4610      	mov	r0, r2
 8000ac0:	4662      	mov	r2, ip
 8000ac2:	468c      	mov	ip, r1
 8000ac4:	4619      	mov	r1, r3
 8000ac6:	4663      	mov	r3, ip
 8000ac8:	e000      	b.n	8000acc <__aeabi_cdcmpeq>
 8000aca:	bf00      	nop

08000acc <__aeabi_cdcmpeq>:
 8000acc:	b501      	push	{r0, lr}
 8000ace:	f7ff ffb7 	bl	8000a40 <__cmpdf2>
 8000ad2:	2800      	cmp	r0, #0
 8000ad4:	bf48      	it	mi
 8000ad6:	f110 0f00 	cmnmi.w	r0, #0
 8000ada:	bd01      	pop	{r0, pc}

08000adc <__aeabi_dcmpeq>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff fff4 	bl	8000acc <__aeabi_cdcmpeq>
 8000ae4:	bf0c      	ite	eq
 8000ae6:	2001      	moveq	r0, #1
 8000ae8:	2000      	movne	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmplt>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffea 	bl	8000acc <__aeabi_cdcmpeq>
 8000af8:	bf34      	ite	cc
 8000afa:	2001      	movcc	r0, #1
 8000afc:	2000      	movcs	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmple>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffe0 	bl	8000acc <__aeabi_cdcmpeq>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpge>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffce 	bl	8000abc <__aeabi_cdrcmple>
 8000b20:	bf94      	ite	ls
 8000b22:	2001      	movls	r0, #1
 8000b24:	2000      	movhi	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpgt>:
 8000b2c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b30:	f7ff ffc4 	bl	8000abc <__aeabi_cdrcmple>
 8000b34:	bf34      	ite	cc
 8000b36:	2001      	movcc	r0, #1
 8000b38:	2000      	movcs	r0, #0
 8000b3a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3e:	bf00      	nop

08000b40 <__aeabi_dcmpun>:
 8000b40:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b48:	d102      	bne.n	8000b50 <__aeabi_dcmpun+0x10>
 8000b4a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4e:	d10a      	bne.n	8000b66 <__aeabi_dcmpun+0x26>
 8000b50:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b58:	d102      	bne.n	8000b60 <__aeabi_dcmpun+0x20>
 8000b5a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5e:	d102      	bne.n	8000b66 <__aeabi_dcmpun+0x26>
 8000b60:	f04f 0000 	mov.w	r0, #0
 8000b64:	4770      	bx	lr
 8000b66:	f04f 0001 	mov.w	r0, #1
 8000b6a:	4770      	bx	lr

08000b6c <__aeabi_d2iz>:
 8000b6c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b70:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b74:	d215      	bcs.n	8000ba2 <__aeabi_d2iz+0x36>
 8000b76:	d511      	bpl.n	8000b9c <__aeabi_d2iz+0x30>
 8000b78:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b7c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b80:	d912      	bls.n	8000ba8 <__aeabi_d2iz+0x3c>
 8000b82:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b86:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b8a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b92:	fa23 f002 	lsr.w	r0, r3, r2
 8000b96:	bf18      	it	ne
 8000b98:	4240      	negne	r0, r0
 8000b9a:	4770      	bx	lr
 8000b9c:	f04f 0000 	mov.w	r0, #0
 8000ba0:	4770      	bx	lr
 8000ba2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba6:	d105      	bne.n	8000bb4 <__aeabi_d2iz+0x48>
 8000ba8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bac:	bf08      	it	eq
 8000bae:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bb2:	4770      	bx	lr
 8000bb4:	f04f 0000 	mov.w	r0, #0
 8000bb8:	4770      	bx	lr
 8000bba:	bf00      	nop

08000bbc <__aeabi_d2uiz>:
 8000bbc:	004a      	lsls	r2, r1, #1
 8000bbe:	d211      	bcs.n	8000be4 <__aeabi_d2uiz+0x28>
 8000bc0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc4:	d211      	bcs.n	8000bea <__aeabi_d2uiz+0x2e>
 8000bc6:	d50d      	bpl.n	8000be4 <__aeabi_d2uiz+0x28>
 8000bc8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bcc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bd0:	d40e      	bmi.n	8000bf0 <__aeabi_d2uiz+0x34>
 8000bd2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bda:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bde:	fa23 f002 	lsr.w	r0, r3, r2
 8000be2:	4770      	bx	lr
 8000be4:	f04f 0000 	mov.w	r0, #0
 8000be8:	4770      	bx	lr
 8000bea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bee:	d102      	bne.n	8000bf6 <__aeabi_d2uiz+0x3a>
 8000bf0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000bf4:	4770      	bx	lr
 8000bf6:	f04f 0000 	mov.w	r0, #0
 8000bfa:	4770      	bx	lr

08000bfc <__aeabi_d2f>:
 8000bfc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c00:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c04:	bf24      	itt	cs
 8000c06:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c0a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c0e:	d90d      	bls.n	8000c2c <__aeabi_d2f+0x30>
 8000c10:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c14:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c18:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c1c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c20:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c24:	bf08      	it	eq
 8000c26:	f020 0001 	biceq.w	r0, r0, #1
 8000c2a:	4770      	bx	lr
 8000c2c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c30:	d121      	bne.n	8000c76 <__aeabi_d2f+0x7a>
 8000c32:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c36:	bfbc      	itt	lt
 8000c38:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c3c:	4770      	bxlt	lr
 8000c3e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c42:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c46:	f1c2 0218 	rsb	r2, r2, #24
 8000c4a:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c52:	fa20 f002 	lsr.w	r0, r0, r2
 8000c56:	bf18      	it	ne
 8000c58:	f040 0001 	orrne.w	r0, r0, #1
 8000c5c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c60:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c64:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c68:	ea40 000c 	orr.w	r0, r0, ip
 8000c6c:	fa23 f302 	lsr.w	r3, r3, r2
 8000c70:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c74:	e7cc      	b.n	8000c10 <__aeabi_d2f+0x14>
 8000c76:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c7a:	d107      	bne.n	8000c8c <__aeabi_d2f+0x90>
 8000c7c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c80:	bf1e      	ittt	ne
 8000c82:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c86:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c8a:	4770      	bxne	lr
 8000c8c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c90:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c94:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c98:	4770      	bx	lr
 8000c9a:	bf00      	nop

08000c9c <__aeabi_uldivmod>:
 8000c9c:	b953      	cbnz	r3, 8000cb4 <__aeabi_uldivmod+0x18>
 8000c9e:	b94a      	cbnz	r2, 8000cb4 <__aeabi_uldivmod+0x18>
 8000ca0:	2900      	cmp	r1, #0
 8000ca2:	bf08      	it	eq
 8000ca4:	2800      	cmpeq	r0, #0
 8000ca6:	bf1c      	itt	ne
 8000ca8:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000cac:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000cb0:	f000 b9aa 	b.w	8001008 <__aeabi_idiv0>
 8000cb4:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cb8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000cbc:	f000 f83c 	bl	8000d38 <__udivmoddi4>
 8000cc0:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cc4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cc8:	b004      	add	sp, #16
 8000cca:	4770      	bx	lr

08000ccc <__aeabi_d2lz>:
 8000ccc:	b538      	push	{r3, r4, r5, lr}
 8000cce:	2200      	movs	r2, #0
 8000cd0:	2300      	movs	r3, #0
 8000cd2:	4604      	mov	r4, r0
 8000cd4:	460d      	mov	r5, r1
 8000cd6:	f7ff ff0b 	bl	8000af0 <__aeabi_dcmplt>
 8000cda:	b928      	cbnz	r0, 8000ce8 <__aeabi_d2lz+0x1c>
 8000cdc:	4620      	mov	r0, r4
 8000cde:	4629      	mov	r1, r5
 8000ce0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ce4:	f000 b80a 	b.w	8000cfc <__aeabi_d2ulz>
 8000ce8:	4620      	mov	r0, r4
 8000cea:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cee:	f000 f805 	bl	8000cfc <__aeabi_d2ulz>
 8000cf2:	4240      	negs	r0, r0
 8000cf4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cf8:	bd38      	pop	{r3, r4, r5, pc}
 8000cfa:	bf00      	nop

08000cfc <__aeabi_d2ulz>:
 8000cfc:	b5d0      	push	{r4, r6, r7, lr}
 8000cfe:	4b0c      	ldr	r3, [pc, #48]	; (8000d30 <__aeabi_d2ulz+0x34>)
 8000d00:	2200      	movs	r2, #0
 8000d02:	4606      	mov	r6, r0
 8000d04:	460f      	mov	r7, r1
 8000d06:	f7ff fc81 	bl	800060c <__aeabi_dmul>
 8000d0a:	f7ff ff57 	bl	8000bbc <__aeabi_d2uiz>
 8000d0e:	4604      	mov	r4, r0
 8000d10:	f7ff fc02 	bl	8000518 <__aeabi_ui2d>
 8000d14:	4b07      	ldr	r3, [pc, #28]	; (8000d34 <__aeabi_d2ulz+0x38>)
 8000d16:	2200      	movs	r2, #0
 8000d18:	f7ff fc78 	bl	800060c <__aeabi_dmul>
 8000d1c:	4602      	mov	r2, r0
 8000d1e:	460b      	mov	r3, r1
 8000d20:	4630      	mov	r0, r6
 8000d22:	4639      	mov	r1, r7
 8000d24:	f7ff faba 	bl	800029c <__aeabi_dsub>
 8000d28:	f7ff ff48 	bl	8000bbc <__aeabi_d2uiz>
 8000d2c:	4621      	mov	r1, r4
 8000d2e:	bdd0      	pop	{r4, r6, r7, pc}
 8000d30:	3df00000 	.word	0x3df00000
 8000d34:	41f00000 	.word	0x41f00000

08000d38 <__udivmoddi4>:
 8000d38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d3c:	9d08      	ldr	r5, [sp, #32]
 8000d3e:	4604      	mov	r4, r0
 8000d40:	468e      	mov	lr, r1
 8000d42:	2b00      	cmp	r3, #0
 8000d44:	d14d      	bne.n	8000de2 <__udivmoddi4+0xaa>
 8000d46:	428a      	cmp	r2, r1
 8000d48:	4694      	mov	ip, r2
 8000d4a:	d969      	bls.n	8000e20 <__udivmoddi4+0xe8>
 8000d4c:	fab2 f282 	clz	r2, r2
 8000d50:	b152      	cbz	r2, 8000d68 <__udivmoddi4+0x30>
 8000d52:	fa01 f302 	lsl.w	r3, r1, r2
 8000d56:	f1c2 0120 	rsb	r1, r2, #32
 8000d5a:	fa20 f101 	lsr.w	r1, r0, r1
 8000d5e:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d62:	ea41 0e03 	orr.w	lr, r1, r3
 8000d66:	4094      	lsls	r4, r2
 8000d68:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d6c:	0c21      	lsrs	r1, r4, #16
 8000d6e:	fbbe f6f8 	udiv	r6, lr, r8
 8000d72:	fa1f f78c 	uxth.w	r7, ip
 8000d76:	fb08 e316 	mls	r3, r8, r6, lr
 8000d7a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000d7e:	fb06 f107 	mul.w	r1, r6, r7
 8000d82:	4299      	cmp	r1, r3
 8000d84:	d90a      	bls.n	8000d9c <__udivmoddi4+0x64>
 8000d86:	eb1c 0303 	adds.w	r3, ip, r3
 8000d8a:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8000d8e:	f080 811f 	bcs.w	8000fd0 <__udivmoddi4+0x298>
 8000d92:	4299      	cmp	r1, r3
 8000d94:	f240 811c 	bls.w	8000fd0 <__udivmoddi4+0x298>
 8000d98:	3e02      	subs	r6, #2
 8000d9a:	4463      	add	r3, ip
 8000d9c:	1a5b      	subs	r3, r3, r1
 8000d9e:	b2a4      	uxth	r4, r4
 8000da0:	fbb3 f0f8 	udiv	r0, r3, r8
 8000da4:	fb08 3310 	mls	r3, r8, r0, r3
 8000da8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000dac:	fb00 f707 	mul.w	r7, r0, r7
 8000db0:	42a7      	cmp	r7, r4
 8000db2:	d90a      	bls.n	8000dca <__udivmoddi4+0x92>
 8000db4:	eb1c 0404 	adds.w	r4, ip, r4
 8000db8:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000dbc:	f080 810a 	bcs.w	8000fd4 <__udivmoddi4+0x29c>
 8000dc0:	42a7      	cmp	r7, r4
 8000dc2:	f240 8107 	bls.w	8000fd4 <__udivmoddi4+0x29c>
 8000dc6:	4464      	add	r4, ip
 8000dc8:	3802      	subs	r0, #2
 8000dca:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000dce:	1be4      	subs	r4, r4, r7
 8000dd0:	2600      	movs	r6, #0
 8000dd2:	b11d      	cbz	r5, 8000ddc <__udivmoddi4+0xa4>
 8000dd4:	40d4      	lsrs	r4, r2
 8000dd6:	2300      	movs	r3, #0
 8000dd8:	e9c5 4300 	strd	r4, r3, [r5]
 8000ddc:	4631      	mov	r1, r6
 8000dde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000de2:	428b      	cmp	r3, r1
 8000de4:	d909      	bls.n	8000dfa <__udivmoddi4+0xc2>
 8000de6:	2d00      	cmp	r5, #0
 8000de8:	f000 80ef 	beq.w	8000fca <__udivmoddi4+0x292>
 8000dec:	2600      	movs	r6, #0
 8000dee:	e9c5 0100 	strd	r0, r1, [r5]
 8000df2:	4630      	mov	r0, r6
 8000df4:	4631      	mov	r1, r6
 8000df6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dfa:	fab3 f683 	clz	r6, r3
 8000dfe:	2e00      	cmp	r6, #0
 8000e00:	d14a      	bne.n	8000e98 <__udivmoddi4+0x160>
 8000e02:	428b      	cmp	r3, r1
 8000e04:	d302      	bcc.n	8000e0c <__udivmoddi4+0xd4>
 8000e06:	4282      	cmp	r2, r0
 8000e08:	f200 80f9 	bhi.w	8000ffe <__udivmoddi4+0x2c6>
 8000e0c:	1a84      	subs	r4, r0, r2
 8000e0e:	eb61 0303 	sbc.w	r3, r1, r3
 8000e12:	2001      	movs	r0, #1
 8000e14:	469e      	mov	lr, r3
 8000e16:	2d00      	cmp	r5, #0
 8000e18:	d0e0      	beq.n	8000ddc <__udivmoddi4+0xa4>
 8000e1a:	e9c5 4e00 	strd	r4, lr, [r5]
 8000e1e:	e7dd      	b.n	8000ddc <__udivmoddi4+0xa4>
 8000e20:	b902      	cbnz	r2, 8000e24 <__udivmoddi4+0xec>
 8000e22:	deff      	udf	#255	; 0xff
 8000e24:	fab2 f282 	clz	r2, r2
 8000e28:	2a00      	cmp	r2, #0
 8000e2a:	f040 8092 	bne.w	8000f52 <__udivmoddi4+0x21a>
 8000e2e:	eba1 010c 	sub.w	r1, r1, ip
 8000e32:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e36:	fa1f fe8c 	uxth.w	lr, ip
 8000e3a:	2601      	movs	r6, #1
 8000e3c:	0c20      	lsrs	r0, r4, #16
 8000e3e:	fbb1 f3f7 	udiv	r3, r1, r7
 8000e42:	fb07 1113 	mls	r1, r7, r3, r1
 8000e46:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e4a:	fb0e f003 	mul.w	r0, lr, r3
 8000e4e:	4288      	cmp	r0, r1
 8000e50:	d908      	bls.n	8000e64 <__udivmoddi4+0x12c>
 8000e52:	eb1c 0101 	adds.w	r1, ip, r1
 8000e56:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8000e5a:	d202      	bcs.n	8000e62 <__udivmoddi4+0x12a>
 8000e5c:	4288      	cmp	r0, r1
 8000e5e:	f200 80cb 	bhi.w	8000ff8 <__udivmoddi4+0x2c0>
 8000e62:	4643      	mov	r3, r8
 8000e64:	1a09      	subs	r1, r1, r0
 8000e66:	b2a4      	uxth	r4, r4
 8000e68:	fbb1 f0f7 	udiv	r0, r1, r7
 8000e6c:	fb07 1110 	mls	r1, r7, r0, r1
 8000e70:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000e74:	fb0e fe00 	mul.w	lr, lr, r0
 8000e78:	45a6      	cmp	lr, r4
 8000e7a:	d908      	bls.n	8000e8e <__udivmoddi4+0x156>
 8000e7c:	eb1c 0404 	adds.w	r4, ip, r4
 8000e80:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8000e84:	d202      	bcs.n	8000e8c <__udivmoddi4+0x154>
 8000e86:	45a6      	cmp	lr, r4
 8000e88:	f200 80bb 	bhi.w	8001002 <__udivmoddi4+0x2ca>
 8000e8c:	4608      	mov	r0, r1
 8000e8e:	eba4 040e 	sub.w	r4, r4, lr
 8000e92:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e96:	e79c      	b.n	8000dd2 <__udivmoddi4+0x9a>
 8000e98:	f1c6 0720 	rsb	r7, r6, #32
 8000e9c:	40b3      	lsls	r3, r6
 8000e9e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000ea2:	ea4c 0c03 	orr.w	ip, ip, r3
 8000ea6:	fa20 f407 	lsr.w	r4, r0, r7
 8000eaa:	fa01 f306 	lsl.w	r3, r1, r6
 8000eae:	431c      	orrs	r4, r3
 8000eb0:	40f9      	lsrs	r1, r7
 8000eb2:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000eb6:	fa00 f306 	lsl.w	r3, r0, r6
 8000eba:	fbb1 f8f9 	udiv	r8, r1, r9
 8000ebe:	0c20      	lsrs	r0, r4, #16
 8000ec0:	fa1f fe8c 	uxth.w	lr, ip
 8000ec4:	fb09 1118 	mls	r1, r9, r8, r1
 8000ec8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000ecc:	fb08 f00e 	mul.w	r0, r8, lr
 8000ed0:	4288      	cmp	r0, r1
 8000ed2:	fa02 f206 	lsl.w	r2, r2, r6
 8000ed6:	d90b      	bls.n	8000ef0 <__udivmoddi4+0x1b8>
 8000ed8:	eb1c 0101 	adds.w	r1, ip, r1
 8000edc:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000ee0:	f080 8088 	bcs.w	8000ff4 <__udivmoddi4+0x2bc>
 8000ee4:	4288      	cmp	r0, r1
 8000ee6:	f240 8085 	bls.w	8000ff4 <__udivmoddi4+0x2bc>
 8000eea:	f1a8 0802 	sub.w	r8, r8, #2
 8000eee:	4461      	add	r1, ip
 8000ef0:	1a09      	subs	r1, r1, r0
 8000ef2:	b2a4      	uxth	r4, r4
 8000ef4:	fbb1 f0f9 	udiv	r0, r1, r9
 8000ef8:	fb09 1110 	mls	r1, r9, r0, r1
 8000efc:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000f00:	fb00 fe0e 	mul.w	lr, r0, lr
 8000f04:	458e      	cmp	lr, r1
 8000f06:	d908      	bls.n	8000f1a <__udivmoddi4+0x1e2>
 8000f08:	eb1c 0101 	adds.w	r1, ip, r1
 8000f0c:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
 8000f10:	d26c      	bcs.n	8000fec <__udivmoddi4+0x2b4>
 8000f12:	458e      	cmp	lr, r1
 8000f14:	d96a      	bls.n	8000fec <__udivmoddi4+0x2b4>
 8000f16:	3802      	subs	r0, #2
 8000f18:	4461      	add	r1, ip
 8000f1a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000f1e:	fba0 9402 	umull	r9, r4, r0, r2
 8000f22:	eba1 010e 	sub.w	r1, r1, lr
 8000f26:	42a1      	cmp	r1, r4
 8000f28:	46c8      	mov	r8, r9
 8000f2a:	46a6      	mov	lr, r4
 8000f2c:	d356      	bcc.n	8000fdc <__udivmoddi4+0x2a4>
 8000f2e:	d053      	beq.n	8000fd8 <__udivmoddi4+0x2a0>
 8000f30:	b15d      	cbz	r5, 8000f4a <__udivmoddi4+0x212>
 8000f32:	ebb3 0208 	subs.w	r2, r3, r8
 8000f36:	eb61 010e 	sbc.w	r1, r1, lr
 8000f3a:	fa01 f707 	lsl.w	r7, r1, r7
 8000f3e:	fa22 f306 	lsr.w	r3, r2, r6
 8000f42:	40f1      	lsrs	r1, r6
 8000f44:	431f      	orrs	r7, r3
 8000f46:	e9c5 7100 	strd	r7, r1, [r5]
 8000f4a:	2600      	movs	r6, #0
 8000f4c:	4631      	mov	r1, r6
 8000f4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f52:	f1c2 0320 	rsb	r3, r2, #32
 8000f56:	40d8      	lsrs	r0, r3
 8000f58:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f5c:	fa21 f303 	lsr.w	r3, r1, r3
 8000f60:	4091      	lsls	r1, r2
 8000f62:	4301      	orrs	r1, r0
 8000f64:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f68:	fa1f fe8c 	uxth.w	lr, ip
 8000f6c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000f70:	fb07 3610 	mls	r6, r7, r0, r3
 8000f74:	0c0b      	lsrs	r3, r1, #16
 8000f76:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000f7a:	fb00 f60e 	mul.w	r6, r0, lr
 8000f7e:	429e      	cmp	r6, r3
 8000f80:	fa04 f402 	lsl.w	r4, r4, r2
 8000f84:	d908      	bls.n	8000f98 <__udivmoddi4+0x260>
 8000f86:	eb1c 0303 	adds.w	r3, ip, r3
 8000f8a:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000f8e:	d22f      	bcs.n	8000ff0 <__udivmoddi4+0x2b8>
 8000f90:	429e      	cmp	r6, r3
 8000f92:	d92d      	bls.n	8000ff0 <__udivmoddi4+0x2b8>
 8000f94:	3802      	subs	r0, #2
 8000f96:	4463      	add	r3, ip
 8000f98:	1b9b      	subs	r3, r3, r6
 8000f9a:	b289      	uxth	r1, r1
 8000f9c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000fa0:	fb07 3316 	mls	r3, r7, r6, r3
 8000fa4:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000fa8:	fb06 f30e 	mul.w	r3, r6, lr
 8000fac:	428b      	cmp	r3, r1
 8000fae:	d908      	bls.n	8000fc2 <__udivmoddi4+0x28a>
 8000fb0:	eb1c 0101 	adds.w	r1, ip, r1
 8000fb4:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 8000fb8:	d216      	bcs.n	8000fe8 <__udivmoddi4+0x2b0>
 8000fba:	428b      	cmp	r3, r1
 8000fbc:	d914      	bls.n	8000fe8 <__udivmoddi4+0x2b0>
 8000fbe:	3e02      	subs	r6, #2
 8000fc0:	4461      	add	r1, ip
 8000fc2:	1ac9      	subs	r1, r1, r3
 8000fc4:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000fc8:	e738      	b.n	8000e3c <__udivmoddi4+0x104>
 8000fca:	462e      	mov	r6, r5
 8000fcc:	4628      	mov	r0, r5
 8000fce:	e705      	b.n	8000ddc <__udivmoddi4+0xa4>
 8000fd0:	4606      	mov	r6, r0
 8000fd2:	e6e3      	b.n	8000d9c <__udivmoddi4+0x64>
 8000fd4:	4618      	mov	r0, r3
 8000fd6:	e6f8      	b.n	8000dca <__udivmoddi4+0x92>
 8000fd8:	454b      	cmp	r3, r9
 8000fda:	d2a9      	bcs.n	8000f30 <__udivmoddi4+0x1f8>
 8000fdc:	ebb9 0802 	subs.w	r8, r9, r2
 8000fe0:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000fe4:	3801      	subs	r0, #1
 8000fe6:	e7a3      	b.n	8000f30 <__udivmoddi4+0x1f8>
 8000fe8:	4646      	mov	r6, r8
 8000fea:	e7ea      	b.n	8000fc2 <__udivmoddi4+0x28a>
 8000fec:	4620      	mov	r0, r4
 8000fee:	e794      	b.n	8000f1a <__udivmoddi4+0x1e2>
 8000ff0:	4640      	mov	r0, r8
 8000ff2:	e7d1      	b.n	8000f98 <__udivmoddi4+0x260>
 8000ff4:	46d0      	mov	r8, sl
 8000ff6:	e77b      	b.n	8000ef0 <__udivmoddi4+0x1b8>
 8000ff8:	3b02      	subs	r3, #2
 8000ffa:	4461      	add	r1, ip
 8000ffc:	e732      	b.n	8000e64 <__udivmoddi4+0x12c>
 8000ffe:	4630      	mov	r0, r6
 8001000:	e709      	b.n	8000e16 <__udivmoddi4+0xde>
 8001002:	4464      	add	r4, ip
 8001004:	3802      	subs	r0, #2
 8001006:	e742      	b.n	8000e8e <__udivmoddi4+0x156>

08001008 <__aeabi_idiv0>:
 8001008:	4770      	bx	lr
 800100a:	bf00      	nop

0800100c <_ZN3Btn8setStateE12_buttonState>:
#include "Btn.h"
#include <stdio.h>


_buttonState Btn :: getState(){return _statebut;}
void Btn :: setState(_buttonState _state){ _statebut = _state;}
 800100c:	b480      	push	{r7}
 800100e:	b083      	sub	sp, #12
 8001010:	af00      	add	r7, sp, #0
 8001012:	6078      	str	r0, [r7, #4]
 8001014:	460b      	mov	r3, r1
 8001016:	70fb      	strb	r3, [r7, #3]
 8001018:	687b      	ldr	r3, [r7, #4]
 800101a:	78fa      	ldrb	r2, [r7, #3]
 800101c:	719a      	strb	r2, [r3, #6]
 800101e:	bf00      	nop
 8001020:	370c      	adds	r7, #12
 8001022:	46bd      	mov	sp, r7
 8001024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001028:	4770      	bx	lr

0800102a <_ZN6BUZZERC1EP17TIM_HandleTypeDef>:


int count = 0;
int frame = 0;

BUZZER::BUZZER(TIM_HandleTypeDef *htim)
 800102a:	b480      	push	{r7}
 800102c:	b083      	sub	sp, #12
 800102e:	af00      	add	r7, sp, #0
 8001030:	6078      	str	r0, [r7, #4]
 8001032:	6039      	str	r1, [r7, #0]
{
	htim = htim;

}
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	4618      	mov	r0, r3
 8001038:	370c      	adds	r7, #12
 800103a:	46bd      	mov	sp, r7
 800103c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001040:	4770      	bx	lr
	...

08001044 <_ZN6BUZZER15buzzerStartPlayEv>:
void BUZZER::buzzerStartPlay()
{
 8001044:	b580      	push	{r7, lr}
 8001046:	b082      	sub	sp, #8
 8001048:	af00      	add	r7, sp, #0
 800104a:	6078      	str	r0, [r7, #4]
	HAL_TIM_Base_Start(&htim3);
 800104c:	4808      	ldr	r0, [pc, #32]	; (8001070 <_ZN6BUZZER15buzzerStartPlayEv+0x2c>)
 800104e:	f005 fafd 	bl	800664c <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8001052:	2100      	movs	r1, #0
 8001054:	4806      	ldr	r0, [pc, #24]	; (8001070 <_ZN6BUZZER15buzzerStartPlayEv+0x2c>)
 8001056:	f005 fc5b 	bl	8006910 <HAL_TIM_PWM_Start>
	__HAL_TIM_SET_AUTORELOAD(&htim3,150);
 800105a:	4b05      	ldr	r3, [pc, #20]	; (8001070 <_ZN6BUZZER15buzzerStartPlayEv+0x2c>)
 800105c:	681b      	ldr	r3, [r3, #0]
 800105e:	2296      	movs	r2, #150	; 0x96
 8001060:	62da      	str	r2, [r3, #44]	; 0x2c
 8001062:	4b03      	ldr	r3, [pc, #12]	; (8001070 <_ZN6BUZZER15buzzerStartPlayEv+0x2c>)
 8001064:	2296      	movs	r2, #150	; 0x96
 8001066:	60da      	str	r2, [r3, #12]
}
 8001068:	bf00      	nop
 800106a:	3708      	adds	r7, #8
 800106c:	46bd      	mov	sp, r7
 800106e:	bd80      	pop	{r7, pc}
 8001070:	20000560 	.word	0x20000560

08001074 <_ZN6BUZZER14buzzerStopPlayEv>:
void BUZZER::buzzerStopPlay()
{
 8001074:	b580      	push	{r7, lr}
 8001076:	b082      	sub	sp, #8
 8001078:	af00      	add	r7, sp, #0
 800107a:	6078      	str	r0, [r7, #4]
	HAL_TIM_Base_Stop(&htim3);
 800107c:	4805      	ldr	r0, [pc, #20]	; (8001094 <_ZN6BUZZER14buzzerStopPlayEv+0x20>)
 800107e:	f005 fb4d 	bl	800671c <HAL_TIM_Base_Stop>
	HAL_TIM_PWM_Stop(&htim3, TIM_CHANNEL_1);
 8001082:	2100      	movs	r1, #0
 8001084:	4803      	ldr	r0, [pc, #12]	; (8001094 <_ZN6BUZZER14buzzerStopPlayEv+0x20>)
 8001086:	f005 fd49 	bl	8006b1c <HAL_TIM_PWM_Stop>
}
 800108a:	bf00      	nop
 800108c:	3708      	adds	r7, #8
 800108e:	46bd      	mov	sp, r7
 8001090:	bd80      	pop	{r7, pc}
 8001092:	bf00      	nop
 8001094:	20000560 	.word	0x20000560

08001098 <_ZN3CliD1Ev>:

extern Dht dht;
class Cli{
public:
	virtual void doCommand(const char * param) = 0;
	virtual ~Cli(){}
 8001098:	b480      	push	{r7}
 800109a:	b083      	sub	sp, #12
 800109c:	af00      	add	r7, sp, #0
 800109e:	6078      	str	r0, [r7, #4]
 80010a0:	4a04      	ldr	r2, [pc, #16]	; (80010b4 <_ZN3CliD1Ev+0x1c>)
 80010a2:	687b      	ldr	r3, [r7, #4]
 80010a4:	601a      	str	r2, [r3, #0]
 80010a6:	687b      	ldr	r3, [r7, #4]
 80010a8:	4618      	mov	r0, r3
 80010aa:	370c      	adds	r7, #12
 80010ac:	46bd      	mov	sp, r7
 80010ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010b2:	4770      	bx	lr
 80010b4:	0802e828 	.word	0x0802e828

080010b8 <_ZN3CliD0Ev>:
 80010b8:	b580      	push	{r7, lr}
 80010ba:	b082      	sub	sp, #8
 80010bc:	af00      	add	r7, sp, #0
 80010be:	6078      	str	r0, [r7, #4]
 80010c0:	6878      	ldr	r0, [r7, #4]
 80010c2:	f7ff ffe9 	bl	8001098 <_ZN3CliD1Ev>
 80010c6:	2104      	movs	r1, #4
 80010c8:	6878      	ldr	r0, [r7, #4]
 80010ca:	f00a ff37 	bl	800bf3c <_ZdlPvj>
 80010ce:	687b      	ldr	r3, [r7, #4]
 80010d0:	4618      	mov	r0, r3
 80010d2:	3708      	adds	r7, #8
 80010d4:	46bd      	mov	sp, r7
 80010d6:	bd80      	pop	{r7, pc}

080010d8 <_ZN12CliContainer15RegisterCommandEPKcP3Cli>:
	clicommand_entry commands[20];
	int funcounter = 0;
public:
	CliContainer(){}
	~CliContainer(){}
	void RegisterCommand(const  char* CommandName, Cli * clicommand) {
 80010d8:	b480      	push	{r7}
 80010da:	b085      	sub	sp, #20
 80010dc:	af00      	add	r7, sp, #0
 80010de:	60f8      	str	r0, [r7, #12]
 80010e0:	60b9      	str	r1, [r7, #8]
 80010e2:	607a      	str	r2, [r7, #4]
		commands[funcounter].CommandName = CommandName;
 80010e4:	68fb      	ldr	r3, [r7, #12]
 80010e6:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
 80010ea:	68fb      	ldr	r3, [r7, #12]
 80010ec:	68b9      	ldr	r1, [r7, #8]
 80010ee:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
		commands[funcounter].command = clicommand;
 80010f2:	68fb      	ldr	r3, [r7, #12]
 80010f4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80010f8:	68fa      	ldr	r2, [r7, #12]
 80010fa:	00db      	lsls	r3, r3, #3
 80010fc:	4413      	add	r3, r2
 80010fe:	687a      	ldr	r2, [r7, #4]
 8001100:	605a      	str	r2, [r3, #4]
		funcounter++;
 8001102:	68fb      	ldr	r3, [r7, #12]
 8001104:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8001108:	1c5a      	adds	r2, r3, #1
 800110a:	68fb      	ldr	r3, [r7, #12]
 800110c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	}
 8001110:	bf00      	nop
 8001112:	3714      	adds	r7, #20
 8001114:	46bd      	mov	sp, r7
 8001116:	f85d 7b04 	ldr.w	r7, [sp], #4
 800111a:	4770      	bx	lr

0800111c <_ZN3CliC1Ev>:
class Cli{
 800111c:	b480      	push	{r7}
 800111e:	b083      	sub	sp, #12
 8001120:	af00      	add	r7, sp, #0
 8001122:	6078      	str	r0, [r7, #4]
 8001124:	4a04      	ldr	r2, [pc, #16]	; (8001138 <_ZN3CliC1Ev+0x1c>)
 8001126:	687b      	ldr	r3, [r7, #4]
 8001128:	601a      	str	r2, [r3, #0]
 800112a:	687b      	ldr	r3, [r7, #4]
 800112c:	4618      	mov	r0, r3
 800112e:	370c      	adds	r7, #12
 8001130:	46bd      	mov	sp, r7
 8001132:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001136:	4770      	bx	lr
 8001138:	0802e828 	.word	0x0802e828

0800113c <_ZN5ledOnC1EP3LED>:

class ledOn : public Cli{
private:
	LED * _led;
public:
	ledOn(LED * led){
 800113c:	b580      	push	{r7, lr}
 800113e:	b082      	sub	sp, #8
 8001140:	af00      	add	r7, sp, #0
 8001142:	6078      	str	r0, [r7, #4]
 8001144:	6039      	str	r1, [r7, #0]
 8001146:	687b      	ldr	r3, [r7, #4]
 8001148:	4618      	mov	r0, r3
 800114a:	f7ff ffe7 	bl	800111c <_ZN3CliC1Ev>
 800114e:	4a05      	ldr	r2, [pc, #20]	; (8001164 <_ZN5ledOnC1EP3LED+0x28>)
 8001150:	687b      	ldr	r3, [r7, #4]
 8001152:	601a      	str	r2, [r3, #0]
		_led = led;
 8001154:	687b      	ldr	r3, [r7, #4]
 8001156:	683a      	ldr	r2, [r7, #0]
 8001158:	605a      	str	r2, [r3, #4]
	}
 800115a:	687b      	ldr	r3, [r7, #4]
 800115c:	4618      	mov	r0, r3
 800115e:	3708      	adds	r7, #8
 8001160:	46bd      	mov	sp, r7
 8001162:	bd80      	pop	{r7, pc}
 8001164:	0802e814 	.word	0x0802e814

08001168 <_ZN5ledOn9doCommandEPKc>:
	void doCommand(const char * param) override{
 8001168:	b580      	push	{r7, lr}
 800116a:	b082      	sub	sp, #8
 800116c:	af00      	add	r7, sp, #0
 800116e:	6078      	str	r0, [r7, #4]
 8001170:	6039      	str	r1, [r7, #0]
		_led->Led_On();
 8001172:	687b      	ldr	r3, [r7, #4]
 8001174:	685b      	ldr	r3, [r3, #4]
 8001176:	4618      	mov	r0, r3
 8001178:	f000 fd33 	bl	8001be2 <_ZN3LED6Led_OnEv>
	}
 800117c:	bf00      	nop
 800117e:	3708      	adds	r7, #8
 8001180:	46bd      	mov	sp, r7
 8001182:	bd80      	pop	{r7, pc}

08001184 <_ZN6ledOffC1EP3LED>:
};
class ledOff : public Cli{
private:
	LED * _led;
public:
	ledOff(LED * led){
 8001184:	b580      	push	{r7, lr}
 8001186:	b082      	sub	sp, #8
 8001188:	af00      	add	r7, sp, #0
 800118a:	6078      	str	r0, [r7, #4]
 800118c:	6039      	str	r1, [r7, #0]
 800118e:	687b      	ldr	r3, [r7, #4]
 8001190:	4618      	mov	r0, r3
 8001192:	f7ff ffc3 	bl	800111c <_ZN3CliC1Ev>
 8001196:	4a05      	ldr	r2, [pc, #20]	; (80011ac <_ZN6ledOffC1EP3LED+0x28>)
 8001198:	687b      	ldr	r3, [r7, #4]
 800119a:	601a      	str	r2, [r3, #0]
		_led = led;
 800119c:	687b      	ldr	r3, [r7, #4]
 800119e:	683a      	ldr	r2, [r7, #0]
 80011a0:	605a      	str	r2, [r3, #4]
	}
 80011a2:	687b      	ldr	r3, [r7, #4]
 80011a4:	4618      	mov	r0, r3
 80011a6:	3708      	adds	r7, #8
 80011a8:	46bd      	mov	sp, r7
 80011aa:	bd80      	pop	{r7, pc}
 80011ac:	0802e800 	.word	0x0802e800

080011b0 <_ZN6ledOff9doCommandEPKc>:
	void doCommand(const char * param) override{
 80011b0:	b580      	push	{r7, lr}
 80011b2:	b082      	sub	sp, #8
 80011b4:	af00      	add	r7, sp, #0
 80011b6:	6078      	str	r0, [r7, #4]
 80011b8:	6039      	str	r1, [r7, #0]
		_led->Led_Off();
 80011ba:	687b      	ldr	r3, [r7, #4]
 80011bc:	685b      	ldr	r3, [r3, #4]
 80011be:	4618      	mov	r0, r3
 80011c0:	f000 fd1f 	bl	8001c02 <_ZN3LED7Led_OffEv>
	}
 80011c4:	bf00      	nop
 80011c6:	3708      	adds	r7, #8
 80011c8:	46bd      	mov	sp, r7
 80011ca:	bd80      	pop	{r7, pc}

080011cc <_ZN8ledBlinkC1EP3LED>:
};
class ledBlink : public Cli{
private:
	LED * _led;
public:
	ledBlink(LED * led){
 80011cc:	b580      	push	{r7, lr}
 80011ce:	b082      	sub	sp, #8
 80011d0:	af00      	add	r7, sp, #0
 80011d2:	6078      	str	r0, [r7, #4]
 80011d4:	6039      	str	r1, [r7, #0]
 80011d6:	687b      	ldr	r3, [r7, #4]
 80011d8:	4618      	mov	r0, r3
 80011da:	f7ff ff9f 	bl	800111c <_ZN3CliC1Ev>
 80011de:	4a05      	ldr	r2, [pc, #20]	; (80011f4 <_ZN8ledBlinkC1EP3LED+0x28>)
 80011e0:	687b      	ldr	r3, [r7, #4]
 80011e2:	601a      	str	r2, [r3, #0]
		_led = led;
 80011e4:	687b      	ldr	r3, [r7, #4]
 80011e6:	683a      	ldr	r2, [r7, #0]
 80011e8:	605a      	str	r2, [r3, #4]
	}
 80011ea:	687b      	ldr	r3, [r7, #4]
 80011ec:	4618      	mov	r0, r3
 80011ee:	3708      	adds	r7, #8
 80011f0:	46bd      	mov	sp, r7
 80011f2:	bd80      	pop	{r7, pc}
 80011f4:	0802e7ec 	.word	0x0802e7ec

080011f8 <_ZN8ledBlink9doCommandEPKc>:
	void doCommand(const char * param) override{
 80011f8:	b580      	push	{r7, lr}
 80011fa:	b082      	sub	sp, #8
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	6078      	str	r0, [r7, #4]
 8001200:	6039      	str	r1, [r7, #0]
		_led->Led_Blink();
 8001202:	687b      	ldr	r3, [r7, #4]
 8001204:	685b      	ldr	r3, [r3, #4]
 8001206:	4618      	mov	r0, r3
 8001208:	f000 fd0b 	bl	8001c22 <_ZN3LED9Led_BlinkEv>
	}
 800120c:	bf00      	nop
 800120e:	3708      	adds	r7, #8
 8001210:	46bd      	mov	sp, r7
 8001212:	bd80      	pop	{r7, pc}

08001214 <_ZN8rtcstartC1EP4_RTC>:

class rtcstart : public Cli{
private:
	_RTC * _rtc;
public:
	rtcstart(_RTC * rtc){
 8001214:	b580      	push	{r7, lr}
 8001216:	b082      	sub	sp, #8
 8001218:	af00      	add	r7, sp, #0
 800121a:	6078      	str	r0, [r7, #4]
 800121c:	6039      	str	r1, [r7, #0]
 800121e:	687b      	ldr	r3, [r7, #4]
 8001220:	4618      	mov	r0, r3
 8001222:	f7ff ff7b 	bl	800111c <_ZN3CliC1Ev>
 8001226:	4a05      	ldr	r2, [pc, #20]	; (800123c <_ZN8rtcstartC1EP4_RTC+0x28>)
 8001228:	687b      	ldr	r3, [r7, #4]
 800122a:	601a      	str	r2, [r3, #0]
		_rtc = rtc;
 800122c:	687b      	ldr	r3, [r7, #4]
 800122e:	683a      	ldr	r2, [r7, #0]
 8001230:	605a      	str	r2, [r3, #4]
	}
 8001232:	687b      	ldr	r3, [r7, #4]
 8001234:	4618      	mov	r0, r3
 8001236:	3708      	adds	r7, #8
 8001238:	46bd      	mov	sp, r7
 800123a:	bd80      	pop	{r7, pc}
 800123c:	0802e7d8 	.word	0x0802e7d8

08001240 <_ZN8rtcstart9doCommandEPKc>:
	void doCommand(const char * param) override{
 8001240:	b580      	push	{r7, lr}
 8001242:	b082      	sub	sp, #8
 8001244:	af00      	add	r7, sp, #0
 8001246:	6078      	str	r0, [r7, #4]
 8001248:	6039      	str	r1, [r7, #0]

		_rtc->rtcStart();
 800124a:	687b      	ldr	r3, [r7, #4]
 800124c:	685b      	ldr	r3, [r3, #4]
 800124e:	4618      	mov	r0, r3
 8001250:	f000 fd0b 	bl	8001c6a <_ZN4_RTC8rtcStartEv>
	}
 8001254:	bf00      	nop
 8001256:	3708      	adds	r7, #8
 8001258:	46bd      	mov	sp, r7
 800125a:	bd80      	pop	{r7, pc}

0800125c <_ZN10rtcgettimeC1EP4_RTC>:
};
class rtcgettime : public Cli{
private:
	_RTC * _rtc;
public:
	rtcgettime(_RTC * rtc){
 800125c:	b580      	push	{r7, lr}
 800125e:	b082      	sub	sp, #8
 8001260:	af00      	add	r7, sp, #0
 8001262:	6078      	str	r0, [r7, #4]
 8001264:	6039      	str	r1, [r7, #0]
 8001266:	687b      	ldr	r3, [r7, #4]
 8001268:	4618      	mov	r0, r3
 800126a:	f7ff ff57 	bl	800111c <_ZN3CliC1Ev>
 800126e:	4a05      	ldr	r2, [pc, #20]	; (8001284 <_ZN10rtcgettimeC1EP4_RTC+0x28>)
 8001270:	687b      	ldr	r3, [r7, #4]
 8001272:	601a      	str	r2, [r3, #0]
		_rtc = rtc;
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	683a      	ldr	r2, [r7, #0]
 8001278:	605a      	str	r2, [r3, #4]
	}
 800127a:	687b      	ldr	r3, [r7, #4]
 800127c:	4618      	mov	r0, r3
 800127e:	3708      	adds	r7, #8
 8001280:	46bd      	mov	sp, r7
 8001282:	bd80      	pop	{r7, pc}
 8001284:	0802e7c4 	.word	0x0802e7c4

08001288 <_ZN10rtcgettime9doCommandEPKc>:
	void doCommand(const char * param) override{
 8001288:	b580      	push	{r7, lr}
 800128a:	b082      	sub	sp, #8
 800128c:	af00      	add	r7, sp, #0
 800128e:	6078      	str	r0, [r7, #4]
 8001290:	6039      	str	r1, [r7, #0]

		_rtc->rtcGetTime();
 8001292:	687b      	ldr	r3, [r7, #4]
 8001294:	685b      	ldr	r3, [r3, #4]
 8001296:	4618      	mov	r0, r3
 8001298:	f000 fd90 	bl	8001dbc <_ZN4_RTC10rtcGetTimeEv>

	}
 800129c:	bf00      	nop
 800129e:	3708      	adds	r7, #8
 80012a0:	46bd      	mov	sp, r7
 80012a2:	bd80      	pop	{r7, pc}

080012a4 <_ZN10rtcsettimeC1EP4_RTC>:
};
class rtcsettime : public Cli{
private:
	_RTC * _rtc;
public:
	rtcsettime(_RTC * rtc){
 80012a4:	b580      	push	{r7, lr}
 80012a6:	b082      	sub	sp, #8
 80012a8:	af00      	add	r7, sp, #0
 80012aa:	6078      	str	r0, [r7, #4]
 80012ac:	6039      	str	r1, [r7, #0]
 80012ae:	687b      	ldr	r3, [r7, #4]
 80012b0:	4618      	mov	r0, r3
 80012b2:	f7ff ff33 	bl	800111c <_ZN3CliC1Ev>
 80012b6:	4a05      	ldr	r2, [pc, #20]	; (80012cc <_ZN10rtcsettimeC1EP4_RTC+0x28>)
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	601a      	str	r2, [r3, #0]
		_rtc = rtc;
 80012bc:	687b      	ldr	r3, [r7, #4]
 80012be:	683a      	ldr	r2, [r7, #0]
 80012c0:	605a      	str	r2, [r3, #4]
	}
 80012c2:	687b      	ldr	r3, [r7, #4]
 80012c4:	4618      	mov	r0, r3
 80012c6:	3708      	adds	r7, #8
 80012c8:	46bd      	mov	sp, r7
 80012ca:	bd80      	pop	{r7, pc}
 80012cc:	0802e7b0 	.word	0x0802e7b0

080012d0 <_ZN10rtcsettime9doCommandEPKc>:
	void doCommand(const char * param) override{
 80012d0:	b580      	push	{r7, lr}
 80012d2:	b098      	sub	sp, #96	; 0x60
 80012d4:	af00      	add	r7, sp, #0
 80012d6:	6078      	str	r0, [r7, #4]
 80012d8:	6039      	str	r1, [r7, #0]

		char * token;
		char s[3] = ":";
 80012da:	4b3b      	ldr	r3, [pc, #236]	; (80013c8 <_ZN10rtcsettime9doCommandEPKc+0xf8>)
 80012dc:	881b      	ldrh	r3, [r3, #0]
 80012de:	f8a7 3058 	strh.w	r3, [r7, #88]	; 0x58
 80012e2:	2300      	movs	r3, #0
 80012e4:	f887 305a 	strb.w	r3, [r7, #90]	; 0x5a
		char temp[50];
		strcpy(temp,param);
 80012e8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80012ec:	6839      	ldr	r1, [r7, #0]
 80012ee:	4618      	mov	r0, r3
 80012f0:	f026 f887 	bl	8027402 <strcpy>
		DateTime tempdate;

		token = strtok(temp, s);
 80012f4:	f107 0258 	add.w	r2, r7, #88	; 0x58
 80012f8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80012fc:	4611      	mov	r1, r2
 80012fe:	4618      	mov	r0, r3
 8001300:	f027 fe42 	bl	8028f88 <strtok>
 8001304:	65f8      	str	r0, [r7, #92]	; 0x5c
		tempdate.hours = atoi(token);
 8001306:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8001308:	f023 ff94 	bl	8025234 <atoi>
 800130c:	4603      	mov	r3, r0
 800130e:	613b      	str	r3, [r7, #16]
		token = strtok(NULL, s);
 8001310:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8001314:	4619      	mov	r1, r3
 8001316:	2000      	movs	r0, #0
 8001318:	f027 fe36 	bl	8028f88 <strtok>
 800131c:	65f8      	str	r0, [r7, #92]	; 0x5c

		tempdate.min = atoi(token);
 800131e:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8001320:	f023 ff88 	bl	8025234 <atoi>
 8001324:	4603      	mov	r3, r0
 8001326:	60fb      	str	r3, [r7, #12]
		token = strtok(NULL, s);
 8001328:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800132c:	4619      	mov	r1, r3
 800132e:	2000      	movs	r0, #0
 8001330:	f027 fe2a 	bl	8028f88 <strtok>
 8001334:	65f8      	str	r0, [r7, #92]	; 0x5c

		tempdate.sec = atoi(token);
 8001336:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8001338:	f023 ff7c 	bl	8025234 <atoi>
 800133c:	4603      	mov	r3, r0
 800133e:	60bb      	str	r3, [r7, #8]
		token = strtok(NULL, s);
 8001340:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8001344:	4619      	mov	r1, r3
 8001346:	2000      	movs	r0, #0
 8001348:	f027 fe1e 	bl	8028f88 <strtok>
 800134c:	65f8      	str	r0, [r7, #92]	; 0x5c

		tempdate.weekDay = atoi(token);
 800134e:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8001350:	f023 ff70 	bl	8025234 <atoi>
 8001354:	4603      	mov	r3, r0
 8001356:	617b      	str	r3, [r7, #20]
		token = strtok(NULL, s);
 8001358:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800135c:	4619      	mov	r1, r3
 800135e:	2000      	movs	r0, #0
 8001360:	f027 fe12 	bl	8028f88 <strtok>
 8001364:	65f8      	str	r0, [r7, #92]	; 0x5c

		tempdate.day = atoi(token);
 8001366:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8001368:	f023 ff64 	bl	8025234 <atoi>
 800136c:	4603      	mov	r3, r0
 800136e:	61bb      	str	r3, [r7, #24]
		token = strtok(NULL, s);
 8001370:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8001374:	4619      	mov	r1, r3
 8001376:	2000      	movs	r0, #0
 8001378:	f027 fe06 	bl	8028f88 <strtok>
 800137c:	65f8      	str	r0, [r7, #92]	; 0x5c

		tempdate.month = atoi(token);
 800137e:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8001380:	f023 ff58 	bl	8025234 <atoi>
 8001384:	4603      	mov	r3, r0
 8001386:	61fb      	str	r3, [r7, #28]
		token = strtok(NULL, s);
 8001388:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800138c:	4619      	mov	r1, r3
 800138e:	2000      	movs	r0, #0
 8001390:	f027 fdfa 	bl	8028f88 <strtok>
 8001394:	65f8      	str	r0, [r7, #92]	; 0x5c

		tempdate.year = atoi(token);
 8001396:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8001398:	f023 ff4c 	bl	8025234 <atoi>
 800139c:	4603      	mov	r3, r0
 800139e:	623b      	str	r3, [r7, #32]
		token = strtok(NULL, s);
 80013a0:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80013a4:	4619      	mov	r1, r3
 80013a6:	2000      	movs	r0, #0
 80013a8:	f027 fdee 	bl	8028f88 <strtok>
 80013ac:	65f8      	str	r0, [r7, #92]	; 0x5c




		_rtc->rtcSetTime(&tempdate);
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	685b      	ldr	r3, [r3, #4]
 80013b2:	f107 0208 	add.w	r2, r7, #8
 80013b6:	4611      	mov	r1, r2
 80013b8:	4618      	mov	r0, r3
 80013ba:	f000 fd7d 	bl	8001eb8 <_ZN4_RTC10rtcSetTimeEP9DateTime_>
	}
 80013be:	bf00      	nop
 80013c0:	3760      	adds	r7, #96	; 0x60
 80013c2:	46bd      	mov	sp, r7
 80013c4:	bd80      	pop	{r7, pc}
 80013c6:	bf00      	nop
 80013c8:	0802e5c8 	.word	0x0802e5c8

080013cc <_ZN7rtcstopC1EP4_RTC>:
};
class rtcstop : public Cli{
private:
	_RTC * _rtc;
public:
	rtcstop(_RTC * rtc){
 80013cc:	b580      	push	{r7, lr}
 80013ce:	b082      	sub	sp, #8
 80013d0:	af00      	add	r7, sp, #0
 80013d2:	6078      	str	r0, [r7, #4]
 80013d4:	6039      	str	r1, [r7, #0]
 80013d6:	687b      	ldr	r3, [r7, #4]
 80013d8:	4618      	mov	r0, r3
 80013da:	f7ff fe9f 	bl	800111c <_ZN3CliC1Ev>
 80013de:	4a05      	ldr	r2, [pc, #20]	; (80013f4 <_ZN7rtcstopC1EP4_RTC+0x28>)
 80013e0:	687b      	ldr	r3, [r7, #4]
 80013e2:	601a      	str	r2, [r3, #0]
		_rtc = rtc;
 80013e4:	687b      	ldr	r3, [r7, #4]
 80013e6:	683a      	ldr	r2, [r7, #0]
 80013e8:	605a      	str	r2, [r3, #4]
	}
 80013ea:	687b      	ldr	r3, [r7, #4]
 80013ec:	4618      	mov	r0, r3
 80013ee:	3708      	adds	r7, #8
 80013f0:	46bd      	mov	sp, r7
 80013f2:	bd80      	pop	{r7, pc}
 80013f4:	0802e79c 	.word	0x0802e79c

080013f8 <_ZN7rtcstop9doCommandEPKc>:
	void doCommand(const char * param) override{
 80013f8:	b580      	push	{r7, lr}
 80013fa:	b082      	sub	sp, #8
 80013fc:	af00      	add	r7, sp, #0
 80013fe:	6078      	str	r0, [r7, #4]
 8001400:	6039      	str	r1, [r7, #0]

		_rtc->rtcStop();
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	685b      	ldr	r3, [r3, #4]
 8001406:	4618      	mov	r0, r3
 8001408:	f000 fc5e 	bl	8001cc8 <_ZN4_RTC7rtcStopEv>
	}
 800140c:	bf00      	nop
 800140e:	3708      	adds	r7, #8
 8001410:	46bd      	mov	sp, r7
 8001412:	bd80      	pop	{r7, pc}

08001414 <_ZN8buzzeronC1EP6BUZZER>:

class buzzeron : public Cli{
private:
	BUZZER * _buzzer;
public:
	buzzeron(BUZZER * buzzer){
 8001414:	b580      	push	{r7, lr}
 8001416:	b082      	sub	sp, #8
 8001418:	af00      	add	r7, sp, #0
 800141a:	6078      	str	r0, [r7, #4]
 800141c:	6039      	str	r1, [r7, #0]
 800141e:	687b      	ldr	r3, [r7, #4]
 8001420:	4618      	mov	r0, r3
 8001422:	f7ff fe7b 	bl	800111c <_ZN3CliC1Ev>
 8001426:	4a05      	ldr	r2, [pc, #20]	; (800143c <_ZN8buzzeronC1EP6BUZZER+0x28>)
 8001428:	687b      	ldr	r3, [r7, #4]
 800142a:	601a      	str	r2, [r3, #0]
		_buzzer = buzzer;
 800142c:	687b      	ldr	r3, [r7, #4]
 800142e:	683a      	ldr	r2, [r7, #0]
 8001430:	605a      	str	r2, [r3, #4]
	}
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	4618      	mov	r0, r3
 8001436:	3708      	adds	r7, #8
 8001438:	46bd      	mov	sp, r7
 800143a:	bd80      	pop	{r7, pc}
 800143c:	0802e788 	.word	0x0802e788

08001440 <_ZN8buzzeron9doCommandEPKc>:
	void doCommand(const char * param) override{
 8001440:	b580      	push	{r7, lr}
 8001442:	b082      	sub	sp, #8
 8001444:	af00      	add	r7, sp, #0
 8001446:	6078      	str	r0, [r7, #4]
 8001448:	6039      	str	r1, [r7, #0]
		_buzzer->buzzerStartPlay();
 800144a:	687b      	ldr	r3, [r7, #4]
 800144c:	685b      	ldr	r3, [r3, #4]
 800144e:	4618      	mov	r0, r3
 8001450:	f7ff fdf8 	bl	8001044 <_ZN6BUZZER15buzzerStartPlayEv>
	}
 8001454:	bf00      	nop
 8001456:	3708      	adds	r7, #8
 8001458:	46bd      	mov	sp, r7
 800145a:	bd80      	pop	{r7, pc}

0800145c <_ZN9buzzeroffC1EP6BUZZER>:
};
class buzzeroff : public Cli{
private:
	BUZZER * _buzzer;
public:
	buzzeroff(BUZZER * buzzer){
 800145c:	b580      	push	{r7, lr}
 800145e:	b082      	sub	sp, #8
 8001460:	af00      	add	r7, sp, #0
 8001462:	6078      	str	r0, [r7, #4]
 8001464:	6039      	str	r1, [r7, #0]
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	4618      	mov	r0, r3
 800146a:	f7ff fe57 	bl	800111c <_ZN3CliC1Ev>
 800146e:	4a05      	ldr	r2, [pc, #20]	; (8001484 <_ZN9buzzeroffC1EP6BUZZER+0x28>)
 8001470:	687b      	ldr	r3, [r7, #4]
 8001472:	601a      	str	r2, [r3, #0]
		_buzzer = buzzer;
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	683a      	ldr	r2, [r7, #0]
 8001478:	605a      	str	r2, [r3, #4]
	}
 800147a:	687b      	ldr	r3, [r7, #4]
 800147c:	4618      	mov	r0, r3
 800147e:	3708      	adds	r7, #8
 8001480:	46bd      	mov	sp, r7
 8001482:	bd80      	pop	{r7, pc}
 8001484:	0802e774 	.word	0x0802e774

08001488 <_ZN9buzzeroff9doCommandEPKc>:
	void doCommand(const char * param) override{
 8001488:	b580      	push	{r7, lr}
 800148a:	b082      	sub	sp, #8
 800148c:	af00      	add	r7, sp, #0
 800148e:	6078      	str	r0, [r7, #4]
 8001490:	6039      	str	r1, [r7, #0]
		_buzzer->buzzerStopPlay();
 8001492:	687b      	ldr	r3, [r7, #4]
 8001494:	685b      	ldr	r3, [r3, #4]
 8001496:	4618      	mov	r0, r3
 8001498:	f7ff fdec 	bl	8001074 <_ZN6BUZZER14buzzerStopPlayEv>
	}
 800149c:	bf00      	nop
 800149e:	3708      	adds	r7, #8
 80014a0:	46bd      	mov	sp, r7
 80014a2:	bd80      	pop	{r7, pc}

080014a4 <_ZN12CliContainer16initCLIcontainerEv>:





void CliContainer::initCLIcontainer(){
 80014a4:	b590      	push	{r4, r7, lr}
 80014a6:	b083      	sub	sp, #12
 80014a8:	af00      	add	r7, sp, #0
 80014aa:	6078      	str	r0, [r7, #4]

	//set / get time to the RTC
	container.RegisterCommand("set-time",new rtcsettime(&rtc));
 80014ac:	2008      	movs	r0, #8
 80014ae:	f00a fd47 	bl	800bf40 <_Znwj>
 80014b2:	4603      	mov	r3, r0
 80014b4:	461c      	mov	r4, r3
 80014b6:	493e      	ldr	r1, [pc, #248]	; (80015b0 <_ZN12CliContainer16initCLIcontainerEv+0x10c>)
 80014b8:	4620      	mov	r0, r4
 80014ba:	f7ff fef3 	bl	80012a4 <_ZN10rtcsettimeC1EP4_RTC>
 80014be:	4622      	mov	r2, r4
 80014c0:	493c      	ldr	r1, [pc, #240]	; (80015b4 <_ZN12CliContainer16initCLIcontainerEv+0x110>)
 80014c2:	483d      	ldr	r0, [pc, #244]	; (80015b8 <_ZN12CliContainer16initCLIcontainerEv+0x114>)
 80014c4:	f7ff fe08 	bl	80010d8 <_ZN12CliContainer15RegisterCommandEPKcP3Cli>
	container.RegisterCommand("get-time",new rtcgettime(&rtc));
 80014c8:	2008      	movs	r0, #8
 80014ca:	f00a fd39 	bl	800bf40 <_Znwj>
 80014ce:	4603      	mov	r3, r0
 80014d0:	461c      	mov	r4, r3
 80014d2:	4937      	ldr	r1, [pc, #220]	; (80015b0 <_ZN12CliContainer16initCLIcontainerEv+0x10c>)
 80014d4:	4620      	mov	r0, r4
 80014d6:	f7ff fec1 	bl	800125c <_ZN10rtcgettimeC1EP4_RTC>
 80014da:	4622      	mov	r2, r4
 80014dc:	4937      	ldr	r1, [pc, #220]	; (80015bc <_ZN12CliContainer16initCLIcontainerEv+0x118>)
 80014de:	4836      	ldr	r0, [pc, #216]	; (80015b8 <_ZN12CliContainer16initCLIcontainerEv+0x114>)
 80014e0:	f7ff fdfa 	bl	80010d8 <_ZN12CliContainer15RegisterCommandEPKcP3Cli>
	//set warning / critical temperature
	//container.RegisterCommand("set-warning",SetWarning());
	//container.RegisterCommand("set-critical", new SetCritical());
	//container.RegisterCommand("print", new thresholdsFlash.printThresHoldsTemperature());
	// switch on / off led
	container.RegisterCommand("led-on",new ledOn(&ledblue));
 80014e4:	2008      	movs	r0, #8
 80014e6:	f00a fd2b 	bl	800bf40 <_Znwj>
 80014ea:	4603      	mov	r3, r0
 80014ec:	461c      	mov	r4, r3
 80014ee:	4934      	ldr	r1, [pc, #208]	; (80015c0 <_ZN12CliContainer16initCLIcontainerEv+0x11c>)
 80014f0:	4620      	mov	r0, r4
 80014f2:	f7ff fe23 	bl	800113c <_ZN5ledOnC1EP3LED>
 80014f6:	4622      	mov	r2, r4
 80014f8:	4932      	ldr	r1, [pc, #200]	; (80015c4 <_ZN12CliContainer16initCLIcontainerEv+0x120>)
 80014fa:	482f      	ldr	r0, [pc, #188]	; (80015b8 <_ZN12CliContainer16initCLIcontainerEv+0x114>)
 80014fc:	f7ff fdec 	bl	80010d8 <_ZN12CliContainer15RegisterCommandEPKcP3Cli>
	container.RegisterCommand("led-off",new ledOff(&ledblue));
 8001500:	2008      	movs	r0, #8
 8001502:	f00a fd1d 	bl	800bf40 <_Znwj>
 8001506:	4603      	mov	r3, r0
 8001508:	461c      	mov	r4, r3
 800150a:	492d      	ldr	r1, [pc, #180]	; (80015c0 <_ZN12CliContainer16initCLIcontainerEv+0x11c>)
 800150c:	4620      	mov	r0, r4
 800150e:	f7ff fe39 	bl	8001184 <_ZN6ledOffC1EP3LED>
 8001512:	4622      	mov	r2, r4
 8001514:	492c      	ldr	r1, [pc, #176]	; (80015c8 <_ZN12CliContainer16initCLIcontainerEv+0x124>)
 8001516:	4828      	ldr	r0, [pc, #160]	; (80015b8 <_ZN12CliContainer16initCLIcontainerEv+0x114>)
 8001518:	f7ff fdde 	bl	80010d8 <_ZN12CliContainer15RegisterCommandEPKcP3Cli>
	container.RegisterCommand("led-blink",new ledBlink(&ledblue));
 800151c:	2008      	movs	r0, #8
 800151e:	f00a fd0f 	bl	800bf40 <_Znwj>
 8001522:	4603      	mov	r3, r0
 8001524:	461c      	mov	r4, r3
 8001526:	4926      	ldr	r1, [pc, #152]	; (80015c0 <_ZN12CliContainer16initCLIcontainerEv+0x11c>)
 8001528:	4620      	mov	r0, r4
 800152a:	f7ff fe4f 	bl	80011cc <_ZN8ledBlinkC1EP3LED>
 800152e:	4622      	mov	r2, r4
 8001530:	4926      	ldr	r1, [pc, #152]	; (80015cc <_ZN12CliContainer16initCLIcontainerEv+0x128>)
 8001532:	4821      	ldr	r0, [pc, #132]	; (80015b8 <_ZN12CliContainer16initCLIcontainerEv+0x114>)
 8001534:	f7ff fdd0 	bl	80010d8 <_ZN12CliContainer15RegisterCommandEPKcP3Cli>

	//play / stop analog buzzer
	container.RegisterCommand("play",new buzzeron(&buzzer));
 8001538:	2008      	movs	r0, #8
 800153a:	f00a fd01 	bl	800bf40 <_Znwj>
 800153e:	4603      	mov	r3, r0
 8001540:	461c      	mov	r4, r3
 8001542:	4923      	ldr	r1, [pc, #140]	; (80015d0 <_ZN12CliContainer16initCLIcontainerEv+0x12c>)
 8001544:	4620      	mov	r0, r4
 8001546:	f7ff ff65 	bl	8001414 <_ZN8buzzeronC1EP6BUZZER>
 800154a:	4622      	mov	r2, r4
 800154c:	4921      	ldr	r1, [pc, #132]	; (80015d4 <_ZN12CliContainer16initCLIcontainerEv+0x130>)
 800154e:	481a      	ldr	r0, [pc, #104]	; (80015b8 <_ZN12CliContainer16initCLIcontainerEv+0x114>)
 8001550:	f7ff fdc2 	bl	80010d8 <_ZN12CliContainer15RegisterCommandEPKcP3Cli>
	container.RegisterCommand("stop",new buzzeroff(&buzzer));
 8001554:	2008      	movs	r0, #8
 8001556:	f00a fcf3 	bl	800bf40 <_Znwj>
 800155a:	4603      	mov	r3, r0
 800155c:	461c      	mov	r4, r3
 800155e:	491c      	ldr	r1, [pc, #112]	; (80015d0 <_ZN12CliContainer16initCLIcontainerEv+0x12c>)
 8001560:	4620      	mov	r0, r4
 8001562:	f7ff ff7b 	bl	800145c <_ZN9buzzeroffC1EP6BUZZER>
 8001566:	4622      	mov	r2, r4
 8001568:	491b      	ldr	r1, [pc, #108]	; (80015d8 <_ZN12CliContainer16initCLIcontainerEv+0x134>)
 800156a:	4813      	ldr	r0, [pc, #76]	; (80015b8 <_ZN12CliContainer16initCLIcontainerEv+0x114>)
 800156c:	f7ff fdb4 	bl	80010d8 <_ZN12CliContainer15RegisterCommandEPKcP3Cli>

	container.RegisterCommand("rtc-start",new rtcstart(&rtc));
 8001570:	2008      	movs	r0, #8
 8001572:	f00a fce5 	bl	800bf40 <_Znwj>
 8001576:	4603      	mov	r3, r0
 8001578:	461c      	mov	r4, r3
 800157a:	490d      	ldr	r1, [pc, #52]	; (80015b0 <_ZN12CliContainer16initCLIcontainerEv+0x10c>)
 800157c:	4620      	mov	r0, r4
 800157e:	f7ff fe49 	bl	8001214 <_ZN8rtcstartC1EP4_RTC>
 8001582:	4622      	mov	r2, r4
 8001584:	4915      	ldr	r1, [pc, #84]	; (80015dc <_ZN12CliContainer16initCLIcontainerEv+0x138>)
 8001586:	480c      	ldr	r0, [pc, #48]	; (80015b8 <_ZN12CliContainer16initCLIcontainerEv+0x114>)
 8001588:	f7ff fda6 	bl	80010d8 <_ZN12CliContainer15RegisterCommandEPKcP3Cli>
	container.RegisterCommand("rtc-stop",new rtcstop(&rtc));
 800158c:	2008      	movs	r0, #8
 800158e:	f00a fcd7 	bl	800bf40 <_Znwj>
 8001592:	4603      	mov	r3, r0
 8001594:	461c      	mov	r4, r3
 8001596:	4906      	ldr	r1, [pc, #24]	; (80015b0 <_ZN12CliContainer16initCLIcontainerEv+0x10c>)
 8001598:	4620      	mov	r0, r4
 800159a:	f7ff ff17 	bl	80013cc <_ZN7rtcstopC1EP4_RTC>
 800159e:	4622      	mov	r2, r4
 80015a0:	490f      	ldr	r1, [pc, #60]	; (80015e0 <_ZN12CliContainer16initCLIcontainerEv+0x13c>)
 80015a2:	4805      	ldr	r0, [pc, #20]	; (80015b8 <_ZN12CliContainer16initCLIcontainerEv+0x114>)
 80015a4:	f7ff fd98 	bl	80010d8 <_ZN12CliContainer15RegisterCommandEPKcP3Cli>




}
 80015a8:	bf00      	nop
 80015aa:	370c      	adds	r7, #12
 80015ac:	46bd      	mov	sp, r7
 80015ae:	bd90      	pop	{r4, r7, pc}
 80015b0:	20000430 	.word	0x20000430
 80015b4:	0802e5f8 	.word	0x0802e5f8
 80015b8:	20000348 	.word	0x20000348
 80015bc:	0802e604 	.word	0x0802e604
 80015c0:	200003ec 	.word	0x200003ec
 80015c4:	0802e610 	.word	0x0802e610
 80015c8:	0802e618 	.word	0x0802e618
 80015cc:	0802e620 	.word	0x0802e620
 80015d0:	20000414 	.word	0x20000414
 80015d4:	0802e62c 	.word	0x0802e62c
 80015d8:	0802e634 	.word	0x0802e634
 80015dc:	0802e63c 	.word	0x0802e63c
 80015e0:	0802e648 	.word	0x0802e648

080015e4 <_ZN9buzzeroffD1Ev>:
class buzzeroff : public Cli{
 80015e4:	b580      	push	{r7, lr}
 80015e6:	b082      	sub	sp, #8
 80015e8:	af00      	add	r7, sp, #0
 80015ea:	6078      	str	r0, [r7, #4]
 80015ec:	4a05      	ldr	r2, [pc, #20]	; (8001604 <_ZN9buzzeroffD1Ev+0x20>)
 80015ee:	687b      	ldr	r3, [r7, #4]
 80015f0:	601a      	str	r2, [r3, #0]
 80015f2:	687b      	ldr	r3, [r7, #4]
 80015f4:	4618      	mov	r0, r3
 80015f6:	f7ff fd4f 	bl	8001098 <_ZN3CliD1Ev>
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	4618      	mov	r0, r3
 80015fe:	3708      	adds	r7, #8
 8001600:	46bd      	mov	sp, r7
 8001602:	bd80      	pop	{r7, pc}
 8001604:	0802e774 	.word	0x0802e774

08001608 <_ZN9buzzeroffD0Ev>:
 8001608:	b580      	push	{r7, lr}
 800160a:	b082      	sub	sp, #8
 800160c:	af00      	add	r7, sp, #0
 800160e:	6078      	str	r0, [r7, #4]
 8001610:	6878      	ldr	r0, [r7, #4]
 8001612:	f7ff ffe7 	bl	80015e4 <_ZN9buzzeroffD1Ev>
 8001616:	2108      	movs	r1, #8
 8001618:	6878      	ldr	r0, [r7, #4]
 800161a:	f00a fc8f 	bl	800bf3c <_ZdlPvj>
 800161e:	687b      	ldr	r3, [r7, #4]
 8001620:	4618      	mov	r0, r3
 8001622:	3708      	adds	r7, #8
 8001624:	46bd      	mov	sp, r7
 8001626:	bd80      	pop	{r7, pc}

08001628 <_ZN8buzzeronD1Ev>:
class buzzeron : public Cli{
 8001628:	b580      	push	{r7, lr}
 800162a:	b082      	sub	sp, #8
 800162c:	af00      	add	r7, sp, #0
 800162e:	6078      	str	r0, [r7, #4]
 8001630:	4a05      	ldr	r2, [pc, #20]	; (8001648 <_ZN8buzzeronD1Ev+0x20>)
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	601a      	str	r2, [r3, #0]
 8001636:	687b      	ldr	r3, [r7, #4]
 8001638:	4618      	mov	r0, r3
 800163a:	f7ff fd2d 	bl	8001098 <_ZN3CliD1Ev>
 800163e:	687b      	ldr	r3, [r7, #4]
 8001640:	4618      	mov	r0, r3
 8001642:	3708      	adds	r7, #8
 8001644:	46bd      	mov	sp, r7
 8001646:	bd80      	pop	{r7, pc}
 8001648:	0802e788 	.word	0x0802e788

0800164c <_ZN8buzzeronD0Ev>:
 800164c:	b580      	push	{r7, lr}
 800164e:	b082      	sub	sp, #8
 8001650:	af00      	add	r7, sp, #0
 8001652:	6078      	str	r0, [r7, #4]
 8001654:	6878      	ldr	r0, [r7, #4]
 8001656:	f7ff ffe7 	bl	8001628 <_ZN8buzzeronD1Ev>
 800165a:	2108      	movs	r1, #8
 800165c:	6878      	ldr	r0, [r7, #4]
 800165e:	f00a fc6d 	bl	800bf3c <_ZdlPvj>
 8001662:	687b      	ldr	r3, [r7, #4]
 8001664:	4618      	mov	r0, r3
 8001666:	3708      	adds	r7, #8
 8001668:	46bd      	mov	sp, r7
 800166a:	bd80      	pop	{r7, pc}

0800166c <_ZN7rtcstopD1Ev>:
class rtcstop : public Cli{
 800166c:	b580      	push	{r7, lr}
 800166e:	b082      	sub	sp, #8
 8001670:	af00      	add	r7, sp, #0
 8001672:	6078      	str	r0, [r7, #4]
 8001674:	4a05      	ldr	r2, [pc, #20]	; (800168c <_ZN7rtcstopD1Ev+0x20>)
 8001676:	687b      	ldr	r3, [r7, #4]
 8001678:	601a      	str	r2, [r3, #0]
 800167a:	687b      	ldr	r3, [r7, #4]
 800167c:	4618      	mov	r0, r3
 800167e:	f7ff fd0b 	bl	8001098 <_ZN3CliD1Ev>
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	4618      	mov	r0, r3
 8001686:	3708      	adds	r7, #8
 8001688:	46bd      	mov	sp, r7
 800168a:	bd80      	pop	{r7, pc}
 800168c:	0802e79c 	.word	0x0802e79c

08001690 <_ZN7rtcstopD0Ev>:
 8001690:	b580      	push	{r7, lr}
 8001692:	b082      	sub	sp, #8
 8001694:	af00      	add	r7, sp, #0
 8001696:	6078      	str	r0, [r7, #4]
 8001698:	6878      	ldr	r0, [r7, #4]
 800169a:	f7ff ffe7 	bl	800166c <_ZN7rtcstopD1Ev>
 800169e:	2108      	movs	r1, #8
 80016a0:	6878      	ldr	r0, [r7, #4]
 80016a2:	f00a fc4b 	bl	800bf3c <_ZdlPvj>
 80016a6:	687b      	ldr	r3, [r7, #4]
 80016a8:	4618      	mov	r0, r3
 80016aa:	3708      	adds	r7, #8
 80016ac:	46bd      	mov	sp, r7
 80016ae:	bd80      	pop	{r7, pc}

080016b0 <_ZN10rtcsettimeD1Ev>:
class rtcsettime : public Cli{
 80016b0:	b580      	push	{r7, lr}
 80016b2:	b082      	sub	sp, #8
 80016b4:	af00      	add	r7, sp, #0
 80016b6:	6078      	str	r0, [r7, #4]
 80016b8:	4a05      	ldr	r2, [pc, #20]	; (80016d0 <_ZN10rtcsettimeD1Ev+0x20>)
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	601a      	str	r2, [r3, #0]
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	4618      	mov	r0, r3
 80016c2:	f7ff fce9 	bl	8001098 <_ZN3CliD1Ev>
 80016c6:	687b      	ldr	r3, [r7, #4]
 80016c8:	4618      	mov	r0, r3
 80016ca:	3708      	adds	r7, #8
 80016cc:	46bd      	mov	sp, r7
 80016ce:	bd80      	pop	{r7, pc}
 80016d0:	0802e7b0 	.word	0x0802e7b0

080016d4 <_ZN10rtcsettimeD0Ev>:
 80016d4:	b580      	push	{r7, lr}
 80016d6:	b082      	sub	sp, #8
 80016d8:	af00      	add	r7, sp, #0
 80016da:	6078      	str	r0, [r7, #4]
 80016dc:	6878      	ldr	r0, [r7, #4]
 80016de:	f7ff ffe7 	bl	80016b0 <_ZN10rtcsettimeD1Ev>
 80016e2:	2108      	movs	r1, #8
 80016e4:	6878      	ldr	r0, [r7, #4]
 80016e6:	f00a fc29 	bl	800bf3c <_ZdlPvj>
 80016ea:	687b      	ldr	r3, [r7, #4]
 80016ec:	4618      	mov	r0, r3
 80016ee:	3708      	adds	r7, #8
 80016f0:	46bd      	mov	sp, r7
 80016f2:	bd80      	pop	{r7, pc}

080016f4 <_ZN10rtcgettimeD1Ev>:
class rtcgettime : public Cli{
 80016f4:	b580      	push	{r7, lr}
 80016f6:	b082      	sub	sp, #8
 80016f8:	af00      	add	r7, sp, #0
 80016fa:	6078      	str	r0, [r7, #4]
 80016fc:	4a05      	ldr	r2, [pc, #20]	; (8001714 <_ZN10rtcgettimeD1Ev+0x20>)
 80016fe:	687b      	ldr	r3, [r7, #4]
 8001700:	601a      	str	r2, [r3, #0]
 8001702:	687b      	ldr	r3, [r7, #4]
 8001704:	4618      	mov	r0, r3
 8001706:	f7ff fcc7 	bl	8001098 <_ZN3CliD1Ev>
 800170a:	687b      	ldr	r3, [r7, #4]
 800170c:	4618      	mov	r0, r3
 800170e:	3708      	adds	r7, #8
 8001710:	46bd      	mov	sp, r7
 8001712:	bd80      	pop	{r7, pc}
 8001714:	0802e7c4 	.word	0x0802e7c4

08001718 <_ZN10rtcgettimeD0Ev>:
 8001718:	b580      	push	{r7, lr}
 800171a:	b082      	sub	sp, #8
 800171c:	af00      	add	r7, sp, #0
 800171e:	6078      	str	r0, [r7, #4]
 8001720:	6878      	ldr	r0, [r7, #4]
 8001722:	f7ff ffe7 	bl	80016f4 <_ZN10rtcgettimeD1Ev>
 8001726:	2108      	movs	r1, #8
 8001728:	6878      	ldr	r0, [r7, #4]
 800172a:	f00a fc07 	bl	800bf3c <_ZdlPvj>
 800172e:	687b      	ldr	r3, [r7, #4]
 8001730:	4618      	mov	r0, r3
 8001732:	3708      	adds	r7, #8
 8001734:	46bd      	mov	sp, r7
 8001736:	bd80      	pop	{r7, pc}

08001738 <_ZN8rtcstartD1Ev>:
class rtcstart : public Cli{
 8001738:	b580      	push	{r7, lr}
 800173a:	b082      	sub	sp, #8
 800173c:	af00      	add	r7, sp, #0
 800173e:	6078      	str	r0, [r7, #4]
 8001740:	4a05      	ldr	r2, [pc, #20]	; (8001758 <_ZN8rtcstartD1Ev+0x20>)
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	601a      	str	r2, [r3, #0]
 8001746:	687b      	ldr	r3, [r7, #4]
 8001748:	4618      	mov	r0, r3
 800174a:	f7ff fca5 	bl	8001098 <_ZN3CliD1Ev>
 800174e:	687b      	ldr	r3, [r7, #4]
 8001750:	4618      	mov	r0, r3
 8001752:	3708      	adds	r7, #8
 8001754:	46bd      	mov	sp, r7
 8001756:	bd80      	pop	{r7, pc}
 8001758:	0802e7d8 	.word	0x0802e7d8

0800175c <_ZN8rtcstartD0Ev>:
 800175c:	b580      	push	{r7, lr}
 800175e:	b082      	sub	sp, #8
 8001760:	af00      	add	r7, sp, #0
 8001762:	6078      	str	r0, [r7, #4]
 8001764:	6878      	ldr	r0, [r7, #4]
 8001766:	f7ff ffe7 	bl	8001738 <_ZN8rtcstartD1Ev>
 800176a:	2108      	movs	r1, #8
 800176c:	6878      	ldr	r0, [r7, #4]
 800176e:	f00a fbe5 	bl	800bf3c <_ZdlPvj>
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	4618      	mov	r0, r3
 8001776:	3708      	adds	r7, #8
 8001778:	46bd      	mov	sp, r7
 800177a:	bd80      	pop	{r7, pc}

0800177c <_ZN8ledBlinkD1Ev>:
class ledBlink : public Cli{
 800177c:	b580      	push	{r7, lr}
 800177e:	b082      	sub	sp, #8
 8001780:	af00      	add	r7, sp, #0
 8001782:	6078      	str	r0, [r7, #4]
 8001784:	4a05      	ldr	r2, [pc, #20]	; (800179c <_ZN8ledBlinkD1Ev+0x20>)
 8001786:	687b      	ldr	r3, [r7, #4]
 8001788:	601a      	str	r2, [r3, #0]
 800178a:	687b      	ldr	r3, [r7, #4]
 800178c:	4618      	mov	r0, r3
 800178e:	f7ff fc83 	bl	8001098 <_ZN3CliD1Ev>
 8001792:	687b      	ldr	r3, [r7, #4]
 8001794:	4618      	mov	r0, r3
 8001796:	3708      	adds	r7, #8
 8001798:	46bd      	mov	sp, r7
 800179a:	bd80      	pop	{r7, pc}
 800179c:	0802e7ec 	.word	0x0802e7ec

080017a0 <_ZN8ledBlinkD0Ev>:
 80017a0:	b580      	push	{r7, lr}
 80017a2:	b082      	sub	sp, #8
 80017a4:	af00      	add	r7, sp, #0
 80017a6:	6078      	str	r0, [r7, #4]
 80017a8:	6878      	ldr	r0, [r7, #4]
 80017aa:	f7ff ffe7 	bl	800177c <_ZN8ledBlinkD1Ev>
 80017ae:	2108      	movs	r1, #8
 80017b0:	6878      	ldr	r0, [r7, #4]
 80017b2:	f00a fbc3 	bl	800bf3c <_ZdlPvj>
 80017b6:	687b      	ldr	r3, [r7, #4]
 80017b8:	4618      	mov	r0, r3
 80017ba:	3708      	adds	r7, #8
 80017bc:	46bd      	mov	sp, r7
 80017be:	bd80      	pop	{r7, pc}

080017c0 <_ZN6ledOffD1Ev>:
class ledOff : public Cli{
 80017c0:	b580      	push	{r7, lr}
 80017c2:	b082      	sub	sp, #8
 80017c4:	af00      	add	r7, sp, #0
 80017c6:	6078      	str	r0, [r7, #4]
 80017c8:	4a05      	ldr	r2, [pc, #20]	; (80017e0 <_ZN6ledOffD1Ev+0x20>)
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	601a      	str	r2, [r3, #0]
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	4618      	mov	r0, r3
 80017d2:	f7ff fc61 	bl	8001098 <_ZN3CliD1Ev>
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	4618      	mov	r0, r3
 80017da:	3708      	adds	r7, #8
 80017dc:	46bd      	mov	sp, r7
 80017de:	bd80      	pop	{r7, pc}
 80017e0:	0802e800 	.word	0x0802e800

080017e4 <_ZN6ledOffD0Ev>:
 80017e4:	b580      	push	{r7, lr}
 80017e6:	b082      	sub	sp, #8
 80017e8:	af00      	add	r7, sp, #0
 80017ea:	6078      	str	r0, [r7, #4]
 80017ec:	6878      	ldr	r0, [r7, #4]
 80017ee:	f7ff ffe7 	bl	80017c0 <_ZN6ledOffD1Ev>
 80017f2:	2108      	movs	r1, #8
 80017f4:	6878      	ldr	r0, [r7, #4]
 80017f6:	f00a fba1 	bl	800bf3c <_ZdlPvj>
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	4618      	mov	r0, r3
 80017fe:	3708      	adds	r7, #8
 8001800:	46bd      	mov	sp, r7
 8001802:	bd80      	pop	{r7, pc}

08001804 <_ZN5ledOnD1Ev>:
class ledOn : public Cli{
 8001804:	b580      	push	{r7, lr}
 8001806:	b082      	sub	sp, #8
 8001808:	af00      	add	r7, sp, #0
 800180a:	6078      	str	r0, [r7, #4]
 800180c:	4a05      	ldr	r2, [pc, #20]	; (8001824 <_ZN5ledOnD1Ev+0x20>)
 800180e:	687b      	ldr	r3, [r7, #4]
 8001810:	601a      	str	r2, [r3, #0]
 8001812:	687b      	ldr	r3, [r7, #4]
 8001814:	4618      	mov	r0, r3
 8001816:	f7ff fc3f 	bl	8001098 <_ZN3CliD1Ev>
 800181a:	687b      	ldr	r3, [r7, #4]
 800181c:	4618      	mov	r0, r3
 800181e:	3708      	adds	r7, #8
 8001820:	46bd      	mov	sp, r7
 8001822:	bd80      	pop	{r7, pc}
 8001824:	0802e814 	.word	0x0802e814

08001828 <_ZN5ledOnD0Ev>:
 8001828:	b580      	push	{r7, lr}
 800182a:	b082      	sub	sp, #8
 800182c:	af00      	add	r7, sp, #0
 800182e:	6078      	str	r0, [r7, #4]
 8001830:	6878      	ldr	r0, [r7, #4]
 8001832:	f7ff ffe7 	bl	8001804 <_ZN5ledOnD1Ev>
 8001836:	2108      	movs	r1, #8
 8001838:	6878      	ldr	r0, [r7, #4]
 800183a:	f00a fb7f 	bl	800bf3c <_ZdlPvj>
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	4618      	mov	r0, r3
 8001842:	3708      	adds	r7, #8
 8001844:	46bd      	mov	sp, r7
 8001846:	bd80      	pop	{r7, pc}

08001848 <_ZN3Dht14waitWhileEqualEii>:
#include <stdio.h>
#include "cmsis_os.h"


bool Dht :: waitWhileEqual(int value, int expectedTime)
{
 8001848:	b580      	push	{r7, lr}
 800184a:	b086      	sub	sp, #24
 800184c:	af00      	add	r7, sp, #0
 800184e:	60f8      	str	r0, [r7, #12]
 8001850:	60b9      	str	r1, [r7, #8]
 8001852:	607a      	str	r2, [r7, #4]
	// set a timeout 20% bigger than the expected time
	uint32_t timeout = expectedTime + (expectedTime) / 5;
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	4a19      	ldr	r2, [pc, #100]	; (80018bc <_ZN3Dht14waitWhileEqualEii+0x74>)
 8001858:	fb82 1203 	smull	r1, r2, r2, r3
 800185c:	1052      	asrs	r2, r2, #1
 800185e:	17db      	asrs	r3, r3, #31
 8001860:	1ad2      	subs	r2, r2, r3
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	4413      	add	r3, r2
 8001866:	617b      	str	r3, [r7, #20]

	__HAL_TIM_SET_COUNTER(_timer, 0);
 8001868:	68fb      	ldr	r3, [r7, #12]
 800186a:	689b      	ldr	r3, [r3, #8]
 800186c:	681b      	ldr	r3, [r3, #0]
 800186e:	2200      	movs	r2, #0
 8001870:	625a      	str	r2, [r3, #36]	; 0x24
	while (HAL_GPIO_ReadPin(_gpioPort, _gpioPin) == value) {
 8001872:	68fb      	ldr	r3, [r7, #12]
 8001874:	681a      	ldr	r2, [r3, #0]
 8001876:	68fb      	ldr	r3, [r7, #12]
 8001878:	889b      	ldrh	r3, [r3, #4]
 800187a:	4619      	mov	r1, r3
 800187c:	4610      	mov	r0, r2
 800187e:	f001 ffa3 	bl	80037c8 <HAL_GPIO_ReadPin>
 8001882:	4603      	mov	r3, r0
 8001884:	461a      	mov	r2, r3
 8001886:	68bb      	ldr	r3, [r7, #8]
 8001888:	4293      	cmp	r3, r2
 800188a:	bf0c      	ite	eq
 800188c:	2301      	moveq	r3, #1
 800188e:	2300      	movne	r3, #0
 8001890:	b2db      	uxtb	r3, r3
 8001892:	2b00      	cmp	r3, #0
 8001894:	d00d      	beq.n	80018b2 <_ZN3Dht14waitWhileEqualEii+0x6a>
		if (__HAL_TIM_GET_COUNTER(_timer) > timeout) {
 8001896:	68fb      	ldr	r3, [r7, #12]
 8001898:	689b      	ldr	r3, [r3, #8]
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800189e:	697a      	ldr	r2, [r7, #20]
 80018a0:	429a      	cmp	r2, r3
 80018a2:	bf34      	ite	cc
 80018a4:	2301      	movcc	r3, #1
 80018a6:	2300      	movcs	r3, #0
 80018a8:	b2db      	uxtb	r3, r3
 80018aa:	2b00      	cmp	r3, #0
 80018ac:	d0e1      	beq.n	8001872 <_ZN3Dht14waitWhileEqualEii+0x2a>
			// too much time in the state
			return false;
 80018ae:	2300      	movs	r3, #0
 80018b0:	e000      	b.n	80018b4 <_ZN3Dht14waitWhileEqualEii+0x6c>
		}
	}

	return true;
 80018b2:	2301      	movs	r3, #1
}
 80018b4:	4618      	mov	r0, r3
 80018b6:	3718      	adds	r7, #24
 80018b8:	46bd      	mov	sp, r7
 80018ba:	bd80      	pop	{r7, pc}
 80018bc:	66666667 	.word	0x66666667

080018c0 <_ZN3Dht13setGpioOutputEv>:

void Dht :: setGpioOutput()
{
 80018c0:	b580      	push	{r7, lr}
 80018c2:	b088      	sub	sp, #32
 80018c4:	af00      	add	r7, sp, #0
 80018c6:	6078      	str	r0, [r7, #4]
	GPIO_InitTypeDef gpioStruct = {0};
 80018c8:	f107 030c 	add.w	r3, r7, #12
 80018cc:	2200      	movs	r2, #0
 80018ce:	601a      	str	r2, [r3, #0]
 80018d0:	605a      	str	r2, [r3, #4]
 80018d2:	609a      	str	r2, [r3, #8]
 80018d4:	60da      	str	r2, [r3, #12]
 80018d6:	611a      	str	r2, [r3, #16]

	gpioStruct.Pin = _gpioPin;
 80018d8:	687b      	ldr	r3, [r7, #4]
 80018da:	889b      	ldrh	r3, [r3, #4]
 80018dc:	60fb      	str	r3, [r7, #12]
	gpioStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80018de:	2301      	movs	r3, #1
 80018e0:	613b      	str	r3, [r7, #16]
	gpioStruct.Pull = GPIO_NOPULL;
 80018e2:	2300      	movs	r3, #0
 80018e4:	617b      	str	r3, [r7, #20]
	gpioStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018e6:	2300      	movs	r3, #0
 80018e8:	61bb      	str	r3, [r7, #24]

	HAL_GPIO_Init(_gpioPort, &gpioStruct);
 80018ea:	687b      	ldr	r3, [r7, #4]
 80018ec:	681b      	ldr	r3, [r3, #0]
 80018ee:	f107 020c 	add.w	r2, r7, #12
 80018f2:	4611      	mov	r1, r2
 80018f4:	4618      	mov	r0, r3
 80018f6:	f001 fdbd 	bl	8003474 <HAL_GPIO_Init>
	HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 80018fa:	2017      	movs	r0, #23
 80018fc:	f001 fd6a 	bl	80033d4 <HAL_NVIC_DisableIRQ>
}
 8001900:	bf00      	nop
 8001902:	3720      	adds	r7, #32
 8001904:	46bd      	mov	sp, r7
 8001906:	bd80      	pop	{r7, pc}

08001908 <_ZN3Dht12setGpioInputEv>:

void Dht :: setGpioInput()
{
 8001908:	b580      	push	{r7, lr}
 800190a:	b088      	sub	sp, #32
 800190c:	af00      	add	r7, sp, #0
 800190e:	6078      	str	r0, [r7, #4]
	GPIO_InitTypeDef gpioStruct = {0};
 8001910:	f107 030c 	add.w	r3, r7, #12
 8001914:	2200      	movs	r2, #0
 8001916:	601a      	str	r2, [r3, #0]
 8001918:	605a      	str	r2, [r3, #4]
 800191a:	609a      	str	r2, [r3, #8]
 800191c:	60da      	str	r2, [r3, #12]
 800191e:	611a      	str	r2, [r3, #16]

	gpioStruct.Pin = _gpioPin;
 8001920:	687b      	ldr	r3, [r7, #4]
 8001922:	889b      	ldrh	r3, [r3, #4]
 8001924:	60fb      	str	r3, [r7, #12]
	gpioStruct.Mode = GPIO_MODE_INPUT;
 8001926:	2300      	movs	r3, #0
 8001928:	613b      	str	r3, [r7, #16]
	gpioStruct.Pull = GPIO_NOPULL;
 800192a:	2300      	movs	r3, #0
 800192c:	617b      	str	r3, [r7, #20]
	gpioStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800192e:	2300      	movs	r3, #0
 8001930:	61bb      	str	r3, [r7, #24]

	HAL_GPIO_Init(_gpioPort, &gpioStruct);
 8001932:	687b      	ldr	r3, [r7, #4]
 8001934:	681b      	ldr	r3, [r3, #0]
 8001936:	f107 020c 	add.w	r2, r7, #12
 800193a:	4611      	mov	r1, r2
 800193c:	4618      	mov	r0, r3
 800193e:	f001 fd99 	bl	8003474 <HAL_GPIO_Init>
	HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 8001942:	2017      	movs	r0, #23
 8001944:	f001 fd46 	bl	80033d4 <HAL_NVIC_DisableIRQ>
}
 8001948:	bf00      	nop
 800194a:	3720      	adds	r7, #32
 800194c:	46bd      	mov	sp, r7
 800194e:	bd80      	pop	{r7, pc}

08001950 <_ZN3Dht8Dht_readEv>:

int Dht :: Dht_read()
{
 8001950:	b5b0      	push	{r4, r5, r7, lr}
 8001952:	b086      	sub	sp, #24
 8001954:	af00      	add	r7, sp, #0
 8001956:	6078      	str	r0, [r7, #4]
	setGpioOutput();
 8001958:	6878      	ldr	r0, [r7, #4]
 800195a:	f7ff ffb1 	bl	80018c0 <_ZN3Dht13setGpioOutputEv>

	HAL_TIM_Base_Start(_timer);
 800195e:	687b      	ldr	r3, [r7, #4]
 8001960:	689b      	ldr	r3, [r3, #8]
 8001962:	4618      	mov	r0, r3
 8001964:	f004 fe72 	bl	800664c <HAL_TIM_Base_Start>
	__HAL_TIM_SET_COUNTER(_timer, 0);
 8001968:	687b      	ldr	r3, [r7, #4]
 800196a:	689b      	ldr	r3, [r3, #8]
 800196c:	681b      	ldr	r3, [r3, #0]
 800196e:	2200      	movs	r2, #0
 8001970:	625a      	str	r2, [r3, #36]	; 0x24

	// switch the sensor on by putting the line in '0'
	HAL_GPIO_WritePin(_gpioPort, _gpioPin,(GPIO_PinState) 0);
 8001972:	687b      	ldr	r3, [r7, #4]
 8001974:	6818      	ldr	r0, [r3, #0]
 8001976:	687b      	ldr	r3, [r7, #4]
 8001978:	889b      	ldrh	r3, [r3, #4]
 800197a:	2200      	movs	r2, #0
 800197c:	4619      	mov	r1, r3
 800197e:	f001 ff3b 	bl	80037f8 <HAL_GPIO_WritePin>
	//while (__HAL_TIM_GET_COUNTER(_timer) < 19000);//change osDelay(19)
	osDelay(19);
 8001982:	2013      	movs	r0, #19
 8001984:	f007 fe3c 	bl	8009600 <osDelay>


	HAL_GPIO_WritePin(_gpioPort, _gpioPin, (GPIO_PinState)1);
 8001988:	687b      	ldr	r3, [r7, #4]
 800198a:	6818      	ldr	r0, [r3, #0]
 800198c:	687b      	ldr	r3, [r7, #4]
 800198e:	889b      	ldrh	r3, [r3, #4]
 8001990:	2201      	movs	r2, #1
 8001992:	4619      	mov	r1, r3
 8001994:	f001 ff30 	bl	80037f8 <HAL_GPIO_WritePin>

	// start listening
	setGpioInput();
 8001998:	6878      	ldr	r0, [r7, #4]
 800199a:	f7ff ffb5 	bl	8001908 <_ZN3Dht12setGpioInputEv>

	// wait for response 20-40us
	if (!waitWhileEqual( 1, 40)) {
 800199e:	2228      	movs	r2, #40	; 0x28
 80019a0:	2101      	movs	r1, #1
 80019a2:	6878      	ldr	r0, [r7, #4]
 80019a4:	f7ff ff50 	bl	8001848 <_ZN3Dht14waitWhileEqualEii>
 80019a8:	4603      	mov	r3, r0
 80019aa:	f083 0301 	eor.w	r3, r3, #1
 80019ae:	b2db      	uxtb	r3, r3
 80019b0:	2b00      	cmp	r3, #0
 80019b2:	d001      	beq.n	80019b8 <_ZN3Dht8Dht_readEv+0x68>
		return HAL_ERROR;
 80019b4:	2301      	movs	r3, #1
 80019b6:	e0ac      	b.n	8001b12 <_ZN3Dht8Dht_readEv+0x1c2>
	}

	// DHT should keep in low for 80us
	if (!waitWhileEqual( 0, 80)) {
 80019b8:	2250      	movs	r2, #80	; 0x50
 80019ba:	2100      	movs	r1, #0
 80019bc:	6878      	ldr	r0, [r7, #4]
 80019be:	f7ff ff43 	bl	8001848 <_ZN3Dht14waitWhileEqualEii>
 80019c2:	4603      	mov	r3, r0
 80019c4:	f083 0301 	eor.w	r3, r3, #1
 80019c8:	b2db      	uxtb	r3, r3
 80019ca:	2b00      	cmp	r3, #0
 80019cc:	d001      	beq.n	80019d2 <_ZN3Dht8Dht_readEv+0x82>
		return HAL_ERROR;
 80019ce:	2301      	movs	r3, #1
 80019d0:	e09f      	b.n	8001b12 <_ZN3Dht8Dht_readEv+0x1c2>
	}

	// DHT should keep in high for 80us
	if (!waitWhileEqual( 1, 80)) {
 80019d2:	2250      	movs	r2, #80	; 0x50
 80019d4:	2101      	movs	r1, #1
 80019d6:	6878      	ldr	r0, [r7, #4]
 80019d8:	f7ff ff36 	bl	8001848 <_ZN3Dht14waitWhileEqualEii>
 80019dc:	4603      	mov	r3, r0
 80019de:	f083 0301 	eor.w	r3, r3, #1
 80019e2:	b2db      	uxtb	r3, r3
 80019e4:	2b00      	cmp	r3, #0
 80019e6:	d001      	beq.n	80019ec <_ZN3Dht8Dht_readEv+0x9c>
		return HAL_ERROR;
 80019e8:	2301      	movs	r3, #1
 80019ea:	e092      	b.n	8001b12 <_ZN3Dht8Dht_readEv+0x1c2>
	}

	// DHT start send data bits

	uint8_t data[5] = { 0 };
 80019ec:	2300      	movs	r3, #0
 80019ee:	60bb      	str	r3, [r7, #8]
 80019f0:	2300      	movs	r3, #0
 80019f2:	733b      	strb	r3, [r7, #12]
	for (int i = 0; i < 5; i++) {
 80019f4:	2300      	movs	r3, #0
 80019f6:	617b      	str	r3, [r7, #20]
 80019f8:	697b      	ldr	r3, [r7, #20]
 80019fa:	2b04      	cmp	r3, #4
 80019fc:	dc4c      	bgt.n	8001a98 <_ZN3Dht8Dht_readEv+0x148>
		for (int j = 0; j < 8; j++) {
 80019fe:	2300      	movs	r3, #0
 8001a00:	613b      	str	r3, [r7, #16]
 8001a02:	693b      	ldr	r3, [r7, #16]
 8001a04:	2b07      	cmp	r3, #7
 8001a06:	dc43      	bgt.n	8001a90 <_ZN3Dht8Dht_readEv+0x140>

			// DHT keeps in low for 50us before each bit
			if (!waitWhileEqual( 0, 60)) {
 8001a08:	223c      	movs	r2, #60	; 0x3c
 8001a0a:	2100      	movs	r1, #0
 8001a0c:	6878      	ldr	r0, [r7, #4]
 8001a0e:	f7ff ff1b 	bl	8001848 <_ZN3Dht14waitWhileEqualEii>
 8001a12:	4603      	mov	r3, r0
 8001a14:	f083 0301 	eor.w	r3, r3, #1
 8001a18:	b2db      	uxtb	r3, r3
 8001a1a:	2b00      	cmp	r3, #0
 8001a1c:	d001      	beq.n	8001a22 <_ZN3Dht8Dht_readEv+0xd2>
				return HAL_ERROR;
 8001a1e:	2301      	movs	r3, #1
 8001a20:	e077      	b.n	8001b12 <_ZN3Dht8Dht_readEv+0x1c2>
			}

			// DHT sends bit keeping line in high maximum 70us
			if (!waitWhileEqual( 1, 70)) {
 8001a22:	2246      	movs	r2, #70	; 0x46
 8001a24:	2101      	movs	r1, #1
 8001a26:	6878      	ldr	r0, [r7, #4]
 8001a28:	f7ff ff0e 	bl	8001848 <_ZN3Dht14waitWhileEqualEii>
 8001a2c:	4603      	mov	r3, r0
 8001a2e:	f083 0301 	eor.w	r3, r3, #1
 8001a32:	b2db      	uxtb	r3, r3
 8001a34:	2b00      	cmp	r3, #0
 8001a36:	d001      	beq.n	8001a3c <_ZN3Dht8Dht_readEv+0xec>
				return HAL_ERROR;
 8001a38:	2301      	movs	r3, #1
 8001a3a:	e06a      	b.n	8001b12 <_ZN3Dht8Dht_readEv+0x1c2>
			}

			data[i] <<= 1;
 8001a3c:	f107 0208 	add.w	r2, r7, #8
 8001a40:	697b      	ldr	r3, [r7, #20]
 8001a42:	4413      	add	r3, r2
 8001a44:	781b      	ldrb	r3, [r3, #0]
 8001a46:	005b      	lsls	r3, r3, #1
 8001a48:	b2d9      	uxtb	r1, r3
 8001a4a:	f107 0208 	add.w	r2, r7, #8
 8001a4e:	697b      	ldr	r3, [r7, #20]
 8001a50:	4413      	add	r3, r2
 8001a52:	460a      	mov	r2, r1
 8001a54:	701a      	strb	r2, [r3, #0]

			// 26-28us for '0' and 70us for '1', so 50us is a good split time
			if (__HAL_TIM_GET_COUNTER(_timer) > 50) {
 8001a56:	687b      	ldr	r3, [r7, #4]
 8001a58:	689b      	ldr	r3, [r3, #8]
 8001a5a:	681b      	ldr	r3, [r3, #0]
 8001a5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a5e:	2b32      	cmp	r3, #50	; 0x32
 8001a60:	bf8c      	ite	hi
 8001a62:	2301      	movhi	r3, #1
 8001a64:	2300      	movls	r3, #0
 8001a66:	b2db      	uxtb	r3, r3
 8001a68:	2b00      	cmp	r3, #0
 8001a6a:	d00d      	beq.n	8001a88 <_ZN3Dht8Dht_readEv+0x138>
				data[i] |= 1;
 8001a6c:	f107 0208 	add.w	r2, r7, #8
 8001a70:	697b      	ldr	r3, [r7, #20]
 8001a72:	4413      	add	r3, r2
 8001a74:	781b      	ldrb	r3, [r3, #0]
 8001a76:	f043 0301 	orr.w	r3, r3, #1
 8001a7a:	b2d9      	uxtb	r1, r3
 8001a7c:	f107 0208 	add.w	r2, r7, #8
 8001a80:	697b      	ldr	r3, [r7, #20]
 8001a82:	4413      	add	r3, r2
 8001a84:	460a      	mov	r2, r1
 8001a86:	701a      	strb	r2, [r3, #0]
		for (int j = 0; j < 8; j++) {
 8001a88:	693b      	ldr	r3, [r7, #16]
 8001a8a:	3301      	adds	r3, #1
 8001a8c:	613b      	str	r3, [r7, #16]
 8001a8e:	e7b8      	b.n	8001a02 <_ZN3Dht8Dht_readEv+0xb2>
	for (int i = 0; i < 5; i++) {
 8001a90:	697b      	ldr	r3, [r7, #20]
 8001a92:	3301      	adds	r3, #1
 8001a94:	617b      	str	r3, [r7, #20]
 8001a96:	e7af      	b.n	80019f8 <_ZN3Dht8Dht_readEv+0xa8>
			}
		}
	}

	uint8_t checksum = data[0] + data[1] + data[2] + data[3];
 8001a98:	7a3a      	ldrb	r2, [r7, #8]
 8001a9a:	7a7b      	ldrb	r3, [r7, #9]
 8001a9c:	4413      	add	r3, r2
 8001a9e:	b2da      	uxtb	r2, r3
 8001aa0:	7abb      	ldrb	r3, [r7, #10]
 8001aa2:	4413      	add	r3, r2
 8001aa4:	b2da      	uxtb	r2, r3
 8001aa6:	7afb      	ldrb	r3, [r7, #11]
 8001aa8:	4413      	add	r3, r2
 8001aaa:	73fb      	strb	r3, [r7, #15]
	if (checksum != data[4]) {
 8001aac:	7b3b      	ldrb	r3, [r7, #12]
 8001aae:	7bfa      	ldrb	r2, [r7, #15]
 8001ab0:	429a      	cmp	r2, r3
 8001ab2:	d001      	beq.n	8001ab8 <_ZN3Dht8Dht_readEv+0x168>
		return HAL_ERROR;
 8001ab4:	2301      	movs	r3, #1
 8001ab6:	e02c      	b.n	8001b12 <_ZN3Dht8Dht_readEv+0x1c2>
	}

	_temperature = (double)data[2] + ((double)data[3]) / 10;
 8001ab8:	7abb      	ldrb	r3, [r7, #10]
 8001aba:	4618      	mov	r0, r3
 8001abc:	f7fe fd2c 	bl	8000518 <__aeabi_ui2d>
 8001ac0:	4604      	mov	r4, r0
 8001ac2:	460d      	mov	r5, r1
 8001ac4:	7afb      	ldrb	r3, [r7, #11]
 8001ac6:	4618      	mov	r0, r3
 8001ac8:	f7fe fd26 	bl	8000518 <__aeabi_ui2d>
 8001acc:	f04f 0200 	mov.w	r2, #0
 8001ad0:	4b12      	ldr	r3, [pc, #72]	; (8001b1c <_ZN3Dht8Dht_readEv+0x1cc>)
 8001ad2:	f7fe fec5 	bl	8000860 <__aeabi_ddiv>
 8001ad6:	4602      	mov	r2, r0
 8001ad8:	460b      	mov	r3, r1
 8001ada:	4620      	mov	r0, r4
 8001adc:	4629      	mov	r1, r5
 8001ade:	f7fe fbdf 	bl	80002a0 <__adddf3>
 8001ae2:	4602      	mov	r2, r0
 8001ae4:	460b      	mov	r3, r1
 8001ae6:	6879      	ldr	r1, [r7, #4]
 8001ae8:	e9c1 2306 	strd	r2, r3, [r1, #24]
	//printf("Humidity: %d.%d, temp: %d.%d\r\n", (int)data[0], (int)data[1], (int)data[2], (int)data[3]);

	// wait while DHT return to high
	if (!waitWhileEqual(0, 100)) {
 8001aec:	2264      	movs	r2, #100	; 0x64
 8001aee:	2100      	movs	r1, #0
 8001af0:	6878      	ldr	r0, [r7, #4]
 8001af2:	f7ff fea9 	bl	8001848 <_ZN3Dht14waitWhileEqualEii>
 8001af6:	4603      	mov	r3, r0
 8001af8:	f083 0301 	eor.w	r3, r3, #1
 8001afc:	b2db      	uxtb	r3, r3
 8001afe:	2b00      	cmp	r3, #0
 8001b00:	d001      	beq.n	8001b06 <_ZN3Dht8Dht_readEv+0x1b6>
		return HAL_ERROR;
 8001b02:	2301      	movs	r3, #1
 8001b04:	e005      	b.n	8001b12 <_ZN3Dht8Dht_readEv+0x1c2>
	}

	HAL_TIM_Base_Stop(_timer);
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	689b      	ldr	r3, [r3, #8]
 8001b0a:	4618      	mov	r0, r3
 8001b0c:	f004 fe06 	bl	800671c <HAL_TIM_Base_Stop>

	return HAL_OK;
 8001b10:	2300      	movs	r3, #0

}
 8001b12:	4618      	mov	r0, r3
 8001b14:	3718      	adds	r7, #24
 8001b16:	46bd      	mov	sp, r7
 8001b18:	bdb0      	pop	{r4, r5, r7, pc}
 8001b1a:	bf00      	nop
 8001b1c:	40240000 	.word	0x40240000

08001b20 <_ZN3Dht7getTempEv>:

double Dht :: getTemp()
{
 8001b20:	b480      	push	{r7}
 8001b22:	b083      	sub	sp, #12
 8001b24:	af00      	add	r7, sp, #0
 8001b26:	6078      	str	r0, [r7, #4]
	return _temperature;
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8001b2e:	ec43 2b17 	vmov	d7, r2, r3
}
 8001b32:	eeb0 0a47 	vmov.f32	s0, s14
 8001b36:	eef0 0a67 	vmov.f32	s1, s15
 8001b3a:	370c      	adds	r7, #12
 8001b3c:	46bd      	mov	sp, r7
 8001b3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b42:	4770      	bx	lr

08001b44 <_ZN3Dht8getStateEv>:
_alartState Dht :: getState()
{
 8001b44:	b480      	push	{r7}
 8001b46:	b083      	sub	sp, #12
 8001b48:	af00      	add	r7, sp, #0
 8001b4a:	6078      	str	r0, [r7, #4]
	return _dhtstate;
 8001b4c:	687b      	ldr	r3, [r7, #4]
 8001b4e:	f893 3020 	ldrb.w	r3, [r3, #32]
}
 8001b52:	4618      	mov	r0, r3
 8001b54:	370c      	adds	r7, #12
 8001b56:	46bd      	mov	sp, r7
 8001b58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b5c:	4770      	bx	lr

08001b5e <_ZN3Dht8setStateE11_alartState>:
void Dht :: setState(_alartState _state)
{
 8001b5e:	b480      	push	{r7}
 8001b60:	b083      	sub	sp, #12
 8001b62:	af00      	add	r7, sp, #0
 8001b64:	6078      	str	r0, [r7, #4]
 8001b66:	460b      	mov	r3, r1
 8001b68:	70fb      	strb	r3, [r7, #3]
	_dhtstate = _state;
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	78fa      	ldrb	r2, [r7, #3]
 8001b6e:	f883 2020 	strb.w	r2, [r3, #32]
}
 8001b72:	bf00      	nop
 8001b74:	370c      	adds	r7, #12
 8001b76:	46bd      	mov	sp, r7
 8001b78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b7c:	4770      	bx	lr

08001b7e <_ZN9FLASHCORE19getWarningThresholdEv>:
	printf("%d\r\n", status);
	return status;
}

int FLASHCORE :: getWarningThreshold()
{
 8001b7e:	b480      	push	{r7}
 8001b80:	b083      	sub	sp, #12
 8001b82:	af00      	add	r7, sp, #0
 8001b84:	6078      	str	r0, [r7, #4]
	return _thresholds._warning;
 8001b86:	687b      	ldr	r3, [r7, #4]
 8001b88:	8a1b      	ldrh	r3, [r3, #16]
}
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	370c      	adds	r7, #12
 8001b8e:	46bd      	mov	sp, r7
 8001b90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b94:	4770      	bx	lr

08001b96 <_ZN9FLASHCORE20getCriticalThresholdEv>:

int FLASHCORE :: getCriticalThreshold()
{
 8001b96:	b480      	push	{r7}
 8001b98:	b083      	sub	sp, #12
 8001b9a:	af00      	add	r7, sp, #0
 8001b9c:	6078      	str	r0, [r7, #4]
	return _thresholds._critical;
 8001b9e:	687b      	ldr	r3, [r7, #4]
 8001ba0:	8a5b      	ldrh	r3, [r3, #18]
}
 8001ba2:	4618      	mov	r0, r3
 8001ba4:	370c      	adds	r7, #12
 8001ba6:	46bd      	mov	sp, r7
 8001ba8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bac:	4770      	bx	lr

08001bae <_ZN3LEDC1EP12GPIO_TypeDeft>:


#include "Led.h"


LED::LED(GPIO_TypeDef* GPIOx,uint16_t GPIO_Pin):
 8001bae:	b480      	push	{r7}
 8001bb0:	b085      	sub	sp, #20
 8001bb2:	af00      	add	r7, sp, #0
 8001bb4:	60f8      	str	r0, [r7, #12]
 8001bb6:	60b9      	str	r1, [r7, #8]
 8001bb8:	4613      	mov	r3, r2
 8001bba:	80fb      	strh	r3, [r7, #6]
		GPIOx(GPIOx),GPIO_Pin(GPIO_Pin)
 8001bbc:	68fb      	ldr	r3, [r7, #12]
 8001bbe:	68ba      	ldr	r2, [r7, #8]
 8001bc0:	601a      	str	r2, [r3, #0]
 8001bc2:	68fb      	ldr	r3, [r7, #12]
 8001bc4:	88fa      	ldrh	r2, [r7, #6]
 8001bc6:	809a      	strh	r2, [r3, #4]
 8001bc8:	68fb      	ldr	r3, [r7, #12]
 8001bca:	2200      	movs	r2, #0
 8001bcc:	609a      	str	r2, [r3, #8]
 8001bce:	68fb      	ldr	r3, [r7, #12]
 8001bd0:	2232      	movs	r2, #50	; 0x32
 8001bd2:	60da      	str	r2, [r3, #12]
{
}
 8001bd4:	68fb      	ldr	r3, [r7, #12]
 8001bd6:	4618      	mov	r0, r3
 8001bd8:	3714      	adds	r7, #20
 8001bda:	46bd      	mov	sp, r7
 8001bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001be0:	4770      	bx	lr

08001be2 <_ZN3LED6Led_OnEv>:

void LED::Led_On()
{
 8001be2:	b580      	push	{r7, lr}
 8001be4:	b082      	sub	sp, #8
 8001be6:	af00      	add	r7, sp, #0
 8001be8:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(GPIOx, GPIO_Pin, GPIO_PIN_SET);
 8001bea:	687b      	ldr	r3, [r7, #4]
 8001bec:	6818      	ldr	r0, [r3, #0]
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	889b      	ldrh	r3, [r3, #4]
 8001bf2:	2201      	movs	r2, #1
 8001bf4:	4619      	mov	r1, r3
 8001bf6:	f001 fdff 	bl	80037f8 <HAL_GPIO_WritePin>

}
 8001bfa:	bf00      	nop
 8001bfc:	3708      	adds	r7, #8
 8001bfe:	46bd      	mov	sp, r7
 8001c00:	bd80      	pop	{r7, pc}

08001c02 <_ZN3LED7Led_OffEv>:
void LED::Led_Off()
{
 8001c02:	b580      	push	{r7, lr}
 8001c04:	b082      	sub	sp, #8
 8001c06:	af00      	add	r7, sp, #0
 8001c08:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(GPIOx, GPIO_Pin, GPIO_PIN_RESET);
 8001c0a:	687b      	ldr	r3, [r7, #4]
 8001c0c:	6818      	ldr	r0, [r3, #0]
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	889b      	ldrh	r3, [r3, #4]
 8001c12:	2200      	movs	r2, #0
 8001c14:	4619      	mov	r1, r3
 8001c16:	f001 fdef 	bl	80037f8 <HAL_GPIO_WritePin>

}
 8001c1a:	bf00      	nop
 8001c1c:	3708      	adds	r7, #8
 8001c1e:	46bd      	mov	sp, r7
 8001c20:	bd80      	pop	{r7, pc}

08001c22 <_ZN3LED9Led_BlinkEv>:
void LED::LED_delay(int num){
	delay = num;
}
void LED::Led_Blink()
{
 8001c22:	b580      	push	{r7, lr}
 8001c24:	b082      	sub	sp, #8
 8001c26:	af00      	add	r7, sp, #0
 8001c28:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(GPIOx,GPIO_Pin);
 8001c2a:	687b      	ldr	r3, [r7, #4]
 8001c2c:	681a      	ldr	r2, [r3, #0]
 8001c2e:	687b      	ldr	r3, [r7, #4]
 8001c30:	889b      	ldrh	r3, [r3, #4]
 8001c32:	4619      	mov	r1, r3
 8001c34:	4610      	mov	r0, r2
 8001c36:	f001 fdf7 	bl	8003828 <HAL_GPIO_TogglePin>
	//delay;

}
 8001c3a:	bf00      	nop
 8001c3c:	3708      	adds	r7, #8
 8001c3e:	46bd      	mov	sp, r7
 8001c40:	bd80      	pop	{r7, pc}

08001c42 <_ZN4_RTCC1EP19__I2C_HandleTypeDefm>:
		304,
		334,
		365
};

_RTC::_RTC(I2C_HandleTypeDef * hi2c, uint32_t devAddr)
 8001c42:	b480      	push	{r7}
 8001c44:	b085      	sub	sp, #20
 8001c46:	af00      	add	r7, sp, #0
 8001c48:	60f8      	str	r0, [r7, #12]
 8001c4a:	60b9      	str	r1, [r7, #8]
 8001c4c:	607a      	str	r2, [r7, #4]
{
  _hi2c = hi2c;
 8001c4e:	68fb      	ldr	r3, [r7, #12]
 8001c50:	68ba      	ldr	r2, [r7, #8]
 8001c52:	601a      	str	r2, [r3, #0]
  _devAddr = devAddr;
 8001c54:	687b      	ldr	r3, [r7, #4]
 8001c56:	b2da      	uxtb	r2, r3
 8001c58:	68fb      	ldr	r3, [r7, #12]
 8001c5a:	711a      	strb	r2, [r3, #4]
}
 8001c5c:	68fb      	ldr	r3, [r7, #12]
 8001c5e:	4618      	mov	r0, r3
 8001c60:	3714      	adds	r7, #20
 8001c62:	46bd      	mov	sp, r7
 8001c64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c68:	4770      	bx	lr

08001c6a <_ZN4_RTC8rtcStartEv>:

void _RTC::rtcStart()
{
 8001c6a:	b580      	push	{r7, lr}
 8001c6c:	b088      	sub	sp, #32
 8001c6e:	af04      	add	r7, sp, #16
 8001c70:	6078      	str	r0, [r7, #4]
	uint8_t sec = 0;
 8001c72:	2300      	movs	r3, #0
 8001c74:	73fb      	strb	r3, [r7, #15]
	HAL_I2C_Mem_Read(_hi2c, _devAddr, 0, 1, &sec, 1, 0xFF);
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	6818      	ldr	r0, [r3, #0]
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	791b      	ldrb	r3, [r3, #4]
 8001c7e:	b299      	uxth	r1, r3
 8001c80:	23ff      	movs	r3, #255	; 0xff
 8001c82:	9302      	str	r3, [sp, #8]
 8001c84:	2301      	movs	r3, #1
 8001c86:	9301      	str	r3, [sp, #4]
 8001c88:	f107 030f 	add.w	r3, r7, #15
 8001c8c:	9300      	str	r3, [sp, #0]
 8001c8e:	2301      	movs	r3, #1
 8001c90:	2200      	movs	r2, #0
 8001c92:	f001 ff9f 	bl	8003bd4 <HAL_I2C_Mem_Read>
	sec &= ~RTC_START_STOP;
 8001c96:	7bfb      	ldrb	r3, [r7, #15]
 8001c98:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8001c9c:	b2db      	uxtb	r3, r3
 8001c9e:	73fb      	strb	r3, [r7, #15]
	HAL_I2C_Mem_Write(_hi2c, _devAddr, 0, 1, &sec, 1, 0xFF);
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	6818      	ldr	r0, [r3, #0]
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	791b      	ldrb	r3, [r3, #4]
 8001ca8:	b299      	uxth	r1, r3
 8001caa:	23ff      	movs	r3, #255	; 0xff
 8001cac:	9302      	str	r3, [sp, #8]
 8001cae:	2301      	movs	r3, #1
 8001cb0:	9301      	str	r3, [sp, #4]
 8001cb2:	f107 030f 	add.w	r3, r7, #15
 8001cb6:	9300      	str	r3, [sp, #0]
 8001cb8:	2301      	movs	r3, #1
 8001cba:	2200      	movs	r2, #0
 8001cbc:	f001 fe76 	bl	80039ac <HAL_I2C_Mem_Write>
}
 8001cc0:	bf00      	nop
 8001cc2:	3710      	adds	r7, #16
 8001cc4:	46bd      	mov	sp, r7
 8001cc6:	bd80      	pop	{r7, pc}

08001cc8 <_ZN4_RTC7rtcStopEv>:

void _RTC::rtcStop()
{
 8001cc8:	b580      	push	{r7, lr}
 8001cca:	b088      	sub	sp, #32
 8001ccc:	af04      	add	r7, sp, #16
 8001cce:	6078      	str	r0, [r7, #4]
	uint8_t sec = 0;
 8001cd0:	2300      	movs	r3, #0
 8001cd2:	73fb      	strb	r3, [r7, #15]
	HAL_I2C_Mem_Read(_hi2c,_devAddr, 0, 1, &sec, 1, 0xFF);
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	6818      	ldr	r0, [r3, #0]
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	791b      	ldrb	r3, [r3, #4]
 8001cdc:	b299      	uxth	r1, r3
 8001cde:	23ff      	movs	r3, #255	; 0xff
 8001ce0:	9302      	str	r3, [sp, #8]
 8001ce2:	2301      	movs	r3, #1
 8001ce4:	9301      	str	r3, [sp, #4]
 8001ce6:	f107 030f 	add.w	r3, r7, #15
 8001cea:	9300      	str	r3, [sp, #0]
 8001cec:	2301      	movs	r3, #1
 8001cee:	2200      	movs	r2, #0
 8001cf0:	f001 ff70 	bl	8003bd4 <HAL_I2C_Mem_Read>
	sec |= RTC_START_STOP;
 8001cf4:	7bfb      	ldrb	r3, [r7, #15]
 8001cf6:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8001cfa:	b2db      	uxtb	r3, r3
 8001cfc:	73fb      	strb	r3, [r7, #15]
	HAL_I2C_Mem_Write(_hi2c, _devAddr, 0, 1, &sec, 1, 0xFF);
 8001cfe:	687b      	ldr	r3, [r7, #4]
 8001d00:	6818      	ldr	r0, [r3, #0]
 8001d02:	687b      	ldr	r3, [r7, #4]
 8001d04:	791b      	ldrb	r3, [r3, #4]
 8001d06:	b299      	uxth	r1, r3
 8001d08:	23ff      	movs	r3, #255	; 0xff
 8001d0a:	9302      	str	r3, [sp, #8]
 8001d0c:	2301      	movs	r3, #1
 8001d0e:	9301      	str	r3, [sp, #4]
 8001d10:	f107 030f 	add.w	r3, r7, #15
 8001d14:	9300      	str	r3, [sp, #0]
 8001d16:	2301      	movs	r3, #1
 8001d18:	2200      	movs	r2, #0
 8001d1a:	f001 fe47 	bl	80039ac <HAL_I2C_Mem_Write>
}
 8001d1e:	bf00      	nop
 8001d20:	3710      	adds	r7, #16
 8001d22:	46bd      	mov	sp, r7
 8001d24:	bd80      	pop	{r7, pc}

08001d26 <_ZL8bcdToInth>:
	HAL_I2C_Mem_Read(_hi2c, _devAddr, 0, 1, &sec, 1, 0xFF);
	return (sec & RTC_START_STOP) == 0;
}

static int bcdToInt(uint8_t bcd)
{
 8001d26:	b480      	push	{r7}
 8001d28:	b083      	sub	sp, #12
 8001d2a:	af00      	add	r7, sp, #0
 8001d2c:	4603      	mov	r3, r0
 8001d2e:	71fb      	strb	r3, [r7, #7]
	return (bcd >> 4) * 10 + (bcd & 0x0F);
 8001d30:	79fb      	ldrb	r3, [r7, #7]
 8001d32:	091b      	lsrs	r3, r3, #4
 8001d34:	b2db      	uxtb	r3, r3
 8001d36:	461a      	mov	r2, r3
 8001d38:	4613      	mov	r3, r2
 8001d3a:	009b      	lsls	r3, r3, #2
 8001d3c:	4413      	add	r3, r2
 8001d3e:	005b      	lsls	r3, r3, #1
 8001d40:	461a      	mov	r2, r3
 8001d42:	79fb      	ldrb	r3, [r7, #7]
 8001d44:	f003 030f 	and.w	r3, r3, #15
 8001d48:	4413      	add	r3, r2
}
 8001d4a:	4618      	mov	r0, r3
 8001d4c:	370c      	adds	r7, #12
 8001d4e:	46bd      	mov	sp, r7
 8001d50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d54:	4770      	bx	lr
	...

08001d58 <_ZL8intToBcdiii>:

static uint8_t intToBcd(int value, int minVal, int maxVal)
{
 8001d58:	b480      	push	{r7}
 8001d5a:	b085      	sub	sp, #20
 8001d5c:	af00      	add	r7, sp, #0
 8001d5e:	60f8      	str	r0, [r7, #12]
 8001d60:	60b9      	str	r1, [r7, #8]
 8001d62:	607a      	str	r2, [r7, #4]
	if (value < minVal || value > maxVal) {
 8001d64:	68fa      	ldr	r2, [r7, #12]
 8001d66:	68bb      	ldr	r3, [r7, #8]
 8001d68:	429a      	cmp	r2, r3
 8001d6a:	db03      	blt.n	8001d74 <_ZL8intToBcdiii+0x1c>
 8001d6c:	68fa      	ldr	r2, [r7, #12]
 8001d6e:	687b      	ldr	r3, [r7, #4]
 8001d70:	429a      	cmp	r2, r3
 8001d72:	dd01      	ble.n	8001d78 <_ZL8intToBcdiii+0x20>
		return 0;
 8001d74:	2300      	movs	r3, #0
 8001d76:	e018      	b.n	8001daa <_ZL8intToBcdiii+0x52>
	}

	return ((value / 10) << 4) | (value % 10);
 8001d78:	68fb      	ldr	r3, [r7, #12]
 8001d7a:	4a0f      	ldr	r2, [pc, #60]	; (8001db8 <_ZL8intToBcdiii+0x60>)
 8001d7c:	fb82 1203 	smull	r1, r2, r2, r3
 8001d80:	1092      	asrs	r2, r2, #2
 8001d82:	17db      	asrs	r3, r3, #31
 8001d84:	1ad3      	subs	r3, r2, r3
 8001d86:	011b      	lsls	r3, r3, #4
 8001d88:	b258      	sxtb	r0, r3
 8001d8a:	68fa      	ldr	r2, [r7, #12]
 8001d8c:	4b0a      	ldr	r3, [pc, #40]	; (8001db8 <_ZL8intToBcdiii+0x60>)
 8001d8e:	fb83 1302 	smull	r1, r3, r3, r2
 8001d92:	1099      	asrs	r1, r3, #2
 8001d94:	17d3      	asrs	r3, r2, #31
 8001d96:	1ac9      	subs	r1, r1, r3
 8001d98:	460b      	mov	r3, r1
 8001d9a:	009b      	lsls	r3, r3, #2
 8001d9c:	440b      	add	r3, r1
 8001d9e:	005b      	lsls	r3, r3, #1
 8001da0:	1ad1      	subs	r1, r2, r3
 8001da2:	b24b      	sxtb	r3, r1
 8001da4:	4303      	orrs	r3, r0
 8001da6:	b25b      	sxtb	r3, r3
 8001da8:	b2db      	uxtb	r3, r3
}
 8001daa:	4618      	mov	r0, r3
 8001dac:	3714      	adds	r7, #20
 8001dae:	46bd      	mov	sp, r7
 8001db0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001db4:	4770      	bx	lr
 8001db6:	bf00      	nop
 8001db8:	66666667 	.word	0x66666667

08001dbc <_ZN4_RTC10rtcGetTimeEv>:

void _RTC::rtcGetTime()
{
 8001dbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001dbe:	b08b      	sub	sp, #44	; 0x2c
 8001dc0:	af04      	add	r7, sp, #16
 8001dc2:	6078      	str	r0, [r7, #4]
	uint8_t buffer[RTC_DATE_TIME_SIZE];
	DateTime * mytime = new DateTime;
 8001dc4:	201c      	movs	r0, #28
 8001dc6:	f00a f8bb 	bl	800bf40 <_Znwj>
 8001dca:	4603      	mov	r3, r0
 8001dcc:	617b      	str	r3, [r7, #20]
	if(HAL_I2C_Mem_Read(_hi2c, _devAddr, 0, 1, buffer, RTC_DATE_TIME_SIZE, 0xFF) == HAL_OK){
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	6818      	ldr	r0, [r3, #0]
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	791b      	ldrb	r3, [r3, #4]
 8001dd6:	b299      	uxth	r1, r3
 8001dd8:	23ff      	movs	r3, #255	; 0xff
 8001dda:	9302      	str	r3, [sp, #8]
 8001ddc:	2307      	movs	r3, #7
 8001dde:	9301      	str	r3, [sp, #4]
 8001de0:	f107 030c 	add.w	r3, r7, #12
 8001de4:	9300      	str	r3, [sp, #0]
 8001de6:	2301      	movs	r3, #1
 8001de8:	2200      	movs	r2, #0
 8001dea:	f001 fef3 	bl	8003bd4 <HAL_I2C_Mem_Read>
 8001dee:	4603      	mov	r3, r0
 8001df0:	2b00      	cmp	r3, #0
 8001df2:	bf0c      	ite	eq
 8001df4:	2301      	moveq	r3, #1
 8001df6:	2300      	movne	r3, #0
 8001df8:	b2db      	uxtb	r3, r3
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	d003      	beq.n	8001e06 <_ZN4_RTC10rtcGetTimeEv+0x4a>
		printf("Read success\r\n");
 8001dfe:	482b      	ldr	r0, [pc, #172]	; (8001eac <_ZN4_RTC10rtcGetTimeEv+0xf0>)
 8001e00:	f025 f8de 	bl	8026fc0 <puts>
 8001e04:	e002      	b.n	8001e0c <_ZN4_RTC10rtcGetTimeEv+0x50>
	}
	else{
		printf("Read failed\r\n");
 8001e06:	482a      	ldr	r0, [pc, #168]	; (8001eb0 <_ZN4_RTC10rtcGetTimeEv+0xf4>)
 8001e08:	f025 f8da 	bl	8026fc0 <puts>
	}

	// remove stop bit if set
	buffer[0] &= ~RTC_START_STOP;
 8001e0c:	7b3b      	ldrb	r3, [r7, #12]
 8001e0e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8001e12:	b2db      	uxtb	r3, r3
 8001e14:	733b      	strb	r3, [r7, #12]
	mytime->sec = bcdToInt(buffer[0]);
 8001e16:	7b3b      	ldrb	r3, [r7, #12]
 8001e18:	4618      	mov	r0, r3
 8001e1a:	f7ff ff84 	bl	8001d26 <_ZL8bcdToInth>
 8001e1e:	4602      	mov	r2, r0
 8001e20:	697b      	ldr	r3, [r7, #20]
 8001e22:	601a      	str	r2, [r3, #0]
	mytime->min = bcdToInt(buffer[1]);
 8001e24:	7b7b      	ldrb	r3, [r7, #13]
 8001e26:	4618      	mov	r0, r3
 8001e28:	f7ff ff7d 	bl	8001d26 <_ZL8bcdToInth>
 8001e2c:	4602      	mov	r2, r0
 8001e2e:	697b      	ldr	r3, [r7, #20]
 8001e30:	605a      	str	r2, [r3, #4]
	mytime->hours = bcdToInt(buffer[2]);
 8001e32:	7bbb      	ldrb	r3, [r7, #14]
 8001e34:	4618      	mov	r0, r3
 8001e36:	f7ff ff76 	bl	8001d26 <_ZL8bcdToInth>
 8001e3a:	4602      	mov	r2, r0
 8001e3c:	697b      	ldr	r3, [r7, #20]
 8001e3e:	609a      	str	r2, [r3, #8]
	mytime->weekDay = buffer[3] & 0x07;
 8001e40:	7bfb      	ldrb	r3, [r7, #15]
 8001e42:	f003 0207 	and.w	r2, r3, #7
 8001e46:	697b      	ldr	r3, [r7, #20]
 8001e48:	60da      	str	r2, [r3, #12]
	mytime->day = bcdToInt(buffer[4]);
 8001e4a:	7c3b      	ldrb	r3, [r7, #16]
 8001e4c:	4618      	mov	r0, r3
 8001e4e:	f7ff ff6a 	bl	8001d26 <_ZL8bcdToInth>
 8001e52:	4602      	mov	r2, r0
 8001e54:	697b      	ldr	r3, [r7, #20]
 8001e56:	611a      	str	r2, [r3, #16]
	mytime->month = bcdToInt(buffer[5]);
 8001e58:	7c7b      	ldrb	r3, [r7, #17]
 8001e5a:	4618      	mov	r0, r3
 8001e5c:	f7ff ff63 	bl	8001d26 <_ZL8bcdToInth>
 8001e60:	4602      	mov	r2, r0
 8001e62:	697b      	ldr	r3, [r7, #20]
 8001e64:	615a      	str	r2, [r3, #20]
	mytime->year = bcdToInt(buffer[6]);
 8001e66:	7cbb      	ldrb	r3, [r7, #18]
 8001e68:	4618      	mov	r0, r3
 8001e6a:	f7ff ff5c 	bl	8001d26 <_ZL8bcdToInth>
 8001e6e:	4602      	mov	r2, r0
 8001e70:	697b      	ldr	r3, [r7, #20]
 8001e72:	619a      	str	r2, [r3, #24]
	printf("Date: %02d:%02d:%02d  %02d %02d/%02d/%02d \r\n ",mytime->hours,mytime->min,mytime->sec,mytime->weekDay,mytime->day,mytime->month,mytime->year);
 8001e74:	697b      	ldr	r3, [r7, #20]
 8001e76:	689c      	ldr	r4, [r3, #8]
 8001e78:	697b      	ldr	r3, [r7, #20]
 8001e7a:	685d      	ldr	r5, [r3, #4]
 8001e7c:	697b      	ldr	r3, [r7, #20]
 8001e7e:	681e      	ldr	r6, [r3, #0]
 8001e80:	697b      	ldr	r3, [r7, #20]
 8001e82:	68db      	ldr	r3, [r3, #12]
 8001e84:	697a      	ldr	r2, [r7, #20]
 8001e86:	6912      	ldr	r2, [r2, #16]
 8001e88:	6979      	ldr	r1, [r7, #20]
 8001e8a:	6949      	ldr	r1, [r1, #20]
 8001e8c:	6978      	ldr	r0, [r7, #20]
 8001e8e:	6980      	ldr	r0, [r0, #24]
 8001e90:	9003      	str	r0, [sp, #12]
 8001e92:	9102      	str	r1, [sp, #8]
 8001e94:	9201      	str	r2, [sp, #4]
 8001e96:	9300      	str	r3, [sp, #0]
 8001e98:	4633      	mov	r3, r6
 8001e9a:	462a      	mov	r2, r5
 8001e9c:	4621      	mov	r1, r4
 8001e9e:	4805      	ldr	r0, [pc, #20]	; (8001eb4 <_ZN4_RTC10rtcGetTimeEv+0xf8>)
 8001ea0:	f024 ffb8 	bl	8026e14 <iprintf>
}
 8001ea4:	bf00      	nop
 8001ea6:	371c      	adds	r7, #28
 8001ea8:	46bd      	mov	sp, r7
 8001eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001eac:	0802e654 	.word	0x0802e654
 8001eb0:	0802e664 	.word	0x0802e664
 8001eb4:	0802e674 	.word	0x0802e674

08001eb8 <_ZN4_RTC10rtcSetTimeEP9DateTime_>:


void _RTC::rtcSetTime(DateTime * _datetime)
{
 8001eb8:	b580      	push	{r7, lr}
 8001eba:	b088      	sub	sp, #32
 8001ebc:	af04      	add	r7, sp, #16
 8001ebe:	6078      	str	r0, [r7, #4]
 8001ec0:	6039      	str	r1, [r7, #0]
	dateTime = _datetime;
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	683a      	ldr	r2, [r7, #0]
 8001ec6:	609a      	str	r2, [r3, #8]
	uint8_t buffer[RTC_DATE_TIME_SIZE];

	buffer[0] = intToBcd(dateTime->sec, 0, 59);
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	689b      	ldr	r3, [r3, #8]
 8001ecc:	681b      	ldr	r3, [r3, #0]
 8001ece:	223b      	movs	r2, #59	; 0x3b
 8001ed0:	2100      	movs	r1, #0
 8001ed2:	4618      	mov	r0, r3
 8001ed4:	f7ff ff40 	bl	8001d58 <_ZL8intToBcdiii>
 8001ed8:	4603      	mov	r3, r0
 8001eda:	723b      	strb	r3, [r7, #8]
	buffer[1] = intToBcd(dateTime->min, 0, 59);
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	689b      	ldr	r3, [r3, #8]
 8001ee0:	685b      	ldr	r3, [r3, #4]
 8001ee2:	223b      	movs	r2, #59	; 0x3b
 8001ee4:	2100      	movs	r1, #0
 8001ee6:	4618      	mov	r0, r3
 8001ee8:	f7ff ff36 	bl	8001d58 <_ZL8intToBcdiii>
 8001eec:	4603      	mov	r3, r0
 8001eee:	727b      	strb	r3, [r7, #9]
	buffer[2] = intToBcd(dateTime->hours, 0, 59);
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	689b      	ldr	r3, [r3, #8]
 8001ef4:	689b      	ldr	r3, [r3, #8]
 8001ef6:	223b      	movs	r2, #59	; 0x3b
 8001ef8:	2100      	movs	r1, #0
 8001efa:	4618      	mov	r0, r3
 8001efc:	f7ff ff2c 	bl	8001d58 <_ZL8intToBcdiii>
 8001f00:	4603      	mov	r3, r0
 8001f02:	72bb      	strb	r3, [r7, #10]
	buffer[3] = dateTime->weekDay < 1 || dateTime->weekDay > 7 ? 0 : dateTime->weekDay;
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	689b      	ldr	r3, [r3, #8]
 8001f08:	68db      	ldr	r3, [r3, #12]
 8001f0a:	2b00      	cmp	r3, #0
 8001f0c:	dd09      	ble.n	8001f22 <_ZN4_RTC10rtcSetTimeEP9DateTime_+0x6a>
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	689b      	ldr	r3, [r3, #8]
 8001f12:	68db      	ldr	r3, [r3, #12]
 8001f14:	2b07      	cmp	r3, #7
 8001f16:	dc04      	bgt.n	8001f22 <_ZN4_RTC10rtcSetTimeEP9DateTime_+0x6a>
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	689b      	ldr	r3, [r3, #8]
 8001f1c:	68db      	ldr	r3, [r3, #12]
 8001f1e:	b2db      	uxtb	r3, r3
 8001f20:	e000      	b.n	8001f24 <_ZN4_RTC10rtcSetTimeEP9DateTime_+0x6c>
 8001f22:	2300      	movs	r3, #0
 8001f24:	72fb      	strb	r3, [r7, #11]
	buffer[4] = intToBcd(dateTime->day, 1, 31);
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	689b      	ldr	r3, [r3, #8]
 8001f2a:	691b      	ldr	r3, [r3, #16]
 8001f2c:	221f      	movs	r2, #31
 8001f2e:	2101      	movs	r1, #1
 8001f30:	4618      	mov	r0, r3
 8001f32:	f7ff ff11 	bl	8001d58 <_ZL8intToBcdiii>
 8001f36:	4603      	mov	r3, r0
 8001f38:	733b      	strb	r3, [r7, #12]
	buffer[5] = intToBcd(dateTime->month, 1, 12);
 8001f3a:	687b      	ldr	r3, [r7, #4]
 8001f3c:	689b      	ldr	r3, [r3, #8]
 8001f3e:	695b      	ldr	r3, [r3, #20]
 8001f40:	220c      	movs	r2, #12
 8001f42:	2101      	movs	r1, #1
 8001f44:	4618      	mov	r0, r3
 8001f46:	f7ff ff07 	bl	8001d58 <_ZL8intToBcdiii>
 8001f4a:	4603      	mov	r3, r0
 8001f4c:	737b      	strb	r3, [r7, #13]
	buffer[6] = intToBcd(dateTime->year, 1, 99);
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	689b      	ldr	r3, [r3, #8]
 8001f52:	699b      	ldr	r3, [r3, #24]
 8001f54:	2263      	movs	r2, #99	; 0x63
 8001f56:	2101      	movs	r1, #1
 8001f58:	4618      	mov	r0, r3
 8001f5a:	f7ff fefd 	bl	8001d58 <_ZL8intToBcdiii>
 8001f5e:	4603      	mov	r3, r0
 8001f60:	73bb      	strb	r3, [r7, #14]

	if(HAL_I2C_Mem_Write(_hi2c, _devAddr, 0, 1, buffer, RTC_DATE_TIME_SIZE, 0xFF) == HAL_OK){
 8001f62:	687b      	ldr	r3, [r7, #4]
 8001f64:	6818      	ldr	r0, [r3, #0]
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	791b      	ldrb	r3, [r3, #4]
 8001f6a:	b299      	uxth	r1, r3
 8001f6c:	23ff      	movs	r3, #255	; 0xff
 8001f6e:	9302      	str	r3, [sp, #8]
 8001f70:	2307      	movs	r3, #7
 8001f72:	9301      	str	r3, [sp, #4]
 8001f74:	f107 0308 	add.w	r3, r7, #8
 8001f78:	9300      	str	r3, [sp, #0]
 8001f7a:	2301      	movs	r3, #1
 8001f7c:	2200      	movs	r2, #0
 8001f7e:	f001 fd15 	bl	80039ac <HAL_I2C_Mem_Write>
 8001f82:	4603      	mov	r3, r0
 8001f84:	2b00      	cmp	r3, #0
 8001f86:	bf0c      	ite	eq
 8001f88:	2301      	moveq	r3, #1
 8001f8a:	2300      	movne	r3, #0
 8001f8c:	b2db      	uxtb	r3, r3
 8001f8e:	2b00      	cmp	r3, #0
 8001f90:	d003      	beq.n	8001f9a <_ZN4_RTC10rtcSetTimeEP9DateTime_+0xe2>
		printf("Write to RTC\r\n");
 8001f92:	4805      	ldr	r0, [pc, #20]	; (8001fa8 <_ZN4_RTC10rtcSetTimeEP9DateTime_+0xf0>)
 8001f94:	f025 f814 	bl	8026fc0 <puts>
	}
	else{
		printf("Write FAILED\r\n");
	}
}
 8001f98:	e002      	b.n	8001fa0 <_ZN4_RTC10rtcSetTimeEP9DateTime_+0xe8>
		printf("Write FAILED\r\n");
 8001f9a:	4804      	ldr	r0, [pc, #16]	; (8001fac <_ZN4_RTC10rtcSetTimeEP9DateTime_+0xf4>)
 8001f9c:	f025 f810 	bl	8026fc0 <puts>
}
 8001fa0:	bf00      	nop
 8001fa2:	3710      	adds	r7, #16
 8001fa4:	46bd      	mov	sp, r7
 8001fa6:	bd80      	pop	{r7, pc}
 8001fa8:	0802e6a4 	.word	0x0802e6a4
 8001fac:	0802e6b4 	.word	0x0802e6b4

08001fb0 <_ZN3BtnC1EP12GPIO_TypeDeft>:
	uint16_t _gpioPin;
	_buttonState _statebut;


public:
	Btn(GPIO_TypeDef* gpioPort, uint16_t gpioPin)
 8001fb0:	b480      	push	{r7}
 8001fb2:	b085      	sub	sp, #20
 8001fb4:	af00      	add	r7, sp, #0
 8001fb6:	60f8      	str	r0, [r7, #12]
 8001fb8:	60b9      	str	r1, [r7, #8]
 8001fba:	4613      	mov	r3, r2
 8001fbc:	80fb      	strh	r3, [r7, #6]
	{
 8001fbe:	68fb      	ldr	r3, [r7, #12]
 8001fc0:	2200      	movs	r2, #0
 8001fc2:	71da      	strb	r2, [r3, #7]
		_gpioPort = gpioPort;
 8001fc4:	68fb      	ldr	r3, [r7, #12]
 8001fc6:	68ba      	ldr	r2, [r7, #8]
 8001fc8:	601a      	str	r2, [r3, #0]
		_gpioPin = gpioPin;
 8001fca:	68fb      	ldr	r3, [r7, #12]
 8001fcc:	88fa      	ldrh	r2, [r7, #6]
 8001fce:	809a      	strh	r2, [r3, #4]
		_statebut = BUTTON_PULLUP;
 8001fd0:	68fb      	ldr	r3, [r7, #12]
 8001fd2:	2200      	movs	r2, #0
 8001fd4:	719a      	strb	r2, [r3, #6]
	}
 8001fd6:	68fb      	ldr	r3, [r7, #12]
 8001fd8:	4618      	mov	r0, r3
 8001fda:	3714      	adds	r7, #20
 8001fdc:	46bd      	mov	sp, r7
 8001fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fe2:	4770      	bx	lr

08001fe4 <_ZN3DhtC1EP12GPIO_TypeDeftP17TIM_HandleTypeDef>:
	double _temperature;
	_alartState _dhtstate;

public:

	Dht(GPIO_TypeDef * gpioPort, uint16_t gpioPin, TIM_HandleTypeDef * timer)
 8001fe4:	b480      	push	{r7}
 8001fe6:	b085      	sub	sp, #20
 8001fe8:	af00      	add	r7, sp, #0
 8001fea:	60f8      	str	r0, [r7, #12]
 8001fec:	60b9      	str	r1, [r7, #8]
 8001fee:	603b      	str	r3, [r7, #0]
 8001ff0:	4613      	mov	r3, r2
 8001ff2:	80fb      	strh	r3, [r7, #6]
	{
		_gpioPort = gpioPort;
 8001ff4:	68fb      	ldr	r3, [r7, #12]
 8001ff6:	68ba      	ldr	r2, [r7, #8]
 8001ff8:	601a      	str	r2, [r3, #0]
		_gpioPin = gpioPin;
 8001ffa:	68fb      	ldr	r3, [r7, #12]
 8001ffc:	88fa      	ldrh	r2, [r7, #6]
 8001ffe:	809a      	strh	r2, [r3, #4]
		_timer = timer;
 8002000:	68fb      	ldr	r3, [r7, #12]
 8002002:	683a      	ldr	r2, [r7, #0]
 8002004:	609a      	str	r2, [r3, #8]
		_temperature = 0.0;
 8002006:	68f9      	ldr	r1, [r7, #12]
 8002008:	f04f 0200 	mov.w	r2, #0
 800200c:	f04f 0300 	mov.w	r3, #0
 8002010:	e9c1 2306 	strd	r2, r3, [r1, #24]
		_dhtstate = TEMP_NORMAL;
 8002014:	68fb      	ldr	r3, [r7, #12]
 8002016:	2201      	movs	r2, #1
 8002018:	f883 2020 	strb.w	r2, [r3, #32]
	}
 800201c:	68fb      	ldr	r3, [r7, #12]
 800201e:	4618      	mov	r0, r3
 8002020:	3714      	adds	r7, #20
 8002022:	46bd      	mov	sp, r7
 8002024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002028:	4770      	bx	lr

0800202a <_ZN9FLASHCOREC1Emmmm>:
	uint32_t _pageAddr;
	uint32_t _nbPages;
	uint32_t _typeProgram;
	THRESHOLDS _thresholds;
public:
	FLASHCORE(uint32_t bank, uint32_t pageAddr, uint32_t nbPage, uint32_t typeProgram)
 800202a:	b480      	push	{r7}
 800202c:	b085      	sub	sp, #20
 800202e:	af00      	add	r7, sp, #0
 8002030:	60f8      	str	r0, [r7, #12]
 8002032:	60b9      	str	r1, [r7, #8]
 8002034:	607a      	str	r2, [r7, #4]
 8002036:	603b      	str	r3, [r7, #0]
	{
		_bank = bank;
 8002038:	68fb      	ldr	r3, [r7, #12]
 800203a:	68ba      	ldr	r2, [r7, #8]
 800203c:	601a      	str	r2, [r3, #0]
		_pageAddr = pageAddr;
 800203e:	68fb      	ldr	r3, [r7, #12]
 8002040:	687a      	ldr	r2, [r7, #4]
 8002042:	605a      	str	r2, [r3, #4]
		_nbPages = nbPage;
 8002044:	68fb      	ldr	r3, [r7, #12]
 8002046:	683a      	ldr	r2, [r7, #0]
 8002048:	609a      	str	r2, [r3, #8]
		_typeProgram = typeProgram;
 800204a:	68fb      	ldr	r3, [r7, #12]
 800204c:	69ba      	ldr	r2, [r7, #24]
 800204e:	60da      	str	r2, [r3, #12]
	}
 8002050:	68fb      	ldr	r3, [r7, #12]
 8002052:	4618      	mov	r0, r3
 8002054:	3714      	adds	r7, #20
 8002056:	46bd      	mov	sp, r7
 8002058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800205c:	4770      	bx	lr

0800205e <_ZN12CliContainerC1Ev>:
	CliContainer(){}
 800205e:	b480      	push	{r7}
 8002060:	b083      	sub	sp, #12
 8002062:	af00      	add	r7, sp, #0
 8002064:	6078      	str	r0, [r7, #4]
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	2200      	movs	r2, #0
 800206a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
 800206e:	687b      	ldr	r3, [r7, #4]
 8002070:	4618      	mov	r0, r3
 8002072:	370c      	adds	r7, #12
 8002074:	46bd      	mov	sp, r7
 8002076:	f85d 7b04 	ldr.w	r7, [sp], #4
 800207a:	4770      	bx	lr

0800207c <_ZN12CliContainerD1Ev>:
	~CliContainer(){}
 800207c:	b480      	push	{r7}
 800207e:	b083      	sub	sp, #12
 8002080:	af00      	add	r7, sp, #0
 8002082:	6078      	str	r0, [r7, #4]
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	4618      	mov	r0, r3
 8002088:	370c      	adds	r7, #12
 800208a:	46bd      	mov	sp, r7
 800208c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002090:	4770      	bx	lr
	...

08002094 <managerInit>:




void managerInit()
{
 8002094:	b580      	push	{r7, lr}
 8002096:	af00      	add	r7, sp, #0
	HAL_TIM_Base_Init(&htim6);
 8002098:	4805      	ldr	r0, [pc, #20]	; (80020b0 <managerInit+0x1c>)
 800209a:	f004 fa7f 	bl	800659c <HAL_TIM_Base_Init>
	HAL_TIM_Base_Start_IT(&htim3);
 800209e:	4805      	ldr	r0, [pc, #20]	; (80020b4 <managerInit+0x20>)
 80020a0:	f004 fb64 	bl	800676c <HAL_TIM_Base_Start_IT>
	container.initCLIcontainer();
 80020a4:	4804      	ldr	r0, [pc, #16]	; (80020b8 <managerInit+0x24>)
 80020a6:	f7ff f9fd 	bl	80014a4 <_ZN12CliContainer16initCLIcontainerEv>
	//thresholdsFlash->printThresHolds();

}
 80020aa:	bf00      	nop
 80020ac:	bd80      	pop	{r7, pc}
 80020ae:	bf00      	nop
 80020b0:	200005ac 	.word	0x200005ac
 80020b4:	20000560 	.word	0x20000560
 80020b8:	20000348 	.word	0x20000348

080020bc <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80020bc:	b580      	push	{r7, lr}
 80020be:	b084      	sub	sp, #16
 80020c0:	af00      	add	r7, sp, #0
 80020c2:	4603      	mov	r3, r0
 80020c4:	80fb      	strh	r3, [r7, #6]
	GPIOB -> MODER &= ~(GPIO_MODER_MODER1);
 80020c6:	4b15      	ldr	r3, [pc, #84]	; (800211c <HAL_GPIO_EXTI_Callback+0x60>)
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	4a14      	ldr	r2, [pc, #80]	; (800211c <HAL_GPIO_EXTI_Callback+0x60>)
 80020cc:	f023 030c 	bic.w	r3, r3, #12
 80020d0:	6013      	str	r3, [r2, #0]
	GPIOB -> PUPDR &= ~(GPIO_PUPDR_PUPDR1);
 80020d2:	4b12      	ldr	r3, [pc, #72]	; (800211c <HAL_GPIO_EXTI_Callback+0x60>)
 80020d4:	68db      	ldr	r3, [r3, #12]
 80020d6:	4a11      	ldr	r2, [pc, #68]	; (800211c <HAL_GPIO_EXTI_Callback+0x60>)
 80020d8:	f023 030c 	bic.w	r3, r3, #12
 80020dc:	60d3      	str	r3, [r2, #12]
	int counter =0;
 80020de:	2300      	movs	r3, #0
 80020e0:	60fb      	str	r3, [r7, #12]

	if((GPIOA -> IDR & (GPIO_IDR_ID1)) && counter == 0){
 80020e2:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80020e6:	691b      	ldr	r3, [r3, #16]
 80020e8:	f003 0302 	and.w	r3, r3, #2
 80020ec:	2b00      	cmp	r3, #0
 80020ee:	d004      	beq.n	80020fa <HAL_GPIO_EXTI_Callback+0x3e>
 80020f0:	68fb      	ldr	r3, [r7, #12]
 80020f2:	2b00      	cmp	r3, #0
 80020f4:	d101      	bne.n	80020fa <HAL_GPIO_EXTI_Callback+0x3e>
 80020f6:	2301      	movs	r3, #1
 80020f8:	e000      	b.n	80020fc <HAL_GPIO_EXTI_Callback+0x40>
 80020fa:	2300      	movs	r3, #0
 80020fc:	2b00      	cmp	r3, #0
 80020fe:	d008      	beq.n	8002112 <HAL_GPIO_EXTI_Callback+0x56>
		dht.setState(TEMP_NO_BUZZER); // CHENGE DHT STAGE
 8002100:	2104      	movs	r1, #4
 8002102:	4807      	ldr	r0, [pc, #28]	; (8002120 <HAL_GPIO_EXTI_Callback+0x64>)
 8002104:	f7ff fd2b 	bl	8001b5e <_ZN3Dht8setStateE11_alartState>
		buzzer.buzzerStopPlay();	// STOP BUZZER
 8002108:	4806      	ldr	r0, [pc, #24]	; (8002124 <HAL_GPIO_EXTI_Callback+0x68>)
 800210a:	f7fe ffb3 	bl	8001074 <_ZN6BUZZER14buzzerStopPlayEv>
		counter = 1;
 800210e:	2301      	movs	r3, #1
 8002110:	60fb      	str	r3, [r7, #12]

	}

}
 8002112:	bf00      	nop
 8002114:	3710      	adds	r7, #16
 8002116:	46bd      	mov	sp, r7
 8002118:	bd80      	pop	{r7, pc}
 800211a:	bf00      	nop
 800211c:	48000400 	.word	0x48000400
 8002120:	20000320 	.word	0x20000320
 8002124:	20000414 	.word	0x20000414

08002128 <StartcommTask>:

// this task will start the cli option for the user.
extern "C" void StartcommTask(void *argument)
{
 8002128:	b580      	push	{r7, lr}
 800212a:	b082      	sub	sp, #8
 800212c:	af00      	add	r7, sp, #0
 800212e:	6078      	str	r0, [r7, #4]
	/* Infinite loop */
		for (;;) {

			if (commTask()) {
 8002130:	f000 f976 	bl	8002420 <commTask>
 8002134:	4603      	mov	r3, r0
 8002136:	2b00      	cmp	r3, #0
 8002138:	bf14      	ite	ne
 800213a:	2301      	movne	r3, #1
 800213c:	2300      	moveq	r3, #0
 800213e:	b2db      	uxtb	r3, r3
 8002140:	2b00      	cmp	r3, #0
 8002142:	d0f5      	beq.n	8002130 <StartcommTask+0x8>
				printf("Set date and time");
 8002144:	4802      	ldr	r0, [pc, #8]	; (8002150 <StartcommTask+0x28>)
 8002146:	f024 fe65 	bl	8026e14 <iprintf>
				handleCommand();
 800214a:	f000 f9ed 	bl	8002528 <handleCommand>
			if (commTask()) {
 800214e:	e7ef      	b.n	8002130 <StartcommTask+0x8>
 8002150:	0802e6c4 	.word	0x0802e6c4

08002154 <StartDht>:
		}
		osThreadTerminate(osThreadGetId());
}
// this task measure ever one second the temp.
extern "C" void StartDht(void *argument)
{
 8002154:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002156:	b083      	sub	sp, #12
 8002158:	af00      	add	r7, sp, #0
 800215a:	6078      	str	r0, [r7, #4]
	while(1)
	{
		// The temperature reading failed
		if(dht.Dht_read() != HAL_OK)
 800215c:	483c      	ldr	r0, [pc, #240]	; (8002250 <StartDht+0xfc>)
 800215e:	f7ff fbf7 	bl	8001950 <_ZN3Dht8Dht_readEv>
 8002162:	4603      	mov	r3, r0
 8002164:	2b00      	cmp	r3, #0
 8002166:	bf14      	ite	ne
 8002168:	2301      	movne	r3, #1
 800216a:	2300      	moveq	r3, #0
 800216c:	b2db      	uxtb	r3, r3
 800216e:	2b00      	cmp	r3, #0
 8002170:	d007      	beq.n	8002182 <StartDht+0x2e>
		{
			dht.setState(TEMP_ERROR);
 8002172:	2100      	movs	r1, #0
 8002174:	4836      	ldr	r0, [pc, #216]	; (8002250 <StartDht+0xfc>)
 8002176:	f7ff fcf2 	bl	8001b5e <_ZN3Dht8setStateE11_alartState>
			printf("Error to read temperature\r\n");
 800217a:	4836      	ldr	r0, [pc, #216]	; (8002254 <StartDht+0x100>)
 800217c:	f024 ff20 	bl	8026fc0 <puts>
 8002180:	e060      	b.n	8002244 <StartDht+0xf0>
		else{
			/*change temperature sensor state
			  change  led state
			  change button
			  threshold  write into the log file*/
			if (dht.getTemp() >= thresholdsFlash.getCriticalThreshold()) {
 8002182:	4833      	ldr	r0, [pc, #204]	; (8002250 <StartDht+0xfc>)
 8002184:	f7ff fccc 	bl	8001b20 <_ZN3Dht7getTempEv>
 8002188:	ec55 4b10 	vmov	r4, r5, d0
 800218c:	4832      	ldr	r0, [pc, #200]	; (8002258 <StartDht+0x104>)
 800218e:	f7ff fd02 	bl	8001b96 <_ZN9FLASHCORE20getCriticalThresholdEv>
 8002192:	4603      	mov	r3, r0
 8002194:	4618      	mov	r0, r3
 8002196:	f7fe f9cf 	bl	8000538 <__aeabi_i2d>
 800219a:	4602      	mov	r2, r0
 800219c:	460b      	mov	r3, r1
 800219e:	2101      	movs	r1, #1
 80021a0:	460e      	mov	r6, r1
 80021a2:	4620      	mov	r0, r4
 80021a4:	4629      	mov	r1, r5
 80021a6:	f7fe fcb7 	bl	8000b18 <__aeabi_dcmpge>
 80021aa:	4603      	mov	r3, r0
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d101      	bne.n	80021b4 <StartDht+0x60>
 80021b0:	2300      	movs	r3, #0
 80021b2:	461e      	mov	r6, r3
 80021b4:	b2f3      	uxtb	r3, r6
 80021b6:	2b00      	cmp	r3, #0
 80021b8:	d00b      	beq.n	80021d2 <StartDht+0x7e>
						dht.setState(TEMP_CRITICAL);
 80021ba:	2103      	movs	r1, #3
 80021bc:	4824      	ldr	r0, [pc, #144]	; (8002250 <StartDht+0xfc>)
 80021be:	f7ff fcce 	bl	8001b5e <_ZN3Dht8setStateE11_alartState>

						button.setState(BUTTON_PULLUP);
 80021c2:	2100      	movs	r1, #0
 80021c4:	4825      	ldr	r0, [pc, #148]	; (800225c <StartDht+0x108>)
 80021c6:	f7fe ff21 	bl	800100c <_ZN3Btn8setStateE12_buttonState>
						//ledred.Led_Blink();
						buzzer.buzzerStartPlay();
 80021ca:	4825      	ldr	r0, [pc, #148]	; (8002260 <StartDht+0x10c>)
 80021cc:	f7fe ff3a 	bl	8001044 <_ZN6BUZZER15buzzerStartPlayEv>
 80021d0:	e038      	b.n	8002244 <StartDht+0xf0>
						//printf("temp is %.2f \r\n", dht.getTemp());
			}
			else if(dht.getTemp() >= thresholdsFlash.getWarningThreshold()){
 80021d2:	481f      	ldr	r0, [pc, #124]	; (8002250 <StartDht+0xfc>)
 80021d4:	f7ff fca4 	bl	8001b20 <_ZN3Dht7getTempEv>
 80021d8:	ec55 4b10 	vmov	r4, r5, d0
 80021dc:	481e      	ldr	r0, [pc, #120]	; (8002258 <StartDht+0x104>)
 80021de:	f7ff fcce 	bl	8001b7e <_ZN9FLASHCORE19getWarningThresholdEv>
 80021e2:	4603      	mov	r3, r0
 80021e4:	4618      	mov	r0, r3
 80021e6:	f7fe f9a7 	bl	8000538 <__aeabi_i2d>
 80021ea:	4602      	mov	r2, r0
 80021ec:	460b      	mov	r3, r1
 80021ee:	2101      	movs	r1, #1
 80021f0:	460e      	mov	r6, r1
 80021f2:	4620      	mov	r0, r4
 80021f4:	4629      	mov	r1, r5
 80021f6:	f7fe fc8f 	bl	8000b18 <__aeabi_dcmpge>
 80021fa:	4603      	mov	r3, r0
 80021fc:	2b00      	cmp	r3, #0
 80021fe:	d101      	bne.n	8002204 <StartDht+0xb0>
 8002200:	2300      	movs	r3, #0
 8002202:	461e      	mov	r6, r3
 8002204:	b2f3      	uxtb	r3, r6
 8002206:	2b00      	cmp	r3, #0
 8002208:	d00e      	beq.n	8002228 <StartDht+0xd4>
						dht.setState(TEMP_WARNING);
 800220a:	2102      	movs	r1, #2
 800220c:	4810      	ldr	r0, [pc, #64]	; (8002250 <StartDht+0xfc>)
 800220e:	f7ff fca6 	bl	8001b5e <_ZN3Dht8setStateE11_alartState>
						button.setState(BUTTON_PULLDOWN);
 8002212:	2101      	movs	r1, #1
 8002214:	4811      	ldr	r0, [pc, #68]	; (800225c <StartDht+0x108>)
 8002216:	f7fe fef9 	bl	800100c <_ZN3Btn8setStateE12_buttonState>
						ledred.Led_On();
 800221a:	4812      	ldr	r0, [pc, #72]	; (8002264 <StartDht+0x110>)
 800221c:	f7ff fce1 	bl	8001be2 <_ZN3LED6Led_OnEv>
						buzzer.buzzerStopPlay();
 8002220:	480f      	ldr	r0, [pc, #60]	; (8002260 <StartDht+0x10c>)
 8002222:	f7fe ff27 	bl	8001074 <_ZN6BUZZER14buzzerStopPlayEv>
 8002226:	e00d      	b.n	8002244 <StartDht+0xf0>


			}
			else {
				dht.setState(TEMP_NORMAL);
 8002228:	2101      	movs	r1, #1
 800222a:	4809      	ldr	r0, [pc, #36]	; (8002250 <StartDht+0xfc>)
 800222c:	f7ff fc97 	bl	8001b5e <_ZN3Dht8setStateE11_alartState>
				button.setState(BUTTON_PULLDOWN);
 8002230:	2101      	movs	r1, #1
 8002232:	480a      	ldr	r0, [pc, #40]	; (800225c <StartDht+0x108>)
 8002234:	f7fe feea 	bl	800100c <_ZN3Btn8setStateE12_buttonState>
				buzzer.buzzerStopPlay();
 8002238:	4809      	ldr	r0, [pc, #36]	; (8002260 <StartDht+0x10c>)
 800223a:	f7fe ff1b 	bl	8001074 <_ZN6BUZZER14buzzerStopPlayEv>
				ledblue.Led_On();
 800223e:	480a      	ldr	r0, [pc, #40]	; (8002268 <StartDht+0x114>)
 8002240:	f7ff fccf 	bl	8001be2 <_ZN3LED6Led_OnEv>
			}
		}
		osDelay(ONE_SECOND);
 8002244:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002248:	f007 f9da 	bl	8009600 <osDelay>
		if(dht.Dht_read() != HAL_OK)
 800224c:	e786      	b.n	800215c <StartDht+0x8>
 800224e:	bf00      	nop
 8002250:	20000320 	.word	0x20000320
 8002254:	0802e6d8 	.word	0x0802e6d8
 8002258:	20000418 	.word	0x20000418
 800225c:	20000318 	.word	0x20000318
 8002260:	20000414 	.word	0x20000414
 8002264:	20000400 	.word	0x20000400
 8002268:	200003ec 	.word	0x200003ec

0800226c <StartLedTask>:
	osThreadTerminate(osThreadGetId());
}


extern "C" void StartLedTask(void *argument)
{
 800226c:	b580      	push	{r7, lr}
 800226e:	b082      	sub	sp, #8
 8002270:	af00      	add	r7, sp, #0
 8002272:	6078      	str	r0, [r7, #4]
	for (;;) {
		if(dht.getState() == TEMP_CRITICAL){
 8002274:	4809      	ldr	r0, [pc, #36]	; (800229c <StartLedTask+0x30>)
 8002276:	f7ff fc65 	bl	8001b44 <_ZN3Dht8getStateEv>
 800227a:	4603      	mov	r3, r0
 800227c:	2b03      	cmp	r3, #3
 800227e:	bf0c      	ite	eq
 8002280:	2301      	moveq	r3, #1
 8002282:	2300      	movne	r3, #0
 8002284:	b2db      	uxtb	r3, r3
 8002286:	2b00      	cmp	r3, #0
 8002288:	d0f4      	beq.n	8002274 <StartLedTask+0x8>
			ledred.Led_Blink();
 800228a:	4805      	ldr	r0, [pc, #20]	; (80022a0 <StartLedTask+0x34>)
 800228c:	f7ff fcc9 	bl	8001c22 <_ZN3LED9Led_BlinkEv>
			osDelay(500);
 8002290:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002294:	f007 f9b4 	bl	8009600 <osDelay>
		if(dht.getState() == TEMP_CRITICAL){
 8002298:	e7ec      	b.n	8002274 <StartLedTask+0x8>
 800229a:	bf00      	nop
 800229c:	20000320 	.word	0x20000320
 80022a0:	20000400 	.word	0x20000400

080022a4 <StartFlashTask>:
	osThreadTerminate(osThreadGetId());

}
// this task will write the thresholds into the file.
extern "C" void StartFlashTask(void *argument)
{
 80022a4:	b580      	push	{r7, lr}
 80022a6:	b082      	sub	sp, #8
 80022a8:	af00      	add	r7, sp, #0
 80022aa:	6078      	str	r0, [r7, #4]
	for(;;){
		if (dht.getState() == TEMP_WARNING){
 80022ac:	4802      	ldr	r0, [pc, #8]	; (80022b8 <StartFlashTask+0x14>)
 80022ae:	f7ff fc49 	bl	8001b44 <_ZN3Dht8getStateEv>
 80022b2:	4603      	mov	r3, r0
 80022b4:	2b02      	cmp	r3, #2
 80022b6:	e7f9      	b.n	80022ac <StartFlashTask+0x8>
 80022b8:	20000320 	.word	0x20000320

080022bc <_Z41__static_initialization_and_destruction_0ii>:

		}

	}
	osThreadTerminate(osThreadGetId());
}
 80022bc:	b580      	push	{r7, lr}
 80022be:	b084      	sub	sp, #16
 80022c0:	af02      	add	r7, sp, #8
 80022c2:	6078      	str	r0, [r7, #4]
 80022c4:	6039      	str	r1, [r7, #0]
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	2b01      	cmp	r3, #1
 80022ca:	d136      	bne.n	800233a <_Z41__static_initialization_and_destruction_0ii+0x7e>
 80022cc:	683b      	ldr	r3, [r7, #0]
 80022ce:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80022d2:	4293      	cmp	r3, r2
 80022d4:	d131      	bne.n	800233a <_Z41__static_initialization_and_destruction_0ii+0x7e>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
 80022d6:	4822      	ldr	r0, [pc, #136]	; (8002360 <_Z41__static_initialization_and_destruction_0ii+0xa4>)
 80022d8:	f009 fe80 	bl	800bfdc <_ZNSt8ios_base4InitC1Ev>
Btn button = Btn(SW1_GPIO_Port, SW1_Pin);
 80022dc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80022e0:	f04f 4190 	mov.w	r1, #1207959552	; 0x48000000
 80022e4:	481f      	ldr	r0, [pc, #124]	; (8002364 <_Z41__static_initialization_and_destruction_0ii+0xa8>)
 80022e6:	f7ff fe63 	bl	8001fb0 <_ZN3BtnC1EP12GPIO_TypeDeft>
Dht dht = Dht(DHT_GPIO_Port, DHT_Pin, &htim6);
 80022ea:	4b1f      	ldr	r3, [pc, #124]	; (8002368 <_Z41__static_initialization_and_destruction_0ii+0xac>)
 80022ec:	2220      	movs	r2, #32
 80022ee:	491f      	ldr	r1, [pc, #124]	; (800236c <_Z41__static_initialization_and_destruction_0ii+0xb0>)
 80022f0:	481f      	ldr	r0, [pc, #124]	; (8002370 <_Z41__static_initialization_and_destruction_0ii+0xb4>)
 80022f2:	f7ff fe77 	bl	8001fe4 <_ZN3DhtC1EP12GPIO_TypeDeftP17TIM_HandleTypeDef>
CliContainer container = CliContainer();
 80022f6:	481f      	ldr	r0, [pc, #124]	; (8002374 <_Z41__static_initialization_and_destruction_0ii+0xb8>)
 80022f8:	f7ff feb1 	bl	800205e <_ZN12CliContainerC1Ev>
LED ledblue = LED(ledB_GPIO_Port, ledB_Pin);
 80022fc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002300:	f04f 4190 	mov.w	r1, #1207959552	; 0x48000000
 8002304:	481c      	ldr	r0, [pc, #112]	; (8002378 <_Z41__static_initialization_and_destruction_0ii+0xbc>)
 8002306:	f7ff fc52 	bl	8001bae <_ZN3LEDC1EP12GPIO_TypeDeft>
LED ledred = LED(ledR_GPIO_Port, ledR_Pin);
 800230a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800230e:	f04f 4190 	mov.w	r1, #1207959552	; 0x48000000
 8002312:	481a      	ldr	r0, [pc, #104]	; (800237c <_Z41__static_initialization_and_destruction_0ii+0xc0>)
 8002314:	f7ff fc4b 	bl	8001bae <_ZN3LEDC1EP12GPIO_TypeDeft>
BUZZER buzzer = BUZZER(&htim3);
 8002318:	4919      	ldr	r1, [pc, #100]	; (8002380 <_Z41__static_initialization_and_destruction_0ii+0xc4>)
 800231a:	481a      	ldr	r0, [pc, #104]	; (8002384 <_Z41__static_initialization_and_destruction_0ii+0xc8>)
 800231c:	f7fe fe85 	bl	800102a <_ZN6BUZZERC1EP17TIM_HandleTypeDef>
FLASHCORE thresholdsFlash = FLASHCORE (DATA_WAITING, THRESHOLDS_PAGE_256, 1, FLASH_TYPEPROGRAM_DOUBLEWORD);
 8002320:	2300      	movs	r3, #0
 8002322:	9300      	str	r3, [sp, #0]
 8002324:	2301      	movs	r3, #1
 8002326:	4a18      	ldr	r2, [pc, #96]	; (8002388 <_Z41__static_initialization_and_destruction_0ii+0xcc>)
 8002328:	2101      	movs	r1, #1
 800232a:	4818      	ldr	r0, [pc, #96]	; (800238c <_Z41__static_initialization_and_destruction_0ii+0xd0>)
 800232c:	f7ff fe7d 	bl	800202a <_ZN9FLASHCOREC1Emmmm>
_RTC rtc = _RTC(&hi2c1,0xD0);
 8002330:	22d0      	movs	r2, #208	; 0xd0
 8002332:	4917      	ldr	r1, [pc, #92]	; (8002390 <_Z41__static_initialization_and_destruction_0ii+0xd4>)
 8002334:	4817      	ldr	r0, [pc, #92]	; (8002394 <_Z41__static_initialization_and_destruction_0ii+0xd8>)
 8002336:	f7ff fc84 	bl	8001c42 <_ZN4_RTCC1EP19__I2C_HandleTypeDefm>
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	2b00      	cmp	r3, #0
 800233e:	d10a      	bne.n	8002356 <_Z41__static_initialization_and_destruction_0ii+0x9a>
 8002340:	683b      	ldr	r3, [r7, #0]
 8002342:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002346:	4293      	cmp	r3, r2
 8002348:	d105      	bne.n	8002356 <_Z41__static_initialization_and_destruction_0ii+0x9a>
CliContainer container = CliContainer();
 800234a:	480a      	ldr	r0, [pc, #40]	; (8002374 <_Z41__static_initialization_and_destruction_0ii+0xb8>)
 800234c:	f7ff fe96 	bl	800207c <_ZN12CliContainerD1Ev>
 8002350:	4803      	ldr	r0, [pc, #12]	; (8002360 <_Z41__static_initialization_and_destruction_0ii+0xa4>)
 8002352:	f009 ff77 	bl	800c244 <_ZNSt8ios_base4InitD1Ev>
}
 8002356:	bf00      	nop
 8002358:	3708      	adds	r7, #8
 800235a:	46bd      	mov	sp, r7
 800235c:	bd80      	pop	{r7, pc}
 800235e:	bf00      	nop
 8002360:	20000314 	.word	0x20000314
 8002364:	20000318 	.word	0x20000318
 8002368:	200005ac 	.word	0x200005ac
 800236c:	48000400 	.word	0x48000400
 8002370:	20000320 	.word	0x20000320
 8002374:	20000348 	.word	0x20000348
 8002378:	200003ec 	.word	0x200003ec
 800237c:	20000400 	.word	0x20000400
 8002380:	20000560 	.word	0x20000560
 8002384:	20000414 	.word	0x20000414
 8002388:	08080000 	.word	0x08080000
 800238c:	20000418 	.word	0x20000418
 8002390:	200004a8 	.word	0x200004a8
 8002394:	20000430 	.word	0x20000430

08002398 <_GLOBAL__sub_I_button>:
 8002398:	b580      	push	{r7, lr}
 800239a:	af00      	add	r7, sp, #0
 800239c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80023a0:	2001      	movs	r0, #1
 80023a2:	f7ff ff8b 	bl	80022bc <_Z41__static_initialization_and_destruction_0ii>
 80023a6:	bd80      	pop	{r7, pc}

080023a8 <_GLOBAL__sub_D_button>:
 80023a8:	b580      	push	{r7, lr}
 80023aa:	af00      	add	r7, sp, #0
 80023ac:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80023b0:	2000      	movs	r0, #0
 80023b2:	f7ff ff83 	bl	80022bc <_Z41__static_initialization_and_destruction_0ii>
 80023b6:	bd80      	pop	{r7, pc}

080023b8 <_ZN12CliContainer9doCommandEPcS0_>:
	void doCommand( char * cmd,  char * param){
 80023b8:	b580      	push	{r7, lr}
 80023ba:	b086      	sub	sp, #24
 80023bc:	af00      	add	r7, sp, #0
 80023be:	60f8      	str	r0, [r7, #12]
 80023c0:	60b9      	str	r1, [r7, #8]
 80023c2:	607a      	str	r2, [r7, #4]
		for (int j = 0; j <funcounter; j++) {
 80023c4:	2300      	movs	r3, #0
 80023c6:	617b      	str	r3, [r7, #20]
 80023c8:	68fb      	ldr	r3, [r7, #12]
 80023ca:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80023ce:	697a      	ldr	r2, [r7, #20]
 80023d0:	429a      	cmp	r2, r3
 80023d2:	da1d      	bge.n	8002410 <_ZN12CliContainer9doCommandEPcS0_+0x58>
			if (strcmp(cmd,commands[j].CommandName) == 0) {
 80023d4:	68fb      	ldr	r3, [r7, #12]
 80023d6:	697a      	ldr	r2, [r7, #20]
 80023d8:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
 80023dc:	4619      	mov	r1, r3
 80023de:	68b8      	ldr	r0, [r7, #8]
 80023e0:	f7fd ff46 	bl	8000270 <strcmp>
 80023e4:	4603      	mov	r3, r0
 80023e6:	2b00      	cmp	r3, #0
 80023e8:	d10e      	bne.n	8002408 <_ZN12CliContainer9doCommandEPcS0_+0x50>
				commands[j].command->doCommand(param);
 80023ea:	68fa      	ldr	r2, [r7, #12]
 80023ec:	697b      	ldr	r3, [r7, #20]
 80023ee:	00db      	lsls	r3, r3, #3
 80023f0:	4413      	add	r3, r2
 80023f2:	6858      	ldr	r0, [r3, #4]
 80023f4:	68fa      	ldr	r2, [r7, #12]
 80023f6:	697b      	ldr	r3, [r7, #20]
 80023f8:	00db      	lsls	r3, r3, #3
 80023fa:	4413      	add	r3, r2
 80023fc:	685b      	ldr	r3, [r3, #4]
 80023fe:	681b      	ldr	r3, [r3, #0]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	6879      	ldr	r1, [r7, #4]
 8002404:	4798      	blx	r3
				return;
 8002406:	e006      	b.n	8002416 <_ZN12CliContainer9doCommandEPcS0_+0x5e>
		for (int j = 0; j <funcounter; j++) {
 8002408:	697b      	ldr	r3, [r7, #20]
 800240a:	3301      	adds	r3, #1
 800240c:	617b      	str	r3, [r7, #20]
 800240e:	e7db      	b.n	80023c8 <_ZN12CliContainer9doCommandEPcS0_+0x10>
		printf("Invalid command\r\n");
 8002410:	4802      	ldr	r0, [pc, #8]	; (800241c <_ZN12CliContainer9doCommandEPcS0_+0x64>)
 8002412:	f024 fdd5 	bl	8026fc0 <puts>
	}
 8002416:	3718      	adds	r7, #24
 8002418:	46bd      	mov	sp, r7
 800241a:	bd80      	pop	{r7, pc}
 800241c:	0802e6f4 	.word	0x0802e6f4

08002420 <commTask>:
int cmdcount = 0;
int cmdprint = 0;
extern CliContainer container;
extern UART_HandleTypeDef huart2;

int commTask() {
 8002420:	b580      	push	{r7, lr}
 8002422:	b082      	sub	sp, #8
 8002424:	af00      	add	r7, sp, #0
	uint8_t ch;

	HAL_StatusTypeDef Status = HAL_UART_Receive(&huart2, &ch, 1, 10);
 8002426:	1db9      	adds	r1, r7, #6
 8002428:	230a      	movs	r3, #10
 800242a:	2201      	movs	r2, #1
 800242c:	4839      	ldr	r0, [pc, #228]	; (8002514 <commTask+0xf4>)
 800242e:	f005 fce9 	bl	8007e04 <HAL_UART_Receive>
 8002432:	4603      	mov	r3, r0
 8002434:	71fb      	strb	r3, [r7, #7]
	if (Status != HAL_OK) {
 8002436:	79fb      	ldrb	r3, [r7, #7]
 8002438:	2b00      	cmp	r3, #0
 800243a:	d025      	beq.n	8002488 <commTask+0x68>
		if ((huart2.Instance->ISR & USART_ISR_ORE) != 0) {
 800243c:	4b35      	ldr	r3, [pc, #212]	; (8002514 <commTask+0xf4>)
 800243e:	681b      	ldr	r3, [r3, #0]
 8002440:	69db      	ldr	r3, [r3, #28]
 8002442:	f003 0308 	and.w	r3, r3, #8
 8002446:	2b00      	cmp	r3, #0
 8002448:	bf14      	ite	ne
 800244a:	2301      	movne	r3, #1
 800244c:	2300      	moveq	r3, #0
 800244e:	b2db      	uxtb	r3, r3
 8002450:	2b00      	cmp	r3, #0
 8002452:	d003      	beq.n	800245c <commTask+0x3c>
			__HAL_UART_CLEAR_OREFLAG(&huart2);
 8002454:	4b2f      	ldr	r3, [pc, #188]	; (8002514 <commTask+0xf4>)
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	2208      	movs	r2, #8
 800245a:	621a      	str	r2, [r3, #32]
		}

		// here we have a time to print the command
		while (cmdprint < cmdcount) {
 800245c:	4b2e      	ldr	r3, [pc, #184]	; (8002518 <commTask+0xf8>)
 800245e:	681a      	ldr	r2, [r3, #0]
 8002460:	4b2e      	ldr	r3, [pc, #184]	; (800251c <commTask+0xfc>)
 8002462:	681b      	ldr	r3, [r3, #0]
 8002464:	429a      	cmp	r2, r3
 8002466:	da0d      	bge.n	8002484 <commTask+0x64>
			HAL_UART_Transmit(&huart2, &cmdbuffer[cmdprint++], 1, 0xFFFF);
 8002468:	4b2b      	ldr	r3, [pc, #172]	; (8002518 <commTask+0xf8>)
 800246a:	681b      	ldr	r3, [r3, #0]
 800246c:	1c5a      	adds	r2, r3, #1
 800246e:	492a      	ldr	r1, [pc, #168]	; (8002518 <commTask+0xf8>)
 8002470:	600a      	str	r2, [r1, #0]
 8002472:	4a2b      	ldr	r2, [pc, #172]	; (8002520 <commTask+0x100>)
 8002474:	1899      	adds	r1, r3, r2
 8002476:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800247a:	2201      	movs	r2, #1
 800247c:	4825      	ldr	r0, [pc, #148]	; (8002514 <commTask+0xf4>)
 800247e:	f005 fc2d 	bl	8007cdc <HAL_UART_Transmit>
		while (cmdprint < cmdcount) {
 8002482:	e7eb      	b.n	800245c <commTask+0x3c>
		}

		return 0;
 8002484:	2300      	movs	r3, #0
 8002486:	e040      	b.n	800250a <commTask+0xea>
	}

	if (ch != '\r' && ch != '\n') {
 8002488:	79bb      	ldrb	r3, [r7, #6]
 800248a:	2b0d      	cmp	r3, #13
 800248c:	d016      	beq.n	80024bc <commTask+0x9c>
 800248e:	79bb      	ldrb	r3, [r7, #6]
 8002490:	2b0a      	cmp	r3, #10
 8002492:	d013      	beq.n	80024bc <commTask+0x9c>
		//HAL_UART_Transmit(&huart2, &ch, 1, 0xFFFF);

		if (cmdcount >= MAX_BUFFER_LENGTH) {
 8002494:	4b21      	ldr	r3, [pc, #132]	; (800251c <commTask+0xfc>)
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	2b63      	cmp	r3, #99	; 0x63
 800249a:	dd05      	ble.n	80024a8 <commTask+0x88>
			cmdcount = 0;
 800249c:	4b1f      	ldr	r3, [pc, #124]	; (800251c <commTask+0xfc>)
 800249e:	2200      	movs	r2, #0
 80024a0:	601a      	str	r2, [r3, #0]
			cmdprint = 0;
 80024a2:	4b1d      	ldr	r3, [pc, #116]	; (8002518 <commTask+0xf8>)
 80024a4:	2200      	movs	r2, #0
 80024a6:	601a      	str	r2, [r3, #0]
		}

		cmdbuffer[cmdcount++] = ch;
 80024a8:	4b1c      	ldr	r3, [pc, #112]	; (800251c <commTask+0xfc>)
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	1c5a      	adds	r2, r3, #1
 80024ae:	491b      	ldr	r1, [pc, #108]	; (800251c <commTask+0xfc>)
 80024b0:	600a      	str	r2, [r1, #0]
 80024b2:	79b9      	ldrb	r1, [r7, #6]
 80024b4:	4a1a      	ldr	r2, [pc, #104]	; (8002520 <commTask+0x100>)
 80024b6:	54d1      	strb	r1, [r2, r3]
		return 0;
 80024b8:	2300      	movs	r3, #0
 80024ba:	e026      	b.n	800250a <commTask+0xea>
	}

	// here we have a time to print the command
	while (cmdprint < cmdcount) {
 80024bc:	4b16      	ldr	r3, [pc, #88]	; (8002518 <commTask+0xf8>)
 80024be:	681a      	ldr	r2, [r3, #0]
 80024c0:	4b16      	ldr	r3, [pc, #88]	; (800251c <commTask+0xfc>)
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	429a      	cmp	r2, r3
 80024c6:	da0d      	bge.n	80024e4 <commTask+0xc4>
		HAL_UART_Transmit(&huart2, &cmdbuffer[cmdprint++], 1, 0xFFFF);
 80024c8:	4b13      	ldr	r3, [pc, #76]	; (8002518 <commTask+0xf8>)
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	1c5a      	adds	r2, r3, #1
 80024ce:	4912      	ldr	r1, [pc, #72]	; (8002518 <commTask+0xf8>)
 80024d0:	600a      	str	r2, [r1, #0]
 80024d2:	4a13      	ldr	r2, [pc, #76]	; (8002520 <commTask+0x100>)
 80024d4:	1899      	adds	r1, r3, r2
 80024d6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024da:	2201      	movs	r2, #1
 80024dc:	480d      	ldr	r0, [pc, #52]	; (8002514 <commTask+0xf4>)
 80024de:	f005 fbfd 	bl	8007cdc <HAL_UART_Transmit>
	while (cmdprint < cmdcount) {
 80024e2:	e7eb      	b.n	80024bc <commTask+0x9c>
	}

	HAL_UART_Transmit(&huart2, (uint8_t*) "\r\n", 2, 0xFFFF);
 80024e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024e8:	2202      	movs	r2, #2
 80024ea:	490e      	ldr	r1, [pc, #56]	; (8002524 <commTask+0x104>)
 80024ec:	4809      	ldr	r0, [pc, #36]	; (8002514 <commTask+0xf4>)
 80024ee:	f005 fbf5 	bl	8007cdc <HAL_UART_Transmit>

	cmdbuffer[cmdcount] = 0;
 80024f2:	4b0a      	ldr	r3, [pc, #40]	; (800251c <commTask+0xfc>)
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	4a0a      	ldr	r2, [pc, #40]	; (8002520 <commTask+0x100>)
 80024f8:	2100      	movs	r1, #0
 80024fa:	54d1      	strb	r1, [r2, r3]
	cmdcount = 0;
 80024fc:	4b07      	ldr	r3, [pc, #28]	; (800251c <commTask+0xfc>)
 80024fe:	2200      	movs	r2, #0
 8002500:	601a      	str	r2, [r3, #0]
	cmdprint = 0;
 8002502:	4b05      	ldr	r3, [pc, #20]	; (8002518 <commTask+0xf8>)
 8002504:	2200      	movs	r2, #0
 8002506:	601a      	str	r2, [r3, #0]
	return 1;
 8002508:	2301      	movs	r3, #1
}
 800250a:	4618      	mov	r0, r3
 800250c:	3708      	adds	r7, #8
 800250e:	46bd      	mov	sp, r7
 8002510:	bd80      	pop	{r7, pc}
 8002512:	bf00      	nop
 8002514:	200005f8 	.word	0x200005f8
 8002518:	200004a4 	.word	0x200004a4
 800251c:	200004a0 	.word	0x200004a0
 8002520:	2000043c 	.word	0x2000043c
 8002524:	0802e708 	.word	0x0802e708

08002528 <handleCommand>:

void handleCommand() {
 8002528:	b580      	push	{r7, lr}
 800252a:	b092      	sub	sp, #72	; 0x48
 800252c:	af00      	add	r7, sp, #0
	char cmd[20];
	char param[50];
	sscanf((const char*) cmdbuffer, "%s %s", cmd, param);
 800252e:	463b      	mov	r3, r7
 8002530:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8002534:	4907      	ldr	r1, [pc, #28]	; (8002554 <handleCommand+0x2c>)
 8002536:	4808      	ldr	r0, [pc, #32]	; (8002558 <handleCommand+0x30>)
 8002538:	f024 fef0 	bl	802731c <siscanf>

	container.doCommand(cmd,param);
 800253c:	463a      	mov	r2, r7
 800253e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8002542:	4619      	mov	r1, r3
 8002544:	4805      	ldr	r0, [pc, #20]	; (800255c <handleCommand+0x34>)
 8002546:	f7ff ff37 	bl	80023b8 <_ZN12CliContainer9doCommandEPcS0_>
}
 800254a:	bf00      	nop
 800254c:	3748      	adds	r7, #72	; 0x48
 800254e:	46bd      	mov	sp, r7
 8002550:	bd80      	pop	{r7, pc}
 8002552:	bf00      	nop
 8002554:	0802e70c 	.word	0x0802e70c
 8002558:	2000043c 	.word	0x2000043c
 800255c:	20000348 	.word	0x20000348

08002560 <_write>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

int _write(int fd, char* ptr, int len) {
 8002560:	b580      	push	{r7, lr}
 8002562:	b084      	sub	sp, #16
 8002564:	af00      	add	r7, sp, #0
 8002566:	60f8      	str	r0, [r7, #12]
 8002568:	60b9      	str	r1, [r7, #8]
 800256a:	607a      	str	r2, [r7, #4]
    HAL_UART_Transmit(&huart2, (uint8_t *) ptr, len, HAL_MAX_DELAY);
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	b29a      	uxth	r2, r3
 8002570:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002574:	68b9      	ldr	r1, [r7, #8]
 8002576:	4804      	ldr	r0, [pc, #16]	; (8002588 <_write+0x28>)
 8002578:	f005 fbb0 	bl	8007cdc <HAL_UART_Transmit>
    return len;
 800257c:	687b      	ldr	r3, [r7, #4]
}
 800257e:	4618      	mov	r0, r3
 8002580:	3710      	adds	r7, #16
 8002582:	46bd      	mov	sp, r7
 8002584:	bd80      	pop	{r7, pc}
 8002586:	bf00      	nop
 8002588:	200005f8 	.word	0x200005f8

0800258c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800258c:	b580      	push	{r7, lr}
 800258e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002590:	f000 fdda 	bl	8003148 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002594:	f000 f85c 	bl	8002650 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002598:	f000 fa08 	bl	80029ac <MX_GPIO_Init>
  MX_USART2_UART_Init();
 800259c:	f000 f9d6 	bl	800294c <MX_USART2_UART_Init>
  MX_TIM6_Init();
 80025a0:	f000 f99e 	bl	80028e0 <MX_TIM6_Init>
  MX_I2C1_Init();
 80025a4:	f000 f8a6 	bl	80026f4 <MX_I2C1_Init>
  MX_TIM3_Init();
 80025a8:	f000 f922 	bl	80027f0 <MX_TIM3_Init>
  MX_SPI1_Init();
 80025ac:	f000 f8e2 	bl	8002774 <MX_SPI1_Init>
  MX_FATFS_Init();
 80025b0:	f006 f962 	bl	8008878 <MX_FATFS_Init>
  /* USER CODE BEGIN 2 */
  managerInit();
 80025b4:	f7ff fd6e 	bl	8002094 <managerInit>

  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 80025b8:	f006 ff46 	bl	8009448 <osKernelInitialize>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of defaultTask */
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80025bc:	4a15      	ldr	r2, [pc, #84]	; (8002614 <main+0x88>)
 80025be:	2100      	movs	r1, #0
 80025c0:	4815      	ldr	r0, [pc, #84]	; (8002618 <main+0x8c>)
 80025c2:	f006 ff8b 	bl	80094dc <osThreadNew>
 80025c6:	4603      	mov	r3, r0
 80025c8:	4a14      	ldr	r2, [pc, #80]	; (800261c <main+0x90>)
 80025ca:	6013      	str	r3, [r2, #0]

  /* creation of CommTask */
  CommTaskHandle = osThreadNew(StartcommTask, NULL, &CommTask_attributes);
 80025cc:	4a14      	ldr	r2, [pc, #80]	; (8002620 <main+0x94>)
 80025ce:	2100      	movs	r1, #0
 80025d0:	4814      	ldr	r0, [pc, #80]	; (8002624 <main+0x98>)
 80025d2:	f006 ff83 	bl	80094dc <osThreadNew>
 80025d6:	4603      	mov	r3, r0
 80025d8:	4a13      	ldr	r2, [pc, #76]	; (8002628 <main+0x9c>)
 80025da:	6013      	str	r3, [r2, #0]

  /* creation of DhtTask */
  DhtTaskHandle = osThreadNew(StartDht, NULL, &DhtTask_attributes);
 80025dc:	4a13      	ldr	r2, [pc, #76]	; (800262c <main+0xa0>)
 80025de:	2100      	movs	r1, #0
 80025e0:	4813      	ldr	r0, [pc, #76]	; (8002630 <main+0xa4>)
 80025e2:	f006 ff7b 	bl	80094dc <osThreadNew>
 80025e6:	4603      	mov	r3, r0
 80025e8:	4a12      	ldr	r2, [pc, #72]	; (8002634 <main+0xa8>)
 80025ea:	6013      	str	r3, [r2, #0]

  /* creation of FlashTask */
  FlashTaskHandle = osThreadNew(StartFlashTask, NULL, &FlashTask_attributes);
 80025ec:	4a12      	ldr	r2, [pc, #72]	; (8002638 <main+0xac>)
 80025ee:	2100      	movs	r1, #0
 80025f0:	4812      	ldr	r0, [pc, #72]	; (800263c <main+0xb0>)
 80025f2:	f006 ff73 	bl	80094dc <osThreadNew>
 80025f6:	4603      	mov	r3, r0
 80025f8:	4a11      	ldr	r2, [pc, #68]	; (8002640 <main+0xb4>)
 80025fa:	6013      	str	r3, [r2, #0]

  /* creation of LedTask */
  LedTaskHandle = osThreadNew(StartLedTask, NULL, &LedTask_attributes);
 80025fc:	4a11      	ldr	r2, [pc, #68]	; (8002644 <main+0xb8>)
 80025fe:	2100      	movs	r1, #0
 8002600:	4811      	ldr	r0, [pc, #68]	; (8002648 <main+0xbc>)
 8002602:	f006 ff6b 	bl	80094dc <osThreadNew>
 8002606:	4603      	mov	r3, r0
 8002608:	4a10      	ldr	r2, [pc, #64]	; (800264c <main+0xc0>)
 800260a:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 800260c:	f006 ff40 	bl	8009490 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8002610:	e7fe      	b.n	8002610 <main+0x84>
 8002612:	bf00      	nop
 8002614:	0802e834 	.word	0x0802e834
 8002618:	08002ad5 	.word	0x08002ad5
 800261c:	2000067c 	.word	0x2000067c
 8002620:	0802e858 	.word	0x0802e858
 8002624:	08002129 	.word	0x08002129
 8002628:	20000680 	.word	0x20000680
 800262c:	0802e87c 	.word	0x0802e87c
 8002630:	08002155 	.word	0x08002155
 8002634:	20000684 	.word	0x20000684
 8002638:	0802e8a0 	.word	0x0802e8a0
 800263c:	080022a5 	.word	0x080022a5
 8002640:	20000688 	.word	0x20000688
 8002644:	0802e8c4 	.word	0x0802e8c4
 8002648:	0800226d 	.word	0x0800226d
 800264c:	2000068c 	.word	0x2000068c

08002650 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002650:	b580      	push	{r7, lr}
 8002652:	b096      	sub	sp, #88	; 0x58
 8002654:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002656:	f107 0314 	add.w	r3, r7, #20
 800265a:	2244      	movs	r2, #68	; 0x44
 800265c:	2100      	movs	r1, #0
 800265e:	4618      	mov	r0, r3
 8002660:	f023 fc76 	bl	8025f50 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002664:	463b      	mov	r3, r7
 8002666:	2200      	movs	r2, #0
 8002668:	601a      	str	r2, [r3, #0]
 800266a:	605a      	str	r2, [r3, #4]
 800266c:	609a      	str	r2, [r3, #8]
 800266e:	60da      	str	r2, [r3, #12]
 8002670:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8002672:	f44f 7000 	mov.w	r0, #512	; 0x200
 8002676:	f001 ff13 	bl	80044a0 <HAL_PWREx_ControlVoltageScaling>
 800267a:	4603      	mov	r3, r0
 800267c:	2b00      	cmp	r3, #0
 800267e:	d001      	beq.n	8002684 <SystemClock_Config+0x34>
  {
    Error_Handler();
 8002680:	f000 fa42 	bl	8002b08 <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002684:	2302      	movs	r3, #2
 8002686:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002688:	f44f 7380 	mov.w	r3, #256	; 0x100
 800268c:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800268e:	2310      	movs	r3, #16
 8002690:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002692:	2302      	movs	r3, #2
 8002694:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002696:	2302      	movs	r3, #2
 8002698:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLM = 1;
 800269a:	2301      	movs	r3, #1
 800269c:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLN = 10;
 800269e:	230a      	movs	r3, #10
 80026a0:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 80026a2:	2307      	movs	r3, #7
 80026a4:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 80026a6:	2302      	movs	r3, #2
 80026a8:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 80026aa:	2302      	movs	r3, #2
 80026ac:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80026ae:	f107 0314 	add.w	r3, r7, #20
 80026b2:	4618      	mov	r0, r3
 80026b4:	f001 ff4a 	bl	800454c <HAL_RCC_OscConfig>
 80026b8:	4603      	mov	r3, r0
 80026ba:	2b00      	cmp	r3, #0
 80026bc:	d001      	beq.n	80026c2 <SystemClock_Config+0x72>
  {
    Error_Handler();
 80026be:	f000 fa23 	bl	8002b08 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80026c2:	230f      	movs	r3, #15
 80026c4:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80026c6:	2303      	movs	r3, #3
 80026c8:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80026ca:	2300      	movs	r3, #0
 80026cc:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80026ce:	2300      	movs	r3, #0
 80026d0:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80026d2:	2300      	movs	r3, #0
 80026d4:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 80026d6:	463b      	mov	r3, r7
 80026d8:	2104      	movs	r1, #4
 80026da:	4618      	mov	r0, r3
 80026dc:	f002 fb12 	bl	8004d04 <HAL_RCC_ClockConfig>
 80026e0:	4603      	mov	r3, r0
 80026e2:	2b00      	cmp	r3, #0
 80026e4:	d001      	beq.n	80026ea <SystemClock_Config+0x9a>
  {
    Error_Handler();
 80026e6:	f000 fa0f 	bl	8002b08 <Error_Handler>
  }
}
 80026ea:	bf00      	nop
 80026ec:	3758      	adds	r7, #88	; 0x58
 80026ee:	46bd      	mov	sp, r7
 80026f0:	bd80      	pop	{r7, pc}
	...

080026f4 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 80026f4:	b580      	push	{r7, lr}
 80026f6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80026f8:	4b1b      	ldr	r3, [pc, #108]	; (8002768 <MX_I2C1_Init+0x74>)
 80026fa:	4a1c      	ldr	r2, [pc, #112]	; (800276c <MX_I2C1_Init+0x78>)
 80026fc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x10909CEC;
 80026fe:	4b1a      	ldr	r3, [pc, #104]	; (8002768 <MX_I2C1_Init+0x74>)
 8002700:	4a1b      	ldr	r2, [pc, #108]	; (8002770 <MX_I2C1_Init+0x7c>)
 8002702:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8002704:	4b18      	ldr	r3, [pc, #96]	; (8002768 <MX_I2C1_Init+0x74>)
 8002706:	2200      	movs	r2, #0
 8002708:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800270a:	4b17      	ldr	r3, [pc, #92]	; (8002768 <MX_I2C1_Init+0x74>)
 800270c:	2201      	movs	r2, #1
 800270e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002710:	4b15      	ldr	r3, [pc, #84]	; (8002768 <MX_I2C1_Init+0x74>)
 8002712:	2200      	movs	r2, #0
 8002714:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8002716:	4b14      	ldr	r3, [pc, #80]	; (8002768 <MX_I2C1_Init+0x74>)
 8002718:	2200      	movs	r2, #0
 800271a:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 800271c:	4b12      	ldr	r3, [pc, #72]	; (8002768 <MX_I2C1_Init+0x74>)
 800271e:	2200      	movs	r2, #0
 8002720:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002722:	4b11      	ldr	r3, [pc, #68]	; (8002768 <MX_I2C1_Init+0x74>)
 8002724:	2200      	movs	r2, #0
 8002726:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002728:	4b0f      	ldr	r3, [pc, #60]	; (8002768 <MX_I2C1_Init+0x74>)
 800272a:	2200      	movs	r2, #0
 800272c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800272e:	480e      	ldr	r0, [pc, #56]	; (8002768 <MX_I2C1_Init+0x74>)
 8002730:	f001 f8ac 	bl	800388c <HAL_I2C_Init>
 8002734:	4603      	mov	r3, r0
 8002736:	2b00      	cmp	r3, #0
 8002738:	d001      	beq.n	800273e <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 800273a:	f000 f9e5 	bl	8002b08 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800273e:	2100      	movs	r1, #0
 8002740:	4809      	ldr	r0, [pc, #36]	; (8002768 <MX_I2C1_Init+0x74>)
 8002742:	f001 fe07 	bl	8004354 <HAL_I2CEx_ConfigAnalogFilter>
 8002746:	4603      	mov	r3, r0
 8002748:	2b00      	cmp	r3, #0
 800274a:	d001      	beq.n	8002750 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 800274c:	f000 f9dc 	bl	8002b08 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8002750:	2100      	movs	r1, #0
 8002752:	4805      	ldr	r0, [pc, #20]	; (8002768 <MX_I2C1_Init+0x74>)
 8002754:	f001 fe49 	bl	80043ea <HAL_I2CEx_ConfigDigitalFilter>
 8002758:	4603      	mov	r3, r0
 800275a:	2b00      	cmp	r3, #0
 800275c:	d001      	beq.n	8002762 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 800275e:	f000 f9d3 	bl	8002b08 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8002762:	bf00      	nop
 8002764:	bd80      	pop	{r7, pc}
 8002766:	bf00      	nop
 8002768:	200004a8 	.word	0x200004a8
 800276c:	40005400 	.word	0x40005400
 8002770:	10909cec 	.word	0x10909cec

08002774 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8002774:	b580      	push	{r7, lr}
 8002776:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8002778:	4b1b      	ldr	r3, [pc, #108]	; (80027e8 <MX_SPI1_Init+0x74>)
 800277a:	4a1c      	ldr	r2, [pc, #112]	; (80027ec <MX_SPI1_Init+0x78>)
 800277c:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800277e:	4b1a      	ldr	r3, [pc, #104]	; (80027e8 <MX_SPI1_Init+0x74>)
 8002780:	f44f 7282 	mov.w	r2, #260	; 0x104
 8002784:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8002786:	4b18      	ldr	r3, [pc, #96]	; (80027e8 <MX_SPI1_Init+0x74>)
 8002788:	2200      	movs	r2, #0
 800278a:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 800278c:	4b16      	ldr	r3, [pc, #88]	; (80027e8 <MX_SPI1_Init+0x74>)
 800278e:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8002792:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002794:	4b14      	ldr	r3, [pc, #80]	; (80027e8 <MX_SPI1_Init+0x74>)
 8002796:	2200      	movs	r2, #0
 8002798:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800279a:	4b13      	ldr	r3, [pc, #76]	; (80027e8 <MX_SPI1_Init+0x74>)
 800279c:	2200      	movs	r2, #0
 800279e:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80027a0:	4b11      	ldr	r3, [pc, #68]	; (80027e8 <MX_SPI1_Init+0x74>)
 80027a2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80027a6:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 80027a8:	4b0f      	ldr	r3, [pc, #60]	; (80027e8 <MX_SPI1_Init+0x74>)
 80027aa:	2230      	movs	r2, #48	; 0x30
 80027ac:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80027ae:	4b0e      	ldr	r3, [pc, #56]	; (80027e8 <MX_SPI1_Init+0x74>)
 80027b0:	2200      	movs	r2, #0
 80027b2:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80027b4:	4b0c      	ldr	r3, [pc, #48]	; (80027e8 <MX_SPI1_Init+0x74>)
 80027b6:	2200      	movs	r2, #0
 80027b8:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80027ba:	4b0b      	ldr	r3, [pc, #44]	; (80027e8 <MX_SPI1_Init+0x74>)
 80027bc:	2200      	movs	r2, #0
 80027be:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 7;
 80027c0:	4b09      	ldr	r3, [pc, #36]	; (80027e8 <MX_SPI1_Init+0x74>)
 80027c2:	2207      	movs	r2, #7
 80027c4:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 80027c6:	4b08      	ldr	r3, [pc, #32]	; (80027e8 <MX_SPI1_Init+0x74>)
 80027c8:	2200      	movs	r2, #0
 80027ca:	631a      	str	r2, [r3, #48]	; 0x30
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 80027cc:	4b06      	ldr	r3, [pc, #24]	; (80027e8 <MX_SPI1_Init+0x74>)
 80027ce:	2208      	movs	r2, #8
 80027d0:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80027d2:	4805      	ldr	r0, [pc, #20]	; (80027e8 <MX_SPI1_Init+0x74>)
 80027d4:	f003 f9a8 	bl	8005b28 <HAL_SPI_Init>
 80027d8:	4603      	mov	r3, r0
 80027da:	2b00      	cmp	r3, #0
 80027dc:	d001      	beq.n	80027e2 <MX_SPI1_Init+0x6e>
  {
    Error_Handler();
 80027de:	f000 f993 	bl	8002b08 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80027e2:	bf00      	nop
 80027e4:	bd80      	pop	{r7, pc}
 80027e6:	bf00      	nop
 80027e8:	200004fc 	.word	0x200004fc
 80027ec:	40013000 	.word	0x40013000

080027f0 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80027f0:	b580      	push	{r7, lr}
 80027f2:	b08e      	sub	sp, #56	; 0x38
 80027f4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80027f6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80027fa:	2200      	movs	r2, #0
 80027fc:	601a      	str	r2, [r3, #0]
 80027fe:	605a      	str	r2, [r3, #4]
 8002800:	609a      	str	r2, [r3, #8]
 8002802:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002804:	f107 031c 	add.w	r3, r7, #28
 8002808:	2200      	movs	r2, #0
 800280a:	601a      	str	r2, [r3, #0]
 800280c:	605a      	str	r2, [r3, #4]
 800280e:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002810:	463b      	mov	r3, r7
 8002812:	2200      	movs	r2, #0
 8002814:	601a      	str	r2, [r3, #0]
 8002816:	605a      	str	r2, [r3, #4]
 8002818:	609a      	str	r2, [r3, #8]
 800281a:	60da      	str	r2, [r3, #12]
 800281c:	611a      	str	r2, [r3, #16]
 800281e:	615a      	str	r2, [r3, #20]
 8002820:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002822:	4b2d      	ldr	r3, [pc, #180]	; (80028d8 <MX_TIM3_Init+0xe8>)
 8002824:	4a2d      	ldr	r2, [pc, #180]	; (80028dc <MX_TIM3_Init+0xec>)
 8002826:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 799;
 8002828:	4b2b      	ldr	r3, [pc, #172]	; (80028d8 <MX_TIM3_Init+0xe8>)
 800282a:	f240 321f 	movw	r2, #799	; 0x31f
 800282e:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002830:	4b29      	ldr	r3, [pc, #164]	; (80028d8 <MX_TIM3_Init+0xe8>)
 8002832:	2200      	movs	r2, #0
 8002834:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 100;
 8002836:	4b28      	ldr	r3, [pc, #160]	; (80028d8 <MX_TIM3_Init+0xe8>)
 8002838:	2264      	movs	r2, #100	; 0x64
 800283a:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800283c:	4b26      	ldr	r3, [pc, #152]	; (80028d8 <MX_TIM3_Init+0xe8>)
 800283e:	2200      	movs	r2, #0
 8002840:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002842:	4b25      	ldr	r3, [pc, #148]	; (80028d8 <MX_TIM3_Init+0xe8>)
 8002844:	2200      	movs	r2, #0
 8002846:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8002848:	4823      	ldr	r0, [pc, #140]	; (80028d8 <MX_TIM3_Init+0xe8>)
 800284a:	f003 fea7 	bl	800659c <HAL_TIM_Base_Init>
 800284e:	4603      	mov	r3, r0
 8002850:	2b00      	cmp	r3, #0
 8002852:	d001      	beq.n	8002858 <MX_TIM3_Init+0x68>
  {
    Error_Handler();
 8002854:	f000 f958 	bl	8002b08 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002858:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800285c:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800285e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002862:	4619      	mov	r1, r3
 8002864:	481c      	ldr	r0, [pc, #112]	; (80028d8 <MX_TIM3_Init+0xe8>)
 8002866:	f004 fc23 	bl	80070b0 <HAL_TIM_ConfigClockSource>
 800286a:	4603      	mov	r3, r0
 800286c:	2b00      	cmp	r3, #0
 800286e:	d001      	beq.n	8002874 <MX_TIM3_Init+0x84>
  {
    Error_Handler();
 8002870:	f000 f94a 	bl	8002b08 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8002874:	4818      	ldr	r0, [pc, #96]	; (80028d8 <MX_TIM3_Init+0xe8>)
 8002876:	f003 ffe9 	bl	800684c <HAL_TIM_PWM_Init>
 800287a:	4603      	mov	r3, r0
 800287c:	2b00      	cmp	r3, #0
 800287e:	d001      	beq.n	8002884 <MX_TIM3_Init+0x94>
  {
    Error_Handler();
 8002880:	f000 f942 	bl	8002b08 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002884:	2300      	movs	r3, #0
 8002886:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002888:	2300      	movs	r3, #0
 800288a:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800288c:	f107 031c 	add.w	r3, r7, #28
 8002890:	4619      	mov	r1, r3
 8002892:	4811      	ldr	r0, [pc, #68]	; (80028d8 <MX_TIM3_Init+0xe8>)
 8002894:	f005 f92e 	bl	8007af4 <HAL_TIMEx_MasterConfigSynchronization>
 8002898:	4603      	mov	r3, r0
 800289a:	2b00      	cmp	r3, #0
 800289c:	d001      	beq.n	80028a2 <MX_TIM3_Init+0xb2>
  {
    Error_Handler();
 800289e:	f000 f933 	bl	8002b08 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80028a2:	2360      	movs	r3, #96	; 0x60
 80028a4:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 50;
 80028a6:	2332      	movs	r3, #50	; 0x32
 80028a8:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80028aa:	2300      	movs	r3, #0
 80028ac:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80028ae:	2300      	movs	r3, #0
 80028b0:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80028b2:	463b      	mov	r3, r7
 80028b4:	2200      	movs	r2, #0
 80028b6:	4619      	mov	r1, r3
 80028b8:	4807      	ldr	r0, [pc, #28]	; (80028d8 <MX_TIM3_Init+0xe8>)
 80028ba:	f004 fae5 	bl	8006e88 <HAL_TIM_PWM_ConfigChannel>
 80028be:	4603      	mov	r3, r0
 80028c0:	2b00      	cmp	r3, #0
 80028c2:	d001      	beq.n	80028c8 <MX_TIM3_Init+0xd8>
  {
    Error_Handler();
 80028c4:	f000 f920 	bl	8002b08 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 80028c8:	4803      	ldr	r0, [pc, #12]	; (80028d8 <MX_TIM3_Init+0xe8>)
 80028ca:	f000 fa2d 	bl	8002d28 <HAL_TIM_MspPostInit>

}
 80028ce:	bf00      	nop
 80028d0:	3738      	adds	r7, #56	; 0x38
 80028d2:	46bd      	mov	sp, r7
 80028d4:	bd80      	pop	{r7, pc}
 80028d6:	bf00      	nop
 80028d8:	20000560 	.word	0x20000560
 80028dc:	40000400 	.word	0x40000400

080028e0 <MX_TIM6_Init>:
  * @brief TIM6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM6_Init(void)
{
 80028e0:	b580      	push	{r7, lr}
 80028e2:	b084      	sub	sp, #16
 80028e4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM6_Init 0 */

  /* USER CODE END TIM6_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80028e6:	1d3b      	adds	r3, r7, #4
 80028e8:	2200      	movs	r2, #0
 80028ea:	601a      	str	r2, [r3, #0]
 80028ec:	605a      	str	r2, [r3, #4]
 80028ee:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM6_Init 1 */

  /* USER CODE END TIM6_Init 1 */
  htim6.Instance = TIM6;
 80028f0:	4b14      	ldr	r3, [pc, #80]	; (8002944 <MX_TIM6_Init+0x64>)
 80028f2:	4a15      	ldr	r2, [pc, #84]	; (8002948 <MX_TIM6_Init+0x68>)
 80028f4:	601a      	str	r2, [r3, #0]
  htim6.Init.Prescaler = 79;
 80028f6:	4b13      	ldr	r3, [pc, #76]	; (8002944 <MX_TIM6_Init+0x64>)
 80028f8:	224f      	movs	r2, #79	; 0x4f
 80028fa:	605a      	str	r2, [r3, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028fc:	4b11      	ldr	r3, [pc, #68]	; (8002944 <MX_TIM6_Init+0x64>)
 80028fe:	2200      	movs	r2, #0
 8002900:	609a      	str	r2, [r3, #8]
  htim6.Init.Period = 65535;
 8002902:	4b10      	ldr	r3, [pc, #64]	; (8002944 <MX_TIM6_Init+0x64>)
 8002904:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002908:	60da      	str	r2, [r3, #12]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800290a:	4b0e      	ldr	r3, [pc, #56]	; (8002944 <MX_TIM6_Init+0x64>)
 800290c:	2200      	movs	r2, #0
 800290e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 8002910:	480c      	ldr	r0, [pc, #48]	; (8002944 <MX_TIM6_Init+0x64>)
 8002912:	f003 fe43 	bl	800659c <HAL_TIM_Base_Init>
 8002916:	4603      	mov	r3, r0
 8002918:	2b00      	cmp	r3, #0
 800291a:	d001      	beq.n	8002920 <MX_TIM6_Init+0x40>
  {
    Error_Handler();
 800291c:	f000 f8f4 	bl	8002b08 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002920:	2300      	movs	r3, #0
 8002922:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002924:	2300      	movs	r3, #0
 8002926:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 8002928:	1d3b      	adds	r3, r7, #4
 800292a:	4619      	mov	r1, r3
 800292c:	4805      	ldr	r0, [pc, #20]	; (8002944 <MX_TIM6_Init+0x64>)
 800292e:	f005 f8e1 	bl	8007af4 <HAL_TIMEx_MasterConfigSynchronization>
 8002932:	4603      	mov	r3, r0
 8002934:	2b00      	cmp	r3, #0
 8002936:	d001      	beq.n	800293c <MX_TIM6_Init+0x5c>
  {
    Error_Handler();
 8002938:	f000 f8e6 	bl	8002b08 <Error_Handler>
  }
  /* USER CODE BEGIN TIM6_Init 2 */

  /* USER CODE END TIM6_Init 2 */

}
 800293c:	bf00      	nop
 800293e:	3710      	adds	r7, #16
 8002940:	46bd      	mov	sp, r7
 8002942:	bd80      	pop	{r7, pc}
 8002944:	200005ac 	.word	0x200005ac
 8002948:	40001000 	.word	0x40001000

0800294c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 800294c:	b580      	push	{r7, lr}
 800294e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002950:	4b14      	ldr	r3, [pc, #80]	; (80029a4 <MX_USART2_UART_Init+0x58>)
 8002952:	4a15      	ldr	r2, [pc, #84]	; (80029a8 <MX_USART2_UART_Init+0x5c>)
 8002954:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8002956:	4b13      	ldr	r3, [pc, #76]	; (80029a4 <MX_USART2_UART_Init+0x58>)
 8002958:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 800295c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800295e:	4b11      	ldr	r3, [pc, #68]	; (80029a4 <MX_USART2_UART_Init+0x58>)
 8002960:	2200      	movs	r2, #0
 8002962:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002964:	4b0f      	ldr	r3, [pc, #60]	; (80029a4 <MX_USART2_UART_Init+0x58>)
 8002966:	2200      	movs	r2, #0
 8002968:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800296a:	4b0e      	ldr	r3, [pc, #56]	; (80029a4 <MX_USART2_UART_Init+0x58>)
 800296c:	2200      	movs	r2, #0
 800296e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002970:	4b0c      	ldr	r3, [pc, #48]	; (80029a4 <MX_USART2_UART_Init+0x58>)
 8002972:	220c      	movs	r2, #12
 8002974:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002976:	4b0b      	ldr	r3, [pc, #44]	; (80029a4 <MX_USART2_UART_Init+0x58>)
 8002978:	2200      	movs	r2, #0
 800297a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800297c:	4b09      	ldr	r3, [pc, #36]	; (80029a4 <MX_USART2_UART_Init+0x58>)
 800297e:	2200      	movs	r2, #0
 8002980:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002982:	4b08      	ldr	r3, [pc, #32]	; (80029a4 <MX_USART2_UART_Init+0x58>)
 8002984:	2200      	movs	r2, #0
 8002986:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002988:	4b06      	ldr	r3, [pc, #24]	; (80029a4 <MX_USART2_UART_Init+0x58>)
 800298a:	2200      	movs	r2, #0
 800298c:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800298e:	4805      	ldr	r0, [pc, #20]	; (80029a4 <MX_USART2_UART_Init+0x58>)
 8002990:	f005 f956 	bl	8007c40 <HAL_UART_Init>
 8002994:	4603      	mov	r3, r0
 8002996:	2b00      	cmp	r3, #0
 8002998:	d001      	beq.n	800299e <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 800299a:	f000 f8b5 	bl	8002b08 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800299e:	bf00      	nop
 80029a0:	bd80      	pop	{r7, pc}
 80029a2:	bf00      	nop
 80029a4:	200005f8 	.word	0x200005f8
 80029a8:	40004400 	.word	0x40004400

080029ac <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80029ac:	b580      	push	{r7, lr}
 80029ae:	b08a      	sub	sp, #40	; 0x28
 80029b0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029b2:	f107 0314 	add.w	r3, r7, #20
 80029b6:	2200      	movs	r2, #0
 80029b8:	601a      	str	r2, [r3, #0]
 80029ba:	605a      	str	r2, [r3, #4]
 80029bc:	609a      	str	r2, [r3, #8]
 80029be:	60da      	str	r2, [r3, #12]
 80029c0:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80029c2:	4b41      	ldr	r3, [pc, #260]	; (8002ac8 <MX_GPIO_Init+0x11c>)
 80029c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80029c6:	4a40      	ldr	r2, [pc, #256]	; (8002ac8 <MX_GPIO_Init+0x11c>)
 80029c8:	f043 0304 	orr.w	r3, r3, #4
 80029cc:	64d3      	str	r3, [r2, #76]	; 0x4c
 80029ce:	4b3e      	ldr	r3, [pc, #248]	; (8002ac8 <MX_GPIO_Init+0x11c>)
 80029d0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80029d2:	f003 0304 	and.w	r3, r3, #4
 80029d6:	613b      	str	r3, [r7, #16]
 80029d8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80029da:	4b3b      	ldr	r3, [pc, #236]	; (8002ac8 <MX_GPIO_Init+0x11c>)
 80029dc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80029de:	4a3a      	ldr	r2, [pc, #232]	; (8002ac8 <MX_GPIO_Init+0x11c>)
 80029e0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80029e4:	64d3      	str	r3, [r2, #76]	; 0x4c
 80029e6:	4b38      	ldr	r3, [pc, #224]	; (8002ac8 <MX_GPIO_Init+0x11c>)
 80029e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80029ea:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80029ee:	60fb      	str	r3, [r7, #12]
 80029f0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80029f2:	4b35      	ldr	r3, [pc, #212]	; (8002ac8 <MX_GPIO_Init+0x11c>)
 80029f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80029f6:	4a34      	ldr	r2, [pc, #208]	; (8002ac8 <MX_GPIO_Init+0x11c>)
 80029f8:	f043 0301 	orr.w	r3, r3, #1
 80029fc:	64d3      	str	r3, [r2, #76]	; 0x4c
 80029fe:	4b32      	ldr	r3, [pc, #200]	; (8002ac8 <MX_GPIO_Init+0x11c>)
 8002a00:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002a02:	f003 0301 	and.w	r3, r3, #1
 8002a06:	60bb      	str	r3, [r7, #8]
 8002a08:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002a0a:	4b2f      	ldr	r3, [pc, #188]	; (8002ac8 <MX_GPIO_Init+0x11c>)
 8002a0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002a0e:	4a2e      	ldr	r2, [pc, #184]	; (8002ac8 <MX_GPIO_Init+0x11c>)
 8002a10:	f043 0302 	orr.w	r3, r3, #2
 8002a14:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002a16:	4b2c      	ldr	r3, [pc, #176]	; (8002ac8 <MX_GPIO_Init+0x11c>)
 8002a18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002a1a:	f003 0302 	and.w	r3, r3, #2
 8002a1e:	607b      	str	r3, [r7, #4]
 8002a20:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, ledR_Pin|ledB_Pin, GPIO_PIN_RESET);
 8002a22:	2200      	movs	r2, #0
 8002a24:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 8002a28:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002a2c:	f000 fee4 	bl	80037f8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DHT_Pin|SD_CS_Pin, GPIO_PIN_RESET);
 8002a30:	2200      	movs	r2, #0
 8002a32:	2160      	movs	r1, #96	; 0x60
 8002a34:	4825      	ldr	r0, [pc, #148]	; (8002acc <MX_GPIO_Init+0x120>)
 8002a36:	f000 fedf 	bl	80037f8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8002a3a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002a3e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002a40:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8002a44:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a46:	2300      	movs	r3, #0
 8002a48:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8002a4a:	f107 0314 	add.w	r3, r7, #20
 8002a4e:	4619      	mov	r1, r3
 8002a50:	481f      	ldr	r0, [pc, #124]	; (8002ad0 <MX_GPIO_Init+0x124>)
 8002a52:	f000 fd0f 	bl	8003474 <HAL_GPIO_Init>

  /*Configure GPIO pin : SW1_Pin */
  GPIO_InitStruct.Pin = SW1_Pin;
 8002a56:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002a5a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002a5c:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8002a60:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a62:	2300      	movs	r3, #0
 8002a64:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(SW1_GPIO_Port, &GPIO_InitStruct);
 8002a66:	f107 0314 	add.w	r3, r7, #20
 8002a6a:	4619      	mov	r1, r3
 8002a6c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002a70:	f000 fd00 	bl	8003474 <HAL_GPIO_Init>

  /*Configure GPIO pins : ledR_Pin ledB_Pin */
  GPIO_InitStruct.Pin = ledR_Pin|ledB_Pin;
 8002a74:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8002a78:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002a7a:	2301      	movs	r3, #1
 8002a7c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a7e:	2300      	movs	r3, #0
 8002a80:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002a82:	2300      	movs	r3, #0
 8002a84:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a86:	f107 0314 	add.w	r3, r7, #20
 8002a8a:	4619      	mov	r1, r3
 8002a8c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002a90:	f000 fcf0 	bl	8003474 <HAL_GPIO_Init>

  /*Configure GPIO pins : DHT_Pin SD_CS_Pin */
  GPIO_InitStruct.Pin = DHT_Pin|SD_CS_Pin;
 8002a94:	2360      	movs	r3, #96	; 0x60
 8002a96:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002a98:	2301      	movs	r3, #1
 8002a9a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a9c:	2300      	movs	r3, #0
 8002a9e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002aa0:	2300      	movs	r3, #0
 8002aa2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002aa4:	f107 0314 	add.w	r3, r7, #20
 8002aa8:	4619      	mov	r1, r3
 8002aaa:	4808      	ldr	r0, [pc, #32]	; (8002acc <MX_GPIO_Init+0x120>)
 8002aac:	f000 fce2 	bl	8003474 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 8002ab0:	2200      	movs	r2, #0
 8002ab2:	2105      	movs	r1, #5
 8002ab4:	2028      	movs	r0, #40	; 0x28
 8002ab6:	f000 fc63 	bl	8003380 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8002aba:	2028      	movs	r0, #40	; 0x28
 8002abc:	f000 fc7c 	bl	80033b8 <HAL_NVIC_EnableIRQ>

}
 8002ac0:	bf00      	nop
 8002ac2:	3728      	adds	r7, #40	; 0x28
 8002ac4:	46bd      	mov	sp, r7
 8002ac6:	bd80      	pop	{r7, pc}
 8002ac8:	40021000 	.word	0x40021000
 8002acc:	48000400 	.word	0x48000400
 8002ad0:	48000800 	.word	0x48000800

08002ad4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8002ad4:	b580      	push	{r7, lr}
 8002ad6:	b082      	sub	sp, #8
 8002ad8:	af00      	add	r7, sp, #0
 8002ada:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 8002adc:	2001      	movs	r0, #1
 8002ade:	f006 fd8f 	bl	8009600 <osDelay>
 8002ae2:	e7fb      	b.n	8002adc <StartDefaultTask+0x8>

08002ae4 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8002ae4:	b580      	push	{r7, lr}
 8002ae6:	b082      	sub	sp, #8
 8002ae8:	af00      	add	r7, sp, #0
 8002aea:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM16) {
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	681b      	ldr	r3, [r3, #0]
 8002af0:	4a04      	ldr	r2, [pc, #16]	; (8002b04 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8002af2:	4293      	cmp	r3, r2
 8002af4:	d101      	bne.n	8002afa <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8002af6:	f000 fb47 	bl	8003188 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002afa:	bf00      	nop
 8002afc:	3708      	adds	r7, #8
 8002afe:	46bd      	mov	sp, r7
 8002b00:	bd80      	pop	{r7, pc}
 8002b02:	bf00      	nop
 8002b04:	40014400 	.word	0x40014400

08002b08 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002b08:	b480      	push	{r7}
 8002b0a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002b0c:	b672      	cpsid	i
}
 8002b0e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002b10:	e7fe      	b.n	8002b10 <Error_Handler+0x8>
	...

08002b14 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002b14:	b580      	push	{r7, lr}
 8002b16:	b082      	sub	sp, #8
 8002b18:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002b1a:	4b11      	ldr	r3, [pc, #68]	; (8002b60 <HAL_MspInit+0x4c>)
 8002b1c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002b1e:	4a10      	ldr	r2, [pc, #64]	; (8002b60 <HAL_MspInit+0x4c>)
 8002b20:	f043 0301 	orr.w	r3, r3, #1
 8002b24:	6613      	str	r3, [r2, #96]	; 0x60
 8002b26:	4b0e      	ldr	r3, [pc, #56]	; (8002b60 <HAL_MspInit+0x4c>)
 8002b28:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002b2a:	f003 0301 	and.w	r3, r3, #1
 8002b2e:	607b      	str	r3, [r7, #4]
 8002b30:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002b32:	4b0b      	ldr	r3, [pc, #44]	; (8002b60 <HAL_MspInit+0x4c>)
 8002b34:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002b36:	4a0a      	ldr	r2, [pc, #40]	; (8002b60 <HAL_MspInit+0x4c>)
 8002b38:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002b3c:	6593      	str	r3, [r2, #88]	; 0x58
 8002b3e:	4b08      	ldr	r3, [pc, #32]	; (8002b60 <HAL_MspInit+0x4c>)
 8002b40:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002b42:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002b46:	603b      	str	r3, [r7, #0]
 8002b48:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002b4a:	2200      	movs	r2, #0
 8002b4c:	210f      	movs	r1, #15
 8002b4e:	f06f 0001 	mvn.w	r0, #1
 8002b52:	f000 fc15 	bl	8003380 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002b56:	bf00      	nop
 8002b58:	3708      	adds	r7, #8
 8002b5a:	46bd      	mov	sp, r7
 8002b5c:	bd80      	pop	{r7, pc}
 8002b5e:	bf00      	nop
 8002b60:	40021000 	.word	0x40021000

08002b64 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002b64:	b580      	push	{r7, lr}
 8002b66:	b0ac      	sub	sp, #176	; 0xb0
 8002b68:	af00      	add	r7, sp, #0
 8002b6a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002b6c:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8002b70:	2200      	movs	r2, #0
 8002b72:	601a      	str	r2, [r3, #0]
 8002b74:	605a      	str	r2, [r3, #4]
 8002b76:	609a      	str	r2, [r3, #8]
 8002b78:	60da      	str	r2, [r3, #12]
 8002b7a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002b7c:	f107 0314 	add.w	r3, r7, #20
 8002b80:	2288      	movs	r2, #136	; 0x88
 8002b82:	2100      	movs	r1, #0
 8002b84:	4618      	mov	r0, r3
 8002b86:	f023 f9e3 	bl	8025f50 <memset>
  if(hi2c->Instance==I2C1)
 8002b8a:	687b      	ldr	r3, [r7, #4]
 8002b8c:	681b      	ldr	r3, [r3, #0]
 8002b8e:	4a21      	ldr	r2, [pc, #132]	; (8002c14 <HAL_I2C_MspInit+0xb0>)
 8002b90:	4293      	cmp	r3, r2
 8002b92:	d13b      	bne.n	8002c0c <HAL_I2C_MspInit+0xa8>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8002b94:	2340      	movs	r3, #64	; 0x40
 8002b96:	617b      	str	r3, [r7, #20]
    PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8002b98:	2300      	movs	r3, #0
 8002b9a:	667b      	str	r3, [r7, #100]	; 0x64
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002b9c:	f107 0314 	add.w	r3, r7, #20
 8002ba0:	4618      	mov	r0, r3
 8002ba2:	f002 fb05 	bl	80051b0 <HAL_RCCEx_PeriphCLKConfig>
 8002ba6:	4603      	mov	r3, r0
 8002ba8:	2b00      	cmp	r3, #0
 8002baa:	d001      	beq.n	8002bb0 <HAL_I2C_MspInit+0x4c>
    {
      Error_Handler();
 8002bac:	f7ff ffac 	bl	8002b08 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002bb0:	4b19      	ldr	r3, [pc, #100]	; (8002c18 <HAL_I2C_MspInit+0xb4>)
 8002bb2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002bb4:	4a18      	ldr	r2, [pc, #96]	; (8002c18 <HAL_I2C_MspInit+0xb4>)
 8002bb6:	f043 0302 	orr.w	r3, r3, #2
 8002bba:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002bbc:	4b16      	ldr	r3, [pc, #88]	; (8002c18 <HAL_I2C_MspInit+0xb4>)
 8002bbe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002bc0:	f003 0302 	and.w	r3, r3, #2
 8002bc4:	613b      	str	r3, [r7, #16]
 8002bc6:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8002bc8:	f44f 7340 	mov.w	r3, #768	; 0x300
 8002bcc:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002bd0:	2312      	movs	r3, #18
 8002bd2:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bd6:	2300      	movs	r3, #0
 8002bd8:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002bdc:	2303      	movs	r3, #3
 8002bde:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002be2:	2304      	movs	r3, #4
 8002be4:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002be8:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8002bec:	4619      	mov	r1, r3
 8002bee:	480b      	ldr	r0, [pc, #44]	; (8002c1c <HAL_I2C_MspInit+0xb8>)
 8002bf0:	f000 fc40 	bl	8003474 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002bf4:	4b08      	ldr	r3, [pc, #32]	; (8002c18 <HAL_I2C_MspInit+0xb4>)
 8002bf6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002bf8:	4a07      	ldr	r2, [pc, #28]	; (8002c18 <HAL_I2C_MspInit+0xb4>)
 8002bfa:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002bfe:	6593      	str	r3, [r2, #88]	; 0x58
 8002c00:	4b05      	ldr	r3, [pc, #20]	; (8002c18 <HAL_I2C_MspInit+0xb4>)
 8002c02:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002c04:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002c08:	60fb      	str	r3, [r7, #12]
 8002c0a:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8002c0c:	bf00      	nop
 8002c0e:	37b0      	adds	r7, #176	; 0xb0
 8002c10:	46bd      	mov	sp, r7
 8002c12:	bd80      	pop	{r7, pc}
 8002c14:	40005400 	.word	0x40005400
 8002c18:	40021000 	.word	0x40021000
 8002c1c:	48000400 	.word	0x48000400

08002c20 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002c20:	b580      	push	{r7, lr}
 8002c22:	b08a      	sub	sp, #40	; 0x28
 8002c24:	af00      	add	r7, sp, #0
 8002c26:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002c28:	f107 0314 	add.w	r3, r7, #20
 8002c2c:	2200      	movs	r2, #0
 8002c2e:	601a      	str	r2, [r3, #0]
 8002c30:	605a      	str	r2, [r3, #4]
 8002c32:	609a      	str	r2, [r3, #8]
 8002c34:	60da      	str	r2, [r3, #12]
 8002c36:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	4a1b      	ldr	r2, [pc, #108]	; (8002cac <HAL_SPI_MspInit+0x8c>)
 8002c3e:	4293      	cmp	r3, r2
 8002c40:	d130      	bne.n	8002ca4 <HAL_SPI_MspInit+0x84>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8002c42:	4b1b      	ldr	r3, [pc, #108]	; (8002cb0 <HAL_SPI_MspInit+0x90>)
 8002c44:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002c46:	4a1a      	ldr	r2, [pc, #104]	; (8002cb0 <HAL_SPI_MspInit+0x90>)
 8002c48:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002c4c:	6613      	str	r3, [r2, #96]	; 0x60
 8002c4e:	4b18      	ldr	r3, [pc, #96]	; (8002cb0 <HAL_SPI_MspInit+0x90>)
 8002c50:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002c52:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002c56:	613b      	str	r3, [r7, #16]
 8002c58:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002c5a:	4b15      	ldr	r3, [pc, #84]	; (8002cb0 <HAL_SPI_MspInit+0x90>)
 8002c5c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002c5e:	4a14      	ldr	r2, [pc, #80]	; (8002cb0 <HAL_SPI_MspInit+0x90>)
 8002c60:	f043 0301 	orr.w	r3, r3, #1
 8002c64:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002c66:	4b12      	ldr	r3, [pc, #72]	; (8002cb0 <HAL_SPI_MspInit+0x90>)
 8002c68:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002c6a:	f003 0301 	and.w	r3, r3, #1
 8002c6e:	60fb      	str	r3, [r7, #12]
 8002c70:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8002c72:	23e0      	movs	r3, #224	; 0xe0
 8002c74:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c76:	2302      	movs	r3, #2
 8002c78:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c7a:	2300      	movs	r3, #0
 8002c7c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c7e:	2303      	movs	r3, #3
 8002c80:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8002c82:	2305      	movs	r3, #5
 8002c84:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c86:	f107 0314 	add.w	r3, r7, #20
 8002c8a:	4619      	mov	r1, r3
 8002c8c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002c90:	f000 fbf0 	bl	8003474 <HAL_GPIO_Init>

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 5, 0);
 8002c94:	2200      	movs	r2, #0
 8002c96:	2105      	movs	r1, #5
 8002c98:	2023      	movs	r0, #35	; 0x23
 8002c9a:	f000 fb71 	bl	8003380 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8002c9e:	2023      	movs	r0, #35	; 0x23
 8002ca0:	f000 fb8a 	bl	80033b8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 8002ca4:	bf00      	nop
 8002ca6:	3728      	adds	r7, #40	; 0x28
 8002ca8:	46bd      	mov	sp, r7
 8002caa:	bd80      	pop	{r7, pc}
 8002cac:	40013000 	.word	0x40013000
 8002cb0:	40021000 	.word	0x40021000

08002cb4 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002cb4:	b580      	push	{r7, lr}
 8002cb6:	b084      	sub	sp, #16
 8002cb8:	af00      	add	r7, sp, #0
 8002cba:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM3)
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	4a16      	ldr	r2, [pc, #88]	; (8002d1c <HAL_TIM_Base_MspInit+0x68>)
 8002cc2:	4293      	cmp	r3, r2
 8002cc4:	d114      	bne.n	8002cf0 <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002cc6:	4b16      	ldr	r3, [pc, #88]	; (8002d20 <HAL_TIM_Base_MspInit+0x6c>)
 8002cc8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002cca:	4a15      	ldr	r2, [pc, #84]	; (8002d20 <HAL_TIM_Base_MspInit+0x6c>)
 8002ccc:	f043 0302 	orr.w	r3, r3, #2
 8002cd0:	6593      	str	r3, [r2, #88]	; 0x58
 8002cd2:	4b13      	ldr	r3, [pc, #76]	; (8002d20 <HAL_TIM_Base_MspInit+0x6c>)
 8002cd4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002cd6:	f003 0302 	and.w	r3, r3, #2
 8002cda:	60fb      	str	r3, [r7, #12]
 8002cdc:	68fb      	ldr	r3, [r7, #12]
    /* TIM3 interrupt Init */
    HAL_NVIC_SetPriority(TIM3_IRQn, 5, 0);
 8002cde:	2200      	movs	r2, #0
 8002ce0:	2105      	movs	r1, #5
 8002ce2:	201d      	movs	r0, #29
 8002ce4:	f000 fb4c 	bl	8003380 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8002ce8:	201d      	movs	r0, #29
 8002cea:	f000 fb65 	bl	80033b8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM6_MspInit 1 */

  /* USER CODE END TIM6_MspInit 1 */
  }

}
 8002cee:	e010      	b.n	8002d12 <HAL_TIM_Base_MspInit+0x5e>
  else if(htim_base->Instance==TIM6)
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	681b      	ldr	r3, [r3, #0]
 8002cf4:	4a0b      	ldr	r2, [pc, #44]	; (8002d24 <HAL_TIM_Base_MspInit+0x70>)
 8002cf6:	4293      	cmp	r3, r2
 8002cf8:	d10b      	bne.n	8002d12 <HAL_TIM_Base_MspInit+0x5e>
    __HAL_RCC_TIM6_CLK_ENABLE();
 8002cfa:	4b09      	ldr	r3, [pc, #36]	; (8002d20 <HAL_TIM_Base_MspInit+0x6c>)
 8002cfc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002cfe:	4a08      	ldr	r2, [pc, #32]	; (8002d20 <HAL_TIM_Base_MspInit+0x6c>)
 8002d00:	f043 0310 	orr.w	r3, r3, #16
 8002d04:	6593      	str	r3, [r2, #88]	; 0x58
 8002d06:	4b06      	ldr	r3, [pc, #24]	; (8002d20 <HAL_TIM_Base_MspInit+0x6c>)
 8002d08:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002d0a:	f003 0310 	and.w	r3, r3, #16
 8002d0e:	60bb      	str	r3, [r7, #8]
 8002d10:	68bb      	ldr	r3, [r7, #8]
}
 8002d12:	bf00      	nop
 8002d14:	3710      	adds	r7, #16
 8002d16:	46bd      	mov	sp, r7
 8002d18:	bd80      	pop	{r7, pc}
 8002d1a:	bf00      	nop
 8002d1c:	40000400 	.word	0x40000400
 8002d20:	40021000 	.word	0x40021000
 8002d24:	40001000 	.word	0x40001000

08002d28 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002d28:	b580      	push	{r7, lr}
 8002d2a:	b088      	sub	sp, #32
 8002d2c:	af00      	add	r7, sp, #0
 8002d2e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002d30:	f107 030c 	add.w	r3, r7, #12
 8002d34:	2200      	movs	r2, #0
 8002d36:	601a      	str	r2, [r3, #0]
 8002d38:	605a      	str	r2, [r3, #4]
 8002d3a:	609a      	str	r2, [r3, #8]
 8002d3c:	60da      	str	r2, [r3, #12]
 8002d3e:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM3)
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	4a11      	ldr	r2, [pc, #68]	; (8002d8c <HAL_TIM_MspPostInit+0x64>)
 8002d46:	4293      	cmp	r3, r2
 8002d48:	d11b      	bne.n	8002d82 <HAL_TIM_MspPostInit+0x5a>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002d4a:	4b11      	ldr	r3, [pc, #68]	; (8002d90 <HAL_TIM_MspPostInit+0x68>)
 8002d4c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002d4e:	4a10      	ldr	r2, [pc, #64]	; (8002d90 <HAL_TIM_MspPostInit+0x68>)
 8002d50:	f043 0302 	orr.w	r3, r3, #2
 8002d54:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002d56:	4b0e      	ldr	r3, [pc, #56]	; (8002d90 <HAL_TIM_MspPostInit+0x68>)
 8002d58:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002d5a:	f003 0302 	and.w	r3, r3, #2
 8002d5e:	60bb      	str	r3, [r7, #8]
 8002d60:	68bb      	ldr	r3, [r7, #8]
    /**TIM3 GPIO Configuration
    PB4 (NJTRST)     ------> TIM3_CH1
    */
    GPIO_InitStruct.Pin = buzzer_Pin;
 8002d62:	2310      	movs	r3, #16
 8002d64:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d66:	2302      	movs	r3, #2
 8002d68:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002d6a:	2300      	movs	r3, #0
 8002d6c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002d6e:	2300      	movs	r3, #0
 8002d70:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8002d72:	2302      	movs	r3, #2
 8002d74:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(buzzer_GPIO_Port, &GPIO_InitStruct);
 8002d76:	f107 030c 	add.w	r3, r7, #12
 8002d7a:	4619      	mov	r1, r3
 8002d7c:	4805      	ldr	r0, [pc, #20]	; (8002d94 <HAL_TIM_MspPostInit+0x6c>)
 8002d7e:	f000 fb79 	bl	8003474 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 8002d82:	bf00      	nop
 8002d84:	3720      	adds	r7, #32
 8002d86:	46bd      	mov	sp, r7
 8002d88:	bd80      	pop	{r7, pc}
 8002d8a:	bf00      	nop
 8002d8c:	40000400 	.word	0x40000400
 8002d90:	40021000 	.word	0x40021000
 8002d94:	48000400 	.word	0x48000400

08002d98 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002d98:	b580      	push	{r7, lr}
 8002d9a:	b0ac      	sub	sp, #176	; 0xb0
 8002d9c:	af00      	add	r7, sp, #0
 8002d9e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002da0:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8002da4:	2200      	movs	r2, #0
 8002da6:	601a      	str	r2, [r3, #0]
 8002da8:	605a      	str	r2, [r3, #4]
 8002daa:	609a      	str	r2, [r3, #8]
 8002dac:	60da      	str	r2, [r3, #12]
 8002dae:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002db0:	f107 0314 	add.w	r3, r7, #20
 8002db4:	2288      	movs	r2, #136	; 0x88
 8002db6:	2100      	movs	r1, #0
 8002db8:	4618      	mov	r0, r3
 8002dba:	f023 f8c9 	bl	8025f50 <memset>
  if(huart->Instance==USART2)
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	681b      	ldr	r3, [r3, #0]
 8002dc2:	4a21      	ldr	r2, [pc, #132]	; (8002e48 <HAL_UART_MspInit+0xb0>)
 8002dc4:	4293      	cmp	r3, r2
 8002dc6:	d13b      	bne.n	8002e40 <HAL_UART_MspInit+0xa8>

  /* USER CODE END USART2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8002dc8:	2302      	movs	r3, #2
 8002dca:	617b      	str	r3, [r7, #20]
    PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8002dcc:	2300      	movs	r3, #0
 8002dce:	653b      	str	r3, [r7, #80]	; 0x50
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002dd0:	f107 0314 	add.w	r3, r7, #20
 8002dd4:	4618      	mov	r0, r3
 8002dd6:	f002 f9eb 	bl	80051b0 <HAL_RCCEx_PeriphCLKConfig>
 8002dda:	4603      	mov	r3, r0
 8002ddc:	2b00      	cmp	r3, #0
 8002dde:	d001      	beq.n	8002de4 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8002de0:	f7ff fe92 	bl	8002b08 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8002de4:	4b19      	ldr	r3, [pc, #100]	; (8002e4c <HAL_UART_MspInit+0xb4>)
 8002de6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002de8:	4a18      	ldr	r2, [pc, #96]	; (8002e4c <HAL_UART_MspInit+0xb4>)
 8002dea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002dee:	6593      	str	r3, [r2, #88]	; 0x58
 8002df0:	4b16      	ldr	r3, [pc, #88]	; (8002e4c <HAL_UART_MspInit+0xb4>)
 8002df2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002df4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002df8:	613b      	str	r3, [r7, #16]
 8002dfa:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002dfc:	4b13      	ldr	r3, [pc, #76]	; (8002e4c <HAL_UART_MspInit+0xb4>)
 8002dfe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002e00:	4a12      	ldr	r2, [pc, #72]	; (8002e4c <HAL_UART_MspInit+0xb4>)
 8002e02:	f043 0301 	orr.w	r3, r3, #1
 8002e06:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002e08:	4b10      	ldr	r3, [pc, #64]	; (8002e4c <HAL_UART_MspInit+0xb4>)
 8002e0a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002e0c:	f003 0301 	and.w	r3, r3, #1
 8002e10:	60fb      	str	r3, [r7, #12]
 8002e12:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8002e14:	230c      	movs	r3, #12
 8002e16:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002e1a:	2302      	movs	r3, #2
 8002e1c:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002e20:	2300      	movs	r3, #0
 8002e22:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002e26:	2303      	movs	r3, #3
 8002e28:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002e2c:	2307      	movs	r3, #7
 8002e2e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002e32:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8002e36:	4619      	mov	r1, r3
 8002e38:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002e3c:	f000 fb1a 	bl	8003474 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8002e40:	bf00      	nop
 8002e42:	37b0      	adds	r7, #176	; 0xb0
 8002e44:	46bd      	mov	sp, r7
 8002e46:	bd80      	pop	{r7, pc}
 8002e48:	40004400 	.word	0x40004400
 8002e4c:	40021000 	.word	0x40021000

08002e50 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002e50:	b580      	push	{r7, lr}
 8002e52:	b08c      	sub	sp, #48	; 0x30
 8002e54:	af00      	add	r7, sp, #0
 8002e56:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
 8002e58:	2300      	movs	r3, #0
 8002e5a:	62fb      	str	r3, [r7, #44]	; 0x2c
  uint32_t              uwPrescalerValue = 0;
 8002e5c:	2300      	movs	r3, #0
 8002e5e:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;
  /*Configure the TIM16 IRQ priority */
  HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority ,0);
 8002e60:	2200      	movs	r2, #0
 8002e62:	6879      	ldr	r1, [r7, #4]
 8002e64:	2019      	movs	r0, #25
 8002e66:	f000 fa8b 	bl	8003380 <HAL_NVIC_SetPriority>

  /* Enable the TIM16 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 8002e6a:	2019      	movs	r0, #25
 8002e6c:	f000 faa4 	bl	80033b8 <HAL_NVIC_EnableIRQ>

  /* Enable TIM16 clock */
  __HAL_RCC_TIM16_CLK_ENABLE();
 8002e70:	4b1e      	ldr	r3, [pc, #120]	; (8002eec <HAL_InitTick+0x9c>)
 8002e72:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002e74:	4a1d      	ldr	r2, [pc, #116]	; (8002eec <HAL_InitTick+0x9c>)
 8002e76:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002e7a:	6613      	str	r3, [r2, #96]	; 0x60
 8002e7c:	4b1b      	ldr	r3, [pc, #108]	; (8002eec <HAL_InitTick+0x9c>)
 8002e7e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002e80:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e84:	60fb      	str	r3, [r7, #12]
 8002e86:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002e88:	f107 0210 	add.w	r2, r7, #16
 8002e8c:	f107 0314 	add.w	r3, r7, #20
 8002e90:	4611      	mov	r1, r2
 8002e92:	4618      	mov	r0, r3
 8002e94:	f002 f8fa 	bl	800508c <HAL_RCC_GetClockConfig>

  /* Compute TIM16 clock */
  uwTimclock = HAL_RCC_GetPCLK2Freq();
 8002e98:	f002 f8e2 	bl	8005060 <HAL_RCC_GetPCLK2Freq>
 8002e9c:	62f8      	str	r0, [r7, #44]	; 0x2c
  /* Compute the prescaler value to have TIM16 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002e9e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002ea0:	4a13      	ldr	r2, [pc, #76]	; (8002ef0 <HAL_InitTick+0xa0>)
 8002ea2:	fba2 2303 	umull	r2, r3, r2, r3
 8002ea6:	0c9b      	lsrs	r3, r3, #18
 8002ea8:	3b01      	subs	r3, #1
 8002eaa:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM16 */
  htim16.Instance = TIM16;
 8002eac:	4b11      	ldr	r3, [pc, #68]	; (8002ef4 <HAL_InitTick+0xa4>)
 8002eae:	4a12      	ldr	r2, [pc, #72]	; (8002ef8 <HAL_InitTick+0xa8>)
 8002eb0:	601a      	str	r2, [r3, #0]
  + Period = [(TIM16CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim16.Init.Period = (1000000U / 1000U) - 1U;
 8002eb2:	4b10      	ldr	r3, [pc, #64]	; (8002ef4 <HAL_InitTick+0xa4>)
 8002eb4:	f240 32e7 	movw	r2, #999	; 0x3e7
 8002eb8:	60da      	str	r2, [r3, #12]
  htim16.Init.Prescaler = uwPrescalerValue;
 8002eba:	4a0e      	ldr	r2, [pc, #56]	; (8002ef4 <HAL_InitTick+0xa4>)
 8002ebc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002ebe:	6053      	str	r3, [r2, #4]
  htim16.Init.ClockDivision = 0;
 8002ec0:	4b0c      	ldr	r3, [pc, #48]	; (8002ef4 <HAL_InitTick+0xa4>)
 8002ec2:	2200      	movs	r2, #0
 8002ec4:	611a      	str	r2, [r3, #16]
  htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002ec6:	4b0b      	ldr	r3, [pc, #44]	; (8002ef4 <HAL_InitTick+0xa4>)
 8002ec8:	2200      	movs	r2, #0
 8002eca:	609a      	str	r2, [r3, #8]

  if(HAL_TIM_Base_Init(&htim16) == HAL_OK)
 8002ecc:	4809      	ldr	r0, [pc, #36]	; (8002ef4 <HAL_InitTick+0xa4>)
 8002ece:	f003 fb65 	bl	800659c <HAL_TIM_Base_Init>
 8002ed2:	4603      	mov	r3, r0
 8002ed4:	2b00      	cmp	r3, #0
 8002ed6:	d104      	bne.n	8002ee2 <HAL_InitTick+0x92>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim16);
 8002ed8:	4806      	ldr	r0, [pc, #24]	; (8002ef4 <HAL_InitTick+0xa4>)
 8002eda:	f003 fc47 	bl	800676c <HAL_TIM_Base_Start_IT>
 8002ede:	4603      	mov	r3, r0
 8002ee0:	e000      	b.n	8002ee4 <HAL_InitTick+0x94>
  }

  /* Return function status */
  return HAL_ERROR;
 8002ee2:	2301      	movs	r3, #1
}
 8002ee4:	4618      	mov	r0, r3
 8002ee6:	3730      	adds	r7, #48	; 0x30
 8002ee8:	46bd      	mov	sp, r7
 8002eea:	bd80      	pop	{r7, pc}
 8002eec:	40021000 	.word	0x40021000
 8002ef0:	431bde83 	.word	0x431bde83
 8002ef4:	20000690 	.word	0x20000690
 8002ef8:	40014400 	.word	0x40014400

08002efc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002efc:	b480      	push	{r7}
 8002efe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002f00:	e7fe      	b.n	8002f00 <NMI_Handler+0x4>

08002f02 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002f02:	b480      	push	{r7}
 8002f04:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002f06:	e7fe      	b.n	8002f06 <HardFault_Handler+0x4>

08002f08 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002f08:	b480      	push	{r7}
 8002f0a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002f0c:	e7fe      	b.n	8002f0c <MemManage_Handler+0x4>

08002f0e <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002f0e:	b480      	push	{r7}
 8002f10:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002f12:	e7fe      	b.n	8002f12 <BusFault_Handler+0x4>

08002f14 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002f14:	b480      	push	{r7}
 8002f16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002f18:	e7fe      	b.n	8002f18 <UsageFault_Handler+0x4>

08002f1a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002f1a:	b480      	push	{r7}
 8002f1c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002f1e:	bf00      	nop
 8002f20:	46bd      	mov	sp, r7
 8002f22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f26:	4770      	bx	lr

08002f28 <TIM1_UP_TIM16_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM16 global interrupt.
  */
void TIM1_UP_TIM16_IRQHandler(void)
{
 8002f28:	b580      	push	{r7, lr}
 8002f2a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
  HAL_TIM_IRQHandler(&htim16);
 8002f2c:	4802      	ldr	r0, [pc, #8]	; (8002f38 <TIM1_UP_TIM16_IRQHandler+0x10>)
 8002f2e:	f003 fe8b 	bl	8006c48 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
}
 8002f32:	bf00      	nop
 8002f34:	bd80      	pop	{r7, pc}
 8002f36:	bf00      	nop
 8002f38:	20000690 	.word	0x20000690

08002f3c <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8002f3c:	b580      	push	{r7, lr}
 8002f3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8002f40:	4802      	ldr	r0, [pc, #8]	; (8002f4c <TIM3_IRQHandler+0x10>)
 8002f42:	f003 fe81 	bl	8006c48 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8002f46:	bf00      	nop
 8002f48:	bd80      	pop	{r7, pc}
 8002f4a:	bf00      	nop
 8002f4c:	20000560 	.word	0x20000560

08002f50 <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 8002f50:	b580      	push	{r7, lr}
 8002f52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8002f54:	4802      	ldr	r0, [pc, #8]	; (8002f60 <SPI1_IRQHandler+0x10>)
 8002f56:	f003 f89d 	bl	8006094 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8002f5a:	bf00      	nop
 8002f5c:	bd80      	pop	{r7, pc}
 8002f5e:	bf00      	nop
 8002f60:	200004fc 	.word	0x200004fc

08002f64 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8002f64:	b580      	push	{r7, lr}
 8002f66:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(SW1_Pin);
 8002f68:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8002f6c:	f000 fc76 	bl	800385c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(B1_Pin);
 8002f70:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8002f74:	f000 fc72 	bl	800385c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8002f78:	bf00      	nop
 8002f7a:	bd80      	pop	{r7, pc}

08002f7c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002f7c:	b480      	push	{r7}
 8002f7e:	af00      	add	r7, sp, #0
	return 1;
 8002f80:	2301      	movs	r3, #1
}
 8002f82:	4618      	mov	r0, r3
 8002f84:	46bd      	mov	sp, r7
 8002f86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f8a:	4770      	bx	lr

08002f8c <_kill>:

int _kill(int pid, int sig)
{
 8002f8c:	b580      	push	{r7, lr}
 8002f8e:	b082      	sub	sp, #8
 8002f90:	af00      	add	r7, sp, #0
 8002f92:	6078      	str	r0, [r7, #4]
 8002f94:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8002f96:	f022 f9a9 	bl	80252ec <__errno>
 8002f9a:	4603      	mov	r3, r0
 8002f9c:	2216      	movs	r2, #22
 8002f9e:	601a      	str	r2, [r3, #0]
	return -1;
 8002fa0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8002fa4:	4618      	mov	r0, r3
 8002fa6:	3708      	adds	r7, #8
 8002fa8:	46bd      	mov	sp, r7
 8002faa:	bd80      	pop	{r7, pc}

08002fac <_exit>:

void _exit (int status)
{
 8002fac:	b580      	push	{r7, lr}
 8002fae:	b082      	sub	sp, #8
 8002fb0:	af00      	add	r7, sp, #0
 8002fb2:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8002fb4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002fb8:	6878      	ldr	r0, [r7, #4]
 8002fba:	f7ff ffe7 	bl	8002f8c <_kill>
	while (1) {}		/* Make sure we hang here */
 8002fbe:	e7fe      	b.n	8002fbe <_exit+0x12>

08002fc0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002fc0:	b580      	push	{r7, lr}
 8002fc2:	b086      	sub	sp, #24
 8002fc4:	af00      	add	r7, sp, #0
 8002fc6:	60f8      	str	r0, [r7, #12]
 8002fc8:	60b9      	str	r1, [r7, #8]
 8002fca:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002fcc:	2300      	movs	r3, #0
 8002fce:	617b      	str	r3, [r7, #20]
 8002fd0:	e00a      	b.n	8002fe8 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8002fd2:	f3af 8000 	nop.w
 8002fd6:	4601      	mov	r1, r0
 8002fd8:	68bb      	ldr	r3, [r7, #8]
 8002fda:	1c5a      	adds	r2, r3, #1
 8002fdc:	60ba      	str	r2, [r7, #8]
 8002fde:	b2ca      	uxtb	r2, r1
 8002fe0:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002fe2:	697b      	ldr	r3, [r7, #20]
 8002fe4:	3301      	adds	r3, #1
 8002fe6:	617b      	str	r3, [r7, #20]
 8002fe8:	697a      	ldr	r2, [r7, #20]
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	429a      	cmp	r2, r3
 8002fee:	dbf0      	blt.n	8002fd2 <_read+0x12>
	}

return len;
 8002ff0:	687b      	ldr	r3, [r7, #4]
}
 8002ff2:	4618      	mov	r0, r3
 8002ff4:	3718      	adds	r7, #24
 8002ff6:	46bd      	mov	sp, r7
 8002ff8:	bd80      	pop	{r7, pc}

08002ffa <_close>:
	}
	return len;
}

int _close(int file)
{
 8002ffa:	b480      	push	{r7}
 8002ffc:	b083      	sub	sp, #12
 8002ffe:	af00      	add	r7, sp, #0
 8003000:	6078      	str	r0, [r7, #4]
	return -1;
 8003002:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8003006:	4618      	mov	r0, r3
 8003008:	370c      	adds	r7, #12
 800300a:	46bd      	mov	sp, r7
 800300c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003010:	4770      	bx	lr

08003012 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8003012:	b480      	push	{r7}
 8003014:	b083      	sub	sp, #12
 8003016:	af00      	add	r7, sp, #0
 8003018:	6078      	str	r0, [r7, #4]
 800301a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800301c:	683b      	ldr	r3, [r7, #0]
 800301e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8003022:	605a      	str	r2, [r3, #4]
	return 0;
 8003024:	2300      	movs	r3, #0
}
 8003026:	4618      	mov	r0, r3
 8003028:	370c      	adds	r7, #12
 800302a:	46bd      	mov	sp, r7
 800302c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003030:	4770      	bx	lr

08003032 <_isatty>:

int _isatty(int file)
{
 8003032:	b480      	push	{r7}
 8003034:	b083      	sub	sp, #12
 8003036:	af00      	add	r7, sp, #0
 8003038:	6078      	str	r0, [r7, #4]
	return 1;
 800303a:	2301      	movs	r3, #1
}
 800303c:	4618      	mov	r0, r3
 800303e:	370c      	adds	r7, #12
 8003040:	46bd      	mov	sp, r7
 8003042:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003046:	4770      	bx	lr

08003048 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8003048:	b480      	push	{r7}
 800304a:	b085      	sub	sp, #20
 800304c:	af00      	add	r7, sp, #0
 800304e:	60f8      	str	r0, [r7, #12]
 8003050:	60b9      	str	r1, [r7, #8]
 8003052:	607a      	str	r2, [r7, #4]
	return 0;
 8003054:	2300      	movs	r3, #0
}
 8003056:	4618      	mov	r0, r3
 8003058:	3714      	adds	r7, #20
 800305a:	46bd      	mov	sp, r7
 800305c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003060:	4770      	bx	lr
	...

08003064 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8003064:	b580      	push	{r7, lr}
 8003066:	b086      	sub	sp, #24
 8003068:	af00      	add	r7, sp, #0
 800306a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800306c:	4a14      	ldr	r2, [pc, #80]	; (80030c0 <_sbrk+0x5c>)
 800306e:	4b15      	ldr	r3, [pc, #84]	; (80030c4 <_sbrk+0x60>)
 8003070:	1ad3      	subs	r3, r2, r3
 8003072:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8003074:	697b      	ldr	r3, [r7, #20]
 8003076:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8003078:	4b13      	ldr	r3, [pc, #76]	; (80030c8 <_sbrk+0x64>)
 800307a:	681b      	ldr	r3, [r3, #0]
 800307c:	2b00      	cmp	r3, #0
 800307e:	d102      	bne.n	8003086 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8003080:	4b11      	ldr	r3, [pc, #68]	; (80030c8 <_sbrk+0x64>)
 8003082:	4a12      	ldr	r2, [pc, #72]	; (80030cc <_sbrk+0x68>)
 8003084:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8003086:	4b10      	ldr	r3, [pc, #64]	; (80030c8 <_sbrk+0x64>)
 8003088:	681a      	ldr	r2, [r3, #0]
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	4413      	add	r3, r2
 800308e:	693a      	ldr	r2, [r7, #16]
 8003090:	429a      	cmp	r2, r3
 8003092:	d207      	bcs.n	80030a4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8003094:	f022 f92a 	bl	80252ec <__errno>
 8003098:	4603      	mov	r3, r0
 800309a:	220c      	movs	r2, #12
 800309c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800309e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80030a2:	e009      	b.n	80030b8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80030a4:	4b08      	ldr	r3, [pc, #32]	; (80030c8 <_sbrk+0x64>)
 80030a6:	681b      	ldr	r3, [r3, #0]
 80030a8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80030aa:	4b07      	ldr	r3, [pc, #28]	; (80030c8 <_sbrk+0x64>)
 80030ac:	681a      	ldr	r2, [r3, #0]
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	4413      	add	r3, r2
 80030b2:	4a05      	ldr	r2, [pc, #20]	; (80030c8 <_sbrk+0x64>)
 80030b4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80030b6:	68fb      	ldr	r3, [r7, #12]
}
 80030b8:	4618      	mov	r0, r3
 80030ba:	3718      	adds	r7, #24
 80030bc:	46bd      	mov	sp, r7
 80030be:	bd80      	pop	{r7, pc}
 80030c0:	20018000 	.word	0x20018000
 80030c4:	00000400 	.word	0x00000400
 80030c8:	200006e0 	.word	0x200006e0
 80030cc:	20004300 	.word	0x20004300

080030d0 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 80030d0:	b480      	push	{r7}
 80030d2:	af00      	add	r7, sp, #0
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 80030d4:	4b06      	ldr	r3, [pc, #24]	; (80030f0 <SystemInit+0x20>)
 80030d6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80030da:	4a05      	ldr	r2, [pc, #20]	; (80030f0 <SystemInit+0x20>)
 80030dc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80030e0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
#endif
}
 80030e4:	bf00      	nop
 80030e6:	46bd      	mov	sp, r7
 80030e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030ec:	4770      	bx	lr
 80030ee:	bf00      	nop
 80030f0:	e000ed00 	.word	0xe000ed00

080030f4 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Set stack pointer */
 80030f4:	f8df d034 	ldr.w	sp, [pc, #52]	; 800312c <LoopForever+0x2>

/* Call the clock system initialization function.*/
    bl  SystemInit
 80030f8:	f7ff ffea 	bl	80030d0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80030fc:	480c      	ldr	r0, [pc, #48]	; (8003130 <LoopForever+0x6>)
  ldr r1, =_edata
 80030fe:	490d      	ldr	r1, [pc, #52]	; (8003134 <LoopForever+0xa>)
  ldr r2, =_sidata
 8003100:	4a0d      	ldr	r2, [pc, #52]	; (8003138 <LoopForever+0xe>)
  movs r3, #0
 8003102:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003104:	e002      	b.n	800310c <LoopCopyDataInit>

08003106 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8003106:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003108:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800310a:	3304      	adds	r3, #4

0800310c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800310c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800310e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003110:	d3f9      	bcc.n	8003106 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003112:	4a0a      	ldr	r2, [pc, #40]	; (800313c <LoopForever+0x12>)
  ldr r4, =_ebss
 8003114:	4c0a      	ldr	r4, [pc, #40]	; (8003140 <LoopForever+0x16>)
  movs r3, #0
 8003116:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003118:	e001      	b.n	800311e <LoopFillZerobss>

0800311a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800311a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800311c:	3204      	adds	r2, #4

0800311e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800311e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003120:	d3fb      	bcc.n	800311a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8003122:	f022 fd3f 	bl	8025ba4 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8003126:	f7ff fa31 	bl	800258c <main>

0800312a <LoopForever>:

LoopForever:
    b LoopForever
 800312a:	e7fe      	b.n	800312a <LoopForever>
  ldr   sp, =_estack    /* Set stack pointer */
 800312c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8003130:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8003134:	200002f4 	.word	0x200002f4
  ldr r2, =_sidata
 8003138:	08033104 	.word	0x08033104
  ldr r2, =_sbss
 800313c:	200002f8 	.word	0x200002f8
  ldr r4, =_ebss
 8003140:	200042fc 	.word	0x200042fc

08003144 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8003144:	e7fe      	b.n	8003144 <ADC1_2_IRQHandler>
	...

08003148 <HAL_Init>:
  *         each 1ms in the SysTick_Handler() interrupt handler.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003148:	b580      	push	{r7, lr}
 800314a:	b082      	sub	sp, #8
 800314c:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 800314e:	2300      	movs	r3, #0
 8003150:	71fb      	strb	r3, [r7, #7]
#if (DATA_CACHE_ENABLE == 0)
   __HAL_FLASH_DATA_CACHE_DISABLE();
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003152:	4b0c      	ldr	r3, [pc, #48]	; (8003184 <HAL_Init+0x3c>)
 8003154:	681b      	ldr	r3, [r3, #0]
 8003156:	4a0b      	ldr	r2, [pc, #44]	; (8003184 <HAL_Init+0x3c>)
 8003158:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800315c:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800315e:	2003      	movs	r0, #3
 8003160:	f000 f903 	bl	800336a <HAL_NVIC_SetPriorityGrouping>

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8003164:	200f      	movs	r0, #15
 8003166:	f7ff fe73 	bl	8002e50 <HAL_InitTick>
 800316a:	4603      	mov	r3, r0
 800316c:	2b00      	cmp	r3, #0
 800316e:	d002      	beq.n	8003176 <HAL_Init+0x2e>
  {
    status = HAL_ERROR;
 8003170:	2301      	movs	r3, #1
 8003172:	71fb      	strb	r3, [r7, #7]
 8003174:	e001      	b.n	800317a <HAL_Init+0x32>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 8003176:	f7ff fccd 	bl	8002b14 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 800317a:	79fb      	ldrb	r3, [r7, #7]
}
 800317c:	4618      	mov	r0, r3
 800317e:	3708      	adds	r7, #8
 8003180:	46bd      	mov	sp, r7
 8003182:	bd80      	pop	{r7, pc}
 8003184:	40022000 	.word	0x40022000

08003188 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8003188:	b480      	push	{r7}
 800318a:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 800318c:	4b06      	ldr	r3, [pc, #24]	; (80031a8 <HAL_IncTick+0x20>)
 800318e:	781b      	ldrb	r3, [r3, #0]
 8003190:	461a      	mov	r2, r3
 8003192:	4b06      	ldr	r3, [pc, #24]	; (80031ac <HAL_IncTick+0x24>)
 8003194:	681b      	ldr	r3, [r3, #0]
 8003196:	4413      	add	r3, r2
 8003198:	4a04      	ldr	r2, [pc, #16]	; (80031ac <HAL_IncTick+0x24>)
 800319a:	6013      	str	r3, [r2, #0]
}
 800319c:	bf00      	nop
 800319e:	46bd      	mov	sp, r7
 80031a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031a4:	4770      	bx	lr
 80031a6:	bf00      	nop
 80031a8:	20000010 	.word	0x20000010
 80031ac:	200006e4 	.word	0x200006e4

080031b0 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80031b0:	b480      	push	{r7}
 80031b2:	af00      	add	r7, sp, #0
  return uwTick;
 80031b4:	4b03      	ldr	r3, [pc, #12]	; (80031c4 <HAL_GetTick+0x14>)
 80031b6:	681b      	ldr	r3, [r3, #0]
}
 80031b8:	4618      	mov	r0, r3
 80031ba:	46bd      	mov	sp, r7
 80031bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031c0:	4770      	bx	lr
 80031c2:	bf00      	nop
 80031c4:	200006e4 	.word	0x200006e4

080031c8 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80031c8:	b480      	push	{r7}
 80031ca:	b085      	sub	sp, #20
 80031cc:	af00      	add	r7, sp, #0
 80031ce:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	f003 0307 	and.w	r3, r3, #7
 80031d6:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80031d8:	4b0c      	ldr	r3, [pc, #48]	; (800320c <__NVIC_SetPriorityGrouping+0x44>)
 80031da:	68db      	ldr	r3, [r3, #12]
 80031dc:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80031de:	68ba      	ldr	r2, [r7, #8]
 80031e0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80031e4:	4013      	ands	r3, r2
 80031e6:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80031e8:	68fb      	ldr	r3, [r7, #12]
 80031ea:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80031ec:	68bb      	ldr	r3, [r7, #8]
 80031ee:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80031f0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80031f4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80031f8:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80031fa:	4a04      	ldr	r2, [pc, #16]	; (800320c <__NVIC_SetPriorityGrouping+0x44>)
 80031fc:	68bb      	ldr	r3, [r7, #8]
 80031fe:	60d3      	str	r3, [r2, #12]
}
 8003200:	bf00      	nop
 8003202:	3714      	adds	r7, #20
 8003204:	46bd      	mov	sp, r7
 8003206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800320a:	4770      	bx	lr
 800320c:	e000ed00 	.word	0xe000ed00

08003210 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8003210:	b480      	push	{r7}
 8003212:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003214:	4b04      	ldr	r3, [pc, #16]	; (8003228 <__NVIC_GetPriorityGrouping+0x18>)
 8003216:	68db      	ldr	r3, [r3, #12]
 8003218:	0a1b      	lsrs	r3, r3, #8
 800321a:	f003 0307 	and.w	r3, r3, #7
}
 800321e:	4618      	mov	r0, r3
 8003220:	46bd      	mov	sp, r7
 8003222:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003226:	4770      	bx	lr
 8003228:	e000ed00 	.word	0xe000ed00

0800322c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800322c:	b480      	push	{r7}
 800322e:	b083      	sub	sp, #12
 8003230:	af00      	add	r7, sp, #0
 8003232:	4603      	mov	r3, r0
 8003234:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003236:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800323a:	2b00      	cmp	r3, #0
 800323c:	db0b      	blt.n	8003256 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800323e:	79fb      	ldrb	r3, [r7, #7]
 8003240:	f003 021f 	and.w	r2, r3, #31
 8003244:	4907      	ldr	r1, [pc, #28]	; (8003264 <__NVIC_EnableIRQ+0x38>)
 8003246:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800324a:	095b      	lsrs	r3, r3, #5
 800324c:	2001      	movs	r0, #1
 800324e:	fa00 f202 	lsl.w	r2, r0, r2
 8003252:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8003256:	bf00      	nop
 8003258:	370c      	adds	r7, #12
 800325a:	46bd      	mov	sp, r7
 800325c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003260:	4770      	bx	lr
 8003262:	bf00      	nop
 8003264:	e000e100 	.word	0xe000e100

08003268 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8003268:	b480      	push	{r7}
 800326a:	b083      	sub	sp, #12
 800326c:	af00      	add	r7, sp, #0
 800326e:	4603      	mov	r3, r0
 8003270:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003272:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003276:	2b00      	cmp	r3, #0
 8003278:	db12      	blt.n	80032a0 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800327a:	79fb      	ldrb	r3, [r7, #7]
 800327c:	f003 021f 	and.w	r2, r3, #31
 8003280:	490a      	ldr	r1, [pc, #40]	; (80032ac <__NVIC_DisableIRQ+0x44>)
 8003282:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003286:	095b      	lsrs	r3, r3, #5
 8003288:	2001      	movs	r0, #1
 800328a:	fa00 f202 	lsl.w	r2, r0, r2
 800328e:	3320      	adds	r3, #32
 8003290:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8003294:	f3bf 8f4f 	dsb	sy
}
 8003298:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800329a:	f3bf 8f6f 	isb	sy
}
 800329e:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 80032a0:	bf00      	nop
 80032a2:	370c      	adds	r7, #12
 80032a4:	46bd      	mov	sp, r7
 80032a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032aa:	4770      	bx	lr
 80032ac:	e000e100 	.word	0xe000e100

080032b0 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80032b0:	b480      	push	{r7}
 80032b2:	b083      	sub	sp, #12
 80032b4:	af00      	add	r7, sp, #0
 80032b6:	4603      	mov	r3, r0
 80032b8:	6039      	str	r1, [r7, #0]
 80032ba:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80032bc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80032c0:	2b00      	cmp	r3, #0
 80032c2:	db0a      	blt.n	80032da <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80032c4:	683b      	ldr	r3, [r7, #0]
 80032c6:	b2da      	uxtb	r2, r3
 80032c8:	490c      	ldr	r1, [pc, #48]	; (80032fc <__NVIC_SetPriority+0x4c>)
 80032ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80032ce:	0112      	lsls	r2, r2, #4
 80032d0:	b2d2      	uxtb	r2, r2
 80032d2:	440b      	add	r3, r1
 80032d4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80032d8:	e00a      	b.n	80032f0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80032da:	683b      	ldr	r3, [r7, #0]
 80032dc:	b2da      	uxtb	r2, r3
 80032de:	4908      	ldr	r1, [pc, #32]	; (8003300 <__NVIC_SetPriority+0x50>)
 80032e0:	79fb      	ldrb	r3, [r7, #7]
 80032e2:	f003 030f 	and.w	r3, r3, #15
 80032e6:	3b04      	subs	r3, #4
 80032e8:	0112      	lsls	r2, r2, #4
 80032ea:	b2d2      	uxtb	r2, r2
 80032ec:	440b      	add	r3, r1
 80032ee:	761a      	strb	r2, [r3, #24]
}
 80032f0:	bf00      	nop
 80032f2:	370c      	adds	r7, #12
 80032f4:	46bd      	mov	sp, r7
 80032f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032fa:	4770      	bx	lr
 80032fc:	e000e100 	.word	0xe000e100
 8003300:	e000ed00 	.word	0xe000ed00

08003304 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003304:	b480      	push	{r7}
 8003306:	b089      	sub	sp, #36	; 0x24
 8003308:	af00      	add	r7, sp, #0
 800330a:	60f8      	str	r0, [r7, #12]
 800330c:	60b9      	str	r1, [r7, #8]
 800330e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8003310:	68fb      	ldr	r3, [r7, #12]
 8003312:	f003 0307 	and.w	r3, r3, #7
 8003316:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003318:	69fb      	ldr	r3, [r7, #28]
 800331a:	f1c3 0307 	rsb	r3, r3, #7
 800331e:	2b04      	cmp	r3, #4
 8003320:	bf28      	it	cs
 8003322:	2304      	movcs	r3, #4
 8003324:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003326:	69fb      	ldr	r3, [r7, #28]
 8003328:	3304      	adds	r3, #4
 800332a:	2b06      	cmp	r3, #6
 800332c:	d902      	bls.n	8003334 <NVIC_EncodePriority+0x30>
 800332e:	69fb      	ldr	r3, [r7, #28]
 8003330:	3b03      	subs	r3, #3
 8003332:	e000      	b.n	8003336 <NVIC_EncodePriority+0x32>
 8003334:	2300      	movs	r3, #0
 8003336:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003338:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800333c:	69bb      	ldr	r3, [r7, #24]
 800333e:	fa02 f303 	lsl.w	r3, r2, r3
 8003342:	43da      	mvns	r2, r3
 8003344:	68bb      	ldr	r3, [r7, #8]
 8003346:	401a      	ands	r2, r3
 8003348:	697b      	ldr	r3, [r7, #20]
 800334a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800334c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003350:	697b      	ldr	r3, [r7, #20]
 8003352:	fa01 f303 	lsl.w	r3, r1, r3
 8003356:	43d9      	mvns	r1, r3
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800335c:	4313      	orrs	r3, r2
         );
}
 800335e:	4618      	mov	r0, r3
 8003360:	3724      	adds	r7, #36	; 0x24
 8003362:	46bd      	mov	sp, r7
 8003364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003368:	4770      	bx	lr

0800336a <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800336a:	b580      	push	{r7, lr}
 800336c:	b082      	sub	sp, #8
 800336e:	af00      	add	r7, sp, #0
 8003370:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8003372:	6878      	ldr	r0, [r7, #4]
 8003374:	f7ff ff28 	bl	80031c8 <__NVIC_SetPriorityGrouping>
}
 8003378:	bf00      	nop
 800337a:	3708      	adds	r7, #8
 800337c:	46bd      	mov	sp, r7
 800337e:	bd80      	pop	{r7, pc}

08003380 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003380:	b580      	push	{r7, lr}
 8003382:	b086      	sub	sp, #24
 8003384:	af00      	add	r7, sp, #0
 8003386:	4603      	mov	r3, r0
 8003388:	60b9      	str	r1, [r7, #8]
 800338a:	607a      	str	r2, [r7, #4]
 800338c:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 800338e:	2300      	movs	r3, #0
 8003390:	617b      	str	r3, [r7, #20]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 8003392:	f7ff ff3d 	bl	8003210 <__NVIC_GetPriorityGrouping>
 8003396:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8003398:	687a      	ldr	r2, [r7, #4]
 800339a:	68b9      	ldr	r1, [r7, #8]
 800339c:	6978      	ldr	r0, [r7, #20]
 800339e:	f7ff ffb1 	bl	8003304 <NVIC_EncodePriority>
 80033a2:	4602      	mov	r2, r0
 80033a4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80033a8:	4611      	mov	r1, r2
 80033aa:	4618      	mov	r0, r3
 80033ac:	f7ff ff80 	bl	80032b0 <__NVIC_SetPriority>
}
 80033b0:	bf00      	nop
 80033b2:	3718      	adds	r7, #24
 80033b4:	46bd      	mov	sp, r7
 80033b6:	bd80      	pop	{r7, pc}

080033b8 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32l4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80033b8:	b580      	push	{r7, lr}
 80033ba:	b082      	sub	sp, #8
 80033bc:	af00      	add	r7, sp, #0
 80033be:	4603      	mov	r3, r0
 80033c0:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80033c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033c6:	4618      	mov	r0, r3
 80033c8:	f7ff ff30 	bl	800322c <__NVIC_EnableIRQ>
}
 80033cc:	bf00      	nop
 80033ce:	3708      	adds	r7, #8
 80033d0:	46bd      	mov	sp, r7
 80033d2:	bd80      	pop	{r7, pc}

080033d4 <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32l4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80033d4:	b580      	push	{r7, lr}
 80033d6:	b082      	sub	sp, #8
 80033d8:	af00      	add	r7, sp, #0
 80033da:	4603      	mov	r3, r0
 80033dc:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 80033de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033e2:	4618      	mov	r0, r3
 80033e4:	f7ff ff40 	bl	8003268 <__NVIC_DisableIRQ>
}
 80033e8:	bf00      	nop
 80033ea:	3708      	adds	r7, #8
 80033ec:	46bd      	mov	sp, r7
 80033ee:	bd80      	pop	{r7, pc}

080033f0 <HAL_DMA_Abort_IT>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 80033f0:	b580      	push	{r7, lr}
 80033f2:	b084      	sub	sp, #16
 80033f4:	af00      	add	r7, sp, #0
 80033f6:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80033f8:	2300      	movs	r3, #0
 80033fa:	73fb      	strb	r3, [r7, #15]

  if(HAL_DMA_STATE_BUSY != hdma->State)
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8003402:	b2db      	uxtb	r3, r3
 8003404:	2b02      	cmp	r3, #2
 8003406:	d005      	beq.n	8003414 <HAL_DMA_Abort_IT+0x24>
  {
    /* no transfer ongoing */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	2204      	movs	r2, #4
 800340c:	63da      	str	r2, [r3, #60]	; 0x3c

    status = HAL_ERROR;
 800340e:	2301      	movs	r3, #1
 8003410:	73fb      	strb	r3, [r7, #15]
 8003412:	e029      	b.n	8003468 <HAL_DMA_Abort_IT+0x78>
  }
  else
  {
    /* Disable DMA IT */
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	681b      	ldr	r3, [r3, #0]
 8003418:	681a      	ldr	r2, [r3, #0]
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	f022 020e 	bic.w	r2, r2, #14
 8003422:	601a      	str	r2, [r3, #0]

    /* Disable the channel */
    __HAL_DMA_DISABLE(hdma);
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	681b      	ldr	r3, [r3, #0]
 8003428:	681a      	ldr	r2, [r3, #0]
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	f022 0201 	bic.w	r2, r2, #1
 8003432:	601a      	str	r2, [r3, #0]
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
    }

#else
    /* Clear all flags */
    hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1CU));
 8003434:	687b      	ldr	r3, [r7, #4]
 8003436:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003438:	f003 021c 	and.w	r2, r3, #28
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003440:	2101      	movs	r1, #1
 8003442:	fa01 f202 	lsl.w	r2, r1, r2
 8003446:	605a      	str	r2, [r3, #4]
#endif /* DMAMUX1 */

    /* Change the DMA state */
    hdma->State = HAL_DMA_STATE_READY;
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	2201      	movs	r2, #1
 800344c:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	2200      	movs	r2, #0
 8003454:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

    /* Call User Abort callback */
    if(hdma->XferAbortCallback != NULL)
 8003458:	687b      	ldr	r3, [r7, #4]
 800345a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800345c:	2b00      	cmp	r3, #0
 800345e:	d003      	beq.n	8003468 <HAL_DMA_Abort_IT+0x78>
    {
      hdma->XferAbortCallback(hdma);
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003464:	6878      	ldr	r0, [r7, #4]
 8003466:	4798      	blx	r3
    }
  }
  return status;
 8003468:	7bfb      	ldrb	r3, [r7, #15]
}
 800346a:	4618      	mov	r0, r3
 800346c:	3710      	adds	r7, #16
 800346e:	46bd      	mov	sp, r7
 8003470:	bd80      	pop	{r7, pc}
	...

08003474 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003474:	b480      	push	{r7}
 8003476:	b087      	sub	sp, #28
 8003478:	af00      	add	r7, sp, #0
 800347a:	6078      	str	r0, [r7, #4]
 800347c:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 800347e:	2300      	movs	r3, #0
 8003480:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8003482:	e17f      	b.n	8003784 <HAL_GPIO_Init+0x310>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8003484:	683b      	ldr	r3, [r7, #0]
 8003486:	681a      	ldr	r2, [r3, #0]
 8003488:	2101      	movs	r1, #1
 800348a:	697b      	ldr	r3, [r7, #20]
 800348c:	fa01 f303 	lsl.w	r3, r1, r3
 8003490:	4013      	ands	r3, r2
 8003492:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8003494:	68fb      	ldr	r3, [r7, #12]
 8003496:	2b00      	cmp	r3, #0
 8003498:	f000 8171 	beq.w	800377e <HAL_GPIO_Init+0x30a>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 800349c:	683b      	ldr	r3, [r7, #0]
 800349e:	685b      	ldr	r3, [r3, #4]
 80034a0:	f003 0303 	and.w	r3, r3, #3
 80034a4:	2b01      	cmp	r3, #1
 80034a6:	d005      	beq.n	80034b4 <HAL_GPIO_Init+0x40>
 80034a8:	683b      	ldr	r3, [r7, #0]
 80034aa:	685b      	ldr	r3, [r3, #4]
 80034ac:	f003 0303 	and.w	r3, r3, #3
 80034b0:	2b02      	cmp	r3, #2
 80034b2:	d130      	bne.n	8003516 <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	689b      	ldr	r3, [r3, #8]
 80034b8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 80034ba:	697b      	ldr	r3, [r7, #20]
 80034bc:	005b      	lsls	r3, r3, #1
 80034be:	2203      	movs	r2, #3
 80034c0:	fa02 f303 	lsl.w	r3, r2, r3
 80034c4:	43db      	mvns	r3, r3
 80034c6:	693a      	ldr	r2, [r7, #16]
 80034c8:	4013      	ands	r3, r2
 80034ca:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 80034cc:	683b      	ldr	r3, [r7, #0]
 80034ce:	68da      	ldr	r2, [r3, #12]
 80034d0:	697b      	ldr	r3, [r7, #20]
 80034d2:	005b      	lsls	r3, r3, #1
 80034d4:	fa02 f303 	lsl.w	r3, r2, r3
 80034d8:	693a      	ldr	r2, [r7, #16]
 80034da:	4313      	orrs	r3, r2
 80034dc:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 80034de:	687b      	ldr	r3, [r7, #4]
 80034e0:	693a      	ldr	r2, [r7, #16]
 80034e2:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	685b      	ldr	r3, [r3, #4]
 80034e8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 80034ea:	2201      	movs	r2, #1
 80034ec:	697b      	ldr	r3, [r7, #20]
 80034ee:	fa02 f303 	lsl.w	r3, r2, r3
 80034f2:	43db      	mvns	r3, r3
 80034f4:	693a      	ldr	r2, [r7, #16]
 80034f6:	4013      	ands	r3, r2
 80034f8:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80034fa:	683b      	ldr	r3, [r7, #0]
 80034fc:	685b      	ldr	r3, [r3, #4]
 80034fe:	091b      	lsrs	r3, r3, #4
 8003500:	f003 0201 	and.w	r2, r3, #1
 8003504:	697b      	ldr	r3, [r7, #20]
 8003506:	fa02 f303 	lsl.w	r3, r2, r3
 800350a:	693a      	ldr	r2, [r7, #16]
 800350c:	4313      	orrs	r3, r2
 800350e:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	693a      	ldr	r2, [r7, #16]
 8003514:	605a      	str	r2, [r3, #4]
      }

#if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) || defined(STM32L486xx)

      /* In case of Analog mode, check if ADC control mode is selected */
      if((GPIO_Init->Mode & GPIO_MODE_ANALOG) == GPIO_MODE_ANALOG)
 8003516:	683b      	ldr	r3, [r7, #0]
 8003518:	685b      	ldr	r3, [r3, #4]
 800351a:	f003 0303 	and.w	r3, r3, #3
 800351e:	2b03      	cmp	r3, #3
 8003520:	d118      	bne.n	8003554 <HAL_GPIO_Init+0xe0>
      {
        /* Configure the IO Output Type */
        temp = GPIOx->ASCR;
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003526:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_ASCR_ASC0 << position) ;
 8003528:	2201      	movs	r2, #1
 800352a:	697b      	ldr	r3, [r7, #20]
 800352c:	fa02 f303 	lsl.w	r3, r2, r3
 8003530:	43db      	mvns	r3, r3
 8003532:	693a      	ldr	r2, [r7, #16]
 8003534:	4013      	ands	r3, r2
 8003536:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_MODE_ANALOG_ADC_CONTROL) >> 3) << position);
 8003538:	683b      	ldr	r3, [r7, #0]
 800353a:	685b      	ldr	r3, [r3, #4]
 800353c:	08db      	lsrs	r3, r3, #3
 800353e:	f003 0201 	and.w	r2, r3, #1
 8003542:	697b      	ldr	r3, [r7, #20]
 8003544:	fa02 f303 	lsl.w	r3, r2, r3
 8003548:	693a      	ldr	r2, [r7, #16]
 800354a:	4313      	orrs	r3, r2
 800354c:	613b      	str	r3, [r7, #16]
        GPIOx->ASCR = temp;
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	693a      	ldr	r2, [r7, #16]
 8003552:	62da      	str	r2, [r3, #44]	; 0x2c
      }

#endif /* STM32L471xx || STM32L475xx || STM32L476xx || STM32L485xx || STM32L486xx */

      /* Activate the Pull-up or Pull down resistor for the current IO */
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003554:	683b      	ldr	r3, [r7, #0]
 8003556:	685b      	ldr	r3, [r3, #4]
 8003558:	f003 0303 	and.w	r3, r3, #3
 800355c:	2b03      	cmp	r3, #3
 800355e:	d017      	beq.n	8003590 <HAL_GPIO_Init+0x11c>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        temp = GPIOx->PUPDR;
 8003560:	687b      	ldr	r3, [r7, #4]
 8003562:	68db      	ldr	r3, [r3, #12]
 8003564:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8003566:	697b      	ldr	r3, [r7, #20]
 8003568:	005b      	lsls	r3, r3, #1
 800356a:	2203      	movs	r2, #3
 800356c:	fa02 f303 	lsl.w	r3, r2, r3
 8003570:	43db      	mvns	r3, r3
 8003572:	693a      	ldr	r2, [r7, #16]
 8003574:	4013      	ands	r3, r2
 8003576:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003578:	683b      	ldr	r3, [r7, #0]
 800357a:	689a      	ldr	r2, [r3, #8]
 800357c:	697b      	ldr	r3, [r7, #20]
 800357e:	005b      	lsls	r3, r3, #1
 8003580:	fa02 f303 	lsl.w	r3, r2, r3
 8003584:	693a      	ldr	r2, [r7, #16]
 8003586:	4313      	orrs	r3, r2
 8003588:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 800358a:	687b      	ldr	r3, [r7, #4]
 800358c:	693a      	ldr	r2, [r7, #16]
 800358e:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003590:	683b      	ldr	r3, [r7, #0]
 8003592:	685b      	ldr	r3, [r3, #4]
 8003594:	f003 0303 	and.w	r3, r3, #3
 8003598:	2b02      	cmp	r3, #2
 800359a:	d123      	bne.n	80035e4 <HAL_GPIO_Init+0x170>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 800359c:	697b      	ldr	r3, [r7, #20]
 800359e:	08da      	lsrs	r2, r3, #3
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	3208      	adds	r2, #8
 80035a4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80035a8:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 80035aa:	697b      	ldr	r3, [r7, #20]
 80035ac:	f003 0307 	and.w	r3, r3, #7
 80035b0:	009b      	lsls	r3, r3, #2
 80035b2:	220f      	movs	r2, #15
 80035b4:	fa02 f303 	lsl.w	r3, r2, r3
 80035b8:	43db      	mvns	r3, r3
 80035ba:	693a      	ldr	r2, [r7, #16]
 80035bc:	4013      	ands	r3, r2
 80035be:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 80035c0:	683b      	ldr	r3, [r7, #0]
 80035c2:	691a      	ldr	r2, [r3, #16]
 80035c4:	697b      	ldr	r3, [r7, #20]
 80035c6:	f003 0307 	and.w	r3, r3, #7
 80035ca:	009b      	lsls	r3, r3, #2
 80035cc:	fa02 f303 	lsl.w	r3, r2, r3
 80035d0:	693a      	ldr	r2, [r7, #16]
 80035d2:	4313      	orrs	r3, r2
 80035d4:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 80035d6:	697b      	ldr	r3, [r7, #20]
 80035d8:	08da      	lsrs	r2, r3, #3
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	3208      	adds	r2, #8
 80035de:	6939      	ldr	r1, [r7, #16]
 80035e0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 80035ea:	697b      	ldr	r3, [r7, #20]
 80035ec:	005b      	lsls	r3, r3, #1
 80035ee:	2203      	movs	r2, #3
 80035f0:	fa02 f303 	lsl.w	r3, r2, r3
 80035f4:	43db      	mvns	r3, r3
 80035f6:	693a      	ldr	r2, [r7, #16]
 80035f8:	4013      	ands	r3, r2
 80035fa:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80035fc:	683b      	ldr	r3, [r7, #0]
 80035fe:	685b      	ldr	r3, [r3, #4]
 8003600:	f003 0203 	and.w	r2, r3, #3
 8003604:	697b      	ldr	r3, [r7, #20]
 8003606:	005b      	lsls	r3, r3, #1
 8003608:	fa02 f303 	lsl.w	r3, r2, r3
 800360c:	693a      	ldr	r2, [r7, #16]
 800360e:	4313      	orrs	r3, r2
 8003610:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	693a      	ldr	r2, [r7, #16]
 8003616:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8003618:	683b      	ldr	r3, [r7, #0]
 800361a:	685b      	ldr	r3, [r3, #4]
 800361c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003620:	2b00      	cmp	r3, #0
 8003622:	f000 80ac 	beq.w	800377e <HAL_GPIO_Init+0x30a>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003626:	4b5f      	ldr	r3, [pc, #380]	; (80037a4 <HAL_GPIO_Init+0x330>)
 8003628:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800362a:	4a5e      	ldr	r2, [pc, #376]	; (80037a4 <HAL_GPIO_Init+0x330>)
 800362c:	f043 0301 	orr.w	r3, r3, #1
 8003630:	6613      	str	r3, [r2, #96]	; 0x60
 8003632:	4b5c      	ldr	r3, [pc, #368]	; (80037a4 <HAL_GPIO_Init+0x330>)
 8003634:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003636:	f003 0301 	and.w	r3, r3, #1
 800363a:	60bb      	str	r3, [r7, #8]
 800363c:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 800363e:	4a5a      	ldr	r2, [pc, #360]	; (80037a8 <HAL_GPIO_Init+0x334>)
 8003640:	697b      	ldr	r3, [r7, #20]
 8003642:	089b      	lsrs	r3, r3, #2
 8003644:	3302      	adds	r3, #2
 8003646:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800364a:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 800364c:	697b      	ldr	r3, [r7, #20]
 800364e:	f003 0303 	and.w	r3, r3, #3
 8003652:	009b      	lsls	r3, r3, #2
 8003654:	220f      	movs	r2, #15
 8003656:	fa02 f303 	lsl.w	r3, r2, r3
 800365a:	43db      	mvns	r3, r3
 800365c:	693a      	ldr	r2, [r7, #16]
 800365e:	4013      	ands	r3, r2
 8003660:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8003668:	d025      	beq.n	80036b6 <HAL_GPIO_Init+0x242>
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	4a4f      	ldr	r2, [pc, #316]	; (80037ac <HAL_GPIO_Init+0x338>)
 800366e:	4293      	cmp	r3, r2
 8003670:	d01f      	beq.n	80036b2 <HAL_GPIO_Init+0x23e>
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	4a4e      	ldr	r2, [pc, #312]	; (80037b0 <HAL_GPIO_Init+0x33c>)
 8003676:	4293      	cmp	r3, r2
 8003678:	d019      	beq.n	80036ae <HAL_GPIO_Init+0x23a>
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	4a4d      	ldr	r2, [pc, #308]	; (80037b4 <HAL_GPIO_Init+0x340>)
 800367e:	4293      	cmp	r3, r2
 8003680:	d013      	beq.n	80036aa <HAL_GPIO_Init+0x236>
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	4a4c      	ldr	r2, [pc, #304]	; (80037b8 <HAL_GPIO_Init+0x344>)
 8003686:	4293      	cmp	r3, r2
 8003688:	d00d      	beq.n	80036a6 <HAL_GPIO_Init+0x232>
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	4a4b      	ldr	r2, [pc, #300]	; (80037bc <HAL_GPIO_Init+0x348>)
 800368e:	4293      	cmp	r3, r2
 8003690:	d007      	beq.n	80036a2 <HAL_GPIO_Init+0x22e>
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	4a4a      	ldr	r2, [pc, #296]	; (80037c0 <HAL_GPIO_Init+0x34c>)
 8003696:	4293      	cmp	r3, r2
 8003698:	d101      	bne.n	800369e <HAL_GPIO_Init+0x22a>
 800369a:	2306      	movs	r3, #6
 800369c:	e00c      	b.n	80036b8 <HAL_GPIO_Init+0x244>
 800369e:	2307      	movs	r3, #7
 80036a0:	e00a      	b.n	80036b8 <HAL_GPIO_Init+0x244>
 80036a2:	2305      	movs	r3, #5
 80036a4:	e008      	b.n	80036b8 <HAL_GPIO_Init+0x244>
 80036a6:	2304      	movs	r3, #4
 80036a8:	e006      	b.n	80036b8 <HAL_GPIO_Init+0x244>
 80036aa:	2303      	movs	r3, #3
 80036ac:	e004      	b.n	80036b8 <HAL_GPIO_Init+0x244>
 80036ae:	2302      	movs	r3, #2
 80036b0:	e002      	b.n	80036b8 <HAL_GPIO_Init+0x244>
 80036b2:	2301      	movs	r3, #1
 80036b4:	e000      	b.n	80036b8 <HAL_GPIO_Init+0x244>
 80036b6:	2300      	movs	r3, #0
 80036b8:	697a      	ldr	r2, [r7, #20]
 80036ba:	f002 0203 	and.w	r2, r2, #3
 80036be:	0092      	lsls	r2, r2, #2
 80036c0:	4093      	lsls	r3, r2
 80036c2:	693a      	ldr	r2, [r7, #16]
 80036c4:	4313      	orrs	r3, r2
 80036c6:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 80036c8:	4937      	ldr	r1, [pc, #220]	; (80037a8 <HAL_GPIO_Init+0x334>)
 80036ca:	697b      	ldr	r3, [r7, #20]
 80036cc:	089b      	lsrs	r3, r3, #2
 80036ce:	3302      	adds	r3, #2
 80036d0:	693a      	ldr	r2, [r7, #16]
 80036d2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 80036d6:	4b3b      	ldr	r3, [pc, #236]	; (80037c4 <HAL_GPIO_Init+0x350>)
 80036d8:	689b      	ldr	r3, [r3, #8]
 80036da:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	43db      	mvns	r3, r3
 80036e0:	693a      	ldr	r2, [r7, #16]
 80036e2:	4013      	ands	r3, r2
 80036e4:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 80036e6:	683b      	ldr	r3, [r7, #0]
 80036e8:	685b      	ldr	r3, [r3, #4]
 80036ea:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80036ee:	2b00      	cmp	r3, #0
 80036f0:	d003      	beq.n	80036fa <HAL_GPIO_Init+0x286>
        {
          temp |= iocurrent;
 80036f2:	693a      	ldr	r2, [r7, #16]
 80036f4:	68fb      	ldr	r3, [r7, #12]
 80036f6:	4313      	orrs	r3, r2
 80036f8:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR1 = temp;
 80036fa:	4a32      	ldr	r2, [pc, #200]	; (80037c4 <HAL_GPIO_Init+0x350>)
 80036fc:	693b      	ldr	r3, [r7, #16]
 80036fe:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR1;
 8003700:	4b30      	ldr	r3, [pc, #192]	; (80037c4 <HAL_GPIO_Init+0x350>)
 8003702:	68db      	ldr	r3, [r3, #12]
 8003704:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003706:	68fb      	ldr	r3, [r7, #12]
 8003708:	43db      	mvns	r3, r3
 800370a:	693a      	ldr	r2, [r7, #16]
 800370c:	4013      	ands	r3, r2
 800370e:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8003710:	683b      	ldr	r3, [r7, #0]
 8003712:	685b      	ldr	r3, [r3, #4]
 8003714:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003718:	2b00      	cmp	r3, #0
 800371a:	d003      	beq.n	8003724 <HAL_GPIO_Init+0x2b0>
        {
          temp |= iocurrent;
 800371c:	693a      	ldr	r2, [r7, #16]
 800371e:	68fb      	ldr	r3, [r7, #12]
 8003720:	4313      	orrs	r3, r2
 8003722:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR1 = temp;
 8003724:	4a27      	ldr	r2, [pc, #156]	; (80037c4 <HAL_GPIO_Init+0x350>)
 8003726:	693b      	ldr	r3, [r7, #16]
 8003728:	60d3      	str	r3, [r2, #12]

        /* Clear EXTI line configuration */
        temp = EXTI->EMR1;
 800372a:	4b26      	ldr	r3, [pc, #152]	; (80037c4 <HAL_GPIO_Init+0x350>)
 800372c:	685b      	ldr	r3, [r3, #4]
 800372e:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003730:	68fb      	ldr	r3, [r7, #12]
 8003732:	43db      	mvns	r3, r3
 8003734:	693a      	ldr	r2, [r7, #16]
 8003736:	4013      	ands	r3, r2
 8003738:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 800373a:	683b      	ldr	r3, [r7, #0]
 800373c:	685b      	ldr	r3, [r3, #4]
 800373e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003742:	2b00      	cmp	r3, #0
 8003744:	d003      	beq.n	800374e <HAL_GPIO_Init+0x2da>
        {
          temp |= iocurrent;
 8003746:	693a      	ldr	r2, [r7, #16]
 8003748:	68fb      	ldr	r3, [r7, #12]
 800374a:	4313      	orrs	r3, r2
 800374c:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR1 = temp;
 800374e:	4a1d      	ldr	r2, [pc, #116]	; (80037c4 <HAL_GPIO_Init+0x350>)
 8003750:	693b      	ldr	r3, [r7, #16]
 8003752:	6053      	str	r3, [r2, #4]

        temp = EXTI->IMR1;
 8003754:	4b1b      	ldr	r3, [pc, #108]	; (80037c4 <HAL_GPIO_Init+0x350>)
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 800375a:	68fb      	ldr	r3, [r7, #12]
 800375c:	43db      	mvns	r3, r3
 800375e:	693a      	ldr	r2, [r7, #16]
 8003760:	4013      	ands	r3, r2
 8003762:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8003764:	683b      	ldr	r3, [r7, #0]
 8003766:	685b      	ldr	r3, [r3, #4]
 8003768:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800376c:	2b00      	cmp	r3, #0
 800376e:	d003      	beq.n	8003778 <HAL_GPIO_Init+0x304>
        {
          temp |= iocurrent;
 8003770:	693a      	ldr	r2, [r7, #16]
 8003772:	68fb      	ldr	r3, [r7, #12]
 8003774:	4313      	orrs	r3, r2
 8003776:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR1 = temp;
 8003778:	4a12      	ldr	r2, [pc, #72]	; (80037c4 <HAL_GPIO_Init+0x350>)
 800377a:	693b      	ldr	r3, [r7, #16]
 800377c:	6013      	str	r3, [r2, #0]
      }
    }

    position++;
 800377e:	697b      	ldr	r3, [r7, #20]
 8003780:	3301      	adds	r3, #1
 8003782:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8003784:	683b      	ldr	r3, [r7, #0]
 8003786:	681a      	ldr	r2, [r3, #0]
 8003788:	697b      	ldr	r3, [r7, #20]
 800378a:	fa22 f303 	lsr.w	r3, r2, r3
 800378e:	2b00      	cmp	r3, #0
 8003790:	f47f ae78 	bne.w	8003484 <HAL_GPIO_Init+0x10>
  }
}
 8003794:	bf00      	nop
 8003796:	bf00      	nop
 8003798:	371c      	adds	r7, #28
 800379a:	46bd      	mov	sp, r7
 800379c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037a0:	4770      	bx	lr
 80037a2:	bf00      	nop
 80037a4:	40021000 	.word	0x40021000
 80037a8:	40010000 	.word	0x40010000
 80037ac:	48000400 	.word	0x48000400
 80037b0:	48000800 	.word	0x48000800
 80037b4:	48000c00 	.word	0x48000c00
 80037b8:	48001000 	.word	0x48001000
 80037bc:	48001400 	.word	0x48001400
 80037c0:	48001800 	.word	0x48001800
 80037c4:	40010400 	.word	0x40010400

080037c8 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 80037c8:	b480      	push	{r7}
 80037ca:	b085      	sub	sp, #20
 80037cc:	af00      	add	r7, sp, #0
 80037ce:	6078      	str	r0, [r7, #4]
 80037d0:	460b      	mov	r3, r1
 80037d2:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00u)
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	691a      	ldr	r2, [r3, #16]
 80037d8:	887b      	ldrh	r3, [r7, #2]
 80037da:	4013      	ands	r3, r2
 80037dc:	2b00      	cmp	r3, #0
 80037de:	d002      	beq.n	80037e6 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 80037e0:	2301      	movs	r3, #1
 80037e2:	73fb      	strb	r3, [r7, #15]
 80037e4:	e001      	b.n	80037ea <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80037e6:	2300      	movs	r3, #0
 80037e8:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80037ea:	7bfb      	ldrb	r3, [r7, #15]
}
 80037ec:	4618      	mov	r0, r3
 80037ee:	3714      	adds	r7, #20
 80037f0:	46bd      	mov	sp, r7
 80037f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037f6:	4770      	bx	lr

080037f8 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80037f8:	b480      	push	{r7}
 80037fa:	b083      	sub	sp, #12
 80037fc:	af00      	add	r7, sp, #0
 80037fe:	6078      	str	r0, [r7, #4]
 8003800:	460b      	mov	r3, r1
 8003802:	807b      	strh	r3, [r7, #2]
 8003804:	4613      	mov	r3, r2
 8003806:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8003808:	787b      	ldrb	r3, [r7, #1]
 800380a:	2b00      	cmp	r3, #0
 800380c:	d003      	beq.n	8003816 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 800380e:	887a      	ldrh	r2, [r7, #2]
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8003814:	e002      	b.n	800381c <HAL_GPIO_WritePin+0x24>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8003816:	887a      	ldrh	r2, [r7, #2]
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	629a      	str	r2, [r3, #40]	; 0x28
}
 800381c:	bf00      	nop
 800381e:	370c      	adds	r7, #12
 8003820:	46bd      	mov	sp, r7
 8003822:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003826:	4770      	bx	lr

08003828 <HAL_GPIO_TogglePin>:
  * @param  GPIOx where x can be (A..H) to select the GPIO peripheral for STM32L4 family
  * @param  GPIO_Pin specifies the pin to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8003828:	b480      	push	{r7}
 800382a:	b085      	sub	sp, #20
 800382c:	af00      	add	r7, sp, #0
 800382e:	6078      	str	r0, [r7, #4]
 8003830:	460b      	mov	r3, r1
 8003832:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	695b      	ldr	r3, [r3, #20]
 8003838:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800383a:	887a      	ldrh	r2, [r7, #2]
 800383c:	68fb      	ldr	r3, [r7, #12]
 800383e:	4013      	ands	r3, r2
 8003840:	041a      	lsls	r2, r3, #16
 8003842:	68fb      	ldr	r3, [r7, #12]
 8003844:	43d9      	mvns	r1, r3
 8003846:	887b      	ldrh	r3, [r7, #2]
 8003848:	400b      	ands	r3, r1
 800384a:	431a      	orrs	r2, r3
 800384c:	687b      	ldr	r3, [r7, #4]
 800384e:	619a      	str	r2, [r3, #24]
}
 8003850:	bf00      	nop
 8003852:	3714      	adds	r7, #20
 8003854:	46bd      	mov	sp, r7
 8003856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800385a:	4770      	bx	lr

0800385c <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  Handle EXTI interrupt request.
  * @param  GPIO_Pin Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 800385c:	b580      	push	{r7, lr}
 800385e:	b082      	sub	sp, #8
 8003860:	af00      	add	r7, sp, #0
 8003862:	4603      	mov	r3, r0
 8003864:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u)
 8003866:	4b08      	ldr	r3, [pc, #32]	; (8003888 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003868:	695a      	ldr	r2, [r3, #20]
 800386a:	88fb      	ldrh	r3, [r7, #6]
 800386c:	4013      	ands	r3, r2
 800386e:	2b00      	cmp	r3, #0
 8003870:	d006      	beq.n	8003880 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8003872:	4a05      	ldr	r2, [pc, #20]	; (8003888 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003874:	88fb      	ldrh	r3, [r7, #6]
 8003876:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8003878:	88fb      	ldrh	r3, [r7, #6]
 800387a:	4618      	mov	r0, r3
 800387c:	f7fe fc1e 	bl	80020bc <HAL_GPIO_EXTI_Callback>
  }
}
 8003880:	bf00      	nop
 8003882:	3708      	adds	r7, #8
 8003884:	46bd      	mov	sp, r7
 8003886:	bd80      	pop	{r7, pc}
 8003888:	40010400 	.word	0x40010400

0800388c <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 800388c:	b580      	push	{r7, lr}
 800388e:	b082      	sub	sp, #8
 8003890:	af00      	add	r7, sp, #0
 8003892:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	2b00      	cmp	r3, #0
 8003898:	d101      	bne.n	800389e <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 800389a:	2301      	movs	r3, #1
 800389c:	e081      	b.n	80039a2 <HAL_I2C_Init+0x116>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80038a4:	b2db      	uxtb	r3, r3
 80038a6:	2b00      	cmp	r3, #0
 80038a8:	d106      	bne.n	80038b8 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	2200      	movs	r2, #0
 80038ae:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2C_MspInit(hi2c);
 80038b2:	6878      	ldr	r0, [r7, #4]
 80038b4:	f7ff f956 	bl	8002b64 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	2224      	movs	r2, #36	; 0x24
 80038bc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	681b      	ldr	r3, [r3, #0]
 80038c4:	681a      	ldr	r2, [r3, #0]
 80038c6:	687b      	ldr	r3, [r7, #4]
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	f022 0201 	bic.w	r2, r2, #1
 80038ce:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	685a      	ldr	r2, [r3, #4]
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	681b      	ldr	r3, [r3, #0]
 80038d8:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80038dc:	611a      	str	r2, [r3, #16]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Disable Own Address1 before set the Own Address1 configuration */
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	681b      	ldr	r3, [r3, #0]
 80038e2:	689a      	ldr	r2, [r3, #8]
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	681b      	ldr	r3, [r3, #0]
 80038e8:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80038ec:	609a      	str	r2, [r3, #8]

  /* Configure I2Cx: Own Address1 and ack own address1 mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	68db      	ldr	r3, [r3, #12]
 80038f2:	2b01      	cmp	r3, #1
 80038f4:	d107      	bne.n	8003906 <HAL_I2C_Init+0x7a>
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	689a      	ldr	r2, [r3, #8]
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003902:	609a      	str	r2, [r3, #8]
 8003904:	e006      	b.n	8003914 <HAL_I2C_Init+0x88>
  }
  else /* I2C_ADDRESSINGMODE_10BIT */
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	689a      	ldr	r2, [r3, #8]
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	681b      	ldr	r3, [r3, #0]
 800390e:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8003912:	609a      	str	r2, [r3, #8]
  }

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Addressing Master mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	68db      	ldr	r3, [r3, #12]
 8003918:	2b02      	cmp	r3, #2
 800391a:	d104      	bne.n	8003926 <HAL_I2C_Init+0x9a>
  {
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003924:	605a      	str	r2, [r3, #4]
  }
  /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8003926:	687b      	ldr	r3, [r7, #4]
 8003928:	681b      	ldr	r3, [r3, #0]
 800392a:	685b      	ldr	r3, [r3, #4]
 800392c:	687a      	ldr	r2, [r7, #4]
 800392e:	6812      	ldr	r2, [r2, #0]
 8003930:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003934:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003938:	6053      	str	r3, [r2, #4]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Disable Own Address2 before set the Own Address2 configuration */
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	68da      	ldr	r2, [r3, #12]
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003948:	60da      	str	r2, [r3, #12]

  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	691a      	ldr	r2, [r3, #16]
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	695b      	ldr	r3, [r3, #20]
 8003952:	ea42 0103 	orr.w	r1, r2, r3
                          (hi2c->Init.OwnAddress2Masks << 8));
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	699b      	ldr	r3, [r3, #24]
 800395a:	021a      	lsls	r2, r3, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 800395c:	687b      	ldr	r3, [r7, #4]
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	430a      	orrs	r2, r1
 8003962:	60da      	str	r2, [r3, #12]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	69d9      	ldr	r1, [r3, #28]
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	6a1a      	ldr	r2, [r3, #32]
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	681b      	ldr	r3, [r3, #0]
 8003970:	430a      	orrs	r2, r1
 8003972:	601a      	str	r2, [r3, #0]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	681a      	ldr	r2, [r3, #0]
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	f042 0201 	orr.w	r2, r2, #1
 8003982:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	2200      	movs	r2, #0
 8003988:	645a      	str	r2, [r3, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	2220      	movs	r2, #32
 800398e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	2200      	movs	r2, #0
 8003996:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	2200      	movs	r2, #0
 800399c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

  return HAL_OK;
 80039a0:	2300      	movs	r3, #0
}
 80039a2:	4618      	mov	r0, r3
 80039a4:	3708      	adds	r7, #8
 80039a6:	46bd      	mov	sp, r7
 80039a8:	bd80      	pop	{r7, pc}
	...

080039ac <HAL_I2C_Mem_Write>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress,
                                    uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80039ac:	b580      	push	{r7, lr}
 80039ae:	b088      	sub	sp, #32
 80039b0:	af02      	add	r7, sp, #8
 80039b2:	60f8      	str	r0, [r7, #12]
 80039b4:	4608      	mov	r0, r1
 80039b6:	4611      	mov	r1, r2
 80039b8:	461a      	mov	r2, r3
 80039ba:	4603      	mov	r3, r0
 80039bc:	817b      	strh	r3, [r7, #10]
 80039be:	460b      	mov	r3, r1
 80039c0:	813b      	strh	r3, [r7, #8]
 80039c2:	4613      	mov	r3, r2
 80039c4:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80039c6:	68fb      	ldr	r3, [r7, #12]
 80039c8:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80039cc:	b2db      	uxtb	r3, r3
 80039ce:	2b20      	cmp	r3, #32
 80039d0:	f040 80f9 	bne.w	8003bc6 <HAL_I2C_Mem_Write+0x21a>
  {
    if ((pData == NULL) || (Size == 0U))
 80039d4:	6a3b      	ldr	r3, [r7, #32]
 80039d6:	2b00      	cmp	r3, #0
 80039d8:	d002      	beq.n	80039e0 <HAL_I2C_Mem_Write+0x34>
 80039da:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80039dc:	2b00      	cmp	r3, #0
 80039de:	d105      	bne.n	80039ec <HAL_I2C_Mem_Write+0x40>
    {
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80039e0:	68fb      	ldr	r3, [r7, #12]
 80039e2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80039e6:	645a      	str	r2, [r3, #68]	; 0x44
      return  HAL_ERROR;
 80039e8:	2301      	movs	r3, #1
 80039ea:	e0ed      	b.n	8003bc8 <HAL_I2C_Mem_Write+0x21c>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 80039ec:	68fb      	ldr	r3, [r7, #12]
 80039ee:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80039f2:	2b01      	cmp	r3, #1
 80039f4:	d101      	bne.n	80039fa <HAL_I2C_Mem_Write+0x4e>
 80039f6:	2302      	movs	r3, #2
 80039f8:	e0e6      	b.n	8003bc8 <HAL_I2C_Mem_Write+0x21c>
 80039fa:	68fb      	ldr	r3, [r7, #12]
 80039fc:	2201      	movs	r2, #1
 80039fe:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8003a02:	f7ff fbd5 	bl	80031b0 <HAL_GetTick>
 8003a06:	6178      	str	r0, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003a08:	697b      	ldr	r3, [r7, #20]
 8003a0a:	9300      	str	r3, [sp, #0]
 8003a0c:	2319      	movs	r3, #25
 8003a0e:	2201      	movs	r2, #1
 8003a10:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003a14:	68f8      	ldr	r0, [r7, #12]
 8003a16:	f000 fac3 	bl	8003fa0 <I2C_WaitOnFlagUntilTimeout>
 8003a1a:	4603      	mov	r3, r0
 8003a1c:	2b00      	cmp	r3, #0
 8003a1e:	d001      	beq.n	8003a24 <HAL_I2C_Mem_Write+0x78>
    {
      return HAL_ERROR;
 8003a20:	2301      	movs	r3, #1
 8003a22:	e0d1      	b.n	8003bc8 <HAL_I2C_Mem_Write+0x21c>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8003a24:	68fb      	ldr	r3, [r7, #12]
 8003a26:	2221      	movs	r2, #33	; 0x21
 8003a28:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003a2c:	68fb      	ldr	r3, [r7, #12]
 8003a2e:	2240      	movs	r2, #64	; 0x40
 8003a30:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003a34:	68fb      	ldr	r3, [r7, #12]
 8003a36:	2200      	movs	r2, #0
 8003a38:	645a      	str	r2, [r3, #68]	; 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8003a3a:	68fb      	ldr	r3, [r7, #12]
 8003a3c:	6a3a      	ldr	r2, [r7, #32]
 8003a3e:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount = Size;
 8003a40:	68fb      	ldr	r3, [r7, #12]
 8003a42:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8003a44:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8003a46:	68fb      	ldr	r3, [r7, #12]
 8003a48:	2200      	movs	r2, #0
 8003a4a:	635a      	str	r2, [r3, #52]	; 0x34

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003a4c:	88f8      	ldrh	r0, [r7, #6]
 8003a4e:	893a      	ldrh	r2, [r7, #8]
 8003a50:	8979      	ldrh	r1, [r7, #10]
 8003a52:	697b      	ldr	r3, [r7, #20]
 8003a54:	9301      	str	r3, [sp, #4]
 8003a56:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003a58:	9300      	str	r3, [sp, #0]
 8003a5a:	4603      	mov	r3, r0
 8003a5c:	68f8      	ldr	r0, [r7, #12]
 8003a5e:	f000 f9d3 	bl	8003e08 <I2C_RequestMemoryWrite>
 8003a62:	4603      	mov	r3, r0
 8003a64:	2b00      	cmp	r3, #0
 8003a66:	d005      	beq.n	8003a74 <HAL_I2C_Mem_Write+0xc8>
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8003a68:	68fb      	ldr	r3, [r7, #12]
 8003a6a:	2200      	movs	r2, #0
 8003a6c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
      return HAL_ERROR;
 8003a70:	2301      	movs	r3, #1
 8003a72:	e0a9      	b.n	8003bc8 <HAL_I2C_Mem_Write+0x21c>
    }

    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003a74:	68fb      	ldr	r3, [r7, #12]
 8003a76:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003a78:	b29b      	uxth	r3, r3
 8003a7a:	2bff      	cmp	r3, #255	; 0xff
 8003a7c:	d90e      	bls.n	8003a9c <HAL_I2C_Mem_Write+0xf0>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8003a7e:	68fb      	ldr	r3, [r7, #12]
 8003a80:	22ff      	movs	r2, #255	; 0xff
 8003a82:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8003a84:	68fb      	ldr	r3, [r7, #12]
 8003a86:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003a88:	b2da      	uxtb	r2, r3
 8003a8a:	8979      	ldrh	r1, [r7, #10]
 8003a8c:	2300      	movs	r3, #0
 8003a8e:	9300      	str	r3, [sp, #0]
 8003a90:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003a94:	68f8      	ldr	r0, [r7, #12]
 8003a96:	f000 fc2b 	bl	80042f0 <I2C_TransferConfig>
 8003a9a:	e00f      	b.n	8003abc <HAL_I2C_Mem_Write+0x110>
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 8003a9c:	68fb      	ldr	r3, [r7, #12]
 8003a9e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003aa0:	b29a      	uxth	r2, r3
 8003aa2:	68fb      	ldr	r3, [r7, #12]
 8003aa4:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8003aa6:	68fb      	ldr	r3, [r7, #12]
 8003aa8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003aaa:	b2da      	uxtb	r2, r3
 8003aac:	8979      	ldrh	r1, [r7, #10]
 8003aae:	2300      	movs	r3, #0
 8003ab0:	9300      	str	r3, [sp, #0]
 8003ab2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003ab6:	68f8      	ldr	r0, [r7, #12]
 8003ab8:	f000 fc1a 	bl	80042f0 <I2C_TransferConfig>
    }

    do
    {
      /* Wait until TXIS flag is set */
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003abc:	697a      	ldr	r2, [r7, #20]
 8003abe:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003ac0:	68f8      	ldr	r0, [r7, #12]
 8003ac2:	f000 faad 	bl	8004020 <I2C_WaitOnTXISFlagUntilTimeout>
 8003ac6:	4603      	mov	r3, r0
 8003ac8:	2b00      	cmp	r3, #0
 8003aca:	d001      	beq.n	8003ad0 <HAL_I2C_Mem_Write+0x124>
      {
        return HAL_ERROR;
 8003acc:	2301      	movs	r3, #1
 8003ace:	e07b      	b.n	8003bc8 <HAL_I2C_Mem_Write+0x21c>
      }

      /* Write data to TXDR */
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ad4:	781a      	ldrb	r2, [r3, #0]
 8003ad6:	68fb      	ldr	r3, [r7, #12]
 8003ad8:	681b      	ldr	r3, [r3, #0]
 8003ada:	629a      	str	r2, [r3, #40]	; 0x28

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8003adc:	68fb      	ldr	r3, [r7, #12]
 8003ade:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ae0:	1c5a      	adds	r2, r3, #1
 8003ae2:	68fb      	ldr	r3, [r7, #12]
 8003ae4:	625a      	str	r2, [r3, #36]	; 0x24

      hi2c->XferCount--;
 8003ae6:	68fb      	ldr	r3, [r7, #12]
 8003ae8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003aea:	b29b      	uxth	r3, r3
 8003aec:	3b01      	subs	r3, #1
 8003aee:	b29a      	uxth	r2, r3
 8003af0:	68fb      	ldr	r3, [r7, #12]
 8003af2:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003af8:	3b01      	subs	r3, #1
 8003afa:	b29a      	uxth	r2, r3
 8003afc:	68fb      	ldr	r3, [r7, #12]
 8003afe:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003b04:	b29b      	uxth	r3, r3
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	d034      	beq.n	8003b74 <HAL_I2C_Mem_Write+0x1c8>
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d130      	bne.n	8003b74 <HAL_I2C_Mem_Write+0x1c8>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8003b12:	697b      	ldr	r3, [r7, #20]
 8003b14:	9300      	str	r3, [sp, #0]
 8003b16:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003b18:	2200      	movs	r2, #0
 8003b1a:	2180      	movs	r1, #128	; 0x80
 8003b1c:	68f8      	ldr	r0, [r7, #12]
 8003b1e:	f000 fa3f 	bl	8003fa0 <I2C_WaitOnFlagUntilTimeout>
 8003b22:	4603      	mov	r3, r0
 8003b24:	2b00      	cmp	r3, #0
 8003b26:	d001      	beq.n	8003b2c <HAL_I2C_Mem_Write+0x180>
        {
          return HAL_ERROR;
 8003b28:	2301      	movs	r3, #1
 8003b2a:	e04d      	b.n	8003bc8 <HAL_I2C_Mem_Write+0x21c>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003b2c:	68fb      	ldr	r3, [r7, #12]
 8003b2e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003b30:	b29b      	uxth	r3, r3
 8003b32:	2bff      	cmp	r3, #255	; 0xff
 8003b34:	d90e      	bls.n	8003b54 <HAL_I2C_Mem_Write+0x1a8>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8003b36:	68fb      	ldr	r3, [r7, #12]
 8003b38:	22ff      	movs	r2, #255	; 0xff
 8003b3a:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8003b3c:	68fb      	ldr	r3, [r7, #12]
 8003b3e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003b40:	b2da      	uxtb	r2, r3
 8003b42:	8979      	ldrh	r1, [r7, #10]
 8003b44:	2300      	movs	r3, #0
 8003b46:	9300      	str	r3, [sp, #0]
 8003b48:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003b4c:	68f8      	ldr	r0, [r7, #12]
 8003b4e:	f000 fbcf 	bl	80042f0 <I2C_TransferConfig>
 8003b52:	e00f      	b.n	8003b74 <HAL_I2C_Mem_Write+0x1c8>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 8003b54:	68fb      	ldr	r3, [r7, #12]
 8003b56:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003b58:	b29a      	uxth	r2, r3
 8003b5a:	68fb      	ldr	r3, [r7, #12]
 8003b5c:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003b5e:	68fb      	ldr	r3, [r7, #12]
 8003b60:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003b62:	b2da      	uxtb	r2, r3
 8003b64:	8979      	ldrh	r1, [r7, #10]
 8003b66:	2300      	movs	r3, #0
 8003b68:	9300      	str	r3, [sp, #0]
 8003b6a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003b6e:	68f8      	ldr	r0, [r7, #12]
 8003b70:	f000 fbbe 	bl	80042f0 <I2C_TransferConfig>
                             I2C_NO_STARTSTOP);
        }
      }

    } while (hi2c->XferCount > 0U);
 8003b74:	68fb      	ldr	r3, [r7, #12]
 8003b76:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003b78:	b29b      	uxth	r3, r3
 8003b7a:	2b00      	cmp	r3, #0
 8003b7c:	d19e      	bne.n	8003abc <HAL_I2C_Mem_Write+0x110>

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is reset */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003b7e:	697a      	ldr	r2, [r7, #20]
 8003b80:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003b82:	68f8      	ldr	r0, [r7, #12]
 8003b84:	f000 fa8c 	bl	80040a0 <I2C_WaitOnSTOPFlagUntilTimeout>
 8003b88:	4603      	mov	r3, r0
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d001      	beq.n	8003b92 <HAL_I2C_Mem_Write+0x1e6>
    {
      return HAL_ERROR;
 8003b8e:	2301      	movs	r3, #1
 8003b90:	e01a      	b.n	8003bc8 <HAL_I2C_Mem_Write+0x21c>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003b92:	68fb      	ldr	r3, [r7, #12]
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	2220      	movs	r2, #32
 8003b98:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8003b9a:	68fb      	ldr	r3, [r7, #12]
 8003b9c:	681b      	ldr	r3, [r3, #0]
 8003b9e:	6859      	ldr	r1, [r3, #4]
 8003ba0:	68fb      	ldr	r3, [r7, #12]
 8003ba2:	681a      	ldr	r2, [r3, #0]
 8003ba4:	4b0a      	ldr	r3, [pc, #40]	; (8003bd0 <HAL_I2C_Mem_Write+0x224>)
 8003ba6:	400b      	ands	r3, r1
 8003ba8:	6053      	str	r3, [r2, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 8003baa:	68fb      	ldr	r3, [r7, #12]
 8003bac:	2220      	movs	r2, #32
 8003bae:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8003bb2:	68fb      	ldr	r3, [r7, #12]
 8003bb4:	2200      	movs	r2, #0
 8003bb6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003bba:	68fb      	ldr	r3, [r7, #12]
 8003bbc:	2200      	movs	r2, #0
 8003bbe:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 8003bc2:	2300      	movs	r3, #0
 8003bc4:	e000      	b.n	8003bc8 <HAL_I2C_Mem_Write+0x21c>
  }
  else
  {
    return HAL_BUSY;
 8003bc6:	2302      	movs	r3, #2
  }
}
 8003bc8:	4618      	mov	r0, r3
 8003bca:	3718      	adds	r7, #24
 8003bcc:	46bd      	mov	sp, r7
 8003bce:	bd80      	pop	{r7, pc}
 8003bd0:	fe00e800 	.word	0xfe00e800

08003bd4 <HAL_I2C_Mem_Read>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress,
                                   uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003bd4:	b580      	push	{r7, lr}
 8003bd6:	b088      	sub	sp, #32
 8003bd8:	af02      	add	r7, sp, #8
 8003bda:	60f8      	str	r0, [r7, #12]
 8003bdc:	4608      	mov	r0, r1
 8003bde:	4611      	mov	r1, r2
 8003be0:	461a      	mov	r2, r3
 8003be2:	4603      	mov	r3, r0
 8003be4:	817b      	strh	r3, [r7, #10]
 8003be6:	460b      	mov	r3, r1
 8003be8:	813b      	strh	r3, [r7, #8]
 8003bea:	4613      	mov	r3, r2
 8003bec:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003bee:	68fb      	ldr	r3, [r7, #12]
 8003bf0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003bf4:	b2db      	uxtb	r3, r3
 8003bf6:	2b20      	cmp	r3, #32
 8003bf8:	f040 80fd 	bne.w	8003df6 <HAL_I2C_Mem_Read+0x222>
  {
    if ((pData == NULL) || (Size == 0U))
 8003bfc:	6a3b      	ldr	r3, [r7, #32]
 8003bfe:	2b00      	cmp	r3, #0
 8003c00:	d002      	beq.n	8003c08 <HAL_I2C_Mem_Read+0x34>
 8003c02:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003c04:	2b00      	cmp	r3, #0
 8003c06:	d105      	bne.n	8003c14 <HAL_I2C_Mem_Read+0x40>
    {
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003c0e:	645a      	str	r2, [r3, #68]	; 0x44
      return  HAL_ERROR;
 8003c10:	2301      	movs	r3, #1
 8003c12:	e0f1      	b.n	8003df8 <HAL_I2C_Mem_Read+0x224>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003c1a:	2b01      	cmp	r3, #1
 8003c1c:	d101      	bne.n	8003c22 <HAL_I2C_Mem_Read+0x4e>
 8003c1e:	2302      	movs	r3, #2
 8003c20:	e0ea      	b.n	8003df8 <HAL_I2C_Mem_Read+0x224>
 8003c22:	68fb      	ldr	r3, [r7, #12]
 8003c24:	2201      	movs	r2, #1
 8003c26:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8003c2a:	f7ff fac1 	bl	80031b0 <HAL_GetTick>
 8003c2e:	6178      	str	r0, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003c30:	697b      	ldr	r3, [r7, #20]
 8003c32:	9300      	str	r3, [sp, #0]
 8003c34:	2319      	movs	r3, #25
 8003c36:	2201      	movs	r2, #1
 8003c38:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003c3c:	68f8      	ldr	r0, [r7, #12]
 8003c3e:	f000 f9af 	bl	8003fa0 <I2C_WaitOnFlagUntilTimeout>
 8003c42:	4603      	mov	r3, r0
 8003c44:	2b00      	cmp	r3, #0
 8003c46:	d001      	beq.n	8003c4c <HAL_I2C_Mem_Read+0x78>
    {
      return HAL_ERROR;
 8003c48:	2301      	movs	r3, #1
 8003c4a:	e0d5      	b.n	8003df8 <HAL_I2C_Mem_Read+0x224>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8003c4c:	68fb      	ldr	r3, [r7, #12]
 8003c4e:	2222      	movs	r2, #34	; 0x22
 8003c50:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003c54:	68fb      	ldr	r3, [r7, #12]
 8003c56:	2240      	movs	r2, #64	; 0x40
 8003c58:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003c5c:	68fb      	ldr	r3, [r7, #12]
 8003c5e:	2200      	movs	r2, #0
 8003c60:	645a      	str	r2, [r3, #68]	; 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8003c62:	68fb      	ldr	r3, [r7, #12]
 8003c64:	6a3a      	ldr	r2, [r7, #32]
 8003c66:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount = Size;
 8003c68:	68fb      	ldr	r3, [r7, #12]
 8003c6a:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8003c6c:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8003c6e:	68fb      	ldr	r3, [r7, #12]
 8003c70:	2200      	movs	r2, #0
 8003c72:	635a      	str	r2, [r3, #52]	; 0x34

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003c74:	88f8      	ldrh	r0, [r7, #6]
 8003c76:	893a      	ldrh	r2, [r7, #8]
 8003c78:	8979      	ldrh	r1, [r7, #10]
 8003c7a:	697b      	ldr	r3, [r7, #20]
 8003c7c:	9301      	str	r3, [sp, #4]
 8003c7e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003c80:	9300      	str	r3, [sp, #0]
 8003c82:	4603      	mov	r3, r0
 8003c84:	68f8      	ldr	r0, [r7, #12]
 8003c86:	f000 f913 	bl	8003eb0 <I2C_RequestMemoryRead>
 8003c8a:	4603      	mov	r3, r0
 8003c8c:	2b00      	cmp	r3, #0
 8003c8e:	d005      	beq.n	8003c9c <HAL_I2C_Mem_Read+0xc8>
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8003c90:	68fb      	ldr	r3, [r7, #12]
 8003c92:	2200      	movs	r2, #0
 8003c94:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
      return HAL_ERROR;
 8003c98:	2301      	movs	r3, #1
 8003c9a:	e0ad      	b.n	8003df8 <HAL_I2C_Mem_Read+0x224>
    }

    /* Send Slave Address */
    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003c9c:	68fb      	ldr	r3, [r7, #12]
 8003c9e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003ca0:	b29b      	uxth	r3, r3
 8003ca2:	2bff      	cmp	r3, #255	; 0xff
 8003ca4:	d90e      	bls.n	8003cc4 <HAL_I2C_Mem_Read+0xf0>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8003ca6:	68fb      	ldr	r3, [r7, #12]
 8003ca8:	22ff      	movs	r2, #255	; 0xff
 8003caa:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8003cac:	68fb      	ldr	r3, [r7, #12]
 8003cae:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003cb0:	b2da      	uxtb	r2, r3
 8003cb2:	8979      	ldrh	r1, [r7, #10]
 8003cb4:	4b52      	ldr	r3, [pc, #328]	; (8003e00 <HAL_I2C_Mem_Read+0x22c>)
 8003cb6:	9300      	str	r3, [sp, #0]
 8003cb8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003cbc:	68f8      	ldr	r0, [r7, #12]
 8003cbe:	f000 fb17 	bl	80042f0 <I2C_TransferConfig>
 8003cc2:	e00f      	b.n	8003ce4 <HAL_I2C_Mem_Read+0x110>
                         I2C_GENERATE_START_READ);
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 8003cc4:	68fb      	ldr	r3, [r7, #12]
 8003cc6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003cc8:	b29a      	uxth	r2, r3
 8003cca:	68fb      	ldr	r3, [r7, #12]
 8003ccc:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003cce:	68fb      	ldr	r3, [r7, #12]
 8003cd0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003cd2:	b2da      	uxtb	r2, r3
 8003cd4:	8979      	ldrh	r1, [r7, #10]
 8003cd6:	4b4a      	ldr	r3, [pc, #296]	; (8003e00 <HAL_I2C_Mem_Read+0x22c>)
 8003cd8:	9300      	str	r3, [sp, #0]
 8003cda:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003cde:	68f8      	ldr	r0, [r7, #12]
 8003ce0:	f000 fb06 	bl	80042f0 <I2C_TransferConfig>
    }

    do
    {
      /* Wait until RXNE flag is set */
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8003ce4:	697b      	ldr	r3, [r7, #20]
 8003ce6:	9300      	str	r3, [sp, #0]
 8003ce8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003cea:	2200      	movs	r2, #0
 8003cec:	2104      	movs	r1, #4
 8003cee:	68f8      	ldr	r0, [r7, #12]
 8003cf0:	f000 f956 	bl	8003fa0 <I2C_WaitOnFlagUntilTimeout>
 8003cf4:	4603      	mov	r3, r0
 8003cf6:	2b00      	cmp	r3, #0
 8003cf8:	d001      	beq.n	8003cfe <HAL_I2C_Mem_Read+0x12a>
      {
        return HAL_ERROR;
 8003cfa:	2301      	movs	r3, #1
 8003cfc:	e07c      	b.n	8003df8 <HAL_I2C_Mem_Read+0x224>
      }

      /* Read data from RXDR */
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8003cfe:	68fb      	ldr	r3, [r7, #12]
 8003d00:	681b      	ldr	r3, [r3, #0]
 8003d02:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003d04:	68fb      	ldr	r3, [r7, #12]
 8003d06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d08:	b2d2      	uxtb	r2, r2
 8003d0a:	701a      	strb	r2, [r3, #0]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8003d0c:	68fb      	ldr	r3, [r7, #12]
 8003d0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d10:	1c5a      	adds	r2, r3, #1
 8003d12:	68fb      	ldr	r3, [r7, #12]
 8003d14:	625a      	str	r2, [r3, #36]	; 0x24

      hi2c->XferSize--;
 8003d16:	68fb      	ldr	r3, [r7, #12]
 8003d18:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d1a:	3b01      	subs	r3, #1
 8003d1c:	b29a      	uxth	r2, r3
 8003d1e:	68fb      	ldr	r3, [r7, #12]
 8003d20:	851a      	strh	r2, [r3, #40]	; 0x28
      hi2c->XferCount--;
 8003d22:	68fb      	ldr	r3, [r7, #12]
 8003d24:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d26:	b29b      	uxth	r3, r3
 8003d28:	3b01      	subs	r3, #1
 8003d2a:	b29a      	uxth	r2, r3
 8003d2c:	68fb      	ldr	r3, [r7, #12]
 8003d2e:	855a      	strh	r2, [r3, #42]	; 0x2a

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8003d30:	68fb      	ldr	r3, [r7, #12]
 8003d32:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d34:	b29b      	uxth	r3, r3
 8003d36:	2b00      	cmp	r3, #0
 8003d38:	d034      	beq.n	8003da4 <HAL_I2C_Mem_Read+0x1d0>
 8003d3a:	68fb      	ldr	r3, [r7, #12]
 8003d3c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d3e:	2b00      	cmp	r3, #0
 8003d40:	d130      	bne.n	8003da4 <HAL_I2C_Mem_Read+0x1d0>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8003d42:	697b      	ldr	r3, [r7, #20]
 8003d44:	9300      	str	r3, [sp, #0]
 8003d46:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003d48:	2200      	movs	r2, #0
 8003d4a:	2180      	movs	r1, #128	; 0x80
 8003d4c:	68f8      	ldr	r0, [r7, #12]
 8003d4e:	f000 f927 	bl	8003fa0 <I2C_WaitOnFlagUntilTimeout>
 8003d52:	4603      	mov	r3, r0
 8003d54:	2b00      	cmp	r3, #0
 8003d56:	d001      	beq.n	8003d5c <HAL_I2C_Mem_Read+0x188>
        {
          return HAL_ERROR;
 8003d58:	2301      	movs	r3, #1
 8003d5a:	e04d      	b.n	8003df8 <HAL_I2C_Mem_Read+0x224>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003d5c:	68fb      	ldr	r3, [r7, #12]
 8003d5e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d60:	b29b      	uxth	r3, r3
 8003d62:	2bff      	cmp	r3, #255	; 0xff
 8003d64:	d90e      	bls.n	8003d84 <HAL_I2C_Mem_Read+0x1b0>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	22ff      	movs	r2, #255	; 0xff
 8003d6a:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8003d6c:	68fb      	ldr	r3, [r7, #12]
 8003d6e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d70:	b2da      	uxtb	r2, r3
 8003d72:	8979      	ldrh	r1, [r7, #10]
 8003d74:	2300      	movs	r3, #0
 8003d76:	9300      	str	r3, [sp, #0]
 8003d78:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003d7c:	68f8      	ldr	r0, [r7, #12]
 8003d7e:	f000 fab7 	bl	80042f0 <I2C_TransferConfig>
 8003d82:	e00f      	b.n	8003da4 <HAL_I2C_Mem_Read+0x1d0>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 8003d84:	68fb      	ldr	r3, [r7, #12]
 8003d86:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d88:	b29a      	uxth	r2, r3
 8003d8a:	68fb      	ldr	r3, [r7, #12]
 8003d8c:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003d8e:	68fb      	ldr	r3, [r7, #12]
 8003d90:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d92:	b2da      	uxtb	r2, r3
 8003d94:	8979      	ldrh	r1, [r7, #10]
 8003d96:	2300      	movs	r3, #0
 8003d98:	9300      	str	r3, [sp, #0]
 8003d9a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003d9e:	68f8      	ldr	r0, [r7, #12]
 8003da0:	f000 faa6 	bl	80042f0 <I2C_TransferConfig>
                             I2C_NO_STARTSTOP);
        }
      }
    } while (hi2c->XferCount > 0U);
 8003da4:	68fb      	ldr	r3, [r7, #12]
 8003da6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003da8:	b29b      	uxth	r3, r3
 8003daa:	2b00      	cmp	r3, #0
 8003dac:	d19a      	bne.n	8003ce4 <HAL_I2C_Mem_Read+0x110>

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is reset */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003dae:	697a      	ldr	r2, [r7, #20]
 8003db0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003db2:	68f8      	ldr	r0, [r7, #12]
 8003db4:	f000 f974 	bl	80040a0 <I2C_WaitOnSTOPFlagUntilTimeout>
 8003db8:	4603      	mov	r3, r0
 8003dba:	2b00      	cmp	r3, #0
 8003dbc:	d001      	beq.n	8003dc2 <HAL_I2C_Mem_Read+0x1ee>
    {
      return HAL_ERROR;
 8003dbe:	2301      	movs	r3, #1
 8003dc0:	e01a      	b.n	8003df8 <HAL_I2C_Mem_Read+0x224>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003dc2:	68fb      	ldr	r3, [r7, #12]
 8003dc4:	681b      	ldr	r3, [r3, #0]
 8003dc6:	2220      	movs	r2, #32
 8003dc8:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	6859      	ldr	r1, [r3, #4]
 8003dd0:	68fb      	ldr	r3, [r7, #12]
 8003dd2:	681a      	ldr	r2, [r3, #0]
 8003dd4:	4b0b      	ldr	r3, [pc, #44]	; (8003e04 <HAL_I2C_Mem_Read+0x230>)
 8003dd6:	400b      	ands	r3, r1
 8003dd8:	6053      	str	r3, [r2, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 8003dda:	68fb      	ldr	r3, [r7, #12]
 8003ddc:	2220      	movs	r2, #32
 8003dde:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	2200      	movs	r2, #0
 8003de6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003dea:	68fb      	ldr	r3, [r7, #12]
 8003dec:	2200      	movs	r2, #0
 8003dee:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 8003df2:	2300      	movs	r3, #0
 8003df4:	e000      	b.n	8003df8 <HAL_I2C_Mem_Read+0x224>
  }
  else
  {
    return HAL_BUSY;
 8003df6:	2302      	movs	r3, #2
  }
}
 8003df8:	4618      	mov	r0, r3
 8003dfa:	3718      	adds	r7, #24
 8003dfc:	46bd      	mov	sp, r7
 8003dfe:	bd80      	pop	{r7, pc}
 8003e00:	80002400 	.word	0x80002400
 8003e04:	fe00e800 	.word	0xfe00e800

08003e08 <I2C_RequestMemoryWrite>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
                                                uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout,
                                                uint32_t Tickstart)
{
 8003e08:	b580      	push	{r7, lr}
 8003e0a:	b086      	sub	sp, #24
 8003e0c:	af02      	add	r7, sp, #8
 8003e0e:	60f8      	str	r0, [r7, #12]
 8003e10:	4608      	mov	r0, r1
 8003e12:	4611      	mov	r1, r2
 8003e14:	461a      	mov	r2, r3
 8003e16:	4603      	mov	r3, r0
 8003e18:	817b      	strh	r3, [r7, #10]
 8003e1a:	460b      	mov	r3, r1
 8003e1c:	813b      	strh	r3, [r7, #8]
 8003e1e:	4613      	mov	r3, r2
 8003e20:	80fb      	strh	r3, [r7, #6]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8003e22:	88fb      	ldrh	r3, [r7, #6]
 8003e24:	b2da      	uxtb	r2, r3
 8003e26:	8979      	ldrh	r1, [r7, #10]
 8003e28:	4b20      	ldr	r3, [pc, #128]	; (8003eac <I2C_RequestMemoryWrite+0xa4>)
 8003e2a:	9300      	str	r3, [sp, #0]
 8003e2c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003e30:	68f8      	ldr	r0, [r7, #12]
 8003e32:	f000 fa5d 	bl	80042f0 <I2C_TransferConfig>

  /* Wait until TXIS flag is set */
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003e36:	69fa      	ldr	r2, [r7, #28]
 8003e38:	69b9      	ldr	r1, [r7, #24]
 8003e3a:	68f8      	ldr	r0, [r7, #12]
 8003e3c:	f000 f8f0 	bl	8004020 <I2C_WaitOnTXISFlagUntilTimeout>
 8003e40:	4603      	mov	r3, r0
 8003e42:	2b00      	cmp	r3, #0
 8003e44:	d001      	beq.n	8003e4a <I2C_RequestMemoryWrite+0x42>
  {
    return HAL_ERROR;
 8003e46:	2301      	movs	r3, #1
 8003e48:	e02c      	b.n	8003ea4 <I2C_RequestMemoryWrite+0x9c>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003e4a:	88fb      	ldrh	r3, [r7, #6]
 8003e4c:	2b01      	cmp	r3, #1
 8003e4e:	d105      	bne.n	8003e5c <I2C_RequestMemoryWrite+0x54>
  {
    /* Send Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8003e50:	893b      	ldrh	r3, [r7, #8]
 8003e52:	b2da      	uxtb	r2, r3
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	629a      	str	r2, [r3, #40]	; 0x28
 8003e5a:	e015      	b.n	8003e88 <I2C_RequestMemoryWrite+0x80>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8003e5c:	893b      	ldrh	r3, [r7, #8]
 8003e5e:	0a1b      	lsrs	r3, r3, #8
 8003e60:	b29b      	uxth	r3, r3
 8003e62:	b2da      	uxtb	r2, r3
 8003e64:	68fb      	ldr	r3, [r7, #12]
 8003e66:	681b      	ldr	r3, [r3, #0]
 8003e68:	629a      	str	r2, [r3, #40]	; 0x28

    /* Wait until TXIS flag is set */
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003e6a:	69fa      	ldr	r2, [r7, #28]
 8003e6c:	69b9      	ldr	r1, [r7, #24]
 8003e6e:	68f8      	ldr	r0, [r7, #12]
 8003e70:	f000 f8d6 	bl	8004020 <I2C_WaitOnTXISFlagUntilTimeout>
 8003e74:	4603      	mov	r3, r0
 8003e76:	2b00      	cmp	r3, #0
 8003e78:	d001      	beq.n	8003e7e <I2C_RequestMemoryWrite+0x76>
    {
      return HAL_ERROR;
 8003e7a:	2301      	movs	r3, #1
 8003e7c:	e012      	b.n	8003ea4 <I2C_RequestMemoryWrite+0x9c>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8003e7e:	893b      	ldrh	r3, [r7, #8]
 8003e80:	b2da      	uxtb	r2, r3
 8003e82:	68fb      	ldr	r3, [r7, #12]
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Wait until TCR flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8003e88:	69fb      	ldr	r3, [r7, #28]
 8003e8a:	9300      	str	r3, [sp, #0]
 8003e8c:	69bb      	ldr	r3, [r7, #24]
 8003e8e:	2200      	movs	r2, #0
 8003e90:	2180      	movs	r1, #128	; 0x80
 8003e92:	68f8      	ldr	r0, [r7, #12]
 8003e94:	f000 f884 	bl	8003fa0 <I2C_WaitOnFlagUntilTimeout>
 8003e98:	4603      	mov	r3, r0
 8003e9a:	2b00      	cmp	r3, #0
 8003e9c:	d001      	beq.n	8003ea2 <I2C_RequestMemoryWrite+0x9a>
  {
    return HAL_ERROR;
 8003e9e:	2301      	movs	r3, #1
 8003ea0:	e000      	b.n	8003ea4 <I2C_RequestMemoryWrite+0x9c>
  }

  return HAL_OK;
 8003ea2:	2300      	movs	r3, #0
}
 8003ea4:	4618      	mov	r0, r3
 8003ea6:	3710      	adds	r7, #16
 8003ea8:	46bd      	mov	sp, r7
 8003eaa:	bd80      	pop	{r7, pc}
 8003eac:	80002000 	.word	0x80002000

08003eb0 <I2C_RequestMemoryRead>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
                                               uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout,
                                               uint32_t Tickstart)
{
 8003eb0:	b580      	push	{r7, lr}
 8003eb2:	b086      	sub	sp, #24
 8003eb4:	af02      	add	r7, sp, #8
 8003eb6:	60f8      	str	r0, [r7, #12]
 8003eb8:	4608      	mov	r0, r1
 8003eba:	4611      	mov	r1, r2
 8003ebc:	461a      	mov	r2, r3
 8003ebe:	4603      	mov	r3, r0
 8003ec0:	817b      	strh	r3, [r7, #10]
 8003ec2:	460b      	mov	r3, r1
 8003ec4:	813b      	strh	r3, [r7, #8]
 8003ec6:	4613      	mov	r3, r2
 8003ec8:	80fb      	strh	r3, [r7, #6]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8003eca:	88fb      	ldrh	r3, [r7, #6]
 8003ecc:	b2da      	uxtb	r2, r3
 8003ece:	8979      	ldrh	r1, [r7, #10]
 8003ed0:	4b20      	ldr	r3, [pc, #128]	; (8003f54 <I2C_RequestMemoryRead+0xa4>)
 8003ed2:	9300      	str	r3, [sp, #0]
 8003ed4:	2300      	movs	r3, #0
 8003ed6:	68f8      	ldr	r0, [r7, #12]
 8003ed8:	f000 fa0a 	bl	80042f0 <I2C_TransferConfig>

  /* Wait until TXIS flag is set */
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003edc:	69fa      	ldr	r2, [r7, #28]
 8003ede:	69b9      	ldr	r1, [r7, #24]
 8003ee0:	68f8      	ldr	r0, [r7, #12]
 8003ee2:	f000 f89d 	bl	8004020 <I2C_WaitOnTXISFlagUntilTimeout>
 8003ee6:	4603      	mov	r3, r0
 8003ee8:	2b00      	cmp	r3, #0
 8003eea:	d001      	beq.n	8003ef0 <I2C_RequestMemoryRead+0x40>
  {
    return HAL_ERROR;
 8003eec:	2301      	movs	r3, #1
 8003eee:	e02c      	b.n	8003f4a <I2C_RequestMemoryRead+0x9a>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003ef0:	88fb      	ldrh	r3, [r7, #6]
 8003ef2:	2b01      	cmp	r3, #1
 8003ef4:	d105      	bne.n	8003f02 <I2C_RequestMemoryRead+0x52>
  {
    /* Send Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8003ef6:	893b      	ldrh	r3, [r7, #8]
 8003ef8:	b2da      	uxtb	r2, r3
 8003efa:	68fb      	ldr	r3, [r7, #12]
 8003efc:	681b      	ldr	r3, [r3, #0]
 8003efe:	629a      	str	r2, [r3, #40]	; 0x28
 8003f00:	e015      	b.n	8003f2e <I2C_RequestMemoryRead+0x7e>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8003f02:	893b      	ldrh	r3, [r7, #8]
 8003f04:	0a1b      	lsrs	r3, r3, #8
 8003f06:	b29b      	uxth	r3, r3
 8003f08:	b2da      	uxtb	r2, r3
 8003f0a:	68fb      	ldr	r3, [r7, #12]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	629a      	str	r2, [r3, #40]	; 0x28

    /* Wait until TXIS flag is set */
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003f10:	69fa      	ldr	r2, [r7, #28]
 8003f12:	69b9      	ldr	r1, [r7, #24]
 8003f14:	68f8      	ldr	r0, [r7, #12]
 8003f16:	f000 f883 	bl	8004020 <I2C_WaitOnTXISFlagUntilTimeout>
 8003f1a:	4603      	mov	r3, r0
 8003f1c:	2b00      	cmp	r3, #0
 8003f1e:	d001      	beq.n	8003f24 <I2C_RequestMemoryRead+0x74>
    {
      return HAL_ERROR;
 8003f20:	2301      	movs	r3, #1
 8003f22:	e012      	b.n	8003f4a <I2C_RequestMemoryRead+0x9a>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8003f24:	893b      	ldrh	r3, [r7, #8]
 8003f26:	b2da      	uxtb	r2, r3
 8003f28:	68fb      	ldr	r3, [r7, #12]
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Wait until TC flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8003f2e:	69fb      	ldr	r3, [r7, #28]
 8003f30:	9300      	str	r3, [sp, #0]
 8003f32:	69bb      	ldr	r3, [r7, #24]
 8003f34:	2200      	movs	r2, #0
 8003f36:	2140      	movs	r1, #64	; 0x40
 8003f38:	68f8      	ldr	r0, [r7, #12]
 8003f3a:	f000 f831 	bl	8003fa0 <I2C_WaitOnFlagUntilTimeout>
 8003f3e:	4603      	mov	r3, r0
 8003f40:	2b00      	cmp	r3, #0
 8003f42:	d001      	beq.n	8003f48 <I2C_RequestMemoryRead+0x98>
  {
    return HAL_ERROR;
 8003f44:	2301      	movs	r3, #1
 8003f46:	e000      	b.n	8003f4a <I2C_RequestMemoryRead+0x9a>
  }

  return HAL_OK;
 8003f48:	2300      	movs	r3, #0
}
 8003f4a:	4618      	mov	r0, r3
 8003f4c:	3710      	adds	r7, #16
 8003f4e:	46bd      	mov	sp, r7
 8003f50:	bd80      	pop	{r7, pc}
 8003f52:	bf00      	nop
 8003f54:	80002000 	.word	0x80002000

08003f58 <I2C_Flush_TXDR>:
  * @brief  I2C Tx data register flush process.
  * @param  hi2c I2C handle.
  * @retval None
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
 8003f58:	b480      	push	{r7}
 8003f5a:	b083      	sub	sp, #12
 8003f5c:	af00      	add	r7, sp, #0
 8003f5e:	6078      	str	r0, [r7, #4]
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8003f60:	687b      	ldr	r3, [r7, #4]
 8003f62:	681b      	ldr	r3, [r3, #0]
 8003f64:	699b      	ldr	r3, [r3, #24]
 8003f66:	f003 0302 	and.w	r3, r3, #2
 8003f6a:	2b02      	cmp	r3, #2
 8003f6c:	d103      	bne.n	8003f76 <I2C_Flush_TXDR+0x1e>
  {
    hi2c->Instance->TXDR = 0x00U;
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	681b      	ldr	r3, [r3, #0]
 8003f72:	2200      	movs	r2, #0
 8003f74:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8003f76:	687b      	ldr	r3, [r7, #4]
 8003f78:	681b      	ldr	r3, [r3, #0]
 8003f7a:	699b      	ldr	r3, [r3, #24]
 8003f7c:	f003 0301 	and.w	r3, r3, #1
 8003f80:	2b01      	cmp	r3, #1
 8003f82:	d007      	beq.n	8003f94 <I2C_Flush_TXDR+0x3c>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	681b      	ldr	r3, [r3, #0]
 8003f88:	699a      	ldr	r2, [r3, #24]
 8003f8a:	687b      	ldr	r3, [r7, #4]
 8003f8c:	681b      	ldr	r3, [r3, #0]
 8003f8e:	f042 0201 	orr.w	r2, r2, #1
 8003f92:	619a      	str	r2, [r3, #24]
  }
}
 8003f94:	bf00      	nop
 8003f96:	370c      	adds	r7, #12
 8003f98:	46bd      	mov	sp, r7
 8003f9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f9e:	4770      	bx	lr

08003fa0 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 8003fa0:	b580      	push	{r7, lr}
 8003fa2:	b084      	sub	sp, #16
 8003fa4:	af00      	add	r7, sp, #0
 8003fa6:	60f8      	str	r0, [r7, #12]
 8003fa8:	60b9      	str	r1, [r7, #8]
 8003faa:	603b      	str	r3, [r7, #0]
 8003fac:	4613      	mov	r3, r2
 8003fae:	71fb      	strb	r3, [r7, #7]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003fb0:	e022      	b.n	8003ff8 <I2C_WaitOnFlagUntilTimeout+0x58>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8003fb2:	683b      	ldr	r3, [r7, #0]
 8003fb4:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003fb8:	d01e      	beq.n	8003ff8 <I2C_WaitOnFlagUntilTimeout+0x58>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003fba:	f7ff f8f9 	bl	80031b0 <HAL_GetTick>
 8003fbe:	4602      	mov	r2, r0
 8003fc0:	69bb      	ldr	r3, [r7, #24]
 8003fc2:	1ad3      	subs	r3, r2, r3
 8003fc4:	683a      	ldr	r2, [r7, #0]
 8003fc6:	429a      	cmp	r2, r3
 8003fc8:	d302      	bcc.n	8003fd0 <I2C_WaitOnFlagUntilTimeout+0x30>
 8003fca:	683b      	ldr	r3, [r7, #0]
 8003fcc:	2b00      	cmp	r3, #0
 8003fce:	d113      	bne.n	8003ff8 <I2C_WaitOnFlagUntilTimeout+0x58>
      {
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8003fd0:	68fb      	ldr	r3, [r7, #12]
 8003fd2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003fd4:	f043 0220 	orr.w	r2, r3, #32
 8003fd8:	68fb      	ldr	r3, [r7, #12]
 8003fda:	645a      	str	r2, [r3, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8003fdc:	68fb      	ldr	r3, [r7, #12]
 8003fde:	2220      	movs	r2, #32
 8003fe0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8003fe4:	68fb      	ldr	r3, [r7, #12]
 8003fe6:	2200      	movs	r2, #0
 8003fe8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8003fec:	68fb      	ldr	r3, [r7, #12]
 8003fee:	2200      	movs	r2, #0
 8003ff0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
        return HAL_ERROR;
 8003ff4:	2301      	movs	r3, #1
 8003ff6:	e00f      	b.n	8004018 <I2C_WaitOnFlagUntilTimeout+0x78>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003ff8:	68fb      	ldr	r3, [r7, #12]
 8003ffa:	681b      	ldr	r3, [r3, #0]
 8003ffc:	699a      	ldr	r2, [r3, #24]
 8003ffe:	68bb      	ldr	r3, [r7, #8]
 8004000:	4013      	ands	r3, r2
 8004002:	68ba      	ldr	r2, [r7, #8]
 8004004:	429a      	cmp	r2, r3
 8004006:	bf0c      	ite	eq
 8004008:	2301      	moveq	r3, #1
 800400a:	2300      	movne	r3, #0
 800400c:	b2db      	uxtb	r3, r3
 800400e:	461a      	mov	r2, r3
 8004010:	79fb      	ldrb	r3, [r7, #7]
 8004012:	429a      	cmp	r2, r3
 8004014:	d0cd      	beq.n	8003fb2 <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8004016:	2300      	movs	r3, #0
}
 8004018:	4618      	mov	r0, r3
 800401a:	3710      	adds	r7, #16
 800401c:	46bd      	mov	sp, r7
 800401e:	bd80      	pop	{r7, pc}

08004020 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 8004020:	b580      	push	{r7, lr}
 8004022:	b084      	sub	sp, #16
 8004024:	af00      	add	r7, sp, #0
 8004026:	60f8      	str	r0, [r7, #12]
 8004028:	60b9      	str	r1, [r7, #8]
 800402a:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 800402c:	e02c      	b.n	8004088 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 800402e:	687a      	ldr	r2, [r7, #4]
 8004030:	68b9      	ldr	r1, [r7, #8]
 8004032:	68f8      	ldr	r0, [r7, #12]
 8004034:	f000 f870 	bl	8004118 <I2C_IsErrorOccurred>
 8004038:	4603      	mov	r3, r0
 800403a:	2b00      	cmp	r3, #0
 800403c:	d001      	beq.n	8004042 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 800403e:	2301      	movs	r3, #1
 8004040:	e02a      	b.n	8004098 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004042:	68bb      	ldr	r3, [r7, #8]
 8004044:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8004048:	d01e      	beq.n	8004088 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800404a:	f7ff f8b1 	bl	80031b0 <HAL_GetTick>
 800404e:	4602      	mov	r2, r0
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	1ad3      	subs	r3, r2, r3
 8004054:	68ba      	ldr	r2, [r7, #8]
 8004056:	429a      	cmp	r2, r3
 8004058:	d302      	bcc.n	8004060 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 800405a:	68bb      	ldr	r3, [r7, #8]
 800405c:	2b00      	cmp	r3, #0
 800405e:	d113      	bne.n	8004088 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
      {
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004060:	68fb      	ldr	r3, [r7, #12]
 8004062:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004064:	f043 0220 	orr.w	r2, r3, #32
 8004068:	68fb      	ldr	r3, [r7, #12]
 800406a:	645a      	str	r2, [r3, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 800406c:	68fb      	ldr	r3, [r7, #12]
 800406e:	2220      	movs	r2, #32
 8004070:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004074:	68fb      	ldr	r3, [r7, #12]
 8004076:	2200      	movs	r2, #0
 8004078:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800407c:	68fb      	ldr	r3, [r7, #12]
 800407e:	2200      	movs	r2, #0
 8004080:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

        return HAL_ERROR;
 8004084:	2301      	movs	r3, #1
 8004086:	e007      	b.n	8004098 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004088:	68fb      	ldr	r3, [r7, #12]
 800408a:	681b      	ldr	r3, [r3, #0]
 800408c:	699b      	ldr	r3, [r3, #24]
 800408e:	f003 0302 	and.w	r3, r3, #2
 8004092:	2b02      	cmp	r3, #2
 8004094:	d1cb      	bne.n	800402e <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8004096:	2300      	movs	r3, #0
}
 8004098:	4618      	mov	r0, r3
 800409a:	3710      	adds	r7, #16
 800409c:	46bd      	mov	sp, r7
 800409e:	bd80      	pop	{r7, pc}

080040a0 <I2C_WaitOnSTOPFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 80040a0:	b580      	push	{r7, lr}
 80040a2:	b084      	sub	sp, #16
 80040a4:	af00      	add	r7, sp, #0
 80040a6:	60f8      	str	r0, [r7, #12]
 80040a8:	60b9      	str	r1, [r7, #8]
 80040aa:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80040ac:	e028      	b.n	8004100 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80040ae:	687a      	ldr	r2, [r7, #4]
 80040b0:	68b9      	ldr	r1, [r7, #8]
 80040b2:	68f8      	ldr	r0, [r7, #12]
 80040b4:	f000 f830 	bl	8004118 <I2C_IsErrorOccurred>
 80040b8:	4603      	mov	r3, r0
 80040ba:	2b00      	cmp	r3, #0
 80040bc:	d001      	beq.n	80040c2 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 80040be:	2301      	movs	r3, #1
 80040c0:	e026      	b.n	8004110 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80040c2:	f7ff f875 	bl	80031b0 <HAL_GetTick>
 80040c6:	4602      	mov	r2, r0
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	1ad3      	subs	r3, r2, r3
 80040cc:	68ba      	ldr	r2, [r7, #8]
 80040ce:	429a      	cmp	r2, r3
 80040d0:	d302      	bcc.n	80040d8 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 80040d2:	68bb      	ldr	r3, [r7, #8]
 80040d4:	2b00      	cmp	r3, #0
 80040d6:	d113      	bne.n	8004100 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
    {
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80040d8:	68fb      	ldr	r3, [r7, #12]
 80040da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80040dc:	f043 0220 	orr.w	r2, r3, #32
 80040e0:	68fb      	ldr	r3, [r7, #12]
 80040e2:	645a      	str	r2, [r3, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 80040e4:	68fb      	ldr	r3, [r7, #12]
 80040e6:	2220      	movs	r2, #32
 80040e8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80040ec:	68fb      	ldr	r3, [r7, #12]
 80040ee:	2200      	movs	r2, #0
 80040f0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 80040f4:	68fb      	ldr	r3, [r7, #12]
 80040f6:	2200      	movs	r2, #0
 80040f8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

      return HAL_ERROR;
 80040fc:	2301      	movs	r3, #1
 80040fe:	e007      	b.n	8004110 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004100:	68fb      	ldr	r3, [r7, #12]
 8004102:	681b      	ldr	r3, [r3, #0]
 8004104:	699b      	ldr	r3, [r3, #24]
 8004106:	f003 0320 	and.w	r3, r3, #32
 800410a:	2b20      	cmp	r3, #32
 800410c:	d1cf      	bne.n	80040ae <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
    }
  }
  return HAL_OK;
 800410e:	2300      	movs	r3, #0
}
 8004110:	4618      	mov	r0, r3
 8004112:	3710      	adds	r7, #16
 8004114:	46bd      	mov	sp, r7
 8004116:	bd80      	pop	{r7, pc}

08004118 <I2C_IsErrorOccurred>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsErrorOccurred(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004118:	b580      	push	{r7, lr}
 800411a:	b08a      	sub	sp, #40	; 0x28
 800411c:	af00      	add	r7, sp, #0
 800411e:	60f8      	str	r0, [r7, #12]
 8004120:	60b9      	str	r1, [r7, #8]
 8004122:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8004124:	2300      	movs	r3, #0
 8004126:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  uint32_t itflag   = hi2c->Instance->ISR;
 800412a:	68fb      	ldr	r3, [r7, #12]
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	699b      	ldr	r3, [r3, #24]
 8004130:	61bb      	str	r3, [r7, #24]
  uint32_t error_code = 0;
 8004132:	2300      	movs	r3, #0
 8004134:	623b      	str	r3, [r7, #32]
  uint32_t tickstart = Tickstart;
 8004136:	687b      	ldr	r3, [r7, #4]
 8004138:	61fb      	str	r3, [r7, #28]
  uint32_t tmp1;
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 800413a:	69bb      	ldr	r3, [r7, #24]
 800413c:	f003 0310 	and.w	r3, r3, #16
 8004140:	2b00      	cmp	r3, #0
 8004142:	d075      	beq.n	8004230 <I2C_IsErrorOccurred+0x118>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004144:	68fb      	ldr	r3, [r7, #12]
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	2210      	movs	r2, #16
 800414a:	61da      	str	r2, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 800414c:	e056      	b.n	80041fc <I2C_IsErrorOccurred+0xe4>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
 800414e:	68bb      	ldr	r3, [r7, #8]
 8004150:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8004154:	d052      	beq.n	80041fc <I2C_IsErrorOccurred+0xe4>
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004156:	f7ff f82b 	bl	80031b0 <HAL_GetTick>
 800415a:	4602      	mov	r2, r0
 800415c:	69fb      	ldr	r3, [r7, #28]
 800415e:	1ad3      	subs	r3, r2, r3
 8004160:	68ba      	ldr	r2, [r7, #8]
 8004162:	429a      	cmp	r2, r3
 8004164:	d302      	bcc.n	800416c <I2C_IsErrorOccurred+0x54>
 8004166:	68bb      	ldr	r3, [r7, #8]
 8004168:	2b00      	cmp	r3, #0
 800416a:	d147      	bne.n	80041fc <I2C_IsErrorOccurred+0xe4>
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 800416c:	68fb      	ldr	r3, [r7, #12]
 800416e:	681b      	ldr	r3, [r3, #0]
 8004170:	685b      	ldr	r3, [r3, #4]
 8004172:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004176:	617b      	str	r3, [r7, #20]
          tmp2 = hi2c->Mode;
 8004178:	68fb      	ldr	r3, [r7, #12]
 800417a:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800417e:	74fb      	strb	r3, [r7, #19]

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004180:	68fb      	ldr	r3, [r7, #12]
 8004182:	681b      	ldr	r3, [r3, #0]
 8004184:	699b      	ldr	r3, [r3, #24]
 8004186:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800418a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800418e:	d12e      	bne.n	80041ee <I2C_IsErrorOccurred+0xd6>
 8004190:	697b      	ldr	r3, [r7, #20]
 8004192:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8004196:	d02a      	beq.n	80041ee <I2C_IsErrorOccurred+0xd6>
              (tmp1 != I2C_CR2_STOP) && \
 8004198:	7cfb      	ldrb	r3, [r7, #19]
 800419a:	2b20      	cmp	r3, #32
 800419c:	d027      	beq.n	80041ee <I2C_IsErrorOccurred+0xd6>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 800419e:	68fb      	ldr	r3, [r7, #12]
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	685a      	ldr	r2, [r3, #4]
 80041a4:	68fb      	ldr	r3, [r7, #12]
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80041ac:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
 80041ae:	f7fe ffff 	bl	80031b0 <HAL_GetTick>
 80041b2:	61f8      	str	r0, [r7, #28]
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80041b4:	e01b      	b.n	80041ee <I2C_IsErrorOccurred+0xd6>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 80041b6:	f7fe fffb 	bl	80031b0 <HAL_GetTick>
 80041ba:	4602      	mov	r2, r0
 80041bc:	69fb      	ldr	r3, [r7, #28]
 80041be:	1ad3      	subs	r3, r2, r3
 80041c0:	2b19      	cmp	r3, #25
 80041c2:	d914      	bls.n	80041ee <I2C_IsErrorOccurred+0xd6>
            {
              hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80041c4:	68fb      	ldr	r3, [r7, #12]
 80041c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80041c8:	f043 0220 	orr.w	r2, r3, #32
 80041cc:	68fb      	ldr	r3, [r7, #12]
 80041ce:	645a      	str	r2, [r3, #68]	; 0x44
              hi2c->State = HAL_I2C_STATE_READY;
 80041d0:	68fb      	ldr	r3, [r7, #12]
 80041d2:	2220      	movs	r2, #32
 80041d4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
              hi2c->Mode = HAL_I2C_MODE_NONE;
 80041d8:	68fb      	ldr	r3, [r7, #12]
 80041da:	2200      	movs	r2, #0
 80041dc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

              /* Process Unlocked */
              __HAL_UNLOCK(hi2c);
 80041e0:	68fb      	ldr	r3, [r7, #12]
 80041e2:	2200      	movs	r2, #0
 80041e4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

              status = HAL_ERROR;
 80041e8:	2301      	movs	r3, #1
 80041ea:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80041ee:	68fb      	ldr	r3, [r7, #12]
 80041f0:	681b      	ldr	r3, [r3, #0]
 80041f2:	699b      	ldr	r3, [r3, #24]
 80041f4:	f003 0320 	and.w	r3, r3, #32
 80041f8:	2b20      	cmp	r3, #32
 80041fa:	d1dc      	bne.n	80041b6 <I2C_IsErrorOccurred+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 80041fc:	68fb      	ldr	r3, [r7, #12]
 80041fe:	681b      	ldr	r3, [r3, #0]
 8004200:	699b      	ldr	r3, [r3, #24]
 8004202:	f003 0320 	and.w	r3, r3, #32
 8004206:	2b20      	cmp	r3, #32
 8004208:	d003      	beq.n	8004212 <I2C_IsErrorOccurred+0xfa>
 800420a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800420e:	2b00      	cmp	r3, #0
 8004210:	d09d      	beq.n	800414e <I2C_IsErrorOccurred+0x36>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
 8004212:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8004216:	2b00      	cmp	r3, #0
 8004218:	d103      	bne.n	8004222 <I2C_IsErrorOccurred+0x10a>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800421a:	68fb      	ldr	r3, [r7, #12]
 800421c:	681b      	ldr	r3, [r3, #0]
 800421e:	2220      	movs	r2, #32
 8004220:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
 8004222:	6a3b      	ldr	r3, [r7, #32]
 8004224:	f043 0304 	orr.w	r3, r3, #4
 8004228:	623b      	str	r3, [r7, #32]

    status = HAL_ERROR;
 800422a:	2301      	movs	r3, #1
 800422c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
 8004230:	68fb      	ldr	r3, [r7, #12]
 8004232:	681b      	ldr	r3, [r3, #0]
 8004234:	699b      	ldr	r3, [r3, #24]
 8004236:	61bb      	str	r3, [r7, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004238:	69bb      	ldr	r3, [r7, #24]
 800423a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800423e:	2b00      	cmp	r3, #0
 8004240:	d00b      	beq.n	800425a <I2C_IsErrorOccurred+0x142>
  {
    error_code |= HAL_I2C_ERROR_BERR;
 8004242:	6a3b      	ldr	r3, [r7, #32]
 8004244:	f043 0301 	orr.w	r3, r3, #1
 8004248:	623b      	str	r3, [r7, #32]

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 800424a:	68fb      	ldr	r3, [r7, #12]
 800424c:	681b      	ldr	r3, [r3, #0]
 800424e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004252:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 8004254:	2301      	movs	r3, #1
 8004256:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 800425a:	69bb      	ldr	r3, [r7, #24]
 800425c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004260:	2b00      	cmp	r3, #0
 8004262:	d00b      	beq.n	800427c <I2C_IsErrorOccurred+0x164>
  {
    error_code |= HAL_I2C_ERROR_OVR;
 8004264:	6a3b      	ldr	r3, [r7, #32]
 8004266:	f043 0308 	orr.w	r3, r3, #8
 800426a:	623b      	str	r3, [r7, #32]

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 800426c:	68fb      	ldr	r3, [r7, #12]
 800426e:	681b      	ldr	r3, [r3, #0]
 8004270:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004274:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 8004276:	2301      	movs	r3, #1
 8004278:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 800427c:	69bb      	ldr	r3, [r7, #24]
 800427e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004282:	2b00      	cmp	r3, #0
 8004284:	d00b      	beq.n	800429e <I2C_IsErrorOccurred+0x186>
  {
    error_code |= HAL_I2C_ERROR_ARLO;
 8004286:	6a3b      	ldr	r3, [r7, #32]
 8004288:	f043 0302 	orr.w	r3, r3, #2
 800428c:	623b      	str	r3, [r7, #32]

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 800428e:	68fb      	ldr	r3, [r7, #12]
 8004290:	681b      	ldr	r3, [r3, #0]
 8004292:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004296:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 8004298:	2301      	movs	r3, #1
 800429a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  if (status != HAL_OK)
 800429e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80042a2:	2b00      	cmp	r3, #0
 80042a4:	d01c      	beq.n	80042e0 <I2C_IsErrorOccurred+0x1c8>
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);
 80042a6:	68f8      	ldr	r0, [r7, #12]
 80042a8:	f7ff fe56 	bl	8003f58 <I2C_Flush_TXDR>

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 80042ac:	68fb      	ldr	r3, [r7, #12]
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	6859      	ldr	r1, [r3, #4]
 80042b2:	68fb      	ldr	r3, [r7, #12]
 80042b4:	681a      	ldr	r2, [r3, #0]
 80042b6:	4b0d      	ldr	r3, [pc, #52]	; (80042ec <I2C_IsErrorOccurred+0x1d4>)
 80042b8:	400b      	ands	r3, r1
 80042ba:	6053      	str	r3, [r2, #4]

    hi2c->ErrorCode |= error_code;
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80042c0:	6a3b      	ldr	r3, [r7, #32]
 80042c2:	431a      	orrs	r2, r3
 80042c4:	68fb      	ldr	r3, [r7, #12]
 80042c6:	645a      	str	r2, [r3, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 80042c8:	68fb      	ldr	r3, [r7, #12]
 80042ca:	2220      	movs	r2, #32
 80042cc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80042d0:	68fb      	ldr	r3, [r7, #12]
 80042d2:	2200      	movs	r2, #0
 80042d4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80042d8:	68fb      	ldr	r3, [r7, #12]
 80042da:	2200      	movs	r2, #0
 80042dc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
  }

  return status;
 80042e0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
}
 80042e4:	4618      	mov	r0, r3
 80042e6:	3728      	adds	r7, #40	; 0x28
 80042e8:	46bd      	mov	sp, r7
 80042ea:	bd80      	pop	{r7, pc}
 80042ec:	fe00e800 	.word	0xfe00e800

080042f0 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 80042f0:	b480      	push	{r7}
 80042f2:	b087      	sub	sp, #28
 80042f4:	af00      	add	r7, sp, #0
 80042f6:	60f8      	str	r0, [r7, #12]
 80042f8:	607b      	str	r3, [r7, #4]
 80042fa:	460b      	mov	r3, r1
 80042fc:	817b      	strh	r3, [r7, #10]
 80042fe:	4613      	mov	r3, r2
 8004300:	727b      	strb	r3, [r7, #9]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004302:	897b      	ldrh	r3, [r7, #10]
 8004304:	f3c3 0209 	ubfx	r2, r3, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 8004308:	7a7b      	ldrb	r3, [r7, #9]
 800430a:	041b      	lsls	r3, r3, #16
 800430c:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004310:	431a      	orrs	r2, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 8004312:	687b      	ldr	r3, [r7, #4]
 8004314:	431a      	orrs	r2, r3
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004316:	6a3b      	ldr	r3, [r7, #32]
 8004318:	4313      	orrs	r3, r2
 800431a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800431e:	617b      	str	r3, [r7, #20]
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004320:	68fb      	ldr	r3, [r7, #12]
 8004322:	681b      	ldr	r3, [r3, #0]
 8004324:	685a      	ldr	r2, [r3, #4]
 8004326:	6a3b      	ldr	r3, [r7, #32]
 8004328:	0d5b      	lsrs	r3, r3, #21
 800432a:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 800432e:	4b08      	ldr	r3, [pc, #32]	; (8004350 <I2C_TransferConfig+0x60>)
 8004330:	430b      	orrs	r3, r1
 8004332:	43db      	mvns	r3, r3
 8004334:	ea02 0103 	and.w	r1, r2, r3
 8004338:	68fb      	ldr	r3, [r7, #12]
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	697a      	ldr	r2, [r7, #20]
 800433e:	430a      	orrs	r2, r1
 8004340:	605a      	str	r2, [r3, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8004342:	bf00      	nop
 8004344:	371c      	adds	r7, #28
 8004346:	46bd      	mov	sp, r7
 8004348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800434c:	4770      	bx	lr
 800434e:	bf00      	nop
 8004350:	03ff63ff 	.word	0x03ff63ff

08004354 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004354:	b480      	push	{r7}
 8004356:	b083      	sub	sp, #12
 8004358:	af00      	add	r7, sp, #0
 800435a:	6078      	str	r0, [r7, #4]
 800435c:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004364:	b2db      	uxtb	r3, r3
 8004366:	2b20      	cmp	r3, #32
 8004368:	d138      	bne.n	80043dc <HAL_I2CEx_ConfigAnalogFilter+0x88>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004370:	2b01      	cmp	r3, #1
 8004372:	d101      	bne.n	8004378 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8004374:	2302      	movs	r3, #2
 8004376:	e032      	b.n	80043de <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	2201      	movs	r2, #1
 800437c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	2224      	movs	r2, #36	; 0x24
 8004384:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004388:	687b      	ldr	r3, [r7, #4]
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	681a      	ldr	r2, [r3, #0]
 800438e:	687b      	ldr	r3, [r7, #4]
 8004390:	681b      	ldr	r3, [r3, #0]
 8004392:	f022 0201 	bic.w	r2, r2, #1
 8004396:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8004398:	687b      	ldr	r3, [r7, #4]
 800439a:	681b      	ldr	r3, [r3, #0]
 800439c:	681a      	ldr	r2, [r3, #0]
 800439e:	687b      	ldr	r3, [r7, #4]
 80043a0:	681b      	ldr	r3, [r3, #0]
 80043a2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80043a6:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	681b      	ldr	r3, [r3, #0]
 80043ac:	6819      	ldr	r1, [r3, #0]
 80043ae:	687b      	ldr	r3, [r7, #4]
 80043b0:	681b      	ldr	r3, [r3, #0]
 80043b2:	683a      	ldr	r2, [r7, #0]
 80043b4:	430a      	orrs	r2, r1
 80043b6:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80043b8:	687b      	ldr	r3, [r7, #4]
 80043ba:	681b      	ldr	r3, [r3, #0]
 80043bc:	681a      	ldr	r2, [r3, #0]
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	681b      	ldr	r3, [r3, #0]
 80043c2:	f042 0201 	orr.w	r2, r2, #1
 80043c6:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	2220      	movs	r2, #32
 80043cc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	2200      	movs	r2, #0
 80043d4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 80043d8:	2300      	movs	r3, #0
 80043da:	e000      	b.n	80043de <HAL_I2CEx_ConfigAnalogFilter+0x8a>
  }
  else
  {
    return HAL_BUSY;
 80043dc:	2302      	movs	r3, #2
  }
}
 80043de:	4618      	mov	r0, r3
 80043e0:	370c      	adds	r7, #12
 80043e2:	46bd      	mov	sp, r7
 80043e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043e8:	4770      	bx	lr

080043ea <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80043ea:	b480      	push	{r7}
 80043ec:	b085      	sub	sp, #20
 80043ee:	af00      	add	r7, sp, #0
 80043f0:	6078      	str	r0, [r7, #4]
 80043f2:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80043f4:	687b      	ldr	r3, [r7, #4]
 80043f6:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80043fa:	b2db      	uxtb	r3, r3
 80043fc:	2b20      	cmp	r3, #32
 80043fe:	d139      	bne.n	8004474 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004400:	687b      	ldr	r3, [r7, #4]
 8004402:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004406:	2b01      	cmp	r3, #1
 8004408:	d101      	bne.n	800440e <HAL_I2CEx_ConfigDigitalFilter+0x24>
 800440a:	2302      	movs	r3, #2
 800440c:	e033      	b.n	8004476 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	2201      	movs	r2, #1
 8004412:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 8004416:	687b      	ldr	r3, [r7, #4]
 8004418:	2224      	movs	r2, #36	; 0x24
 800441a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	681a      	ldr	r2, [r3, #0]
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	681b      	ldr	r3, [r3, #0]
 8004428:	f022 0201 	bic.w	r2, r2, #1
 800442c:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	681b      	ldr	r3, [r3, #0]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	60fb      	str	r3, [r7, #12]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8004436:	68fb      	ldr	r3, [r7, #12]
 8004438:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 800443c:	60fb      	str	r3, [r7, #12]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 800443e:	683b      	ldr	r3, [r7, #0]
 8004440:	021b      	lsls	r3, r3, #8
 8004442:	68fa      	ldr	r2, [r7, #12]
 8004444:	4313      	orrs	r3, r2
 8004446:	60fb      	str	r3, [r7, #12]

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8004448:	687b      	ldr	r3, [r7, #4]
 800444a:	681b      	ldr	r3, [r3, #0]
 800444c:	68fa      	ldr	r2, [r7, #12]
 800444e:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	681a      	ldr	r2, [r3, #0]
 8004456:	687b      	ldr	r3, [r7, #4]
 8004458:	681b      	ldr	r3, [r3, #0]
 800445a:	f042 0201 	orr.w	r2, r2, #1
 800445e:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	2220      	movs	r2, #32
 8004464:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	2200      	movs	r2, #0
 800446c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 8004470:	2300      	movs	r3, #0
 8004472:	e000      	b.n	8004476 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
  }
  else
  {
    return HAL_BUSY;
 8004474:	2302      	movs	r3, #2
  }
}
 8004476:	4618      	mov	r0, r3
 8004478:	3714      	adds	r7, #20
 800447a:	46bd      	mov	sp, r7
 800447c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004480:	4770      	bx	lr
	...

08004484 <HAL_PWREx_GetVoltageRange>:
  * @brief Return Voltage Scaling Range.
  * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE1 or PWR_REGULATOR_VOLTAGE_SCALE2
  *         or PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when applicable)
  */
uint32_t HAL_PWREx_GetVoltageRange(void)
{
 8004484:	b480      	push	{r7}
 8004486:	af00      	add	r7, sp, #0
    else
    {
      return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
    }
#else
  return  (PWR->CR1 & PWR_CR1_VOS);
 8004488:	4b04      	ldr	r3, [pc, #16]	; (800449c <HAL_PWREx_GetVoltageRange+0x18>)
 800448a:	681b      	ldr	r3, [r3, #0]
 800448c:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
#endif
}
 8004490:	4618      	mov	r0, r3
 8004492:	46bd      	mov	sp, r7
 8004494:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004498:	4770      	bx	lr
 800449a:	bf00      	nop
 800449c:	40007000 	.word	0x40007000

080044a0 <HAL_PWREx_ControlVoltageScaling>:
  *        cleared before returning the status. If the flag is not cleared within
  *        50 microseconds, HAL_TIMEOUT status is reported.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
 80044a0:	b480      	push	{r7}
 80044a2:	b085      	sub	sp, #20
 80044a4:	af00      	add	r7, sp, #0
 80044a6:	6078      	str	r0, [r7, #4]
  }

#else

  /* If Set Range 1 */
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80044ae:	d130      	bne.n	8004512 <HAL_PWREx_ControlVoltageScaling+0x72>
  {
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 80044b0:	4b23      	ldr	r3, [pc, #140]	; (8004540 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80044b8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80044bc:	d038      	beq.n	8004530 <HAL_PWREx_ControlVoltageScaling+0x90>
    {
      /* Set Range 1 */
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 80044be:	4b20      	ldr	r3, [pc, #128]	; (8004540 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80044c0:	681b      	ldr	r3, [r3, #0]
 80044c2:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 80044c6:	4a1e      	ldr	r2, [pc, #120]	; (8004540 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80044c8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80044cc:	6013      	str	r3, [r2, #0]

      /* Wait until VOSF is cleared */
      wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 80044ce:	4b1d      	ldr	r3, [pc, #116]	; (8004544 <HAL_PWREx_ControlVoltageScaling+0xa4>)
 80044d0:	681b      	ldr	r3, [r3, #0]
 80044d2:	2232      	movs	r2, #50	; 0x32
 80044d4:	fb02 f303 	mul.w	r3, r2, r3
 80044d8:	4a1b      	ldr	r2, [pc, #108]	; (8004548 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 80044da:	fba2 2303 	umull	r2, r3, r2, r3
 80044de:	0c9b      	lsrs	r3, r3, #18
 80044e0:	3301      	adds	r3, #1
 80044e2:	60fb      	str	r3, [r7, #12]
      while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 80044e4:	e002      	b.n	80044ec <HAL_PWREx_ControlVoltageScaling+0x4c>
      {
        wait_loop_index--;
 80044e6:	68fb      	ldr	r3, [r7, #12]
 80044e8:	3b01      	subs	r3, #1
 80044ea:	60fb      	str	r3, [r7, #12]
      while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 80044ec:	4b14      	ldr	r3, [pc, #80]	; (8004540 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80044ee:	695b      	ldr	r3, [r3, #20]
 80044f0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80044f4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80044f8:	d102      	bne.n	8004500 <HAL_PWREx_ControlVoltageScaling+0x60>
 80044fa:	68fb      	ldr	r3, [r7, #12]
 80044fc:	2b00      	cmp	r3, #0
 80044fe:	d1f2      	bne.n	80044e6 <HAL_PWREx_ControlVoltageScaling+0x46>
      }
      if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 8004500:	4b0f      	ldr	r3, [pc, #60]	; (8004540 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004502:	695b      	ldr	r3, [r3, #20]
 8004504:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004508:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800450c:	d110      	bne.n	8004530 <HAL_PWREx_ControlVoltageScaling+0x90>
      {
        return HAL_TIMEOUT;
 800450e:	2303      	movs	r3, #3
 8004510:	e00f      	b.n	8004532 <HAL_PWREx_ControlVoltageScaling+0x92>
      }
    }
  }
  else
  {
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE2)
 8004512:	4b0b      	ldr	r3, [pc, #44]	; (8004540 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004514:	681b      	ldr	r3, [r3, #0]
 8004516:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800451a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800451e:	d007      	beq.n	8004530 <HAL_PWREx_ControlVoltageScaling+0x90>
    {
      /* Set Range 2 */
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 8004520:	4b07      	ldr	r3, [pc, #28]	; (8004540 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004522:	681b      	ldr	r3, [r3, #0]
 8004524:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8004528:	4a05      	ldr	r2, [pc, #20]	; (8004540 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800452a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800452e:	6013      	str	r3, [r2, #0]
      /* No need to wait for VOSF to be cleared for this transition */
    }
  }
#endif

  return HAL_OK;
 8004530:	2300      	movs	r3, #0
}
 8004532:	4618      	mov	r0, r3
 8004534:	3714      	adds	r7, #20
 8004536:	46bd      	mov	sp, r7
 8004538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800453c:	4770      	bx	lr
 800453e:	bf00      	nop
 8004540:	40007000 	.word	0x40007000
 8004544:	20000008 	.word	0x20000008
 8004548:	431bde83 	.word	0x431bde83

0800454c <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800454c:	b580      	push	{r7, lr}
 800454e:	b088      	sub	sp, #32
 8004550:	af00      	add	r7, sp, #0
 8004552:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	2b00      	cmp	r3, #0
 8004558:	d101      	bne.n	800455e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 800455a:	2301      	movs	r3, #1
 800455c:	e3ca      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 800455e:	4b97      	ldr	r3, [pc, #604]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 8004560:	689b      	ldr	r3, [r3, #8]
 8004562:	f003 030c 	and.w	r3, r3, #12
 8004566:	61bb      	str	r3, [r7, #24]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8004568:	4b94      	ldr	r3, [pc, #592]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 800456a:	68db      	ldr	r3, [r3, #12]
 800456c:	f003 0303 	and.w	r3, r3, #3
 8004570:	617b      	str	r3, [r7, #20]

  /*----------------------------- MSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	681b      	ldr	r3, [r3, #0]
 8004576:	f003 0310 	and.w	r3, r3, #16
 800457a:	2b00      	cmp	r3, #0
 800457c:	f000 80e4 	beq.w	8004748 <HAL_RCC_OscConfig+0x1fc>
    assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));
    assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
    assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

    /* Check if MSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 8004580:	69bb      	ldr	r3, [r7, #24]
 8004582:	2b00      	cmp	r3, #0
 8004584:	d007      	beq.n	8004596 <HAL_RCC_OscConfig+0x4a>
 8004586:	69bb      	ldr	r3, [r7, #24]
 8004588:	2b0c      	cmp	r3, #12
 800458a:	f040 808b 	bne.w	80046a4 <HAL_RCC_OscConfig+0x158>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_MSI)))
 800458e:	697b      	ldr	r3, [r7, #20]
 8004590:	2b01      	cmp	r3, #1
 8004592:	f040 8087 	bne.w	80046a4 <HAL_RCC_OscConfig+0x158>
    {
      if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8004596:	4b89      	ldr	r3, [pc, #548]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	f003 0302 	and.w	r3, r3, #2
 800459e:	2b00      	cmp	r3, #0
 80045a0:	d005      	beq.n	80045ae <HAL_RCC_OscConfig+0x62>
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	699b      	ldr	r3, [r3, #24]
 80045a6:	2b00      	cmp	r3, #0
 80045a8:	d101      	bne.n	80045ae <HAL_RCC_OscConfig+0x62>
      {
        return HAL_ERROR;
 80045aa:	2301      	movs	r3, #1
 80045ac:	e3a2      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
      else
      {
        /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
           must be correctly programmed according to the frequency of the CPU clock
           (HCLK) and the supply voltage of the device. */
        if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	6a1a      	ldr	r2, [r3, #32]
 80045b2:	4b82      	ldr	r3, [pc, #520]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80045b4:	681b      	ldr	r3, [r3, #0]
 80045b6:	f003 0308 	and.w	r3, r3, #8
 80045ba:	2b00      	cmp	r3, #0
 80045bc:	d004      	beq.n	80045c8 <HAL_RCC_OscConfig+0x7c>
 80045be:	4b7f      	ldr	r3, [pc, #508]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80045c0:	681b      	ldr	r3, [r3, #0]
 80045c2:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80045c6:	e005      	b.n	80045d4 <HAL_RCC_OscConfig+0x88>
 80045c8:	4b7c      	ldr	r3, [pc, #496]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80045ca:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80045ce:	091b      	lsrs	r3, r3, #4
 80045d0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80045d4:	4293      	cmp	r3, r2
 80045d6:	d223      	bcs.n	8004620 <HAL_RCC_OscConfig+0xd4>
        {
          /* First increase number of wait states update if necessary */
          if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	6a1b      	ldr	r3, [r3, #32]
 80045dc:	4618      	mov	r0, r3
 80045de:	f000 fd87 	bl	80050f0 <RCC_SetFlashLatencyFromMSIRange>
 80045e2:	4603      	mov	r3, r0
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	d001      	beq.n	80045ec <HAL_RCC_OscConfig+0xa0>
          {
            return HAL_ERROR;
 80045e8:	2301      	movs	r3, #1
 80045ea:	e383      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
          }

          /* Selects the Multiple Speed oscillator (MSI) clock range .*/
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 80045ec:	4b73      	ldr	r3, [pc, #460]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	4a72      	ldr	r2, [pc, #456]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80045f2:	f043 0308 	orr.w	r3, r3, #8
 80045f6:	6013      	str	r3, [r2, #0]
 80045f8:	4b70      	ldr	r3, [pc, #448]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	6a1b      	ldr	r3, [r3, #32]
 8004604:	496d      	ldr	r1, [pc, #436]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 8004606:	4313      	orrs	r3, r2
 8004608:	600b      	str	r3, [r1, #0]
          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 800460a:	4b6c      	ldr	r3, [pc, #432]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 800460c:	685b      	ldr	r3, [r3, #4]
 800460e:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	69db      	ldr	r3, [r3, #28]
 8004616:	021b      	lsls	r3, r3, #8
 8004618:	4968      	ldr	r1, [pc, #416]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 800461a:	4313      	orrs	r3, r2
 800461c:	604b      	str	r3, [r1, #4]
 800461e:	e025      	b.n	800466c <HAL_RCC_OscConfig+0x120>
        }
        else
        {
          /* Else, keep current flash latency while decreasing applies */
          /* Selects the Multiple Speed oscillator (MSI) clock range .*/
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8004620:	4b66      	ldr	r3, [pc, #408]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 8004622:	681b      	ldr	r3, [r3, #0]
 8004624:	4a65      	ldr	r2, [pc, #404]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 8004626:	f043 0308 	orr.w	r3, r3, #8
 800462a:	6013      	str	r3, [r2, #0]
 800462c:	4b63      	ldr	r3, [pc, #396]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	6a1b      	ldr	r3, [r3, #32]
 8004638:	4960      	ldr	r1, [pc, #384]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 800463a:	4313      	orrs	r3, r2
 800463c:	600b      	str	r3, [r1, #0]
          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 800463e:	4b5f      	ldr	r3, [pc, #380]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 8004640:	685b      	ldr	r3, [r3, #4]
 8004642:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	69db      	ldr	r3, [r3, #28]
 800464a:	021b      	lsls	r3, r3, #8
 800464c:	495b      	ldr	r1, [pc, #364]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 800464e:	4313      	orrs	r3, r2
 8004650:	604b      	str	r3, [r1, #4]

          /* Decrease number of wait states update if necessary */
          /* Only possible when MSI is the System clock source  */
          if(sysclk_source == RCC_CFGR_SWS_MSI)
 8004652:	69bb      	ldr	r3, [r7, #24]
 8004654:	2b00      	cmp	r3, #0
 8004656:	d109      	bne.n	800466c <HAL_RCC_OscConfig+0x120>
          {
            if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8004658:	687b      	ldr	r3, [r7, #4]
 800465a:	6a1b      	ldr	r3, [r3, #32]
 800465c:	4618      	mov	r0, r3
 800465e:	f000 fd47 	bl	80050f0 <RCC_SetFlashLatencyFromMSIRange>
 8004662:	4603      	mov	r3, r0
 8004664:	2b00      	cmp	r3, #0
 8004666:	d001      	beq.n	800466c <HAL_RCC_OscConfig+0x120>
            {
              return HAL_ERROR;
 8004668:	2301      	movs	r3, #1
 800466a:	e343      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
            }
          }
        }

        /* Update the SystemCoreClock global variable */
        SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 800466c:	f000 fc4a 	bl	8004f04 <HAL_RCC_GetSysClockFreq>
 8004670:	4602      	mov	r2, r0
 8004672:	4b52      	ldr	r3, [pc, #328]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 8004674:	689b      	ldr	r3, [r3, #8]
 8004676:	091b      	lsrs	r3, r3, #4
 8004678:	f003 030f 	and.w	r3, r3, #15
 800467c:	4950      	ldr	r1, [pc, #320]	; (80047c0 <HAL_RCC_OscConfig+0x274>)
 800467e:	5ccb      	ldrb	r3, [r1, r3]
 8004680:	f003 031f 	and.w	r3, r3, #31
 8004684:	fa22 f303 	lsr.w	r3, r2, r3
 8004688:	4a4e      	ldr	r2, [pc, #312]	; (80047c4 <HAL_RCC_OscConfig+0x278>)
 800468a:	6013      	str	r3, [r2, #0]

        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick(uwTickPrio);
 800468c:	4b4e      	ldr	r3, [pc, #312]	; (80047c8 <HAL_RCC_OscConfig+0x27c>)
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	4618      	mov	r0, r3
 8004692:	f7fe fbdd 	bl	8002e50 <HAL_InitTick>
 8004696:	4603      	mov	r3, r0
 8004698:	73fb      	strb	r3, [r7, #15]
        if(status != HAL_OK)
 800469a:	7bfb      	ldrb	r3, [r7, #15]
 800469c:	2b00      	cmp	r3, #0
 800469e:	d052      	beq.n	8004746 <HAL_RCC_OscConfig+0x1fa>
        {
          return status;
 80046a0:	7bfb      	ldrb	r3, [r7, #15]
 80046a2:	e327      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
      }
    }
    else
    {
      /* Check the MSI State */
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	699b      	ldr	r3, [r3, #24]
 80046a8:	2b00      	cmp	r3, #0
 80046aa:	d032      	beq.n	8004712 <HAL_RCC_OscConfig+0x1c6>
      {
        /* Enable the Internal High Speed oscillator (MSI). */
        __HAL_RCC_MSI_ENABLE();
 80046ac:	4b43      	ldr	r3, [pc, #268]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	4a42      	ldr	r2, [pc, #264]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80046b2:	f043 0301 	orr.w	r3, r3, #1
 80046b6:	6013      	str	r3, [r2, #0]

        /* Get timeout */
        tickstart = HAL_GetTick();
 80046b8:	f7fe fd7a 	bl	80031b0 <HAL_GetTick>
 80046bc:	6138      	str	r0, [r7, #16]

        /* Wait till MSI is ready */
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 80046be:	e008      	b.n	80046d2 <HAL_RCC_OscConfig+0x186>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 80046c0:	f7fe fd76 	bl	80031b0 <HAL_GetTick>
 80046c4:	4602      	mov	r2, r0
 80046c6:	693b      	ldr	r3, [r7, #16]
 80046c8:	1ad3      	subs	r3, r2, r3
 80046ca:	2b02      	cmp	r3, #2
 80046cc:	d901      	bls.n	80046d2 <HAL_RCC_OscConfig+0x186>
          {
            return HAL_TIMEOUT;
 80046ce:	2303      	movs	r3, #3
 80046d0:	e310      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 80046d2:	4b3a      	ldr	r3, [pc, #232]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	f003 0302 	and.w	r3, r3, #2
 80046da:	2b00      	cmp	r3, #0
 80046dc:	d0f0      	beq.n	80046c0 <HAL_RCC_OscConfig+0x174>
          }
        }
         /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 80046de:	4b37      	ldr	r3, [pc, #220]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80046e0:	681b      	ldr	r3, [r3, #0]
 80046e2:	4a36      	ldr	r2, [pc, #216]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80046e4:	f043 0308 	orr.w	r3, r3, #8
 80046e8:	6013      	str	r3, [r2, #0]
 80046ea:	4b34      	ldr	r3, [pc, #208]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80046ec:	681b      	ldr	r3, [r3, #0]
 80046ee:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80046f2:	687b      	ldr	r3, [r7, #4]
 80046f4:	6a1b      	ldr	r3, [r3, #32]
 80046f6:	4931      	ldr	r1, [pc, #196]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80046f8:	4313      	orrs	r3, r2
 80046fa:	600b      	str	r3, [r1, #0]
         /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 80046fc:	4b2f      	ldr	r3, [pc, #188]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80046fe:	685b      	ldr	r3, [r3, #4]
 8004700:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	69db      	ldr	r3, [r3, #28]
 8004708:	021b      	lsls	r3, r3, #8
 800470a:	492c      	ldr	r1, [pc, #176]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 800470c:	4313      	orrs	r3, r2
 800470e:	604b      	str	r3, [r1, #4]
 8004710:	e01a      	b.n	8004748 <HAL_RCC_OscConfig+0x1fc>

      }
      else
      {
        /* Disable the Internal High Speed oscillator (MSI). */
        __HAL_RCC_MSI_DISABLE();
 8004712:	4b2a      	ldr	r3, [pc, #168]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	4a29      	ldr	r2, [pc, #164]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 8004718:	f023 0301 	bic.w	r3, r3, #1
 800471c:	6013      	str	r3, [r2, #0]

        /* Get timeout */
        tickstart = HAL_GetTick();
 800471e:	f7fe fd47 	bl	80031b0 <HAL_GetTick>
 8004722:	6138      	str	r0, [r7, #16]

        /* Wait till MSI is ready */
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 8004724:	e008      	b.n	8004738 <HAL_RCC_OscConfig+0x1ec>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8004726:	f7fe fd43 	bl	80031b0 <HAL_GetTick>
 800472a:	4602      	mov	r2, r0
 800472c:	693b      	ldr	r3, [r7, #16]
 800472e:	1ad3      	subs	r3, r2, r3
 8004730:	2b02      	cmp	r3, #2
 8004732:	d901      	bls.n	8004738 <HAL_RCC_OscConfig+0x1ec>
          {
            return HAL_TIMEOUT;
 8004734:	2303      	movs	r3, #3
 8004736:	e2dd      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 8004738:	4b20      	ldr	r3, [pc, #128]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 800473a:	681b      	ldr	r3, [r3, #0]
 800473c:	f003 0302 	and.w	r3, r3, #2
 8004740:	2b00      	cmp	r3, #0
 8004742:	d1f0      	bne.n	8004726 <HAL_RCC_OscConfig+0x1da>
 8004744:	e000      	b.n	8004748 <HAL_RCC_OscConfig+0x1fc>
      if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8004746:	bf00      	nop
        }
      }
    }
  }
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	f003 0301 	and.w	r3, r3, #1
 8004750:	2b00      	cmp	r3, #0
 8004752:	d074      	beq.n	800483e <HAL_RCC_OscConfig+0x2f2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((sysclk_source == RCC_CFGR_SWS_HSE) ||
 8004754:	69bb      	ldr	r3, [r7, #24]
 8004756:	2b08      	cmp	r3, #8
 8004758:	d005      	beq.n	8004766 <HAL_RCC_OscConfig+0x21a>
 800475a:	69bb      	ldr	r3, [r7, #24]
 800475c:	2b0c      	cmp	r3, #12
 800475e:	d10e      	bne.n	800477e <HAL_RCC_OscConfig+0x232>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSE)))
 8004760:	697b      	ldr	r3, [r7, #20]
 8004762:	2b03      	cmp	r3, #3
 8004764:	d10b      	bne.n	800477e <HAL_RCC_OscConfig+0x232>
    {
      if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004766:	4b15      	ldr	r3, [pc, #84]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800476e:	2b00      	cmp	r3, #0
 8004770:	d064      	beq.n	800483c <HAL_RCC_OscConfig+0x2f0>
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	685b      	ldr	r3, [r3, #4]
 8004776:	2b00      	cmp	r3, #0
 8004778:	d160      	bne.n	800483c <HAL_RCC_OscConfig+0x2f0>
      {
        return HAL_ERROR;
 800477a:	2301      	movs	r3, #1
 800477c:	e2ba      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800477e:	687b      	ldr	r3, [r7, #4]
 8004780:	685b      	ldr	r3, [r3, #4]
 8004782:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004786:	d106      	bne.n	8004796 <HAL_RCC_OscConfig+0x24a>
 8004788:	4b0c      	ldr	r3, [pc, #48]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	4a0b      	ldr	r2, [pc, #44]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 800478e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004792:	6013      	str	r3, [r2, #0]
 8004794:	e026      	b.n	80047e4 <HAL_RCC_OscConfig+0x298>
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	685b      	ldr	r3, [r3, #4]
 800479a:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800479e:	d115      	bne.n	80047cc <HAL_RCC_OscConfig+0x280>
 80047a0:	4b06      	ldr	r3, [pc, #24]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80047a2:	681b      	ldr	r3, [r3, #0]
 80047a4:	4a05      	ldr	r2, [pc, #20]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80047a6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80047aa:	6013      	str	r3, [r2, #0]
 80047ac:	4b03      	ldr	r3, [pc, #12]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80047ae:	681b      	ldr	r3, [r3, #0]
 80047b0:	4a02      	ldr	r2, [pc, #8]	; (80047bc <HAL_RCC_OscConfig+0x270>)
 80047b2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80047b6:	6013      	str	r3, [r2, #0]
 80047b8:	e014      	b.n	80047e4 <HAL_RCC_OscConfig+0x298>
 80047ba:	bf00      	nop
 80047bc:	40021000 	.word	0x40021000
 80047c0:	0802e8e8 	.word	0x0802e8e8
 80047c4:	20000008 	.word	0x20000008
 80047c8:	2000000c 	.word	0x2000000c
 80047cc:	4ba0      	ldr	r3, [pc, #640]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80047ce:	681b      	ldr	r3, [r3, #0]
 80047d0:	4a9f      	ldr	r2, [pc, #636]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80047d2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80047d6:	6013      	str	r3, [r2, #0]
 80047d8:	4b9d      	ldr	r3, [pc, #628]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	4a9c      	ldr	r2, [pc, #624]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80047de:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80047e2:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	685b      	ldr	r3, [r3, #4]
 80047e8:	2b00      	cmp	r3, #0
 80047ea:	d013      	beq.n	8004814 <HAL_RCC_OscConfig+0x2c8>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80047ec:	f7fe fce0 	bl	80031b0 <HAL_GetTick>
 80047f0:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 80047f2:	e008      	b.n	8004806 <HAL_RCC_OscConfig+0x2ba>
        {
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80047f4:	f7fe fcdc 	bl	80031b0 <HAL_GetTick>
 80047f8:	4602      	mov	r2, r0
 80047fa:	693b      	ldr	r3, [r7, #16]
 80047fc:	1ad3      	subs	r3, r2, r3
 80047fe:	2b64      	cmp	r3, #100	; 0x64
 8004800:	d901      	bls.n	8004806 <HAL_RCC_OscConfig+0x2ba>
          {
            return HAL_TIMEOUT;
 8004802:	2303      	movs	r3, #3
 8004804:	e276      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8004806:	4b92      	ldr	r3, [pc, #584]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800480e:	2b00      	cmp	r3, #0
 8004810:	d0f0      	beq.n	80047f4 <HAL_RCC_OscConfig+0x2a8>
 8004812:	e014      	b.n	800483e <HAL_RCC_OscConfig+0x2f2>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004814:	f7fe fccc 	bl	80031b0 <HAL_GetTick>
 8004818:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is disabled */
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 800481a:	e008      	b.n	800482e <HAL_RCC_OscConfig+0x2e2>
        {
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800481c:	f7fe fcc8 	bl	80031b0 <HAL_GetTick>
 8004820:	4602      	mov	r2, r0
 8004822:	693b      	ldr	r3, [r7, #16]
 8004824:	1ad3      	subs	r3, r2, r3
 8004826:	2b64      	cmp	r3, #100	; 0x64
 8004828:	d901      	bls.n	800482e <HAL_RCC_OscConfig+0x2e2>
          {
            return HAL_TIMEOUT;
 800482a:	2303      	movs	r3, #3
 800482c:	e262      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 800482e:	4b88      	ldr	r3, [pc, #544]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004836:	2b00      	cmp	r3, #0
 8004838:	d1f0      	bne.n	800481c <HAL_RCC_OscConfig+0x2d0>
 800483a:	e000      	b.n	800483e <HAL_RCC_OscConfig+0x2f2>
      if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800483c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800483e:	687b      	ldr	r3, [r7, #4]
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	f003 0302 	and.w	r3, r3, #2
 8004846:	2b00      	cmp	r3, #0
 8004848:	d060      	beq.n	800490c <HAL_RCC_OscConfig+0x3c0>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_CFGR_SWS_HSI) ||
 800484a:	69bb      	ldr	r3, [r7, #24]
 800484c:	2b04      	cmp	r3, #4
 800484e:	d005      	beq.n	800485c <HAL_RCC_OscConfig+0x310>
 8004850:	69bb      	ldr	r3, [r7, #24]
 8004852:	2b0c      	cmp	r3, #12
 8004854:	d119      	bne.n	800488a <HAL_RCC_OscConfig+0x33e>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSI)))
 8004856:	697b      	ldr	r3, [r7, #20]
 8004858:	2b02      	cmp	r3, #2
 800485a:	d116      	bne.n	800488a <HAL_RCC_OscConfig+0x33e>
    {
      /* When HSI is used as system clock it will not be disabled */
      if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 800485c:	4b7c      	ldr	r3, [pc, #496]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004864:	2b00      	cmp	r3, #0
 8004866:	d005      	beq.n	8004874 <HAL_RCC_OscConfig+0x328>
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	68db      	ldr	r3, [r3, #12]
 800486c:	2b00      	cmp	r3, #0
 800486e:	d101      	bne.n	8004874 <HAL_RCC_OscConfig+0x328>
      {
        return HAL_ERROR;
 8004870:	2301      	movs	r3, #1
 8004872:	e23f      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004874:	4b76      	ldr	r3, [pc, #472]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004876:	685b      	ldr	r3, [r3, #4]
 8004878:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	691b      	ldr	r3, [r3, #16]
 8004880:	061b      	lsls	r3, r3, #24
 8004882:	4973      	ldr	r1, [pc, #460]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004884:	4313      	orrs	r3, r2
 8004886:	604b      	str	r3, [r1, #4]
      if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8004888:	e040      	b.n	800490c <HAL_RCC_OscConfig+0x3c0>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	68db      	ldr	r3, [r3, #12]
 800488e:	2b00      	cmp	r3, #0
 8004890:	d023      	beq.n	80048da <HAL_RCC_OscConfig+0x38e>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8004892:	4b6f      	ldr	r3, [pc, #444]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004894:	681b      	ldr	r3, [r3, #0]
 8004896:	4a6e      	ldr	r2, [pc, #440]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004898:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800489c:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800489e:	f7fe fc87 	bl	80031b0 <HAL_GetTick>
 80048a2:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80048a4:	e008      	b.n	80048b8 <HAL_RCC_OscConfig+0x36c>
        {
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80048a6:	f7fe fc83 	bl	80031b0 <HAL_GetTick>
 80048aa:	4602      	mov	r2, r0
 80048ac:	693b      	ldr	r3, [r7, #16]
 80048ae:	1ad3      	subs	r3, r2, r3
 80048b0:	2b02      	cmp	r3, #2
 80048b2:	d901      	bls.n	80048b8 <HAL_RCC_OscConfig+0x36c>
          {
            return HAL_TIMEOUT;
 80048b4:	2303      	movs	r3, #3
 80048b6:	e21d      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80048b8:	4b65      	ldr	r3, [pc, #404]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80048ba:	681b      	ldr	r3, [r3, #0]
 80048bc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80048c0:	2b00      	cmp	r3, #0
 80048c2:	d0f0      	beq.n	80048a6 <HAL_RCC_OscConfig+0x35a>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80048c4:	4b62      	ldr	r3, [pc, #392]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80048c6:	685b      	ldr	r3, [r3, #4]
 80048c8:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	691b      	ldr	r3, [r3, #16]
 80048d0:	061b      	lsls	r3, r3, #24
 80048d2:	495f      	ldr	r1, [pc, #380]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80048d4:	4313      	orrs	r3, r2
 80048d6:	604b      	str	r3, [r1, #4]
 80048d8:	e018      	b.n	800490c <HAL_RCC_OscConfig+0x3c0>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80048da:	4b5d      	ldr	r3, [pc, #372]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	4a5c      	ldr	r2, [pc, #368]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80048e0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80048e4:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80048e6:	f7fe fc63 	bl	80031b0 <HAL_GetTick>
 80048ea:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is disabled */
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 80048ec:	e008      	b.n	8004900 <HAL_RCC_OscConfig+0x3b4>
        {
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80048ee:	f7fe fc5f 	bl	80031b0 <HAL_GetTick>
 80048f2:	4602      	mov	r2, r0
 80048f4:	693b      	ldr	r3, [r7, #16]
 80048f6:	1ad3      	subs	r3, r2, r3
 80048f8:	2b02      	cmp	r3, #2
 80048fa:	d901      	bls.n	8004900 <HAL_RCC_OscConfig+0x3b4>
          {
            return HAL_TIMEOUT;
 80048fc:	2303      	movs	r3, #3
 80048fe:	e1f9      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8004900:	4b53      	ldr	r3, [pc, #332]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004902:	681b      	ldr	r3, [r3, #0]
 8004904:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004908:	2b00      	cmp	r3, #0
 800490a:	d1f0      	bne.n	80048ee <HAL_RCC_OscConfig+0x3a2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	681b      	ldr	r3, [r3, #0]
 8004910:	f003 0308 	and.w	r3, r3, #8
 8004914:	2b00      	cmp	r3, #0
 8004916:	d03c      	beq.n	8004992 <HAL_RCC_OscConfig+0x446>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8004918:	687b      	ldr	r3, [r7, #4]
 800491a:	695b      	ldr	r3, [r3, #20]
 800491c:	2b00      	cmp	r3, #0
 800491e:	d01c      	beq.n	800495a <HAL_RCC_OscConfig+0x40e>
        MODIFY_REG(RCC->CSR, RCC_CSR_LSIPREDIV, RCC_OscInitStruct->LSIDiv);
      }
#endif /* RCC_CSR_LSIPREDIV */

      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004920:	4b4b      	ldr	r3, [pc, #300]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004922:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004926:	4a4a      	ldr	r2, [pc, #296]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004928:	f043 0301 	orr.w	r3, r3, #1
 800492c:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004930:	f7fe fc3e 	bl	80031b0 <HAL_GetTick>
 8004934:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8004936:	e008      	b.n	800494a <HAL_RCC_OscConfig+0x3fe>
      {
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004938:	f7fe fc3a 	bl	80031b0 <HAL_GetTick>
 800493c:	4602      	mov	r2, r0
 800493e:	693b      	ldr	r3, [r7, #16]
 8004940:	1ad3      	subs	r3, r2, r3
 8004942:	2b02      	cmp	r3, #2
 8004944:	d901      	bls.n	800494a <HAL_RCC_OscConfig+0x3fe>
        {
          return HAL_TIMEOUT;
 8004946:	2303      	movs	r3, #3
 8004948:	e1d4      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 800494a:	4b41      	ldr	r3, [pc, #260]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 800494c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004950:	f003 0302 	and.w	r3, r3, #2
 8004954:	2b00      	cmp	r3, #0
 8004956:	d0ef      	beq.n	8004938 <HAL_RCC_OscConfig+0x3ec>
 8004958:	e01b      	b.n	8004992 <HAL_RCC_OscConfig+0x446>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 800495a:	4b3d      	ldr	r3, [pc, #244]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 800495c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004960:	4a3b      	ldr	r2, [pc, #236]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004962:	f023 0301 	bic.w	r3, r3, #1
 8004966:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800496a:	f7fe fc21 	bl	80031b0 <HAL_GetTick>
 800496e:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is disabled */
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8004970:	e008      	b.n	8004984 <HAL_RCC_OscConfig+0x438>
      {
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004972:	f7fe fc1d 	bl	80031b0 <HAL_GetTick>
 8004976:	4602      	mov	r2, r0
 8004978:	693b      	ldr	r3, [r7, #16]
 800497a:	1ad3      	subs	r3, r2, r3
 800497c:	2b02      	cmp	r3, #2
 800497e:	d901      	bls.n	8004984 <HAL_RCC_OscConfig+0x438>
        {
          return HAL_TIMEOUT;
 8004980:	2303      	movs	r3, #3
 8004982:	e1b7      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8004984:	4b32      	ldr	r3, [pc, #200]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004986:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800498a:	f003 0302 	and.w	r3, r3, #2
 800498e:	2b00      	cmp	r3, #0
 8004990:	d1ef      	bne.n	8004972 <HAL_RCC_OscConfig+0x426>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	681b      	ldr	r3, [r3, #0]
 8004996:	f003 0304 	and.w	r3, r3, #4
 800499a:	2b00      	cmp	r3, #0
 800499c:	f000 80a6 	beq.w	8004aec <HAL_RCC_OscConfig+0x5a0>
  {
    FlagStatus       pwrclkchanged = RESET;
 80049a0:	2300      	movs	r3, #0
 80049a2:	77fb      	strb	r3, [r7, #31]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 80049a4:	4b2a      	ldr	r3, [pc, #168]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80049a6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80049a8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80049ac:	2b00      	cmp	r3, #0
 80049ae:	d10d      	bne.n	80049cc <HAL_RCC_OscConfig+0x480>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80049b0:	4b27      	ldr	r3, [pc, #156]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80049b2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80049b4:	4a26      	ldr	r2, [pc, #152]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80049b6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80049ba:	6593      	str	r3, [r2, #88]	; 0x58
 80049bc:	4b24      	ldr	r3, [pc, #144]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 80049be:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80049c0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80049c4:	60bb      	str	r3, [r7, #8]
 80049c6:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 80049c8:	2301      	movs	r3, #1
 80049ca:	77fb      	strb	r3, [r7, #31]
    }

    if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80049cc:	4b21      	ldr	r3, [pc, #132]	; (8004a54 <HAL_RCC_OscConfig+0x508>)
 80049ce:	681b      	ldr	r3, [r3, #0]
 80049d0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80049d4:	2b00      	cmp	r3, #0
 80049d6:	d118      	bne.n	8004a0a <HAL_RCC_OscConfig+0x4be>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR1, PWR_CR1_DBP);
 80049d8:	4b1e      	ldr	r3, [pc, #120]	; (8004a54 <HAL_RCC_OscConfig+0x508>)
 80049da:	681b      	ldr	r3, [r3, #0]
 80049dc:	4a1d      	ldr	r2, [pc, #116]	; (8004a54 <HAL_RCC_OscConfig+0x508>)
 80049de:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80049e2:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80049e4:	f7fe fbe4 	bl	80031b0 <HAL_GetTick>
 80049e8:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80049ea:	e008      	b.n	80049fe <HAL_RCC_OscConfig+0x4b2>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80049ec:	f7fe fbe0 	bl	80031b0 <HAL_GetTick>
 80049f0:	4602      	mov	r2, r0
 80049f2:	693b      	ldr	r3, [r7, #16]
 80049f4:	1ad3      	subs	r3, r2, r3
 80049f6:	2b02      	cmp	r3, #2
 80049f8:	d901      	bls.n	80049fe <HAL_RCC_OscConfig+0x4b2>
        {
          return HAL_TIMEOUT;
 80049fa:	2303      	movs	r3, #3
 80049fc:	e17a      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
      while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80049fe:	4b15      	ldr	r3, [pc, #84]	; (8004a54 <HAL_RCC_OscConfig+0x508>)
 8004a00:	681b      	ldr	r3, [r3, #0]
 8004a02:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004a06:	2b00      	cmp	r3, #0
 8004a08:	d0f0      	beq.n	80049ec <HAL_RCC_OscConfig+0x4a0>
    {
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
    }
#else
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	689b      	ldr	r3, [r3, #8]
 8004a0e:	2b01      	cmp	r3, #1
 8004a10:	d108      	bne.n	8004a24 <HAL_RCC_OscConfig+0x4d8>
 8004a12:	4b0f      	ldr	r3, [pc, #60]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004a14:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004a18:	4a0d      	ldr	r2, [pc, #52]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004a1a:	f043 0301 	orr.w	r3, r3, #1
 8004a1e:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004a22:	e029      	b.n	8004a78 <HAL_RCC_OscConfig+0x52c>
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	689b      	ldr	r3, [r3, #8]
 8004a28:	2b05      	cmp	r3, #5
 8004a2a:	d115      	bne.n	8004a58 <HAL_RCC_OscConfig+0x50c>
 8004a2c:	4b08      	ldr	r3, [pc, #32]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004a2e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004a32:	4a07      	ldr	r2, [pc, #28]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004a34:	f043 0304 	orr.w	r3, r3, #4
 8004a38:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004a3c:	4b04      	ldr	r3, [pc, #16]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004a3e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004a42:	4a03      	ldr	r2, [pc, #12]	; (8004a50 <HAL_RCC_OscConfig+0x504>)
 8004a44:	f043 0301 	orr.w	r3, r3, #1
 8004a48:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004a4c:	e014      	b.n	8004a78 <HAL_RCC_OscConfig+0x52c>
 8004a4e:	bf00      	nop
 8004a50:	40021000 	.word	0x40021000
 8004a54:	40007000 	.word	0x40007000
 8004a58:	4b9c      	ldr	r3, [pc, #624]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004a5a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004a5e:	4a9b      	ldr	r2, [pc, #620]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004a60:	f023 0301 	bic.w	r3, r3, #1
 8004a64:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004a68:	4b98      	ldr	r3, [pc, #608]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004a6a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004a6e:	4a97      	ldr	r2, [pc, #604]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004a70:	f023 0304 	bic.w	r3, r3, #4
 8004a74:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
#endif /* RCC_BDCR_LSESYSDIS */

    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	689b      	ldr	r3, [r3, #8]
 8004a7c:	2b00      	cmp	r3, #0
 8004a7e:	d016      	beq.n	8004aae <HAL_RCC_OscConfig+0x562>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004a80:	f7fe fb96 	bl	80031b0 <HAL_GetTick>
 8004a84:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004a86:	e00a      	b.n	8004a9e <HAL_RCC_OscConfig+0x552>
      {
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004a88:	f7fe fb92 	bl	80031b0 <HAL_GetTick>
 8004a8c:	4602      	mov	r2, r0
 8004a8e:	693b      	ldr	r3, [r7, #16]
 8004a90:	1ad3      	subs	r3, r2, r3
 8004a92:	f241 3288 	movw	r2, #5000	; 0x1388
 8004a96:	4293      	cmp	r3, r2
 8004a98:	d901      	bls.n	8004a9e <HAL_RCC_OscConfig+0x552>
        {
          return HAL_TIMEOUT;
 8004a9a:	2303      	movs	r3, #3
 8004a9c:	e12a      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004a9e:	4b8b      	ldr	r3, [pc, #556]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004aa0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004aa4:	f003 0302 	and.w	r3, r3, #2
 8004aa8:	2b00      	cmp	r3, #0
 8004aaa:	d0ed      	beq.n	8004a88 <HAL_RCC_OscConfig+0x53c>
 8004aac:	e015      	b.n	8004ada <HAL_RCC_OscConfig+0x58e>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004aae:	f7fe fb7f 	bl	80031b0 <HAL_GetTick>
 8004ab2:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is disabled */
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8004ab4:	e00a      	b.n	8004acc <HAL_RCC_OscConfig+0x580>
      {
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004ab6:	f7fe fb7b 	bl	80031b0 <HAL_GetTick>
 8004aba:	4602      	mov	r2, r0
 8004abc:	693b      	ldr	r3, [r7, #16]
 8004abe:	1ad3      	subs	r3, r2, r3
 8004ac0:	f241 3288 	movw	r2, #5000	; 0x1388
 8004ac4:	4293      	cmp	r3, r2
 8004ac6:	d901      	bls.n	8004acc <HAL_RCC_OscConfig+0x580>
        {
          return HAL_TIMEOUT;
 8004ac8:	2303      	movs	r3, #3
 8004aca:	e113      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8004acc:	4b7f      	ldr	r3, [pc, #508]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004ace:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004ad2:	f003 0302 	and.w	r3, r3, #2
 8004ad6:	2b00      	cmp	r3, #0
 8004ad8:	d1ed      	bne.n	8004ab6 <HAL_RCC_OscConfig+0x56a>
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSDIS);
#endif /* RCC_BDCR_LSESYSDIS */
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8004ada:	7ffb      	ldrb	r3, [r7, #31]
 8004adc:	2b01      	cmp	r3, #1
 8004ade:	d105      	bne.n	8004aec <HAL_RCC_OscConfig+0x5a0>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004ae0:	4b7a      	ldr	r3, [pc, #488]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004ae2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004ae4:	4a79      	ldr	r2, [pc, #484]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004ae6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004aea:	6593      	str	r3, [r2, #88]	; 0x58
#endif /* RCC_HSI48_SUPPORT */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));

  if(RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 8004aec:	687b      	ldr	r3, [r7, #4]
 8004aee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004af0:	2b00      	cmp	r3, #0
 8004af2:	f000 80fe 	beq.w	8004cf2 <HAL_RCC_OscConfig+0x7a6>
  {
    /* PLL On ? */
    if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 8004af6:	687b      	ldr	r3, [r7, #4]
 8004af8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004afa:	2b02      	cmp	r3, #2
 8004afc:	f040 80d0 	bne.w	8004ca0 <HAL_RCC_OscConfig+0x754>
#endif /* RCC_PLLP_SUPPORT */
      assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
      assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

      /* Do nothing if PLL configuration is the unchanged */
      pll_config = RCC->PLLCFGR;
 8004b00:	4b72      	ldr	r3, [pc, #456]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004b02:	68db      	ldr	r3, [r3, #12]
 8004b04:	617b      	str	r3, [r7, #20]
      if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8004b06:	697b      	ldr	r3, [r7, #20]
 8004b08:	f003 0203 	and.w	r2, r3, #3
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004b10:	429a      	cmp	r2, r3
 8004b12:	d130      	bne.n	8004b76 <HAL_RCC_OscConfig+0x62a>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_PLLCFGR_PLLM_Pos)) ||
 8004b14:	697b      	ldr	r3, [r7, #20]
 8004b16:	f003 0270 	and.w	r2, r3, #112	; 0x70
 8004b1a:	687b      	ldr	r3, [r7, #4]
 8004b1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b1e:	3b01      	subs	r3, #1
 8004b20:	011b      	lsls	r3, r3, #4
      if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8004b22:	429a      	cmp	r2, r3
 8004b24:	d127      	bne.n	8004b76 <HAL_RCC_OscConfig+0x62a>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8004b26:	697b      	ldr	r3, [r7, #20]
 8004b28:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004b30:	021b      	lsls	r3, r3, #8
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_PLLCFGR_PLLM_Pos)) ||
 8004b32:	429a      	cmp	r2, r3
 8004b34:	d11f      	bne.n	8004b76 <HAL_RCC_OscConfig+0x62a>
#if defined(RCC_PLLP_SUPPORT)
#if defined(RCC_PLLP_DIV_2_31_SUPPORT)
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLPDIV) != (RCC_OscInitStruct->PLL.PLLP << RCC_PLLCFGR_PLLPDIV_Pos)) ||
#else
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLP)    != ((RCC_OscInitStruct->PLL.PLLP == RCC_PLLP_DIV7) ? 0U : 1U)) ||
 8004b36:	697b      	ldr	r3, [r7, #20]
 8004b38:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004b3c:	687a      	ldr	r2, [r7, #4]
 8004b3e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8004b40:	2a07      	cmp	r2, #7
 8004b42:	bf14      	ite	ne
 8004b44:	2201      	movne	r2, #1
 8004b46:	2200      	moveq	r2, #0
 8004b48:	b2d2      	uxtb	r2, r2
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8004b4a:	4293      	cmp	r3, r2
 8004b4c:	d113      	bne.n	8004b76 <HAL_RCC_OscConfig+0x62a>
#endif
#endif
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U) << RCC_PLLCFGR_PLLQ_Pos)) ||
 8004b4e:	697b      	ldr	r3, [r7, #20]
 8004b50:	f403 02c0 	and.w	r2, r3, #6291456	; 0x600000
 8004b54:	687b      	ldr	r3, [r7, #4]
 8004b56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004b58:	085b      	lsrs	r3, r3, #1
 8004b5a:	3b01      	subs	r3, #1
 8004b5c:	055b      	lsls	r3, r3, #21
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLP)    != ((RCC_OscInitStruct->PLL.PLLP == RCC_PLLP_DIV7) ? 0U : 1U)) ||
 8004b5e:	429a      	cmp	r2, r3
 8004b60:	d109      	bne.n	8004b76 <HAL_RCC_OscConfig+0x62a>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLR)    != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U) << RCC_PLLCFGR_PLLR_Pos)))
 8004b62:	697b      	ldr	r3, [r7, #20]
 8004b64:	f003 62c0 	and.w	r2, r3, #100663296	; 0x6000000
 8004b68:	687b      	ldr	r3, [r7, #4]
 8004b6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b6c:	085b      	lsrs	r3, r3, #1
 8004b6e:	3b01      	subs	r3, #1
 8004b70:	065b      	lsls	r3, r3, #25
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U) << RCC_PLLCFGR_PLLQ_Pos)) ||
 8004b72:	429a      	cmp	r2, r3
 8004b74:	d06e      	beq.n	8004c54 <HAL_RCC_OscConfig+0x708>
      {
        /* Check if the PLL is used as system clock or not */
        if(sysclk_source != RCC_CFGR_SWS_PLL)
 8004b76:	69bb      	ldr	r3, [r7, #24]
 8004b78:	2b0c      	cmp	r3, #12
 8004b7a:	d069      	beq.n	8004c50 <HAL_RCC_OscConfig+0x704>
        {
#if defined(RCC_PLLSAI1_SUPPORT) || defined(RCC_PLLSAI2_SUPPORT)
          /* Check if main PLL can be updated */
          /* Not possible if the source is shared by other enabled PLLSAIx */
          if((READ_BIT(RCC->CR, RCC_CR_PLLSAI1ON) != 0U)
 8004b7c:	4b53      	ldr	r3, [pc, #332]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004b7e:	681b      	ldr	r3, [r3, #0]
 8004b80:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8004b84:	2b00      	cmp	r3, #0
 8004b86:	d105      	bne.n	8004b94 <HAL_RCC_OscConfig+0x648>
#if defined(RCC_PLLSAI2_SUPPORT)
             || (READ_BIT(RCC->CR, RCC_CR_PLLSAI2ON) != 0U)
 8004b88:	4b50      	ldr	r3, [pc, #320]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004b8a:	681b      	ldr	r3, [r3, #0]
 8004b8c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004b90:	2b00      	cmp	r3, #0
 8004b92:	d001      	beq.n	8004b98 <HAL_RCC_OscConfig+0x64c>
#endif
            )
          {
            return HAL_ERROR;
 8004b94:	2301      	movs	r3, #1
 8004b96:	e0ad      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
          }
          else
#endif /* RCC_PLLSAI1_SUPPORT || RCC_PLLSAI2_SUPPORT */
          {
            /* Disable the main PLL. */
            __HAL_RCC_PLL_DISABLE();
 8004b98:	4b4c      	ldr	r3, [pc, #304]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004b9a:	681b      	ldr	r3, [r3, #0]
 8004b9c:	4a4b      	ldr	r2, [pc, #300]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004b9e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004ba2:	6013      	str	r3, [r2, #0]

            /* Get Start Tick*/
            tickstart = HAL_GetTick();
 8004ba4:	f7fe fb04 	bl	80031b0 <HAL_GetTick>
 8004ba8:	6138      	str	r0, [r7, #16]

            /* Wait till PLL is ready */
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8004baa:	e008      	b.n	8004bbe <HAL_RCC_OscConfig+0x672>
            {
              if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004bac:	f7fe fb00 	bl	80031b0 <HAL_GetTick>
 8004bb0:	4602      	mov	r2, r0
 8004bb2:	693b      	ldr	r3, [r7, #16]
 8004bb4:	1ad3      	subs	r3, r2, r3
 8004bb6:	2b02      	cmp	r3, #2
 8004bb8:	d901      	bls.n	8004bbe <HAL_RCC_OscConfig+0x672>
              {
                return HAL_TIMEOUT;
 8004bba:	2303      	movs	r3, #3
 8004bbc:	e09a      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8004bbe:	4b43      	ldr	r3, [pc, #268]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004bc0:	681b      	ldr	r3, [r3, #0]
 8004bc2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004bc6:	2b00      	cmp	r3, #0
 8004bc8:	d1f0      	bne.n	8004bac <HAL_RCC_OscConfig+0x660>
              }
            }

            /* Configure the main PLL clock source, multiplication and division factors. */
#if defined(RCC_PLLP_SUPPORT)
            __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8004bca:	4b40      	ldr	r3, [pc, #256]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004bcc:	68da      	ldr	r2, [r3, #12]
 8004bce:	4b40      	ldr	r3, [pc, #256]	; (8004cd0 <HAL_RCC_OscConfig+0x784>)
 8004bd0:	4013      	ands	r3, r2
 8004bd2:	687a      	ldr	r2, [r7, #4]
 8004bd4:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8004bd6:	687a      	ldr	r2, [r7, #4]
 8004bd8:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8004bda:	3a01      	subs	r2, #1
 8004bdc:	0112      	lsls	r2, r2, #4
 8004bde:	4311      	orrs	r1, r2
 8004be0:	687a      	ldr	r2, [r7, #4]
 8004be2:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8004be4:	0212      	lsls	r2, r2, #8
 8004be6:	4311      	orrs	r1, r2
 8004be8:	687a      	ldr	r2, [r7, #4]
 8004bea:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8004bec:	0852      	lsrs	r2, r2, #1
 8004bee:	3a01      	subs	r2, #1
 8004bf0:	0552      	lsls	r2, r2, #21
 8004bf2:	4311      	orrs	r1, r2
 8004bf4:	687a      	ldr	r2, [r7, #4]
 8004bf6:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8004bf8:	0852      	lsrs	r2, r2, #1
 8004bfa:	3a01      	subs	r2, #1
 8004bfc:	0652      	lsls	r2, r2, #25
 8004bfe:	4311      	orrs	r1, r2
 8004c00:	687a      	ldr	r2, [r7, #4]
 8004c02:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8004c04:	0912      	lsrs	r2, r2, #4
 8004c06:	0452      	lsls	r2, r2, #17
 8004c08:	430a      	orrs	r2, r1
 8004c0a:	4930      	ldr	r1, [pc, #192]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004c0c:	4313      	orrs	r3, r2
 8004c0e:	60cb      	str	r3, [r1, #12]
                                 RCC_OscInitStruct->PLL.PLLQ,
                                 RCC_OscInitStruct->PLL.PLLR);
#endif

            /* Enable the main PLL. */
            __HAL_RCC_PLL_ENABLE();
 8004c10:	4b2e      	ldr	r3, [pc, #184]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004c12:	681b      	ldr	r3, [r3, #0]
 8004c14:	4a2d      	ldr	r2, [pc, #180]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004c16:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004c1a:	6013      	str	r3, [r2, #0]

            /* Enable PLL System Clock output. */
            __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 8004c1c:	4b2b      	ldr	r3, [pc, #172]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004c1e:	68db      	ldr	r3, [r3, #12]
 8004c20:	4a2a      	ldr	r2, [pc, #168]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004c22:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004c26:	60d3      	str	r3, [r2, #12]

            /* Get Start Tick*/
            tickstart = HAL_GetTick();
 8004c28:	f7fe fac2 	bl	80031b0 <HAL_GetTick>
 8004c2c:	6138      	str	r0, [r7, #16]

            /* Wait till PLL is ready */
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004c2e:	e008      	b.n	8004c42 <HAL_RCC_OscConfig+0x6f6>
            {
              if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004c30:	f7fe fabe 	bl	80031b0 <HAL_GetTick>
 8004c34:	4602      	mov	r2, r0
 8004c36:	693b      	ldr	r3, [r7, #16]
 8004c38:	1ad3      	subs	r3, r2, r3
 8004c3a:	2b02      	cmp	r3, #2
 8004c3c:	d901      	bls.n	8004c42 <HAL_RCC_OscConfig+0x6f6>
              {
                return HAL_TIMEOUT;
 8004c3e:	2303      	movs	r3, #3
 8004c40:	e058      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004c42:	4b22      	ldr	r3, [pc, #136]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004c4a:	2b00      	cmp	r3, #0
 8004c4c:	d0f0      	beq.n	8004c30 <HAL_RCC_OscConfig+0x6e4>
        if(sysclk_source != RCC_CFGR_SWS_PLL)
 8004c4e:	e050      	b.n	8004cf2 <HAL_RCC_OscConfig+0x7a6>
          }
        }
        else
        {
          /* PLL is already used as System core clock */
          return HAL_ERROR;
 8004c50:	2301      	movs	r3, #1
 8004c52:	e04f      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
      }
      else
      {
        /* PLL configuration is unchanged */
        /* Re-enable PLL if it was disabled (ie. low power mode) */
        if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004c54:	4b1d      	ldr	r3, [pc, #116]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004c56:	681b      	ldr	r3, [r3, #0]
 8004c58:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004c5c:	2b00      	cmp	r3, #0
 8004c5e:	d148      	bne.n	8004cf2 <HAL_RCC_OscConfig+0x7a6>
        {
          /* Enable the main PLL. */
          __HAL_RCC_PLL_ENABLE();
 8004c60:	4b1a      	ldr	r3, [pc, #104]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004c62:	681b      	ldr	r3, [r3, #0]
 8004c64:	4a19      	ldr	r2, [pc, #100]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004c66:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004c6a:	6013      	str	r3, [r2, #0]

          /* Enable PLL System Clock output. */
          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 8004c6c:	4b17      	ldr	r3, [pc, #92]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004c6e:	68db      	ldr	r3, [r3, #12]
 8004c70:	4a16      	ldr	r2, [pc, #88]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004c72:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004c76:	60d3      	str	r3, [r2, #12]

          /* Get Start Tick*/
          tickstart = HAL_GetTick();
 8004c78:	f7fe fa9a 	bl	80031b0 <HAL_GetTick>
 8004c7c:	6138      	str	r0, [r7, #16]

          /* Wait till PLL is ready */
          while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004c7e:	e008      	b.n	8004c92 <HAL_RCC_OscConfig+0x746>
          {
            if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004c80:	f7fe fa96 	bl	80031b0 <HAL_GetTick>
 8004c84:	4602      	mov	r2, r0
 8004c86:	693b      	ldr	r3, [r7, #16]
 8004c88:	1ad3      	subs	r3, r2, r3
 8004c8a:	2b02      	cmp	r3, #2
 8004c8c:	d901      	bls.n	8004c92 <HAL_RCC_OscConfig+0x746>
            {
              return HAL_TIMEOUT;
 8004c8e:	2303      	movs	r3, #3
 8004c90:	e030      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
          while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004c92:	4b0e      	ldr	r3, [pc, #56]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004c9a:	2b00      	cmp	r3, #0
 8004c9c:	d0f0      	beq.n	8004c80 <HAL_RCC_OscConfig+0x734>
 8004c9e:	e028      	b.n	8004cf2 <HAL_RCC_OscConfig+0x7a6>
      }
    }
    else
    {
      /* Check that PLL is not used as system clock or not */
      if(sysclk_source != RCC_CFGR_SWS_PLL)
 8004ca0:	69bb      	ldr	r3, [r7, #24]
 8004ca2:	2b0c      	cmp	r3, #12
 8004ca4:	d023      	beq.n	8004cee <HAL_RCC_OscConfig+0x7a2>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004ca6:	4b09      	ldr	r3, [pc, #36]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004ca8:	681b      	ldr	r3, [r3, #0]
 8004caa:	4a08      	ldr	r2, [pc, #32]	; (8004ccc <HAL_RCC_OscConfig+0x780>)
 8004cac:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004cb0:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004cb2:	f7fe fa7d 	bl	80031b0 <HAL_GetTick>
 8004cb6:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8004cb8:	e00c      	b.n	8004cd4 <HAL_RCC_OscConfig+0x788>
        {
          if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004cba:	f7fe fa79 	bl	80031b0 <HAL_GetTick>
 8004cbe:	4602      	mov	r2, r0
 8004cc0:	693b      	ldr	r3, [r7, #16]
 8004cc2:	1ad3      	subs	r3, r2, r3
 8004cc4:	2b02      	cmp	r3, #2
 8004cc6:	d905      	bls.n	8004cd4 <HAL_RCC_OscConfig+0x788>
          {
            return HAL_TIMEOUT;
 8004cc8:	2303      	movs	r3, #3
 8004cca:	e013      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
 8004ccc:	40021000 	.word	0x40021000
 8004cd0:	f99d808c 	.word	0xf99d808c
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8004cd4:	4b09      	ldr	r3, [pc, #36]	; (8004cfc <HAL_RCC_OscConfig+0x7b0>)
 8004cd6:	681b      	ldr	r3, [r3, #0]
 8004cd8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004cdc:	2b00      	cmp	r3, #0
 8004cde:	d1ec      	bne.n	8004cba <HAL_RCC_OscConfig+0x76e>
          }
        }
        /* Unselect main PLL clock source and disable main PLL outputs to save power */
#if defined(RCC_PLLSAI2_SUPPORT)
        RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI3CLK);
 8004ce0:	4b06      	ldr	r3, [pc, #24]	; (8004cfc <HAL_RCC_OscConfig+0x7b0>)
 8004ce2:	68da      	ldr	r2, [r3, #12]
 8004ce4:	4905      	ldr	r1, [pc, #20]	; (8004cfc <HAL_RCC_OscConfig+0x7b0>)
 8004ce6:	4b06      	ldr	r3, [pc, #24]	; (8004d00 <HAL_RCC_OscConfig+0x7b4>)
 8004ce8:	4013      	ands	r3, r2
 8004cea:	60cb      	str	r3, [r1, #12]
 8004cec:	e001      	b.n	8004cf2 <HAL_RCC_OscConfig+0x7a6>
#endif /* RCC_PLLSAI2_SUPPORT */
      }
      else
      {
        /* PLL is already used as System core clock */
        return HAL_ERROR;
 8004cee:	2301      	movs	r3, #1
 8004cf0:	e000      	b.n	8004cf4 <HAL_RCC_OscConfig+0x7a8>
      }
    }
  }
  return HAL_OK;
 8004cf2:	2300      	movs	r3, #0
}
 8004cf4:	4618      	mov	r0, r3
 8004cf6:	3720      	adds	r7, #32
 8004cf8:	46bd      	mov	sp, r7
 8004cfa:	bd80      	pop	{r7, pc}
 8004cfc:	40021000 	.word	0x40021000
 8004d00:	feeefffc 	.word	0xfeeefffc

08004d04 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004d04:	b580      	push	{r7, lr}
 8004d06:	b084      	sub	sp, #16
 8004d08:	af00      	add	r7, sp, #0
 8004d0a:	6078      	str	r0, [r7, #4]
 8004d0c:	6039      	str	r1, [r7, #0]
  uint32_t hpre = RCC_SYSCLK_DIV1;
#endif
  HAL_StatusTypeDef status;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8004d0e:	687b      	ldr	r3, [r7, #4]
 8004d10:	2b00      	cmp	r3, #0
 8004d12:	d101      	bne.n	8004d18 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8004d14:	2301      	movs	r3, #1
 8004d16:	e0e7      	b.n	8004ee8 <HAL_RCC_ClockConfig+0x1e4>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004d18:	4b75      	ldr	r3, [pc, #468]	; (8004ef0 <HAL_RCC_ClockConfig+0x1ec>)
 8004d1a:	681b      	ldr	r3, [r3, #0]
 8004d1c:	f003 0307 	and.w	r3, r3, #7
 8004d20:	683a      	ldr	r2, [r7, #0]
 8004d22:	429a      	cmp	r2, r3
 8004d24:	d910      	bls.n	8004d48 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004d26:	4b72      	ldr	r3, [pc, #456]	; (8004ef0 <HAL_RCC_ClockConfig+0x1ec>)
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	f023 0207 	bic.w	r2, r3, #7
 8004d2e:	4970      	ldr	r1, [pc, #448]	; (8004ef0 <HAL_RCC_ClockConfig+0x1ec>)
 8004d30:	683b      	ldr	r3, [r7, #0]
 8004d32:	4313      	orrs	r3, r2
 8004d34:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004d36:	4b6e      	ldr	r3, [pc, #440]	; (8004ef0 <HAL_RCC_ClockConfig+0x1ec>)
 8004d38:	681b      	ldr	r3, [r3, #0]
 8004d3a:	f003 0307 	and.w	r3, r3, #7
 8004d3e:	683a      	ldr	r2, [r7, #0]
 8004d40:	429a      	cmp	r2, r3
 8004d42:	d001      	beq.n	8004d48 <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
 8004d44:	2301      	movs	r3, #1
 8004d46:	e0cf      	b.n	8004ee8 <HAL_RCC_ClockConfig+0x1e4>
    }
  }

  /*----------------- HCLK Configuration prior to SYSCLK----------------------*/
  /* Apply higher HCLK prescaler request here to ensure CPU clock is not of of spec when SYSCLK is increased */
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	681b      	ldr	r3, [r3, #0]
 8004d4c:	f003 0302 	and.w	r3, r3, #2
 8004d50:	2b00      	cmp	r3, #0
 8004d52:	d010      	beq.n	8004d76 <HAL_RCC_ClockConfig+0x72>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));

    if(RCC_ClkInitStruct->AHBCLKDivider > READ_BIT(RCC->CFGR, RCC_CFGR_HPRE))
 8004d54:	687b      	ldr	r3, [r7, #4]
 8004d56:	689a      	ldr	r2, [r3, #8]
 8004d58:	4b66      	ldr	r3, [pc, #408]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004d5a:	689b      	ldr	r3, [r3, #8]
 8004d5c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004d60:	429a      	cmp	r2, r3
 8004d62:	d908      	bls.n	8004d76 <HAL_RCC_ClockConfig+0x72>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004d64:	4b63      	ldr	r3, [pc, #396]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004d66:	689b      	ldr	r3, [r3, #8]
 8004d68:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	689b      	ldr	r3, [r3, #8]
 8004d70:	4960      	ldr	r1, [pc, #384]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004d72:	4313      	orrs	r3, r2
 8004d74:	608b      	str	r3, [r1, #8]
    }
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004d76:	687b      	ldr	r3, [r7, #4]
 8004d78:	681b      	ldr	r3, [r3, #0]
 8004d7a:	f003 0301 	and.w	r3, r3, #1
 8004d7e:	2b00      	cmp	r3, #0
 8004d80:	d04c      	beq.n	8004e1c <HAL_RCC_ClockConfig+0x118>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* PLL is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	685b      	ldr	r3, [r3, #4]
 8004d86:	2b03      	cmp	r3, #3
 8004d88:	d107      	bne.n	8004d9a <HAL_RCC_ClockConfig+0x96>
    {
      /* Check the PLL ready flag */
      if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004d8a:	4b5a      	ldr	r3, [pc, #360]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004d8c:	681b      	ldr	r3, [r3, #0]
 8004d8e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004d92:	2b00      	cmp	r3, #0
 8004d94:	d121      	bne.n	8004dda <HAL_RCC_ClockConfig+0xd6>
      {
        return HAL_ERROR;
 8004d96:	2301      	movs	r3, #1
 8004d98:	e0a6      	b.n	8004ee8 <HAL_RCC_ClockConfig+0x1e4>
#endif
    }
    else
    {
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004d9a:	687b      	ldr	r3, [r7, #4]
 8004d9c:	685b      	ldr	r3, [r3, #4]
 8004d9e:	2b02      	cmp	r3, #2
 8004da0:	d107      	bne.n	8004db2 <HAL_RCC_ClockConfig+0xae>
      {
        /* Check the HSE ready flag */
        if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8004da2:	4b54      	ldr	r3, [pc, #336]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004da4:	681b      	ldr	r3, [r3, #0]
 8004da6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004daa:	2b00      	cmp	r3, #0
 8004dac:	d115      	bne.n	8004dda <HAL_RCC_ClockConfig+0xd6>
        {
          return HAL_ERROR;
 8004dae:	2301      	movs	r3, #1
 8004db0:	e09a      	b.n	8004ee8 <HAL_RCC_ClockConfig+0x1e4>
        }
      }
      /* MSI is selected as System Clock Source */
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	685b      	ldr	r3, [r3, #4]
 8004db6:	2b00      	cmp	r3, #0
 8004db8:	d107      	bne.n	8004dca <HAL_RCC_ClockConfig+0xc6>
      {
        /* Check the MSI ready flag */
        if(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 8004dba:	4b4e      	ldr	r3, [pc, #312]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004dbc:	681b      	ldr	r3, [r3, #0]
 8004dbe:	f003 0302 	and.w	r3, r3, #2
 8004dc2:	2b00      	cmp	r3, #0
 8004dc4:	d109      	bne.n	8004dda <HAL_RCC_ClockConfig+0xd6>
        {
          return HAL_ERROR;
 8004dc6:	2301      	movs	r3, #1
 8004dc8:	e08e      	b.n	8004ee8 <HAL_RCC_ClockConfig+0x1e4>
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */
        if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8004dca:	4b4a      	ldr	r3, [pc, #296]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004dcc:	681b      	ldr	r3, [r3, #0]
 8004dce:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004dd2:	2b00      	cmp	r3, #0
 8004dd4:	d101      	bne.n	8004dda <HAL_RCC_ClockConfig+0xd6>
        {
          return HAL_ERROR;
 8004dd6:	2301      	movs	r3, #1
 8004dd8:	e086      	b.n	8004ee8 <HAL_RCC_ClockConfig+0x1e4>
      }
#endif

    }

    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8004dda:	4b46      	ldr	r3, [pc, #280]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004ddc:	689b      	ldr	r3, [r3, #8]
 8004dde:	f023 0203 	bic.w	r2, r3, #3
 8004de2:	687b      	ldr	r3, [r7, #4]
 8004de4:	685b      	ldr	r3, [r3, #4]
 8004de6:	4943      	ldr	r1, [pc, #268]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004de8:	4313      	orrs	r3, r2
 8004dea:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8004dec:	f7fe f9e0 	bl	80031b0 <HAL_GetTick>
 8004df0:	60f8      	str	r0, [r7, #12]

    while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004df2:	e00a      	b.n	8004e0a <HAL_RCC_ClockConfig+0x106>
    {
      if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004df4:	f7fe f9dc 	bl	80031b0 <HAL_GetTick>
 8004df8:	4602      	mov	r2, r0
 8004dfa:	68fb      	ldr	r3, [r7, #12]
 8004dfc:	1ad3      	subs	r3, r2, r3
 8004dfe:	f241 3288 	movw	r2, #5000	; 0x1388
 8004e02:	4293      	cmp	r3, r2
 8004e04:	d901      	bls.n	8004e0a <HAL_RCC_ClockConfig+0x106>
      {
        return HAL_TIMEOUT;
 8004e06:	2303      	movs	r3, #3
 8004e08:	e06e      	b.n	8004ee8 <HAL_RCC_ClockConfig+0x1e4>
    while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004e0a:	4b3a      	ldr	r3, [pc, #232]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004e0c:	689b      	ldr	r3, [r3, #8]
 8004e0e:	f003 020c 	and.w	r2, r3, #12
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	685b      	ldr	r3, [r3, #4]
 8004e16:	009b      	lsls	r3, r3, #2
 8004e18:	429a      	cmp	r2, r3
 8004e1a:	d1eb      	bne.n	8004df4 <HAL_RCC_ClockConfig+0xf0>
  }
#endif

  /*----------------- HCLK Configuration after SYSCLK-------------------------*/
  /* Apply lower HCLK prescaler request here to ensure CPU clock is not of of spec when SYSCLK is set */
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004e1c:	687b      	ldr	r3, [r7, #4]
 8004e1e:	681b      	ldr	r3, [r3, #0]
 8004e20:	f003 0302 	and.w	r3, r3, #2
 8004e24:	2b00      	cmp	r3, #0
 8004e26:	d010      	beq.n	8004e4a <HAL_RCC_ClockConfig+0x146>
  {
    if(RCC_ClkInitStruct->AHBCLKDivider < READ_BIT(RCC->CFGR, RCC_CFGR_HPRE))
 8004e28:	687b      	ldr	r3, [r7, #4]
 8004e2a:	689a      	ldr	r2, [r3, #8]
 8004e2c:	4b31      	ldr	r3, [pc, #196]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004e2e:	689b      	ldr	r3, [r3, #8]
 8004e30:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004e34:	429a      	cmp	r2, r3
 8004e36:	d208      	bcs.n	8004e4a <HAL_RCC_ClockConfig+0x146>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004e38:	4b2e      	ldr	r3, [pc, #184]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004e3a:	689b      	ldr	r3, [r3, #8]
 8004e3c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	689b      	ldr	r3, [r3, #8]
 8004e44:	492b      	ldr	r1, [pc, #172]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004e46:	4313      	orrs	r3, r2
 8004e48:	608b      	str	r3, [r1, #8]
    }
  }

  /* Allow decreasing of the number of wait states (because of lower CPU frequency expected) */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8004e4a:	4b29      	ldr	r3, [pc, #164]	; (8004ef0 <HAL_RCC_ClockConfig+0x1ec>)
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	f003 0307 	and.w	r3, r3, #7
 8004e52:	683a      	ldr	r2, [r7, #0]
 8004e54:	429a      	cmp	r2, r3
 8004e56:	d210      	bcs.n	8004e7a <HAL_RCC_ClockConfig+0x176>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004e58:	4b25      	ldr	r3, [pc, #148]	; (8004ef0 <HAL_RCC_ClockConfig+0x1ec>)
 8004e5a:	681b      	ldr	r3, [r3, #0]
 8004e5c:	f023 0207 	bic.w	r2, r3, #7
 8004e60:	4923      	ldr	r1, [pc, #140]	; (8004ef0 <HAL_RCC_ClockConfig+0x1ec>)
 8004e62:	683b      	ldr	r3, [r7, #0]
 8004e64:	4313      	orrs	r3, r2
 8004e66:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004e68:	4b21      	ldr	r3, [pc, #132]	; (8004ef0 <HAL_RCC_ClockConfig+0x1ec>)
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	f003 0307 	and.w	r3, r3, #7
 8004e70:	683a      	ldr	r2, [r7, #0]
 8004e72:	429a      	cmp	r2, r3
 8004e74:	d001      	beq.n	8004e7a <HAL_RCC_ClockConfig+0x176>
    {
      return HAL_ERROR;
 8004e76:	2301      	movs	r3, #1
 8004e78:	e036      	b.n	8004ee8 <HAL_RCC_ClockConfig+0x1e4>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004e7a:	687b      	ldr	r3, [r7, #4]
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	f003 0304 	and.w	r3, r3, #4
 8004e82:	2b00      	cmp	r3, #0
 8004e84:	d008      	beq.n	8004e98 <HAL_RCC_ClockConfig+0x194>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8004e86:	4b1b      	ldr	r3, [pc, #108]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004e88:	689b      	ldr	r3, [r3, #8]
 8004e8a:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8004e8e:	687b      	ldr	r3, [r7, #4]
 8004e90:	68db      	ldr	r3, [r3, #12]
 8004e92:	4918      	ldr	r1, [pc, #96]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004e94:	4313      	orrs	r3, r2
 8004e96:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	f003 0308 	and.w	r3, r3, #8
 8004ea0:	2b00      	cmp	r3, #0
 8004ea2:	d009      	beq.n	8004eb8 <HAL_RCC_ClockConfig+0x1b4>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8004ea4:	4b13      	ldr	r3, [pc, #76]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004ea6:	689b      	ldr	r3, [r3, #8]
 8004ea8:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	691b      	ldr	r3, [r3, #16]
 8004eb0:	00db      	lsls	r3, r3, #3
 8004eb2:	4910      	ldr	r1, [pc, #64]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004eb4:	4313      	orrs	r3, r2
 8004eb6:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 8004eb8:	f000 f824 	bl	8004f04 <HAL_RCC_GetSysClockFreq>
 8004ebc:	4602      	mov	r2, r0
 8004ebe:	4b0d      	ldr	r3, [pc, #52]	; (8004ef4 <HAL_RCC_ClockConfig+0x1f0>)
 8004ec0:	689b      	ldr	r3, [r3, #8]
 8004ec2:	091b      	lsrs	r3, r3, #4
 8004ec4:	f003 030f 	and.w	r3, r3, #15
 8004ec8:	490b      	ldr	r1, [pc, #44]	; (8004ef8 <HAL_RCC_ClockConfig+0x1f4>)
 8004eca:	5ccb      	ldrb	r3, [r1, r3]
 8004ecc:	f003 031f 	and.w	r3, r3, #31
 8004ed0:	fa22 f303 	lsr.w	r3, r2, r3
 8004ed4:	4a09      	ldr	r2, [pc, #36]	; (8004efc <HAL_RCC_ClockConfig+0x1f8>)
 8004ed6:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(uwTickPrio);
 8004ed8:	4b09      	ldr	r3, [pc, #36]	; (8004f00 <HAL_RCC_ClockConfig+0x1fc>)
 8004eda:	681b      	ldr	r3, [r3, #0]
 8004edc:	4618      	mov	r0, r3
 8004ede:	f7fd ffb7 	bl	8002e50 <HAL_InitTick>
 8004ee2:	4603      	mov	r3, r0
 8004ee4:	72fb      	strb	r3, [r7, #11]

  return status;
 8004ee6:	7afb      	ldrb	r3, [r7, #11]
}
 8004ee8:	4618      	mov	r0, r3
 8004eea:	3710      	adds	r7, #16
 8004eec:	46bd      	mov	sp, r7
 8004eee:	bd80      	pop	{r7, pc}
 8004ef0:	40022000 	.word	0x40022000
 8004ef4:	40021000 	.word	0x40021000
 8004ef8:	0802e8e8 	.word	0x0802e8e8
 8004efc:	20000008 	.word	0x20000008
 8004f00:	2000000c 	.word	0x2000000c

08004f04 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8004f04:	b480      	push	{r7}
 8004f06:	b089      	sub	sp, #36	; 0x24
 8004f08:	af00      	add	r7, sp, #0
  uint32_t msirange = 0U, sysclockfreq = 0U;
 8004f0a:	2300      	movs	r3, #0
 8004f0c:	61fb      	str	r3, [r7, #28]
 8004f0e:	2300      	movs	r3, #0
 8004f10:	61bb      	str	r3, [r7, #24]
  uint32_t pllvco, pllsource, pllr, pllm;    /* no init needed */
  uint32_t sysclk_source, pll_oscsource;

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8004f12:	4b3e      	ldr	r3, [pc, #248]	; (800500c <HAL_RCC_GetSysClockFreq+0x108>)
 8004f14:	689b      	ldr	r3, [r3, #8]
 8004f16:	f003 030c 	and.w	r3, r3, #12
 8004f1a:	613b      	str	r3, [r7, #16]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 8004f1c:	4b3b      	ldr	r3, [pc, #236]	; (800500c <HAL_RCC_GetSysClockFreq+0x108>)
 8004f1e:	68db      	ldr	r3, [r3, #12]
 8004f20:	f003 0303 	and.w	r3, r3, #3
 8004f24:	60fb      	str	r3, [r7, #12]

  if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 8004f26:	693b      	ldr	r3, [r7, #16]
 8004f28:	2b00      	cmp	r3, #0
 8004f2a:	d005      	beq.n	8004f38 <HAL_RCC_GetSysClockFreq+0x34>
 8004f2c:	693b      	ldr	r3, [r7, #16]
 8004f2e:	2b0c      	cmp	r3, #12
 8004f30:	d121      	bne.n	8004f76 <HAL_RCC_GetSysClockFreq+0x72>
     ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 8004f32:	68fb      	ldr	r3, [r7, #12]
 8004f34:	2b01      	cmp	r3, #1
 8004f36:	d11e      	bne.n	8004f76 <HAL_RCC_GetSysClockFreq+0x72>
  {
    /* MSI or PLL with MSI source used as system clock source */

    /* Get SYSCLK source */
    if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 8004f38:	4b34      	ldr	r3, [pc, #208]	; (800500c <HAL_RCC_GetSysClockFreq+0x108>)
 8004f3a:	681b      	ldr	r3, [r3, #0]
 8004f3c:	f003 0308 	and.w	r3, r3, #8
 8004f40:	2b00      	cmp	r3, #0
 8004f42:	d107      	bne.n	8004f54 <HAL_RCC_GetSysClockFreq+0x50>
    { /* MSISRANGE from RCC_CSR applies */
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 8004f44:	4b31      	ldr	r3, [pc, #196]	; (800500c <HAL_RCC_GetSysClockFreq+0x108>)
 8004f46:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004f4a:	0a1b      	lsrs	r3, r3, #8
 8004f4c:	f003 030f 	and.w	r3, r3, #15
 8004f50:	61fb      	str	r3, [r7, #28]
 8004f52:	e005      	b.n	8004f60 <HAL_RCC_GetSysClockFreq+0x5c>
    }
    else
    { /* MSIRANGE from RCC_CR applies */
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 8004f54:	4b2d      	ldr	r3, [pc, #180]	; (800500c <HAL_RCC_GetSysClockFreq+0x108>)
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	091b      	lsrs	r3, r3, #4
 8004f5a:	f003 030f 	and.w	r3, r3, #15
 8004f5e:	61fb      	str	r3, [r7, #28]
    }
    /*MSI frequency range in HZ*/
    msirange = MSIRangeTable[msirange];
 8004f60:	4a2b      	ldr	r2, [pc, #172]	; (8005010 <HAL_RCC_GetSysClockFreq+0x10c>)
 8004f62:	69fb      	ldr	r3, [r7, #28]
 8004f64:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004f68:	61fb      	str	r3, [r7, #28]

    if(sysclk_source == RCC_CFGR_SWS_MSI)
 8004f6a:	693b      	ldr	r3, [r7, #16]
 8004f6c:	2b00      	cmp	r3, #0
 8004f6e:	d10d      	bne.n	8004f8c <HAL_RCC_GetSysClockFreq+0x88>
    {
      /* MSI used as system clock source */
      sysclockfreq = msirange;
 8004f70:	69fb      	ldr	r3, [r7, #28]
 8004f72:	61bb      	str	r3, [r7, #24]
    if(sysclk_source == RCC_CFGR_SWS_MSI)
 8004f74:	e00a      	b.n	8004f8c <HAL_RCC_GetSysClockFreq+0x88>
    }
  }
  else if(sysclk_source == RCC_CFGR_SWS_HSI)
 8004f76:	693b      	ldr	r3, [r7, #16]
 8004f78:	2b04      	cmp	r3, #4
 8004f7a:	d102      	bne.n	8004f82 <HAL_RCC_GetSysClockFreq+0x7e>
  {
    /* HSI used as system clock source */
    sysclockfreq = HSI_VALUE;
 8004f7c:	4b25      	ldr	r3, [pc, #148]	; (8005014 <HAL_RCC_GetSysClockFreq+0x110>)
 8004f7e:	61bb      	str	r3, [r7, #24]
 8004f80:	e004      	b.n	8004f8c <HAL_RCC_GetSysClockFreq+0x88>
  }
  else if(sysclk_source == RCC_CFGR_SWS_HSE)
 8004f82:	693b      	ldr	r3, [r7, #16]
 8004f84:	2b08      	cmp	r3, #8
 8004f86:	d101      	bne.n	8004f8c <HAL_RCC_GetSysClockFreq+0x88>
  {
    /* HSE used as system clock source */
    sysclockfreq = HSE_VALUE;
 8004f88:	4b23      	ldr	r3, [pc, #140]	; (8005018 <HAL_RCC_GetSysClockFreq+0x114>)
 8004f8a:	61bb      	str	r3, [r7, #24]
  else
  {
    /* unexpected case: sysclockfreq at 0 */
  }

  if(sysclk_source == RCC_CFGR_SWS_PLL)
 8004f8c:	693b      	ldr	r3, [r7, #16]
 8004f8e:	2b0c      	cmp	r3, #12
 8004f90:	d134      	bne.n	8004ffc <HAL_RCC_GetSysClockFreq+0xf8>
    /* PLL used as system clock  source */

    /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE) * PLLN / PLLM
    SYSCLK = PLL_VCO / PLLR
    */
    pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 8004f92:	4b1e      	ldr	r3, [pc, #120]	; (800500c <HAL_RCC_GetSysClockFreq+0x108>)
 8004f94:	68db      	ldr	r3, [r3, #12]
 8004f96:	f003 0303 	and.w	r3, r3, #3
 8004f9a:	60bb      	str	r3, [r7, #8]

    switch (pllsource)
 8004f9c:	68bb      	ldr	r3, [r7, #8]
 8004f9e:	2b02      	cmp	r3, #2
 8004fa0:	d003      	beq.n	8004faa <HAL_RCC_GetSysClockFreq+0xa6>
 8004fa2:	68bb      	ldr	r3, [r7, #8]
 8004fa4:	2b03      	cmp	r3, #3
 8004fa6:	d003      	beq.n	8004fb0 <HAL_RCC_GetSysClockFreq+0xac>
 8004fa8:	e005      	b.n	8004fb6 <HAL_RCC_GetSysClockFreq+0xb2>
    {
    case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
      pllvco = HSI_VALUE;
 8004faa:	4b1a      	ldr	r3, [pc, #104]	; (8005014 <HAL_RCC_GetSysClockFreq+0x110>)
 8004fac:	617b      	str	r3, [r7, #20]
      break;
 8004fae:	e005      	b.n	8004fbc <HAL_RCC_GetSysClockFreq+0xb8>

    case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
      pllvco = HSE_VALUE;
 8004fb0:	4b19      	ldr	r3, [pc, #100]	; (8005018 <HAL_RCC_GetSysClockFreq+0x114>)
 8004fb2:	617b      	str	r3, [r7, #20]
      break;
 8004fb4:	e002      	b.n	8004fbc <HAL_RCC_GetSysClockFreq+0xb8>

    case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
    default:
      pllvco = msirange;
 8004fb6:	69fb      	ldr	r3, [r7, #28]
 8004fb8:	617b      	str	r3, [r7, #20]
      break;
 8004fba:	bf00      	nop
    }
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 8004fbc:	4b13      	ldr	r3, [pc, #76]	; (800500c <HAL_RCC_GetSysClockFreq+0x108>)
 8004fbe:	68db      	ldr	r3, [r3, #12]
 8004fc0:	091b      	lsrs	r3, r3, #4
 8004fc2:	f003 0307 	and.w	r3, r3, #7
 8004fc6:	3301      	adds	r3, #1
 8004fc8:	607b      	str	r3, [r7, #4]
    pllvco = (pllvco * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)) / pllm;
 8004fca:	4b10      	ldr	r3, [pc, #64]	; (800500c <HAL_RCC_GetSysClockFreq+0x108>)
 8004fcc:	68db      	ldr	r3, [r3, #12]
 8004fce:	0a1b      	lsrs	r3, r3, #8
 8004fd0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8004fd4:	697a      	ldr	r2, [r7, #20]
 8004fd6:	fb03 f202 	mul.w	r2, r3, r2
 8004fda:	687b      	ldr	r3, [r7, #4]
 8004fdc:	fbb2 f3f3 	udiv	r3, r2, r3
 8004fe0:	617b      	str	r3, [r7, #20]
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 8004fe2:	4b0a      	ldr	r3, [pc, #40]	; (800500c <HAL_RCC_GetSysClockFreq+0x108>)
 8004fe4:	68db      	ldr	r3, [r3, #12]
 8004fe6:	0e5b      	lsrs	r3, r3, #25
 8004fe8:	f003 0303 	and.w	r3, r3, #3
 8004fec:	3301      	adds	r3, #1
 8004fee:	005b      	lsls	r3, r3, #1
 8004ff0:	603b      	str	r3, [r7, #0]
    sysclockfreq = pllvco / pllr;
 8004ff2:	697a      	ldr	r2, [r7, #20]
 8004ff4:	683b      	ldr	r3, [r7, #0]
 8004ff6:	fbb2 f3f3 	udiv	r3, r2, r3
 8004ffa:	61bb      	str	r3, [r7, #24]
  }

  return sysclockfreq;
 8004ffc:	69bb      	ldr	r3, [r7, #24]
}
 8004ffe:	4618      	mov	r0, r3
 8005000:	3724      	adds	r7, #36	; 0x24
 8005002:	46bd      	mov	sp, r7
 8005004:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005008:	4770      	bx	lr
 800500a:	bf00      	nop
 800500c:	40021000 	.word	0x40021000
 8005010:	0802e900 	.word	0x0802e900
 8005014:	00f42400 	.word	0x00f42400
 8005018:	007a1200 	.word	0x007a1200

0800501c <HAL_RCC_GetHCLKFreq>:
  *
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency in Hz
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 800501c:	b480      	push	{r7}
 800501e:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8005020:	4b03      	ldr	r3, [pc, #12]	; (8005030 <HAL_RCC_GetHCLKFreq+0x14>)
 8005022:	681b      	ldr	r3, [r3, #0]
}
 8005024:	4618      	mov	r0, r3
 8005026:	46bd      	mov	sp, r7
 8005028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800502c:	4770      	bx	lr
 800502e:	bf00      	nop
 8005030:	20000008 	.word	0x20000008

08005034 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8005034:	b580      	push	{r7, lr}
 8005036:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos] & 0x1FU));
 8005038:	f7ff fff0 	bl	800501c <HAL_RCC_GetHCLKFreq>
 800503c:	4602      	mov	r2, r0
 800503e:	4b06      	ldr	r3, [pc, #24]	; (8005058 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005040:	689b      	ldr	r3, [r3, #8]
 8005042:	0a1b      	lsrs	r3, r3, #8
 8005044:	f003 0307 	and.w	r3, r3, #7
 8005048:	4904      	ldr	r1, [pc, #16]	; (800505c <HAL_RCC_GetPCLK1Freq+0x28>)
 800504a:	5ccb      	ldrb	r3, [r1, r3]
 800504c:	f003 031f 	and.w	r3, r3, #31
 8005050:	fa22 f303 	lsr.w	r3, r2, r3
}
 8005054:	4618      	mov	r0, r3
 8005056:	bd80      	pop	{r7, pc}
 8005058:	40021000 	.word	0x40021000
 800505c:	0802e8f8 	.word	0x0802e8f8

08005060 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8005060:	b580      	push	{r7, lr}
 8005062:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos] & 0x1FU));
 8005064:	f7ff ffda 	bl	800501c <HAL_RCC_GetHCLKFreq>
 8005068:	4602      	mov	r2, r0
 800506a:	4b06      	ldr	r3, [pc, #24]	; (8005084 <HAL_RCC_GetPCLK2Freq+0x24>)
 800506c:	689b      	ldr	r3, [r3, #8]
 800506e:	0adb      	lsrs	r3, r3, #11
 8005070:	f003 0307 	and.w	r3, r3, #7
 8005074:	4904      	ldr	r1, [pc, #16]	; (8005088 <HAL_RCC_GetPCLK2Freq+0x28>)
 8005076:	5ccb      	ldrb	r3, [r1, r3]
 8005078:	f003 031f 	and.w	r3, r3, #31
 800507c:	fa22 f303 	lsr.w	r3, r2, r3
}
 8005080:	4618      	mov	r0, r3
 8005082:	bd80      	pop	{r7, pc}
 8005084:	40021000 	.word	0x40021000
 8005088:	0802e8f8 	.word	0x0802e8f8

0800508c <HAL_RCC_GetClockConfig>:
  *         will be configured.
  * @param  pFLatency  Pointer on the Flash Latency.
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
 800508c:	b480      	push	{r7}
 800508e:	b083      	sub	sp, #12
 8005090:	af00      	add	r7, sp, #0
 8005092:	6078      	str	r0, [r7, #4]
 8005094:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(RCC_ClkInitStruct != (void  *)NULL);
  assert_param(pFLatency != (void *)NULL);

  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	220f      	movs	r2, #15
 800509a:	601a      	str	r2, [r3, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = READ_BIT(RCC->CFGR, RCC_CFGR_SW);
 800509c:	4b12      	ldr	r3, [pc, #72]	; (80050e8 <HAL_RCC_GetClockConfig+0x5c>)
 800509e:	689b      	ldr	r3, [r3, #8]
 80050a0:	f003 0203 	and.w	r2, r3, #3
 80050a4:	687b      	ldr	r3, [r7, #4]
 80050a6:	605a      	str	r2, [r3, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_HPRE);
 80050a8:	4b0f      	ldr	r3, [pc, #60]	; (80050e8 <HAL_RCC_GetClockConfig+0x5c>)
 80050aa:	689b      	ldr	r3, [r3, #8]
 80050ac:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	609a      	str	r2, [r3, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1);
 80050b4:	4b0c      	ldr	r3, [pc, #48]	; (80050e8 <HAL_RCC_GetClockConfig+0x5c>)
 80050b6:	689b      	ldr	r3, [r3, #8]
 80050b8:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	60da      	str	r2, [r3, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> 3U);
 80050c0:	4b09      	ldr	r3, [pc, #36]	; (80050e8 <HAL_RCC_GetClockConfig+0x5c>)
 80050c2:	689b      	ldr	r3, [r3, #8]
 80050c4:	08db      	lsrs	r3, r3, #3
 80050c6:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	611a      	str	r2, [r3, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = __HAL_FLASH_GET_LATENCY();
 80050ce:	4b07      	ldr	r3, [pc, #28]	; (80050ec <HAL_RCC_GetClockConfig+0x60>)
 80050d0:	681b      	ldr	r3, [r3, #0]
 80050d2:	f003 0207 	and.w	r2, r3, #7
 80050d6:	683b      	ldr	r3, [r7, #0]
 80050d8:	601a      	str	r2, [r3, #0]
}
 80050da:	bf00      	nop
 80050dc:	370c      	adds	r7, #12
 80050de:	46bd      	mov	sp, r7
 80050e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050e4:	4770      	bx	lr
 80050e6:	bf00      	nop
 80050e8:	40021000 	.word	0x40021000
 80050ec:	40022000 	.word	0x40022000

080050f0 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 80050f0:	b580      	push	{r7, lr}
 80050f2:	b086      	sub	sp, #24
 80050f4:	af00      	add	r7, sp, #0
 80050f6:	6078      	str	r0, [r7, #4]
  uint32_t vos;
  uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
 80050f8:	2300      	movs	r3, #0
 80050fa:	613b      	str	r3, [r7, #16]

  if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 80050fc:	4b2a      	ldr	r3, [pc, #168]	; (80051a8 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80050fe:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005100:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005104:	2b00      	cmp	r3, #0
 8005106:	d003      	beq.n	8005110 <RCC_SetFlashLatencyFromMSIRange+0x20>
  {
    vos = HAL_PWREx_GetVoltageRange();
 8005108:	f7ff f9bc 	bl	8004484 <HAL_PWREx_GetVoltageRange>
 800510c:	6178      	str	r0, [r7, #20]
 800510e:	e014      	b.n	800513a <RCC_SetFlashLatencyFromMSIRange+0x4a>
  }
  else
  {
    __HAL_RCC_PWR_CLK_ENABLE();
 8005110:	4b25      	ldr	r3, [pc, #148]	; (80051a8 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8005112:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005114:	4a24      	ldr	r2, [pc, #144]	; (80051a8 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8005116:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800511a:	6593      	str	r3, [r2, #88]	; 0x58
 800511c:	4b22      	ldr	r3, [pc, #136]	; (80051a8 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800511e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005120:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005124:	60fb      	str	r3, [r7, #12]
 8005126:	68fb      	ldr	r3, [r7, #12]
    vos = HAL_PWREx_GetVoltageRange();
 8005128:	f7ff f9ac 	bl	8004484 <HAL_PWREx_GetVoltageRange>
 800512c:	6178      	str	r0, [r7, #20]
    __HAL_RCC_PWR_CLK_DISABLE();
 800512e:	4b1e      	ldr	r3, [pc, #120]	; (80051a8 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8005130:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005132:	4a1d      	ldr	r2, [pc, #116]	; (80051a8 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8005134:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005138:	6593      	str	r3, [r2, #88]	; 0x58
  }

  if(vos == PWR_REGULATOR_VOLTAGE_SCALE1)
 800513a:	697b      	ldr	r3, [r7, #20]
 800513c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005140:	d10b      	bne.n	800515a <RCC_SetFlashLatencyFromMSIRange+0x6a>
  {
    if(msirange > RCC_MSIRANGE_8)
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	2b80      	cmp	r3, #128	; 0x80
 8005146:	d919      	bls.n	800517c <RCC_SetFlashLatencyFromMSIRange+0x8c>
    {
      /* MSI > 16Mhz */
      if(msirange > RCC_MSIRANGE_10)
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	2ba0      	cmp	r3, #160	; 0xa0
 800514c:	d902      	bls.n	8005154 <RCC_SetFlashLatencyFromMSIRange+0x64>
      {
        /* MSI 48Mhz */
        latency = FLASH_LATENCY_2; /* 2WS */
 800514e:	2302      	movs	r3, #2
 8005150:	613b      	str	r3, [r7, #16]
 8005152:	e013      	b.n	800517c <RCC_SetFlashLatencyFromMSIRange+0x8c>
      }
      else
      {
        /* MSI 24Mhz or 32Mhz */
        latency = FLASH_LATENCY_1; /* 1WS */
 8005154:	2301      	movs	r3, #1
 8005156:	613b      	str	r3, [r7, #16]
 8005158:	e010      	b.n	800517c <RCC_SetFlashLatencyFromMSIRange+0x8c>
        latency = FLASH_LATENCY_1; /* 1WS */
      }
      /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
    }
#else
    if(msirange > RCC_MSIRANGE_8)
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	2b80      	cmp	r3, #128	; 0x80
 800515e:	d902      	bls.n	8005166 <RCC_SetFlashLatencyFromMSIRange+0x76>
    {
      /* MSI > 16Mhz */
      latency = FLASH_LATENCY_3; /* 3WS */
 8005160:	2303      	movs	r3, #3
 8005162:	613b      	str	r3, [r7, #16]
 8005164:	e00a      	b.n	800517c <RCC_SetFlashLatencyFromMSIRange+0x8c>
    }
    else
    {
      if(msirange == RCC_MSIRANGE_8)
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	2b80      	cmp	r3, #128	; 0x80
 800516a:	d102      	bne.n	8005172 <RCC_SetFlashLatencyFromMSIRange+0x82>
      {
        /* MSI 16Mhz */
        latency = FLASH_LATENCY_2; /* 2WS */
 800516c:	2302      	movs	r3, #2
 800516e:	613b      	str	r3, [r7, #16]
 8005170:	e004      	b.n	800517c <RCC_SetFlashLatencyFromMSIRange+0x8c>
      }
      else if(msirange == RCC_MSIRANGE_7)
 8005172:	687b      	ldr	r3, [r7, #4]
 8005174:	2b70      	cmp	r3, #112	; 0x70
 8005176:	d101      	bne.n	800517c <RCC_SetFlashLatencyFromMSIRange+0x8c>
      {
        /* MSI 8Mhz */
        latency = FLASH_LATENCY_1; /* 1WS */
 8005178:	2301      	movs	r3, #1
 800517a:	613b      	str	r3, [r7, #16]
      /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
    }
#endif
  }

  __HAL_FLASH_SET_LATENCY(latency);
 800517c:	4b0b      	ldr	r3, [pc, #44]	; (80051ac <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800517e:	681b      	ldr	r3, [r3, #0]
 8005180:	f023 0207 	bic.w	r2, r3, #7
 8005184:	4909      	ldr	r1, [pc, #36]	; (80051ac <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8005186:	693b      	ldr	r3, [r7, #16]
 8005188:	4313      	orrs	r3, r2
 800518a:	600b      	str	r3, [r1, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
     memory by reading the FLASH_ACR register */
  if(__HAL_FLASH_GET_LATENCY() != latency)
 800518c:	4b07      	ldr	r3, [pc, #28]	; (80051ac <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800518e:	681b      	ldr	r3, [r3, #0]
 8005190:	f003 0307 	and.w	r3, r3, #7
 8005194:	693a      	ldr	r2, [r7, #16]
 8005196:	429a      	cmp	r2, r3
 8005198:	d001      	beq.n	800519e <RCC_SetFlashLatencyFromMSIRange+0xae>
  {
    return HAL_ERROR;
 800519a:	2301      	movs	r3, #1
 800519c:	e000      	b.n	80051a0 <RCC_SetFlashLatencyFromMSIRange+0xb0>
  }

  return HAL_OK;
 800519e:	2300      	movs	r3, #0
}
 80051a0:	4618      	mov	r0, r3
 80051a2:	3718      	adds	r7, #24
 80051a4:	46bd      	mov	sp, r7
 80051a6:	bd80      	pop	{r7, pc}
 80051a8:	40021000 	.word	0x40021000
 80051ac:	40022000 	.word	0x40022000

080051b0 <HAL_RCCEx_PeriphCLKConfig>:
  *         the RTC clock source: in this case the access to Backup domain is enabled.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80051b0:	b580      	push	{r7, lr}
 80051b2:	b086      	sub	sp, #24
 80051b4:	af00      	add	r7, sp, #0
 80051b6:	6078      	str	r0, [r7, #4]
  uint32_t tmpregister, tickstart;     /* no init needed */
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 80051b8:	2300      	movs	r3, #0
 80051ba:	74fb      	strb	r3, [r7, #19]
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 80051bc:	2300      	movs	r3, #0
 80051be:	74bb      	strb	r3, [r7, #18]
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

#if defined(SAI1)

  /*-------------------------- SAI1 clock source configuration ---------------------*/
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 80051c0:	687b      	ldr	r3, [r7, #4]
 80051c2:	681b      	ldr	r3, [r3, #0]
 80051c4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80051c8:	2b00      	cmp	r3, #0
 80051ca:	d041      	beq.n	8005250 <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLK(PeriphClkInit->Sai1ClockSelection));

    switch(PeriphClkInit->Sai1ClockSelection)
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80051d0:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 80051d4:	d02a      	beq.n	800522c <HAL_RCCEx_PeriphCLKConfig+0x7c>
 80051d6:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 80051da:	d824      	bhi.n	8005226 <HAL_RCCEx_PeriphCLKConfig+0x76>
 80051dc:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80051e0:	d008      	beq.n	80051f4 <HAL_RCCEx_PeriphCLKConfig+0x44>
 80051e2:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80051e6:	d81e      	bhi.n	8005226 <HAL_RCCEx_PeriphCLKConfig+0x76>
 80051e8:	2b00      	cmp	r3, #0
 80051ea:	d00a      	beq.n	8005202 <HAL_RCCEx_PeriphCLKConfig+0x52>
 80051ec:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80051f0:	d010      	beq.n	8005214 <HAL_RCCEx_PeriphCLKConfig+0x64>
 80051f2:	e018      	b.n	8005226 <HAL_RCCEx_PeriphCLKConfig+0x76>
    {
    case RCC_SAI1CLKSOURCE_PLL:      /* PLL is used as clock source for SAI1*/
      /* Enable SAI Clock output generated from System PLL . */
#if defined(RCC_PLLSAI2_SUPPORT)
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 80051f4:	4b86      	ldr	r3, [pc, #536]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80051f6:	68db      	ldr	r3, [r3, #12]
 80051f8:	4a85      	ldr	r2, [pc, #532]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80051fa:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80051fe:	60d3      	str	r3, [r2, #12]
#else
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI2CLK);
#endif /* RCC_PLLSAI2_SUPPORT */
      /* SAI1 clock source config set later after clock selection check */
      break;
 8005200:	e015      	b.n	800522e <HAL_RCCEx_PeriphCLKConfig+0x7e>

    case RCC_SAI1CLKSOURCE_PLLSAI1:  /* PLLSAI1 is used as clock source for SAI1*/
      /* PLLSAI1 input clock, parameters M, N & P configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	3304      	adds	r3, #4
 8005206:	2100      	movs	r1, #0
 8005208:	4618      	mov	r0, r3
 800520a:	f000 fabb 	bl	8005784 <RCCEx_PLLSAI1_Config>
 800520e:	4603      	mov	r3, r0
 8005210:	74fb      	strb	r3, [r7, #19]
      /* SAI1 clock source config set later after clock selection check */
      break;
 8005212:	e00c      	b.n	800522e <HAL_RCCEx_PeriphCLKConfig+0x7e>

#if defined(RCC_PLLSAI2_SUPPORT)

    case RCC_SAI1CLKSOURCE_PLLSAI2:  /* PLLSAI2 is used as clock source for SAI1*/
      /* PLLSAI2 input clock, parameters M, N & P configuration clock output (PLLSAI2ClockOut) */
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	3320      	adds	r3, #32
 8005218:	2100      	movs	r1, #0
 800521a:	4618      	mov	r0, r3
 800521c:	f000 fba6 	bl	800596c <RCCEx_PLLSAI2_Config>
 8005220:	4603      	mov	r3, r0
 8005222:	74fb      	strb	r3, [r7, #19]
      /* SAI1 clock source config set later after clock selection check */
      break;
 8005224:	e003      	b.n	800522e <HAL_RCCEx_PeriphCLKConfig+0x7e>
#endif /* STM32L4P5xx || STM32L4Q5xx || STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
      /* SAI1 clock source config set later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
 8005226:	2301      	movs	r3, #1
 8005228:	74fb      	strb	r3, [r7, #19]
      break;
 800522a:	e000      	b.n	800522e <HAL_RCCEx_PeriphCLKConfig+0x7e>
      break;
 800522c:	bf00      	nop
    }

    if(ret == HAL_OK)
 800522e:	7cfb      	ldrb	r3, [r7, #19]
 8005230:	2b00      	cmp	r3, #0
 8005232:	d10b      	bne.n	800524c <HAL_RCCEx_PeriphCLKConfig+0x9c>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8005234:	4b76      	ldr	r3, [pc, #472]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005236:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800523a:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 800523e:	687b      	ldr	r3, [r7, #4]
 8005240:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005242:	4973      	ldr	r1, [pc, #460]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005244:	4313      	orrs	r3, r2
 8005246:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800524a:	e001      	b.n	8005250 <HAL_RCCEx_PeriphCLKConfig+0xa0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800524c:	7cfb      	ldrb	r3, [r7, #19]
 800524e:	74bb      	strb	r3, [r7, #18]
#endif /* SAI1 */

#if defined(SAI2)

  /*-------------------------- SAI2 clock source configuration ---------------------*/
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	681b      	ldr	r3, [r3, #0]
 8005254:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8005258:	2b00      	cmp	r3, #0
 800525a:	d041      	beq.n	80052e0 <HAL_RCCEx_PeriphCLKConfig+0x130>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLK(PeriphClkInit->Sai2ClockSelection));

    switch(PeriphClkInit->Sai2ClockSelection)
 800525c:	687b      	ldr	r3, [r7, #4]
 800525e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8005260:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8005264:	d02a      	beq.n	80052bc <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8005266:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 800526a:	d824      	bhi.n	80052b6 <HAL_RCCEx_PeriphCLKConfig+0x106>
 800526c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8005270:	d008      	beq.n	8005284 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8005272:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8005276:	d81e      	bhi.n	80052b6 <HAL_RCCEx_PeriphCLKConfig+0x106>
 8005278:	2b00      	cmp	r3, #0
 800527a:	d00a      	beq.n	8005292 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 800527c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8005280:	d010      	beq.n	80052a4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8005282:	e018      	b.n	80052b6 <HAL_RCCEx_PeriphCLKConfig+0x106>
    {
    case RCC_SAI2CLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
      /* Enable SAI Clock output generated from System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 8005284:	4b62      	ldr	r3, [pc, #392]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005286:	68db      	ldr	r3, [r3, #12]
 8005288:	4a61      	ldr	r2, [pc, #388]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800528a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800528e:	60d3      	str	r3, [r2, #12]
      /* SAI2 clock source config set later after clock selection check */
      break;
 8005290:	e015      	b.n	80052be <HAL_RCCEx_PeriphCLKConfig+0x10e>

    case RCC_SAI2CLKSOURCE_PLLSAI1: /* PLLSAI1 is used as clock source for SAI2*/
      /* PLLSAI1 input clock, parameters M, N & P configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	3304      	adds	r3, #4
 8005296:	2100      	movs	r1, #0
 8005298:	4618      	mov	r0, r3
 800529a:	f000 fa73 	bl	8005784 <RCCEx_PLLSAI1_Config>
 800529e:	4603      	mov	r3, r0
 80052a0:	74fb      	strb	r3, [r7, #19]
      /* SAI2 clock source config set later after clock selection check */
      break;
 80052a2:	e00c      	b.n	80052be <HAL_RCCEx_PeriphCLKConfig+0x10e>

    case RCC_SAI2CLKSOURCE_PLLSAI2:  /* PLLSAI2 is used as clock source for SAI2*/
      /* PLLSAI2 input clock, parameters M, N & P configuration and clock output (PLLSAI2ClockOut) */
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	3320      	adds	r3, #32
 80052a8:	2100      	movs	r1, #0
 80052aa:	4618      	mov	r0, r3
 80052ac:	f000 fb5e 	bl	800596c <RCCEx_PLLSAI2_Config>
 80052b0:	4603      	mov	r3, r0
 80052b2:	74fb      	strb	r3, [r7, #19]
      /* SAI2 clock source config set later after clock selection check */
      break;
 80052b4:	e003      	b.n	80052be <HAL_RCCEx_PeriphCLKConfig+0x10e>
#endif /* STM32L4P5xx || STM32L4Q5xx || STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
      /* SAI2 clock source config set later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
 80052b6:	2301      	movs	r3, #1
 80052b8:	74fb      	strb	r3, [r7, #19]
      break;
 80052ba:	e000      	b.n	80052be <HAL_RCCEx_PeriphCLKConfig+0x10e>
      break;
 80052bc:	bf00      	nop
    }

    if(ret == HAL_OK)
 80052be:	7cfb      	ldrb	r3, [r7, #19]
 80052c0:	2b00      	cmp	r3, #0
 80052c2:	d10b      	bne.n	80052dc <HAL_RCCEx_PeriphCLKConfig+0x12c>
    {
      /* Set the source of SAI2 clock*/
      __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 80052c4:	4b52      	ldr	r3, [pc, #328]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80052c6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80052ca:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 80052ce:	687b      	ldr	r3, [r7, #4]
 80052d0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80052d2:	494f      	ldr	r1, [pc, #316]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80052d4:	4313      	orrs	r3, r2
 80052d6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80052da:	e001      	b.n	80052e0 <HAL_RCCEx_PeriphCLKConfig+0x130>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80052dc:	7cfb      	ldrb	r3, [r7, #19]
 80052de:	74bb      	strb	r3, [r7, #18]
    }
  }
#endif /* SAI2 */

  /*-------------------------- RTC clock source configuration ----------------------*/
  if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80052e8:	2b00      	cmp	r3, #0
 80052ea:	f000 80a0 	beq.w	800542e <HAL_RCCEx_PeriphCLKConfig+0x27e>
  {
    FlagStatus       pwrclkchanged = RESET;
 80052ee:	2300      	movs	r3, #0
 80052f0:	747b      	strb	r3, [r7, #17]

    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 80052f2:	4b47      	ldr	r3, [pc, #284]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80052f4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80052f6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80052fa:	2b00      	cmp	r3, #0
 80052fc:	d101      	bne.n	8005302 <HAL_RCCEx_PeriphCLKConfig+0x152>
 80052fe:	2301      	movs	r3, #1
 8005300:	e000      	b.n	8005304 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8005302:	2300      	movs	r3, #0
 8005304:	2b00      	cmp	r3, #0
 8005306:	d00d      	beq.n	8005324 <HAL_RCCEx_PeriphCLKConfig+0x174>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8005308:	4b41      	ldr	r3, [pc, #260]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800530a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800530c:	4a40      	ldr	r2, [pc, #256]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800530e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005312:	6593      	str	r3, [r2, #88]	; 0x58
 8005314:	4b3e      	ldr	r3, [pc, #248]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005316:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005318:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800531c:	60bb      	str	r3, [r7, #8]
 800531e:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8005320:	2301      	movs	r3, #1
 8005322:	747b      	strb	r3, [r7, #17]
    }

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8005324:	4b3b      	ldr	r3, [pc, #236]	; (8005414 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 8005326:	681b      	ldr	r3, [r3, #0]
 8005328:	4a3a      	ldr	r2, [pc, #232]	; (8005414 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 800532a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800532e:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8005330:	f7fd ff3e 	bl	80031b0 <HAL_GetTick>
 8005334:	60f8      	str	r0, [r7, #12]

    while(READ_BIT(PWR->CR1, PWR_CR1_DBP) == 0U)
 8005336:	e009      	b.n	800534c <HAL_RCCEx_PeriphCLKConfig+0x19c>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005338:	f7fd ff3a 	bl	80031b0 <HAL_GetTick>
 800533c:	4602      	mov	r2, r0
 800533e:	68fb      	ldr	r3, [r7, #12]
 8005340:	1ad3      	subs	r3, r2, r3
 8005342:	2b02      	cmp	r3, #2
 8005344:	d902      	bls.n	800534c <HAL_RCCEx_PeriphCLKConfig+0x19c>
      {
        ret = HAL_TIMEOUT;
 8005346:	2303      	movs	r3, #3
 8005348:	74fb      	strb	r3, [r7, #19]
        break;
 800534a:	e005      	b.n	8005358 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
    while(READ_BIT(PWR->CR1, PWR_CR1_DBP) == 0U)
 800534c:	4b31      	ldr	r3, [pc, #196]	; (8005414 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005354:	2b00      	cmp	r3, #0
 8005356:	d0ef      	beq.n	8005338 <HAL_RCCEx_PeriphCLKConfig+0x188>
      }
    }

    if(ret == HAL_OK)
 8005358:	7cfb      	ldrb	r3, [r7, #19]
 800535a:	2b00      	cmp	r3, #0
 800535c:	d15c      	bne.n	8005418 <HAL_RCCEx_PeriphCLKConfig+0x268>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 800535e:	4b2c      	ldr	r3, [pc, #176]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005360:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005364:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005368:	617b      	str	r3, [r7, #20]

      if((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 800536a:	697b      	ldr	r3, [r7, #20]
 800536c:	2b00      	cmp	r3, #0
 800536e:	d01f      	beq.n	80053b0 <HAL_RCCEx_PeriphCLKConfig+0x200>
 8005370:	687b      	ldr	r3, [r7, #4]
 8005372:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005376:	697a      	ldr	r2, [r7, #20]
 8005378:	429a      	cmp	r2, r3
 800537a:	d019      	beq.n	80053b0 <HAL_RCCEx_PeriphCLKConfig+0x200>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 800537c:	4b24      	ldr	r3, [pc, #144]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800537e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005382:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005386:	617b      	str	r3, [r7, #20]
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 8005388:	4b21      	ldr	r3, [pc, #132]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800538a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800538e:	4a20      	ldr	r2, [pc, #128]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005390:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005394:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
        __HAL_RCC_BACKUPRESET_RELEASE();
 8005398:	4b1d      	ldr	r3, [pc, #116]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800539a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800539e:	4a1c      	ldr	r2, [pc, #112]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80053a0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80053a4:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpregister;
 80053a8:	4a19      	ldr	r2, [pc, #100]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80053aa:	697b      	ldr	r3, [r7, #20]
 80053ac:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
      }

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 80053b0:	697b      	ldr	r3, [r7, #20]
 80053b2:	f003 0301 	and.w	r3, r3, #1
 80053b6:	2b00      	cmp	r3, #0
 80053b8:	d016      	beq.n	80053e8 <HAL_RCCEx_PeriphCLKConfig+0x238>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80053ba:	f7fd fef9 	bl	80031b0 <HAL_GetTick>
 80053be:	60f8      	str	r0, [r7, #12]

        /* Wait till LSE is ready */
        while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 80053c0:	e00b      	b.n	80053da <HAL_RCCEx_PeriphCLKConfig+0x22a>
        {
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80053c2:	f7fd fef5 	bl	80031b0 <HAL_GetTick>
 80053c6:	4602      	mov	r2, r0
 80053c8:	68fb      	ldr	r3, [r7, #12]
 80053ca:	1ad3      	subs	r3, r2, r3
 80053cc:	f241 3288 	movw	r2, #5000	; 0x1388
 80053d0:	4293      	cmp	r3, r2
 80053d2:	d902      	bls.n	80053da <HAL_RCCEx_PeriphCLKConfig+0x22a>
          {
            ret = HAL_TIMEOUT;
 80053d4:	2303      	movs	r3, #3
 80053d6:	74fb      	strb	r3, [r7, #19]
            break;
 80053d8:	e006      	b.n	80053e8 <HAL_RCCEx_PeriphCLKConfig+0x238>
        while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 80053da:	4b0d      	ldr	r3, [pc, #52]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80053dc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80053e0:	f003 0302 	and.w	r3, r3, #2
 80053e4:	2b00      	cmp	r3, #0
 80053e6:	d0ec      	beq.n	80053c2 <HAL_RCCEx_PeriphCLKConfig+0x212>
          }
        }
      }

      if(ret == HAL_OK)
 80053e8:	7cfb      	ldrb	r3, [r7, #19]
 80053ea:	2b00      	cmp	r3, #0
 80053ec:	d10c      	bne.n	8005408 <HAL_RCCEx_PeriphCLKConfig+0x258>
      {
        /* Apply new RTC clock source selection */
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80053ee:	4b08      	ldr	r3, [pc, #32]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80053f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80053f4:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80053f8:	687b      	ldr	r3, [r7, #4]
 80053fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80053fe:	4904      	ldr	r1, [pc, #16]	; (8005410 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005400:	4313      	orrs	r3, r2
 8005402:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005406:	e009      	b.n	800541c <HAL_RCCEx_PeriphCLKConfig+0x26c>
      }
      else
      {
        /* set overall return value */
        status = ret;
 8005408:	7cfb      	ldrb	r3, [r7, #19]
 800540a:	74bb      	strb	r3, [r7, #18]
 800540c:	e006      	b.n	800541c <HAL_RCCEx_PeriphCLKConfig+0x26c>
 800540e:	bf00      	nop
 8005410:	40021000 	.word	0x40021000
 8005414:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005418:	7cfb      	ldrb	r3, [r7, #19]
 800541a:	74bb      	strb	r3, [r7, #18]
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800541c:	7c7b      	ldrb	r3, [r7, #17]
 800541e:	2b01      	cmp	r3, #1
 8005420:	d105      	bne.n	800542e <HAL_RCCEx_PeriphCLKConfig+0x27e>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005422:	4b9e      	ldr	r3, [pc, #632]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005424:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005426:	4a9d      	ldr	r2, [pc, #628]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005428:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800542c:	6593      	str	r3, [r2, #88]	; 0x58
    }
  }

  /*-------------------------- USART1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 800542e:	687b      	ldr	r3, [r7, #4]
 8005430:	681b      	ldr	r3, [r3, #0]
 8005432:	f003 0301 	and.w	r3, r3, #1
 8005436:	2b00      	cmp	r3, #0
 8005438:	d00a      	beq.n	8005450 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 800543a:	4b98      	ldr	r3, [pc, #608]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800543c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005440:	f023 0203 	bic.w	r2, r3, #3
 8005444:	687b      	ldr	r3, [r7, #4]
 8005446:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005448:	4994      	ldr	r1, [pc, #592]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800544a:	4313      	orrs	r3, r2
 800544c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

  /*-------------------------- USART2 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	f003 0302 	and.w	r3, r3, #2
 8005458:	2b00      	cmp	r3, #0
 800545a:	d00a      	beq.n	8005472 <HAL_RCCEx_PeriphCLKConfig+0x2c2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 800545c:	4b8f      	ldr	r3, [pc, #572]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800545e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005462:	f023 020c 	bic.w	r2, r3, #12
 8005466:	687b      	ldr	r3, [r7, #4]
 8005468:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800546a:	498c      	ldr	r1, [pc, #560]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800546c:	4313      	orrs	r3, r2
 800546e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#if defined(USART3)

  /*-------------------------- USART3 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8005472:	687b      	ldr	r3, [r7, #4]
 8005474:	681b      	ldr	r3, [r3, #0]
 8005476:	f003 0304 	and.w	r3, r3, #4
 800547a:	2b00      	cmp	r3, #0
 800547c:	d00a      	beq.n	8005494 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 800547e:	4b87      	ldr	r3, [pc, #540]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005480:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005484:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800548c:	4983      	ldr	r1, [pc, #524]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800548e:	4313      	orrs	r3, r2
 8005490:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
#endif /* USART3 */

#if defined(UART4)

  /*-------------------------- UART4 clock source configuration --------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8005494:	687b      	ldr	r3, [r7, #4]
 8005496:	681b      	ldr	r3, [r3, #0]
 8005498:	f003 0308 	and.w	r3, r3, #8
 800549c:	2b00      	cmp	r3, #0
 800549e:	d00a      	beq.n	80054b6 <HAL_RCCEx_PeriphCLKConfig+0x306>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 80054a0:	4b7e      	ldr	r3, [pc, #504]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80054a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80054a6:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 80054aa:	687b      	ldr	r3, [r7, #4]
 80054ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80054ae:	497b      	ldr	r1, [pc, #492]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80054b0:	4313      	orrs	r3, r2
 80054b2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
#endif /* UART4 */

#if defined(UART5)

  /*-------------------------- UART5 clock source configuration --------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	681b      	ldr	r3, [r3, #0]
 80054ba:	f003 0310 	and.w	r3, r3, #16
 80054be:	2b00      	cmp	r3, #0
 80054c0:	d00a      	beq.n	80054d8 <HAL_RCCEx_PeriphCLKConfig+0x328>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 80054c2:	4b76      	ldr	r3, [pc, #472]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80054c4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80054c8:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80054cc:	687b      	ldr	r3, [r7, #4]
 80054ce:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80054d0:	4972      	ldr	r1, [pc, #456]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80054d2:	4313      	orrs	r3, r2
 80054d4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#endif /* UART5 */

  /*-------------------------- LPUART1 clock source configuration ------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	681b      	ldr	r3, [r3, #0]
 80054dc:	f003 0320 	and.w	r3, r3, #32
 80054e0:	2b00      	cmp	r3, #0
 80054e2:	d00a      	beq.n	80054fa <HAL_RCCEx_PeriphCLKConfig+0x34a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPUART1CLKSOURCE(PeriphClkInit->Lpuart1ClockSelection));

    /* Configure the LPUART1 clock source */
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 80054e4:	4b6d      	ldr	r3, [pc, #436]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80054e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80054ea:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 80054ee:	687b      	ldr	r3, [r7, #4]
 80054f0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80054f2:	496a      	ldr	r1, [pc, #424]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80054f4:	4313      	orrs	r3, r2
 80054f6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

  /*-------------------------- LPTIM1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005502:	2b00      	cmp	r3, #0
 8005504:	d00a      	beq.n	800551c <HAL_RCCEx_PeriphCLKConfig+0x36c>
  {
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8005506:	4b65      	ldr	r3, [pc, #404]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005508:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800550c:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8005510:	687b      	ldr	r3, [r7, #4]
 8005512:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005514:	4961      	ldr	r1, [pc, #388]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005516:	4313      	orrs	r3, r2
 8005518:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

  /*-------------------------- LPTIM2 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 800551c:	687b      	ldr	r3, [r7, #4]
 800551e:	681b      	ldr	r3, [r3, #0]
 8005520:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005524:	2b00      	cmp	r3, #0
 8005526:	d00a      	beq.n	800553e <HAL_RCCEx_PeriphCLKConfig+0x38e>
  {
    assert_param(IS_RCC_LPTIM2CLK(PeriphClkInit->Lptim2ClockSelection));
    __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 8005528:	4b5c      	ldr	r3, [pc, #368]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800552a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800552e:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8005532:	687b      	ldr	r3, [r7, #4]
 8005534:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005536:	4959      	ldr	r1, [pc, #356]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005538:	4313      	orrs	r3, r2
 800553a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

  /*-------------------------- I2C1 clock source configuration ---------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	681b      	ldr	r3, [r3, #0]
 8005542:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005546:	2b00      	cmp	r3, #0
 8005548:	d00a      	beq.n	8005560 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 800554a:	4b54      	ldr	r3, [pc, #336]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800554c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005550:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005558:	4950      	ldr	r1, [pc, #320]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800555a:	4313      	orrs	r3, r2
 800555c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#if defined(I2C2)

  /*-------------------------- I2C2 clock source configuration ---------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8005560:	687b      	ldr	r3, [r7, #4]
 8005562:	681b      	ldr	r3, [r3, #0]
 8005564:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005568:	2b00      	cmp	r3, #0
 800556a:	d00a      	beq.n	8005582 <HAL_RCCEx_PeriphCLKConfig+0x3d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 800556c:	4b4b      	ldr	r3, [pc, #300]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800556e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005572:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8005576:	687b      	ldr	r3, [r7, #4]
 8005578:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800557a:	4948      	ldr	r1, [pc, #288]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800557c:	4313      	orrs	r3, r2
 800557e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#endif /* I2C2 */

  /*-------------------------- I2C3 clock source configuration ---------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8005582:	687b      	ldr	r3, [r7, #4]
 8005584:	681b      	ldr	r3, [r3, #0]
 8005586:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800558a:	2b00      	cmp	r3, #0
 800558c:	d00a      	beq.n	80055a4 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 800558e:	4b43      	ldr	r3, [pc, #268]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005590:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005594:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800559c:	493f      	ldr	r1, [pc, #252]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800559e:	4313      	orrs	r3, r2
 80055a0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
#endif /* I2C4 */

#if defined(USB_OTG_FS) || defined(USB)

  /*-------------------------- USB clock source configuration ----------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == (RCC_PERIPHCLK_USB))
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	681b      	ldr	r3, [r3, #0]
 80055a8:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80055ac:	2b00      	cmp	r3, #0
 80055ae:	d028      	beq.n	8005602 <HAL_RCCEx_PeriphCLKConfig+0x452>
  {
    assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 80055b0:	4b3a      	ldr	r3, [pc, #232]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80055b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80055b6:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 80055ba:	687b      	ldr	r3, [r7, #4]
 80055bc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80055be:	4937      	ldr	r1, [pc, #220]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80055c0:	4313      	orrs	r3, r2
 80055c2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

    if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 80055c6:	687b      	ldr	r3, [r7, #4]
 80055c8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80055ca:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80055ce:	d106      	bne.n	80055de <HAL_RCCEx_PeriphCLKConfig+0x42e>
    {
      /* Enable PLL48M1CLK output clock */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 80055d0:	4b32      	ldr	r3, [pc, #200]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80055d2:	68db      	ldr	r3, [r3, #12]
 80055d4:	4a31      	ldr	r2, [pc, #196]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80055d6:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80055da:	60d3      	str	r3, [r2, #12]
 80055dc:	e011      	b.n	8005602 <HAL_RCCEx_PeriphCLKConfig+0x452>
    }
    else
    {
#if defined(RCC_PLLSAI1_SUPPORT)
      if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLLSAI1)
 80055de:	687b      	ldr	r3, [r7, #4]
 80055e0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80055e2:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80055e6:	d10c      	bne.n	8005602 <HAL_RCCEx_PeriphCLKConfig+0x452>
      {
        /* PLLSAI1 input clock, parameters M, N & Q configuration and clock output (PLLSAI1ClockOut) */
        ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 80055e8:	687b      	ldr	r3, [r7, #4]
 80055ea:	3304      	adds	r3, #4
 80055ec:	2101      	movs	r1, #1
 80055ee:	4618      	mov	r0, r3
 80055f0:	f000 f8c8 	bl	8005784 <RCCEx_PLLSAI1_Config>
 80055f4:	4603      	mov	r3, r0
 80055f6:	74fb      	strb	r3, [r7, #19]

        if(ret != HAL_OK)
 80055f8:	7cfb      	ldrb	r3, [r7, #19]
 80055fa:	2b00      	cmp	r3, #0
 80055fc:	d001      	beq.n	8005602 <HAL_RCCEx_PeriphCLKConfig+0x452>
        {
          /* set overall return value */
          status = ret;
 80055fe:	7cfb      	ldrb	r3, [r7, #19]
 8005600:	74bb      	strb	r3, [r7, #18]
#endif /* USB_OTG_FS || USB */

#if defined(SDMMC1)

  /*-------------------------- SDMMC1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == (RCC_PERIPHCLK_SDMMC1))
 8005602:	687b      	ldr	r3, [r7, #4]
 8005604:	681b      	ldr	r3, [r3, #0]
 8005606:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800560a:	2b00      	cmp	r3, #0
 800560c:	d028      	beq.n	8005660 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
  {
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 800560e:	4b23      	ldr	r3, [pc, #140]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005610:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005614:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800561c:	491f      	ldr	r1, [pc, #124]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800561e:	4313      	orrs	r3, r2
 8005620:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

    if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLL)   /* PLL "Q" ? */
 8005624:	687b      	ldr	r3, [r7, #4]
 8005626:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005628:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800562c:	d106      	bne.n	800563c <HAL_RCCEx_PeriphCLKConfig+0x48c>
    {
      /* Enable PLL48M1CLK output clock */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 800562e:	4b1b      	ldr	r3, [pc, #108]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005630:	68db      	ldr	r3, [r3, #12]
 8005632:	4a1a      	ldr	r2, [pc, #104]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8005638:	60d3      	str	r3, [r2, #12]
 800563a:	e011      	b.n	8005660 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
    {
      /* Enable PLLSAI3CLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
    }
#endif
    else if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLLSAI1)
 800563c:	687b      	ldr	r3, [r7, #4]
 800563e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005640:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8005644:	d10c      	bne.n	8005660 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
    {
      /* PLLSAI1 input clock, parameters M, N & Q configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 8005646:	687b      	ldr	r3, [r7, #4]
 8005648:	3304      	adds	r3, #4
 800564a:	2101      	movs	r1, #1
 800564c:	4618      	mov	r0, r3
 800564e:	f000 f899 	bl	8005784 <RCCEx_PLLSAI1_Config>
 8005652:	4603      	mov	r3, r0
 8005654:	74fb      	strb	r3, [r7, #19]

      if(ret != HAL_OK)
 8005656:	7cfb      	ldrb	r3, [r7, #19]
 8005658:	2b00      	cmp	r3, #0
 800565a:	d001      	beq.n	8005660 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
      {
        /* set overall return value */
        status = ret;
 800565c:	7cfb      	ldrb	r3, [r7, #19]
 800565e:	74bb      	strb	r3, [r7, #18]
  }

#endif /* SDMMC1 */

  /*-------------------------- RNG clock source configuration ----------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == (RCC_PERIPHCLK_RNG))
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	681b      	ldr	r3, [r3, #0]
 8005664:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005668:	2b00      	cmp	r3, #0
 800566a:	d02b      	beq.n	80056c4 <HAL_RCCEx_PeriphCLKConfig+0x514>
  {
    assert_param(IS_RCC_RNGCLKSOURCE(PeriphClkInit->RngClockSelection));
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 800566c:	4b0b      	ldr	r3, [pc, #44]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800566e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005672:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8005676:	687b      	ldr	r3, [r7, #4]
 8005678:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800567a:	4908      	ldr	r1, [pc, #32]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800567c:	4313      	orrs	r3, r2
 800567e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

    if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 8005682:	687b      	ldr	r3, [r7, #4]
 8005684:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005686:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800568a:	d109      	bne.n	80056a0 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    {
      /* Enable PLL48M1CLK output clock */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 800568c:	4b03      	ldr	r3, [pc, #12]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800568e:	68db      	ldr	r3, [r3, #12]
 8005690:	4a02      	ldr	r2, [pc, #8]	; (800569c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005692:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8005696:	60d3      	str	r3, [r2, #12]
 8005698:	e014      	b.n	80056c4 <HAL_RCCEx_PeriphCLKConfig+0x514>
 800569a:	bf00      	nop
 800569c:	40021000 	.word	0x40021000
    }
#if defined(RCC_PLLSAI1_SUPPORT)
    else if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLLSAI1)
 80056a0:	687b      	ldr	r3, [r7, #4]
 80056a2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80056a4:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80056a8:	d10c      	bne.n	80056c4 <HAL_RCCEx_PeriphCLKConfig+0x514>
    {
      /* PLLSAI1 input clock, parameters M, N & Q configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 80056aa:	687b      	ldr	r3, [r7, #4]
 80056ac:	3304      	adds	r3, #4
 80056ae:	2101      	movs	r1, #1
 80056b0:	4618      	mov	r0, r3
 80056b2:	f000 f867 	bl	8005784 <RCCEx_PLLSAI1_Config>
 80056b6:	4603      	mov	r3, r0
 80056b8:	74fb      	strb	r3, [r7, #19]

      if(ret != HAL_OK)
 80056ba:	7cfb      	ldrb	r3, [r7, #19]
 80056bc:	2b00      	cmp	r3, #0
 80056be:	d001      	beq.n	80056c4 <HAL_RCCEx_PeriphCLKConfig+0x514>
      {
        /* set overall return value */
        status = ret;
 80056c0:	7cfb      	ldrb	r3, [r7, #19]
 80056c2:	74bb      	strb	r3, [r7, #18]
    }
  }

  /*-------------------------- ADC clock source configuration ----------------------*/
#if !defined(STM32L412xx) && !defined(STM32L422xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 80056c4:	687b      	ldr	r3, [r7, #4]
 80056c6:	681b      	ldr	r3, [r3, #0]
 80056c8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80056cc:	2b00      	cmp	r3, #0
 80056ce:	d02f      	beq.n	8005730 <HAL_RCCEx_PeriphCLKConfig+0x580>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADCCLKSOURCE(PeriphClkInit->AdcClockSelection));

    /* Configure the ADC interface clock source */
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 80056d0:	4b2b      	ldr	r3, [pc, #172]	; (8005780 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 80056d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80056d6:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 80056da:	687b      	ldr	r3, [r7, #4]
 80056dc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80056de:	4928      	ldr	r1, [pc, #160]	; (8005780 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 80056e0:	4313      	orrs	r3, r2
 80056e2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

#if defined(RCC_PLLSAI1_SUPPORT)
    if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI1)
 80056e6:	687b      	ldr	r3, [r7, #4]
 80056e8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80056ea:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80056ee:	d10d      	bne.n	800570c <HAL_RCCEx_PeriphCLKConfig+0x55c>
    {
      /* PLLSAI1 input clock, parameters M, N & R configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_R_UPDATE);
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	3304      	adds	r3, #4
 80056f4:	2102      	movs	r1, #2
 80056f6:	4618      	mov	r0, r3
 80056f8:	f000 f844 	bl	8005784 <RCCEx_PLLSAI1_Config>
 80056fc:	4603      	mov	r3, r0
 80056fe:	74fb      	strb	r3, [r7, #19]

      if(ret != HAL_OK)
 8005700:	7cfb      	ldrb	r3, [r7, #19]
 8005702:	2b00      	cmp	r3, #0
 8005704:	d014      	beq.n	8005730 <HAL_RCCEx_PeriphCLKConfig+0x580>
      {
        /* set overall return value */
        status = ret;
 8005706:	7cfb      	ldrb	r3, [r7, #19]
 8005708:	74bb      	strb	r3, [r7, #18]
 800570a:	e011      	b.n	8005730 <HAL_RCCEx_PeriphCLKConfig+0x580>
    }
#endif /* RCC_PLLSAI1_SUPPORT */

#if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) || defined(STM32L486xx) || defined(STM32L496xx) || defined(STM32L4A6xx)

    else if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI2)
 800570c:	687b      	ldr	r3, [r7, #4]
 800570e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005710:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005714:	d10c      	bne.n	8005730 <HAL_RCCEx_PeriphCLKConfig+0x580>
    {
      /* PLLSAI2 input clock, parameters M, N & R configuration and clock output (PLLSAI2ClockOut) */
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_R_UPDATE);
 8005716:	687b      	ldr	r3, [r7, #4]
 8005718:	3320      	adds	r3, #32
 800571a:	2102      	movs	r1, #2
 800571c:	4618      	mov	r0, r3
 800571e:	f000 f925 	bl	800596c <RCCEx_PLLSAI2_Config>
 8005722:	4603      	mov	r3, r0
 8005724:	74fb      	strb	r3, [r7, #19]

      if(ret != HAL_OK)
 8005726:	7cfb      	ldrb	r3, [r7, #19]
 8005728:	2b00      	cmp	r3, #0
 800572a:	d001      	beq.n	8005730 <HAL_RCCEx_PeriphCLKConfig+0x580>
      {
        /* set overall return value */
        status = ret;
 800572c:	7cfb      	ldrb	r3, [r7, #19]
 800572e:	74bb      	strb	r3, [r7, #18]
#endif /* !STM32L412xx && !STM32L422xx */

#if defined(SWPMI1)

  /*-------------------------- SWPMI1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	681b      	ldr	r3, [r3, #0]
 8005734:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005738:	2b00      	cmp	r3, #0
 800573a:	d00a      	beq.n	8005752 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SWPMI1CLKSOURCE(PeriphClkInit->Swpmi1ClockSelection));

    /* Configure the SWPMI1 clock source */
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 800573c:	4b10      	ldr	r3, [pc, #64]	; (8005780 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 800573e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005742:	f023 4280 	bic.w	r2, r3, #1073741824	; 0x40000000
 8005746:	687b      	ldr	r3, [r7, #4]
 8005748:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800574a:	490d      	ldr	r1, [pc, #52]	; (8005780 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 800574c:	4313      	orrs	r3, r2
 800574e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
#endif /* SWPMI1 */

#if defined(DFSDM1_Filter0)

  /*-------------------------- DFSDM1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8005752:	687b      	ldr	r3, [r7, #4]
 8005754:	681b      	ldr	r3, [r3, #0]
 8005756:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800575a:	2b00      	cmp	r3, #0
 800575c:	d00b      	beq.n	8005776 <HAL_RCCEx_PeriphCLKConfig+0x5c6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 800575e:	4b08      	ldr	r3, [pc, #32]	; (8005780 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8005760:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005764:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800576e:	4904      	ldr	r1, [pc, #16]	; (8005780 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8005770:	4313      	orrs	r3, r2
 8005772:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }
  }

#endif /* OCTOSPI1 || OCTOSPI2 */

  return status;
 8005776:	7cbb      	ldrb	r3, [r7, #18]
}
 8005778:	4618      	mov	r0, r3
 800577a:	3718      	adds	r7, #24
 800577c:	46bd      	mov	sp, r7
 800577e:	bd80      	pop	{r7, pc}
 8005780:	40021000 	.word	0x40021000

08005784 <RCCEx_PLLSAI1_Config>:
  * @note   PLLSAI1 is temporary disable to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLLSAI1_Config(RCC_PLLSAI1InitTypeDef *PllSai1, uint32_t Divider)
{
 8005784:	b580      	push	{r7, lr}
 8005786:	b084      	sub	sp, #16
 8005788:	af00      	add	r7, sp, #0
 800578a:	6078      	str	r0, [r7, #4]
 800578c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 800578e:	2300      	movs	r3, #0
 8005790:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLLSAI1M_VALUE(PllSai1->PLLSAI1M));
  assert_param(IS_RCC_PLLSAI1N_VALUE(PllSai1->PLLSAI1N));
  assert_param(IS_RCC_PLLSAI1CLOCKOUT_VALUE(PllSai1->PLLSAI1ClockOut));

  /* Check that PLLSAI1 clock source and divider M can be applied */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 8005792:	4b75      	ldr	r3, [pc, #468]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005794:	68db      	ldr	r3, [r3, #12]
 8005796:	f003 0303 	and.w	r3, r3, #3
 800579a:	2b00      	cmp	r3, #0
 800579c:	d018      	beq.n	80057d0 <RCCEx_PLLSAI1_Config+0x4c>
  {
    /* PLL clock source and divider M already set, check that no request for change  */
    if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai1->PLLSAI1Source)
 800579e:	4b72      	ldr	r3, [pc, #456]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 80057a0:	68db      	ldr	r3, [r3, #12]
 80057a2:	f003 0203 	and.w	r2, r3, #3
 80057a6:	687b      	ldr	r3, [r7, #4]
 80057a8:	681b      	ldr	r3, [r3, #0]
 80057aa:	429a      	cmp	r2, r3
 80057ac:	d10d      	bne.n	80057ca <RCCEx_PLLSAI1_Config+0x46>
       ||
       (PllSai1->PLLSAI1Source == RCC_PLLSOURCE_NONE)
 80057ae:	687b      	ldr	r3, [r7, #4]
 80057b0:	681b      	ldr	r3, [r3, #0]
       ||
 80057b2:	2b00      	cmp	r3, #0
 80057b4:	d009      	beq.n	80057ca <RCCEx_PLLSAI1_Config+0x46>
#if !defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
       ||
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai1->PLLSAI1M)
 80057b6:	4b6c      	ldr	r3, [pc, #432]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 80057b8:	68db      	ldr	r3, [r3, #12]
 80057ba:	091b      	lsrs	r3, r3, #4
 80057bc:	f003 0307 	and.w	r3, r3, #7
 80057c0:	1c5a      	adds	r2, r3, #1
 80057c2:	687b      	ldr	r3, [r7, #4]
 80057c4:	685b      	ldr	r3, [r3, #4]
       ||
 80057c6:	429a      	cmp	r2, r3
 80057c8:	d047      	beq.n	800585a <RCCEx_PLLSAI1_Config+0xd6>
#endif
      )
    {
      status = HAL_ERROR;
 80057ca:	2301      	movs	r3, #1
 80057cc:	73fb      	strb	r3, [r7, #15]
 80057ce:	e044      	b.n	800585a <RCCEx_PLLSAI1_Config+0xd6>
    }
  }
  else
  {
    /* Check PLLSAI1 clock source availability */
    switch(PllSai1->PLLSAI1Source)
 80057d0:	687b      	ldr	r3, [r7, #4]
 80057d2:	681b      	ldr	r3, [r3, #0]
 80057d4:	2b03      	cmp	r3, #3
 80057d6:	d018      	beq.n	800580a <RCCEx_PLLSAI1_Config+0x86>
 80057d8:	2b03      	cmp	r3, #3
 80057da:	d825      	bhi.n	8005828 <RCCEx_PLLSAI1_Config+0xa4>
 80057dc:	2b01      	cmp	r3, #1
 80057de:	d002      	beq.n	80057e6 <RCCEx_PLLSAI1_Config+0x62>
 80057e0:	2b02      	cmp	r3, #2
 80057e2:	d009      	beq.n	80057f8 <RCCEx_PLLSAI1_Config+0x74>
 80057e4:	e020      	b.n	8005828 <RCCEx_PLLSAI1_Config+0xa4>
    {
    case RCC_PLLSOURCE_MSI:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
 80057e6:	4b60      	ldr	r3, [pc, #384]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 80057e8:	681b      	ldr	r3, [r3, #0]
 80057ea:	f003 0302 	and.w	r3, r3, #2
 80057ee:	2b00      	cmp	r3, #0
 80057f0:	d11d      	bne.n	800582e <RCCEx_PLLSAI1_Config+0xaa>
      {
        status = HAL_ERROR;
 80057f2:	2301      	movs	r3, #1
 80057f4:	73fb      	strb	r3, [r7, #15]
      }
      break;
 80057f6:	e01a      	b.n	800582e <RCCEx_PLLSAI1_Config+0xaa>
    case RCC_PLLSOURCE_HSI:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
 80057f8:	4b5b      	ldr	r3, [pc, #364]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 80057fa:	681b      	ldr	r3, [r3, #0]
 80057fc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005800:	2b00      	cmp	r3, #0
 8005802:	d116      	bne.n	8005832 <RCCEx_PLLSAI1_Config+0xae>
      {
        status = HAL_ERROR;
 8005804:	2301      	movs	r3, #1
 8005806:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8005808:	e013      	b.n	8005832 <RCCEx_PLLSAI1_Config+0xae>
    case RCC_PLLSOURCE_HSE:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSERDY))
 800580a:	4b57      	ldr	r3, [pc, #348]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 800580c:	681b      	ldr	r3, [r3, #0]
 800580e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005812:	2b00      	cmp	r3, #0
 8005814:	d10f      	bne.n	8005836 <RCCEx_PLLSAI1_Config+0xb2>
      {
        if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 8005816:	4b54      	ldr	r3, [pc, #336]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005818:	681b      	ldr	r3, [r3, #0]
 800581a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800581e:	2b00      	cmp	r3, #0
 8005820:	d109      	bne.n	8005836 <RCCEx_PLLSAI1_Config+0xb2>
        {
          status = HAL_ERROR;
 8005822:	2301      	movs	r3, #1
 8005824:	73fb      	strb	r3, [r7, #15]
        }
      }
      break;
 8005826:	e006      	b.n	8005836 <RCCEx_PLLSAI1_Config+0xb2>
    default:
      status = HAL_ERROR;
 8005828:	2301      	movs	r3, #1
 800582a:	73fb      	strb	r3, [r7, #15]
      break;
 800582c:	e004      	b.n	8005838 <RCCEx_PLLSAI1_Config+0xb4>
      break;
 800582e:	bf00      	nop
 8005830:	e002      	b.n	8005838 <RCCEx_PLLSAI1_Config+0xb4>
      break;
 8005832:	bf00      	nop
 8005834:	e000      	b.n	8005838 <RCCEx_PLLSAI1_Config+0xb4>
      break;
 8005836:	bf00      	nop
    }

    if(status == HAL_OK)
 8005838:	7bfb      	ldrb	r3, [r7, #15]
 800583a:	2b00      	cmp	r3, #0
 800583c:	d10d      	bne.n	800585a <RCCEx_PLLSAI1_Config+0xd6>
#if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
      /* Set PLLSAI1 clock source */
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PllSai1->PLLSAI1Source);
#else
      /* Set PLLSAI1 clock source and divider M */
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, PllSai1->PLLSAI1Source | (PllSai1->PLLSAI1M - 1U) << RCC_PLLCFGR_PLLM_Pos);
 800583e:	4b4a      	ldr	r3, [pc, #296]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005840:	68db      	ldr	r3, [r3, #12]
 8005842:	f023 0273 	bic.w	r2, r3, #115	; 0x73
 8005846:	687b      	ldr	r3, [r7, #4]
 8005848:	6819      	ldr	r1, [r3, #0]
 800584a:	687b      	ldr	r3, [r7, #4]
 800584c:	685b      	ldr	r3, [r3, #4]
 800584e:	3b01      	subs	r3, #1
 8005850:	011b      	lsls	r3, r3, #4
 8005852:	430b      	orrs	r3, r1
 8005854:	4944      	ldr	r1, [pc, #272]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005856:	4313      	orrs	r3, r2
 8005858:	60cb      	str	r3, [r1, #12]
#endif
    }
  }

  if(status == HAL_OK)
 800585a:	7bfb      	ldrb	r3, [r7, #15]
 800585c:	2b00      	cmp	r3, #0
 800585e:	d17d      	bne.n	800595c <RCCEx_PLLSAI1_Config+0x1d8>
  {
    /* Disable the PLLSAI1 */
    __HAL_RCC_PLLSAI1_DISABLE();
 8005860:	4b41      	ldr	r3, [pc, #260]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005862:	681b      	ldr	r3, [r3, #0]
 8005864:	4a40      	ldr	r2, [pc, #256]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005866:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800586a:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800586c:	f7fd fca0 	bl	80031b0 <HAL_GetTick>
 8005870:	60b8      	str	r0, [r7, #8]

    /* Wait till PLLSAI1 is ready to be updated */
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
 8005872:	e009      	b.n	8005888 <RCCEx_PLLSAI1_Config+0x104>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 8005874:	f7fd fc9c 	bl	80031b0 <HAL_GetTick>
 8005878:	4602      	mov	r2, r0
 800587a:	68bb      	ldr	r3, [r7, #8]
 800587c:	1ad3      	subs	r3, r2, r3
 800587e:	2b02      	cmp	r3, #2
 8005880:	d902      	bls.n	8005888 <RCCEx_PLLSAI1_Config+0x104>
      {
        status = HAL_TIMEOUT;
 8005882:	2303      	movs	r3, #3
 8005884:	73fb      	strb	r3, [r7, #15]
        break;
 8005886:	e005      	b.n	8005894 <RCCEx_PLLSAI1_Config+0x110>
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
 8005888:	4b37      	ldr	r3, [pc, #220]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005890:	2b00      	cmp	r3, #0
 8005892:	d1ef      	bne.n	8005874 <RCCEx_PLLSAI1_Config+0xf0>
      }
    }

    if(status == HAL_OK)
 8005894:	7bfb      	ldrb	r3, [r7, #15]
 8005896:	2b00      	cmp	r3, #0
 8005898:	d160      	bne.n	800595c <RCCEx_PLLSAI1_Config+0x1d8>
    {
      if(Divider == DIVIDER_P_UPDATE)
 800589a:	683b      	ldr	r3, [r7, #0]
 800589c:	2b00      	cmp	r3, #0
 800589e:	d111      	bne.n	80058c4 <RCCEx_PLLSAI1_Config+0x140>
        MODIFY_REG(RCC->PLLSAI1CFGR,
                   RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1PDIV,
                   (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
                   (PllSai1->PLLSAI1P << RCC_PLLSAI1CFGR_PLLSAI1PDIV_Pos));
#else
        MODIFY_REG(RCC->PLLSAI1CFGR,
 80058a0:	4b31      	ldr	r3, [pc, #196]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 80058a2:	691b      	ldr	r3, [r3, #16]
 80058a4:	f423 331f 	bic.w	r3, r3, #162816	; 0x27c00
 80058a8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80058ac:	687a      	ldr	r2, [r7, #4]
 80058ae:	6892      	ldr	r2, [r2, #8]
 80058b0:	0211      	lsls	r1, r2, #8
 80058b2:	687a      	ldr	r2, [r7, #4]
 80058b4:	68d2      	ldr	r2, [r2, #12]
 80058b6:	0912      	lsrs	r2, r2, #4
 80058b8:	0452      	lsls	r2, r2, #17
 80058ba:	430a      	orrs	r2, r1
 80058bc:	492a      	ldr	r1, [pc, #168]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 80058be:	4313      	orrs	r3, r2
 80058c0:	610b      	str	r3, [r1, #16]
 80058c2:	e027      	b.n	8005914 <RCCEx_PLLSAI1_Config+0x190>
                   ((PllSai1->PLLSAI1P >> 4U) << RCC_PLLSAI1CFGR_PLLSAI1P_Pos));
#endif /* RCC_PLLSAI1P_DIV_2_31_SUPPORT */

#endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
      }
      else if(Divider == DIVIDER_Q_UPDATE)
 80058c4:	683b      	ldr	r3, [r7, #0]
 80058c6:	2b01      	cmp	r3, #1
 80058c8:	d112      	bne.n	80058f0 <RCCEx_PLLSAI1_Config+0x16c>
                   (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
                   (((PllSai1->PLLSAI1Q >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1Q_Pos) |
                   ((PllSai1->PLLSAI1M - 1U) << RCC_PLLSAI1CFGR_PLLSAI1M_Pos));
#else
        /* Configure the PLLSAI1 Division factor Q and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI1CFGR,
 80058ca:	4b27      	ldr	r3, [pc, #156]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 80058cc:	691b      	ldr	r3, [r3, #16]
 80058ce:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 80058d2:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 80058d6:	687a      	ldr	r2, [r7, #4]
 80058d8:	6892      	ldr	r2, [r2, #8]
 80058da:	0211      	lsls	r1, r2, #8
 80058dc:	687a      	ldr	r2, [r7, #4]
 80058de:	6912      	ldr	r2, [r2, #16]
 80058e0:	0852      	lsrs	r2, r2, #1
 80058e2:	3a01      	subs	r2, #1
 80058e4:	0552      	lsls	r2, r2, #21
 80058e6:	430a      	orrs	r2, r1
 80058e8:	491f      	ldr	r1, [pc, #124]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 80058ea:	4313      	orrs	r3, r2
 80058ec:	610b      	str	r3, [r1, #16]
 80058ee:	e011      	b.n	8005914 <RCCEx_PLLSAI1_Config+0x190>
                   (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
                   (((PllSai1->PLLSAI1R >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1R_Pos) |
                   ((PllSai1->PLLSAI1M - 1U) << RCC_PLLSAI1CFGR_PLLSAI1M_Pos));
#else
        /* Configure the PLLSAI1 Division factor R and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI1CFGR,
 80058f0:	4b1d      	ldr	r3, [pc, #116]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 80058f2:	691b      	ldr	r3, [r3, #16]
 80058f4:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 80058f8:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 80058fc:	687a      	ldr	r2, [r7, #4]
 80058fe:	6892      	ldr	r2, [r2, #8]
 8005900:	0211      	lsls	r1, r2, #8
 8005902:	687a      	ldr	r2, [r7, #4]
 8005904:	6952      	ldr	r2, [r2, #20]
 8005906:	0852      	lsrs	r2, r2, #1
 8005908:	3a01      	subs	r2, #1
 800590a:	0652      	lsls	r2, r2, #25
 800590c:	430a      	orrs	r2, r1
 800590e:	4916      	ldr	r1, [pc, #88]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005910:	4313      	orrs	r3, r2
 8005912:	610b      	str	r3, [r1, #16]
                   (((PllSai1->PLLSAI1R >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1R_Pos));
#endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
      }

      /* Enable the PLLSAI1 again by setting PLLSAI1ON to 1*/
      __HAL_RCC_PLLSAI1_ENABLE();
 8005914:	4b14      	ldr	r3, [pc, #80]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005916:	681b      	ldr	r3, [r3, #0]
 8005918:	4a13      	ldr	r2, [pc, #76]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 800591a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800591e:	6013      	str	r3, [r2, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005920:	f7fd fc46 	bl	80031b0 <HAL_GetTick>
 8005924:	60b8      	str	r0, [r7, #8]

      /* Wait till PLLSAI1 is ready */
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 8005926:	e009      	b.n	800593c <RCCEx_PLLSAI1_Config+0x1b8>
      {
        if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 8005928:	f7fd fc42 	bl	80031b0 <HAL_GetTick>
 800592c:	4602      	mov	r2, r0
 800592e:	68bb      	ldr	r3, [r7, #8]
 8005930:	1ad3      	subs	r3, r2, r3
 8005932:	2b02      	cmp	r3, #2
 8005934:	d902      	bls.n	800593c <RCCEx_PLLSAI1_Config+0x1b8>
        {
          status = HAL_TIMEOUT;
 8005936:	2303      	movs	r3, #3
 8005938:	73fb      	strb	r3, [r7, #15]
          break;
 800593a:	e005      	b.n	8005948 <RCCEx_PLLSAI1_Config+0x1c4>
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 800593c:	4b0a      	ldr	r3, [pc, #40]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 800593e:	681b      	ldr	r3, [r3, #0]
 8005940:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005944:	2b00      	cmp	r3, #0
 8005946:	d0ef      	beq.n	8005928 <RCCEx_PLLSAI1_Config+0x1a4>
        }
      }

      if(status == HAL_OK)
 8005948:	7bfb      	ldrb	r3, [r7, #15]
 800594a:	2b00      	cmp	r3, #0
 800594c:	d106      	bne.n	800595c <RCCEx_PLLSAI1_Config+0x1d8>
      {
        /* Configure the PLLSAI1 Clock output(s) */
        __HAL_RCC_PLLSAI1CLKOUT_ENABLE(PllSai1->PLLSAI1ClockOut);
 800594e:	4b06      	ldr	r3, [pc, #24]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005950:	691a      	ldr	r2, [r3, #16]
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	699b      	ldr	r3, [r3, #24]
 8005956:	4904      	ldr	r1, [pc, #16]	; (8005968 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005958:	4313      	orrs	r3, r2
 800595a:	610b      	str	r3, [r1, #16]
      }
    }
  }

  return status;
 800595c:	7bfb      	ldrb	r3, [r7, #15]
}
 800595e:	4618      	mov	r0, r3
 8005960:	3710      	adds	r7, #16
 8005962:	46bd      	mov	sp, r7
 8005964:	bd80      	pop	{r7, pc}
 8005966:	bf00      	nop
 8005968:	40021000 	.word	0x40021000

0800596c <RCCEx_PLLSAI2_Config>:
  * @note   PLLSAI2 is temporary disable to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLLSAI2_Config(RCC_PLLSAI2InitTypeDef *PllSai2, uint32_t Divider)
{
 800596c:	b580      	push	{r7, lr}
 800596e:	b084      	sub	sp, #16
 8005970:	af00      	add	r7, sp, #0
 8005972:	6078      	str	r0, [r7, #4]
 8005974:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 8005976:	2300      	movs	r3, #0
 8005978:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLLSAI2M_VALUE(PllSai2->PLLSAI2M));
  assert_param(IS_RCC_PLLSAI2N_VALUE(PllSai2->PLLSAI2N));
  assert_param(IS_RCC_PLLSAI2CLOCKOUT_VALUE(PllSai2->PLLSAI2ClockOut));

  /* Check that PLLSAI2 clock source and divider M can be applied */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 800597a:	4b6a      	ldr	r3, [pc, #424]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 800597c:	68db      	ldr	r3, [r3, #12]
 800597e:	f003 0303 	and.w	r3, r3, #3
 8005982:	2b00      	cmp	r3, #0
 8005984:	d018      	beq.n	80059b8 <RCCEx_PLLSAI2_Config+0x4c>
  {
    /* PLL clock source and divider M already set, check that no request for change  */
    if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai2->PLLSAI2Source)
 8005986:	4b67      	ldr	r3, [pc, #412]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005988:	68db      	ldr	r3, [r3, #12]
 800598a:	f003 0203 	and.w	r2, r3, #3
 800598e:	687b      	ldr	r3, [r7, #4]
 8005990:	681b      	ldr	r3, [r3, #0]
 8005992:	429a      	cmp	r2, r3
 8005994:	d10d      	bne.n	80059b2 <RCCEx_PLLSAI2_Config+0x46>
       ||
       (PllSai2->PLLSAI2Source == RCC_PLLSOURCE_NONE)
 8005996:	687b      	ldr	r3, [r7, #4]
 8005998:	681b      	ldr	r3, [r3, #0]
       ||
 800599a:	2b00      	cmp	r3, #0
 800599c:	d009      	beq.n	80059b2 <RCCEx_PLLSAI2_Config+0x46>
#if !defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
       ||
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai2->PLLSAI2M)
 800599e:	4b61      	ldr	r3, [pc, #388]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 80059a0:	68db      	ldr	r3, [r3, #12]
 80059a2:	091b      	lsrs	r3, r3, #4
 80059a4:	f003 0307 	and.w	r3, r3, #7
 80059a8:	1c5a      	adds	r2, r3, #1
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	685b      	ldr	r3, [r3, #4]
       ||
 80059ae:	429a      	cmp	r2, r3
 80059b0:	d047      	beq.n	8005a42 <RCCEx_PLLSAI2_Config+0xd6>
#endif
      )
    {
      status = HAL_ERROR;
 80059b2:	2301      	movs	r3, #1
 80059b4:	73fb      	strb	r3, [r7, #15]
 80059b6:	e044      	b.n	8005a42 <RCCEx_PLLSAI2_Config+0xd6>
    }
  }
  else
  {
    /* Check PLLSAI2 clock source availability */
    switch(PllSai2->PLLSAI2Source)
 80059b8:	687b      	ldr	r3, [r7, #4]
 80059ba:	681b      	ldr	r3, [r3, #0]
 80059bc:	2b03      	cmp	r3, #3
 80059be:	d018      	beq.n	80059f2 <RCCEx_PLLSAI2_Config+0x86>
 80059c0:	2b03      	cmp	r3, #3
 80059c2:	d825      	bhi.n	8005a10 <RCCEx_PLLSAI2_Config+0xa4>
 80059c4:	2b01      	cmp	r3, #1
 80059c6:	d002      	beq.n	80059ce <RCCEx_PLLSAI2_Config+0x62>
 80059c8:	2b02      	cmp	r3, #2
 80059ca:	d009      	beq.n	80059e0 <RCCEx_PLLSAI2_Config+0x74>
 80059cc:	e020      	b.n	8005a10 <RCCEx_PLLSAI2_Config+0xa4>
    {
    case RCC_PLLSOURCE_MSI:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
 80059ce:	4b55      	ldr	r3, [pc, #340]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 80059d0:	681b      	ldr	r3, [r3, #0]
 80059d2:	f003 0302 	and.w	r3, r3, #2
 80059d6:	2b00      	cmp	r3, #0
 80059d8:	d11d      	bne.n	8005a16 <RCCEx_PLLSAI2_Config+0xaa>
      {
        status = HAL_ERROR;
 80059da:	2301      	movs	r3, #1
 80059dc:	73fb      	strb	r3, [r7, #15]
      }
      break;
 80059de:	e01a      	b.n	8005a16 <RCCEx_PLLSAI2_Config+0xaa>
    case RCC_PLLSOURCE_HSI:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
 80059e0:	4b50      	ldr	r3, [pc, #320]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 80059e2:	681b      	ldr	r3, [r3, #0]
 80059e4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80059e8:	2b00      	cmp	r3, #0
 80059ea:	d116      	bne.n	8005a1a <RCCEx_PLLSAI2_Config+0xae>
      {
        status = HAL_ERROR;
 80059ec:	2301      	movs	r3, #1
 80059ee:	73fb      	strb	r3, [r7, #15]
      }
      break;
 80059f0:	e013      	b.n	8005a1a <RCCEx_PLLSAI2_Config+0xae>
    case RCC_PLLSOURCE_HSE:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSERDY))
 80059f2:	4b4c      	ldr	r3, [pc, #304]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80059fa:	2b00      	cmp	r3, #0
 80059fc:	d10f      	bne.n	8005a1e <RCCEx_PLLSAI2_Config+0xb2>
      {
        if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 80059fe:	4b49      	ldr	r3, [pc, #292]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005a00:	681b      	ldr	r3, [r3, #0]
 8005a02:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005a06:	2b00      	cmp	r3, #0
 8005a08:	d109      	bne.n	8005a1e <RCCEx_PLLSAI2_Config+0xb2>
        {
          status = HAL_ERROR;
 8005a0a:	2301      	movs	r3, #1
 8005a0c:	73fb      	strb	r3, [r7, #15]
        }
      }
      break;
 8005a0e:	e006      	b.n	8005a1e <RCCEx_PLLSAI2_Config+0xb2>
    default:
      status = HAL_ERROR;
 8005a10:	2301      	movs	r3, #1
 8005a12:	73fb      	strb	r3, [r7, #15]
      break;
 8005a14:	e004      	b.n	8005a20 <RCCEx_PLLSAI2_Config+0xb4>
      break;
 8005a16:	bf00      	nop
 8005a18:	e002      	b.n	8005a20 <RCCEx_PLLSAI2_Config+0xb4>
      break;
 8005a1a:	bf00      	nop
 8005a1c:	e000      	b.n	8005a20 <RCCEx_PLLSAI2_Config+0xb4>
      break;
 8005a1e:	bf00      	nop
    }

    if(status == HAL_OK)
 8005a20:	7bfb      	ldrb	r3, [r7, #15]
 8005a22:	2b00      	cmp	r3, #0
 8005a24:	d10d      	bne.n	8005a42 <RCCEx_PLLSAI2_Config+0xd6>
#if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
      /* Set PLLSAI2 clock source */
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PllSai2->PLLSAI2Source);
#else
      /* Set PLLSAI2 clock source and divider M */
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, PllSai2->PLLSAI2Source | (PllSai2->PLLSAI2M - 1U) << RCC_PLLCFGR_PLLM_Pos);
 8005a26:	4b3f      	ldr	r3, [pc, #252]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005a28:	68db      	ldr	r3, [r3, #12]
 8005a2a:	f023 0273 	bic.w	r2, r3, #115	; 0x73
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	6819      	ldr	r1, [r3, #0]
 8005a32:	687b      	ldr	r3, [r7, #4]
 8005a34:	685b      	ldr	r3, [r3, #4]
 8005a36:	3b01      	subs	r3, #1
 8005a38:	011b      	lsls	r3, r3, #4
 8005a3a:	430b      	orrs	r3, r1
 8005a3c:	4939      	ldr	r1, [pc, #228]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005a3e:	4313      	orrs	r3, r2
 8005a40:	60cb      	str	r3, [r1, #12]
#endif
    }
  }

  if(status == HAL_OK)
 8005a42:	7bfb      	ldrb	r3, [r7, #15]
 8005a44:	2b00      	cmp	r3, #0
 8005a46:	d167      	bne.n	8005b18 <RCCEx_PLLSAI2_Config+0x1ac>
  {
    /* Disable the PLLSAI2 */
    __HAL_RCC_PLLSAI2_DISABLE();
 8005a48:	4b36      	ldr	r3, [pc, #216]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005a4a:	681b      	ldr	r3, [r3, #0]
 8005a4c:	4a35      	ldr	r2, [pc, #212]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005a4e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005a52:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005a54:	f7fd fbac 	bl	80031b0 <HAL_GetTick>
 8005a58:	60b8      	str	r0, [r7, #8]

    /* Wait till PLLSAI2 is ready to be updated */
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
 8005a5a:	e009      	b.n	8005a70 <RCCEx_PLLSAI2_Config+0x104>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
 8005a5c:	f7fd fba8 	bl	80031b0 <HAL_GetTick>
 8005a60:	4602      	mov	r2, r0
 8005a62:	68bb      	ldr	r3, [r7, #8]
 8005a64:	1ad3      	subs	r3, r2, r3
 8005a66:	2b02      	cmp	r3, #2
 8005a68:	d902      	bls.n	8005a70 <RCCEx_PLLSAI2_Config+0x104>
      {
        status = HAL_TIMEOUT;
 8005a6a:	2303      	movs	r3, #3
 8005a6c:	73fb      	strb	r3, [r7, #15]
        break;
 8005a6e:	e005      	b.n	8005a7c <RCCEx_PLLSAI2_Config+0x110>
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
 8005a70:	4b2c      	ldr	r3, [pc, #176]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005a72:	681b      	ldr	r3, [r3, #0]
 8005a74:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005a78:	2b00      	cmp	r3, #0
 8005a7a:	d1ef      	bne.n	8005a5c <RCCEx_PLLSAI2_Config+0xf0>
      }
    }

    if(status == HAL_OK)
 8005a7c:	7bfb      	ldrb	r3, [r7, #15]
 8005a7e:	2b00      	cmp	r3, #0
 8005a80:	d14a      	bne.n	8005b18 <RCCEx_PLLSAI2_Config+0x1ac>
    {
      if(Divider == DIVIDER_P_UPDATE)
 8005a82:	683b      	ldr	r3, [r7, #0]
 8005a84:	2b00      	cmp	r3, #0
 8005a86:	d111      	bne.n	8005aac <RCCEx_PLLSAI2_Config+0x140>
        MODIFY_REG(RCC->PLLSAI2CFGR,
                   RCC_PLLSAI2CFGR_PLLSAI2N | RCC_PLLSAI2CFGR_PLLSAI2PDIV,
                   (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
                   (PllSai2->PLLSAI2P << RCC_PLLSAI2CFGR_PLLSAI2PDIV_Pos));
#else
        MODIFY_REG(RCC->PLLSAI2CFGR,
 8005a88:	4b26      	ldr	r3, [pc, #152]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005a8a:	695b      	ldr	r3, [r3, #20]
 8005a8c:	f423 331f 	bic.w	r3, r3, #162816	; 0x27c00
 8005a90:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005a94:	687a      	ldr	r2, [r7, #4]
 8005a96:	6892      	ldr	r2, [r2, #8]
 8005a98:	0211      	lsls	r1, r2, #8
 8005a9a:	687a      	ldr	r2, [r7, #4]
 8005a9c:	68d2      	ldr	r2, [r2, #12]
 8005a9e:	0912      	lsrs	r2, r2, #4
 8005aa0:	0452      	lsls	r2, r2, #17
 8005aa2:	430a      	orrs	r2, r1
 8005aa4:	491f      	ldr	r1, [pc, #124]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005aa6:	4313      	orrs	r3, r2
 8005aa8:	614b      	str	r3, [r1, #20]
 8005aaa:	e011      	b.n	8005ad0 <RCCEx_PLLSAI2_Config+0x164>
                   (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
                   (((PllSai2->PLLSAI2R >> 1U) - 1U) << RCC_PLLSAI2CFGR_PLLSAI2R_Pos) |
                   ((PllSai2->PLLSAI2M - 1U) << RCC_PLLSAI2CFGR_PLLSAI2M_Pos));
#else
        /* Configure the PLLSAI2 Division factor R and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI2CFGR,
 8005aac:	4b1d      	ldr	r3, [pc, #116]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005aae:	695b      	ldr	r3, [r3, #20]
 8005ab0:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8005ab4:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8005ab8:	687a      	ldr	r2, [r7, #4]
 8005aba:	6892      	ldr	r2, [r2, #8]
 8005abc:	0211      	lsls	r1, r2, #8
 8005abe:	687a      	ldr	r2, [r7, #4]
 8005ac0:	6912      	ldr	r2, [r2, #16]
 8005ac2:	0852      	lsrs	r2, r2, #1
 8005ac4:	3a01      	subs	r2, #1
 8005ac6:	0652      	lsls	r2, r2, #25
 8005ac8:	430a      	orrs	r2, r1
 8005aca:	4916      	ldr	r1, [pc, #88]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005acc:	4313      	orrs	r3, r2
 8005ace:	614b      	str	r3, [r1, #20]
                   (((PllSai2->PLLSAI2R >> 1U) - 1U) << RCC_PLLSAI2CFGR_PLLSAI2R_Pos));
#endif /* RCC_PLLSAI2M_DIV_1_16_SUPPORT */
      }

      /* Enable the PLLSAI2 again by setting PLLSAI2ON to 1*/
      __HAL_RCC_PLLSAI2_ENABLE();
 8005ad0:	4b14      	ldr	r3, [pc, #80]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005ad2:	681b      	ldr	r3, [r3, #0]
 8005ad4:	4a13      	ldr	r2, [pc, #76]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005ad6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005ada:	6013      	str	r3, [r2, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005adc:	f7fd fb68 	bl	80031b0 <HAL_GetTick>
 8005ae0:	60b8      	str	r0, [r7, #8]

      /* Wait till PLLSAI2 is ready */
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == 0U)
 8005ae2:	e009      	b.n	8005af8 <RCCEx_PLLSAI2_Config+0x18c>
      {
        if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
 8005ae4:	f7fd fb64 	bl	80031b0 <HAL_GetTick>
 8005ae8:	4602      	mov	r2, r0
 8005aea:	68bb      	ldr	r3, [r7, #8]
 8005aec:	1ad3      	subs	r3, r2, r3
 8005aee:	2b02      	cmp	r3, #2
 8005af0:	d902      	bls.n	8005af8 <RCCEx_PLLSAI2_Config+0x18c>
        {
          status = HAL_TIMEOUT;
 8005af2:	2303      	movs	r3, #3
 8005af4:	73fb      	strb	r3, [r7, #15]
          break;
 8005af6:	e005      	b.n	8005b04 <RCCEx_PLLSAI2_Config+0x198>
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == 0U)
 8005af8:	4b0a      	ldr	r3, [pc, #40]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005afa:	681b      	ldr	r3, [r3, #0]
 8005afc:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005b00:	2b00      	cmp	r3, #0
 8005b02:	d0ef      	beq.n	8005ae4 <RCCEx_PLLSAI2_Config+0x178>
        }
      }

      if(status == HAL_OK)
 8005b04:	7bfb      	ldrb	r3, [r7, #15]
 8005b06:	2b00      	cmp	r3, #0
 8005b08:	d106      	bne.n	8005b18 <RCCEx_PLLSAI2_Config+0x1ac>
      {
        /* Configure the PLLSAI2 Clock output(s) */
        __HAL_RCC_PLLSAI2CLKOUT_ENABLE(PllSai2->PLLSAI2ClockOut);
 8005b0a:	4b06      	ldr	r3, [pc, #24]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005b0c:	695a      	ldr	r2, [r3, #20]
 8005b0e:	687b      	ldr	r3, [r7, #4]
 8005b10:	695b      	ldr	r3, [r3, #20]
 8005b12:	4904      	ldr	r1, [pc, #16]	; (8005b24 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005b14:	4313      	orrs	r3, r2
 8005b16:	614b      	str	r3, [r1, #20]
      }
    }
  }

  return status;
 8005b18:	7bfb      	ldrb	r3, [r7, #15]
}
 8005b1a:	4618      	mov	r0, r3
 8005b1c:	3710      	adds	r7, #16
 8005b1e:	46bd      	mov	sp, r7
 8005b20:	bd80      	pop	{r7, pc}
 8005b22:	bf00      	nop
 8005b24:	40021000 	.word	0x40021000

08005b28 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8005b28:	b580      	push	{r7, lr}
 8005b2a:	b084      	sub	sp, #16
 8005b2c:	af00      	add	r7, sp, #0
 8005b2e:	6078      	str	r0, [r7, #4]
  uint32_t frxth;

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	2b00      	cmp	r3, #0
 8005b34:	d101      	bne.n	8005b3a <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8005b36:	2301      	movs	r3, #1
 8005b38:	e095      	b.n	8005c66 <HAL_SPI_Init+0x13e>
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8005b3a:	687b      	ldr	r3, [r7, #4]
 8005b3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b3e:	2b00      	cmp	r3, #0
 8005b40:	d108      	bne.n	8005b54 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005b42:	687b      	ldr	r3, [r7, #4]
 8005b44:	685b      	ldr	r3, [r3, #4]
 8005b46:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005b4a:	d009      	beq.n	8005b60 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005b4c:	687b      	ldr	r3, [r7, #4]
 8005b4e:	2200      	movs	r2, #0
 8005b50:	61da      	str	r2, [r3, #28]
 8005b52:	e005      	b.n	8005b60 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005b54:	687b      	ldr	r3, [r7, #4]
 8005b56:	2200      	movs	r2, #0
 8005b58:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005b5a:	687b      	ldr	r3, [r7, #4]
 8005b5c:	2200      	movs	r2, #0
 8005b5e:	615a      	str	r2, [r3, #20]
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005b60:	687b      	ldr	r3, [r7, #4]
 8005b62:	2200      	movs	r2, #0
 8005b64:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8005b6c:	b2db      	uxtb	r3, r3
 8005b6e:	2b00      	cmp	r3, #0
 8005b70:	d106      	bne.n	8005b80 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8005b72:	687b      	ldr	r3, [r7, #4]
 8005b74:	2200      	movs	r2, #0
 8005b76:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8005b7a:	6878      	ldr	r0, [r7, #4]
 8005b7c:	f7fd f850 	bl	8002c20 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8005b80:	687b      	ldr	r3, [r7, #4]
 8005b82:	2202      	movs	r2, #2
 8005b84:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	681b      	ldr	r3, [r3, #0]
 8005b8c:	681a      	ldr	r2, [r3, #0]
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	681b      	ldr	r3, [r3, #0]
 8005b92:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005b96:	601a      	str	r2, [r3, #0]

  /* Align by default the rs fifo threshold on the data size */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	68db      	ldr	r3, [r3, #12]
 8005b9c:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8005ba0:	d902      	bls.n	8005ba8 <HAL_SPI_Init+0x80>
  {
    frxth = SPI_RXFIFO_THRESHOLD_HF;
 8005ba2:	2300      	movs	r3, #0
 8005ba4:	60fb      	str	r3, [r7, #12]
 8005ba6:	e002      	b.n	8005bae <HAL_SPI_Init+0x86>
  }
  else
  {
    frxth = SPI_RXFIFO_THRESHOLD_QF;
 8005ba8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005bac:	60fb      	str	r3, [r7, #12]
  }

  /* CRC calculation is valid only for 16Bit and 8 Bit */
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	68db      	ldr	r3, [r3, #12]
 8005bb2:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 8005bb6:	d007      	beq.n	8005bc8 <HAL_SPI_Init+0xa0>
 8005bb8:	687b      	ldr	r3, [r7, #4]
 8005bba:	68db      	ldr	r3, [r3, #12]
 8005bbc:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8005bc0:	d002      	beq.n	8005bc8 <HAL_SPI_Init+0xa0>
  {
    /* CRC must be disabled */
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005bc2:	687b      	ldr	r3, [r7, #4]
 8005bc4:	2200      	movs	r2, #0
 8005bc6:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005bc8:	687b      	ldr	r3, [r7, #4]
 8005bca:	685b      	ldr	r3, [r3, #4]
 8005bcc:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8005bd0:	687b      	ldr	r3, [r7, #4]
 8005bd2:	689b      	ldr	r3, [r3, #8]
 8005bd4:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8005bd8:	431a      	orrs	r2, r3
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	691b      	ldr	r3, [r3, #16]
 8005bde:	f003 0302 	and.w	r3, r3, #2
 8005be2:	431a      	orrs	r2, r3
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	695b      	ldr	r3, [r3, #20]
 8005be8:	f003 0301 	and.w	r3, r3, #1
 8005bec:	431a      	orrs	r2, r3
 8005bee:	687b      	ldr	r3, [r7, #4]
 8005bf0:	699b      	ldr	r3, [r3, #24]
 8005bf2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005bf6:	431a      	orrs	r2, r3
 8005bf8:	687b      	ldr	r3, [r7, #4]
 8005bfa:	69db      	ldr	r3, [r3, #28]
 8005bfc:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8005c00:	431a      	orrs	r2, r3
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	6a1b      	ldr	r3, [r3, #32]
 8005c06:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005c0a:	ea42 0103 	orr.w	r1, r2, r3
 8005c0e:	687b      	ldr	r3, [r7, #4]
 8005c10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005c12:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8005c16:	687b      	ldr	r3, [r7, #4]
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	430a      	orrs	r2, r1
 8005c1c:	601a      	str	r2, [r3, #0]
    }
  }
#endif /* USE_SPI_CRC */

  /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8005c1e:	687b      	ldr	r3, [r7, #4]
 8005c20:	699b      	ldr	r3, [r3, #24]
 8005c22:	0c1b      	lsrs	r3, r3, #16
 8005c24:	f003 0204 	and.w	r2, r3, #4
 8005c28:	687b      	ldr	r3, [r7, #4]
 8005c2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c2c:	f003 0310 	and.w	r3, r3, #16
 8005c30:	431a      	orrs	r2, r3
 8005c32:	687b      	ldr	r3, [r7, #4]
 8005c34:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005c36:	f003 0308 	and.w	r3, r3, #8
 8005c3a:	431a      	orrs	r2, r3
 8005c3c:	687b      	ldr	r3, [r7, #4]
 8005c3e:	68db      	ldr	r3, [r3, #12]
 8005c40:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8005c44:	ea42 0103 	orr.w	r1, r2, r3
 8005c48:	68fb      	ldr	r3, [r7, #12]
 8005c4a:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	681b      	ldr	r3, [r3, #0]
 8005c52:	430a      	orrs	r2, r1
 8005c54:	605a      	str	r2, [r3, #4]
#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005c56:	687b      	ldr	r3, [r7, #4]
 8005c58:	2200      	movs	r2, #0
 8005c5a:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 8005c5c:	687b      	ldr	r3, [r7, #4]
 8005c5e:	2201      	movs	r2, #1
 8005c60:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

  return HAL_OK;
 8005c64:	2300      	movs	r3, #0
}
 8005c66:	4618      	mov	r0, r3
 8005c68:	3710      	adds	r7, #16
 8005c6a:	46bd      	mov	sp, r7
 8005c6c:	bd80      	pop	{r7, pc}

08005c6e <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
                                          uint32_t Timeout)
{
 8005c6e:	b580      	push	{r7, lr}
 8005c70:	b08a      	sub	sp, #40	; 0x28
 8005c72:	af00      	add	r7, sp, #0
 8005c74:	60f8      	str	r0, [r7, #12]
 8005c76:	60b9      	str	r1, [r7, #8]
 8005c78:	607a      	str	r2, [r7, #4]
 8005c7a:	807b      	strh	r3, [r7, #2]
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 8005c7c:	2301      	movs	r3, #1
 8005c7e:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_StatusTypeDef    errorcode = HAL_OK;
 8005c80:	2300      	movs	r3, #0
 8005c82:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005c86:	68fb      	ldr	r3, [r7, #12]
 8005c88:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8005c8c:	2b01      	cmp	r3, #1
 8005c8e:	d101      	bne.n	8005c94 <HAL_SPI_TransmitReceive+0x26>
 8005c90:	2302      	movs	r3, #2
 8005c92:	e1fb      	b.n	800608c <HAL_SPI_TransmitReceive+0x41e>
 8005c94:	68fb      	ldr	r3, [r7, #12]
 8005c96:	2201      	movs	r2, #1
 8005c98:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005c9c:	f7fd fa88 	bl	80031b0 <HAL_GetTick>
 8005ca0:	61f8      	str	r0, [r7, #28]

  /* Init temporary variables */
  tmp_state           = hspi->State;
 8005ca2:	68fb      	ldr	r3, [r7, #12]
 8005ca4:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8005ca8:	76fb      	strb	r3, [r7, #27]
  tmp_mode            = hspi->Init.Mode;
 8005caa:	68fb      	ldr	r3, [r7, #12]
 8005cac:	685b      	ldr	r3, [r3, #4]
 8005cae:	617b      	str	r3, [r7, #20]
  initial_TxXferCount = Size;
 8005cb0:	887b      	ldrh	r3, [r7, #2]
 8005cb2:	827b      	strh	r3, [r7, #18]
  initial_RxXferCount = Size;
 8005cb4:	887b      	ldrh	r3, [r7, #2]
 8005cb6:	823b      	strh	r3, [r7, #16]
#if (USE_SPI_CRC != 0U)
  spi_cr1             = READ_REG(hspi->Instance->CR1);
  spi_cr2             = READ_REG(hspi->Instance->CR2);
#endif /* USE_SPI_CRC */

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005cb8:	7efb      	ldrb	r3, [r7, #27]
 8005cba:	2b01      	cmp	r3, #1
 8005cbc:	d00e      	beq.n	8005cdc <HAL_SPI_TransmitReceive+0x6e>
 8005cbe:	697b      	ldr	r3, [r7, #20]
 8005cc0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005cc4:	d106      	bne.n	8005cd4 <HAL_SPI_TransmitReceive+0x66>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8005cc6:	68fb      	ldr	r3, [r7, #12]
 8005cc8:	689b      	ldr	r3, [r3, #8]
 8005cca:	2b00      	cmp	r3, #0
 8005ccc:	d102      	bne.n	8005cd4 <HAL_SPI_TransmitReceive+0x66>
 8005cce:	7efb      	ldrb	r3, [r7, #27]
 8005cd0:	2b04      	cmp	r3, #4
 8005cd2:	d003      	beq.n	8005cdc <HAL_SPI_TransmitReceive+0x6e>
  {
    errorcode = HAL_BUSY;
 8005cd4:	2302      	movs	r3, #2
 8005cd6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
    goto error;
 8005cda:	e1cd      	b.n	8006078 <HAL_SPI_TransmitReceive+0x40a>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8005cdc:	68bb      	ldr	r3, [r7, #8]
 8005cde:	2b00      	cmp	r3, #0
 8005ce0:	d005      	beq.n	8005cee <HAL_SPI_TransmitReceive+0x80>
 8005ce2:	687b      	ldr	r3, [r7, #4]
 8005ce4:	2b00      	cmp	r3, #0
 8005ce6:	d002      	beq.n	8005cee <HAL_SPI_TransmitReceive+0x80>
 8005ce8:	887b      	ldrh	r3, [r7, #2]
 8005cea:	2b00      	cmp	r3, #0
 8005cec:	d103      	bne.n	8005cf6 <HAL_SPI_TransmitReceive+0x88>
  {
    errorcode = HAL_ERROR;
 8005cee:	2301      	movs	r3, #1
 8005cf0:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
    goto error;
 8005cf4:	e1c0      	b.n	8006078 <HAL_SPI_TransmitReceive+0x40a>
  }

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005cf6:	68fb      	ldr	r3, [r7, #12]
 8005cf8:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8005cfc:	b2db      	uxtb	r3, r3
 8005cfe:	2b04      	cmp	r3, #4
 8005d00:	d003      	beq.n	8005d0a <HAL_SPI_TransmitReceive+0x9c>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8005d02:	68fb      	ldr	r3, [r7, #12]
 8005d04:	2205      	movs	r2, #5
 8005d06:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005d0a:	68fb      	ldr	r3, [r7, #12]
 8005d0c:	2200      	movs	r2, #0
 8005d0e:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8005d10:	68fb      	ldr	r3, [r7, #12]
 8005d12:	687a      	ldr	r2, [r7, #4]
 8005d14:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->RxXferCount = Size;
 8005d16:	68fb      	ldr	r3, [r7, #12]
 8005d18:	887a      	ldrh	r2, [r7, #2]
 8005d1a:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
  hspi->RxXferSize  = Size;
 8005d1e:	68fb      	ldr	r3, [r7, #12]
 8005d20:	887a      	ldrh	r2, [r7, #2]
 8005d22:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8005d26:	68fb      	ldr	r3, [r7, #12]
 8005d28:	68ba      	ldr	r2, [r7, #8]
 8005d2a:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxXferCount = Size;
 8005d2c:	68fb      	ldr	r3, [r7, #12]
 8005d2e:	887a      	ldrh	r2, [r7, #2]
 8005d30:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxXferSize  = Size;
 8005d32:	68fb      	ldr	r3, [r7, #12]
 8005d34:	887a      	ldrh	r2, [r7, #2]
 8005d36:	879a      	strh	r2, [r3, #60]	; 0x3c

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 8005d38:	68fb      	ldr	r3, [r7, #12]
 8005d3a:	2200      	movs	r2, #0
 8005d3c:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi->TxISR       = NULL;
 8005d3e:	68fb      	ldr	r3, [r7, #12]
 8005d40:	2200      	movs	r2, #0
 8005d42:	651a      	str	r2, [r3, #80]	; 0x50
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the Rx Fifo threshold */
  if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (initial_RxXferCount > 1U))
 8005d44:	68fb      	ldr	r3, [r7, #12]
 8005d46:	68db      	ldr	r3, [r3, #12]
 8005d48:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8005d4c:	d802      	bhi.n	8005d54 <HAL_SPI_TransmitReceive+0xe6>
 8005d4e:	8a3b      	ldrh	r3, [r7, #16]
 8005d50:	2b01      	cmp	r3, #1
 8005d52:	d908      	bls.n	8005d66 <HAL_SPI_TransmitReceive+0xf8>
  {
    /* Set fiforxthreshold according the reception data length: 16bit */
    CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8005d54:	68fb      	ldr	r3, [r7, #12]
 8005d56:	681b      	ldr	r3, [r3, #0]
 8005d58:	685a      	ldr	r2, [r3, #4]
 8005d5a:	68fb      	ldr	r3, [r7, #12]
 8005d5c:	681b      	ldr	r3, [r3, #0]
 8005d5e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8005d62:	605a      	str	r2, [r3, #4]
 8005d64:	e007      	b.n	8005d76 <HAL_SPI_TransmitReceive+0x108>
  }
  else
  {
    /* Set fiforxthreshold according the reception data length: 8bit */
    SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8005d66:	68fb      	ldr	r3, [r7, #12]
 8005d68:	681b      	ldr	r3, [r3, #0]
 8005d6a:	685a      	ldr	r2, [r3, #4]
 8005d6c:	68fb      	ldr	r3, [r7, #12]
 8005d6e:	681b      	ldr	r3, [r3, #0]
 8005d70:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8005d74:	605a      	str	r2, [r3, #4]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005d76:	68fb      	ldr	r3, [r7, #12]
 8005d78:	681b      	ldr	r3, [r3, #0]
 8005d7a:	681b      	ldr	r3, [r3, #0]
 8005d7c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005d80:	2b40      	cmp	r3, #64	; 0x40
 8005d82:	d007      	beq.n	8005d94 <HAL_SPI_TransmitReceive+0x126>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005d84:	68fb      	ldr	r3, [r7, #12]
 8005d86:	681b      	ldr	r3, [r3, #0]
 8005d88:	681a      	ldr	r2, [r3, #0]
 8005d8a:	68fb      	ldr	r3, [r7, #12]
 8005d8c:	681b      	ldr	r3, [r3, #0]
 8005d8e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005d92:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005d94:	68fb      	ldr	r3, [r7, #12]
 8005d96:	68db      	ldr	r3, [r3, #12]
 8005d98:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8005d9c:	d97c      	bls.n	8005e98 <HAL_SPI_TransmitReceive+0x22a>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005d9e:	68fb      	ldr	r3, [r7, #12]
 8005da0:	685b      	ldr	r3, [r3, #4]
 8005da2:	2b00      	cmp	r3, #0
 8005da4:	d002      	beq.n	8005dac <HAL_SPI_TransmitReceive+0x13e>
 8005da6:	8a7b      	ldrh	r3, [r7, #18]
 8005da8:	2b01      	cmp	r3, #1
 8005daa:	d169      	bne.n	8005e80 <HAL_SPI_TransmitReceive+0x212>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005dac:	68fb      	ldr	r3, [r7, #12]
 8005dae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005db0:	881a      	ldrh	r2, [r3, #0]
 8005db2:	68fb      	ldr	r3, [r7, #12]
 8005db4:	681b      	ldr	r3, [r3, #0]
 8005db6:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005db8:	68fb      	ldr	r3, [r7, #12]
 8005dba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005dbc:	1c9a      	adds	r2, r3, #2
 8005dbe:	68fb      	ldr	r3, [r7, #12]
 8005dc0:	639a      	str	r2, [r3, #56]	; 0x38
      hspi->TxXferCount--;
 8005dc2:	68fb      	ldr	r3, [r7, #12]
 8005dc4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005dc6:	b29b      	uxth	r3, r3
 8005dc8:	3b01      	subs	r3, #1
 8005dca:	b29a      	uxth	r2, r3
 8005dcc:	68fb      	ldr	r3, [r7, #12]
 8005dce:	87da      	strh	r2, [r3, #62]	; 0x3e
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005dd0:	e056      	b.n	8005e80 <HAL_SPI_TransmitReceive+0x212>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005dd2:	68fb      	ldr	r3, [r7, #12]
 8005dd4:	681b      	ldr	r3, [r3, #0]
 8005dd6:	689b      	ldr	r3, [r3, #8]
 8005dd8:	f003 0302 	and.w	r3, r3, #2
 8005ddc:	2b02      	cmp	r3, #2
 8005dde:	d11b      	bne.n	8005e18 <HAL_SPI_TransmitReceive+0x1aa>
 8005de0:	68fb      	ldr	r3, [r7, #12]
 8005de2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005de4:	b29b      	uxth	r3, r3
 8005de6:	2b00      	cmp	r3, #0
 8005de8:	d016      	beq.n	8005e18 <HAL_SPI_TransmitReceive+0x1aa>
 8005dea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005dec:	2b01      	cmp	r3, #1
 8005dee:	d113      	bne.n	8005e18 <HAL_SPI_TransmitReceive+0x1aa>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005df0:	68fb      	ldr	r3, [r7, #12]
 8005df2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005df4:	881a      	ldrh	r2, [r3, #0]
 8005df6:	68fb      	ldr	r3, [r7, #12]
 8005df8:	681b      	ldr	r3, [r3, #0]
 8005dfa:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005dfc:	68fb      	ldr	r3, [r7, #12]
 8005dfe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005e00:	1c9a      	adds	r2, r3, #2
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount--;
 8005e06:	68fb      	ldr	r3, [r7, #12]
 8005e08:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005e0a:	b29b      	uxth	r3, r3
 8005e0c:	3b01      	subs	r3, #1
 8005e0e:	b29a      	uxth	r2, r3
 8005e10:	68fb      	ldr	r3, [r7, #12]
 8005e12:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8005e14:	2300      	movs	r3, #0
 8005e16:	627b      	str	r3, [r7, #36]	; 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005e18:	68fb      	ldr	r3, [r7, #12]
 8005e1a:	681b      	ldr	r3, [r3, #0]
 8005e1c:	689b      	ldr	r3, [r3, #8]
 8005e1e:	f003 0301 	and.w	r3, r3, #1
 8005e22:	2b01      	cmp	r3, #1
 8005e24:	d11c      	bne.n	8005e60 <HAL_SPI_TransmitReceive+0x1f2>
 8005e26:	68fb      	ldr	r3, [r7, #12]
 8005e28:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005e2c:	b29b      	uxth	r3, r3
 8005e2e:	2b00      	cmp	r3, #0
 8005e30:	d016      	beq.n	8005e60 <HAL_SPI_TransmitReceive+0x1f2>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005e32:	68fb      	ldr	r3, [r7, #12]
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	68da      	ldr	r2, [r3, #12]
 8005e38:	68fb      	ldr	r3, [r7, #12]
 8005e3a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005e3c:	b292      	uxth	r2, r2
 8005e3e:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005e40:	68fb      	ldr	r3, [r7, #12]
 8005e42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005e44:	1c9a      	adds	r2, r3, #2
 8005e46:	68fb      	ldr	r3, [r7, #12]
 8005e48:	641a      	str	r2, [r3, #64]	; 0x40
        hspi->RxXferCount--;
 8005e4a:	68fb      	ldr	r3, [r7, #12]
 8005e4c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005e50:	b29b      	uxth	r3, r3
 8005e52:	3b01      	subs	r3, #1
 8005e54:	b29a      	uxth	r2, r3
 8005e56:	68fb      	ldr	r3, [r7, #12]
 8005e58:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8005e5c:	2301      	movs	r3, #1
 8005e5e:	627b      	str	r3, [r7, #36]	; 0x24
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8005e60:	f7fd f9a6 	bl	80031b0 <HAL_GetTick>
 8005e64:	4602      	mov	r2, r0
 8005e66:	69fb      	ldr	r3, [r7, #28]
 8005e68:	1ad3      	subs	r3, r2, r3
 8005e6a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005e6c:	429a      	cmp	r2, r3
 8005e6e:	d807      	bhi.n	8005e80 <HAL_SPI_TransmitReceive+0x212>
 8005e70:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005e72:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8005e76:	d003      	beq.n	8005e80 <HAL_SPI_TransmitReceive+0x212>
      {
        errorcode = HAL_TIMEOUT;
 8005e78:	2303      	movs	r3, #3
 8005e7a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
        goto error;
 8005e7e:	e0fb      	b.n	8006078 <HAL_SPI_TransmitReceive+0x40a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005e80:	68fb      	ldr	r3, [r7, #12]
 8005e82:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005e84:	b29b      	uxth	r3, r3
 8005e86:	2b00      	cmp	r3, #0
 8005e88:	d1a3      	bne.n	8005dd2 <HAL_SPI_TransmitReceive+0x164>
 8005e8a:	68fb      	ldr	r3, [r7, #12]
 8005e8c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005e90:	b29b      	uxth	r3, r3
 8005e92:	2b00      	cmp	r3, #0
 8005e94:	d19d      	bne.n	8005dd2 <HAL_SPI_TransmitReceive+0x164>
 8005e96:	e0df      	b.n	8006058 <HAL_SPI_TransmitReceive+0x3ea>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005e98:	68fb      	ldr	r3, [r7, #12]
 8005e9a:	685b      	ldr	r3, [r3, #4]
 8005e9c:	2b00      	cmp	r3, #0
 8005e9e:	d003      	beq.n	8005ea8 <HAL_SPI_TransmitReceive+0x23a>
 8005ea0:	8a7b      	ldrh	r3, [r7, #18]
 8005ea2:	2b01      	cmp	r3, #1
 8005ea4:	f040 80cb 	bne.w	800603e <HAL_SPI_TransmitReceive+0x3d0>
    {
      if (hspi->TxXferCount > 1U)
 8005ea8:	68fb      	ldr	r3, [r7, #12]
 8005eaa:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005eac:	b29b      	uxth	r3, r3
 8005eae:	2b01      	cmp	r3, #1
 8005eb0:	d912      	bls.n	8005ed8 <HAL_SPI_TransmitReceive+0x26a>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005eb2:	68fb      	ldr	r3, [r7, #12]
 8005eb4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005eb6:	881a      	ldrh	r2, [r3, #0]
 8005eb8:	68fb      	ldr	r3, [r7, #12]
 8005eba:	681b      	ldr	r3, [r3, #0]
 8005ebc:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005ebe:	68fb      	ldr	r3, [r7, #12]
 8005ec0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005ec2:	1c9a      	adds	r2, r3, #2
 8005ec4:	68fb      	ldr	r3, [r7, #12]
 8005ec6:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount -= 2U;
 8005ec8:	68fb      	ldr	r3, [r7, #12]
 8005eca:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005ecc:	b29b      	uxth	r3, r3
 8005ece:	3b02      	subs	r3, #2
 8005ed0:	b29a      	uxth	r2, r3
 8005ed2:	68fb      	ldr	r3, [r7, #12]
 8005ed4:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005ed6:	e0b2      	b.n	800603e <HAL_SPI_TransmitReceive+0x3d0>
      }
      else
      {
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8005ed8:	68fb      	ldr	r3, [r7, #12]
 8005eda:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005edc:	68fb      	ldr	r3, [r7, #12]
 8005ede:	681b      	ldr	r3, [r3, #0]
 8005ee0:	330c      	adds	r3, #12
 8005ee2:	7812      	ldrb	r2, [r2, #0]
 8005ee4:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 8005ee6:	68fb      	ldr	r3, [r7, #12]
 8005ee8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005eea:	1c5a      	adds	r2, r3, #1
 8005eec:	68fb      	ldr	r3, [r7, #12]
 8005eee:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount--;
 8005ef0:	68fb      	ldr	r3, [r7, #12]
 8005ef2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005ef4:	b29b      	uxth	r3, r3
 8005ef6:	3b01      	subs	r3, #1
 8005ef8:	b29a      	uxth	r2, r3
 8005efa:	68fb      	ldr	r3, [r7, #12]
 8005efc:	87da      	strh	r2, [r3, #62]	; 0x3e
      }
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005efe:	e09e      	b.n	800603e <HAL_SPI_TransmitReceive+0x3d0>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005f00:	68fb      	ldr	r3, [r7, #12]
 8005f02:	681b      	ldr	r3, [r3, #0]
 8005f04:	689b      	ldr	r3, [r3, #8]
 8005f06:	f003 0302 	and.w	r3, r3, #2
 8005f0a:	2b02      	cmp	r3, #2
 8005f0c:	d134      	bne.n	8005f78 <HAL_SPI_TransmitReceive+0x30a>
 8005f0e:	68fb      	ldr	r3, [r7, #12]
 8005f10:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005f12:	b29b      	uxth	r3, r3
 8005f14:	2b00      	cmp	r3, #0
 8005f16:	d02f      	beq.n	8005f78 <HAL_SPI_TransmitReceive+0x30a>
 8005f18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f1a:	2b01      	cmp	r3, #1
 8005f1c:	d12c      	bne.n	8005f78 <HAL_SPI_TransmitReceive+0x30a>
      {
        if (hspi->TxXferCount > 1U)
 8005f1e:	68fb      	ldr	r3, [r7, #12]
 8005f20:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005f22:	b29b      	uxth	r3, r3
 8005f24:	2b01      	cmp	r3, #1
 8005f26:	d912      	bls.n	8005f4e <HAL_SPI_TransmitReceive+0x2e0>
        {
          hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005f28:	68fb      	ldr	r3, [r7, #12]
 8005f2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005f2c:	881a      	ldrh	r2, [r3, #0]
 8005f2e:	68fb      	ldr	r3, [r7, #12]
 8005f30:	681b      	ldr	r3, [r3, #0]
 8005f32:	60da      	str	r2, [r3, #12]
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8005f34:	68fb      	ldr	r3, [r7, #12]
 8005f36:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005f38:	1c9a      	adds	r2, r3, #2
 8005f3a:	68fb      	ldr	r3, [r7, #12]
 8005f3c:	639a      	str	r2, [r3, #56]	; 0x38
          hspi->TxXferCount -= 2U;
 8005f3e:	68fb      	ldr	r3, [r7, #12]
 8005f40:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005f42:	b29b      	uxth	r3, r3
 8005f44:	3b02      	subs	r3, #2
 8005f46:	b29a      	uxth	r2, r3
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005f4c:	e012      	b.n	8005f74 <HAL_SPI_TransmitReceive+0x306>
        }
        else
        {
          *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8005f4e:	68fb      	ldr	r3, [r7, #12]
 8005f50:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005f52:	68fb      	ldr	r3, [r7, #12]
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	330c      	adds	r3, #12
 8005f58:	7812      	ldrb	r2, [r2, #0]
 8005f5a:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr++;
 8005f5c:	68fb      	ldr	r3, [r7, #12]
 8005f5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005f60:	1c5a      	adds	r2, r3, #1
 8005f62:	68fb      	ldr	r3, [r7, #12]
 8005f64:	639a      	str	r2, [r3, #56]	; 0x38
          hspi->TxXferCount--;
 8005f66:	68fb      	ldr	r3, [r7, #12]
 8005f68:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005f6a:	b29b      	uxth	r3, r3
 8005f6c:	3b01      	subs	r3, #1
 8005f6e:	b29a      	uxth	r2, r3
 8005f70:	68fb      	ldr	r3, [r7, #12]
 8005f72:	87da      	strh	r2, [r3, #62]	; 0x3e
        }
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8005f74:	2300      	movs	r3, #0
 8005f76:	627b      	str	r3, [r7, #36]	; 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005f78:	68fb      	ldr	r3, [r7, #12]
 8005f7a:	681b      	ldr	r3, [r3, #0]
 8005f7c:	689b      	ldr	r3, [r3, #8]
 8005f7e:	f003 0301 	and.w	r3, r3, #1
 8005f82:	2b01      	cmp	r3, #1
 8005f84:	d148      	bne.n	8006018 <HAL_SPI_TransmitReceive+0x3aa>
 8005f86:	68fb      	ldr	r3, [r7, #12]
 8005f88:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005f8c:	b29b      	uxth	r3, r3
 8005f8e:	2b00      	cmp	r3, #0
 8005f90:	d042      	beq.n	8006018 <HAL_SPI_TransmitReceive+0x3aa>
      {
        if (hspi->RxXferCount > 1U)
 8005f92:	68fb      	ldr	r3, [r7, #12]
 8005f94:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005f98:	b29b      	uxth	r3, r3
 8005f9a:	2b01      	cmp	r3, #1
 8005f9c:	d923      	bls.n	8005fe6 <HAL_SPI_TransmitReceive+0x378>
        {
          *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005f9e:	68fb      	ldr	r3, [r7, #12]
 8005fa0:	681b      	ldr	r3, [r3, #0]
 8005fa2:	68da      	ldr	r2, [r3, #12]
 8005fa4:	68fb      	ldr	r3, [r7, #12]
 8005fa6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005fa8:	b292      	uxth	r2, r2
 8005faa:	801a      	strh	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint16_t);
 8005fac:	68fb      	ldr	r3, [r7, #12]
 8005fae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005fb0:	1c9a      	adds	r2, r3, #2
 8005fb2:	68fb      	ldr	r3, [r7, #12]
 8005fb4:	641a      	str	r2, [r3, #64]	; 0x40
          hspi->RxXferCount -= 2U;
 8005fb6:	68fb      	ldr	r3, [r7, #12]
 8005fb8:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005fbc:	b29b      	uxth	r3, r3
 8005fbe:	3b02      	subs	r3, #2
 8005fc0:	b29a      	uxth	r2, r3
 8005fc2:	68fb      	ldr	r3, [r7, #12]
 8005fc4:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
          if (hspi->RxXferCount <= 1U)
 8005fc8:	68fb      	ldr	r3, [r7, #12]
 8005fca:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005fce:	b29b      	uxth	r3, r3
 8005fd0:	2b01      	cmp	r3, #1
 8005fd2:	d81f      	bhi.n	8006014 <HAL_SPI_TransmitReceive+0x3a6>
          {
            /* Set RX Fifo threshold before to switch on 8 bit data size */
            SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8005fd4:	68fb      	ldr	r3, [r7, #12]
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	685a      	ldr	r2, [r3, #4]
 8005fda:	68fb      	ldr	r3, [r7, #12]
 8005fdc:	681b      	ldr	r3, [r3, #0]
 8005fde:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8005fe2:	605a      	str	r2, [r3, #4]
 8005fe4:	e016      	b.n	8006014 <HAL_SPI_TransmitReceive+0x3a6>
          }
        }
        else
        {
          (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8005fe6:	68fb      	ldr	r3, [r7, #12]
 8005fe8:	681b      	ldr	r3, [r3, #0]
 8005fea:	f103 020c 	add.w	r2, r3, #12
 8005fee:	68fb      	ldr	r3, [r7, #12]
 8005ff0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005ff2:	7812      	ldrb	r2, [r2, #0]
 8005ff4:	b2d2      	uxtb	r2, r2
 8005ff6:	701a      	strb	r2, [r3, #0]
          hspi->pRxBuffPtr++;
 8005ff8:	68fb      	ldr	r3, [r7, #12]
 8005ffa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005ffc:	1c5a      	adds	r2, r3, #1
 8005ffe:	68fb      	ldr	r3, [r7, #12]
 8006000:	641a      	str	r2, [r3, #64]	; 0x40
          hspi->RxXferCount--;
 8006002:	68fb      	ldr	r3, [r7, #12]
 8006004:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006008:	b29b      	uxth	r3, r3
 800600a:	3b01      	subs	r3, #1
 800600c:	b29a      	uxth	r2, r3
 800600e:	68fb      	ldr	r3, [r7, #12]
 8006010:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
        }
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006014:	2301      	movs	r3, #1
 8006016:	627b      	str	r3, [r7, #36]	; 0x24
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006018:	f7fd f8ca 	bl	80031b0 <HAL_GetTick>
 800601c:	4602      	mov	r2, r0
 800601e:	69fb      	ldr	r3, [r7, #28]
 8006020:	1ad3      	subs	r3, r2, r3
 8006022:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006024:	429a      	cmp	r2, r3
 8006026:	d803      	bhi.n	8006030 <HAL_SPI_TransmitReceive+0x3c2>
 8006028:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800602a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800602e:	d102      	bne.n	8006036 <HAL_SPI_TransmitReceive+0x3c8>
 8006030:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006032:	2b00      	cmp	r3, #0
 8006034:	d103      	bne.n	800603e <HAL_SPI_TransmitReceive+0x3d0>
      {
        errorcode = HAL_TIMEOUT;
 8006036:	2303      	movs	r3, #3
 8006038:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
        goto error;
 800603c:	e01c      	b.n	8006078 <HAL_SPI_TransmitReceive+0x40a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800603e:	68fb      	ldr	r3, [r7, #12]
 8006040:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006042:	b29b      	uxth	r3, r3
 8006044:	2b00      	cmp	r3, #0
 8006046:	f47f af5b 	bne.w	8005f00 <HAL_SPI_TransmitReceive+0x292>
 800604a:	68fb      	ldr	r3, [r7, #12]
 800604c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006050:	b29b      	uxth	r3, r3
 8006052:	2b00      	cmp	r3, #0
 8006054:	f47f af54 	bne.w	8005f00 <HAL_SPI_TransmitReceive+0x292>
    errorcode = HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006058:	69fa      	ldr	r2, [r7, #28]
 800605a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800605c:	68f8      	ldr	r0, [r7, #12]
 800605e:	f000 fa57 	bl	8006510 <SPI_EndRxTxTransaction>
 8006062:	4603      	mov	r3, r0
 8006064:	2b00      	cmp	r3, #0
 8006066:	d006      	beq.n	8006076 <HAL_SPI_TransmitReceive+0x408>
  {
    errorcode = HAL_ERROR;
 8006068:	2301      	movs	r3, #1
 800606a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800606e:	68fb      	ldr	r3, [r7, #12]
 8006070:	2220      	movs	r2, #32
 8006072:	661a      	str	r2, [r3, #96]	; 0x60
 8006074:	e000      	b.n	8006078 <HAL_SPI_TransmitReceive+0x40a>
  }

error :
 8006076:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8006078:	68fb      	ldr	r3, [r7, #12]
 800607a:	2201      	movs	r2, #1
 800607c:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  __HAL_UNLOCK(hspi);
 8006080:	68fb      	ldr	r3, [r7, #12]
 8006082:	2200      	movs	r2, #0
 8006084:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  return errorcode;
 8006088:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
}
 800608c:	4618      	mov	r0, r3
 800608e:	3728      	adds	r7, #40	; 0x28
 8006090:	46bd      	mov	sp, r7
 8006092:	bd80      	pop	{r7, pc}

08006094 <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 8006094:	b580      	push	{r7, lr}
 8006096:	b088      	sub	sp, #32
 8006098:	af00      	add	r7, sp, #0
 800609a:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 800609c:	687b      	ldr	r3, [r7, #4]
 800609e:	681b      	ldr	r3, [r3, #0]
 80060a0:	685b      	ldr	r3, [r3, #4]
 80060a2:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 80060a4:	687b      	ldr	r3, [r7, #4]
 80060a6:	681b      	ldr	r3, [r3, #0]
 80060a8:	689b      	ldr	r3, [r3, #8]
 80060aa:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 80060ac:	69bb      	ldr	r3, [r7, #24]
 80060ae:	099b      	lsrs	r3, r3, #6
 80060b0:	f003 0301 	and.w	r3, r3, #1
 80060b4:	2b00      	cmp	r3, #0
 80060b6:	d10f      	bne.n	80060d8 <HAL_SPI_IRQHandler+0x44>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 80060b8:	69bb      	ldr	r3, [r7, #24]
 80060ba:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 80060be:	2b00      	cmp	r3, #0
 80060c0:	d00a      	beq.n	80060d8 <HAL_SPI_IRQHandler+0x44>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 80060c2:	69fb      	ldr	r3, [r7, #28]
 80060c4:	099b      	lsrs	r3, r3, #6
 80060c6:	f003 0301 	and.w	r3, r3, #1
 80060ca:	2b00      	cmp	r3, #0
 80060cc:	d004      	beq.n	80060d8 <HAL_SPI_IRQHandler+0x44>
  {
    hspi->RxISR(hspi);
 80060ce:	687b      	ldr	r3, [r7, #4]
 80060d0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80060d2:	6878      	ldr	r0, [r7, #4]
 80060d4:	4798      	blx	r3
    return;
 80060d6:	e0d7      	b.n	8006288 <HAL_SPI_IRQHandler+0x1f4>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 80060d8:	69bb      	ldr	r3, [r7, #24]
 80060da:	085b      	lsrs	r3, r3, #1
 80060dc:	f003 0301 	and.w	r3, r3, #1
 80060e0:	2b00      	cmp	r3, #0
 80060e2:	d00a      	beq.n	80060fa <HAL_SPI_IRQHandler+0x66>
 80060e4:	69fb      	ldr	r3, [r7, #28]
 80060e6:	09db      	lsrs	r3, r3, #7
 80060e8:	f003 0301 	and.w	r3, r3, #1
 80060ec:	2b00      	cmp	r3, #0
 80060ee:	d004      	beq.n	80060fa <HAL_SPI_IRQHandler+0x66>
  {
    hspi->TxISR(hspi);
 80060f0:	687b      	ldr	r3, [r7, #4]
 80060f2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80060f4:	6878      	ldr	r0, [r7, #4]
 80060f6:	4798      	blx	r3
    return;
 80060f8:	e0c6      	b.n	8006288 <HAL_SPI_IRQHandler+0x1f4>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 80060fa:	69bb      	ldr	r3, [r7, #24]
 80060fc:	095b      	lsrs	r3, r3, #5
 80060fe:	f003 0301 	and.w	r3, r3, #1
 8006102:	2b00      	cmp	r3, #0
 8006104:	d10c      	bne.n	8006120 <HAL_SPI_IRQHandler+0x8c>
 8006106:	69bb      	ldr	r3, [r7, #24]
 8006108:	099b      	lsrs	r3, r3, #6
 800610a:	f003 0301 	and.w	r3, r3, #1
 800610e:	2b00      	cmp	r3, #0
 8006110:	d106      	bne.n	8006120 <HAL_SPI_IRQHandler+0x8c>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8006112:	69bb      	ldr	r3, [r7, #24]
 8006114:	0a1b      	lsrs	r3, r3, #8
 8006116:	f003 0301 	and.w	r3, r3, #1
 800611a:	2b00      	cmp	r3, #0
 800611c:	f000 80b4 	beq.w	8006288 <HAL_SPI_IRQHandler+0x1f4>
 8006120:	69fb      	ldr	r3, [r7, #28]
 8006122:	095b      	lsrs	r3, r3, #5
 8006124:	f003 0301 	and.w	r3, r3, #1
 8006128:	2b00      	cmp	r3, #0
 800612a:	f000 80ad 	beq.w	8006288 <HAL_SPI_IRQHandler+0x1f4>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 800612e:	69bb      	ldr	r3, [r7, #24]
 8006130:	099b      	lsrs	r3, r3, #6
 8006132:	f003 0301 	and.w	r3, r3, #1
 8006136:	2b00      	cmp	r3, #0
 8006138:	d023      	beq.n	8006182 <HAL_SPI_IRQHandler+0xee>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 800613a:	687b      	ldr	r3, [r7, #4]
 800613c:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8006140:	b2db      	uxtb	r3, r3
 8006142:	2b03      	cmp	r3, #3
 8006144:	d011      	beq.n	800616a <HAL_SPI_IRQHandler+0xd6>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8006146:	687b      	ldr	r3, [r7, #4]
 8006148:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800614a:	f043 0204 	orr.w	r2, r3, #4
 800614e:	687b      	ldr	r3, [r7, #4]
 8006150:	661a      	str	r2, [r3, #96]	; 0x60
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006152:	2300      	movs	r3, #0
 8006154:	617b      	str	r3, [r7, #20]
 8006156:	687b      	ldr	r3, [r7, #4]
 8006158:	681b      	ldr	r3, [r3, #0]
 800615a:	68db      	ldr	r3, [r3, #12]
 800615c:	617b      	str	r3, [r7, #20]
 800615e:	687b      	ldr	r3, [r7, #4]
 8006160:	681b      	ldr	r3, [r3, #0]
 8006162:	689b      	ldr	r3, [r3, #8]
 8006164:	617b      	str	r3, [r7, #20]
 8006166:	697b      	ldr	r3, [r7, #20]
 8006168:	e00b      	b.n	8006182 <HAL_SPI_IRQHandler+0xee>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800616a:	2300      	movs	r3, #0
 800616c:	613b      	str	r3, [r7, #16]
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	681b      	ldr	r3, [r3, #0]
 8006172:	68db      	ldr	r3, [r3, #12]
 8006174:	613b      	str	r3, [r7, #16]
 8006176:	687b      	ldr	r3, [r7, #4]
 8006178:	681b      	ldr	r3, [r3, #0]
 800617a:	689b      	ldr	r3, [r3, #8]
 800617c:	613b      	str	r3, [r7, #16]
 800617e:	693b      	ldr	r3, [r7, #16]
        return;
 8006180:	e082      	b.n	8006288 <HAL_SPI_IRQHandler+0x1f4>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8006182:	69bb      	ldr	r3, [r7, #24]
 8006184:	095b      	lsrs	r3, r3, #5
 8006186:	f003 0301 	and.w	r3, r3, #1
 800618a:	2b00      	cmp	r3, #0
 800618c:	d014      	beq.n	80061b8 <HAL_SPI_IRQHandler+0x124>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006192:	f043 0201 	orr.w	r2, r3, #1
 8006196:	687b      	ldr	r3, [r7, #4]
 8006198:	661a      	str	r2, [r3, #96]	; 0x60
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800619a:	2300      	movs	r3, #0
 800619c:	60fb      	str	r3, [r7, #12]
 800619e:	687b      	ldr	r3, [r7, #4]
 80061a0:	681b      	ldr	r3, [r3, #0]
 80061a2:	689b      	ldr	r3, [r3, #8]
 80061a4:	60fb      	str	r3, [r7, #12]
 80061a6:	687b      	ldr	r3, [r7, #4]
 80061a8:	681b      	ldr	r3, [r3, #0]
 80061aa:	681a      	ldr	r2, [r3, #0]
 80061ac:	687b      	ldr	r3, [r7, #4]
 80061ae:	681b      	ldr	r3, [r3, #0]
 80061b0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80061b4:	601a      	str	r2, [r3, #0]
 80061b6:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 80061b8:	69bb      	ldr	r3, [r7, #24]
 80061ba:	0a1b      	lsrs	r3, r3, #8
 80061bc:	f003 0301 	and.w	r3, r3, #1
 80061c0:	2b00      	cmp	r3, #0
 80061c2:	d00c      	beq.n	80061de <HAL_SPI_IRQHandler+0x14a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 80061c4:	687b      	ldr	r3, [r7, #4]
 80061c6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80061c8:	f043 0208 	orr.w	r2, r3, #8
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	661a      	str	r2, [r3, #96]	; 0x60
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 80061d0:	2300      	movs	r3, #0
 80061d2:	60bb      	str	r3, [r7, #8]
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	681b      	ldr	r3, [r3, #0]
 80061d8:	689b      	ldr	r3, [r3, #8]
 80061da:	60bb      	str	r3, [r7, #8]
 80061dc:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80061e2:	2b00      	cmp	r3, #0
 80061e4:	d04f      	beq.n	8006286 <HAL_SPI_IRQHandler+0x1f2>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 80061e6:	687b      	ldr	r3, [r7, #4]
 80061e8:	681b      	ldr	r3, [r3, #0]
 80061ea:	685a      	ldr	r2, [r3, #4]
 80061ec:	687b      	ldr	r3, [r7, #4]
 80061ee:	681b      	ldr	r3, [r3, #0]
 80061f0:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80061f4:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 80061f6:	687b      	ldr	r3, [r7, #4]
 80061f8:	2201      	movs	r2, #1
 80061fa:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 80061fe:	69fb      	ldr	r3, [r7, #28]
 8006200:	f003 0302 	and.w	r3, r3, #2
 8006204:	2b00      	cmp	r3, #0
 8006206:	d104      	bne.n	8006212 <HAL_SPI_IRQHandler+0x17e>
 8006208:	69fb      	ldr	r3, [r7, #28]
 800620a:	f003 0301 	and.w	r3, r3, #1
 800620e:	2b00      	cmp	r3, #0
 8006210:	d034      	beq.n	800627c <HAL_SPI_IRQHandler+0x1e8>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8006212:	687b      	ldr	r3, [r7, #4]
 8006214:	681b      	ldr	r3, [r3, #0]
 8006216:	685a      	ldr	r2, [r3, #4]
 8006218:	687b      	ldr	r3, [r7, #4]
 800621a:	681b      	ldr	r3, [r3, #0]
 800621c:	f022 0203 	bic.w	r2, r2, #3
 8006220:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8006222:	687b      	ldr	r3, [r7, #4]
 8006224:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006226:	2b00      	cmp	r3, #0
 8006228:	d011      	beq.n	800624e <HAL_SPI_IRQHandler+0x1ba>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800622e:	4a18      	ldr	r2, [pc, #96]	; (8006290 <HAL_SPI_IRQHandler+0x1fc>)
 8006230:	639a      	str	r2, [r3, #56]	; 0x38
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006236:	4618      	mov	r0, r3
 8006238:	f7fd f8da 	bl	80033f0 <HAL_DMA_Abort_IT>
 800623c:	4603      	mov	r3, r0
 800623e:	2b00      	cmp	r3, #0
 8006240:	d005      	beq.n	800624e <HAL_SPI_IRQHandler+0x1ba>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006242:	687b      	ldr	r3, [r7, #4]
 8006244:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006246:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800624a:	687b      	ldr	r3, [r7, #4]
 800624c:	661a      	str	r2, [r3, #96]	; 0x60
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 800624e:	687b      	ldr	r3, [r7, #4]
 8006250:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006252:	2b00      	cmp	r3, #0
 8006254:	d016      	beq.n	8006284 <HAL_SPI_IRQHandler+0x1f0>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8006256:	687b      	ldr	r3, [r7, #4]
 8006258:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800625a:	4a0d      	ldr	r2, [pc, #52]	; (8006290 <HAL_SPI_IRQHandler+0x1fc>)
 800625c:	639a      	str	r2, [r3, #56]	; 0x38
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006262:	4618      	mov	r0, r3
 8006264:	f7fd f8c4 	bl	80033f0 <HAL_DMA_Abort_IT>
 8006268:	4603      	mov	r3, r0
 800626a:	2b00      	cmp	r3, #0
 800626c:	d00a      	beq.n	8006284 <HAL_SPI_IRQHandler+0x1f0>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800626e:	687b      	ldr	r3, [r7, #4]
 8006270:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006272:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8006276:	687b      	ldr	r3, [r7, #4]
 8006278:	661a      	str	r2, [r3, #96]	; 0x60
        if (hspi->hdmatx != NULL)
 800627a:	e003      	b.n	8006284 <HAL_SPI_IRQHandler+0x1f0>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 800627c:	6878      	ldr	r0, [r7, #4]
 800627e:	f000 f809 	bl	8006294 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 8006282:	e000      	b.n	8006286 <HAL_SPI_IRQHandler+0x1f2>
        if (hspi->hdmatx != NULL)
 8006284:	bf00      	nop
    return;
 8006286:	bf00      	nop
  }
}
 8006288:	3720      	adds	r7, #32
 800628a:	46bd      	mov	sp, r7
 800628c:	bd80      	pop	{r7, pc}
 800628e:	bf00      	nop
 8006290:	080062a9 	.word	0x080062a9

08006294 <HAL_SPI_ErrorCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
{
 8006294:	b480      	push	{r7}
 8006296:	b083      	sub	sp, #12
 8006298:	af00      	add	r7, sp, #0
 800629a:	6078      	str	r0, [r7, #4]
            the HAL_SPI_ErrorCallback should be implemented in the user file
   */
  /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
            and user can use HAL_SPI_GetError() API to check the latest error occurred
   */
}
 800629c:	bf00      	nop
 800629e:	370c      	adds	r7, #12
 80062a0:	46bd      	mov	sp, r7
 80062a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062a6:	4770      	bx	lr

080062a8 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 80062a8:	b580      	push	{r7, lr}
 80062aa:	b084      	sub	sp, #16
 80062ac:	af00      	add	r7, sp, #0
 80062ae:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 80062b0:	687b      	ldr	r3, [r7, #4]
 80062b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80062b4:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 80062b6:	68fb      	ldr	r3, [r7, #12]
 80062b8:	2200      	movs	r2, #0
 80062ba:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
  hspi->TxXferCount = 0U;
 80062be:	68fb      	ldr	r3, [r7, #12]
 80062c0:	2200      	movs	r2, #0
 80062c2:	87da      	strh	r2, [r3, #62]	; 0x3e

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 80062c4:	68f8      	ldr	r0, [r7, #12]
 80062c6:	f7ff ffe5 	bl	8006294 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 80062ca:	bf00      	nop
 80062cc:	3710      	adds	r7, #16
 80062ce:	46bd      	mov	sp, r7
 80062d0:	bd80      	pop	{r7, pc}
	...

080062d4 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 80062d4:	b580      	push	{r7, lr}
 80062d6:	b088      	sub	sp, #32
 80062d8:	af00      	add	r7, sp, #0
 80062da:	60f8      	str	r0, [r7, #12]
 80062dc:	60b9      	str	r1, [r7, #8]
 80062de:	603b      	str	r3, [r7, #0]
 80062e0:	4613      	mov	r3, r2
 80062e2:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 80062e4:	f7fc ff64 	bl	80031b0 <HAL_GetTick>
 80062e8:	4602      	mov	r2, r0
 80062ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80062ec:	1a9b      	subs	r3, r3, r2
 80062ee:	683a      	ldr	r2, [r7, #0]
 80062f0:	4413      	add	r3, r2
 80062f2:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 80062f4:	f7fc ff5c 	bl	80031b0 <HAL_GetTick>
 80062f8:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80062fa:	4b39      	ldr	r3, [pc, #228]	; (80063e0 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80062fc:	681b      	ldr	r3, [r3, #0]
 80062fe:	015b      	lsls	r3, r3, #5
 8006300:	0d1b      	lsrs	r3, r3, #20
 8006302:	69fa      	ldr	r2, [r7, #28]
 8006304:	fb02 f303 	mul.w	r3, r2, r3
 8006308:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800630a:	e054      	b.n	80063b6 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 800630c:	683b      	ldr	r3, [r7, #0]
 800630e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8006312:	d050      	beq.n	80063b6 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006314:	f7fc ff4c 	bl	80031b0 <HAL_GetTick>
 8006318:	4602      	mov	r2, r0
 800631a:	69bb      	ldr	r3, [r7, #24]
 800631c:	1ad3      	subs	r3, r2, r3
 800631e:	69fa      	ldr	r2, [r7, #28]
 8006320:	429a      	cmp	r2, r3
 8006322:	d902      	bls.n	800632a <SPI_WaitFlagStateUntilTimeout+0x56>
 8006324:	69fb      	ldr	r3, [r7, #28]
 8006326:	2b00      	cmp	r3, #0
 8006328:	d13d      	bne.n	80063a6 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800632a:	68fb      	ldr	r3, [r7, #12]
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	685a      	ldr	r2, [r3, #4]
 8006330:	68fb      	ldr	r3, [r7, #12]
 8006332:	681b      	ldr	r3, [r3, #0]
 8006334:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006338:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800633a:	68fb      	ldr	r3, [r7, #12]
 800633c:	685b      	ldr	r3, [r3, #4]
 800633e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006342:	d111      	bne.n	8006368 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006344:	68fb      	ldr	r3, [r7, #12]
 8006346:	689b      	ldr	r3, [r3, #8]
 8006348:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800634c:	d004      	beq.n	8006358 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800634e:	68fb      	ldr	r3, [r7, #12]
 8006350:	689b      	ldr	r3, [r3, #8]
 8006352:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006356:	d107      	bne.n	8006368 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8006358:	68fb      	ldr	r3, [r7, #12]
 800635a:	681b      	ldr	r3, [r3, #0]
 800635c:	681a      	ldr	r2, [r3, #0]
 800635e:	68fb      	ldr	r3, [r7, #12]
 8006360:	681b      	ldr	r3, [r3, #0]
 8006362:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006366:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006368:	68fb      	ldr	r3, [r7, #12]
 800636a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800636c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006370:	d10f      	bne.n	8006392 <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8006372:	68fb      	ldr	r3, [r7, #12]
 8006374:	681b      	ldr	r3, [r3, #0]
 8006376:	681a      	ldr	r2, [r3, #0]
 8006378:	68fb      	ldr	r3, [r7, #12]
 800637a:	681b      	ldr	r3, [r3, #0]
 800637c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006380:	601a      	str	r2, [r3, #0]
 8006382:	68fb      	ldr	r3, [r7, #12]
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	681a      	ldr	r2, [r3, #0]
 8006388:	68fb      	ldr	r3, [r7, #12]
 800638a:	681b      	ldr	r3, [r3, #0]
 800638c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006390:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8006392:	68fb      	ldr	r3, [r7, #12]
 8006394:	2201      	movs	r2, #1
 8006396:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 800639a:	68fb      	ldr	r3, [r7, #12]
 800639c:	2200      	movs	r2, #0
 800639e:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

        return HAL_TIMEOUT;
 80063a2:	2303      	movs	r3, #3
 80063a4:	e017      	b.n	80063d6 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 80063a6:	697b      	ldr	r3, [r7, #20]
 80063a8:	2b00      	cmp	r3, #0
 80063aa:	d101      	bne.n	80063b0 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 80063ac:	2300      	movs	r3, #0
 80063ae:	61fb      	str	r3, [r7, #28]
      }
      count--;
 80063b0:	697b      	ldr	r3, [r7, #20]
 80063b2:	3b01      	subs	r3, #1
 80063b4:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80063b6:	68fb      	ldr	r3, [r7, #12]
 80063b8:	681b      	ldr	r3, [r3, #0]
 80063ba:	689a      	ldr	r2, [r3, #8]
 80063bc:	68bb      	ldr	r3, [r7, #8]
 80063be:	4013      	ands	r3, r2
 80063c0:	68ba      	ldr	r2, [r7, #8]
 80063c2:	429a      	cmp	r2, r3
 80063c4:	bf0c      	ite	eq
 80063c6:	2301      	moveq	r3, #1
 80063c8:	2300      	movne	r3, #0
 80063ca:	b2db      	uxtb	r3, r3
 80063cc:	461a      	mov	r2, r3
 80063ce:	79fb      	ldrb	r3, [r7, #7]
 80063d0:	429a      	cmp	r2, r3
 80063d2:	d19b      	bne.n	800630c <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 80063d4:	2300      	movs	r3, #0
}
 80063d6:	4618      	mov	r0, r3
 80063d8:	3720      	adds	r7, #32
 80063da:	46bd      	mov	sp, r7
 80063dc:	bd80      	pop	{r7, pc}
 80063de:	bf00      	nop
 80063e0:	20000008 	.word	0x20000008

080063e4 <SPI_WaitFifoStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 80063e4:	b580      	push	{r7, lr}
 80063e6:	b08a      	sub	sp, #40	; 0x28
 80063e8:	af00      	add	r7, sp, #0
 80063ea:	60f8      	str	r0, [r7, #12]
 80063ec:	60b9      	str	r1, [r7, #8]
 80063ee:	607a      	str	r2, [r7, #4]
 80063f0:	603b      	str	r3, [r7, #0]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
 80063f2:	2300      	movs	r3, #0
 80063f4:	75fb      	strb	r3, [r7, #23]

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout = Timeout - (HAL_GetTick() - Tickstart);
 80063f6:	f7fc fedb 	bl	80031b0 <HAL_GetTick>
 80063fa:	4602      	mov	r2, r0
 80063fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80063fe:	1a9b      	subs	r3, r3, r2
 8006400:	683a      	ldr	r2, [r7, #0]
 8006402:	4413      	add	r3, r2
 8006404:	627b      	str	r3, [r7, #36]	; 0x24
  tmp_tickstart = HAL_GetTick();
 8006406:	f7fc fed3 	bl	80031b0 <HAL_GetTick>
 800640a:	6238      	str	r0, [r7, #32]

  /* Initialize the 8bit temporary pointer */
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
 800640c:	68fb      	ldr	r3, [r7, #12]
 800640e:	681b      	ldr	r3, [r3, #0]
 8006410:	330c      	adds	r3, #12
 8006412:	61fb      	str	r3, [r7, #28]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 35U) >> 20U);
 8006414:	4b3d      	ldr	r3, [pc, #244]	; (800650c <SPI_WaitFifoStateUntilTimeout+0x128>)
 8006416:	681a      	ldr	r2, [r3, #0]
 8006418:	4613      	mov	r3, r2
 800641a:	009b      	lsls	r3, r3, #2
 800641c:	4413      	add	r3, r2
 800641e:	00da      	lsls	r2, r3, #3
 8006420:	1ad3      	subs	r3, r2, r3
 8006422:	0d1b      	lsrs	r3, r3, #20
 8006424:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006426:	fb02 f303 	mul.w	r3, r2, r3
 800642a:	61bb      	str	r3, [r7, #24]

  while ((hspi->Instance->SR & Fifo) != State)
 800642c:	e060      	b.n	80064f0 <SPI_WaitFifoStateUntilTimeout+0x10c>
  {
    if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 800642e:	68bb      	ldr	r3, [r7, #8]
 8006430:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8006434:	d107      	bne.n	8006446 <SPI_WaitFifoStateUntilTimeout+0x62>
 8006436:	687b      	ldr	r3, [r7, #4]
 8006438:	2b00      	cmp	r3, #0
 800643a:	d104      	bne.n	8006446 <SPI_WaitFifoStateUntilTimeout+0x62>
    {
      /* Flush Data Register by a blank read */
      tmpreg8 = *ptmpreg8;
 800643c:	69fb      	ldr	r3, [r7, #28]
 800643e:	781b      	ldrb	r3, [r3, #0]
 8006440:	b2db      	uxtb	r3, r3
 8006442:	75fb      	strb	r3, [r7, #23]
      /* To avoid GCC warning */
      UNUSED(tmpreg8);
 8006444:	7dfb      	ldrb	r3, [r7, #23]
    }

    if (Timeout != HAL_MAX_DELAY)
 8006446:	683b      	ldr	r3, [r7, #0]
 8006448:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800644c:	d050      	beq.n	80064f0 <SPI_WaitFifoStateUntilTimeout+0x10c>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800644e:	f7fc feaf 	bl	80031b0 <HAL_GetTick>
 8006452:	4602      	mov	r2, r0
 8006454:	6a3b      	ldr	r3, [r7, #32]
 8006456:	1ad3      	subs	r3, r2, r3
 8006458:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800645a:	429a      	cmp	r2, r3
 800645c:	d902      	bls.n	8006464 <SPI_WaitFifoStateUntilTimeout+0x80>
 800645e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006460:	2b00      	cmp	r3, #0
 8006462:	d13d      	bne.n	80064e0 <SPI_WaitFifoStateUntilTimeout+0xfc>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006464:	68fb      	ldr	r3, [r7, #12]
 8006466:	681b      	ldr	r3, [r3, #0]
 8006468:	685a      	ldr	r2, [r3, #4]
 800646a:	68fb      	ldr	r3, [r7, #12]
 800646c:	681b      	ldr	r3, [r3, #0]
 800646e:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006472:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006474:	68fb      	ldr	r3, [r7, #12]
 8006476:	685b      	ldr	r3, [r3, #4]
 8006478:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800647c:	d111      	bne.n	80064a2 <SPI_WaitFifoStateUntilTimeout+0xbe>
 800647e:	68fb      	ldr	r3, [r7, #12]
 8006480:	689b      	ldr	r3, [r3, #8]
 8006482:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006486:	d004      	beq.n	8006492 <SPI_WaitFifoStateUntilTimeout+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006488:	68fb      	ldr	r3, [r7, #12]
 800648a:	689b      	ldr	r3, [r3, #8]
 800648c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006490:	d107      	bne.n	80064a2 <SPI_WaitFifoStateUntilTimeout+0xbe>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8006492:	68fb      	ldr	r3, [r7, #12]
 8006494:	681b      	ldr	r3, [r3, #0]
 8006496:	681a      	ldr	r2, [r3, #0]
 8006498:	68fb      	ldr	r3, [r7, #12]
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80064a0:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80064a2:	68fb      	ldr	r3, [r7, #12]
 80064a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80064a6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80064aa:	d10f      	bne.n	80064cc <SPI_WaitFifoStateUntilTimeout+0xe8>
        {
          SPI_RESET_CRC(hspi);
 80064ac:	68fb      	ldr	r3, [r7, #12]
 80064ae:	681b      	ldr	r3, [r3, #0]
 80064b0:	681a      	ldr	r2, [r3, #0]
 80064b2:	68fb      	ldr	r3, [r7, #12]
 80064b4:	681b      	ldr	r3, [r3, #0]
 80064b6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80064ba:	601a      	str	r2, [r3, #0]
 80064bc:	68fb      	ldr	r3, [r7, #12]
 80064be:	681b      	ldr	r3, [r3, #0]
 80064c0:	681a      	ldr	r2, [r3, #0]
 80064c2:	68fb      	ldr	r3, [r7, #12]
 80064c4:	681b      	ldr	r3, [r3, #0]
 80064c6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80064ca:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 80064cc:	68fb      	ldr	r3, [r7, #12]
 80064ce:	2201      	movs	r2, #1
 80064d0:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 80064d4:	68fb      	ldr	r3, [r7, #12]
 80064d6:	2200      	movs	r2, #0
 80064d8:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

        return HAL_TIMEOUT;
 80064dc:	2303      	movs	r3, #3
 80064de:	e010      	b.n	8006502 <SPI_WaitFifoStateUntilTimeout+0x11e>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 80064e0:	69bb      	ldr	r3, [r7, #24]
 80064e2:	2b00      	cmp	r3, #0
 80064e4:	d101      	bne.n	80064ea <SPI_WaitFifoStateUntilTimeout+0x106>
      {
        tmp_timeout = 0U;
 80064e6:	2300      	movs	r3, #0
 80064e8:	627b      	str	r3, [r7, #36]	; 0x24
      }
      count--;
 80064ea:	69bb      	ldr	r3, [r7, #24]
 80064ec:	3b01      	subs	r3, #1
 80064ee:	61bb      	str	r3, [r7, #24]
  while ((hspi->Instance->SR & Fifo) != State)
 80064f0:	68fb      	ldr	r3, [r7, #12]
 80064f2:	681b      	ldr	r3, [r3, #0]
 80064f4:	689a      	ldr	r2, [r3, #8]
 80064f6:	68bb      	ldr	r3, [r7, #8]
 80064f8:	4013      	ands	r3, r2
 80064fa:	687a      	ldr	r2, [r7, #4]
 80064fc:	429a      	cmp	r2, r3
 80064fe:	d196      	bne.n	800642e <SPI_WaitFifoStateUntilTimeout+0x4a>
    }
  }

  return HAL_OK;
 8006500:	2300      	movs	r3, #0
}
 8006502:	4618      	mov	r0, r3
 8006504:	3728      	adds	r7, #40	; 0x28
 8006506:	46bd      	mov	sp, r7
 8006508:	bd80      	pop	{r7, pc}
 800650a:	bf00      	nop
 800650c:	20000008 	.word	0x20000008

08006510 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006510:	b580      	push	{r7, lr}
 8006512:	b086      	sub	sp, #24
 8006514:	af02      	add	r7, sp, #8
 8006516:	60f8      	str	r0, [r7, #12]
 8006518:	60b9      	str	r1, [r7, #8]
 800651a:	607a      	str	r2, [r7, #4]
  /* Control if the TX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 800651c:	687b      	ldr	r3, [r7, #4]
 800651e:	9300      	str	r3, [sp, #0]
 8006520:	68bb      	ldr	r3, [r7, #8]
 8006522:	2200      	movs	r2, #0
 8006524:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 8006528:	68f8      	ldr	r0, [r7, #12]
 800652a:	f7ff ff5b 	bl	80063e4 <SPI_WaitFifoStateUntilTimeout>
 800652e:	4603      	mov	r3, r0
 8006530:	2b00      	cmp	r3, #0
 8006532:	d007      	beq.n	8006544 <SPI_EndRxTxTransaction+0x34>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006534:	68fb      	ldr	r3, [r7, #12]
 8006536:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006538:	f043 0220 	orr.w	r2, r3, #32
 800653c:	68fb      	ldr	r3, [r7, #12]
 800653e:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 8006540:	2303      	movs	r3, #3
 8006542:	e027      	b.n	8006594 <SPI_EndRxTxTransaction+0x84>
  }

  /* Control the BSY flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006544:	687b      	ldr	r3, [r7, #4]
 8006546:	9300      	str	r3, [sp, #0]
 8006548:	68bb      	ldr	r3, [r7, #8]
 800654a:	2200      	movs	r2, #0
 800654c:	2180      	movs	r1, #128	; 0x80
 800654e:	68f8      	ldr	r0, [r7, #12]
 8006550:	f7ff fec0 	bl	80062d4 <SPI_WaitFlagStateUntilTimeout>
 8006554:	4603      	mov	r3, r0
 8006556:	2b00      	cmp	r3, #0
 8006558:	d007      	beq.n	800656a <SPI_EndRxTxTransaction+0x5a>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800655a:	68fb      	ldr	r3, [r7, #12]
 800655c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800655e:	f043 0220 	orr.w	r2, r3, #32
 8006562:	68fb      	ldr	r3, [r7, #12]
 8006564:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 8006566:	2303      	movs	r3, #3
 8006568:	e014      	b.n	8006594 <SPI_EndRxTxTransaction+0x84>
  }

  /* Control if the RX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 800656a:	687b      	ldr	r3, [r7, #4]
 800656c:	9300      	str	r3, [sp, #0]
 800656e:	68bb      	ldr	r3, [r7, #8]
 8006570:	2200      	movs	r2, #0
 8006572:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8006576:	68f8      	ldr	r0, [r7, #12]
 8006578:	f7ff ff34 	bl	80063e4 <SPI_WaitFifoStateUntilTimeout>
 800657c:	4603      	mov	r3, r0
 800657e:	2b00      	cmp	r3, #0
 8006580:	d007      	beq.n	8006592 <SPI_EndRxTxTransaction+0x82>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006582:	68fb      	ldr	r3, [r7, #12]
 8006584:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006586:	f043 0220 	orr.w	r2, r3, #32
 800658a:	68fb      	ldr	r3, [r7, #12]
 800658c:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 800658e:	2303      	movs	r3, #3
 8006590:	e000      	b.n	8006594 <SPI_EndRxTxTransaction+0x84>
  }

  return HAL_OK;
 8006592:	2300      	movs	r3, #0
}
 8006594:	4618      	mov	r0, r3
 8006596:	3710      	adds	r7, #16
 8006598:	46bd      	mov	sp, r7
 800659a:	bd80      	pop	{r7, pc}

0800659c <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 800659c:	b580      	push	{r7, lr}
 800659e:	b082      	sub	sp, #8
 80065a0:	af00      	add	r7, sp, #0
 80065a2:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 80065a4:	687b      	ldr	r3, [r7, #4]
 80065a6:	2b00      	cmp	r3, #0
 80065a8:	d101      	bne.n	80065ae <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 80065aa:	2301      	movs	r3, #1
 80065ac:	e049      	b.n	8006642 <HAL_TIM_Base_Init+0xa6>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 80065ae:	687b      	ldr	r3, [r7, #4]
 80065b0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80065b4:	b2db      	uxtb	r3, r3
 80065b6:	2b00      	cmp	r3, #0
 80065b8:	d106      	bne.n	80065c8 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 80065ba:	687b      	ldr	r3, [r7, #4]
 80065bc:	2200      	movs	r2, #0
 80065be:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 80065c2:	6878      	ldr	r0, [r7, #4]
 80065c4:	f7fc fb76 	bl	8002cb4 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80065c8:	687b      	ldr	r3, [r7, #4]
 80065ca:	2202      	movs	r2, #2
 80065cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80065d0:	687b      	ldr	r3, [r7, #4]
 80065d2:	681a      	ldr	r2, [r3, #0]
 80065d4:	687b      	ldr	r3, [r7, #4]
 80065d6:	3304      	adds	r3, #4
 80065d8:	4619      	mov	r1, r3
 80065da:	4610      	mov	r0, r2
 80065dc:	f000 fe5a 	bl	8007294 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80065e0:	687b      	ldr	r3, [r7, #4]
 80065e2:	2201      	movs	r2, #1
 80065e4:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80065e8:	687b      	ldr	r3, [r7, #4]
 80065ea:	2201      	movs	r2, #1
 80065ec:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	2201      	movs	r2, #1
 80065f4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80065f8:	687b      	ldr	r3, [r7, #4]
 80065fa:	2201      	movs	r2, #1
 80065fc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006600:	687b      	ldr	r3, [r7, #4]
 8006602:	2201      	movs	r2, #1
 8006604:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006608:	687b      	ldr	r3, [r7, #4]
 800660a:	2201      	movs	r2, #1
 800660c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006610:	687b      	ldr	r3, [r7, #4]
 8006612:	2201      	movs	r2, #1
 8006614:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006618:	687b      	ldr	r3, [r7, #4]
 800661a:	2201      	movs	r2, #1
 800661c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	2201      	movs	r2, #1
 8006624:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006628:	687b      	ldr	r3, [r7, #4]
 800662a:	2201      	movs	r2, #1
 800662c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006630:	687b      	ldr	r3, [r7, #4]
 8006632:	2201      	movs	r2, #1
 8006634:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	2201      	movs	r2, #1
 800663c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8006640:	2300      	movs	r3, #0
}
 8006642:	4618      	mov	r0, r3
 8006644:	3708      	adds	r7, #8
 8006646:	46bd      	mov	sp, r7
 8006648:	bd80      	pop	{r7, pc}
	...

0800664c <HAL_TIM_Base_Start>:
  * @brief  Starts the TIM Base generation.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start(TIM_HandleTypeDef *htim)
{
 800664c:	b480      	push	{r7}
 800664e:	b085      	sub	sp, #20
 8006650:	af00      	add	r7, sp, #0
 8006652:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006654:	687b      	ldr	r3, [r7, #4]
 8006656:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800665a:	b2db      	uxtb	r3, r3
 800665c:	2b01      	cmp	r3, #1
 800665e:	d001      	beq.n	8006664 <HAL_TIM_Base_Start+0x18>
  {
    return HAL_ERROR;
 8006660:	2301      	movs	r3, #1
 8006662:	e047      	b.n	80066f4 <HAL_TIM_Base_Start+0xa8>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	2202      	movs	r2, #2
 8006668:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	681b      	ldr	r3, [r3, #0]
 8006670:	4a23      	ldr	r2, [pc, #140]	; (8006700 <HAL_TIM_Base_Start+0xb4>)
 8006672:	4293      	cmp	r3, r2
 8006674:	d01d      	beq.n	80066b2 <HAL_TIM_Base_Start+0x66>
 8006676:	687b      	ldr	r3, [r7, #4]
 8006678:	681b      	ldr	r3, [r3, #0]
 800667a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800667e:	d018      	beq.n	80066b2 <HAL_TIM_Base_Start+0x66>
 8006680:	687b      	ldr	r3, [r7, #4]
 8006682:	681b      	ldr	r3, [r3, #0]
 8006684:	4a1f      	ldr	r2, [pc, #124]	; (8006704 <HAL_TIM_Base_Start+0xb8>)
 8006686:	4293      	cmp	r3, r2
 8006688:	d013      	beq.n	80066b2 <HAL_TIM_Base_Start+0x66>
 800668a:	687b      	ldr	r3, [r7, #4]
 800668c:	681b      	ldr	r3, [r3, #0]
 800668e:	4a1e      	ldr	r2, [pc, #120]	; (8006708 <HAL_TIM_Base_Start+0xbc>)
 8006690:	4293      	cmp	r3, r2
 8006692:	d00e      	beq.n	80066b2 <HAL_TIM_Base_Start+0x66>
 8006694:	687b      	ldr	r3, [r7, #4]
 8006696:	681b      	ldr	r3, [r3, #0]
 8006698:	4a1c      	ldr	r2, [pc, #112]	; (800670c <HAL_TIM_Base_Start+0xc0>)
 800669a:	4293      	cmp	r3, r2
 800669c:	d009      	beq.n	80066b2 <HAL_TIM_Base_Start+0x66>
 800669e:	687b      	ldr	r3, [r7, #4]
 80066a0:	681b      	ldr	r3, [r3, #0]
 80066a2:	4a1b      	ldr	r2, [pc, #108]	; (8006710 <HAL_TIM_Base_Start+0xc4>)
 80066a4:	4293      	cmp	r3, r2
 80066a6:	d004      	beq.n	80066b2 <HAL_TIM_Base_Start+0x66>
 80066a8:	687b      	ldr	r3, [r7, #4]
 80066aa:	681b      	ldr	r3, [r3, #0]
 80066ac:	4a19      	ldr	r2, [pc, #100]	; (8006714 <HAL_TIM_Base_Start+0xc8>)
 80066ae:	4293      	cmp	r3, r2
 80066b0:	d115      	bne.n	80066de <HAL_TIM_Base_Start+0x92>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80066b2:	687b      	ldr	r3, [r7, #4]
 80066b4:	681b      	ldr	r3, [r3, #0]
 80066b6:	689a      	ldr	r2, [r3, #8]
 80066b8:	4b17      	ldr	r3, [pc, #92]	; (8006718 <HAL_TIM_Base_Start+0xcc>)
 80066ba:	4013      	ands	r3, r2
 80066bc:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80066be:	68fb      	ldr	r3, [r7, #12]
 80066c0:	2b06      	cmp	r3, #6
 80066c2:	d015      	beq.n	80066f0 <HAL_TIM_Base_Start+0xa4>
 80066c4:	68fb      	ldr	r3, [r7, #12]
 80066c6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80066ca:	d011      	beq.n	80066f0 <HAL_TIM_Base_Start+0xa4>
    {
      __HAL_TIM_ENABLE(htim);
 80066cc:	687b      	ldr	r3, [r7, #4]
 80066ce:	681b      	ldr	r3, [r3, #0]
 80066d0:	681a      	ldr	r2, [r3, #0]
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	681b      	ldr	r3, [r3, #0]
 80066d6:	f042 0201 	orr.w	r2, r2, #1
 80066da:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80066dc:	e008      	b.n	80066f0 <HAL_TIM_Base_Start+0xa4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	681b      	ldr	r3, [r3, #0]
 80066e2:	681a      	ldr	r2, [r3, #0]
 80066e4:	687b      	ldr	r3, [r7, #4]
 80066e6:	681b      	ldr	r3, [r3, #0]
 80066e8:	f042 0201 	orr.w	r2, r2, #1
 80066ec:	601a      	str	r2, [r3, #0]
 80066ee:	e000      	b.n	80066f2 <HAL_TIM_Base_Start+0xa6>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80066f0:	bf00      	nop
  }

  /* Return function status */
  return HAL_OK;
 80066f2:	2300      	movs	r3, #0
}
 80066f4:	4618      	mov	r0, r3
 80066f6:	3714      	adds	r7, #20
 80066f8:	46bd      	mov	sp, r7
 80066fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066fe:	4770      	bx	lr
 8006700:	40012c00 	.word	0x40012c00
 8006704:	40000400 	.word	0x40000400
 8006708:	40000800 	.word	0x40000800
 800670c:	40000c00 	.word	0x40000c00
 8006710:	40013400 	.word	0x40013400
 8006714:	40014000 	.word	0x40014000
 8006718:	00010007 	.word	0x00010007

0800671c <HAL_TIM_Base_Stop>:
  * @brief  Stops the TIM Base generation.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Stop(TIM_HandleTypeDef *htim)
{
 800671c:	b480      	push	{r7}
 800671e:	b083      	sub	sp, #12
 8006720:	af00      	add	r7, sp, #0
 8006722:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Disable the Peripheral */
  __HAL_TIM_DISABLE(htim);
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	681b      	ldr	r3, [r3, #0]
 8006728:	6a1a      	ldr	r2, [r3, #32]
 800672a:	f241 1311 	movw	r3, #4369	; 0x1111
 800672e:	4013      	ands	r3, r2
 8006730:	2b00      	cmp	r3, #0
 8006732:	d10f      	bne.n	8006754 <HAL_TIM_Base_Stop+0x38>
 8006734:	687b      	ldr	r3, [r7, #4]
 8006736:	681b      	ldr	r3, [r3, #0]
 8006738:	6a1a      	ldr	r2, [r3, #32]
 800673a:	f240 4344 	movw	r3, #1092	; 0x444
 800673e:	4013      	ands	r3, r2
 8006740:	2b00      	cmp	r3, #0
 8006742:	d107      	bne.n	8006754 <HAL_TIM_Base_Stop+0x38>
 8006744:	687b      	ldr	r3, [r7, #4]
 8006746:	681b      	ldr	r3, [r3, #0]
 8006748:	681a      	ldr	r2, [r3, #0]
 800674a:	687b      	ldr	r3, [r7, #4]
 800674c:	681b      	ldr	r3, [r3, #0]
 800674e:	f022 0201 	bic.w	r2, r2, #1
 8006752:	601a      	str	r2, [r3, #0]

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_READY;
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	2201      	movs	r2, #1
 8006758:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Return function status */
  return HAL_OK;
 800675c:	2300      	movs	r3, #0
}
 800675e:	4618      	mov	r0, r3
 8006760:	370c      	adds	r7, #12
 8006762:	46bd      	mov	sp, r7
 8006764:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006768:	4770      	bx	lr
	...

0800676c <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 800676c:	b480      	push	{r7}
 800676e:	b085      	sub	sp, #20
 8006770:	af00      	add	r7, sp, #0
 8006772:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006774:	687b      	ldr	r3, [r7, #4]
 8006776:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800677a:	b2db      	uxtb	r3, r3
 800677c:	2b01      	cmp	r3, #1
 800677e:	d001      	beq.n	8006784 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8006780:	2301      	movs	r3, #1
 8006782:	e04f      	b.n	8006824 <HAL_TIM_Base_Start_IT+0xb8>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006784:	687b      	ldr	r3, [r7, #4]
 8006786:	2202      	movs	r2, #2
 8006788:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800678c:	687b      	ldr	r3, [r7, #4]
 800678e:	681b      	ldr	r3, [r3, #0]
 8006790:	68da      	ldr	r2, [r3, #12]
 8006792:	687b      	ldr	r3, [r7, #4]
 8006794:	681b      	ldr	r3, [r3, #0]
 8006796:	f042 0201 	orr.w	r2, r2, #1
 800679a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	681b      	ldr	r3, [r3, #0]
 80067a0:	4a23      	ldr	r2, [pc, #140]	; (8006830 <HAL_TIM_Base_Start_IT+0xc4>)
 80067a2:	4293      	cmp	r3, r2
 80067a4:	d01d      	beq.n	80067e2 <HAL_TIM_Base_Start_IT+0x76>
 80067a6:	687b      	ldr	r3, [r7, #4]
 80067a8:	681b      	ldr	r3, [r3, #0]
 80067aa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80067ae:	d018      	beq.n	80067e2 <HAL_TIM_Base_Start_IT+0x76>
 80067b0:	687b      	ldr	r3, [r7, #4]
 80067b2:	681b      	ldr	r3, [r3, #0]
 80067b4:	4a1f      	ldr	r2, [pc, #124]	; (8006834 <HAL_TIM_Base_Start_IT+0xc8>)
 80067b6:	4293      	cmp	r3, r2
 80067b8:	d013      	beq.n	80067e2 <HAL_TIM_Base_Start_IT+0x76>
 80067ba:	687b      	ldr	r3, [r7, #4]
 80067bc:	681b      	ldr	r3, [r3, #0]
 80067be:	4a1e      	ldr	r2, [pc, #120]	; (8006838 <HAL_TIM_Base_Start_IT+0xcc>)
 80067c0:	4293      	cmp	r3, r2
 80067c2:	d00e      	beq.n	80067e2 <HAL_TIM_Base_Start_IT+0x76>
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	681b      	ldr	r3, [r3, #0]
 80067c8:	4a1c      	ldr	r2, [pc, #112]	; (800683c <HAL_TIM_Base_Start_IT+0xd0>)
 80067ca:	4293      	cmp	r3, r2
 80067cc:	d009      	beq.n	80067e2 <HAL_TIM_Base_Start_IT+0x76>
 80067ce:	687b      	ldr	r3, [r7, #4]
 80067d0:	681b      	ldr	r3, [r3, #0]
 80067d2:	4a1b      	ldr	r2, [pc, #108]	; (8006840 <HAL_TIM_Base_Start_IT+0xd4>)
 80067d4:	4293      	cmp	r3, r2
 80067d6:	d004      	beq.n	80067e2 <HAL_TIM_Base_Start_IT+0x76>
 80067d8:	687b      	ldr	r3, [r7, #4]
 80067da:	681b      	ldr	r3, [r3, #0]
 80067dc:	4a19      	ldr	r2, [pc, #100]	; (8006844 <HAL_TIM_Base_Start_IT+0xd8>)
 80067de:	4293      	cmp	r3, r2
 80067e0:	d115      	bne.n	800680e <HAL_TIM_Base_Start_IT+0xa2>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80067e2:	687b      	ldr	r3, [r7, #4]
 80067e4:	681b      	ldr	r3, [r3, #0]
 80067e6:	689a      	ldr	r2, [r3, #8]
 80067e8:	4b17      	ldr	r3, [pc, #92]	; (8006848 <HAL_TIM_Base_Start_IT+0xdc>)
 80067ea:	4013      	ands	r3, r2
 80067ec:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80067ee:	68fb      	ldr	r3, [r7, #12]
 80067f0:	2b06      	cmp	r3, #6
 80067f2:	d015      	beq.n	8006820 <HAL_TIM_Base_Start_IT+0xb4>
 80067f4:	68fb      	ldr	r3, [r7, #12]
 80067f6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80067fa:	d011      	beq.n	8006820 <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 80067fc:	687b      	ldr	r3, [r7, #4]
 80067fe:	681b      	ldr	r3, [r3, #0]
 8006800:	681a      	ldr	r2, [r3, #0]
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	681b      	ldr	r3, [r3, #0]
 8006806:	f042 0201 	orr.w	r2, r2, #1
 800680a:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800680c:	e008      	b.n	8006820 <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800680e:	687b      	ldr	r3, [r7, #4]
 8006810:	681b      	ldr	r3, [r3, #0]
 8006812:	681a      	ldr	r2, [r3, #0]
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	681b      	ldr	r3, [r3, #0]
 8006818:	f042 0201 	orr.w	r2, r2, #1
 800681c:	601a      	str	r2, [r3, #0]
 800681e:	e000      	b.n	8006822 <HAL_TIM_Base_Start_IT+0xb6>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006820:	bf00      	nop
  }

  /* Return function status */
  return HAL_OK;
 8006822:	2300      	movs	r3, #0
}
 8006824:	4618      	mov	r0, r3
 8006826:	3714      	adds	r7, #20
 8006828:	46bd      	mov	sp, r7
 800682a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800682e:	4770      	bx	lr
 8006830:	40012c00 	.word	0x40012c00
 8006834:	40000400 	.word	0x40000400
 8006838:	40000800 	.word	0x40000800
 800683c:	40000c00 	.word	0x40000c00
 8006840:	40013400 	.word	0x40013400
 8006844:	40014000 	.word	0x40014000
 8006848:	00010007 	.word	0x00010007

0800684c <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 800684c:	b580      	push	{r7, lr}
 800684e:	b082      	sub	sp, #8
 8006850:	af00      	add	r7, sp, #0
 8006852:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006854:	687b      	ldr	r3, [r7, #4]
 8006856:	2b00      	cmp	r3, #0
 8006858:	d101      	bne.n	800685e <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 800685a:	2301      	movs	r3, #1
 800685c:	e049      	b.n	80068f2 <HAL_TIM_PWM_Init+0xa6>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800685e:	687b      	ldr	r3, [r7, #4]
 8006860:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006864:	b2db      	uxtb	r3, r3
 8006866:	2b00      	cmp	r3, #0
 8006868:	d106      	bne.n	8006878 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800686a:	687b      	ldr	r3, [r7, #4]
 800686c:	2200      	movs	r2, #0
 800686e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8006872:	6878      	ldr	r0, [r7, #4]
 8006874:	f000 f841 	bl	80068fa <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006878:	687b      	ldr	r3, [r7, #4]
 800687a:	2202      	movs	r2, #2
 800687c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006880:	687b      	ldr	r3, [r7, #4]
 8006882:	681a      	ldr	r2, [r3, #0]
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	3304      	adds	r3, #4
 8006888:	4619      	mov	r1, r3
 800688a:	4610      	mov	r0, r2
 800688c:	f000 fd02 	bl	8007294 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006890:	687b      	ldr	r3, [r7, #4]
 8006892:	2201      	movs	r2, #1
 8006894:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	2201      	movs	r2, #1
 800689c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	2201      	movs	r2, #1
 80068a4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80068a8:	687b      	ldr	r3, [r7, #4]
 80068aa:	2201      	movs	r2, #1
 80068ac:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	2201      	movs	r2, #1
 80068b4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80068b8:	687b      	ldr	r3, [r7, #4]
 80068ba:	2201      	movs	r2, #1
 80068bc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	2201      	movs	r2, #1
 80068c4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80068c8:	687b      	ldr	r3, [r7, #4]
 80068ca:	2201      	movs	r2, #1
 80068cc:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80068d0:	687b      	ldr	r3, [r7, #4]
 80068d2:	2201      	movs	r2, #1
 80068d4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80068d8:	687b      	ldr	r3, [r7, #4]
 80068da:	2201      	movs	r2, #1
 80068dc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80068e0:	687b      	ldr	r3, [r7, #4]
 80068e2:	2201      	movs	r2, #1
 80068e4:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80068e8:	687b      	ldr	r3, [r7, #4]
 80068ea:	2201      	movs	r2, #1
 80068ec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 80068f0:	2300      	movs	r3, #0
}
 80068f2:	4618      	mov	r0, r3
 80068f4:	3708      	adds	r7, #8
 80068f6:	46bd      	mov	sp, r7
 80068f8:	bd80      	pop	{r7, pc}

080068fa <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 80068fa:	b480      	push	{r7}
 80068fc:	b083      	sub	sp, #12
 80068fe:	af00      	add	r7, sp, #0
 8006900:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 8006902:	bf00      	nop
 8006904:	370c      	adds	r7, #12
 8006906:	46bd      	mov	sp, r7
 8006908:	f85d 7b04 	ldr.w	r7, [sp], #4
 800690c:	4770      	bx	lr
	...

08006910 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_5: TIM Channel 5 selected
  *            @arg TIM_CHANNEL_6: TIM Channel 6 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8006910:	b580      	push	{r7, lr}
 8006912:	b084      	sub	sp, #16
 8006914:	af00      	add	r7, sp, #0
 8006916:	6078      	str	r0, [r7, #4]
 8006918:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800691a:	683b      	ldr	r3, [r7, #0]
 800691c:	2b00      	cmp	r3, #0
 800691e:	d109      	bne.n	8006934 <HAL_TIM_PWM_Start+0x24>
 8006920:	687b      	ldr	r3, [r7, #4]
 8006922:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006926:	b2db      	uxtb	r3, r3
 8006928:	2b01      	cmp	r3, #1
 800692a:	bf14      	ite	ne
 800692c:	2301      	movne	r3, #1
 800692e:	2300      	moveq	r3, #0
 8006930:	b2db      	uxtb	r3, r3
 8006932:	e03c      	b.n	80069ae <HAL_TIM_PWM_Start+0x9e>
 8006934:	683b      	ldr	r3, [r7, #0]
 8006936:	2b04      	cmp	r3, #4
 8006938:	d109      	bne.n	800694e <HAL_TIM_PWM_Start+0x3e>
 800693a:	687b      	ldr	r3, [r7, #4]
 800693c:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8006940:	b2db      	uxtb	r3, r3
 8006942:	2b01      	cmp	r3, #1
 8006944:	bf14      	ite	ne
 8006946:	2301      	movne	r3, #1
 8006948:	2300      	moveq	r3, #0
 800694a:	b2db      	uxtb	r3, r3
 800694c:	e02f      	b.n	80069ae <HAL_TIM_PWM_Start+0x9e>
 800694e:	683b      	ldr	r3, [r7, #0]
 8006950:	2b08      	cmp	r3, #8
 8006952:	d109      	bne.n	8006968 <HAL_TIM_PWM_Start+0x58>
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800695a:	b2db      	uxtb	r3, r3
 800695c:	2b01      	cmp	r3, #1
 800695e:	bf14      	ite	ne
 8006960:	2301      	movne	r3, #1
 8006962:	2300      	moveq	r3, #0
 8006964:	b2db      	uxtb	r3, r3
 8006966:	e022      	b.n	80069ae <HAL_TIM_PWM_Start+0x9e>
 8006968:	683b      	ldr	r3, [r7, #0]
 800696a:	2b0c      	cmp	r3, #12
 800696c:	d109      	bne.n	8006982 <HAL_TIM_PWM_Start+0x72>
 800696e:	687b      	ldr	r3, [r7, #4]
 8006970:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8006974:	b2db      	uxtb	r3, r3
 8006976:	2b01      	cmp	r3, #1
 8006978:	bf14      	ite	ne
 800697a:	2301      	movne	r3, #1
 800697c:	2300      	moveq	r3, #0
 800697e:	b2db      	uxtb	r3, r3
 8006980:	e015      	b.n	80069ae <HAL_TIM_PWM_Start+0x9e>
 8006982:	683b      	ldr	r3, [r7, #0]
 8006984:	2b10      	cmp	r3, #16
 8006986:	d109      	bne.n	800699c <HAL_TIM_PWM_Start+0x8c>
 8006988:	687b      	ldr	r3, [r7, #4]
 800698a:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800698e:	b2db      	uxtb	r3, r3
 8006990:	2b01      	cmp	r3, #1
 8006992:	bf14      	ite	ne
 8006994:	2301      	movne	r3, #1
 8006996:	2300      	moveq	r3, #0
 8006998:	b2db      	uxtb	r3, r3
 800699a:	e008      	b.n	80069ae <HAL_TIM_PWM_Start+0x9e>
 800699c:	687b      	ldr	r3, [r7, #4]
 800699e:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 80069a2:	b2db      	uxtb	r3, r3
 80069a4:	2b01      	cmp	r3, #1
 80069a6:	bf14      	ite	ne
 80069a8:	2301      	movne	r3, #1
 80069aa:	2300      	moveq	r3, #0
 80069ac:	b2db      	uxtb	r3, r3
 80069ae:	2b00      	cmp	r3, #0
 80069b0:	d001      	beq.n	80069b6 <HAL_TIM_PWM_Start+0xa6>
  {
    return HAL_ERROR;
 80069b2:	2301      	movs	r3, #1
 80069b4:	e09c      	b.n	8006af0 <HAL_TIM_PWM_Start+0x1e0>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 80069b6:	683b      	ldr	r3, [r7, #0]
 80069b8:	2b00      	cmp	r3, #0
 80069ba:	d104      	bne.n	80069c6 <HAL_TIM_PWM_Start+0xb6>
 80069bc:	687b      	ldr	r3, [r7, #4]
 80069be:	2202      	movs	r2, #2
 80069c0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80069c4:	e023      	b.n	8006a0e <HAL_TIM_PWM_Start+0xfe>
 80069c6:	683b      	ldr	r3, [r7, #0]
 80069c8:	2b04      	cmp	r3, #4
 80069ca:	d104      	bne.n	80069d6 <HAL_TIM_PWM_Start+0xc6>
 80069cc:	687b      	ldr	r3, [r7, #4]
 80069ce:	2202      	movs	r2, #2
 80069d0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80069d4:	e01b      	b.n	8006a0e <HAL_TIM_PWM_Start+0xfe>
 80069d6:	683b      	ldr	r3, [r7, #0]
 80069d8:	2b08      	cmp	r3, #8
 80069da:	d104      	bne.n	80069e6 <HAL_TIM_PWM_Start+0xd6>
 80069dc:	687b      	ldr	r3, [r7, #4]
 80069de:	2202      	movs	r2, #2
 80069e0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80069e4:	e013      	b.n	8006a0e <HAL_TIM_PWM_Start+0xfe>
 80069e6:	683b      	ldr	r3, [r7, #0]
 80069e8:	2b0c      	cmp	r3, #12
 80069ea:	d104      	bne.n	80069f6 <HAL_TIM_PWM_Start+0xe6>
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	2202      	movs	r2, #2
 80069f0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80069f4:	e00b      	b.n	8006a0e <HAL_TIM_PWM_Start+0xfe>
 80069f6:	683b      	ldr	r3, [r7, #0]
 80069f8:	2b10      	cmp	r3, #16
 80069fa:	d104      	bne.n	8006a06 <HAL_TIM_PWM_Start+0xf6>
 80069fc:	687b      	ldr	r3, [r7, #4]
 80069fe:	2202      	movs	r2, #2
 8006a00:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006a04:	e003      	b.n	8006a0e <HAL_TIM_PWM_Start+0xfe>
 8006a06:	687b      	ldr	r3, [r7, #4]
 8006a08:	2202      	movs	r2, #2
 8006a0a:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8006a0e:	687b      	ldr	r3, [r7, #4]
 8006a10:	681b      	ldr	r3, [r3, #0]
 8006a12:	2201      	movs	r2, #1
 8006a14:	6839      	ldr	r1, [r7, #0]
 8006a16:	4618      	mov	r0, r3
 8006a18:	f001 f846 	bl	8007aa8 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8006a1c:	687b      	ldr	r3, [r7, #4]
 8006a1e:	681b      	ldr	r3, [r3, #0]
 8006a20:	4a35      	ldr	r2, [pc, #212]	; (8006af8 <HAL_TIM_PWM_Start+0x1e8>)
 8006a22:	4293      	cmp	r3, r2
 8006a24:	d013      	beq.n	8006a4e <HAL_TIM_PWM_Start+0x13e>
 8006a26:	687b      	ldr	r3, [r7, #4]
 8006a28:	681b      	ldr	r3, [r3, #0]
 8006a2a:	4a34      	ldr	r2, [pc, #208]	; (8006afc <HAL_TIM_PWM_Start+0x1ec>)
 8006a2c:	4293      	cmp	r3, r2
 8006a2e:	d00e      	beq.n	8006a4e <HAL_TIM_PWM_Start+0x13e>
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	681b      	ldr	r3, [r3, #0]
 8006a34:	4a32      	ldr	r2, [pc, #200]	; (8006b00 <HAL_TIM_PWM_Start+0x1f0>)
 8006a36:	4293      	cmp	r3, r2
 8006a38:	d009      	beq.n	8006a4e <HAL_TIM_PWM_Start+0x13e>
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	681b      	ldr	r3, [r3, #0]
 8006a3e:	4a31      	ldr	r2, [pc, #196]	; (8006b04 <HAL_TIM_PWM_Start+0x1f4>)
 8006a40:	4293      	cmp	r3, r2
 8006a42:	d004      	beq.n	8006a4e <HAL_TIM_PWM_Start+0x13e>
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	681b      	ldr	r3, [r3, #0]
 8006a48:	4a2f      	ldr	r2, [pc, #188]	; (8006b08 <HAL_TIM_PWM_Start+0x1f8>)
 8006a4a:	4293      	cmp	r3, r2
 8006a4c:	d101      	bne.n	8006a52 <HAL_TIM_PWM_Start+0x142>
 8006a4e:	2301      	movs	r3, #1
 8006a50:	e000      	b.n	8006a54 <HAL_TIM_PWM_Start+0x144>
 8006a52:	2300      	movs	r3, #0
 8006a54:	2b00      	cmp	r3, #0
 8006a56:	d007      	beq.n	8006a68 <HAL_TIM_PWM_Start+0x158>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 8006a58:	687b      	ldr	r3, [r7, #4]
 8006a5a:	681b      	ldr	r3, [r3, #0]
 8006a5c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006a5e:	687b      	ldr	r3, [r7, #4]
 8006a60:	681b      	ldr	r3, [r3, #0]
 8006a62:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006a66:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	681b      	ldr	r3, [r3, #0]
 8006a6c:	4a22      	ldr	r2, [pc, #136]	; (8006af8 <HAL_TIM_PWM_Start+0x1e8>)
 8006a6e:	4293      	cmp	r3, r2
 8006a70:	d01d      	beq.n	8006aae <HAL_TIM_PWM_Start+0x19e>
 8006a72:	687b      	ldr	r3, [r7, #4]
 8006a74:	681b      	ldr	r3, [r3, #0]
 8006a76:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006a7a:	d018      	beq.n	8006aae <HAL_TIM_PWM_Start+0x19e>
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	681b      	ldr	r3, [r3, #0]
 8006a80:	4a22      	ldr	r2, [pc, #136]	; (8006b0c <HAL_TIM_PWM_Start+0x1fc>)
 8006a82:	4293      	cmp	r3, r2
 8006a84:	d013      	beq.n	8006aae <HAL_TIM_PWM_Start+0x19e>
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	681b      	ldr	r3, [r3, #0]
 8006a8a:	4a21      	ldr	r2, [pc, #132]	; (8006b10 <HAL_TIM_PWM_Start+0x200>)
 8006a8c:	4293      	cmp	r3, r2
 8006a8e:	d00e      	beq.n	8006aae <HAL_TIM_PWM_Start+0x19e>
 8006a90:	687b      	ldr	r3, [r7, #4]
 8006a92:	681b      	ldr	r3, [r3, #0]
 8006a94:	4a1f      	ldr	r2, [pc, #124]	; (8006b14 <HAL_TIM_PWM_Start+0x204>)
 8006a96:	4293      	cmp	r3, r2
 8006a98:	d009      	beq.n	8006aae <HAL_TIM_PWM_Start+0x19e>
 8006a9a:	687b      	ldr	r3, [r7, #4]
 8006a9c:	681b      	ldr	r3, [r3, #0]
 8006a9e:	4a17      	ldr	r2, [pc, #92]	; (8006afc <HAL_TIM_PWM_Start+0x1ec>)
 8006aa0:	4293      	cmp	r3, r2
 8006aa2:	d004      	beq.n	8006aae <HAL_TIM_PWM_Start+0x19e>
 8006aa4:	687b      	ldr	r3, [r7, #4]
 8006aa6:	681b      	ldr	r3, [r3, #0]
 8006aa8:	4a15      	ldr	r2, [pc, #84]	; (8006b00 <HAL_TIM_PWM_Start+0x1f0>)
 8006aaa:	4293      	cmp	r3, r2
 8006aac:	d115      	bne.n	8006ada <HAL_TIM_PWM_Start+0x1ca>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006aae:	687b      	ldr	r3, [r7, #4]
 8006ab0:	681b      	ldr	r3, [r3, #0]
 8006ab2:	689a      	ldr	r2, [r3, #8]
 8006ab4:	4b18      	ldr	r3, [pc, #96]	; (8006b18 <HAL_TIM_PWM_Start+0x208>)
 8006ab6:	4013      	ands	r3, r2
 8006ab8:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006aba:	68fb      	ldr	r3, [r7, #12]
 8006abc:	2b06      	cmp	r3, #6
 8006abe:	d015      	beq.n	8006aec <HAL_TIM_PWM_Start+0x1dc>
 8006ac0:	68fb      	ldr	r3, [r7, #12]
 8006ac2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006ac6:	d011      	beq.n	8006aec <HAL_TIM_PWM_Start+0x1dc>
    {
      __HAL_TIM_ENABLE(htim);
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	681b      	ldr	r3, [r3, #0]
 8006acc:	681a      	ldr	r2, [r3, #0]
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	681b      	ldr	r3, [r3, #0]
 8006ad2:	f042 0201 	orr.w	r2, r2, #1
 8006ad6:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006ad8:	e008      	b.n	8006aec <HAL_TIM_PWM_Start+0x1dc>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006ada:	687b      	ldr	r3, [r7, #4]
 8006adc:	681b      	ldr	r3, [r3, #0]
 8006ade:	681a      	ldr	r2, [r3, #0]
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	681b      	ldr	r3, [r3, #0]
 8006ae4:	f042 0201 	orr.w	r2, r2, #1
 8006ae8:	601a      	str	r2, [r3, #0]
 8006aea:	e000      	b.n	8006aee <HAL_TIM_PWM_Start+0x1de>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006aec:	bf00      	nop
  }

  /* Return function status */
  return HAL_OK;
 8006aee:	2300      	movs	r3, #0
}
 8006af0:	4618      	mov	r0, r3
 8006af2:	3710      	adds	r7, #16
 8006af4:	46bd      	mov	sp, r7
 8006af6:	bd80      	pop	{r7, pc}
 8006af8:	40012c00 	.word	0x40012c00
 8006afc:	40013400 	.word	0x40013400
 8006b00:	40014000 	.word	0x40014000
 8006b04:	40014400 	.word	0x40014400
 8006b08:	40014800 	.word	0x40014800
 8006b0c:	40000400 	.word	0x40000400
 8006b10:	40000800 	.word	0x40000800
 8006b14:	40000c00 	.word	0x40000c00
 8006b18:	00010007 	.word	0x00010007

08006b1c <HAL_TIM_PWM_Stop>:
  *            @arg TIM_CHANNEL_5: TIM Channel 5 selected
  *            @arg TIM_CHANNEL_6: TIM Channel 6 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8006b1c:	b580      	push	{r7, lr}
 8006b1e:	b082      	sub	sp, #8
 8006b20:	af00      	add	r7, sp, #0
 8006b22:	6078      	str	r0, [r7, #4]
 8006b24:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Disable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 8006b26:	687b      	ldr	r3, [r7, #4]
 8006b28:	681b      	ldr	r3, [r3, #0]
 8006b2a:	2200      	movs	r2, #0
 8006b2c:	6839      	ldr	r1, [r7, #0]
 8006b2e:	4618      	mov	r0, r3
 8006b30:	f000 ffba 	bl	8007aa8 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8006b34:	687b      	ldr	r3, [r7, #4]
 8006b36:	681b      	ldr	r3, [r3, #0]
 8006b38:	4a3e      	ldr	r2, [pc, #248]	; (8006c34 <HAL_TIM_PWM_Stop+0x118>)
 8006b3a:	4293      	cmp	r3, r2
 8006b3c:	d013      	beq.n	8006b66 <HAL_TIM_PWM_Stop+0x4a>
 8006b3e:	687b      	ldr	r3, [r7, #4]
 8006b40:	681b      	ldr	r3, [r3, #0]
 8006b42:	4a3d      	ldr	r2, [pc, #244]	; (8006c38 <HAL_TIM_PWM_Stop+0x11c>)
 8006b44:	4293      	cmp	r3, r2
 8006b46:	d00e      	beq.n	8006b66 <HAL_TIM_PWM_Stop+0x4a>
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	681b      	ldr	r3, [r3, #0]
 8006b4c:	4a3b      	ldr	r2, [pc, #236]	; (8006c3c <HAL_TIM_PWM_Stop+0x120>)
 8006b4e:	4293      	cmp	r3, r2
 8006b50:	d009      	beq.n	8006b66 <HAL_TIM_PWM_Stop+0x4a>
 8006b52:	687b      	ldr	r3, [r7, #4]
 8006b54:	681b      	ldr	r3, [r3, #0]
 8006b56:	4a3a      	ldr	r2, [pc, #232]	; (8006c40 <HAL_TIM_PWM_Stop+0x124>)
 8006b58:	4293      	cmp	r3, r2
 8006b5a:	d004      	beq.n	8006b66 <HAL_TIM_PWM_Stop+0x4a>
 8006b5c:	687b      	ldr	r3, [r7, #4]
 8006b5e:	681b      	ldr	r3, [r3, #0]
 8006b60:	4a38      	ldr	r2, [pc, #224]	; (8006c44 <HAL_TIM_PWM_Stop+0x128>)
 8006b62:	4293      	cmp	r3, r2
 8006b64:	d101      	bne.n	8006b6a <HAL_TIM_PWM_Stop+0x4e>
 8006b66:	2301      	movs	r3, #1
 8006b68:	e000      	b.n	8006b6c <HAL_TIM_PWM_Stop+0x50>
 8006b6a:	2300      	movs	r3, #0
 8006b6c:	2b00      	cmp	r3, #0
 8006b6e:	d017      	beq.n	8006ba0 <HAL_TIM_PWM_Stop+0x84>
  {
    /* Disable the Main Output */
    __HAL_TIM_MOE_DISABLE(htim);
 8006b70:	687b      	ldr	r3, [r7, #4]
 8006b72:	681b      	ldr	r3, [r3, #0]
 8006b74:	6a1a      	ldr	r2, [r3, #32]
 8006b76:	f241 1311 	movw	r3, #4369	; 0x1111
 8006b7a:	4013      	ands	r3, r2
 8006b7c:	2b00      	cmp	r3, #0
 8006b7e:	d10f      	bne.n	8006ba0 <HAL_TIM_PWM_Stop+0x84>
 8006b80:	687b      	ldr	r3, [r7, #4]
 8006b82:	681b      	ldr	r3, [r3, #0]
 8006b84:	6a1a      	ldr	r2, [r3, #32]
 8006b86:	f240 4344 	movw	r3, #1092	; 0x444
 8006b8a:	4013      	ands	r3, r2
 8006b8c:	2b00      	cmp	r3, #0
 8006b8e:	d107      	bne.n	8006ba0 <HAL_TIM_PWM_Stop+0x84>
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	681b      	ldr	r3, [r3, #0]
 8006b94:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006b96:	687b      	ldr	r3, [r7, #4]
 8006b98:	681b      	ldr	r3, [r3, #0]
 8006b9a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006b9e:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Disable the Peripheral */
  __HAL_TIM_DISABLE(htim);
 8006ba0:	687b      	ldr	r3, [r7, #4]
 8006ba2:	681b      	ldr	r3, [r3, #0]
 8006ba4:	6a1a      	ldr	r2, [r3, #32]
 8006ba6:	f241 1311 	movw	r3, #4369	; 0x1111
 8006baa:	4013      	ands	r3, r2
 8006bac:	2b00      	cmp	r3, #0
 8006bae:	d10f      	bne.n	8006bd0 <HAL_TIM_PWM_Stop+0xb4>
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	681b      	ldr	r3, [r3, #0]
 8006bb4:	6a1a      	ldr	r2, [r3, #32]
 8006bb6:	f240 4344 	movw	r3, #1092	; 0x444
 8006bba:	4013      	ands	r3, r2
 8006bbc:	2b00      	cmp	r3, #0
 8006bbe:	d107      	bne.n	8006bd0 <HAL_TIM_PWM_Stop+0xb4>
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	681b      	ldr	r3, [r3, #0]
 8006bc4:	681a      	ldr	r2, [r3, #0]
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	681b      	ldr	r3, [r3, #0]
 8006bca:	f022 0201 	bic.w	r2, r2, #1
 8006bce:	601a      	str	r2, [r3, #0]

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 8006bd0:	683b      	ldr	r3, [r7, #0]
 8006bd2:	2b00      	cmp	r3, #0
 8006bd4:	d104      	bne.n	8006be0 <HAL_TIM_PWM_Stop+0xc4>
 8006bd6:	687b      	ldr	r3, [r7, #4]
 8006bd8:	2201      	movs	r2, #1
 8006bda:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006bde:	e023      	b.n	8006c28 <HAL_TIM_PWM_Stop+0x10c>
 8006be0:	683b      	ldr	r3, [r7, #0]
 8006be2:	2b04      	cmp	r3, #4
 8006be4:	d104      	bne.n	8006bf0 <HAL_TIM_PWM_Stop+0xd4>
 8006be6:	687b      	ldr	r3, [r7, #4]
 8006be8:	2201      	movs	r2, #1
 8006bea:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006bee:	e01b      	b.n	8006c28 <HAL_TIM_PWM_Stop+0x10c>
 8006bf0:	683b      	ldr	r3, [r7, #0]
 8006bf2:	2b08      	cmp	r3, #8
 8006bf4:	d104      	bne.n	8006c00 <HAL_TIM_PWM_Stop+0xe4>
 8006bf6:	687b      	ldr	r3, [r7, #4]
 8006bf8:	2201      	movs	r2, #1
 8006bfa:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006bfe:	e013      	b.n	8006c28 <HAL_TIM_PWM_Stop+0x10c>
 8006c00:	683b      	ldr	r3, [r7, #0]
 8006c02:	2b0c      	cmp	r3, #12
 8006c04:	d104      	bne.n	8006c10 <HAL_TIM_PWM_Stop+0xf4>
 8006c06:	687b      	ldr	r3, [r7, #4]
 8006c08:	2201      	movs	r2, #1
 8006c0a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006c0e:	e00b      	b.n	8006c28 <HAL_TIM_PWM_Stop+0x10c>
 8006c10:	683b      	ldr	r3, [r7, #0]
 8006c12:	2b10      	cmp	r3, #16
 8006c14:	d104      	bne.n	8006c20 <HAL_TIM_PWM_Stop+0x104>
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	2201      	movs	r2, #1
 8006c1a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006c1e:	e003      	b.n	8006c28 <HAL_TIM_PWM_Stop+0x10c>
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	2201      	movs	r2, #1
 8006c24:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43

  /* Return function status */
  return HAL_OK;
 8006c28:	2300      	movs	r3, #0
}
 8006c2a:	4618      	mov	r0, r3
 8006c2c:	3708      	adds	r7, #8
 8006c2e:	46bd      	mov	sp, r7
 8006c30:	bd80      	pop	{r7, pc}
 8006c32:	bf00      	nop
 8006c34:	40012c00 	.word	0x40012c00
 8006c38:	40013400 	.word	0x40013400
 8006c3c:	40014000 	.word	0x40014000
 8006c40:	40014400 	.word	0x40014400
 8006c44:	40014800 	.word	0x40014800

08006c48 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8006c48:	b580      	push	{r7, lr}
 8006c4a:	b082      	sub	sp, #8
 8006c4c:	af00      	add	r7, sp, #0
 8006c4e:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006c50:	687b      	ldr	r3, [r7, #4]
 8006c52:	681b      	ldr	r3, [r3, #0]
 8006c54:	691b      	ldr	r3, [r3, #16]
 8006c56:	f003 0302 	and.w	r3, r3, #2
 8006c5a:	2b02      	cmp	r3, #2
 8006c5c:	d122      	bne.n	8006ca4 <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006c5e:	687b      	ldr	r3, [r7, #4]
 8006c60:	681b      	ldr	r3, [r3, #0]
 8006c62:	68db      	ldr	r3, [r3, #12]
 8006c64:	f003 0302 	and.w	r3, r3, #2
 8006c68:	2b02      	cmp	r3, #2
 8006c6a:	d11b      	bne.n	8006ca4 <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	681b      	ldr	r3, [r3, #0]
 8006c70:	f06f 0202 	mvn.w	r2, #2
 8006c74:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	2201      	movs	r2, #1
 8006c7a:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	681b      	ldr	r3, [r3, #0]
 8006c80:	699b      	ldr	r3, [r3, #24]
 8006c82:	f003 0303 	and.w	r3, r3, #3
 8006c86:	2b00      	cmp	r3, #0
 8006c88:	d003      	beq.n	8006c92 <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006c8a:	6878      	ldr	r0, [r7, #4]
 8006c8c:	f000 fae3 	bl	8007256 <HAL_TIM_IC_CaptureCallback>
 8006c90:	e005      	b.n	8006c9e <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006c92:	6878      	ldr	r0, [r7, #4]
 8006c94:	f000 fad5 	bl	8007242 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006c98:	6878      	ldr	r0, [r7, #4]
 8006c9a:	f000 fae6 	bl	800726a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006c9e:	687b      	ldr	r3, [r7, #4]
 8006ca0:	2200      	movs	r2, #0
 8006ca2:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006ca4:	687b      	ldr	r3, [r7, #4]
 8006ca6:	681b      	ldr	r3, [r3, #0]
 8006ca8:	691b      	ldr	r3, [r3, #16]
 8006caa:	f003 0304 	and.w	r3, r3, #4
 8006cae:	2b04      	cmp	r3, #4
 8006cb0:	d122      	bne.n	8006cf8 <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	681b      	ldr	r3, [r3, #0]
 8006cb6:	68db      	ldr	r3, [r3, #12]
 8006cb8:	f003 0304 	and.w	r3, r3, #4
 8006cbc:	2b04      	cmp	r3, #4
 8006cbe:	d11b      	bne.n	8006cf8 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006cc0:	687b      	ldr	r3, [r7, #4]
 8006cc2:	681b      	ldr	r3, [r3, #0]
 8006cc4:	f06f 0204 	mvn.w	r2, #4
 8006cc8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006cca:	687b      	ldr	r3, [r7, #4]
 8006ccc:	2202      	movs	r2, #2
 8006cce:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006cd0:	687b      	ldr	r3, [r7, #4]
 8006cd2:	681b      	ldr	r3, [r3, #0]
 8006cd4:	699b      	ldr	r3, [r3, #24]
 8006cd6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006cda:	2b00      	cmp	r3, #0
 8006cdc:	d003      	beq.n	8006ce6 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006cde:	6878      	ldr	r0, [r7, #4]
 8006ce0:	f000 fab9 	bl	8007256 <HAL_TIM_IC_CaptureCallback>
 8006ce4:	e005      	b.n	8006cf2 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006ce6:	6878      	ldr	r0, [r7, #4]
 8006ce8:	f000 faab 	bl	8007242 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006cec:	6878      	ldr	r0, [r7, #4]
 8006cee:	f000 fabc 	bl	800726a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	2200      	movs	r2, #0
 8006cf6:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006cf8:	687b      	ldr	r3, [r7, #4]
 8006cfa:	681b      	ldr	r3, [r3, #0]
 8006cfc:	691b      	ldr	r3, [r3, #16]
 8006cfe:	f003 0308 	and.w	r3, r3, #8
 8006d02:	2b08      	cmp	r3, #8
 8006d04:	d122      	bne.n	8006d4c <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006d06:	687b      	ldr	r3, [r7, #4]
 8006d08:	681b      	ldr	r3, [r3, #0]
 8006d0a:	68db      	ldr	r3, [r3, #12]
 8006d0c:	f003 0308 	and.w	r3, r3, #8
 8006d10:	2b08      	cmp	r3, #8
 8006d12:	d11b      	bne.n	8006d4c <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	681b      	ldr	r3, [r3, #0]
 8006d18:	f06f 0208 	mvn.w	r2, #8
 8006d1c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006d1e:	687b      	ldr	r3, [r7, #4]
 8006d20:	2204      	movs	r2, #4
 8006d22:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006d24:	687b      	ldr	r3, [r7, #4]
 8006d26:	681b      	ldr	r3, [r3, #0]
 8006d28:	69db      	ldr	r3, [r3, #28]
 8006d2a:	f003 0303 	and.w	r3, r3, #3
 8006d2e:	2b00      	cmp	r3, #0
 8006d30:	d003      	beq.n	8006d3a <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006d32:	6878      	ldr	r0, [r7, #4]
 8006d34:	f000 fa8f 	bl	8007256 <HAL_TIM_IC_CaptureCallback>
 8006d38:	e005      	b.n	8006d46 <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006d3a:	6878      	ldr	r0, [r7, #4]
 8006d3c:	f000 fa81 	bl	8007242 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006d40:	6878      	ldr	r0, [r7, #4]
 8006d42:	f000 fa92 	bl	800726a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006d46:	687b      	ldr	r3, [r7, #4]
 8006d48:	2200      	movs	r2, #0
 8006d4a:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006d4c:	687b      	ldr	r3, [r7, #4]
 8006d4e:	681b      	ldr	r3, [r3, #0]
 8006d50:	691b      	ldr	r3, [r3, #16]
 8006d52:	f003 0310 	and.w	r3, r3, #16
 8006d56:	2b10      	cmp	r3, #16
 8006d58:	d122      	bne.n	8006da0 <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006d5a:	687b      	ldr	r3, [r7, #4]
 8006d5c:	681b      	ldr	r3, [r3, #0]
 8006d5e:	68db      	ldr	r3, [r3, #12]
 8006d60:	f003 0310 	and.w	r3, r3, #16
 8006d64:	2b10      	cmp	r3, #16
 8006d66:	d11b      	bne.n	8006da0 <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006d68:	687b      	ldr	r3, [r7, #4]
 8006d6a:	681b      	ldr	r3, [r3, #0]
 8006d6c:	f06f 0210 	mvn.w	r2, #16
 8006d70:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006d72:	687b      	ldr	r3, [r7, #4]
 8006d74:	2208      	movs	r2, #8
 8006d76:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006d78:	687b      	ldr	r3, [r7, #4]
 8006d7a:	681b      	ldr	r3, [r3, #0]
 8006d7c:	69db      	ldr	r3, [r3, #28]
 8006d7e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006d82:	2b00      	cmp	r3, #0
 8006d84:	d003      	beq.n	8006d8e <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006d86:	6878      	ldr	r0, [r7, #4]
 8006d88:	f000 fa65 	bl	8007256 <HAL_TIM_IC_CaptureCallback>
 8006d8c:	e005      	b.n	8006d9a <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006d8e:	6878      	ldr	r0, [r7, #4]
 8006d90:	f000 fa57 	bl	8007242 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006d94:	6878      	ldr	r0, [r7, #4]
 8006d96:	f000 fa68 	bl	800726a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006d9a:	687b      	ldr	r3, [r7, #4]
 8006d9c:	2200      	movs	r2, #0
 8006d9e:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006da0:	687b      	ldr	r3, [r7, #4]
 8006da2:	681b      	ldr	r3, [r3, #0]
 8006da4:	691b      	ldr	r3, [r3, #16]
 8006da6:	f003 0301 	and.w	r3, r3, #1
 8006daa:	2b01      	cmp	r3, #1
 8006dac:	d10e      	bne.n	8006dcc <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006dae:	687b      	ldr	r3, [r7, #4]
 8006db0:	681b      	ldr	r3, [r3, #0]
 8006db2:	68db      	ldr	r3, [r3, #12]
 8006db4:	f003 0301 	and.w	r3, r3, #1
 8006db8:	2b01      	cmp	r3, #1
 8006dba:	d107      	bne.n	8006dcc <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006dbc:	687b      	ldr	r3, [r7, #4]
 8006dbe:	681b      	ldr	r3, [r3, #0]
 8006dc0:	f06f 0201 	mvn.w	r2, #1
 8006dc4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8006dc6:	6878      	ldr	r0, [r7, #4]
 8006dc8:	f7fb fe8c 	bl	8002ae4 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	681b      	ldr	r3, [r3, #0]
 8006dd0:	691b      	ldr	r3, [r3, #16]
 8006dd2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006dd6:	2b80      	cmp	r3, #128	; 0x80
 8006dd8:	d10e      	bne.n	8006df8 <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006dda:	687b      	ldr	r3, [r7, #4]
 8006ddc:	681b      	ldr	r3, [r3, #0]
 8006dde:	68db      	ldr	r3, [r3, #12]
 8006de0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006de4:	2b80      	cmp	r3, #128	; 0x80
 8006de6:	d107      	bne.n	8006df8 <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006de8:	687b      	ldr	r3, [r7, #4]
 8006dea:	681b      	ldr	r3, [r3, #0]
 8006dec:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006df0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006df2:	6878      	ldr	r0, [r7, #4]
 8006df4:	f000 ff10 	bl	8007c18 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 8006df8:	687b      	ldr	r3, [r7, #4]
 8006dfa:	681b      	ldr	r3, [r3, #0]
 8006dfc:	691b      	ldr	r3, [r3, #16]
 8006dfe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006e02:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006e06:	d10e      	bne.n	8006e26 <HAL_TIM_IRQHandler+0x1de>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006e08:	687b      	ldr	r3, [r7, #4]
 8006e0a:	681b      	ldr	r3, [r3, #0]
 8006e0c:	68db      	ldr	r3, [r3, #12]
 8006e0e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006e12:	2b80      	cmp	r3, #128	; 0x80
 8006e14:	d107      	bne.n	8006e26 <HAL_TIM_IRQHandler+0x1de>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006e16:	687b      	ldr	r3, [r7, #4]
 8006e18:	681b      	ldr	r3, [r3, #0]
 8006e1a:	f46f 7280 	mvn.w	r2, #256	; 0x100
 8006e1e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 8006e20:	6878      	ldr	r0, [r7, #4]
 8006e22:	f000 ff03 	bl	8007c2c <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	681b      	ldr	r3, [r3, #0]
 8006e2a:	691b      	ldr	r3, [r3, #16]
 8006e2c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006e30:	2b40      	cmp	r3, #64	; 0x40
 8006e32:	d10e      	bne.n	8006e52 <HAL_TIM_IRQHandler+0x20a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006e34:	687b      	ldr	r3, [r7, #4]
 8006e36:	681b      	ldr	r3, [r3, #0]
 8006e38:	68db      	ldr	r3, [r3, #12]
 8006e3a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006e3e:	2b40      	cmp	r3, #64	; 0x40
 8006e40:	d107      	bne.n	8006e52 <HAL_TIM_IRQHandler+0x20a>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006e42:	687b      	ldr	r3, [r7, #4]
 8006e44:	681b      	ldr	r3, [r3, #0]
 8006e46:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006e4a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006e4c:	6878      	ldr	r0, [r7, #4]
 8006e4e:	f000 fa16 	bl	800727e <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006e52:	687b      	ldr	r3, [r7, #4]
 8006e54:	681b      	ldr	r3, [r3, #0]
 8006e56:	691b      	ldr	r3, [r3, #16]
 8006e58:	f003 0320 	and.w	r3, r3, #32
 8006e5c:	2b20      	cmp	r3, #32
 8006e5e:	d10e      	bne.n	8006e7e <HAL_TIM_IRQHandler+0x236>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006e60:	687b      	ldr	r3, [r7, #4]
 8006e62:	681b      	ldr	r3, [r3, #0]
 8006e64:	68db      	ldr	r3, [r3, #12]
 8006e66:	f003 0320 	and.w	r3, r3, #32
 8006e6a:	2b20      	cmp	r3, #32
 8006e6c:	d107      	bne.n	8006e7e <HAL_TIM_IRQHandler+0x236>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	681b      	ldr	r3, [r3, #0]
 8006e72:	f06f 0220 	mvn.w	r2, #32
 8006e76:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006e78:	6878      	ldr	r0, [r7, #4]
 8006e7a:	f000 fec3 	bl	8007c04 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006e7e:	bf00      	nop
 8006e80:	3708      	adds	r7, #8
 8006e82:	46bd      	mov	sp, r7
 8006e84:	bd80      	pop	{r7, pc}
	...

08006e88 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8006e88:	b580      	push	{r7, lr}
 8006e8a:	b086      	sub	sp, #24
 8006e8c:	af00      	add	r7, sp, #0
 8006e8e:	60f8      	str	r0, [r7, #12]
 8006e90:	60b9      	str	r1, [r7, #8]
 8006e92:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8006e94:	2300      	movs	r3, #0
 8006e96:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8006e98:	68fb      	ldr	r3, [r7, #12]
 8006e9a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006e9e:	2b01      	cmp	r3, #1
 8006ea0:	d101      	bne.n	8006ea6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8006ea2:	2302      	movs	r3, #2
 8006ea4:	e0ff      	b.n	80070a6 <HAL_TIM_PWM_ConfigChannel+0x21e>
 8006ea6:	68fb      	ldr	r3, [r7, #12]
 8006ea8:	2201      	movs	r2, #1
 8006eaa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  switch (Channel)
 8006eae:	687b      	ldr	r3, [r7, #4]
 8006eb0:	2b14      	cmp	r3, #20
 8006eb2:	f200 80f0 	bhi.w	8007096 <HAL_TIM_PWM_ConfigChannel+0x20e>
 8006eb6:	a201      	add	r2, pc, #4	; (adr r2, 8006ebc <HAL_TIM_PWM_ConfigChannel+0x34>)
 8006eb8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006ebc:	08006f11 	.word	0x08006f11
 8006ec0:	08007097 	.word	0x08007097
 8006ec4:	08007097 	.word	0x08007097
 8006ec8:	08007097 	.word	0x08007097
 8006ecc:	08006f51 	.word	0x08006f51
 8006ed0:	08007097 	.word	0x08007097
 8006ed4:	08007097 	.word	0x08007097
 8006ed8:	08007097 	.word	0x08007097
 8006edc:	08006f93 	.word	0x08006f93
 8006ee0:	08007097 	.word	0x08007097
 8006ee4:	08007097 	.word	0x08007097
 8006ee8:	08007097 	.word	0x08007097
 8006eec:	08006fd3 	.word	0x08006fd3
 8006ef0:	08007097 	.word	0x08007097
 8006ef4:	08007097 	.word	0x08007097
 8006ef8:	08007097 	.word	0x08007097
 8006efc:	08007015 	.word	0x08007015
 8006f00:	08007097 	.word	0x08007097
 8006f04:	08007097 	.word	0x08007097
 8006f08:	08007097 	.word	0x08007097
 8006f0c:	08007055 	.word	0x08007055
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8006f10:	68fb      	ldr	r3, [r7, #12]
 8006f12:	681b      	ldr	r3, [r3, #0]
 8006f14:	68b9      	ldr	r1, [r7, #8]
 8006f16:	4618      	mov	r0, r3
 8006f18:	f000 fa56 	bl	80073c8 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8006f1c:	68fb      	ldr	r3, [r7, #12]
 8006f1e:	681b      	ldr	r3, [r3, #0]
 8006f20:	699a      	ldr	r2, [r3, #24]
 8006f22:	68fb      	ldr	r3, [r7, #12]
 8006f24:	681b      	ldr	r3, [r3, #0]
 8006f26:	f042 0208 	orr.w	r2, r2, #8
 8006f2a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8006f2c:	68fb      	ldr	r3, [r7, #12]
 8006f2e:	681b      	ldr	r3, [r3, #0]
 8006f30:	699a      	ldr	r2, [r3, #24]
 8006f32:	68fb      	ldr	r3, [r7, #12]
 8006f34:	681b      	ldr	r3, [r3, #0]
 8006f36:	f022 0204 	bic.w	r2, r2, #4
 8006f3a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8006f3c:	68fb      	ldr	r3, [r7, #12]
 8006f3e:	681b      	ldr	r3, [r3, #0]
 8006f40:	6999      	ldr	r1, [r3, #24]
 8006f42:	68bb      	ldr	r3, [r7, #8]
 8006f44:	691a      	ldr	r2, [r3, #16]
 8006f46:	68fb      	ldr	r3, [r7, #12]
 8006f48:	681b      	ldr	r3, [r3, #0]
 8006f4a:	430a      	orrs	r2, r1
 8006f4c:	619a      	str	r2, [r3, #24]
      break;
 8006f4e:	e0a5      	b.n	800709c <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8006f50:	68fb      	ldr	r3, [r7, #12]
 8006f52:	681b      	ldr	r3, [r3, #0]
 8006f54:	68b9      	ldr	r1, [r7, #8]
 8006f56:	4618      	mov	r0, r3
 8006f58:	f000 fac6 	bl	80074e8 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8006f5c:	68fb      	ldr	r3, [r7, #12]
 8006f5e:	681b      	ldr	r3, [r3, #0]
 8006f60:	699a      	ldr	r2, [r3, #24]
 8006f62:	68fb      	ldr	r3, [r7, #12]
 8006f64:	681b      	ldr	r3, [r3, #0]
 8006f66:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006f6a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8006f6c:	68fb      	ldr	r3, [r7, #12]
 8006f6e:	681b      	ldr	r3, [r3, #0]
 8006f70:	699a      	ldr	r2, [r3, #24]
 8006f72:	68fb      	ldr	r3, [r7, #12]
 8006f74:	681b      	ldr	r3, [r3, #0]
 8006f76:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006f7a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8006f7c:	68fb      	ldr	r3, [r7, #12]
 8006f7e:	681b      	ldr	r3, [r3, #0]
 8006f80:	6999      	ldr	r1, [r3, #24]
 8006f82:	68bb      	ldr	r3, [r7, #8]
 8006f84:	691b      	ldr	r3, [r3, #16]
 8006f86:	021a      	lsls	r2, r3, #8
 8006f88:	68fb      	ldr	r3, [r7, #12]
 8006f8a:	681b      	ldr	r3, [r3, #0]
 8006f8c:	430a      	orrs	r2, r1
 8006f8e:	619a      	str	r2, [r3, #24]
      break;
 8006f90:	e084      	b.n	800709c <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8006f92:	68fb      	ldr	r3, [r7, #12]
 8006f94:	681b      	ldr	r3, [r3, #0]
 8006f96:	68b9      	ldr	r1, [r7, #8]
 8006f98:	4618      	mov	r0, r3
 8006f9a:	f000 fb2f 	bl	80075fc <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8006f9e:	68fb      	ldr	r3, [r7, #12]
 8006fa0:	681b      	ldr	r3, [r3, #0]
 8006fa2:	69da      	ldr	r2, [r3, #28]
 8006fa4:	68fb      	ldr	r3, [r7, #12]
 8006fa6:	681b      	ldr	r3, [r3, #0]
 8006fa8:	f042 0208 	orr.w	r2, r2, #8
 8006fac:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8006fae:	68fb      	ldr	r3, [r7, #12]
 8006fb0:	681b      	ldr	r3, [r3, #0]
 8006fb2:	69da      	ldr	r2, [r3, #28]
 8006fb4:	68fb      	ldr	r3, [r7, #12]
 8006fb6:	681b      	ldr	r3, [r3, #0]
 8006fb8:	f022 0204 	bic.w	r2, r2, #4
 8006fbc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8006fbe:	68fb      	ldr	r3, [r7, #12]
 8006fc0:	681b      	ldr	r3, [r3, #0]
 8006fc2:	69d9      	ldr	r1, [r3, #28]
 8006fc4:	68bb      	ldr	r3, [r7, #8]
 8006fc6:	691a      	ldr	r2, [r3, #16]
 8006fc8:	68fb      	ldr	r3, [r7, #12]
 8006fca:	681b      	ldr	r3, [r3, #0]
 8006fcc:	430a      	orrs	r2, r1
 8006fce:	61da      	str	r2, [r3, #28]
      break;
 8006fd0:	e064      	b.n	800709c <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8006fd2:	68fb      	ldr	r3, [r7, #12]
 8006fd4:	681b      	ldr	r3, [r3, #0]
 8006fd6:	68b9      	ldr	r1, [r7, #8]
 8006fd8:	4618      	mov	r0, r3
 8006fda:	f000 fb97 	bl	800770c <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8006fde:	68fb      	ldr	r3, [r7, #12]
 8006fe0:	681b      	ldr	r3, [r3, #0]
 8006fe2:	69da      	ldr	r2, [r3, #28]
 8006fe4:	68fb      	ldr	r3, [r7, #12]
 8006fe6:	681b      	ldr	r3, [r3, #0]
 8006fe8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006fec:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8006fee:	68fb      	ldr	r3, [r7, #12]
 8006ff0:	681b      	ldr	r3, [r3, #0]
 8006ff2:	69da      	ldr	r2, [r3, #28]
 8006ff4:	68fb      	ldr	r3, [r7, #12]
 8006ff6:	681b      	ldr	r3, [r3, #0]
 8006ff8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006ffc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8006ffe:	68fb      	ldr	r3, [r7, #12]
 8007000:	681b      	ldr	r3, [r3, #0]
 8007002:	69d9      	ldr	r1, [r3, #28]
 8007004:	68bb      	ldr	r3, [r7, #8]
 8007006:	691b      	ldr	r3, [r3, #16]
 8007008:	021a      	lsls	r2, r3, #8
 800700a:	68fb      	ldr	r3, [r7, #12]
 800700c:	681b      	ldr	r3, [r3, #0]
 800700e:	430a      	orrs	r2, r1
 8007010:	61da      	str	r2, [r3, #28]
      break;
 8007012:	e043      	b.n	800709c <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC5_INSTANCE(htim->Instance));

      /* Configure the Channel 5 in PWM mode */
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 8007014:	68fb      	ldr	r3, [r7, #12]
 8007016:	681b      	ldr	r3, [r3, #0]
 8007018:	68b9      	ldr	r1, [r7, #8]
 800701a:	4618      	mov	r0, r3
 800701c:	f000 fbe0 	bl	80077e0 <TIM_OC5_SetConfig>

      /* Set the Preload enable bit for channel5*/
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 8007020:	68fb      	ldr	r3, [r7, #12]
 8007022:	681b      	ldr	r3, [r3, #0]
 8007024:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8007026:	68fb      	ldr	r3, [r7, #12]
 8007028:	681b      	ldr	r3, [r3, #0]
 800702a:	f042 0208 	orr.w	r2, r2, #8
 800702e:	655a      	str	r2, [r3, #84]	; 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 8007030:	68fb      	ldr	r3, [r7, #12]
 8007032:	681b      	ldr	r3, [r3, #0]
 8007034:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8007036:	68fb      	ldr	r3, [r7, #12]
 8007038:	681b      	ldr	r3, [r3, #0]
 800703a:	f022 0204 	bic.w	r2, r2, #4
 800703e:	655a      	str	r2, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 8007040:	68fb      	ldr	r3, [r7, #12]
 8007042:	681b      	ldr	r3, [r3, #0]
 8007044:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8007046:	68bb      	ldr	r3, [r7, #8]
 8007048:	691a      	ldr	r2, [r3, #16]
 800704a:	68fb      	ldr	r3, [r7, #12]
 800704c:	681b      	ldr	r3, [r3, #0]
 800704e:	430a      	orrs	r2, r1
 8007050:	655a      	str	r2, [r3, #84]	; 0x54
      break;
 8007052:	e023      	b.n	800709c <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC6_INSTANCE(htim->Instance));

      /* Configure the Channel 6 in PWM mode */
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 8007054:	68fb      	ldr	r3, [r7, #12]
 8007056:	681b      	ldr	r3, [r3, #0]
 8007058:	68b9      	ldr	r1, [r7, #8]
 800705a:	4618      	mov	r0, r3
 800705c:	f000 fc24 	bl	80078a8 <TIM_OC6_SetConfig>

      /* Set the Preload enable bit for channel6 */
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 8007060:	68fb      	ldr	r3, [r7, #12]
 8007062:	681b      	ldr	r3, [r3, #0]
 8007064:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8007066:	68fb      	ldr	r3, [r7, #12]
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800706e:	655a      	str	r2, [r3, #84]	; 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
 8007070:	68fb      	ldr	r3, [r7, #12]
 8007072:	681b      	ldr	r3, [r3, #0]
 8007074:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8007076:	68fb      	ldr	r3, [r7, #12]
 8007078:	681b      	ldr	r3, [r3, #0]
 800707a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800707e:	655a      	str	r2, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 8007080:	68fb      	ldr	r3, [r7, #12]
 8007082:	681b      	ldr	r3, [r3, #0]
 8007084:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8007086:	68bb      	ldr	r3, [r7, #8]
 8007088:	691b      	ldr	r3, [r3, #16]
 800708a:	021a      	lsls	r2, r3, #8
 800708c:	68fb      	ldr	r3, [r7, #12]
 800708e:	681b      	ldr	r3, [r3, #0]
 8007090:	430a      	orrs	r2, r1
 8007092:	655a      	str	r2, [r3, #84]	; 0x54
      break;
 8007094:	e002      	b.n	800709c <HAL_TIM_PWM_ConfigChannel+0x214>
    }

    default:
      status = HAL_ERROR;
 8007096:	2301      	movs	r3, #1
 8007098:	75fb      	strb	r3, [r7, #23]
      break;
 800709a:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 800709c:	68fb      	ldr	r3, [r7, #12]
 800709e:	2200      	movs	r2, #0
 80070a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 80070a4:	7dfb      	ldrb	r3, [r7, #23]
}
 80070a6:	4618      	mov	r0, r3
 80070a8:	3718      	adds	r7, #24
 80070aa:	46bd      	mov	sp, r7
 80070ac:	bd80      	pop	{r7, pc}
 80070ae:	bf00      	nop

080070b0 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 80070b0:	b580      	push	{r7, lr}
 80070b2:	b084      	sub	sp, #16
 80070b4:	af00      	add	r7, sp, #0
 80070b6:	6078      	str	r0, [r7, #4]
 80070b8:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80070ba:	2300      	movs	r3, #0
 80070bc:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 80070be:	687b      	ldr	r3, [r7, #4]
 80070c0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80070c4:	2b01      	cmp	r3, #1
 80070c6:	d101      	bne.n	80070cc <HAL_TIM_ConfigClockSource+0x1c>
 80070c8:	2302      	movs	r3, #2
 80070ca:	e0b6      	b.n	800723a <HAL_TIM_ConfigClockSource+0x18a>
 80070cc:	687b      	ldr	r3, [r7, #4]
 80070ce:	2201      	movs	r2, #1
 80070d0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 80070d4:	687b      	ldr	r3, [r7, #4]
 80070d6:	2202      	movs	r2, #2
 80070d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	681b      	ldr	r3, [r3, #0]
 80070e0:	689b      	ldr	r3, [r3, #8]
 80070e2:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 80070e4:	68bb      	ldr	r3, [r7, #8]
 80070e6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80070ea:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80070ee:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80070f0:	68bb      	ldr	r3, [r7, #8]
 80070f2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80070f6:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 80070f8:	687b      	ldr	r3, [r7, #4]
 80070fa:	681b      	ldr	r3, [r3, #0]
 80070fc:	68ba      	ldr	r2, [r7, #8]
 80070fe:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8007100:	683b      	ldr	r3, [r7, #0]
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007108:	d03e      	beq.n	8007188 <HAL_TIM_ConfigClockSource+0xd8>
 800710a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800710e:	f200 8087 	bhi.w	8007220 <HAL_TIM_ConfigClockSource+0x170>
 8007112:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007116:	f000 8086 	beq.w	8007226 <HAL_TIM_ConfigClockSource+0x176>
 800711a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800711e:	d87f      	bhi.n	8007220 <HAL_TIM_ConfigClockSource+0x170>
 8007120:	2b70      	cmp	r3, #112	; 0x70
 8007122:	d01a      	beq.n	800715a <HAL_TIM_ConfigClockSource+0xaa>
 8007124:	2b70      	cmp	r3, #112	; 0x70
 8007126:	d87b      	bhi.n	8007220 <HAL_TIM_ConfigClockSource+0x170>
 8007128:	2b60      	cmp	r3, #96	; 0x60
 800712a:	d050      	beq.n	80071ce <HAL_TIM_ConfigClockSource+0x11e>
 800712c:	2b60      	cmp	r3, #96	; 0x60
 800712e:	d877      	bhi.n	8007220 <HAL_TIM_ConfigClockSource+0x170>
 8007130:	2b50      	cmp	r3, #80	; 0x50
 8007132:	d03c      	beq.n	80071ae <HAL_TIM_ConfigClockSource+0xfe>
 8007134:	2b50      	cmp	r3, #80	; 0x50
 8007136:	d873      	bhi.n	8007220 <HAL_TIM_ConfigClockSource+0x170>
 8007138:	2b40      	cmp	r3, #64	; 0x40
 800713a:	d058      	beq.n	80071ee <HAL_TIM_ConfigClockSource+0x13e>
 800713c:	2b40      	cmp	r3, #64	; 0x40
 800713e:	d86f      	bhi.n	8007220 <HAL_TIM_ConfigClockSource+0x170>
 8007140:	2b30      	cmp	r3, #48	; 0x30
 8007142:	d064      	beq.n	800720e <HAL_TIM_ConfigClockSource+0x15e>
 8007144:	2b30      	cmp	r3, #48	; 0x30
 8007146:	d86b      	bhi.n	8007220 <HAL_TIM_ConfigClockSource+0x170>
 8007148:	2b20      	cmp	r3, #32
 800714a:	d060      	beq.n	800720e <HAL_TIM_ConfigClockSource+0x15e>
 800714c:	2b20      	cmp	r3, #32
 800714e:	d867      	bhi.n	8007220 <HAL_TIM_ConfigClockSource+0x170>
 8007150:	2b00      	cmp	r3, #0
 8007152:	d05c      	beq.n	800720e <HAL_TIM_ConfigClockSource+0x15e>
 8007154:	2b10      	cmp	r3, #16
 8007156:	d05a      	beq.n	800720e <HAL_TIM_ConfigClockSource+0x15e>
 8007158:	e062      	b.n	8007220 <HAL_TIM_ConfigClockSource+0x170>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800715a:	687b      	ldr	r3, [r7, #4]
 800715c:	6818      	ldr	r0, [r3, #0]
 800715e:	683b      	ldr	r3, [r7, #0]
 8007160:	6899      	ldr	r1, [r3, #8]
 8007162:	683b      	ldr	r3, [r7, #0]
 8007164:	685a      	ldr	r2, [r3, #4]
 8007166:	683b      	ldr	r3, [r7, #0]
 8007168:	68db      	ldr	r3, [r3, #12]
 800716a:	f000 fc7d 	bl	8007a68 <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 800716e:	687b      	ldr	r3, [r7, #4]
 8007170:	681b      	ldr	r3, [r3, #0]
 8007172:	689b      	ldr	r3, [r3, #8]
 8007174:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8007176:	68bb      	ldr	r3, [r7, #8]
 8007178:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800717c:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 800717e:	687b      	ldr	r3, [r7, #4]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	68ba      	ldr	r2, [r7, #8]
 8007184:	609a      	str	r2, [r3, #8]
      break;
 8007186:	e04f      	b.n	8007228 <HAL_TIM_ConfigClockSource+0x178>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8007188:	687b      	ldr	r3, [r7, #4]
 800718a:	6818      	ldr	r0, [r3, #0]
 800718c:	683b      	ldr	r3, [r7, #0]
 800718e:	6899      	ldr	r1, [r3, #8]
 8007190:	683b      	ldr	r3, [r7, #0]
 8007192:	685a      	ldr	r2, [r3, #4]
 8007194:	683b      	ldr	r3, [r7, #0]
 8007196:	68db      	ldr	r3, [r3, #12]
 8007198:	f000 fc66 	bl	8007a68 <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800719c:	687b      	ldr	r3, [r7, #4]
 800719e:	681b      	ldr	r3, [r3, #0]
 80071a0:	689a      	ldr	r2, [r3, #8]
 80071a2:	687b      	ldr	r3, [r7, #4]
 80071a4:	681b      	ldr	r3, [r3, #0]
 80071a6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80071aa:	609a      	str	r2, [r3, #8]
      break;
 80071ac:	e03c      	b.n	8007228 <HAL_TIM_ConfigClockSource+0x178>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80071ae:	687b      	ldr	r3, [r7, #4]
 80071b0:	6818      	ldr	r0, [r3, #0]
 80071b2:	683b      	ldr	r3, [r7, #0]
 80071b4:	6859      	ldr	r1, [r3, #4]
 80071b6:	683b      	ldr	r3, [r7, #0]
 80071b8:	68db      	ldr	r3, [r3, #12]
 80071ba:	461a      	mov	r2, r3
 80071bc:	f000 fbda 	bl	8007974 <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	681b      	ldr	r3, [r3, #0]
 80071c4:	2150      	movs	r1, #80	; 0x50
 80071c6:	4618      	mov	r0, r3
 80071c8:	f000 fc33 	bl	8007a32 <TIM_ITRx_SetConfig>
      break;
 80071cc:	e02c      	b.n	8007228 <HAL_TIM_ConfigClockSource+0x178>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 80071ce:	687b      	ldr	r3, [r7, #4]
 80071d0:	6818      	ldr	r0, [r3, #0]
 80071d2:	683b      	ldr	r3, [r7, #0]
 80071d4:	6859      	ldr	r1, [r3, #4]
 80071d6:	683b      	ldr	r3, [r7, #0]
 80071d8:	68db      	ldr	r3, [r3, #12]
 80071da:	461a      	mov	r2, r3
 80071dc:	f000 fbf9 	bl	80079d2 <TIM_TI2_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	681b      	ldr	r3, [r3, #0]
 80071e4:	2160      	movs	r1, #96	; 0x60
 80071e6:	4618      	mov	r0, r3
 80071e8:	f000 fc23 	bl	8007a32 <TIM_ITRx_SetConfig>
      break;
 80071ec:	e01c      	b.n	8007228 <HAL_TIM_ConfigClockSource+0x178>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	6818      	ldr	r0, [r3, #0]
 80071f2:	683b      	ldr	r3, [r7, #0]
 80071f4:	6859      	ldr	r1, [r3, #4]
 80071f6:	683b      	ldr	r3, [r7, #0]
 80071f8:	68db      	ldr	r3, [r3, #12]
 80071fa:	461a      	mov	r2, r3
 80071fc:	f000 fbba 	bl	8007974 <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8007200:	687b      	ldr	r3, [r7, #4]
 8007202:	681b      	ldr	r3, [r3, #0]
 8007204:	2140      	movs	r1, #64	; 0x40
 8007206:	4618      	mov	r0, r3
 8007208:	f000 fc13 	bl	8007a32 <TIM_ITRx_SetConfig>
      break;
 800720c:	e00c      	b.n	8007228 <HAL_TIM_ConfigClockSource+0x178>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 800720e:	687b      	ldr	r3, [r7, #4]
 8007210:	681a      	ldr	r2, [r3, #0]
 8007212:	683b      	ldr	r3, [r7, #0]
 8007214:	681b      	ldr	r3, [r3, #0]
 8007216:	4619      	mov	r1, r3
 8007218:	4610      	mov	r0, r2
 800721a:	f000 fc0a 	bl	8007a32 <TIM_ITRx_SetConfig>
      break;
 800721e:	e003      	b.n	8007228 <HAL_TIM_ConfigClockSource+0x178>
    }

    default:
      status = HAL_ERROR;
 8007220:	2301      	movs	r3, #1
 8007222:	73fb      	strb	r3, [r7, #15]
      break;
 8007224:	e000      	b.n	8007228 <HAL_TIM_ConfigClockSource+0x178>
      break;
 8007226:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8007228:	687b      	ldr	r3, [r7, #4]
 800722a:	2201      	movs	r2, #1
 800722c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	2200      	movs	r2, #0
 8007234:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 8007238:	7bfb      	ldrb	r3, [r7, #15]
}
 800723a:	4618      	mov	r0, r3
 800723c:	3710      	adds	r7, #16
 800723e:	46bd      	mov	sp, r7
 8007240:	bd80      	pop	{r7, pc}

08007242 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8007242:	b480      	push	{r7}
 8007244:	b083      	sub	sp, #12
 8007246:	af00      	add	r7, sp, #0
 8007248:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 800724a:	bf00      	nop
 800724c:	370c      	adds	r7, #12
 800724e:	46bd      	mov	sp, r7
 8007250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007254:	4770      	bx	lr

08007256 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8007256:	b480      	push	{r7}
 8007258:	b083      	sub	sp, #12
 800725a:	af00      	add	r7, sp, #0
 800725c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800725e:	bf00      	nop
 8007260:	370c      	adds	r7, #12
 8007262:	46bd      	mov	sp, r7
 8007264:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007268:	4770      	bx	lr

0800726a <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 800726a:	b480      	push	{r7}
 800726c:	b083      	sub	sp, #12
 800726e:	af00      	add	r7, sp, #0
 8007270:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 8007272:	bf00      	nop
 8007274:	370c      	adds	r7, #12
 8007276:	46bd      	mov	sp, r7
 8007278:	f85d 7b04 	ldr.w	r7, [sp], #4
 800727c:	4770      	bx	lr

0800727e <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800727e:	b480      	push	{r7}
 8007280:	b083      	sub	sp, #12
 8007282:	af00      	add	r7, sp, #0
 8007284:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8007286:	bf00      	nop
 8007288:	370c      	adds	r7, #12
 800728a:	46bd      	mov	sp, r7
 800728c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007290:	4770      	bx	lr
	...

08007294 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 8007294:	b480      	push	{r7}
 8007296:	b085      	sub	sp, #20
 8007298:	af00      	add	r7, sp, #0
 800729a:	6078      	str	r0, [r7, #4]
 800729c:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800729e:	687b      	ldr	r3, [r7, #4]
 80072a0:	681b      	ldr	r3, [r3, #0]
 80072a2:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80072a4:	687b      	ldr	r3, [r7, #4]
 80072a6:	4a40      	ldr	r2, [pc, #256]	; (80073a8 <TIM_Base_SetConfig+0x114>)
 80072a8:	4293      	cmp	r3, r2
 80072aa:	d013      	beq.n	80072d4 <TIM_Base_SetConfig+0x40>
 80072ac:	687b      	ldr	r3, [r7, #4]
 80072ae:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80072b2:	d00f      	beq.n	80072d4 <TIM_Base_SetConfig+0x40>
 80072b4:	687b      	ldr	r3, [r7, #4]
 80072b6:	4a3d      	ldr	r2, [pc, #244]	; (80073ac <TIM_Base_SetConfig+0x118>)
 80072b8:	4293      	cmp	r3, r2
 80072ba:	d00b      	beq.n	80072d4 <TIM_Base_SetConfig+0x40>
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	4a3c      	ldr	r2, [pc, #240]	; (80073b0 <TIM_Base_SetConfig+0x11c>)
 80072c0:	4293      	cmp	r3, r2
 80072c2:	d007      	beq.n	80072d4 <TIM_Base_SetConfig+0x40>
 80072c4:	687b      	ldr	r3, [r7, #4]
 80072c6:	4a3b      	ldr	r2, [pc, #236]	; (80073b4 <TIM_Base_SetConfig+0x120>)
 80072c8:	4293      	cmp	r3, r2
 80072ca:	d003      	beq.n	80072d4 <TIM_Base_SetConfig+0x40>
 80072cc:	687b      	ldr	r3, [r7, #4]
 80072ce:	4a3a      	ldr	r2, [pc, #232]	; (80073b8 <TIM_Base_SetConfig+0x124>)
 80072d0:	4293      	cmp	r3, r2
 80072d2:	d108      	bne.n	80072e6 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80072d4:	68fb      	ldr	r3, [r7, #12]
 80072d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80072da:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80072dc:	683b      	ldr	r3, [r7, #0]
 80072de:	685b      	ldr	r3, [r3, #4]
 80072e0:	68fa      	ldr	r2, [r7, #12]
 80072e2:	4313      	orrs	r3, r2
 80072e4:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80072e6:	687b      	ldr	r3, [r7, #4]
 80072e8:	4a2f      	ldr	r2, [pc, #188]	; (80073a8 <TIM_Base_SetConfig+0x114>)
 80072ea:	4293      	cmp	r3, r2
 80072ec:	d01f      	beq.n	800732e <TIM_Base_SetConfig+0x9a>
 80072ee:	687b      	ldr	r3, [r7, #4]
 80072f0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80072f4:	d01b      	beq.n	800732e <TIM_Base_SetConfig+0x9a>
 80072f6:	687b      	ldr	r3, [r7, #4]
 80072f8:	4a2c      	ldr	r2, [pc, #176]	; (80073ac <TIM_Base_SetConfig+0x118>)
 80072fa:	4293      	cmp	r3, r2
 80072fc:	d017      	beq.n	800732e <TIM_Base_SetConfig+0x9a>
 80072fe:	687b      	ldr	r3, [r7, #4]
 8007300:	4a2b      	ldr	r2, [pc, #172]	; (80073b0 <TIM_Base_SetConfig+0x11c>)
 8007302:	4293      	cmp	r3, r2
 8007304:	d013      	beq.n	800732e <TIM_Base_SetConfig+0x9a>
 8007306:	687b      	ldr	r3, [r7, #4]
 8007308:	4a2a      	ldr	r2, [pc, #168]	; (80073b4 <TIM_Base_SetConfig+0x120>)
 800730a:	4293      	cmp	r3, r2
 800730c:	d00f      	beq.n	800732e <TIM_Base_SetConfig+0x9a>
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	4a29      	ldr	r2, [pc, #164]	; (80073b8 <TIM_Base_SetConfig+0x124>)
 8007312:	4293      	cmp	r3, r2
 8007314:	d00b      	beq.n	800732e <TIM_Base_SetConfig+0x9a>
 8007316:	687b      	ldr	r3, [r7, #4]
 8007318:	4a28      	ldr	r2, [pc, #160]	; (80073bc <TIM_Base_SetConfig+0x128>)
 800731a:	4293      	cmp	r3, r2
 800731c:	d007      	beq.n	800732e <TIM_Base_SetConfig+0x9a>
 800731e:	687b      	ldr	r3, [r7, #4]
 8007320:	4a27      	ldr	r2, [pc, #156]	; (80073c0 <TIM_Base_SetConfig+0x12c>)
 8007322:	4293      	cmp	r3, r2
 8007324:	d003      	beq.n	800732e <TIM_Base_SetConfig+0x9a>
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	4a26      	ldr	r2, [pc, #152]	; (80073c4 <TIM_Base_SetConfig+0x130>)
 800732a:	4293      	cmp	r3, r2
 800732c:	d108      	bne.n	8007340 <TIM_Base_SetConfig+0xac>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800732e:	68fb      	ldr	r3, [r7, #12]
 8007330:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007334:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007336:	683b      	ldr	r3, [r7, #0]
 8007338:	68db      	ldr	r3, [r3, #12]
 800733a:	68fa      	ldr	r2, [r7, #12]
 800733c:	4313      	orrs	r3, r2
 800733e:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007340:	68fb      	ldr	r3, [r7, #12]
 8007342:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8007346:	683b      	ldr	r3, [r7, #0]
 8007348:	695b      	ldr	r3, [r3, #20]
 800734a:	4313      	orrs	r3, r2
 800734c:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 800734e:	687b      	ldr	r3, [r7, #4]
 8007350:	68fa      	ldr	r2, [r7, #12]
 8007352:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007354:	683b      	ldr	r3, [r7, #0]
 8007356:	689a      	ldr	r2, [r3, #8]
 8007358:	687b      	ldr	r3, [r7, #4]
 800735a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800735c:	683b      	ldr	r3, [r7, #0]
 800735e:	681a      	ldr	r2, [r3, #0]
 8007360:	687b      	ldr	r3, [r7, #4]
 8007362:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007364:	687b      	ldr	r3, [r7, #4]
 8007366:	4a10      	ldr	r2, [pc, #64]	; (80073a8 <TIM_Base_SetConfig+0x114>)
 8007368:	4293      	cmp	r3, r2
 800736a:	d00f      	beq.n	800738c <TIM_Base_SetConfig+0xf8>
 800736c:	687b      	ldr	r3, [r7, #4]
 800736e:	4a12      	ldr	r2, [pc, #72]	; (80073b8 <TIM_Base_SetConfig+0x124>)
 8007370:	4293      	cmp	r3, r2
 8007372:	d00b      	beq.n	800738c <TIM_Base_SetConfig+0xf8>
 8007374:	687b      	ldr	r3, [r7, #4]
 8007376:	4a11      	ldr	r2, [pc, #68]	; (80073bc <TIM_Base_SetConfig+0x128>)
 8007378:	4293      	cmp	r3, r2
 800737a:	d007      	beq.n	800738c <TIM_Base_SetConfig+0xf8>
 800737c:	687b      	ldr	r3, [r7, #4]
 800737e:	4a10      	ldr	r2, [pc, #64]	; (80073c0 <TIM_Base_SetConfig+0x12c>)
 8007380:	4293      	cmp	r3, r2
 8007382:	d003      	beq.n	800738c <TIM_Base_SetConfig+0xf8>
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	4a0f      	ldr	r2, [pc, #60]	; (80073c4 <TIM_Base_SetConfig+0x130>)
 8007388:	4293      	cmp	r3, r2
 800738a:	d103      	bne.n	8007394 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800738c:	683b      	ldr	r3, [r7, #0]
 800738e:	691a      	ldr	r2, [r3, #16]
 8007390:	687b      	ldr	r3, [r7, #4]
 8007392:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007394:	687b      	ldr	r3, [r7, #4]
 8007396:	2201      	movs	r2, #1
 8007398:	615a      	str	r2, [r3, #20]
}
 800739a:	bf00      	nop
 800739c:	3714      	adds	r7, #20
 800739e:	46bd      	mov	sp, r7
 80073a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073a4:	4770      	bx	lr
 80073a6:	bf00      	nop
 80073a8:	40012c00 	.word	0x40012c00
 80073ac:	40000400 	.word	0x40000400
 80073b0:	40000800 	.word	0x40000800
 80073b4:	40000c00 	.word	0x40000c00
 80073b8:	40013400 	.word	0x40013400
 80073bc:	40014000 	.word	0x40014000
 80073c0:	40014400 	.word	0x40014400
 80073c4:	40014800 	.word	0x40014800

080073c8 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80073c8:	b480      	push	{r7}
 80073ca:	b087      	sub	sp, #28
 80073cc:	af00      	add	r7, sp, #0
 80073ce:	6078      	str	r0, [r7, #4]
 80073d0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80073d2:	687b      	ldr	r3, [r7, #4]
 80073d4:	6a1b      	ldr	r3, [r3, #32]
 80073d6:	f023 0201 	bic.w	r2, r3, #1
 80073da:	687b      	ldr	r3, [r7, #4]
 80073dc:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80073de:	687b      	ldr	r3, [r7, #4]
 80073e0:	6a1b      	ldr	r3, [r3, #32]
 80073e2:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80073e4:	687b      	ldr	r3, [r7, #4]
 80073e6:	685b      	ldr	r3, [r3, #4]
 80073e8:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80073ea:	687b      	ldr	r3, [r7, #4]
 80073ec:	699b      	ldr	r3, [r3, #24]
 80073ee:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 80073f0:	68fb      	ldr	r3, [r7, #12]
 80073f2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80073f6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80073fa:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 80073fc:	68fb      	ldr	r3, [r7, #12]
 80073fe:	f023 0303 	bic.w	r3, r3, #3
 8007402:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007404:	683b      	ldr	r3, [r7, #0]
 8007406:	681b      	ldr	r3, [r3, #0]
 8007408:	68fa      	ldr	r2, [r7, #12]
 800740a:	4313      	orrs	r3, r2
 800740c:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 800740e:	697b      	ldr	r3, [r7, #20]
 8007410:	f023 0302 	bic.w	r3, r3, #2
 8007414:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8007416:	683b      	ldr	r3, [r7, #0]
 8007418:	689b      	ldr	r3, [r3, #8]
 800741a:	697a      	ldr	r2, [r7, #20]
 800741c:	4313      	orrs	r3, r2
 800741e:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8007420:	687b      	ldr	r3, [r7, #4]
 8007422:	4a2c      	ldr	r2, [pc, #176]	; (80074d4 <TIM_OC1_SetConfig+0x10c>)
 8007424:	4293      	cmp	r3, r2
 8007426:	d00f      	beq.n	8007448 <TIM_OC1_SetConfig+0x80>
 8007428:	687b      	ldr	r3, [r7, #4]
 800742a:	4a2b      	ldr	r2, [pc, #172]	; (80074d8 <TIM_OC1_SetConfig+0x110>)
 800742c:	4293      	cmp	r3, r2
 800742e:	d00b      	beq.n	8007448 <TIM_OC1_SetConfig+0x80>
 8007430:	687b      	ldr	r3, [r7, #4]
 8007432:	4a2a      	ldr	r2, [pc, #168]	; (80074dc <TIM_OC1_SetConfig+0x114>)
 8007434:	4293      	cmp	r3, r2
 8007436:	d007      	beq.n	8007448 <TIM_OC1_SetConfig+0x80>
 8007438:	687b      	ldr	r3, [r7, #4]
 800743a:	4a29      	ldr	r2, [pc, #164]	; (80074e0 <TIM_OC1_SetConfig+0x118>)
 800743c:	4293      	cmp	r3, r2
 800743e:	d003      	beq.n	8007448 <TIM_OC1_SetConfig+0x80>
 8007440:	687b      	ldr	r3, [r7, #4]
 8007442:	4a28      	ldr	r2, [pc, #160]	; (80074e4 <TIM_OC1_SetConfig+0x11c>)
 8007444:	4293      	cmp	r3, r2
 8007446:	d10c      	bne.n	8007462 <TIM_OC1_SetConfig+0x9a>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8007448:	697b      	ldr	r3, [r7, #20]
 800744a:	f023 0308 	bic.w	r3, r3, #8
 800744e:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8007450:	683b      	ldr	r3, [r7, #0]
 8007452:	68db      	ldr	r3, [r3, #12]
 8007454:	697a      	ldr	r2, [r7, #20]
 8007456:	4313      	orrs	r3, r2
 8007458:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 800745a:	697b      	ldr	r3, [r7, #20]
 800745c:	f023 0304 	bic.w	r3, r3, #4
 8007460:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007462:	687b      	ldr	r3, [r7, #4]
 8007464:	4a1b      	ldr	r2, [pc, #108]	; (80074d4 <TIM_OC1_SetConfig+0x10c>)
 8007466:	4293      	cmp	r3, r2
 8007468:	d00f      	beq.n	800748a <TIM_OC1_SetConfig+0xc2>
 800746a:	687b      	ldr	r3, [r7, #4]
 800746c:	4a1a      	ldr	r2, [pc, #104]	; (80074d8 <TIM_OC1_SetConfig+0x110>)
 800746e:	4293      	cmp	r3, r2
 8007470:	d00b      	beq.n	800748a <TIM_OC1_SetConfig+0xc2>
 8007472:	687b      	ldr	r3, [r7, #4]
 8007474:	4a19      	ldr	r2, [pc, #100]	; (80074dc <TIM_OC1_SetConfig+0x114>)
 8007476:	4293      	cmp	r3, r2
 8007478:	d007      	beq.n	800748a <TIM_OC1_SetConfig+0xc2>
 800747a:	687b      	ldr	r3, [r7, #4]
 800747c:	4a18      	ldr	r2, [pc, #96]	; (80074e0 <TIM_OC1_SetConfig+0x118>)
 800747e:	4293      	cmp	r3, r2
 8007480:	d003      	beq.n	800748a <TIM_OC1_SetConfig+0xc2>
 8007482:	687b      	ldr	r3, [r7, #4]
 8007484:	4a17      	ldr	r2, [pc, #92]	; (80074e4 <TIM_OC1_SetConfig+0x11c>)
 8007486:	4293      	cmp	r3, r2
 8007488:	d111      	bne.n	80074ae <TIM_OC1_SetConfig+0xe6>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 800748a:	693b      	ldr	r3, [r7, #16]
 800748c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007490:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8007492:	693b      	ldr	r3, [r7, #16]
 8007494:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8007498:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 800749a:	683b      	ldr	r3, [r7, #0]
 800749c:	695b      	ldr	r3, [r3, #20]
 800749e:	693a      	ldr	r2, [r7, #16]
 80074a0:	4313      	orrs	r3, r2
 80074a2:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 80074a4:	683b      	ldr	r3, [r7, #0]
 80074a6:	699b      	ldr	r3, [r3, #24]
 80074a8:	693a      	ldr	r2, [r7, #16]
 80074aa:	4313      	orrs	r3, r2
 80074ac:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80074ae:	687b      	ldr	r3, [r7, #4]
 80074b0:	693a      	ldr	r2, [r7, #16]
 80074b2:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80074b4:	687b      	ldr	r3, [r7, #4]
 80074b6:	68fa      	ldr	r2, [r7, #12]
 80074b8:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 80074ba:	683b      	ldr	r3, [r7, #0]
 80074bc:	685a      	ldr	r2, [r3, #4]
 80074be:	687b      	ldr	r3, [r7, #4]
 80074c0:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80074c2:	687b      	ldr	r3, [r7, #4]
 80074c4:	697a      	ldr	r2, [r7, #20]
 80074c6:	621a      	str	r2, [r3, #32]
}
 80074c8:	bf00      	nop
 80074ca:	371c      	adds	r7, #28
 80074cc:	46bd      	mov	sp, r7
 80074ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074d2:	4770      	bx	lr
 80074d4:	40012c00 	.word	0x40012c00
 80074d8:	40013400 	.word	0x40013400
 80074dc:	40014000 	.word	0x40014000
 80074e0:	40014400 	.word	0x40014400
 80074e4:	40014800 	.word	0x40014800

080074e8 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80074e8:	b480      	push	{r7}
 80074ea:	b087      	sub	sp, #28
 80074ec:	af00      	add	r7, sp, #0
 80074ee:	6078      	str	r0, [r7, #4]
 80074f0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80074f2:	687b      	ldr	r3, [r7, #4]
 80074f4:	6a1b      	ldr	r3, [r3, #32]
 80074f6:	f023 0210 	bic.w	r2, r3, #16
 80074fa:	687b      	ldr	r3, [r7, #4]
 80074fc:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80074fe:	687b      	ldr	r3, [r7, #4]
 8007500:	6a1b      	ldr	r3, [r3, #32]
 8007502:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007504:	687b      	ldr	r3, [r7, #4]
 8007506:	685b      	ldr	r3, [r3, #4]
 8007508:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800750a:	687b      	ldr	r3, [r7, #4]
 800750c:	699b      	ldr	r3, [r3, #24]
 800750e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8007510:	68fb      	ldr	r3, [r7, #12]
 8007512:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8007516:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800751a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800751c:	68fb      	ldr	r3, [r7, #12]
 800751e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007522:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007524:	683b      	ldr	r3, [r7, #0]
 8007526:	681b      	ldr	r3, [r3, #0]
 8007528:	021b      	lsls	r3, r3, #8
 800752a:	68fa      	ldr	r2, [r7, #12]
 800752c:	4313      	orrs	r3, r2
 800752e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8007530:	697b      	ldr	r3, [r7, #20]
 8007532:	f023 0320 	bic.w	r3, r3, #32
 8007536:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8007538:	683b      	ldr	r3, [r7, #0]
 800753a:	689b      	ldr	r3, [r3, #8]
 800753c:	011b      	lsls	r3, r3, #4
 800753e:	697a      	ldr	r2, [r7, #20]
 8007540:	4313      	orrs	r3, r2
 8007542:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8007544:	687b      	ldr	r3, [r7, #4]
 8007546:	4a28      	ldr	r2, [pc, #160]	; (80075e8 <TIM_OC2_SetConfig+0x100>)
 8007548:	4293      	cmp	r3, r2
 800754a:	d003      	beq.n	8007554 <TIM_OC2_SetConfig+0x6c>
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	4a27      	ldr	r2, [pc, #156]	; (80075ec <TIM_OC2_SetConfig+0x104>)
 8007550:	4293      	cmp	r3, r2
 8007552:	d10d      	bne.n	8007570 <TIM_OC2_SetConfig+0x88>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8007554:	697b      	ldr	r3, [r7, #20]
 8007556:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800755a:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800755c:	683b      	ldr	r3, [r7, #0]
 800755e:	68db      	ldr	r3, [r3, #12]
 8007560:	011b      	lsls	r3, r3, #4
 8007562:	697a      	ldr	r2, [r7, #20]
 8007564:	4313      	orrs	r3, r2
 8007566:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8007568:	697b      	ldr	r3, [r7, #20]
 800756a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800756e:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007570:	687b      	ldr	r3, [r7, #4]
 8007572:	4a1d      	ldr	r2, [pc, #116]	; (80075e8 <TIM_OC2_SetConfig+0x100>)
 8007574:	4293      	cmp	r3, r2
 8007576:	d00f      	beq.n	8007598 <TIM_OC2_SetConfig+0xb0>
 8007578:	687b      	ldr	r3, [r7, #4]
 800757a:	4a1c      	ldr	r2, [pc, #112]	; (80075ec <TIM_OC2_SetConfig+0x104>)
 800757c:	4293      	cmp	r3, r2
 800757e:	d00b      	beq.n	8007598 <TIM_OC2_SetConfig+0xb0>
 8007580:	687b      	ldr	r3, [r7, #4]
 8007582:	4a1b      	ldr	r2, [pc, #108]	; (80075f0 <TIM_OC2_SetConfig+0x108>)
 8007584:	4293      	cmp	r3, r2
 8007586:	d007      	beq.n	8007598 <TIM_OC2_SetConfig+0xb0>
 8007588:	687b      	ldr	r3, [r7, #4]
 800758a:	4a1a      	ldr	r2, [pc, #104]	; (80075f4 <TIM_OC2_SetConfig+0x10c>)
 800758c:	4293      	cmp	r3, r2
 800758e:	d003      	beq.n	8007598 <TIM_OC2_SetConfig+0xb0>
 8007590:	687b      	ldr	r3, [r7, #4]
 8007592:	4a19      	ldr	r2, [pc, #100]	; (80075f8 <TIM_OC2_SetConfig+0x110>)
 8007594:	4293      	cmp	r3, r2
 8007596:	d113      	bne.n	80075c0 <TIM_OC2_SetConfig+0xd8>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8007598:	693b      	ldr	r3, [r7, #16]
 800759a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800759e:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 80075a0:	693b      	ldr	r3, [r7, #16]
 80075a2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80075a6:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 80075a8:	683b      	ldr	r3, [r7, #0]
 80075aa:	695b      	ldr	r3, [r3, #20]
 80075ac:	009b      	lsls	r3, r3, #2
 80075ae:	693a      	ldr	r2, [r7, #16]
 80075b0:	4313      	orrs	r3, r2
 80075b2:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80075b4:	683b      	ldr	r3, [r7, #0]
 80075b6:	699b      	ldr	r3, [r3, #24]
 80075b8:	009b      	lsls	r3, r3, #2
 80075ba:	693a      	ldr	r2, [r7, #16]
 80075bc:	4313      	orrs	r3, r2
 80075be:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80075c0:	687b      	ldr	r3, [r7, #4]
 80075c2:	693a      	ldr	r2, [r7, #16]
 80075c4:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80075c6:	687b      	ldr	r3, [r7, #4]
 80075c8:	68fa      	ldr	r2, [r7, #12]
 80075ca:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 80075cc:	683b      	ldr	r3, [r7, #0]
 80075ce:	685a      	ldr	r2, [r3, #4]
 80075d0:	687b      	ldr	r3, [r7, #4]
 80075d2:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80075d4:	687b      	ldr	r3, [r7, #4]
 80075d6:	697a      	ldr	r2, [r7, #20]
 80075d8:	621a      	str	r2, [r3, #32]
}
 80075da:	bf00      	nop
 80075dc:	371c      	adds	r7, #28
 80075de:	46bd      	mov	sp, r7
 80075e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075e4:	4770      	bx	lr
 80075e6:	bf00      	nop
 80075e8:	40012c00 	.word	0x40012c00
 80075ec:	40013400 	.word	0x40013400
 80075f0:	40014000 	.word	0x40014000
 80075f4:	40014400 	.word	0x40014400
 80075f8:	40014800 	.word	0x40014800

080075fc <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80075fc:	b480      	push	{r7}
 80075fe:	b087      	sub	sp, #28
 8007600:	af00      	add	r7, sp, #0
 8007602:	6078      	str	r0, [r7, #4]
 8007604:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8007606:	687b      	ldr	r3, [r7, #4]
 8007608:	6a1b      	ldr	r3, [r3, #32]
 800760a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800760e:	687b      	ldr	r3, [r7, #4]
 8007610:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007612:	687b      	ldr	r3, [r7, #4]
 8007614:	6a1b      	ldr	r3, [r3, #32]
 8007616:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	685b      	ldr	r3, [r3, #4]
 800761c:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800761e:	687b      	ldr	r3, [r7, #4]
 8007620:	69db      	ldr	r3, [r3, #28]
 8007622:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8007624:	68fb      	ldr	r3, [r7, #12]
 8007626:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800762a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800762e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8007630:	68fb      	ldr	r3, [r7, #12]
 8007632:	f023 0303 	bic.w	r3, r3, #3
 8007636:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007638:	683b      	ldr	r3, [r7, #0]
 800763a:	681b      	ldr	r3, [r3, #0]
 800763c:	68fa      	ldr	r2, [r7, #12]
 800763e:	4313      	orrs	r3, r2
 8007640:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8007642:	697b      	ldr	r3, [r7, #20]
 8007644:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8007648:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800764a:	683b      	ldr	r3, [r7, #0]
 800764c:	689b      	ldr	r3, [r3, #8]
 800764e:	021b      	lsls	r3, r3, #8
 8007650:	697a      	ldr	r2, [r7, #20]
 8007652:	4313      	orrs	r3, r2
 8007654:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8007656:	687b      	ldr	r3, [r7, #4]
 8007658:	4a27      	ldr	r2, [pc, #156]	; (80076f8 <TIM_OC3_SetConfig+0xfc>)
 800765a:	4293      	cmp	r3, r2
 800765c:	d003      	beq.n	8007666 <TIM_OC3_SetConfig+0x6a>
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	4a26      	ldr	r2, [pc, #152]	; (80076fc <TIM_OC3_SetConfig+0x100>)
 8007662:	4293      	cmp	r3, r2
 8007664:	d10d      	bne.n	8007682 <TIM_OC3_SetConfig+0x86>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8007666:	697b      	ldr	r3, [r7, #20]
 8007668:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800766c:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800766e:	683b      	ldr	r3, [r7, #0]
 8007670:	68db      	ldr	r3, [r3, #12]
 8007672:	021b      	lsls	r3, r3, #8
 8007674:	697a      	ldr	r2, [r7, #20]
 8007676:	4313      	orrs	r3, r2
 8007678:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 800767a:	697b      	ldr	r3, [r7, #20]
 800767c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8007680:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	4a1c      	ldr	r2, [pc, #112]	; (80076f8 <TIM_OC3_SetConfig+0xfc>)
 8007686:	4293      	cmp	r3, r2
 8007688:	d00f      	beq.n	80076aa <TIM_OC3_SetConfig+0xae>
 800768a:	687b      	ldr	r3, [r7, #4]
 800768c:	4a1b      	ldr	r2, [pc, #108]	; (80076fc <TIM_OC3_SetConfig+0x100>)
 800768e:	4293      	cmp	r3, r2
 8007690:	d00b      	beq.n	80076aa <TIM_OC3_SetConfig+0xae>
 8007692:	687b      	ldr	r3, [r7, #4]
 8007694:	4a1a      	ldr	r2, [pc, #104]	; (8007700 <TIM_OC3_SetConfig+0x104>)
 8007696:	4293      	cmp	r3, r2
 8007698:	d007      	beq.n	80076aa <TIM_OC3_SetConfig+0xae>
 800769a:	687b      	ldr	r3, [r7, #4]
 800769c:	4a19      	ldr	r2, [pc, #100]	; (8007704 <TIM_OC3_SetConfig+0x108>)
 800769e:	4293      	cmp	r3, r2
 80076a0:	d003      	beq.n	80076aa <TIM_OC3_SetConfig+0xae>
 80076a2:	687b      	ldr	r3, [r7, #4]
 80076a4:	4a18      	ldr	r2, [pc, #96]	; (8007708 <TIM_OC3_SetConfig+0x10c>)
 80076a6:	4293      	cmp	r3, r2
 80076a8:	d113      	bne.n	80076d2 <TIM_OC3_SetConfig+0xd6>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 80076aa:	693b      	ldr	r3, [r7, #16]
 80076ac:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80076b0:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 80076b2:	693b      	ldr	r3, [r7, #16]
 80076b4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80076b8:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 80076ba:	683b      	ldr	r3, [r7, #0]
 80076bc:	695b      	ldr	r3, [r3, #20]
 80076be:	011b      	lsls	r3, r3, #4
 80076c0:	693a      	ldr	r2, [r7, #16]
 80076c2:	4313      	orrs	r3, r2
 80076c4:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 80076c6:	683b      	ldr	r3, [r7, #0]
 80076c8:	699b      	ldr	r3, [r3, #24]
 80076ca:	011b      	lsls	r3, r3, #4
 80076cc:	693a      	ldr	r2, [r7, #16]
 80076ce:	4313      	orrs	r3, r2
 80076d0:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80076d2:	687b      	ldr	r3, [r7, #4]
 80076d4:	693a      	ldr	r2, [r7, #16]
 80076d6:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 80076d8:	687b      	ldr	r3, [r7, #4]
 80076da:	68fa      	ldr	r2, [r7, #12]
 80076dc:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 80076de:	683b      	ldr	r3, [r7, #0]
 80076e0:	685a      	ldr	r2, [r3, #4]
 80076e2:	687b      	ldr	r3, [r7, #4]
 80076e4:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80076e6:	687b      	ldr	r3, [r7, #4]
 80076e8:	697a      	ldr	r2, [r7, #20]
 80076ea:	621a      	str	r2, [r3, #32]
}
 80076ec:	bf00      	nop
 80076ee:	371c      	adds	r7, #28
 80076f0:	46bd      	mov	sp, r7
 80076f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076f6:	4770      	bx	lr
 80076f8:	40012c00 	.word	0x40012c00
 80076fc:	40013400 	.word	0x40013400
 8007700:	40014000 	.word	0x40014000
 8007704:	40014400 	.word	0x40014400
 8007708:	40014800 	.word	0x40014800

0800770c <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800770c:	b480      	push	{r7}
 800770e:	b087      	sub	sp, #28
 8007710:	af00      	add	r7, sp, #0
 8007712:	6078      	str	r0, [r7, #4]
 8007714:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8007716:	687b      	ldr	r3, [r7, #4]
 8007718:	6a1b      	ldr	r3, [r3, #32]
 800771a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800771e:	687b      	ldr	r3, [r7, #4]
 8007720:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007722:	687b      	ldr	r3, [r7, #4]
 8007724:	6a1b      	ldr	r3, [r3, #32]
 8007726:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007728:	687b      	ldr	r3, [r7, #4]
 800772a:	685b      	ldr	r3, [r3, #4]
 800772c:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800772e:	687b      	ldr	r3, [r7, #4]
 8007730:	69db      	ldr	r3, [r3, #28]
 8007732:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8007734:	68fb      	ldr	r3, [r7, #12]
 8007736:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800773a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800773e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8007740:	68fb      	ldr	r3, [r7, #12]
 8007742:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007746:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007748:	683b      	ldr	r3, [r7, #0]
 800774a:	681b      	ldr	r3, [r3, #0]
 800774c:	021b      	lsls	r3, r3, #8
 800774e:	68fa      	ldr	r2, [r7, #12]
 8007750:	4313      	orrs	r3, r2
 8007752:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8007754:	693b      	ldr	r3, [r7, #16]
 8007756:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800775a:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800775c:	683b      	ldr	r3, [r7, #0]
 800775e:	689b      	ldr	r3, [r3, #8]
 8007760:	031b      	lsls	r3, r3, #12
 8007762:	693a      	ldr	r2, [r7, #16]
 8007764:	4313      	orrs	r3, r2
 8007766:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007768:	687b      	ldr	r3, [r7, #4]
 800776a:	4a18      	ldr	r2, [pc, #96]	; (80077cc <TIM_OC4_SetConfig+0xc0>)
 800776c:	4293      	cmp	r3, r2
 800776e:	d00f      	beq.n	8007790 <TIM_OC4_SetConfig+0x84>
 8007770:	687b      	ldr	r3, [r7, #4]
 8007772:	4a17      	ldr	r2, [pc, #92]	; (80077d0 <TIM_OC4_SetConfig+0xc4>)
 8007774:	4293      	cmp	r3, r2
 8007776:	d00b      	beq.n	8007790 <TIM_OC4_SetConfig+0x84>
 8007778:	687b      	ldr	r3, [r7, #4]
 800777a:	4a16      	ldr	r2, [pc, #88]	; (80077d4 <TIM_OC4_SetConfig+0xc8>)
 800777c:	4293      	cmp	r3, r2
 800777e:	d007      	beq.n	8007790 <TIM_OC4_SetConfig+0x84>
 8007780:	687b      	ldr	r3, [r7, #4]
 8007782:	4a15      	ldr	r2, [pc, #84]	; (80077d8 <TIM_OC4_SetConfig+0xcc>)
 8007784:	4293      	cmp	r3, r2
 8007786:	d003      	beq.n	8007790 <TIM_OC4_SetConfig+0x84>
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	4a14      	ldr	r2, [pc, #80]	; (80077dc <TIM_OC4_SetConfig+0xd0>)
 800778c:	4293      	cmp	r3, r2
 800778e:	d109      	bne.n	80077a4 <TIM_OC4_SetConfig+0x98>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8007790:	697b      	ldr	r3, [r7, #20]
 8007792:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8007796:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8007798:	683b      	ldr	r3, [r7, #0]
 800779a:	695b      	ldr	r3, [r3, #20]
 800779c:	019b      	lsls	r3, r3, #6
 800779e:	697a      	ldr	r2, [r7, #20]
 80077a0:	4313      	orrs	r3, r2
 80077a2:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80077a4:	687b      	ldr	r3, [r7, #4]
 80077a6:	697a      	ldr	r2, [r7, #20]
 80077a8:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 80077aa:	687b      	ldr	r3, [r7, #4]
 80077ac:	68fa      	ldr	r2, [r7, #12]
 80077ae:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 80077b0:	683b      	ldr	r3, [r7, #0]
 80077b2:	685a      	ldr	r2, [r3, #4]
 80077b4:	687b      	ldr	r3, [r7, #4]
 80077b6:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80077b8:	687b      	ldr	r3, [r7, #4]
 80077ba:	693a      	ldr	r2, [r7, #16]
 80077bc:	621a      	str	r2, [r3, #32]
}
 80077be:	bf00      	nop
 80077c0:	371c      	adds	r7, #28
 80077c2:	46bd      	mov	sp, r7
 80077c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077c8:	4770      	bx	lr
 80077ca:	bf00      	nop
 80077cc:	40012c00 	.word	0x40012c00
 80077d0:	40013400 	.word	0x40013400
 80077d4:	40014000 	.word	0x40014000
 80077d8:	40014400 	.word	0x40014400
 80077dc:	40014800 	.word	0x40014800

080077e0 <TIM_OC5_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC5_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 80077e0:	b480      	push	{r7}
 80077e2:	b087      	sub	sp, #28
 80077e4:	af00      	add	r7, sp, #0
 80077e6:	6078      	str	r0, [r7, #4]
 80077e8:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC5E;
 80077ea:	687b      	ldr	r3, [r7, #4]
 80077ec:	6a1b      	ldr	r3, [r3, #32]
 80077ee:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 80077f2:	687b      	ldr	r3, [r7, #4]
 80077f4:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80077f6:	687b      	ldr	r3, [r7, #4]
 80077f8:	6a1b      	ldr	r3, [r3, #32]
 80077fa:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80077fc:	687b      	ldr	r3, [r7, #4]
 80077fe:	685b      	ldr	r3, [r3, #4]
 8007800:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 8007802:	687b      	ldr	r3, [r7, #4]
 8007804:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007806:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 8007808:	68fb      	ldr	r3, [r7, #12]
 800780a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800780e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007812:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007814:	683b      	ldr	r3, [r7, #0]
 8007816:	681b      	ldr	r3, [r3, #0]
 8007818:	68fa      	ldr	r2, [r7, #12]
 800781a:	4313      	orrs	r3, r2
 800781c:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC5P;
 800781e:	693b      	ldr	r3, [r7, #16]
 8007820:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8007824:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 16U);
 8007826:	683b      	ldr	r3, [r7, #0]
 8007828:	689b      	ldr	r3, [r3, #8]
 800782a:	041b      	lsls	r3, r3, #16
 800782c:	693a      	ldr	r2, [r7, #16]
 800782e:	4313      	orrs	r3, r2
 8007830:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007832:	687b      	ldr	r3, [r7, #4]
 8007834:	4a17      	ldr	r2, [pc, #92]	; (8007894 <TIM_OC5_SetConfig+0xb4>)
 8007836:	4293      	cmp	r3, r2
 8007838:	d00f      	beq.n	800785a <TIM_OC5_SetConfig+0x7a>
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	4a16      	ldr	r2, [pc, #88]	; (8007898 <TIM_OC5_SetConfig+0xb8>)
 800783e:	4293      	cmp	r3, r2
 8007840:	d00b      	beq.n	800785a <TIM_OC5_SetConfig+0x7a>
 8007842:	687b      	ldr	r3, [r7, #4]
 8007844:	4a15      	ldr	r2, [pc, #84]	; (800789c <TIM_OC5_SetConfig+0xbc>)
 8007846:	4293      	cmp	r3, r2
 8007848:	d007      	beq.n	800785a <TIM_OC5_SetConfig+0x7a>
 800784a:	687b      	ldr	r3, [r7, #4]
 800784c:	4a14      	ldr	r2, [pc, #80]	; (80078a0 <TIM_OC5_SetConfig+0xc0>)
 800784e:	4293      	cmp	r3, r2
 8007850:	d003      	beq.n	800785a <TIM_OC5_SetConfig+0x7a>
 8007852:	687b      	ldr	r3, [r7, #4]
 8007854:	4a13      	ldr	r2, [pc, #76]	; (80078a4 <TIM_OC5_SetConfig+0xc4>)
 8007856:	4293      	cmp	r3, r2
 8007858:	d109      	bne.n	800786e <TIM_OC5_SetConfig+0x8e>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS5;
 800785a:	697b      	ldr	r3, [r7, #20]
 800785c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007860:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 8007862:	683b      	ldr	r3, [r7, #0]
 8007864:	695b      	ldr	r3, [r3, #20]
 8007866:	021b      	lsls	r3, r3, #8
 8007868:	697a      	ldr	r2, [r7, #20]
 800786a:	4313      	orrs	r3, r2
 800786c:	617b      	str	r3, [r7, #20]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800786e:	687b      	ldr	r3, [r7, #4]
 8007870:	697a      	ldr	r2, [r7, #20]
 8007872:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 8007874:	687b      	ldr	r3, [r7, #4]
 8007876:	68fa      	ldr	r2, [r7, #12]
 8007878:	655a      	str	r2, [r3, #84]	; 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR5 = OC_Config->Pulse;
 800787a:	683b      	ldr	r3, [r7, #0]
 800787c:	685a      	ldr	r2, [r3, #4]
 800787e:	687b      	ldr	r3, [r7, #4]
 8007880:	659a      	str	r2, [r3, #88]	; 0x58

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	693a      	ldr	r2, [r7, #16]
 8007886:	621a      	str	r2, [r3, #32]
}
 8007888:	bf00      	nop
 800788a:	371c      	adds	r7, #28
 800788c:	46bd      	mov	sp, r7
 800788e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007892:	4770      	bx	lr
 8007894:	40012c00 	.word	0x40012c00
 8007898:	40013400 	.word	0x40013400
 800789c:	40014000 	.word	0x40014000
 80078a0:	40014400 	.word	0x40014400
 80078a4:	40014800 	.word	0x40014800

080078a8 <TIM_OC6_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC6_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 80078a8:	b480      	push	{r7}
 80078aa:	b087      	sub	sp, #28
 80078ac:	af00      	add	r7, sp, #0
 80078ae:	6078      	str	r0, [r7, #4]
 80078b0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC6E;
 80078b2:	687b      	ldr	r3, [r7, #4]
 80078b4:	6a1b      	ldr	r3, [r3, #32]
 80078b6:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 80078ba:	687b      	ldr	r3, [r7, #4]
 80078bc:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	6a1b      	ldr	r3, [r3, #32]
 80078c2:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80078c4:	687b      	ldr	r3, [r7, #4]
 80078c6:	685b      	ldr	r3, [r3, #4]
 80078c8:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 80078ca:	687b      	ldr	r3, [r7, #4]
 80078cc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80078ce:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 80078d0:	68fb      	ldr	r3, [r7, #12]
 80078d2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80078d6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80078da:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80078dc:	683b      	ldr	r3, [r7, #0]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	021b      	lsls	r3, r3, #8
 80078e2:	68fa      	ldr	r2, [r7, #12]
 80078e4:	4313      	orrs	r3, r2
 80078e6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 80078e8:	693b      	ldr	r3, [r7, #16]
 80078ea:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80078ee:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 80078f0:	683b      	ldr	r3, [r7, #0]
 80078f2:	689b      	ldr	r3, [r3, #8]
 80078f4:	051b      	lsls	r3, r3, #20
 80078f6:	693a      	ldr	r2, [r7, #16]
 80078f8:	4313      	orrs	r3, r2
 80078fa:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	4a18      	ldr	r2, [pc, #96]	; (8007960 <TIM_OC6_SetConfig+0xb8>)
 8007900:	4293      	cmp	r3, r2
 8007902:	d00f      	beq.n	8007924 <TIM_OC6_SetConfig+0x7c>
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	4a17      	ldr	r2, [pc, #92]	; (8007964 <TIM_OC6_SetConfig+0xbc>)
 8007908:	4293      	cmp	r3, r2
 800790a:	d00b      	beq.n	8007924 <TIM_OC6_SetConfig+0x7c>
 800790c:	687b      	ldr	r3, [r7, #4]
 800790e:	4a16      	ldr	r2, [pc, #88]	; (8007968 <TIM_OC6_SetConfig+0xc0>)
 8007910:	4293      	cmp	r3, r2
 8007912:	d007      	beq.n	8007924 <TIM_OC6_SetConfig+0x7c>
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	4a15      	ldr	r2, [pc, #84]	; (800796c <TIM_OC6_SetConfig+0xc4>)
 8007918:	4293      	cmp	r3, r2
 800791a:	d003      	beq.n	8007924 <TIM_OC6_SetConfig+0x7c>
 800791c:	687b      	ldr	r3, [r7, #4]
 800791e:	4a14      	ldr	r2, [pc, #80]	; (8007970 <TIM_OC6_SetConfig+0xc8>)
 8007920:	4293      	cmp	r3, r2
 8007922:	d109      	bne.n	8007938 <TIM_OC6_SetConfig+0x90>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS6;
 8007924:	697b      	ldr	r3, [r7, #20]
 8007926:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800792a:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 800792c:	683b      	ldr	r3, [r7, #0]
 800792e:	695b      	ldr	r3, [r3, #20]
 8007930:	029b      	lsls	r3, r3, #10
 8007932:	697a      	ldr	r2, [r7, #20]
 8007934:	4313      	orrs	r3, r2
 8007936:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	697a      	ldr	r2, [r7, #20]
 800793c:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	68fa      	ldr	r2, [r7, #12]
 8007942:	655a      	str	r2, [r3, #84]	; 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 8007944:	683b      	ldr	r3, [r7, #0]
 8007946:	685a      	ldr	r2, [r3, #4]
 8007948:	687b      	ldr	r3, [r7, #4]
 800794a:	65da      	str	r2, [r3, #92]	; 0x5c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800794c:	687b      	ldr	r3, [r7, #4]
 800794e:	693a      	ldr	r2, [r7, #16]
 8007950:	621a      	str	r2, [r3, #32]
}
 8007952:	bf00      	nop
 8007954:	371c      	adds	r7, #28
 8007956:	46bd      	mov	sp, r7
 8007958:	f85d 7b04 	ldr.w	r7, [sp], #4
 800795c:	4770      	bx	lr
 800795e:	bf00      	nop
 8007960:	40012c00 	.word	0x40012c00
 8007964:	40013400 	.word	0x40013400
 8007968:	40014000 	.word	0x40014000
 800796c:	40014400 	.word	0x40014400
 8007970:	40014800 	.word	0x40014800

08007974 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007974:	b480      	push	{r7}
 8007976:	b087      	sub	sp, #28
 8007978:	af00      	add	r7, sp, #0
 800797a:	60f8      	str	r0, [r7, #12]
 800797c:	60b9      	str	r1, [r7, #8]
 800797e:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8007980:	68fb      	ldr	r3, [r7, #12]
 8007982:	6a1b      	ldr	r3, [r3, #32]
 8007984:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007986:	68fb      	ldr	r3, [r7, #12]
 8007988:	6a1b      	ldr	r3, [r3, #32]
 800798a:	f023 0201 	bic.w	r2, r3, #1
 800798e:	68fb      	ldr	r3, [r7, #12]
 8007990:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007992:	68fb      	ldr	r3, [r7, #12]
 8007994:	699b      	ldr	r3, [r3, #24]
 8007996:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007998:	693b      	ldr	r3, [r7, #16]
 800799a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800799e:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 80079a0:	687b      	ldr	r3, [r7, #4]
 80079a2:	011b      	lsls	r3, r3, #4
 80079a4:	693a      	ldr	r2, [r7, #16]
 80079a6:	4313      	orrs	r3, r2
 80079a8:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80079aa:	697b      	ldr	r3, [r7, #20]
 80079ac:	f023 030a 	bic.w	r3, r3, #10
 80079b0:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 80079b2:	697a      	ldr	r2, [r7, #20]
 80079b4:	68bb      	ldr	r3, [r7, #8]
 80079b6:	4313      	orrs	r3, r2
 80079b8:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 80079ba:	68fb      	ldr	r3, [r7, #12]
 80079bc:	693a      	ldr	r2, [r7, #16]
 80079be:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80079c0:	68fb      	ldr	r3, [r7, #12]
 80079c2:	697a      	ldr	r2, [r7, #20]
 80079c4:	621a      	str	r2, [r3, #32]
}
 80079c6:	bf00      	nop
 80079c8:	371c      	adds	r7, #28
 80079ca:	46bd      	mov	sp, r7
 80079cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079d0:	4770      	bx	lr

080079d2 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 80079d2:	b480      	push	{r7}
 80079d4:	b087      	sub	sp, #28
 80079d6:	af00      	add	r7, sp, #0
 80079d8:	60f8      	str	r0, [r7, #12]
 80079da:	60b9      	str	r1, [r7, #8]
 80079dc:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80079de:	68fb      	ldr	r3, [r7, #12]
 80079e0:	6a1b      	ldr	r3, [r3, #32]
 80079e2:	f023 0210 	bic.w	r2, r3, #16
 80079e6:	68fb      	ldr	r3, [r7, #12]
 80079e8:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80079ea:	68fb      	ldr	r3, [r7, #12]
 80079ec:	699b      	ldr	r3, [r3, #24]
 80079ee:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 80079f0:	68fb      	ldr	r3, [r7, #12]
 80079f2:	6a1b      	ldr	r3, [r3, #32]
 80079f4:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80079f6:	697b      	ldr	r3, [r7, #20]
 80079f8:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80079fc:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80079fe:	687b      	ldr	r3, [r7, #4]
 8007a00:	031b      	lsls	r3, r3, #12
 8007a02:	697a      	ldr	r2, [r7, #20]
 8007a04:	4313      	orrs	r3, r2
 8007a06:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007a08:	693b      	ldr	r3, [r7, #16]
 8007a0a:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8007a0e:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 8007a10:	68bb      	ldr	r3, [r7, #8]
 8007a12:	011b      	lsls	r3, r3, #4
 8007a14:	693a      	ldr	r2, [r7, #16]
 8007a16:	4313      	orrs	r3, r2
 8007a18:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8007a1a:	68fb      	ldr	r3, [r7, #12]
 8007a1c:	697a      	ldr	r2, [r7, #20]
 8007a1e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007a20:	68fb      	ldr	r3, [r7, #12]
 8007a22:	693a      	ldr	r2, [r7, #16]
 8007a24:	621a      	str	r2, [r3, #32]
}
 8007a26:	bf00      	nop
 8007a28:	371c      	adds	r7, #28
 8007a2a:	46bd      	mov	sp, r7
 8007a2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a30:	4770      	bx	lr

08007a32 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8007a32:	b480      	push	{r7}
 8007a34:	b085      	sub	sp, #20
 8007a36:	af00      	add	r7, sp, #0
 8007a38:	6078      	str	r0, [r7, #4]
 8007a3a:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8007a3c:	687b      	ldr	r3, [r7, #4]
 8007a3e:	689b      	ldr	r3, [r3, #8]
 8007a40:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8007a42:	68fb      	ldr	r3, [r7, #12]
 8007a44:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007a48:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007a4a:	683a      	ldr	r2, [r7, #0]
 8007a4c:	68fb      	ldr	r3, [r7, #12]
 8007a4e:	4313      	orrs	r3, r2
 8007a50:	f043 0307 	orr.w	r3, r3, #7
 8007a54:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007a56:	687b      	ldr	r3, [r7, #4]
 8007a58:	68fa      	ldr	r2, [r7, #12]
 8007a5a:	609a      	str	r2, [r3, #8]
}
 8007a5c:	bf00      	nop
 8007a5e:	3714      	adds	r7, #20
 8007a60:	46bd      	mov	sp, r7
 8007a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a66:	4770      	bx	lr

08007a68 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8007a68:	b480      	push	{r7}
 8007a6a:	b087      	sub	sp, #28
 8007a6c:	af00      	add	r7, sp, #0
 8007a6e:	60f8      	str	r0, [r7, #12]
 8007a70:	60b9      	str	r1, [r7, #8]
 8007a72:	607a      	str	r2, [r7, #4]
 8007a74:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8007a76:	68fb      	ldr	r3, [r7, #12]
 8007a78:	689b      	ldr	r3, [r3, #8]
 8007a7a:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007a7c:	697b      	ldr	r3, [r7, #20]
 8007a7e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007a82:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007a84:	683b      	ldr	r3, [r7, #0]
 8007a86:	021a      	lsls	r2, r3, #8
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	431a      	orrs	r2, r3
 8007a8c:	68bb      	ldr	r3, [r7, #8]
 8007a8e:	4313      	orrs	r3, r2
 8007a90:	697a      	ldr	r2, [r7, #20]
 8007a92:	4313      	orrs	r3, r2
 8007a94:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007a96:	68fb      	ldr	r3, [r7, #12]
 8007a98:	697a      	ldr	r2, [r7, #20]
 8007a9a:	609a      	str	r2, [r3, #8]
}
 8007a9c:	bf00      	nop
 8007a9e:	371c      	adds	r7, #28
 8007aa0:	46bd      	mov	sp, r7
 8007aa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007aa6:	4770      	bx	lr

08007aa8 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8007aa8:	b480      	push	{r7}
 8007aaa:	b087      	sub	sp, #28
 8007aac:	af00      	add	r7, sp, #0
 8007aae:	60f8      	str	r0, [r7, #12]
 8007ab0:	60b9      	str	r1, [r7, #8]
 8007ab2:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007ab4:	68bb      	ldr	r3, [r7, #8]
 8007ab6:	f003 031f 	and.w	r3, r3, #31
 8007aba:	2201      	movs	r2, #1
 8007abc:	fa02 f303 	lsl.w	r3, r2, r3
 8007ac0:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8007ac2:	68fb      	ldr	r3, [r7, #12]
 8007ac4:	6a1a      	ldr	r2, [r3, #32]
 8007ac6:	697b      	ldr	r3, [r7, #20]
 8007ac8:	43db      	mvns	r3, r3
 8007aca:	401a      	ands	r2, r3
 8007acc:	68fb      	ldr	r3, [r7, #12]
 8007ace:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8007ad0:	68fb      	ldr	r3, [r7, #12]
 8007ad2:	6a1a      	ldr	r2, [r3, #32]
 8007ad4:	68bb      	ldr	r3, [r7, #8]
 8007ad6:	f003 031f 	and.w	r3, r3, #31
 8007ada:	6879      	ldr	r1, [r7, #4]
 8007adc:	fa01 f303 	lsl.w	r3, r1, r3
 8007ae0:	431a      	orrs	r2, r3
 8007ae2:	68fb      	ldr	r3, [r7, #12]
 8007ae4:	621a      	str	r2, [r3, #32]
}
 8007ae6:	bf00      	nop
 8007ae8:	371c      	adds	r7, #28
 8007aea:	46bd      	mov	sp, r7
 8007aec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007af0:	4770      	bx	lr
	...

08007af4 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8007af4:	b480      	push	{r7}
 8007af6:	b085      	sub	sp, #20
 8007af8:	af00      	add	r7, sp, #0
 8007afa:	6078      	str	r0, [r7, #4]
 8007afc:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007afe:	687b      	ldr	r3, [r7, #4]
 8007b00:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007b04:	2b01      	cmp	r3, #1
 8007b06:	d101      	bne.n	8007b0c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007b08:	2302      	movs	r3, #2
 8007b0a:	e068      	b.n	8007bde <HAL_TIMEx_MasterConfigSynchronization+0xea>
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	2201      	movs	r2, #1
 8007b10:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007b14:	687b      	ldr	r3, [r7, #4]
 8007b16:	2202      	movs	r2, #2
 8007b18:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007b1c:	687b      	ldr	r3, [r7, #4]
 8007b1e:	681b      	ldr	r3, [r3, #0]
 8007b20:	685b      	ldr	r3, [r3, #4]
 8007b22:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	681b      	ldr	r3, [r3, #0]
 8007b28:	689b      	ldr	r3, [r3, #8]
 8007b2a:	60bb      	str	r3, [r7, #8]

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8007b2c:	687b      	ldr	r3, [r7, #4]
 8007b2e:	681b      	ldr	r3, [r3, #0]
 8007b30:	4a2e      	ldr	r2, [pc, #184]	; (8007bec <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 8007b32:	4293      	cmp	r3, r2
 8007b34:	d004      	beq.n	8007b40 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8007b36:	687b      	ldr	r3, [r7, #4]
 8007b38:	681b      	ldr	r3, [r3, #0]
 8007b3a:	4a2d      	ldr	r2, [pc, #180]	; (8007bf0 <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 8007b3c:	4293      	cmp	r3, r2
 8007b3e:	d108      	bne.n	8007b52 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 8007b40:	68fb      	ldr	r3, [r7, #12]
 8007b42:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8007b46:	60fb      	str	r3, [r7, #12]
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8007b48:	683b      	ldr	r3, [r7, #0]
 8007b4a:	685b      	ldr	r3, [r3, #4]
 8007b4c:	68fa      	ldr	r2, [r7, #12]
 8007b4e:	4313      	orrs	r3, r2
 8007b50:	60fb      	str	r3, [r7, #12]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8007b52:	68fb      	ldr	r3, [r7, #12]
 8007b54:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007b58:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007b5a:	683b      	ldr	r3, [r7, #0]
 8007b5c:	681b      	ldr	r3, [r3, #0]
 8007b5e:	68fa      	ldr	r2, [r7, #12]
 8007b60:	4313      	orrs	r3, r2
 8007b62:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	681b      	ldr	r3, [r3, #0]
 8007b68:	68fa      	ldr	r2, [r7, #12]
 8007b6a:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007b6c:	687b      	ldr	r3, [r7, #4]
 8007b6e:	681b      	ldr	r3, [r3, #0]
 8007b70:	4a1e      	ldr	r2, [pc, #120]	; (8007bec <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 8007b72:	4293      	cmp	r3, r2
 8007b74:	d01d      	beq.n	8007bb2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 8007b76:	687b      	ldr	r3, [r7, #4]
 8007b78:	681b      	ldr	r3, [r3, #0]
 8007b7a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007b7e:	d018      	beq.n	8007bb2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 8007b80:	687b      	ldr	r3, [r7, #4]
 8007b82:	681b      	ldr	r3, [r3, #0]
 8007b84:	4a1b      	ldr	r2, [pc, #108]	; (8007bf4 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8007b86:	4293      	cmp	r3, r2
 8007b88:	d013      	beq.n	8007bb2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 8007b8a:	687b      	ldr	r3, [r7, #4]
 8007b8c:	681b      	ldr	r3, [r3, #0]
 8007b8e:	4a1a      	ldr	r2, [pc, #104]	; (8007bf8 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8007b90:	4293      	cmp	r3, r2
 8007b92:	d00e      	beq.n	8007bb2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 8007b94:	687b      	ldr	r3, [r7, #4]
 8007b96:	681b      	ldr	r3, [r3, #0]
 8007b98:	4a18      	ldr	r2, [pc, #96]	; (8007bfc <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 8007b9a:	4293      	cmp	r3, r2
 8007b9c:	d009      	beq.n	8007bb2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	4a13      	ldr	r2, [pc, #76]	; (8007bf0 <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 8007ba4:	4293      	cmp	r3, r2
 8007ba6:	d004      	beq.n	8007bb2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 8007ba8:	687b      	ldr	r3, [r7, #4]
 8007baa:	681b      	ldr	r3, [r3, #0]
 8007bac:	4a14      	ldr	r2, [pc, #80]	; (8007c00 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 8007bae:	4293      	cmp	r3, r2
 8007bb0:	d10c      	bne.n	8007bcc <HAL_TIMEx_MasterConfigSynchronization+0xd8>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007bb2:	68bb      	ldr	r3, [r7, #8]
 8007bb4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007bb8:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007bba:	683b      	ldr	r3, [r7, #0]
 8007bbc:	689b      	ldr	r3, [r3, #8]
 8007bbe:	68ba      	ldr	r2, [r7, #8]
 8007bc0:	4313      	orrs	r3, r2
 8007bc2:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007bc4:	687b      	ldr	r3, [r7, #4]
 8007bc6:	681b      	ldr	r3, [r3, #0]
 8007bc8:	68ba      	ldr	r2, [r7, #8]
 8007bca:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007bcc:	687b      	ldr	r3, [r7, #4]
 8007bce:	2201      	movs	r2, #1
 8007bd0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007bd4:	687b      	ldr	r3, [r7, #4]
 8007bd6:	2200      	movs	r2, #0
 8007bd8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8007bdc:	2300      	movs	r3, #0
}
 8007bde:	4618      	mov	r0, r3
 8007be0:	3714      	adds	r7, #20
 8007be2:	46bd      	mov	sp, r7
 8007be4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007be8:	4770      	bx	lr
 8007bea:	bf00      	nop
 8007bec:	40012c00 	.word	0x40012c00
 8007bf0:	40013400 	.word	0x40013400
 8007bf4:	40000400 	.word	0x40000400
 8007bf8:	40000800 	.word	0x40000800
 8007bfc:	40000c00 	.word	0x40000c00
 8007c00:	40014000 	.word	0x40014000

08007c04 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8007c04:	b480      	push	{r7}
 8007c06:	b083      	sub	sp, #12
 8007c08:	af00      	add	r7, sp, #0
 8007c0a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8007c0c:	bf00      	nop
 8007c0e:	370c      	adds	r7, #12
 8007c10:	46bd      	mov	sp, r7
 8007c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c16:	4770      	bx	lr

08007c18 <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8007c18:	b480      	push	{r7}
 8007c1a:	b083      	sub	sp, #12
 8007c1c:	af00      	add	r7, sp, #0
 8007c1e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8007c20:	bf00      	nop
 8007c22:	370c      	adds	r7, #12
 8007c24:	46bd      	mov	sp, r7
 8007c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c2a:	4770      	bx	lr

08007c2c <HAL_TIMEx_Break2Callback>:
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
{
 8007c2c:	b480      	push	{r7}
 8007c2e:	b083      	sub	sp, #12
 8007c30:	af00      	add	r7, sp, #0
 8007c32:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_TIMEx_Break2Callback could be implemented in the user file
   */
}
 8007c34:	bf00      	nop
 8007c36:	370c      	adds	r7, #12
 8007c38:	46bd      	mov	sp, r7
 8007c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c3e:	4770      	bx	lr

08007c40 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8007c40:	b580      	push	{r7, lr}
 8007c42:	b082      	sub	sp, #8
 8007c44:	af00      	add	r7, sp, #0
 8007c46:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8007c48:	687b      	ldr	r3, [r7, #4]
 8007c4a:	2b00      	cmp	r3, #0
 8007c4c:	d101      	bne.n	8007c52 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8007c4e:	2301      	movs	r3, #1
 8007c50:	e040      	b.n	8007cd4 <HAL_UART_Init+0x94>
  {
    /* Check the parameters */
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8007c52:	687b      	ldr	r3, [r7, #4]
 8007c54:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8007c56:	2b00      	cmp	r3, #0
 8007c58:	d106      	bne.n	8007c68 <HAL_UART_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8007c5a:	687b      	ldr	r3, [r7, #4]
 8007c5c:	2200      	movs	r2, #0
 8007c5e:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8007c62:	6878      	ldr	r0, [r7, #4]
 8007c64:	f7fb f898 	bl	8002d98 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8007c68:	687b      	ldr	r3, [r7, #4]
 8007c6a:	2224      	movs	r2, #36	; 0x24
 8007c6c:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 8007c6e:	687b      	ldr	r3, [r7, #4]
 8007c70:	681b      	ldr	r3, [r3, #0]
 8007c72:	681a      	ldr	r2, [r3, #0]
 8007c74:	687b      	ldr	r3, [r7, #4]
 8007c76:	681b      	ldr	r3, [r3, #0]
 8007c78:	f022 0201 	bic.w	r2, r2, #1
 8007c7c:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8007c7e:	6878      	ldr	r0, [r7, #4]
 8007c80:	f000 f992 	bl	8007fa8 <UART_SetConfig>
 8007c84:	4603      	mov	r3, r0
 8007c86:	2b01      	cmp	r3, #1
 8007c88:	d101      	bne.n	8007c8e <HAL_UART_Init+0x4e>
  {
    return HAL_ERROR;
 8007c8a:	2301      	movs	r3, #1
 8007c8c:	e022      	b.n	8007cd4 <HAL_UART_Init+0x94>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8007c8e:	687b      	ldr	r3, [r7, #4]
 8007c90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007c92:	2b00      	cmp	r3, #0
 8007c94:	d002      	beq.n	8007c9c <HAL_UART_Init+0x5c>
  {
    UART_AdvFeatureConfig(huart);
 8007c96:	6878      	ldr	r0, [r7, #4]
 8007c98:	f000 fc3e 	bl	8008518 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8007c9c:	687b      	ldr	r3, [r7, #4]
 8007c9e:	681b      	ldr	r3, [r3, #0]
 8007ca0:	685a      	ldr	r2, [r3, #4]
 8007ca2:	687b      	ldr	r3, [r7, #4]
 8007ca4:	681b      	ldr	r3, [r3, #0]
 8007ca6:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8007caa:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8007cac:	687b      	ldr	r3, [r7, #4]
 8007cae:	681b      	ldr	r3, [r3, #0]
 8007cb0:	689a      	ldr	r2, [r3, #8]
 8007cb2:	687b      	ldr	r3, [r7, #4]
 8007cb4:	681b      	ldr	r3, [r3, #0]
 8007cb6:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8007cba:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 8007cbc:	687b      	ldr	r3, [r7, #4]
 8007cbe:	681b      	ldr	r3, [r3, #0]
 8007cc0:	681a      	ldr	r2, [r3, #0]
 8007cc2:	687b      	ldr	r3, [r7, #4]
 8007cc4:	681b      	ldr	r3, [r3, #0]
 8007cc6:	f042 0201 	orr.w	r2, r2, #1
 8007cca:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8007ccc:	6878      	ldr	r0, [r7, #4]
 8007cce:	f000 fcc5 	bl	800865c <UART_CheckIdleState>
 8007cd2:	4603      	mov	r3, r0
}
 8007cd4:	4618      	mov	r0, r3
 8007cd6:	3708      	adds	r7, #8
 8007cd8:	46bd      	mov	sp, r7
 8007cda:	bd80      	pop	{r7, pc}

08007cdc <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8007cdc:	b580      	push	{r7, lr}
 8007cde:	b08a      	sub	sp, #40	; 0x28
 8007ce0:	af02      	add	r7, sp, #8
 8007ce2:	60f8      	str	r0, [r7, #12]
 8007ce4:	60b9      	str	r1, [r7, #8]
 8007ce6:	603b      	str	r3, [r7, #0]
 8007ce8:	4613      	mov	r3, r2
 8007cea:	80fb      	strh	r3, [r7, #6]
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8007cec:	68fb      	ldr	r3, [r7, #12]
 8007cee:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8007cf0:	2b20      	cmp	r3, #32
 8007cf2:	f040 8082 	bne.w	8007dfa <HAL_UART_Transmit+0x11e>
  {
    if ((pData == NULL) || (Size == 0U))
 8007cf6:	68bb      	ldr	r3, [r7, #8]
 8007cf8:	2b00      	cmp	r3, #0
 8007cfa:	d002      	beq.n	8007d02 <HAL_UART_Transmit+0x26>
 8007cfc:	88fb      	ldrh	r3, [r7, #6]
 8007cfe:	2b00      	cmp	r3, #0
 8007d00:	d101      	bne.n	8007d06 <HAL_UART_Transmit+0x2a>
    {
      return  HAL_ERROR;
 8007d02:	2301      	movs	r3, #1
 8007d04:	e07a      	b.n	8007dfc <HAL_UART_Transmit+0x120>
    }

    __HAL_LOCK(huart);
 8007d06:	68fb      	ldr	r3, [r7, #12]
 8007d08:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8007d0c:	2b01      	cmp	r3, #1
 8007d0e:	d101      	bne.n	8007d14 <HAL_UART_Transmit+0x38>
 8007d10:	2302      	movs	r3, #2
 8007d12:	e073      	b.n	8007dfc <HAL_UART_Transmit+0x120>
 8007d14:	68fb      	ldr	r3, [r7, #12]
 8007d16:	2201      	movs	r2, #1
 8007d18:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007d1c:	68fb      	ldr	r3, [r7, #12]
 8007d1e:	2200      	movs	r2, #0
 8007d20:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007d24:	68fb      	ldr	r3, [r7, #12]
 8007d26:	2221      	movs	r2, #33	; 0x21
 8007d28:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8007d2a:	f7fb fa41 	bl	80031b0 <HAL_GetTick>
 8007d2e:	6178      	str	r0, [r7, #20]

    huart->TxXferSize  = Size;
 8007d30:	68fb      	ldr	r3, [r7, #12]
 8007d32:	88fa      	ldrh	r2, [r7, #6]
 8007d34:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
    huart->TxXferCount = Size;
 8007d38:	68fb      	ldr	r3, [r7, #12]
 8007d3a:	88fa      	ldrh	r2, [r7, #6]
 8007d3c:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007d40:	68fb      	ldr	r3, [r7, #12]
 8007d42:	689b      	ldr	r3, [r3, #8]
 8007d44:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007d48:	d108      	bne.n	8007d5c <HAL_UART_Transmit+0x80>
 8007d4a:	68fb      	ldr	r3, [r7, #12]
 8007d4c:	691b      	ldr	r3, [r3, #16]
 8007d4e:	2b00      	cmp	r3, #0
 8007d50:	d104      	bne.n	8007d5c <HAL_UART_Transmit+0x80>
    {
      pdata8bits  = NULL;
 8007d52:	2300      	movs	r3, #0
 8007d54:	61fb      	str	r3, [r7, #28]
      pdata16bits = (const uint16_t *) pData;
 8007d56:	68bb      	ldr	r3, [r7, #8]
 8007d58:	61bb      	str	r3, [r7, #24]
 8007d5a:	e003      	b.n	8007d64 <HAL_UART_Transmit+0x88>
    }
    else
    {
      pdata8bits  = pData;
 8007d5c:	68bb      	ldr	r3, [r7, #8]
 8007d5e:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8007d60:	2300      	movs	r3, #0
 8007d62:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 8007d64:	68fb      	ldr	r3, [r7, #12]
 8007d66:	2200      	movs	r2, #0
 8007d68:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    while (huart->TxXferCount > 0U)
 8007d6c:	e02d      	b.n	8007dca <HAL_UART_Transmit+0xee>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007d6e:	683b      	ldr	r3, [r7, #0]
 8007d70:	9300      	str	r3, [sp, #0]
 8007d72:	697b      	ldr	r3, [r7, #20]
 8007d74:	2200      	movs	r2, #0
 8007d76:	2180      	movs	r1, #128	; 0x80
 8007d78:	68f8      	ldr	r0, [r7, #12]
 8007d7a:	f000 fcb8 	bl	80086ee <UART_WaitOnFlagUntilTimeout>
 8007d7e:	4603      	mov	r3, r0
 8007d80:	2b00      	cmp	r3, #0
 8007d82:	d001      	beq.n	8007d88 <HAL_UART_Transmit+0xac>
      {
        return HAL_TIMEOUT;
 8007d84:	2303      	movs	r3, #3
 8007d86:	e039      	b.n	8007dfc <HAL_UART_Transmit+0x120>
      }
      if (pdata8bits == NULL)
 8007d88:	69fb      	ldr	r3, [r7, #28]
 8007d8a:	2b00      	cmp	r3, #0
 8007d8c:	d10b      	bne.n	8007da6 <HAL_UART_Transmit+0xca>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8007d8e:	69bb      	ldr	r3, [r7, #24]
 8007d90:	881a      	ldrh	r2, [r3, #0]
 8007d92:	68fb      	ldr	r3, [r7, #12]
 8007d94:	681b      	ldr	r3, [r3, #0]
 8007d96:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007d9a:	b292      	uxth	r2, r2
 8007d9c:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata16bits++;
 8007d9e:	69bb      	ldr	r3, [r7, #24]
 8007da0:	3302      	adds	r3, #2
 8007da2:	61bb      	str	r3, [r7, #24]
 8007da4:	e008      	b.n	8007db8 <HAL_UART_Transmit+0xdc>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8007da6:	69fb      	ldr	r3, [r7, #28]
 8007da8:	781a      	ldrb	r2, [r3, #0]
 8007daa:	68fb      	ldr	r3, [r7, #12]
 8007dac:	681b      	ldr	r3, [r3, #0]
 8007dae:	b292      	uxth	r2, r2
 8007db0:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata8bits++;
 8007db2:	69fb      	ldr	r3, [r7, #28]
 8007db4:	3301      	adds	r3, #1
 8007db6:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8007db8:	68fb      	ldr	r3, [r7, #12]
 8007dba:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8007dbe:	b29b      	uxth	r3, r3
 8007dc0:	3b01      	subs	r3, #1
 8007dc2:	b29a      	uxth	r2, r3
 8007dc4:	68fb      	ldr	r3, [r7, #12]
 8007dc6:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
    while (huart->TxXferCount > 0U)
 8007dca:	68fb      	ldr	r3, [r7, #12]
 8007dcc:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8007dd0:	b29b      	uxth	r3, r3
 8007dd2:	2b00      	cmp	r3, #0
 8007dd4:	d1cb      	bne.n	8007d6e <HAL_UART_Transmit+0x92>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8007dd6:	683b      	ldr	r3, [r7, #0]
 8007dd8:	9300      	str	r3, [sp, #0]
 8007dda:	697b      	ldr	r3, [r7, #20]
 8007ddc:	2200      	movs	r2, #0
 8007dde:	2140      	movs	r1, #64	; 0x40
 8007de0:	68f8      	ldr	r0, [r7, #12]
 8007de2:	f000 fc84 	bl	80086ee <UART_WaitOnFlagUntilTimeout>
 8007de6:	4603      	mov	r3, r0
 8007de8:	2b00      	cmp	r3, #0
 8007dea:	d001      	beq.n	8007df0 <HAL_UART_Transmit+0x114>
    {
      return HAL_TIMEOUT;
 8007dec:	2303      	movs	r3, #3
 8007dee:	e005      	b.n	8007dfc <HAL_UART_Transmit+0x120>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8007df0:	68fb      	ldr	r3, [r7, #12]
 8007df2:	2220      	movs	r2, #32
 8007df4:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 8007df6:	2300      	movs	r3, #0
 8007df8:	e000      	b.n	8007dfc <HAL_UART_Transmit+0x120>
  }
  else
  {
    return HAL_BUSY;
 8007dfa:	2302      	movs	r3, #2
  }
}
 8007dfc:	4618      	mov	r0, r3
 8007dfe:	3720      	adds	r7, #32
 8007e00:	46bd      	mov	sp, r7
 8007e02:	bd80      	pop	{r7, pc}

08007e04 <HAL_UART_Receive>:
  * @param Size    Amount of data elements (u8 or u16) to be received.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8007e04:	b580      	push	{r7, lr}
 8007e06:	b08a      	sub	sp, #40	; 0x28
 8007e08:	af02      	add	r7, sp, #8
 8007e0a:	60f8      	str	r0, [r7, #12]
 8007e0c:	60b9      	str	r1, [r7, #8]
 8007e0e:	603b      	str	r3, [r7, #0]
 8007e10:	4613      	mov	r3, r2
 8007e12:	80fb      	strh	r3, [r7, #6]
  uint16_t *pdata16bits;
  uint16_t uhMask;
  uint32_t tickstart;

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8007e14:	68fb      	ldr	r3, [r7, #12]
 8007e16:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8007e18:	2b20      	cmp	r3, #32
 8007e1a:	f040 80bf 	bne.w	8007f9c <HAL_UART_Receive+0x198>
  {
    if ((pData == NULL) || (Size == 0U))
 8007e1e:	68bb      	ldr	r3, [r7, #8]
 8007e20:	2b00      	cmp	r3, #0
 8007e22:	d002      	beq.n	8007e2a <HAL_UART_Receive+0x26>
 8007e24:	88fb      	ldrh	r3, [r7, #6]
 8007e26:	2b00      	cmp	r3, #0
 8007e28:	d101      	bne.n	8007e2e <HAL_UART_Receive+0x2a>
    {
      return  HAL_ERROR;
 8007e2a:	2301      	movs	r3, #1
 8007e2c:	e0b7      	b.n	8007f9e <HAL_UART_Receive+0x19a>
    }

    __HAL_LOCK(huart);
 8007e2e:	68fb      	ldr	r3, [r7, #12]
 8007e30:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8007e34:	2b01      	cmp	r3, #1
 8007e36:	d101      	bne.n	8007e3c <HAL_UART_Receive+0x38>
 8007e38:	2302      	movs	r3, #2
 8007e3a:	e0b0      	b.n	8007f9e <HAL_UART_Receive+0x19a>
 8007e3c:	68fb      	ldr	r3, [r7, #12]
 8007e3e:	2201      	movs	r2, #1
 8007e40:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007e44:	68fb      	ldr	r3, [r7, #12]
 8007e46:	2200      	movs	r2, #0
 8007e48:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8007e4c:	68fb      	ldr	r3, [r7, #12]
 8007e4e:	2222      	movs	r2, #34	; 0x22
 8007e50:	67da      	str	r2, [r3, #124]	; 0x7c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007e52:	68fb      	ldr	r3, [r7, #12]
 8007e54:	2200      	movs	r2, #0
 8007e56:	661a      	str	r2, [r3, #96]	; 0x60

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8007e58:	f7fb f9aa 	bl	80031b0 <HAL_GetTick>
 8007e5c:	6178      	str	r0, [r7, #20]

    huart->RxXferSize  = Size;
 8007e5e:	68fb      	ldr	r3, [r7, #12]
 8007e60:	88fa      	ldrh	r2, [r7, #6]
 8007e62:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
    huart->RxXferCount = Size;
 8007e66:	68fb      	ldr	r3, [r7, #12]
 8007e68:	88fa      	ldrh	r2, [r7, #6]
 8007e6a:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    /* Computation of UART mask to apply to RDR register */
    UART_MASK_COMPUTATION(huart);
 8007e6e:	68fb      	ldr	r3, [r7, #12]
 8007e70:	689b      	ldr	r3, [r3, #8]
 8007e72:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007e76:	d10e      	bne.n	8007e96 <HAL_UART_Receive+0x92>
 8007e78:	68fb      	ldr	r3, [r7, #12]
 8007e7a:	691b      	ldr	r3, [r3, #16]
 8007e7c:	2b00      	cmp	r3, #0
 8007e7e:	d105      	bne.n	8007e8c <HAL_UART_Receive+0x88>
 8007e80:	68fb      	ldr	r3, [r7, #12]
 8007e82:	f240 12ff 	movw	r2, #511	; 0x1ff
 8007e86:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8007e8a:	e02d      	b.n	8007ee8 <HAL_UART_Receive+0xe4>
 8007e8c:	68fb      	ldr	r3, [r7, #12]
 8007e8e:	22ff      	movs	r2, #255	; 0xff
 8007e90:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8007e94:	e028      	b.n	8007ee8 <HAL_UART_Receive+0xe4>
 8007e96:	68fb      	ldr	r3, [r7, #12]
 8007e98:	689b      	ldr	r3, [r3, #8]
 8007e9a:	2b00      	cmp	r3, #0
 8007e9c:	d10d      	bne.n	8007eba <HAL_UART_Receive+0xb6>
 8007e9e:	68fb      	ldr	r3, [r7, #12]
 8007ea0:	691b      	ldr	r3, [r3, #16]
 8007ea2:	2b00      	cmp	r3, #0
 8007ea4:	d104      	bne.n	8007eb0 <HAL_UART_Receive+0xac>
 8007ea6:	68fb      	ldr	r3, [r7, #12]
 8007ea8:	22ff      	movs	r2, #255	; 0xff
 8007eaa:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8007eae:	e01b      	b.n	8007ee8 <HAL_UART_Receive+0xe4>
 8007eb0:	68fb      	ldr	r3, [r7, #12]
 8007eb2:	227f      	movs	r2, #127	; 0x7f
 8007eb4:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8007eb8:	e016      	b.n	8007ee8 <HAL_UART_Receive+0xe4>
 8007eba:	68fb      	ldr	r3, [r7, #12]
 8007ebc:	689b      	ldr	r3, [r3, #8]
 8007ebe:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8007ec2:	d10d      	bne.n	8007ee0 <HAL_UART_Receive+0xdc>
 8007ec4:	68fb      	ldr	r3, [r7, #12]
 8007ec6:	691b      	ldr	r3, [r3, #16]
 8007ec8:	2b00      	cmp	r3, #0
 8007eca:	d104      	bne.n	8007ed6 <HAL_UART_Receive+0xd2>
 8007ecc:	68fb      	ldr	r3, [r7, #12]
 8007ece:	227f      	movs	r2, #127	; 0x7f
 8007ed0:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8007ed4:	e008      	b.n	8007ee8 <HAL_UART_Receive+0xe4>
 8007ed6:	68fb      	ldr	r3, [r7, #12]
 8007ed8:	223f      	movs	r2, #63	; 0x3f
 8007eda:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8007ede:	e003      	b.n	8007ee8 <HAL_UART_Receive+0xe4>
 8007ee0:	68fb      	ldr	r3, [r7, #12]
 8007ee2:	2200      	movs	r2, #0
 8007ee4:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
    uhMask = huart->Mask;
 8007ee8:	68fb      	ldr	r3, [r7, #12]
 8007eea:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8007eee:	827b      	strh	r3, [r7, #18]

    /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007ef0:	68fb      	ldr	r3, [r7, #12]
 8007ef2:	689b      	ldr	r3, [r3, #8]
 8007ef4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007ef8:	d108      	bne.n	8007f0c <HAL_UART_Receive+0x108>
 8007efa:	68fb      	ldr	r3, [r7, #12]
 8007efc:	691b      	ldr	r3, [r3, #16]
 8007efe:	2b00      	cmp	r3, #0
 8007f00:	d104      	bne.n	8007f0c <HAL_UART_Receive+0x108>
    {
      pdata8bits  = NULL;
 8007f02:	2300      	movs	r3, #0
 8007f04:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 8007f06:	68bb      	ldr	r3, [r7, #8]
 8007f08:	61bb      	str	r3, [r7, #24]
 8007f0a:	e003      	b.n	8007f14 <HAL_UART_Receive+0x110>
    }
    else
    {
      pdata8bits  = pData;
 8007f0c:	68bb      	ldr	r3, [r7, #8]
 8007f0e:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8007f10:	2300      	movs	r3, #0
 8007f12:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 8007f14:	68fb      	ldr	r3, [r7, #12]
 8007f16:	2200      	movs	r2, #0
 8007f18:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* as long as data have to be received */
    while (huart->RxXferCount > 0U)
 8007f1c:	e033      	b.n	8007f86 <HAL_UART_Receive+0x182>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 8007f1e:	683b      	ldr	r3, [r7, #0]
 8007f20:	9300      	str	r3, [sp, #0]
 8007f22:	697b      	ldr	r3, [r7, #20]
 8007f24:	2200      	movs	r2, #0
 8007f26:	2120      	movs	r1, #32
 8007f28:	68f8      	ldr	r0, [r7, #12]
 8007f2a:	f000 fbe0 	bl	80086ee <UART_WaitOnFlagUntilTimeout>
 8007f2e:	4603      	mov	r3, r0
 8007f30:	2b00      	cmp	r3, #0
 8007f32:	d001      	beq.n	8007f38 <HAL_UART_Receive+0x134>
      {
        return HAL_TIMEOUT;
 8007f34:	2303      	movs	r3, #3
 8007f36:	e032      	b.n	8007f9e <HAL_UART_Receive+0x19a>
      }
      if (pdata8bits == NULL)
 8007f38:	69fb      	ldr	r3, [r7, #28]
 8007f3a:	2b00      	cmp	r3, #0
 8007f3c:	d10c      	bne.n	8007f58 <HAL_UART_Receive+0x154>
      {
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 8007f3e:	68fb      	ldr	r3, [r7, #12]
 8007f40:	681b      	ldr	r3, [r3, #0]
 8007f42:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8007f44:	b29a      	uxth	r2, r3
 8007f46:	8a7b      	ldrh	r3, [r7, #18]
 8007f48:	4013      	ands	r3, r2
 8007f4a:	b29a      	uxth	r2, r3
 8007f4c:	69bb      	ldr	r3, [r7, #24]
 8007f4e:	801a      	strh	r2, [r3, #0]
        pdata16bits++;
 8007f50:	69bb      	ldr	r3, [r7, #24]
 8007f52:	3302      	adds	r3, #2
 8007f54:	61bb      	str	r3, [r7, #24]
 8007f56:	e00d      	b.n	8007f74 <HAL_UART_Receive+0x170>
      }
      else
      {
        *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 8007f58:	68fb      	ldr	r3, [r7, #12]
 8007f5a:	681b      	ldr	r3, [r3, #0]
 8007f5c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8007f5e:	b29b      	uxth	r3, r3
 8007f60:	b2da      	uxtb	r2, r3
 8007f62:	8a7b      	ldrh	r3, [r7, #18]
 8007f64:	b2db      	uxtb	r3, r3
 8007f66:	4013      	ands	r3, r2
 8007f68:	b2da      	uxtb	r2, r3
 8007f6a:	69fb      	ldr	r3, [r7, #28]
 8007f6c:	701a      	strb	r2, [r3, #0]
        pdata8bits++;
 8007f6e:	69fb      	ldr	r3, [r7, #28]
 8007f70:	3301      	adds	r3, #1
 8007f72:	61fb      	str	r3, [r7, #28]
      }
      huart->RxXferCount--;
 8007f74:	68fb      	ldr	r3, [r7, #12]
 8007f76:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8007f7a:	b29b      	uxth	r3, r3
 8007f7c:	3b01      	subs	r3, #1
 8007f7e:	b29a      	uxth	r2, r3
 8007f80:	68fb      	ldr	r3, [r7, #12]
 8007f82:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
    while (huart->RxXferCount > 0U)
 8007f86:	68fb      	ldr	r3, [r7, #12]
 8007f88:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8007f8c:	b29b      	uxth	r3, r3
 8007f8e:	2b00      	cmp	r3, #0
 8007f90:	d1c5      	bne.n	8007f1e <HAL_UART_Receive+0x11a>
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 8007f92:	68fb      	ldr	r3, [r7, #12]
 8007f94:	2220      	movs	r2, #32
 8007f96:	67da      	str	r2, [r3, #124]	; 0x7c

    return HAL_OK;
 8007f98:	2300      	movs	r3, #0
 8007f9a:	e000      	b.n	8007f9e <HAL_UART_Receive+0x19a>
  }
  else
  {
    return HAL_BUSY;
 8007f9c:	2302      	movs	r3, #2
  }
}
 8007f9e:	4618      	mov	r0, r3
 8007fa0:	3720      	adds	r7, #32
 8007fa2:	46bd      	mov	sp, r7
 8007fa4:	bd80      	pop	{r7, pc}
	...

08007fa8 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8007fa8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007fac:	b08a      	sub	sp, #40	; 0x28
 8007fae:	af00      	add	r7, sp, #0
 8007fb0:	60f8      	str	r0, [r7, #12]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 8007fb2:	2300      	movs	r3, #0
 8007fb4:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8007fb8:	68fb      	ldr	r3, [r7, #12]
 8007fba:	689a      	ldr	r2, [r3, #8]
 8007fbc:	68fb      	ldr	r3, [r7, #12]
 8007fbe:	691b      	ldr	r3, [r3, #16]
 8007fc0:	431a      	orrs	r2, r3
 8007fc2:	68fb      	ldr	r3, [r7, #12]
 8007fc4:	695b      	ldr	r3, [r3, #20]
 8007fc6:	431a      	orrs	r2, r3
 8007fc8:	68fb      	ldr	r3, [r7, #12]
 8007fca:	69db      	ldr	r3, [r3, #28]
 8007fcc:	4313      	orrs	r3, r2
 8007fce:	627b      	str	r3, [r7, #36]	; 0x24
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8007fd0:	68fb      	ldr	r3, [r7, #12]
 8007fd2:	681b      	ldr	r3, [r3, #0]
 8007fd4:	681a      	ldr	r2, [r3, #0]
 8007fd6:	4ba4      	ldr	r3, [pc, #656]	; (8008268 <UART_SetConfig+0x2c0>)
 8007fd8:	4013      	ands	r3, r2
 8007fda:	68fa      	ldr	r2, [r7, #12]
 8007fdc:	6812      	ldr	r2, [r2, #0]
 8007fde:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8007fe0:	430b      	orrs	r3, r1
 8007fe2:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8007fe4:	68fb      	ldr	r3, [r7, #12]
 8007fe6:	681b      	ldr	r3, [r3, #0]
 8007fe8:	685b      	ldr	r3, [r3, #4]
 8007fea:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8007fee:	68fb      	ldr	r3, [r7, #12]
 8007ff0:	68da      	ldr	r2, [r3, #12]
 8007ff2:	68fb      	ldr	r3, [r7, #12]
 8007ff4:	681b      	ldr	r3, [r3, #0]
 8007ff6:	430a      	orrs	r2, r1
 8007ff8:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8007ffa:	68fb      	ldr	r3, [r7, #12]
 8007ffc:	699b      	ldr	r3, [r3, #24]
 8007ffe:	627b      	str	r3, [r7, #36]	; 0x24

  if (!(UART_INSTANCE_LOWPOWER(huart)))
 8008000:	68fb      	ldr	r3, [r7, #12]
 8008002:	681b      	ldr	r3, [r3, #0]
 8008004:	4a99      	ldr	r2, [pc, #612]	; (800826c <UART_SetConfig+0x2c4>)
 8008006:	4293      	cmp	r3, r2
 8008008:	d004      	beq.n	8008014 <UART_SetConfig+0x6c>
  {
    tmpreg |= huart->Init.OneBitSampling;
 800800a:	68fb      	ldr	r3, [r7, #12]
 800800c:	6a1b      	ldr	r3, [r3, #32]
 800800e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8008010:	4313      	orrs	r3, r2
 8008012:	627b      	str	r3, [r7, #36]	; 0x24
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8008014:	68fb      	ldr	r3, [r7, #12]
 8008016:	681b      	ldr	r3, [r3, #0]
 8008018:	689b      	ldr	r3, [r3, #8]
 800801a:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 800801e:	68fb      	ldr	r3, [r7, #12]
 8008020:	681b      	ldr	r3, [r3, #0]
 8008022:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8008024:	430a      	orrs	r2, r1
 8008026:	609a      	str	r2, [r3, #8]
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
#endif /* USART_PRESC_PRESCALER */

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8008028:	68fb      	ldr	r3, [r7, #12]
 800802a:	681b      	ldr	r3, [r3, #0]
 800802c:	4a90      	ldr	r2, [pc, #576]	; (8008270 <UART_SetConfig+0x2c8>)
 800802e:	4293      	cmp	r3, r2
 8008030:	d126      	bne.n	8008080 <UART_SetConfig+0xd8>
 8008032:	4b90      	ldr	r3, [pc, #576]	; (8008274 <UART_SetConfig+0x2cc>)
 8008034:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008038:	f003 0303 	and.w	r3, r3, #3
 800803c:	2b03      	cmp	r3, #3
 800803e:	d81b      	bhi.n	8008078 <UART_SetConfig+0xd0>
 8008040:	a201      	add	r2, pc, #4	; (adr r2, 8008048 <UART_SetConfig+0xa0>)
 8008042:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008046:	bf00      	nop
 8008048:	08008059 	.word	0x08008059
 800804c:	08008069 	.word	0x08008069
 8008050:	08008061 	.word	0x08008061
 8008054:	08008071 	.word	0x08008071
 8008058:	2301      	movs	r3, #1
 800805a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800805e:	e116      	b.n	800828e <UART_SetConfig+0x2e6>
 8008060:	2302      	movs	r3, #2
 8008062:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008066:	e112      	b.n	800828e <UART_SetConfig+0x2e6>
 8008068:	2304      	movs	r3, #4
 800806a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800806e:	e10e      	b.n	800828e <UART_SetConfig+0x2e6>
 8008070:	2308      	movs	r3, #8
 8008072:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008076:	e10a      	b.n	800828e <UART_SetConfig+0x2e6>
 8008078:	2310      	movs	r3, #16
 800807a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800807e:	e106      	b.n	800828e <UART_SetConfig+0x2e6>
 8008080:	68fb      	ldr	r3, [r7, #12]
 8008082:	681b      	ldr	r3, [r3, #0]
 8008084:	4a7c      	ldr	r2, [pc, #496]	; (8008278 <UART_SetConfig+0x2d0>)
 8008086:	4293      	cmp	r3, r2
 8008088:	d138      	bne.n	80080fc <UART_SetConfig+0x154>
 800808a:	4b7a      	ldr	r3, [pc, #488]	; (8008274 <UART_SetConfig+0x2cc>)
 800808c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008090:	f003 030c 	and.w	r3, r3, #12
 8008094:	2b0c      	cmp	r3, #12
 8008096:	d82d      	bhi.n	80080f4 <UART_SetConfig+0x14c>
 8008098:	a201      	add	r2, pc, #4	; (adr r2, 80080a0 <UART_SetConfig+0xf8>)
 800809a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800809e:	bf00      	nop
 80080a0:	080080d5 	.word	0x080080d5
 80080a4:	080080f5 	.word	0x080080f5
 80080a8:	080080f5 	.word	0x080080f5
 80080ac:	080080f5 	.word	0x080080f5
 80080b0:	080080e5 	.word	0x080080e5
 80080b4:	080080f5 	.word	0x080080f5
 80080b8:	080080f5 	.word	0x080080f5
 80080bc:	080080f5 	.word	0x080080f5
 80080c0:	080080dd 	.word	0x080080dd
 80080c4:	080080f5 	.word	0x080080f5
 80080c8:	080080f5 	.word	0x080080f5
 80080cc:	080080f5 	.word	0x080080f5
 80080d0:	080080ed 	.word	0x080080ed
 80080d4:	2300      	movs	r3, #0
 80080d6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80080da:	e0d8      	b.n	800828e <UART_SetConfig+0x2e6>
 80080dc:	2302      	movs	r3, #2
 80080de:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80080e2:	e0d4      	b.n	800828e <UART_SetConfig+0x2e6>
 80080e4:	2304      	movs	r3, #4
 80080e6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80080ea:	e0d0      	b.n	800828e <UART_SetConfig+0x2e6>
 80080ec:	2308      	movs	r3, #8
 80080ee:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80080f2:	e0cc      	b.n	800828e <UART_SetConfig+0x2e6>
 80080f4:	2310      	movs	r3, #16
 80080f6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80080fa:	e0c8      	b.n	800828e <UART_SetConfig+0x2e6>
 80080fc:	68fb      	ldr	r3, [r7, #12]
 80080fe:	681b      	ldr	r3, [r3, #0]
 8008100:	4a5e      	ldr	r2, [pc, #376]	; (800827c <UART_SetConfig+0x2d4>)
 8008102:	4293      	cmp	r3, r2
 8008104:	d125      	bne.n	8008152 <UART_SetConfig+0x1aa>
 8008106:	4b5b      	ldr	r3, [pc, #364]	; (8008274 <UART_SetConfig+0x2cc>)
 8008108:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800810c:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8008110:	2b30      	cmp	r3, #48	; 0x30
 8008112:	d016      	beq.n	8008142 <UART_SetConfig+0x19a>
 8008114:	2b30      	cmp	r3, #48	; 0x30
 8008116:	d818      	bhi.n	800814a <UART_SetConfig+0x1a2>
 8008118:	2b20      	cmp	r3, #32
 800811a:	d00a      	beq.n	8008132 <UART_SetConfig+0x18a>
 800811c:	2b20      	cmp	r3, #32
 800811e:	d814      	bhi.n	800814a <UART_SetConfig+0x1a2>
 8008120:	2b00      	cmp	r3, #0
 8008122:	d002      	beq.n	800812a <UART_SetConfig+0x182>
 8008124:	2b10      	cmp	r3, #16
 8008126:	d008      	beq.n	800813a <UART_SetConfig+0x192>
 8008128:	e00f      	b.n	800814a <UART_SetConfig+0x1a2>
 800812a:	2300      	movs	r3, #0
 800812c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008130:	e0ad      	b.n	800828e <UART_SetConfig+0x2e6>
 8008132:	2302      	movs	r3, #2
 8008134:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008138:	e0a9      	b.n	800828e <UART_SetConfig+0x2e6>
 800813a:	2304      	movs	r3, #4
 800813c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008140:	e0a5      	b.n	800828e <UART_SetConfig+0x2e6>
 8008142:	2308      	movs	r3, #8
 8008144:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008148:	e0a1      	b.n	800828e <UART_SetConfig+0x2e6>
 800814a:	2310      	movs	r3, #16
 800814c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008150:	e09d      	b.n	800828e <UART_SetConfig+0x2e6>
 8008152:	68fb      	ldr	r3, [r7, #12]
 8008154:	681b      	ldr	r3, [r3, #0]
 8008156:	4a4a      	ldr	r2, [pc, #296]	; (8008280 <UART_SetConfig+0x2d8>)
 8008158:	4293      	cmp	r3, r2
 800815a:	d125      	bne.n	80081a8 <UART_SetConfig+0x200>
 800815c:	4b45      	ldr	r3, [pc, #276]	; (8008274 <UART_SetConfig+0x2cc>)
 800815e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008162:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8008166:	2bc0      	cmp	r3, #192	; 0xc0
 8008168:	d016      	beq.n	8008198 <UART_SetConfig+0x1f0>
 800816a:	2bc0      	cmp	r3, #192	; 0xc0
 800816c:	d818      	bhi.n	80081a0 <UART_SetConfig+0x1f8>
 800816e:	2b80      	cmp	r3, #128	; 0x80
 8008170:	d00a      	beq.n	8008188 <UART_SetConfig+0x1e0>
 8008172:	2b80      	cmp	r3, #128	; 0x80
 8008174:	d814      	bhi.n	80081a0 <UART_SetConfig+0x1f8>
 8008176:	2b00      	cmp	r3, #0
 8008178:	d002      	beq.n	8008180 <UART_SetConfig+0x1d8>
 800817a:	2b40      	cmp	r3, #64	; 0x40
 800817c:	d008      	beq.n	8008190 <UART_SetConfig+0x1e8>
 800817e:	e00f      	b.n	80081a0 <UART_SetConfig+0x1f8>
 8008180:	2300      	movs	r3, #0
 8008182:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008186:	e082      	b.n	800828e <UART_SetConfig+0x2e6>
 8008188:	2302      	movs	r3, #2
 800818a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800818e:	e07e      	b.n	800828e <UART_SetConfig+0x2e6>
 8008190:	2304      	movs	r3, #4
 8008192:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008196:	e07a      	b.n	800828e <UART_SetConfig+0x2e6>
 8008198:	2308      	movs	r3, #8
 800819a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800819e:	e076      	b.n	800828e <UART_SetConfig+0x2e6>
 80081a0:	2310      	movs	r3, #16
 80081a2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80081a6:	e072      	b.n	800828e <UART_SetConfig+0x2e6>
 80081a8:	68fb      	ldr	r3, [r7, #12]
 80081aa:	681b      	ldr	r3, [r3, #0]
 80081ac:	4a35      	ldr	r2, [pc, #212]	; (8008284 <UART_SetConfig+0x2dc>)
 80081ae:	4293      	cmp	r3, r2
 80081b0:	d12a      	bne.n	8008208 <UART_SetConfig+0x260>
 80081b2:	4b30      	ldr	r3, [pc, #192]	; (8008274 <UART_SetConfig+0x2cc>)
 80081b4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80081b8:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80081bc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80081c0:	d01a      	beq.n	80081f8 <UART_SetConfig+0x250>
 80081c2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80081c6:	d81b      	bhi.n	8008200 <UART_SetConfig+0x258>
 80081c8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80081cc:	d00c      	beq.n	80081e8 <UART_SetConfig+0x240>
 80081ce:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80081d2:	d815      	bhi.n	8008200 <UART_SetConfig+0x258>
 80081d4:	2b00      	cmp	r3, #0
 80081d6:	d003      	beq.n	80081e0 <UART_SetConfig+0x238>
 80081d8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80081dc:	d008      	beq.n	80081f0 <UART_SetConfig+0x248>
 80081de:	e00f      	b.n	8008200 <UART_SetConfig+0x258>
 80081e0:	2300      	movs	r3, #0
 80081e2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80081e6:	e052      	b.n	800828e <UART_SetConfig+0x2e6>
 80081e8:	2302      	movs	r3, #2
 80081ea:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80081ee:	e04e      	b.n	800828e <UART_SetConfig+0x2e6>
 80081f0:	2304      	movs	r3, #4
 80081f2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80081f6:	e04a      	b.n	800828e <UART_SetConfig+0x2e6>
 80081f8:	2308      	movs	r3, #8
 80081fa:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80081fe:	e046      	b.n	800828e <UART_SetConfig+0x2e6>
 8008200:	2310      	movs	r3, #16
 8008202:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008206:	e042      	b.n	800828e <UART_SetConfig+0x2e6>
 8008208:	68fb      	ldr	r3, [r7, #12]
 800820a:	681b      	ldr	r3, [r3, #0]
 800820c:	4a17      	ldr	r2, [pc, #92]	; (800826c <UART_SetConfig+0x2c4>)
 800820e:	4293      	cmp	r3, r2
 8008210:	d13a      	bne.n	8008288 <UART_SetConfig+0x2e0>
 8008212:	4b18      	ldr	r3, [pc, #96]	; (8008274 <UART_SetConfig+0x2cc>)
 8008214:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008218:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800821c:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8008220:	d01a      	beq.n	8008258 <UART_SetConfig+0x2b0>
 8008222:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8008226:	d81b      	bhi.n	8008260 <UART_SetConfig+0x2b8>
 8008228:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800822c:	d00c      	beq.n	8008248 <UART_SetConfig+0x2a0>
 800822e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008232:	d815      	bhi.n	8008260 <UART_SetConfig+0x2b8>
 8008234:	2b00      	cmp	r3, #0
 8008236:	d003      	beq.n	8008240 <UART_SetConfig+0x298>
 8008238:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800823c:	d008      	beq.n	8008250 <UART_SetConfig+0x2a8>
 800823e:	e00f      	b.n	8008260 <UART_SetConfig+0x2b8>
 8008240:	2300      	movs	r3, #0
 8008242:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008246:	e022      	b.n	800828e <UART_SetConfig+0x2e6>
 8008248:	2302      	movs	r3, #2
 800824a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800824e:	e01e      	b.n	800828e <UART_SetConfig+0x2e6>
 8008250:	2304      	movs	r3, #4
 8008252:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008256:	e01a      	b.n	800828e <UART_SetConfig+0x2e6>
 8008258:	2308      	movs	r3, #8
 800825a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800825e:	e016      	b.n	800828e <UART_SetConfig+0x2e6>
 8008260:	2310      	movs	r3, #16
 8008262:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8008266:	e012      	b.n	800828e <UART_SetConfig+0x2e6>
 8008268:	efff69f3 	.word	0xefff69f3
 800826c:	40008000 	.word	0x40008000
 8008270:	40013800 	.word	0x40013800
 8008274:	40021000 	.word	0x40021000
 8008278:	40004400 	.word	0x40004400
 800827c:	40004800 	.word	0x40004800
 8008280:	40004c00 	.word	0x40004c00
 8008284:	40005000 	.word	0x40005000
 8008288:	2310      	movs	r3, #16
 800828a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23

  /* Check LPUART instance */
  if (UART_INSTANCE_LOWPOWER(huart))
 800828e:	68fb      	ldr	r3, [r7, #12]
 8008290:	681b      	ldr	r3, [r3, #0]
 8008292:	4a9f      	ldr	r2, [pc, #636]	; (8008510 <UART_SetConfig+0x568>)
 8008294:	4293      	cmp	r3, r2
 8008296:	d17a      	bne.n	800838e <UART_SetConfig+0x3e6>
  {
    /* Retrieve frequency clock */
    switch (clocksource)
 8008298:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800829c:	2b08      	cmp	r3, #8
 800829e:	d824      	bhi.n	80082ea <UART_SetConfig+0x342>
 80082a0:	a201      	add	r2, pc, #4	; (adr r2, 80082a8 <UART_SetConfig+0x300>)
 80082a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80082a6:	bf00      	nop
 80082a8:	080082cd 	.word	0x080082cd
 80082ac:	080082eb 	.word	0x080082eb
 80082b0:	080082d5 	.word	0x080082d5
 80082b4:	080082eb 	.word	0x080082eb
 80082b8:	080082db 	.word	0x080082db
 80082bc:	080082eb 	.word	0x080082eb
 80082c0:	080082eb 	.word	0x080082eb
 80082c4:	080082eb 	.word	0x080082eb
 80082c8:	080082e3 	.word	0x080082e3
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80082cc:	f7fc feb2 	bl	8005034 <HAL_RCC_GetPCLK1Freq>
 80082d0:	61f8      	str	r0, [r7, #28]
        break;
 80082d2:	e010      	b.n	80082f6 <UART_SetConfig+0x34e>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80082d4:	4b8f      	ldr	r3, [pc, #572]	; (8008514 <UART_SetConfig+0x56c>)
 80082d6:	61fb      	str	r3, [r7, #28]
        break;
 80082d8:	e00d      	b.n	80082f6 <UART_SetConfig+0x34e>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80082da:	f7fc fe13 	bl	8004f04 <HAL_RCC_GetSysClockFreq>
 80082de:	61f8      	str	r0, [r7, #28]
        break;
 80082e0:	e009      	b.n	80082f6 <UART_SetConfig+0x34e>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80082e2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80082e6:	61fb      	str	r3, [r7, #28]
        break;
 80082e8:	e005      	b.n	80082f6 <UART_SetConfig+0x34e>
      default:
        pclk = 0U;
 80082ea:	2300      	movs	r3, #0
 80082ec:	61fb      	str	r3, [r7, #28]
        ret = HAL_ERROR;
 80082ee:	2301      	movs	r3, #1
 80082f0:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
        break;
 80082f4:	bf00      	nop
    }

    /* If proper clock source reported */
    if (pclk != 0U)
 80082f6:	69fb      	ldr	r3, [r7, #28]
 80082f8:	2b00      	cmp	r3, #0
 80082fa:	f000 80fb 	beq.w	80084f4 <UART_SetConfig+0x54c>
      } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
                (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
#else
      /* No Prescaler applicable */
      /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((pclk < (3U * huart->Init.BaudRate)) ||
 80082fe:	68fb      	ldr	r3, [r7, #12]
 8008300:	685a      	ldr	r2, [r3, #4]
 8008302:	4613      	mov	r3, r2
 8008304:	005b      	lsls	r3, r3, #1
 8008306:	4413      	add	r3, r2
 8008308:	69fa      	ldr	r2, [r7, #28]
 800830a:	429a      	cmp	r2, r3
 800830c:	d305      	bcc.n	800831a <UART_SetConfig+0x372>
          (pclk > (4096U * huart->Init.BaudRate)))
 800830e:	68fb      	ldr	r3, [r7, #12]
 8008310:	685b      	ldr	r3, [r3, #4]
 8008312:	031b      	lsls	r3, r3, #12
      if ((pclk < (3U * huart->Init.BaudRate)) ||
 8008314:	69fa      	ldr	r2, [r7, #28]
 8008316:	429a      	cmp	r2, r3
 8008318:	d903      	bls.n	8008322 <UART_SetConfig+0x37a>
      {
        ret = HAL_ERROR;
 800831a:	2301      	movs	r3, #1
 800831c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8008320:	e0e8      	b.n	80084f4 <UART_SetConfig+0x54c>
      }
      else
      {
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate));
 8008322:	69fb      	ldr	r3, [r7, #28]
 8008324:	2200      	movs	r2, #0
 8008326:	461c      	mov	r4, r3
 8008328:	4615      	mov	r5, r2
 800832a:	f04f 0200 	mov.w	r2, #0
 800832e:	f04f 0300 	mov.w	r3, #0
 8008332:	022b      	lsls	r3, r5, #8
 8008334:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 8008338:	0222      	lsls	r2, r4, #8
 800833a:	68f9      	ldr	r1, [r7, #12]
 800833c:	6849      	ldr	r1, [r1, #4]
 800833e:	0849      	lsrs	r1, r1, #1
 8008340:	2000      	movs	r0, #0
 8008342:	4688      	mov	r8, r1
 8008344:	4681      	mov	r9, r0
 8008346:	eb12 0a08 	adds.w	sl, r2, r8
 800834a:	eb43 0b09 	adc.w	fp, r3, r9
 800834e:	68fb      	ldr	r3, [r7, #12]
 8008350:	685b      	ldr	r3, [r3, #4]
 8008352:	2200      	movs	r2, #0
 8008354:	603b      	str	r3, [r7, #0]
 8008356:	607a      	str	r2, [r7, #4]
 8008358:	e9d7 2300 	ldrd	r2, r3, [r7]
 800835c:	4650      	mov	r0, sl
 800835e:	4659      	mov	r1, fp
 8008360:	f7f8 fc9c 	bl	8000c9c <__aeabi_uldivmod>
 8008364:	4602      	mov	r2, r0
 8008366:	460b      	mov	r3, r1
 8008368:	4613      	mov	r3, r2
 800836a:	61bb      	str	r3, [r7, #24]
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 800836c:	69bb      	ldr	r3, [r7, #24]
 800836e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008372:	d308      	bcc.n	8008386 <UART_SetConfig+0x3de>
 8008374:	69bb      	ldr	r3, [r7, #24]
 8008376:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800837a:	d204      	bcs.n	8008386 <UART_SetConfig+0x3de>
        {
          huart->Instance->BRR = usartdiv;
 800837c:	68fb      	ldr	r3, [r7, #12]
 800837e:	681b      	ldr	r3, [r3, #0]
 8008380:	69ba      	ldr	r2, [r7, #24]
 8008382:	60da      	str	r2, [r3, #12]
 8008384:	e0b6      	b.n	80084f4 <UART_SetConfig+0x54c>
        }
        else
        {
          ret = HAL_ERROR;
 8008386:	2301      	movs	r3, #1
 8008388:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 800838c:	e0b2      	b.n	80084f4 <UART_SetConfig+0x54c>
      } /* if ( (pclk < (3 * huart->Init.BaudRate) ) || (pclk > (4096 * huart->Init.BaudRate) )) */
#endif /* USART_PRESC_PRESCALER */
    } /* if (pclk != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800838e:	68fb      	ldr	r3, [r7, #12]
 8008390:	69db      	ldr	r3, [r3, #28]
 8008392:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008396:	d15e      	bne.n	8008456 <UART_SetConfig+0x4ae>
  {
    switch (clocksource)
 8008398:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800839c:	2b08      	cmp	r3, #8
 800839e:	d828      	bhi.n	80083f2 <UART_SetConfig+0x44a>
 80083a0:	a201      	add	r2, pc, #4	; (adr r2, 80083a8 <UART_SetConfig+0x400>)
 80083a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80083a6:	bf00      	nop
 80083a8:	080083cd 	.word	0x080083cd
 80083ac:	080083d5 	.word	0x080083d5
 80083b0:	080083dd 	.word	0x080083dd
 80083b4:	080083f3 	.word	0x080083f3
 80083b8:	080083e3 	.word	0x080083e3
 80083bc:	080083f3 	.word	0x080083f3
 80083c0:	080083f3 	.word	0x080083f3
 80083c4:	080083f3 	.word	0x080083f3
 80083c8:	080083eb 	.word	0x080083eb
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80083cc:	f7fc fe32 	bl	8005034 <HAL_RCC_GetPCLK1Freq>
 80083d0:	61f8      	str	r0, [r7, #28]
        break;
 80083d2:	e014      	b.n	80083fe <UART_SetConfig+0x456>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 80083d4:	f7fc fe44 	bl	8005060 <HAL_RCC_GetPCLK2Freq>
 80083d8:	61f8      	str	r0, [r7, #28]
        break;
 80083da:	e010      	b.n	80083fe <UART_SetConfig+0x456>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80083dc:	4b4d      	ldr	r3, [pc, #308]	; (8008514 <UART_SetConfig+0x56c>)
 80083de:	61fb      	str	r3, [r7, #28]
        break;
 80083e0:	e00d      	b.n	80083fe <UART_SetConfig+0x456>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80083e2:	f7fc fd8f 	bl	8004f04 <HAL_RCC_GetSysClockFreq>
 80083e6:	61f8      	str	r0, [r7, #28]
        break;
 80083e8:	e009      	b.n	80083fe <UART_SetConfig+0x456>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80083ea:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80083ee:	61fb      	str	r3, [r7, #28]
        break;
 80083f0:	e005      	b.n	80083fe <UART_SetConfig+0x456>
      default:
        pclk = 0U;
 80083f2:	2300      	movs	r3, #0
 80083f4:	61fb      	str	r3, [r7, #28]
        ret = HAL_ERROR;
 80083f6:	2301      	movs	r3, #1
 80083f8:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
        break;
 80083fc:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 80083fe:	69fb      	ldr	r3, [r7, #28]
 8008400:	2b00      	cmp	r3, #0
 8008402:	d077      	beq.n	80084f4 <UART_SetConfig+0x54c>
    {
#if defined(USART_PRESC_PRESCALER)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
#else
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8008404:	69fb      	ldr	r3, [r7, #28]
 8008406:	005a      	lsls	r2, r3, #1
 8008408:	68fb      	ldr	r3, [r7, #12]
 800840a:	685b      	ldr	r3, [r3, #4]
 800840c:	085b      	lsrs	r3, r3, #1
 800840e:	441a      	add	r2, r3
 8008410:	68fb      	ldr	r3, [r7, #12]
 8008412:	685b      	ldr	r3, [r3, #4]
 8008414:	fbb2 f3f3 	udiv	r3, r2, r3
 8008418:	61bb      	str	r3, [r7, #24]
#endif /* USART_PRESC_PRESCALER */
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800841a:	69bb      	ldr	r3, [r7, #24]
 800841c:	2b0f      	cmp	r3, #15
 800841e:	d916      	bls.n	800844e <UART_SetConfig+0x4a6>
 8008420:	69bb      	ldr	r3, [r7, #24]
 8008422:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008426:	d212      	bcs.n	800844e <UART_SetConfig+0x4a6>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8008428:	69bb      	ldr	r3, [r7, #24]
 800842a:	b29b      	uxth	r3, r3
 800842c:	f023 030f 	bic.w	r3, r3, #15
 8008430:	82fb      	strh	r3, [r7, #22]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8008432:	69bb      	ldr	r3, [r7, #24]
 8008434:	085b      	lsrs	r3, r3, #1
 8008436:	b29b      	uxth	r3, r3
 8008438:	f003 0307 	and.w	r3, r3, #7
 800843c:	b29a      	uxth	r2, r3
 800843e:	8afb      	ldrh	r3, [r7, #22]
 8008440:	4313      	orrs	r3, r2
 8008442:	82fb      	strh	r3, [r7, #22]
        huart->Instance->BRR = brrtemp;
 8008444:	68fb      	ldr	r3, [r7, #12]
 8008446:	681b      	ldr	r3, [r3, #0]
 8008448:	8afa      	ldrh	r2, [r7, #22]
 800844a:	60da      	str	r2, [r3, #12]
 800844c:	e052      	b.n	80084f4 <UART_SetConfig+0x54c>
      }
      else
      {
        ret = HAL_ERROR;
 800844e:	2301      	movs	r3, #1
 8008450:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8008454:	e04e      	b.n	80084f4 <UART_SetConfig+0x54c>
      }
    }
  }
  else
  {
    switch (clocksource)
 8008456:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800845a:	2b08      	cmp	r3, #8
 800845c:	d827      	bhi.n	80084ae <UART_SetConfig+0x506>
 800845e:	a201      	add	r2, pc, #4	; (adr r2, 8008464 <UART_SetConfig+0x4bc>)
 8008460:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008464:	08008489 	.word	0x08008489
 8008468:	08008491 	.word	0x08008491
 800846c:	08008499 	.word	0x08008499
 8008470:	080084af 	.word	0x080084af
 8008474:	0800849f 	.word	0x0800849f
 8008478:	080084af 	.word	0x080084af
 800847c:	080084af 	.word	0x080084af
 8008480:	080084af 	.word	0x080084af
 8008484:	080084a7 	.word	0x080084a7
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8008488:	f7fc fdd4 	bl	8005034 <HAL_RCC_GetPCLK1Freq>
 800848c:	61f8      	str	r0, [r7, #28]
        break;
 800848e:	e014      	b.n	80084ba <UART_SetConfig+0x512>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8008490:	f7fc fde6 	bl	8005060 <HAL_RCC_GetPCLK2Freq>
 8008494:	61f8      	str	r0, [r7, #28]
        break;
 8008496:	e010      	b.n	80084ba <UART_SetConfig+0x512>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8008498:	4b1e      	ldr	r3, [pc, #120]	; (8008514 <UART_SetConfig+0x56c>)
 800849a:	61fb      	str	r3, [r7, #28]
        break;
 800849c:	e00d      	b.n	80084ba <UART_SetConfig+0x512>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 800849e:	f7fc fd31 	bl	8004f04 <HAL_RCC_GetSysClockFreq>
 80084a2:	61f8      	str	r0, [r7, #28]
        break;
 80084a4:	e009      	b.n	80084ba <UART_SetConfig+0x512>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80084a6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80084aa:	61fb      	str	r3, [r7, #28]
        break;
 80084ac:	e005      	b.n	80084ba <UART_SetConfig+0x512>
      default:
        pclk = 0U;
 80084ae:	2300      	movs	r3, #0
 80084b0:	61fb      	str	r3, [r7, #28]
        ret = HAL_ERROR;
 80084b2:	2301      	movs	r3, #1
 80084b4:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
        break;
 80084b8:	bf00      	nop
    }

    if (pclk != 0U)
 80084ba:	69fb      	ldr	r3, [r7, #28]
 80084bc:	2b00      	cmp	r3, #0
 80084be:	d019      	beq.n	80084f4 <UART_SetConfig+0x54c>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
#if defined(USART_PRESC_PRESCALER)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
#else
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 80084c0:	68fb      	ldr	r3, [r7, #12]
 80084c2:	685b      	ldr	r3, [r3, #4]
 80084c4:	085a      	lsrs	r2, r3, #1
 80084c6:	69fb      	ldr	r3, [r7, #28]
 80084c8:	441a      	add	r2, r3
 80084ca:	68fb      	ldr	r3, [r7, #12]
 80084cc:	685b      	ldr	r3, [r3, #4]
 80084ce:	fbb2 f3f3 	udiv	r3, r2, r3
 80084d2:	61bb      	str	r3, [r7, #24]
#endif /* USART_PRESC_PRESCALER */
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80084d4:	69bb      	ldr	r3, [r7, #24]
 80084d6:	2b0f      	cmp	r3, #15
 80084d8:	d909      	bls.n	80084ee <UART_SetConfig+0x546>
 80084da:	69bb      	ldr	r3, [r7, #24]
 80084dc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80084e0:	d205      	bcs.n	80084ee <UART_SetConfig+0x546>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
 80084e2:	69bb      	ldr	r3, [r7, #24]
 80084e4:	b29a      	uxth	r2, r3
 80084e6:	68fb      	ldr	r3, [r7, #12]
 80084e8:	681b      	ldr	r3, [r3, #0]
 80084ea:	60da      	str	r2, [r3, #12]
 80084ec:	e002      	b.n	80084f4 <UART_SetConfig+0x54c>
      }
      else
      {
        ret = HAL_ERROR;
 80084ee:	2301      	movs	r3, #1
 80084f0:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
  huart->NbTxDataToProcess = 1;
  huart->NbRxDataToProcess = 1;
#endif /* USART_CR1_FIFOEN */

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 80084f4:	68fb      	ldr	r3, [r7, #12]
 80084f6:	2200      	movs	r2, #0
 80084f8:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 80084fa:	68fb      	ldr	r3, [r7, #12]
 80084fc:	2200      	movs	r2, #0
 80084fe:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 8008500:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
}
 8008504:	4618      	mov	r0, r3
 8008506:	3728      	adds	r7, #40	; 0x28
 8008508:	46bd      	mov	sp, r7
 800850a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800850e:	bf00      	nop
 8008510:	40008000 	.word	0x40008000
 8008514:	00f42400 	.word	0x00f42400

08008518 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8008518:	b480      	push	{r7}
 800851a:	b083      	sub	sp, #12
 800851c:	af00      	add	r7, sp, #0
 800851e:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8008520:	687b      	ldr	r3, [r7, #4]
 8008522:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008524:	f003 0301 	and.w	r3, r3, #1
 8008528:	2b00      	cmp	r3, #0
 800852a:	d00a      	beq.n	8008542 <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 800852c:	687b      	ldr	r3, [r7, #4]
 800852e:	681b      	ldr	r3, [r3, #0]
 8008530:	685b      	ldr	r3, [r3, #4]
 8008532:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8008536:	687b      	ldr	r3, [r7, #4]
 8008538:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800853a:	687b      	ldr	r3, [r7, #4]
 800853c:	681b      	ldr	r3, [r3, #0]
 800853e:	430a      	orrs	r2, r1
 8008540:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8008542:	687b      	ldr	r3, [r7, #4]
 8008544:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008546:	f003 0302 	and.w	r3, r3, #2
 800854a:	2b00      	cmp	r3, #0
 800854c:	d00a      	beq.n	8008564 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800854e:	687b      	ldr	r3, [r7, #4]
 8008550:	681b      	ldr	r3, [r3, #0]
 8008552:	685b      	ldr	r3, [r3, #4]
 8008554:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8008558:	687b      	ldr	r3, [r7, #4]
 800855a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800855c:	687b      	ldr	r3, [r7, #4]
 800855e:	681b      	ldr	r3, [r3, #0]
 8008560:	430a      	orrs	r2, r1
 8008562:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8008564:	687b      	ldr	r3, [r7, #4]
 8008566:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008568:	f003 0304 	and.w	r3, r3, #4
 800856c:	2b00      	cmp	r3, #0
 800856e:	d00a      	beq.n	8008586 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	681b      	ldr	r3, [r3, #0]
 8008574:	685b      	ldr	r3, [r3, #4]
 8008576:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800857a:	687b      	ldr	r3, [r7, #4]
 800857c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800857e:	687b      	ldr	r3, [r7, #4]
 8008580:	681b      	ldr	r3, [r3, #0]
 8008582:	430a      	orrs	r2, r1
 8008584:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8008586:	687b      	ldr	r3, [r7, #4]
 8008588:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800858a:	f003 0308 	and.w	r3, r3, #8
 800858e:	2b00      	cmp	r3, #0
 8008590:	d00a      	beq.n	80085a8 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8008592:	687b      	ldr	r3, [r7, #4]
 8008594:	681b      	ldr	r3, [r3, #0]
 8008596:	685b      	ldr	r3, [r3, #4]
 8008598:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 800859c:	687b      	ldr	r3, [r7, #4]
 800859e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80085a0:	687b      	ldr	r3, [r7, #4]
 80085a2:	681b      	ldr	r3, [r3, #0]
 80085a4:	430a      	orrs	r2, r1
 80085a6:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 80085a8:	687b      	ldr	r3, [r7, #4]
 80085aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80085ac:	f003 0310 	and.w	r3, r3, #16
 80085b0:	2b00      	cmp	r3, #0
 80085b2:	d00a      	beq.n	80085ca <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 80085b4:	687b      	ldr	r3, [r7, #4]
 80085b6:	681b      	ldr	r3, [r3, #0]
 80085b8:	689b      	ldr	r3, [r3, #8]
 80085ba:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 80085be:	687b      	ldr	r3, [r7, #4]
 80085c0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80085c2:	687b      	ldr	r3, [r7, #4]
 80085c4:	681b      	ldr	r3, [r3, #0]
 80085c6:	430a      	orrs	r2, r1
 80085c8:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 80085ca:	687b      	ldr	r3, [r7, #4]
 80085cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80085ce:	f003 0320 	and.w	r3, r3, #32
 80085d2:	2b00      	cmp	r3, #0
 80085d4:	d00a      	beq.n	80085ec <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 80085d6:	687b      	ldr	r3, [r7, #4]
 80085d8:	681b      	ldr	r3, [r3, #0]
 80085da:	689b      	ldr	r3, [r3, #8]
 80085dc:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 80085e0:	687b      	ldr	r3, [r7, #4]
 80085e2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80085e4:	687b      	ldr	r3, [r7, #4]
 80085e6:	681b      	ldr	r3, [r3, #0]
 80085e8:	430a      	orrs	r2, r1
 80085ea:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 80085ec:	687b      	ldr	r3, [r7, #4]
 80085ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80085f0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80085f4:	2b00      	cmp	r3, #0
 80085f6:	d01a      	beq.n	800862e <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 80085f8:	687b      	ldr	r3, [r7, #4]
 80085fa:	681b      	ldr	r3, [r3, #0]
 80085fc:	685b      	ldr	r3, [r3, #4]
 80085fe:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8008602:	687b      	ldr	r3, [r7, #4]
 8008604:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008606:	687b      	ldr	r3, [r7, #4]
 8008608:	681b      	ldr	r3, [r3, #0]
 800860a:	430a      	orrs	r2, r1
 800860c:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800860e:	687b      	ldr	r3, [r7, #4]
 8008610:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008612:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008616:	d10a      	bne.n	800862e <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8008618:	687b      	ldr	r3, [r7, #4]
 800861a:	681b      	ldr	r3, [r3, #0]
 800861c:	685b      	ldr	r3, [r3, #4]
 800861e:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8008622:	687b      	ldr	r3, [r7, #4]
 8008624:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008626:	687b      	ldr	r3, [r7, #4]
 8008628:	681b      	ldr	r3, [r3, #0]
 800862a:	430a      	orrs	r2, r1
 800862c:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800862e:	687b      	ldr	r3, [r7, #4]
 8008630:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008632:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008636:	2b00      	cmp	r3, #0
 8008638:	d00a      	beq.n	8008650 <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 800863a:	687b      	ldr	r3, [r7, #4]
 800863c:	681b      	ldr	r3, [r3, #0]
 800863e:	685b      	ldr	r3, [r3, #4]
 8008640:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8008644:	687b      	ldr	r3, [r7, #4]
 8008646:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8008648:	687b      	ldr	r3, [r7, #4]
 800864a:	681b      	ldr	r3, [r3, #0]
 800864c:	430a      	orrs	r2, r1
 800864e:	605a      	str	r2, [r3, #4]
  }
}
 8008650:	bf00      	nop
 8008652:	370c      	adds	r7, #12
 8008654:	46bd      	mov	sp, r7
 8008656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800865a:	4770      	bx	lr

0800865c <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 800865c:	b580      	push	{r7, lr}
 800865e:	b086      	sub	sp, #24
 8008660:	af02      	add	r7, sp, #8
 8008662:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008664:	687b      	ldr	r3, [r7, #4]
 8008666:	2200      	movs	r2, #0
 8008668:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 800866c:	f7fa fda0 	bl	80031b0 <HAL_GetTick>
 8008670:	60f8      	str	r0, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8008672:	687b      	ldr	r3, [r7, #4]
 8008674:	681b      	ldr	r3, [r3, #0]
 8008676:	681b      	ldr	r3, [r3, #0]
 8008678:	f003 0308 	and.w	r3, r3, #8
 800867c:	2b08      	cmp	r3, #8
 800867e:	d10e      	bne.n	800869e <UART_CheckIdleState+0x42>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8008680:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8008684:	9300      	str	r3, [sp, #0]
 8008686:	68fb      	ldr	r3, [r7, #12]
 8008688:	2200      	movs	r2, #0
 800868a:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800868e:	6878      	ldr	r0, [r7, #4]
 8008690:	f000 f82d 	bl	80086ee <UART_WaitOnFlagUntilTimeout>
 8008694:	4603      	mov	r3, r0
 8008696:	2b00      	cmp	r3, #0
 8008698:	d001      	beq.n	800869e <UART_CheckIdleState+0x42>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 800869a:	2303      	movs	r3, #3
 800869c:	e023      	b.n	80086e6 <UART_CheckIdleState+0x8a>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 800869e:	687b      	ldr	r3, [r7, #4]
 80086a0:	681b      	ldr	r3, [r3, #0]
 80086a2:	681b      	ldr	r3, [r3, #0]
 80086a4:	f003 0304 	and.w	r3, r3, #4
 80086a8:	2b04      	cmp	r3, #4
 80086aa:	d10e      	bne.n	80086ca <UART_CheckIdleState+0x6e>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 80086ac:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80086b0:	9300      	str	r3, [sp, #0]
 80086b2:	68fb      	ldr	r3, [r7, #12]
 80086b4:	2200      	movs	r2, #0
 80086b6:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80086ba:	6878      	ldr	r0, [r7, #4]
 80086bc:	f000 f817 	bl	80086ee <UART_WaitOnFlagUntilTimeout>
 80086c0:	4603      	mov	r3, r0
 80086c2:	2b00      	cmp	r3, #0
 80086c4:	d001      	beq.n	80086ca <UART_CheckIdleState+0x6e>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 80086c6:	2303      	movs	r3, #3
 80086c8:	e00d      	b.n	80086e6 <UART_CheckIdleState+0x8a>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 80086ca:	687b      	ldr	r3, [r7, #4]
 80086cc:	2220      	movs	r2, #32
 80086ce:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 80086d0:	687b      	ldr	r3, [r7, #4]
 80086d2:	2220      	movs	r2, #32
 80086d4:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80086d6:	687b      	ldr	r3, [r7, #4]
 80086d8:	2200      	movs	r2, #0
 80086da:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 80086dc:	687b      	ldr	r3, [r7, #4]
 80086de:	2200      	movs	r2, #0
 80086e0:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  return HAL_OK;
 80086e4:	2300      	movs	r3, #0
}
 80086e6:	4618      	mov	r0, r3
 80086e8:	3710      	adds	r7, #16
 80086ea:	46bd      	mov	sp, r7
 80086ec:	bd80      	pop	{r7, pc}

080086ee <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 80086ee:	b580      	push	{r7, lr}
 80086f0:	b09c      	sub	sp, #112	; 0x70
 80086f2:	af00      	add	r7, sp, #0
 80086f4:	60f8      	str	r0, [r7, #12]
 80086f6:	60b9      	str	r1, [r7, #8]
 80086f8:	603b      	str	r3, [r7, #0]
 80086fa:	4613      	mov	r3, r2
 80086fc:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80086fe:	e0a5      	b.n	800884c <UART_WaitOnFlagUntilTimeout+0x15e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8008700:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8008702:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8008706:	f000 80a1 	beq.w	800884c <UART_WaitOnFlagUntilTimeout+0x15e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800870a:	f7fa fd51 	bl	80031b0 <HAL_GetTick>
 800870e:	4602      	mov	r2, r0
 8008710:	683b      	ldr	r3, [r7, #0]
 8008712:	1ad3      	subs	r3, r2, r3
 8008714:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8008716:	429a      	cmp	r2, r3
 8008718:	d302      	bcc.n	8008720 <UART_WaitOnFlagUntilTimeout+0x32>
 800871a:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800871c:	2b00      	cmp	r3, #0
 800871e:	d13e      	bne.n	800879e <UART_WaitOnFlagUntilTimeout+0xb0>
           interrupts for the interrupt process */
#if defined(USART_CR1_FIFOEN)
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
                                                USART_CR1_TXEIE_TXFNFIE));
#else
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8008720:	68fb      	ldr	r3, [r7, #12]
 8008722:	681b      	ldr	r3, [r3, #0]
 8008724:	653b      	str	r3, [r7, #80]	; 0x50
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8008726:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8008728:	e853 3f00 	ldrex	r3, [r3]
 800872c:	64fb      	str	r3, [r7, #76]	; 0x4c
   return(result);
 800872e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8008730:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8008734:	667b      	str	r3, [r7, #100]	; 0x64
 8008736:	68fb      	ldr	r3, [r7, #12]
 8008738:	681b      	ldr	r3, [r3, #0]
 800873a:	461a      	mov	r2, r3
 800873c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800873e:	65fb      	str	r3, [r7, #92]	; 0x5c
 8008740:	65ba      	str	r2, [r7, #88]	; 0x58
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008742:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8008744:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8008746:	e841 2300 	strex	r3, r2, [r1]
 800874a:	657b      	str	r3, [r7, #84]	; 0x54
   return(result);
 800874c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800874e:	2b00      	cmp	r3, #0
 8008750:	d1e6      	bne.n	8008720 <UART_WaitOnFlagUntilTimeout+0x32>
#endif /* USART_CR1_FIFOEN */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8008752:	68fb      	ldr	r3, [r7, #12]
 8008754:	681b      	ldr	r3, [r3, #0]
 8008756:	3308      	adds	r3, #8
 8008758:	63fb      	str	r3, [r7, #60]	; 0x3c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800875a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800875c:	e853 3f00 	ldrex	r3, [r3]
 8008760:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 8008762:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008764:	f023 0301 	bic.w	r3, r3, #1
 8008768:	663b      	str	r3, [r7, #96]	; 0x60
 800876a:	68fb      	ldr	r3, [r7, #12]
 800876c:	681b      	ldr	r3, [r3, #0]
 800876e:	3308      	adds	r3, #8
 8008770:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8008772:	64ba      	str	r2, [r7, #72]	; 0x48
 8008774:	647b      	str	r3, [r7, #68]	; 0x44
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008776:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8008778:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800877a:	e841 2300 	strex	r3, r2, [r1]
 800877e:	643b      	str	r3, [r7, #64]	; 0x40
   return(result);
 8008780:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8008782:	2b00      	cmp	r3, #0
 8008784:	d1e5      	bne.n	8008752 <UART_WaitOnFlagUntilTimeout+0x64>

        huart->gState = HAL_UART_STATE_READY;
 8008786:	68fb      	ldr	r3, [r7, #12]
 8008788:	2220      	movs	r2, #32
 800878a:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 800878c:	68fb      	ldr	r3, [r7, #12]
 800878e:	2220      	movs	r2, #32
 8008790:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 8008792:	68fb      	ldr	r3, [r7, #12]
 8008794:	2200      	movs	r2, #0
 8008796:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

        return HAL_TIMEOUT;
 800879a:	2303      	movs	r3, #3
 800879c:	e067      	b.n	800886e <UART_WaitOnFlagUntilTimeout+0x180>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 800879e:	68fb      	ldr	r3, [r7, #12]
 80087a0:	681b      	ldr	r3, [r3, #0]
 80087a2:	681b      	ldr	r3, [r3, #0]
 80087a4:	f003 0304 	and.w	r3, r3, #4
 80087a8:	2b00      	cmp	r3, #0
 80087aa:	d04f      	beq.n	800884c <UART_WaitOnFlagUntilTimeout+0x15e>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 80087ac:	68fb      	ldr	r3, [r7, #12]
 80087ae:	681b      	ldr	r3, [r3, #0]
 80087b0:	69db      	ldr	r3, [r3, #28]
 80087b2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80087b6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80087ba:	d147      	bne.n	800884c <UART_WaitOnFlagUntilTimeout+0x15e>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80087bc:	68fb      	ldr	r3, [r7, #12]
 80087be:	681b      	ldr	r3, [r3, #0]
 80087c0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80087c4:	621a      	str	r2, [r3, #32]
             interrupts for the interrupt process */
#if defined(USART_CR1_FIFOEN)
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
                                                  USART_CR1_TXEIE_TXFNFIE));
#else
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80087c6:	68fb      	ldr	r3, [r7, #12]
 80087c8:	681b      	ldr	r3, [r3, #0]
 80087ca:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80087cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80087ce:	e853 3f00 	ldrex	r3, [r3]
 80087d2:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 80087d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80087d6:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80087da:	66fb      	str	r3, [r7, #108]	; 0x6c
 80087dc:	68fb      	ldr	r3, [r7, #12]
 80087de:	681b      	ldr	r3, [r3, #0]
 80087e0:	461a      	mov	r2, r3
 80087e2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80087e4:	637b      	str	r3, [r7, #52]	; 0x34
 80087e6:	633a      	str	r2, [r7, #48]	; 0x30
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80087e8:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80087ea:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80087ec:	e841 2300 	strex	r3, r2, [r1]
 80087f0:	62fb      	str	r3, [r7, #44]	; 0x2c
   return(result);
 80087f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80087f4:	2b00      	cmp	r3, #0
 80087f6:	d1e6      	bne.n	80087c6 <UART_WaitOnFlagUntilTimeout+0xd8>
#endif /* USART_CR1_FIFOEN */
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80087f8:	68fb      	ldr	r3, [r7, #12]
 80087fa:	681b      	ldr	r3, [r3, #0]
 80087fc:	3308      	adds	r3, #8
 80087fe:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8008800:	697b      	ldr	r3, [r7, #20]
 8008802:	e853 3f00 	ldrex	r3, [r3]
 8008806:	613b      	str	r3, [r7, #16]
   return(result);
 8008808:	693b      	ldr	r3, [r7, #16]
 800880a:	f023 0301 	bic.w	r3, r3, #1
 800880e:	66bb      	str	r3, [r7, #104]	; 0x68
 8008810:	68fb      	ldr	r3, [r7, #12]
 8008812:	681b      	ldr	r3, [r3, #0]
 8008814:	3308      	adds	r3, #8
 8008816:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8008818:	623a      	str	r2, [r7, #32]
 800881a:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800881c:	69f9      	ldr	r1, [r7, #28]
 800881e:	6a3a      	ldr	r2, [r7, #32]
 8008820:	e841 2300 	strex	r3, r2, [r1]
 8008824:	61bb      	str	r3, [r7, #24]
   return(result);
 8008826:	69bb      	ldr	r3, [r7, #24]
 8008828:	2b00      	cmp	r3, #0
 800882a:	d1e5      	bne.n	80087f8 <UART_WaitOnFlagUntilTimeout+0x10a>

          huart->gState = HAL_UART_STATE_READY;
 800882c:	68fb      	ldr	r3, [r7, #12]
 800882e:	2220      	movs	r2, #32
 8008830:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 8008832:	68fb      	ldr	r3, [r7, #12]
 8008834:	2220      	movs	r2, #32
 8008836:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8008838:	68fb      	ldr	r3, [r7, #12]
 800883a:	2220      	movs	r2, #32
 800883c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8008840:	68fb      	ldr	r3, [r7, #12]
 8008842:	2200      	movs	r2, #0
 8008844:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

          return HAL_TIMEOUT;
 8008848:	2303      	movs	r3, #3
 800884a:	e010      	b.n	800886e <UART_WaitOnFlagUntilTimeout+0x180>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800884c:	68fb      	ldr	r3, [r7, #12]
 800884e:	681b      	ldr	r3, [r3, #0]
 8008850:	69da      	ldr	r2, [r3, #28]
 8008852:	68bb      	ldr	r3, [r7, #8]
 8008854:	4013      	ands	r3, r2
 8008856:	68ba      	ldr	r2, [r7, #8]
 8008858:	429a      	cmp	r2, r3
 800885a:	bf0c      	ite	eq
 800885c:	2301      	moveq	r3, #1
 800885e:	2300      	movne	r3, #0
 8008860:	b2db      	uxtb	r3, r3
 8008862:	461a      	mov	r2, r3
 8008864:	79fb      	ldrb	r3, [r7, #7]
 8008866:	429a      	cmp	r2, r3
 8008868:	f43f af4a 	beq.w	8008700 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 800886c:	2300      	movs	r3, #0
}
 800886e:	4618      	mov	r0, r3
 8008870:	3770      	adds	r7, #112	; 0x70
 8008872:	46bd      	mov	sp, r7
 8008874:	bd80      	pop	{r7, pc}
	...

08008878 <MX_FATFS_Init>:
/* USER CODE BEGIN Variables */

/* USER CODE END Variables */

void MX_FATFS_Init(void)
{
 8008878:	b580      	push	{r7, lr}
 800887a:	af00      	add	r7, sp, #0
  /*## FatFS: Link the USER driver ###########################*/
  retUSER = FATFS_LinkDriver(&USER_Driver, USERPath);
 800887c:	4904      	ldr	r1, [pc, #16]	; (8008890 <MX_FATFS_Init+0x18>)
 800887e:	4805      	ldr	r0, [pc, #20]	; (8008894 <MX_FATFS_Init+0x1c>)
 8008880:	f000 fd8e 	bl	80093a0 <FATFS_LinkDriver>
 8008884:	4603      	mov	r3, r0
 8008886:	461a      	mov	r2, r3
 8008888:	4b03      	ldr	r3, [pc, #12]	; (8008898 <MX_FATFS_Init+0x20>)
 800888a:	701a      	strb	r2, [r3, #0]

  /* USER CODE BEGIN Init */
  /* additional user code for init */
  /* USER CODE END Init */
}
 800888c:	bf00      	nop
 800888e:	bd80      	pop	{r7, pc}
 8008890:	200006ec 	.word	0x200006ec
 8008894:	20000014 	.word	0x20000014
 8008898:	200006e8 	.word	0x200006e8

0800889c <USER_initialize>:
  * @retval DSTATUS: Operation status
  */
DSTATUS USER_initialize (
	BYTE pdrv           /* Physical drive nmuber to identify the drive */
)
{
 800889c:	b580      	push	{r7, lr}
 800889e:	b082      	sub	sp, #8
 80088a0:	af00      	add	r7, sp, #0
 80088a2:	4603      	mov	r3, r0
 80088a4:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN INIT */
	return USER_SPI_initialize(pdrv); //ADD THIS LINE
 80088a6:	79fb      	ldrb	r3, [r7, #7]
 80088a8:	4618      	mov	r0, r3
 80088aa:	f000 f9d9 	bl	8008c60 <USER_SPI_initialize>
 80088ae:	4603      	mov	r3, r0

    //Stat = STA_NOINIT;
   // return Stat;
  /* USER CODE END INIT */
}
 80088b0:	4618      	mov	r0, r3
 80088b2:	3708      	adds	r7, #8
 80088b4:	46bd      	mov	sp, r7
 80088b6:	bd80      	pop	{r7, pc}

080088b8 <USER_status>:
  * @retval DSTATUS: Operation status
  */
DSTATUS USER_status (
	BYTE pdrv       /* Physical drive number to identify the drive */
)
{
 80088b8:	b580      	push	{r7, lr}
 80088ba:	b082      	sub	sp, #8
 80088bc:	af00      	add	r7, sp, #0
 80088be:	4603      	mov	r3, r0
 80088c0:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN STATUS */
	return USER_SPI_status(pdrv); //ADD THIS LINE
 80088c2:	79fb      	ldrb	r3, [r7, #7]
 80088c4:	4618      	mov	r0, r3
 80088c6:	f000 fab7 	bl	8008e38 <USER_SPI_status>
 80088ca:	4603      	mov	r3, r0

    //Stat = STA_NOINIT;
    //return Stat;
  /* USER CODE END STATUS */
}
 80088cc:	4618      	mov	r0, r3
 80088ce:	3708      	adds	r7, #8
 80088d0:	46bd      	mov	sp, r7
 80088d2:	bd80      	pop	{r7, pc}

080088d4 <USER_read>:
	BYTE pdrv,      /* Physical drive nmuber to identify the drive */
	BYTE *buff,     /* Data buffer to store read data */
	DWORD sector,   /* Sector address in LBA */
	UINT count      /* Number of sectors to read */
)
{
 80088d4:	b580      	push	{r7, lr}
 80088d6:	b084      	sub	sp, #16
 80088d8:	af00      	add	r7, sp, #0
 80088da:	60b9      	str	r1, [r7, #8]
 80088dc:	607a      	str	r2, [r7, #4]
 80088de:	603b      	str	r3, [r7, #0]
 80088e0:	4603      	mov	r3, r0
 80088e2:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN READ */
	return USER_SPI_read(pdrv, buff, sector, count); //ADD THIS LINE
 80088e4:	7bf8      	ldrb	r0, [r7, #15]
 80088e6:	683b      	ldr	r3, [r7, #0]
 80088e8:	687a      	ldr	r2, [r7, #4]
 80088ea:	68b9      	ldr	r1, [r7, #8]
 80088ec:	f000 faba 	bl	8008e64 <USER_SPI_read>
 80088f0:	4603      	mov	r3, r0

    //return RES_OK;
  /* USER CODE END READ */
}
 80088f2:	4618      	mov	r0, r3
 80088f4:	3710      	adds	r7, #16
 80088f6:	46bd      	mov	sp, r7
 80088f8:	bd80      	pop	{r7, pc}

080088fa <USER_write>:
	BYTE pdrv,          /* Physical drive nmuber to identify the drive */
	const BYTE *buff,   /* Data to be written */
	DWORD sector,       /* Sector address in LBA */
	UINT count          /* Number of sectors to write */
)
{
 80088fa:	b580      	push	{r7, lr}
 80088fc:	b084      	sub	sp, #16
 80088fe:	af00      	add	r7, sp, #0
 8008900:	60b9      	str	r1, [r7, #8]
 8008902:	607a      	str	r2, [r7, #4]
 8008904:	603b      	str	r3, [r7, #0]
 8008906:	4603      	mov	r3, r0
 8008908:	73fb      	strb	r3, [r7, #15]
  /* USER CODE BEGIN WRITE */
  /* USER CODE HERE */
	return USER_SPI_write(pdrv, buff, sector, count); //ADD THIS LINE
 800890a:	7bf8      	ldrb	r0, [r7, #15]
 800890c:	683b      	ldr	r3, [r7, #0]
 800890e:	687a      	ldr	r2, [r7, #4]
 8008910:	68b9      	ldr	r1, [r7, #8]
 8008912:	f000 fb0d 	bl	8008f30 <USER_SPI_write>
 8008916:	4603      	mov	r3, r0

    //return RES_OK;
  /* USER CODE END WRITE */
}
 8008918:	4618      	mov	r0, r3
 800891a:	3710      	adds	r7, #16
 800891c:	46bd      	mov	sp, r7
 800891e:	bd80      	pop	{r7, pc}

08008920 <USER_ioctl>:
DRESULT USER_ioctl (
	BYTE pdrv,      /* Physical drive nmuber (0..) */
	BYTE cmd,       /* Control code */
	void *buff      /* Buffer to send/receive control data */
)
{
 8008920:	b580      	push	{r7, lr}
 8008922:	b082      	sub	sp, #8
 8008924:	af00      	add	r7, sp, #0
 8008926:	4603      	mov	r3, r0
 8008928:	603a      	str	r2, [r7, #0]
 800892a:	71fb      	strb	r3, [r7, #7]
 800892c:	460b      	mov	r3, r1
 800892e:	71bb      	strb	r3, [r7, #6]
  /* USER CODE BEGIN IOCTL */
	return USER_SPI_ioctl(pdrv, cmd, buff); //ADD THIS LINE
 8008930:	79b9      	ldrb	r1, [r7, #6]
 8008932:	79fb      	ldrb	r3, [r7, #7]
 8008934:	683a      	ldr	r2, [r7, #0]
 8008936:	4618      	mov	r0, r3
 8008938:	f000 fb76 	bl	8009028 <USER_SPI_ioctl>
 800893c:	4603      	mov	r3, r0

    //DRESULT res = RES_ERROR;
    //return res;
  /* USER CODE END IOCTL */
}
 800893e:	4618      	mov	r0, r3
 8008940:	3708      	adds	r7, #8
 8008942:	46bd      	mov	sp, r7
 8008944:	bd80      	pop	{r7, pc}
	...

08008948 <SPI_Timer_On>:
BYTE CardType;			/* Card type flags */

uint32_t spiTimerTickStart;
uint32_t spiTimerTickDelay;

void SPI_Timer_On(uint32_t waitTicks) {
 8008948:	b580      	push	{r7, lr}
 800894a:	b082      	sub	sp, #8
 800894c:	af00      	add	r7, sp, #0
 800894e:	6078      	str	r0, [r7, #4]
    spiTimerTickStart = HAL_GetTick();
 8008950:	f7fa fc2e 	bl	80031b0 <HAL_GetTick>
 8008954:	4603      	mov	r3, r0
 8008956:	4a04      	ldr	r2, [pc, #16]	; (8008968 <SPI_Timer_On+0x20>)
 8008958:	6013      	str	r3, [r2, #0]
    spiTimerTickDelay = waitTicks;
 800895a:	4a04      	ldr	r2, [pc, #16]	; (800896c <SPI_Timer_On+0x24>)
 800895c:	687b      	ldr	r3, [r7, #4]
 800895e:	6013      	str	r3, [r2, #0]
}
 8008960:	bf00      	nop
 8008962:	3708      	adds	r7, #8
 8008964:	46bd      	mov	sp, r7
 8008966:	bd80      	pop	{r7, pc}
 8008968:	200006f4 	.word	0x200006f4
 800896c:	200006f8 	.word	0x200006f8

08008970 <SPI_Timer_Status>:

uint8_t SPI_Timer_Status() {
 8008970:	b580      	push	{r7, lr}
 8008972:	af00      	add	r7, sp, #0
    return ((HAL_GetTick() - spiTimerTickStart) < spiTimerTickDelay);
 8008974:	f7fa fc1c 	bl	80031b0 <HAL_GetTick>
 8008978:	4602      	mov	r2, r0
 800897a:	4b06      	ldr	r3, [pc, #24]	; (8008994 <SPI_Timer_Status+0x24>)
 800897c:	681b      	ldr	r3, [r3, #0]
 800897e:	1ad2      	subs	r2, r2, r3
 8008980:	4b05      	ldr	r3, [pc, #20]	; (8008998 <SPI_Timer_Status+0x28>)
 8008982:	681b      	ldr	r3, [r3, #0]
 8008984:	429a      	cmp	r2, r3
 8008986:	bf34      	ite	cc
 8008988:	2301      	movcc	r3, #1
 800898a:	2300      	movcs	r3, #0
 800898c:	b2db      	uxtb	r3, r3
}
 800898e:	4618      	mov	r0, r3
 8008990:	bd80      	pop	{r7, pc}
 8008992:	bf00      	nop
 8008994:	200006f4 	.word	0x200006f4
 8008998:	200006f8 	.word	0x200006f8

0800899c <xchg_spi>:
/* Exchange a byte */
static
BYTE xchg_spi (
	BYTE dat	/* Data to send */
)
{
 800899c:	b580      	push	{r7, lr}
 800899e:	b086      	sub	sp, #24
 80089a0:	af02      	add	r7, sp, #8
 80089a2:	4603      	mov	r3, r0
 80089a4:	71fb      	strb	r3, [r7, #7]
	BYTE rxDat;
    HAL_SPI_TransmitReceive(&SD_SPI_HANDLE, &dat, &rxDat, 1, 50);
 80089a6:	f107 020f 	add.w	r2, r7, #15
 80089aa:	1df9      	adds	r1, r7, #7
 80089ac:	2332      	movs	r3, #50	; 0x32
 80089ae:	9300      	str	r3, [sp, #0]
 80089b0:	2301      	movs	r3, #1
 80089b2:	4804      	ldr	r0, [pc, #16]	; (80089c4 <xchg_spi+0x28>)
 80089b4:	f7fd f95b 	bl	8005c6e <HAL_SPI_TransmitReceive>
    return rxDat;
 80089b8:	7bfb      	ldrb	r3, [r7, #15]
}
 80089ba:	4618      	mov	r0, r3
 80089bc:	3710      	adds	r7, #16
 80089be:	46bd      	mov	sp, r7
 80089c0:	bd80      	pop	{r7, pc}
 80089c2:	bf00      	nop
 80089c4:	200004fc 	.word	0x200004fc

080089c8 <rcvr_spi_multi>:
static
void rcvr_spi_multi (
	BYTE *buff,		/* Pointer to data buffer */
	UINT btr		/* Number of bytes to receive (even number) */
)
{
 80089c8:	b590      	push	{r4, r7, lr}
 80089ca:	b085      	sub	sp, #20
 80089cc:	af00      	add	r7, sp, #0
 80089ce:	6078      	str	r0, [r7, #4]
 80089d0:	6039      	str	r1, [r7, #0]
	for(UINT i=0; i<btr; i++) {
 80089d2:	2300      	movs	r3, #0
 80089d4:	60fb      	str	r3, [r7, #12]
 80089d6:	e00a      	b.n	80089ee <rcvr_spi_multi+0x26>
		*(buff+i) = xchg_spi(0xFF);
 80089d8:	687a      	ldr	r2, [r7, #4]
 80089da:	68fb      	ldr	r3, [r7, #12]
 80089dc:	18d4      	adds	r4, r2, r3
 80089de:	20ff      	movs	r0, #255	; 0xff
 80089e0:	f7ff ffdc 	bl	800899c <xchg_spi>
 80089e4:	4603      	mov	r3, r0
 80089e6:	7023      	strb	r3, [r4, #0]
	for(UINT i=0; i<btr; i++) {
 80089e8:	68fb      	ldr	r3, [r7, #12]
 80089ea:	3301      	adds	r3, #1
 80089ec:	60fb      	str	r3, [r7, #12]
 80089ee:	68fa      	ldr	r2, [r7, #12]
 80089f0:	683b      	ldr	r3, [r7, #0]
 80089f2:	429a      	cmp	r2, r3
 80089f4:	d3f0      	bcc.n	80089d8 <rcvr_spi_multi+0x10>
	}
}
 80089f6:	bf00      	nop
 80089f8:	bf00      	nop
 80089fa:	3714      	adds	r7, #20
 80089fc:	46bd      	mov	sp, r7
 80089fe:	bd90      	pop	{r4, r7, pc}

08008a00 <xmit_spi_multi>:
static
void xmit_spi_multi (
	const BYTE *buff,	/* Pointer to the data */
	UINT btx			/* Number of bytes to send (even number) */
)
{
 8008a00:	b580      	push	{r7, lr}
 8008a02:	b084      	sub	sp, #16
 8008a04:	af00      	add	r7, sp, #0
 8008a06:	6078      	str	r0, [r7, #4]
 8008a08:	6039      	str	r1, [r7, #0]
	for(UINT i=0; i<btx; i++) {
 8008a0a:	2300      	movs	r3, #0
 8008a0c:	60fb      	str	r3, [r7, #12]
 8008a0e:	e009      	b.n	8008a24 <xmit_spi_multi+0x24>
		xchg_spi(*(buff+i));
 8008a10:	687a      	ldr	r2, [r7, #4]
 8008a12:	68fb      	ldr	r3, [r7, #12]
 8008a14:	4413      	add	r3, r2
 8008a16:	781b      	ldrb	r3, [r3, #0]
 8008a18:	4618      	mov	r0, r3
 8008a1a:	f7ff ffbf 	bl	800899c <xchg_spi>
	for(UINT i=0; i<btx; i++) {
 8008a1e:	68fb      	ldr	r3, [r7, #12]
 8008a20:	3301      	adds	r3, #1
 8008a22:	60fb      	str	r3, [r7, #12]
 8008a24:	68fa      	ldr	r2, [r7, #12]
 8008a26:	683b      	ldr	r3, [r7, #0]
 8008a28:	429a      	cmp	r2, r3
 8008a2a:	d3f1      	bcc.n	8008a10 <xmit_spi_multi+0x10>
	}
}
 8008a2c:	bf00      	nop
 8008a2e:	bf00      	nop
 8008a30:	3710      	adds	r7, #16
 8008a32:	46bd      	mov	sp, r7
 8008a34:	bd80      	pop	{r7, pc}

08008a36 <wait_ready>:

static
int wait_ready (	/* 1:Ready, 0:Timeout */
	UINT wt			/* Timeout [ms] */
)
{
 8008a36:	b580      	push	{r7, lr}
 8008a38:	b086      	sub	sp, #24
 8008a3a:	af00      	add	r7, sp, #0
 8008a3c:	6078      	str	r0, [r7, #4]
	//wait_ready needs its own timer, unfortunately, so it can't use the
	//spi_timer functions
	uint32_t waitSpiTimerTickStart;
	uint32_t waitSpiTimerTickDelay;

	waitSpiTimerTickStart = HAL_GetTick();
 8008a3e:	f7fa fbb7 	bl	80031b0 <HAL_GetTick>
 8008a42:	6178      	str	r0, [r7, #20]
	waitSpiTimerTickDelay = (uint32_t)wt;
 8008a44:	687b      	ldr	r3, [r7, #4]
 8008a46:	613b      	str	r3, [r7, #16]
	do {
		d = xchg_spi(0xFF);
 8008a48:	20ff      	movs	r0, #255	; 0xff
 8008a4a:	f7ff ffa7 	bl	800899c <xchg_spi>
 8008a4e:	4603      	mov	r3, r0
 8008a50:	73fb      	strb	r3, [r7, #15]
		/* This loop takes a time. Insert rot_rdq() here for multitask envilonment. */
	} while (d != 0xFF && ((HAL_GetTick() - waitSpiTimerTickStart) < waitSpiTimerTickDelay));	/* Wait for card goes ready or timeout */
 8008a52:	7bfb      	ldrb	r3, [r7, #15]
 8008a54:	2bff      	cmp	r3, #255	; 0xff
 8008a56:	d007      	beq.n	8008a68 <wait_ready+0x32>
 8008a58:	f7fa fbaa 	bl	80031b0 <HAL_GetTick>
 8008a5c:	4602      	mov	r2, r0
 8008a5e:	697b      	ldr	r3, [r7, #20]
 8008a60:	1ad3      	subs	r3, r2, r3
 8008a62:	693a      	ldr	r2, [r7, #16]
 8008a64:	429a      	cmp	r2, r3
 8008a66:	d8ef      	bhi.n	8008a48 <wait_ready+0x12>

	return (d == 0xFF) ? 1 : 0;
 8008a68:	7bfb      	ldrb	r3, [r7, #15]
 8008a6a:	2bff      	cmp	r3, #255	; 0xff
 8008a6c:	bf0c      	ite	eq
 8008a6e:	2301      	moveq	r3, #1
 8008a70:	2300      	movne	r3, #0
 8008a72:	b2db      	uxtb	r3, r3
}
 8008a74:	4618      	mov	r0, r3
 8008a76:	3718      	adds	r7, #24
 8008a78:	46bd      	mov	sp, r7
 8008a7a:	bd80      	pop	{r7, pc}

08008a7c <despiselect>:
/* Despiselect card and release SPI                                         */
/*-----------------------------------------------------------------------*/

static
void despiselect (void)
{
 8008a7c:	b580      	push	{r7, lr}
 8008a7e:	af00      	add	r7, sp, #0
	CS_HIGH();		/* Set CS# high */
 8008a80:	2201      	movs	r2, #1
 8008a82:	2140      	movs	r1, #64	; 0x40
 8008a84:	4803      	ldr	r0, [pc, #12]	; (8008a94 <despiselect+0x18>)
 8008a86:	f7fa feb7 	bl	80037f8 <HAL_GPIO_WritePin>
	xchg_spi(0xFF);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
 8008a8a:	20ff      	movs	r0, #255	; 0xff
 8008a8c:	f7ff ff86 	bl	800899c <xchg_spi>

}
 8008a90:	bf00      	nop
 8008a92:	bd80      	pop	{r7, pc}
 8008a94:	48000400 	.word	0x48000400

08008a98 <spiselect>:
/* Select card and wait for ready                                        */
/*-----------------------------------------------------------------------*/

static
int spiselect (void)	/* 1:OK, 0:Timeout */
{
 8008a98:	b580      	push	{r7, lr}
 8008a9a:	af00      	add	r7, sp, #0
	CS_LOW();		/* Set CS# low */
 8008a9c:	2200      	movs	r2, #0
 8008a9e:	2140      	movs	r1, #64	; 0x40
 8008aa0:	4809      	ldr	r0, [pc, #36]	; (8008ac8 <spiselect+0x30>)
 8008aa2:	f7fa fea9 	bl	80037f8 <HAL_GPIO_WritePin>
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
 8008aa6:	20ff      	movs	r0, #255	; 0xff
 8008aa8:	f7ff ff78 	bl	800899c <xchg_spi>
	if (wait_ready(500)) return 1;	/* Wait for card ready */
 8008aac:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8008ab0:	f7ff ffc1 	bl	8008a36 <wait_ready>
 8008ab4:	4603      	mov	r3, r0
 8008ab6:	2b00      	cmp	r3, #0
 8008ab8:	d001      	beq.n	8008abe <spiselect+0x26>
 8008aba:	2301      	movs	r3, #1
 8008abc:	e002      	b.n	8008ac4 <spiselect+0x2c>

	despiselect();
 8008abe:	f7ff ffdd 	bl	8008a7c <despiselect>
	return 0;	/* Timeout */
 8008ac2:	2300      	movs	r3, #0
}
 8008ac4:	4618      	mov	r0, r3
 8008ac6:	bd80      	pop	{r7, pc}
 8008ac8:	48000400 	.word	0x48000400

08008acc <rcvr_datablock>:
static
int rcvr_datablock (	/* 1:OK, 0:Error */
	BYTE *buff,			/* Data buffer */
	UINT btr			/* Data block length (byte) */
)
{
 8008acc:	b580      	push	{r7, lr}
 8008ace:	b084      	sub	sp, #16
 8008ad0:	af00      	add	r7, sp, #0
 8008ad2:	6078      	str	r0, [r7, #4]
 8008ad4:	6039      	str	r1, [r7, #0]
	BYTE token;


	SPI_Timer_On(200);
 8008ad6:	20c8      	movs	r0, #200	; 0xc8
 8008ad8:	f7ff ff36 	bl	8008948 <SPI_Timer_On>
	do {							/* Wait for DataStart token in timeout of 200ms */
		token = xchg_spi(0xFF);
 8008adc:	20ff      	movs	r0, #255	; 0xff
 8008ade:	f7ff ff5d 	bl	800899c <xchg_spi>
 8008ae2:	4603      	mov	r3, r0
 8008ae4:	73fb      	strb	r3, [r7, #15]
		/* This loop will take a time. Insert rot_rdq() here for multitask envilonment. */
	} while ((token == 0xFF) && SPI_Timer_Status());
 8008ae6:	7bfb      	ldrb	r3, [r7, #15]
 8008ae8:	2bff      	cmp	r3, #255	; 0xff
 8008aea:	d104      	bne.n	8008af6 <rcvr_datablock+0x2a>
 8008aec:	f7ff ff40 	bl	8008970 <SPI_Timer_Status>
 8008af0:	4603      	mov	r3, r0
 8008af2:	2b00      	cmp	r3, #0
 8008af4:	d1f2      	bne.n	8008adc <rcvr_datablock+0x10>
	if(token != 0xFE) return 0;		/* Function fails if invalid DataStart token or timeout */
 8008af6:	7bfb      	ldrb	r3, [r7, #15]
 8008af8:	2bfe      	cmp	r3, #254	; 0xfe
 8008afa:	d001      	beq.n	8008b00 <rcvr_datablock+0x34>
 8008afc:	2300      	movs	r3, #0
 8008afe:	e00a      	b.n	8008b16 <rcvr_datablock+0x4a>

	rcvr_spi_multi(buff, btr);		/* Store trailing data to the buffer */
 8008b00:	6839      	ldr	r1, [r7, #0]
 8008b02:	6878      	ldr	r0, [r7, #4]
 8008b04:	f7ff ff60 	bl	80089c8 <rcvr_spi_multi>
	xchg_spi(0xFF); xchg_spi(0xFF);			/* Discard CRC */
 8008b08:	20ff      	movs	r0, #255	; 0xff
 8008b0a:	f7ff ff47 	bl	800899c <xchg_spi>
 8008b0e:	20ff      	movs	r0, #255	; 0xff
 8008b10:	f7ff ff44 	bl	800899c <xchg_spi>

	return 1;						/* Function succeeded */
 8008b14:	2301      	movs	r3, #1
}
 8008b16:	4618      	mov	r0, r3
 8008b18:	3710      	adds	r7, #16
 8008b1a:	46bd      	mov	sp, r7
 8008b1c:	bd80      	pop	{r7, pc}

08008b1e <xmit_datablock>:
static
int xmit_datablock (	/* 1:OK, 0:Failed */
	const BYTE *buff,	/* Ponter to 512 byte data to be sent */
	BYTE token			/* Token */
)
{
 8008b1e:	b580      	push	{r7, lr}
 8008b20:	b084      	sub	sp, #16
 8008b22:	af00      	add	r7, sp, #0
 8008b24:	6078      	str	r0, [r7, #4]
 8008b26:	460b      	mov	r3, r1
 8008b28:	70fb      	strb	r3, [r7, #3]
	BYTE resp;


	if (!wait_ready(500)) return 0;		/* Wait for card ready */
 8008b2a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8008b2e:	f7ff ff82 	bl	8008a36 <wait_ready>
 8008b32:	4603      	mov	r3, r0
 8008b34:	2b00      	cmp	r3, #0
 8008b36:	d101      	bne.n	8008b3c <xmit_datablock+0x1e>
 8008b38:	2300      	movs	r3, #0
 8008b3a:	e01e      	b.n	8008b7a <xmit_datablock+0x5c>

	xchg_spi(token);					/* Send token */
 8008b3c:	78fb      	ldrb	r3, [r7, #3]
 8008b3e:	4618      	mov	r0, r3
 8008b40:	f7ff ff2c 	bl	800899c <xchg_spi>
	if (token != 0xFD) {				/* Send data if token is other than StopTran */
 8008b44:	78fb      	ldrb	r3, [r7, #3]
 8008b46:	2bfd      	cmp	r3, #253	; 0xfd
 8008b48:	d016      	beq.n	8008b78 <xmit_datablock+0x5a>
		xmit_spi_multi(buff, 512);		/* Data */
 8008b4a:	f44f 7100 	mov.w	r1, #512	; 0x200
 8008b4e:	6878      	ldr	r0, [r7, #4]
 8008b50:	f7ff ff56 	bl	8008a00 <xmit_spi_multi>
		xchg_spi(0xFF); xchg_spi(0xFF);	/* Dummy CRC */
 8008b54:	20ff      	movs	r0, #255	; 0xff
 8008b56:	f7ff ff21 	bl	800899c <xchg_spi>
 8008b5a:	20ff      	movs	r0, #255	; 0xff
 8008b5c:	f7ff ff1e 	bl	800899c <xchg_spi>

		resp = xchg_spi(0xFF);				/* Receive data resp */
 8008b60:	20ff      	movs	r0, #255	; 0xff
 8008b62:	f7ff ff1b 	bl	800899c <xchg_spi>
 8008b66:	4603      	mov	r3, r0
 8008b68:	73fb      	strb	r3, [r7, #15]
		if ((resp & 0x1F) != 0x05) return 0;	/* Function fails if the data packet was not accepted */
 8008b6a:	7bfb      	ldrb	r3, [r7, #15]
 8008b6c:	f003 031f 	and.w	r3, r3, #31
 8008b70:	2b05      	cmp	r3, #5
 8008b72:	d001      	beq.n	8008b78 <xmit_datablock+0x5a>
 8008b74:	2300      	movs	r3, #0
 8008b76:	e000      	b.n	8008b7a <xmit_datablock+0x5c>
	}
	return 1;
 8008b78:	2301      	movs	r3, #1
}
 8008b7a:	4618      	mov	r0, r3
 8008b7c:	3710      	adds	r7, #16
 8008b7e:	46bd      	mov	sp, r7
 8008b80:	bd80      	pop	{r7, pc}

08008b82 <send_cmd>:
static
BYTE send_cmd (		/* Return value: R1 resp (bit7==1:Failed to send) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
 8008b82:	b580      	push	{r7, lr}
 8008b84:	b084      	sub	sp, #16
 8008b86:	af00      	add	r7, sp, #0
 8008b88:	4603      	mov	r3, r0
 8008b8a:	6039      	str	r1, [r7, #0]
 8008b8c:	71fb      	strb	r3, [r7, #7]
	BYTE n, res;


	if (cmd & 0x80) {	/* Send a CMD55 prior to ACMD<n> */
 8008b8e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008b92:	2b00      	cmp	r3, #0
 8008b94:	da0e      	bge.n	8008bb4 <send_cmd+0x32>
		cmd &= 0x7F;
 8008b96:	79fb      	ldrb	r3, [r7, #7]
 8008b98:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008b9c:	71fb      	strb	r3, [r7, #7]
		res = send_cmd(CMD55, 0);
 8008b9e:	2100      	movs	r1, #0
 8008ba0:	2037      	movs	r0, #55	; 0x37
 8008ba2:	f7ff ffee 	bl	8008b82 <send_cmd>
 8008ba6:	4603      	mov	r3, r0
 8008ba8:	73bb      	strb	r3, [r7, #14]
		if (res > 1) return res;
 8008baa:	7bbb      	ldrb	r3, [r7, #14]
 8008bac:	2b01      	cmp	r3, #1
 8008bae:	d901      	bls.n	8008bb4 <send_cmd+0x32>
 8008bb0:	7bbb      	ldrb	r3, [r7, #14]
 8008bb2:	e051      	b.n	8008c58 <send_cmd+0xd6>
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
 8008bb4:	79fb      	ldrb	r3, [r7, #7]
 8008bb6:	2b0c      	cmp	r3, #12
 8008bb8:	d008      	beq.n	8008bcc <send_cmd+0x4a>
		despiselect();
 8008bba:	f7ff ff5f 	bl	8008a7c <despiselect>
		if (!spiselect()) return 0xFF;
 8008bbe:	f7ff ff6b 	bl	8008a98 <spiselect>
 8008bc2:	4603      	mov	r3, r0
 8008bc4:	2b00      	cmp	r3, #0
 8008bc6:	d101      	bne.n	8008bcc <send_cmd+0x4a>
 8008bc8:	23ff      	movs	r3, #255	; 0xff
 8008bca:	e045      	b.n	8008c58 <send_cmd+0xd6>
	}

	/* Send command packet */
	xchg_spi(0x40 | cmd);				/* Start + command index */
 8008bcc:	79fb      	ldrb	r3, [r7, #7]
 8008bce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008bd2:	b2db      	uxtb	r3, r3
 8008bd4:	4618      	mov	r0, r3
 8008bd6:	f7ff fee1 	bl	800899c <xchg_spi>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
 8008bda:	683b      	ldr	r3, [r7, #0]
 8008bdc:	0e1b      	lsrs	r3, r3, #24
 8008bde:	b2db      	uxtb	r3, r3
 8008be0:	4618      	mov	r0, r3
 8008be2:	f7ff fedb 	bl	800899c <xchg_spi>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
 8008be6:	683b      	ldr	r3, [r7, #0]
 8008be8:	0c1b      	lsrs	r3, r3, #16
 8008bea:	b2db      	uxtb	r3, r3
 8008bec:	4618      	mov	r0, r3
 8008bee:	f7ff fed5 	bl	800899c <xchg_spi>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
 8008bf2:	683b      	ldr	r3, [r7, #0]
 8008bf4:	0a1b      	lsrs	r3, r3, #8
 8008bf6:	b2db      	uxtb	r3, r3
 8008bf8:	4618      	mov	r0, r3
 8008bfa:	f7ff fecf 	bl	800899c <xchg_spi>
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
 8008bfe:	683b      	ldr	r3, [r7, #0]
 8008c00:	b2db      	uxtb	r3, r3
 8008c02:	4618      	mov	r0, r3
 8008c04:	f7ff feca 	bl	800899c <xchg_spi>
	n = 0x01;							/* Dummy CRC + Stop */
 8008c08:	2301      	movs	r3, #1
 8008c0a:	73fb      	strb	r3, [r7, #15]
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) */
 8008c0c:	79fb      	ldrb	r3, [r7, #7]
 8008c0e:	2b00      	cmp	r3, #0
 8008c10:	d101      	bne.n	8008c16 <send_cmd+0x94>
 8008c12:	2395      	movs	r3, #149	; 0x95
 8008c14:	73fb      	strb	r3, [r7, #15]
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) */
 8008c16:	79fb      	ldrb	r3, [r7, #7]
 8008c18:	2b08      	cmp	r3, #8
 8008c1a:	d101      	bne.n	8008c20 <send_cmd+0x9e>
 8008c1c:	2387      	movs	r3, #135	; 0x87
 8008c1e:	73fb      	strb	r3, [r7, #15]
	xchg_spi(n);
 8008c20:	7bfb      	ldrb	r3, [r7, #15]
 8008c22:	4618      	mov	r0, r3
 8008c24:	f7ff feba 	bl	800899c <xchg_spi>

	/* Receive command resp */
	if (cmd == CMD12) xchg_spi(0xFF);	/* Diacard following one byte when CMD12 */
 8008c28:	79fb      	ldrb	r3, [r7, #7]
 8008c2a:	2b0c      	cmp	r3, #12
 8008c2c:	d102      	bne.n	8008c34 <send_cmd+0xb2>
 8008c2e:	20ff      	movs	r0, #255	; 0xff
 8008c30:	f7ff feb4 	bl	800899c <xchg_spi>
	n = 10;								/* Wait for response (10 bytes max) */
 8008c34:	230a      	movs	r3, #10
 8008c36:	73fb      	strb	r3, [r7, #15]
	do {
		res = xchg_spi(0xFF);
 8008c38:	20ff      	movs	r0, #255	; 0xff
 8008c3a:	f7ff feaf 	bl	800899c <xchg_spi>
 8008c3e:	4603      	mov	r3, r0
 8008c40:	73bb      	strb	r3, [r7, #14]
	} while ((res & 0x80) && --n);
 8008c42:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8008c46:	2b00      	cmp	r3, #0
 8008c48:	da05      	bge.n	8008c56 <send_cmd+0xd4>
 8008c4a:	7bfb      	ldrb	r3, [r7, #15]
 8008c4c:	3b01      	subs	r3, #1
 8008c4e:	73fb      	strb	r3, [r7, #15]
 8008c50:	7bfb      	ldrb	r3, [r7, #15]
 8008c52:	2b00      	cmp	r3, #0
 8008c54:	d1f0      	bne.n	8008c38 <send_cmd+0xb6>

	return res;							/* Return received response */
 8008c56:	7bbb      	ldrb	r3, [r7, #14]
}
 8008c58:	4618      	mov	r0, r3
 8008c5a:	3710      	adds	r7, #16
 8008c5c:	46bd      	mov	sp, r7
 8008c5e:	bd80      	pop	{r7, pc}

08008c60 <USER_SPI_initialize>:
/*-----------------------------------------------------------------------*/

inline DSTATUS USER_SPI_initialize (
	BYTE drv		/* Physical drive number (0) */
)
{
 8008c60:	b590      	push	{r4, r7, lr}
 8008c62:	b085      	sub	sp, #20
 8008c64:	af00      	add	r7, sp, #0
 8008c66:	4603      	mov	r3, r0
 8008c68:	71fb      	strb	r3, [r7, #7]
	BYTE n, cmd, ty, ocr[4];

	if (drv != 0) return STA_NOINIT;		/* Supports only drive 0 */
 8008c6a:	79fb      	ldrb	r3, [r7, #7]
 8008c6c:	2b00      	cmp	r3, #0
 8008c6e:	d001      	beq.n	8008c74 <USER_SPI_initialize+0x14>
 8008c70:	2301      	movs	r3, #1
 8008c72:	e0d6      	b.n	8008e22 <USER_SPI_initialize+0x1c2>
	//assume SPI already init init_spi();	/* Initialize SPI */

	if (Stat & STA_NODISK) return Stat;	/* Is card existing in the soket? */
 8008c74:	4b6d      	ldr	r3, [pc, #436]	; (8008e2c <USER_SPI_initialize+0x1cc>)
 8008c76:	781b      	ldrb	r3, [r3, #0]
 8008c78:	b2db      	uxtb	r3, r3
 8008c7a:	f003 0302 	and.w	r3, r3, #2
 8008c7e:	2b00      	cmp	r3, #0
 8008c80:	d003      	beq.n	8008c8a <USER_SPI_initialize+0x2a>
 8008c82:	4b6a      	ldr	r3, [pc, #424]	; (8008e2c <USER_SPI_initialize+0x1cc>)
 8008c84:	781b      	ldrb	r3, [r3, #0]
 8008c86:	b2db      	uxtb	r3, r3
 8008c88:	e0cb      	b.n	8008e22 <USER_SPI_initialize+0x1c2>

	FCLK_SLOW();
 8008c8a:	4b69      	ldr	r3, [pc, #420]	; (8008e30 <USER_SPI_initialize+0x1d0>)
 8008c8c:	681b      	ldr	r3, [r3, #0]
 8008c8e:	681b      	ldr	r3, [r3, #0]
 8008c90:	f023 0238 	bic.w	r2, r3, #56	; 0x38
 8008c94:	4b66      	ldr	r3, [pc, #408]	; (8008e30 <USER_SPI_initialize+0x1d0>)
 8008c96:	681b      	ldr	r3, [r3, #0]
 8008c98:	f042 0230 	orr.w	r2, r2, #48	; 0x30
 8008c9c:	601a      	str	r2, [r3, #0]
	for (n = 10; n; n--) xchg_spi(0xFF);	/* Send 80 dummy clocks */
 8008c9e:	230a      	movs	r3, #10
 8008ca0:	73fb      	strb	r3, [r7, #15]
 8008ca2:	e005      	b.n	8008cb0 <USER_SPI_initialize+0x50>
 8008ca4:	20ff      	movs	r0, #255	; 0xff
 8008ca6:	f7ff fe79 	bl	800899c <xchg_spi>
 8008caa:	7bfb      	ldrb	r3, [r7, #15]
 8008cac:	3b01      	subs	r3, #1
 8008cae:	73fb      	strb	r3, [r7, #15]
 8008cb0:	7bfb      	ldrb	r3, [r7, #15]
 8008cb2:	2b00      	cmp	r3, #0
 8008cb4:	d1f6      	bne.n	8008ca4 <USER_SPI_initialize+0x44>

	ty = 0;
 8008cb6:	2300      	movs	r3, #0
 8008cb8:	737b      	strb	r3, [r7, #13]
	if (send_cmd(CMD0, 0) == 1) {			/* Put the card SPI/Idle state */
 8008cba:	2100      	movs	r1, #0
 8008cbc:	2000      	movs	r0, #0
 8008cbe:	f7ff ff60 	bl	8008b82 <send_cmd>
 8008cc2:	4603      	mov	r3, r0
 8008cc4:	2b01      	cmp	r3, #1
 8008cc6:	f040 808b 	bne.w	8008de0 <USER_SPI_initialize+0x180>
		SPI_Timer_On(1000);					/* Initialization timeout = 1 sec */
 8008cca:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8008cce:	f7ff fe3b 	bl	8008948 <SPI_Timer_On>
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
 8008cd2:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8008cd6:	2008      	movs	r0, #8
 8008cd8:	f7ff ff53 	bl	8008b82 <send_cmd>
 8008cdc:	4603      	mov	r3, r0
 8008cde:	2b01      	cmp	r3, #1
 8008ce0:	d151      	bne.n	8008d86 <USER_SPI_initialize+0x126>
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);	/* Get 32 bit return value of R7 resp */
 8008ce2:	2300      	movs	r3, #0
 8008ce4:	73fb      	strb	r3, [r7, #15]
 8008ce6:	e00d      	b.n	8008d04 <USER_SPI_initialize+0xa4>
 8008ce8:	7bfc      	ldrb	r4, [r7, #15]
 8008cea:	20ff      	movs	r0, #255	; 0xff
 8008cec:	f7ff fe56 	bl	800899c <xchg_spi>
 8008cf0:	4603      	mov	r3, r0
 8008cf2:	461a      	mov	r2, r3
 8008cf4:	f104 0310 	add.w	r3, r4, #16
 8008cf8:	443b      	add	r3, r7
 8008cfa:	f803 2c08 	strb.w	r2, [r3, #-8]
 8008cfe:	7bfb      	ldrb	r3, [r7, #15]
 8008d00:	3301      	adds	r3, #1
 8008d02:	73fb      	strb	r3, [r7, #15]
 8008d04:	7bfb      	ldrb	r3, [r7, #15]
 8008d06:	2b03      	cmp	r3, #3
 8008d08:	d9ee      	bls.n	8008ce8 <USER_SPI_initialize+0x88>
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* Is the card supports vcc of 2.7-3.6V? */
 8008d0a:	7abb      	ldrb	r3, [r7, #10]
 8008d0c:	2b01      	cmp	r3, #1
 8008d0e:	d167      	bne.n	8008de0 <USER_SPI_initialize+0x180>
 8008d10:	7afb      	ldrb	r3, [r7, #11]
 8008d12:	2baa      	cmp	r3, #170	; 0xaa
 8008d14:	d164      	bne.n	8008de0 <USER_SPI_initialize+0x180>
				while (SPI_Timer_Status() && send_cmd(ACMD41, 1UL << 30)) ;	/* Wait for end of initialization with ACMD41(HCS) */
 8008d16:	bf00      	nop
 8008d18:	f7ff fe2a 	bl	8008970 <SPI_Timer_Status>
 8008d1c:	4603      	mov	r3, r0
 8008d1e:	2b00      	cmp	r3, #0
 8008d20:	d007      	beq.n	8008d32 <USER_SPI_initialize+0xd2>
 8008d22:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8008d26:	20a9      	movs	r0, #169	; 0xa9
 8008d28:	f7ff ff2b 	bl	8008b82 <send_cmd>
 8008d2c:	4603      	mov	r3, r0
 8008d2e:	2b00      	cmp	r3, #0
 8008d30:	d1f2      	bne.n	8008d18 <USER_SPI_initialize+0xb8>
				if (SPI_Timer_Status() && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
 8008d32:	f7ff fe1d 	bl	8008970 <SPI_Timer_Status>
 8008d36:	4603      	mov	r3, r0
 8008d38:	2b00      	cmp	r3, #0
 8008d3a:	d051      	beq.n	8008de0 <USER_SPI_initialize+0x180>
 8008d3c:	2100      	movs	r1, #0
 8008d3e:	203a      	movs	r0, #58	; 0x3a
 8008d40:	f7ff ff1f 	bl	8008b82 <send_cmd>
 8008d44:	4603      	mov	r3, r0
 8008d46:	2b00      	cmp	r3, #0
 8008d48:	d14a      	bne.n	8008de0 <USER_SPI_initialize+0x180>
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
 8008d4a:	2300      	movs	r3, #0
 8008d4c:	73fb      	strb	r3, [r7, #15]
 8008d4e:	e00d      	b.n	8008d6c <USER_SPI_initialize+0x10c>
 8008d50:	7bfc      	ldrb	r4, [r7, #15]
 8008d52:	20ff      	movs	r0, #255	; 0xff
 8008d54:	f7ff fe22 	bl	800899c <xchg_spi>
 8008d58:	4603      	mov	r3, r0
 8008d5a:	461a      	mov	r2, r3
 8008d5c:	f104 0310 	add.w	r3, r4, #16
 8008d60:	443b      	add	r3, r7
 8008d62:	f803 2c08 	strb.w	r2, [r3, #-8]
 8008d66:	7bfb      	ldrb	r3, [r7, #15]
 8008d68:	3301      	adds	r3, #1
 8008d6a:	73fb      	strb	r3, [r7, #15]
 8008d6c:	7bfb      	ldrb	r3, [r7, #15]
 8008d6e:	2b03      	cmp	r3, #3
 8008d70:	d9ee      	bls.n	8008d50 <USER_SPI_initialize+0xf0>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* Card id SDv2 */
 8008d72:	7a3b      	ldrb	r3, [r7, #8]
 8008d74:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008d78:	2b00      	cmp	r3, #0
 8008d7a:	d001      	beq.n	8008d80 <USER_SPI_initialize+0x120>
 8008d7c:	230c      	movs	r3, #12
 8008d7e:	e000      	b.n	8008d82 <USER_SPI_initialize+0x122>
 8008d80:	2304      	movs	r3, #4
 8008d82:	737b      	strb	r3, [r7, #13]
 8008d84:	e02c      	b.n	8008de0 <USER_SPI_initialize+0x180>
				}
			}
		} else {	/* Not SDv2 card */
			if (send_cmd(ACMD41, 0) <= 1) 	{	/* SDv1 or MMC? */
 8008d86:	2100      	movs	r1, #0
 8008d88:	20a9      	movs	r0, #169	; 0xa9
 8008d8a:	f7ff fefa 	bl	8008b82 <send_cmd>
 8008d8e:	4603      	mov	r3, r0
 8008d90:	2b01      	cmp	r3, #1
 8008d92:	d804      	bhi.n	8008d9e <USER_SPI_initialize+0x13e>
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 (ACMD41(0)) */
 8008d94:	2302      	movs	r3, #2
 8008d96:	737b      	strb	r3, [r7, #13]
 8008d98:	23a9      	movs	r3, #169	; 0xa9
 8008d9a:	73bb      	strb	r3, [r7, #14]
 8008d9c:	e003      	b.n	8008da6 <USER_SPI_initialize+0x146>
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 (CMD1(0)) */
 8008d9e:	2301      	movs	r3, #1
 8008da0:	737b      	strb	r3, [r7, #13]
 8008da2:	2301      	movs	r3, #1
 8008da4:	73bb      	strb	r3, [r7, #14]
			}
			while (SPI_Timer_Status() && send_cmd(cmd, 0)) ;		/* Wait for end of initialization */
 8008da6:	bf00      	nop
 8008da8:	f7ff fde2 	bl	8008970 <SPI_Timer_Status>
 8008dac:	4603      	mov	r3, r0
 8008dae:	2b00      	cmp	r3, #0
 8008db0:	d007      	beq.n	8008dc2 <USER_SPI_initialize+0x162>
 8008db2:	7bbb      	ldrb	r3, [r7, #14]
 8008db4:	2100      	movs	r1, #0
 8008db6:	4618      	mov	r0, r3
 8008db8:	f7ff fee3 	bl	8008b82 <send_cmd>
 8008dbc:	4603      	mov	r3, r0
 8008dbe:	2b00      	cmp	r3, #0
 8008dc0:	d1f2      	bne.n	8008da8 <USER_SPI_initialize+0x148>
			if (!SPI_Timer_Status() || send_cmd(CMD16, 512) != 0)	/* Set block length: 512 */
 8008dc2:	f7ff fdd5 	bl	8008970 <SPI_Timer_Status>
 8008dc6:	4603      	mov	r3, r0
 8008dc8:	2b00      	cmp	r3, #0
 8008dca:	d007      	beq.n	8008ddc <USER_SPI_initialize+0x17c>
 8008dcc:	f44f 7100 	mov.w	r1, #512	; 0x200
 8008dd0:	2010      	movs	r0, #16
 8008dd2:	f7ff fed6 	bl	8008b82 <send_cmd>
 8008dd6:	4603      	mov	r3, r0
 8008dd8:	2b00      	cmp	r3, #0
 8008dda:	d001      	beq.n	8008de0 <USER_SPI_initialize+0x180>
				ty = 0;
 8008ddc:	2300      	movs	r3, #0
 8008dde:	737b      	strb	r3, [r7, #13]
		}
	}
	CardType = ty;	/* Card type */
 8008de0:	4a14      	ldr	r2, [pc, #80]	; (8008e34 <USER_SPI_initialize+0x1d4>)
 8008de2:	7b7b      	ldrb	r3, [r7, #13]
 8008de4:	7013      	strb	r3, [r2, #0]
	despiselect();
 8008de6:	f7ff fe49 	bl	8008a7c <despiselect>

	if (ty) {			/* OK */
 8008dea:	7b7b      	ldrb	r3, [r7, #13]
 8008dec:	2b00      	cmp	r3, #0
 8008dee:	d012      	beq.n	8008e16 <USER_SPI_initialize+0x1b6>
		FCLK_FAST();			/* Set fast clock */
 8008df0:	4b0f      	ldr	r3, [pc, #60]	; (8008e30 <USER_SPI_initialize+0x1d0>)
 8008df2:	681b      	ldr	r3, [r3, #0]
 8008df4:	681b      	ldr	r3, [r3, #0]
 8008df6:	f023 0238 	bic.w	r2, r3, #56	; 0x38
 8008dfa:	4b0d      	ldr	r3, [pc, #52]	; (8008e30 <USER_SPI_initialize+0x1d0>)
 8008dfc:	681b      	ldr	r3, [r3, #0]
 8008dfe:	f042 0210 	orr.w	r2, r2, #16
 8008e02:	601a      	str	r2, [r3, #0]
		Stat &= ~STA_NOINIT;	/* Clear STA_NOINIT flag */
 8008e04:	4b09      	ldr	r3, [pc, #36]	; (8008e2c <USER_SPI_initialize+0x1cc>)
 8008e06:	781b      	ldrb	r3, [r3, #0]
 8008e08:	b2db      	uxtb	r3, r3
 8008e0a:	f023 0301 	bic.w	r3, r3, #1
 8008e0e:	b2da      	uxtb	r2, r3
 8008e10:	4b06      	ldr	r3, [pc, #24]	; (8008e2c <USER_SPI_initialize+0x1cc>)
 8008e12:	701a      	strb	r2, [r3, #0]
 8008e14:	e002      	b.n	8008e1c <USER_SPI_initialize+0x1bc>
	} else {			/* Failed */
		Stat = STA_NOINIT;
 8008e16:	4b05      	ldr	r3, [pc, #20]	; (8008e2c <USER_SPI_initialize+0x1cc>)
 8008e18:	2201      	movs	r2, #1
 8008e1a:	701a      	strb	r2, [r3, #0]
	}

	return Stat;
 8008e1c:	4b03      	ldr	r3, [pc, #12]	; (8008e2c <USER_SPI_initialize+0x1cc>)
 8008e1e:	781b      	ldrb	r3, [r3, #0]
 8008e20:	b2db      	uxtb	r3, r3
}
 8008e22:	4618      	mov	r0, r3
 8008e24:	3714      	adds	r7, #20
 8008e26:	46bd      	mov	sp, r7
 8008e28:	bd90      	pop	{r4, r7, pc}
 8008e2a:	bf00      	nop
 8008e2c:	20000028 	.word	0x20000028
 8008e30:	200004fc 	.word	0x200004fc
 8008e34:	200006f0 	.word	0x200006f0

08008e38 <USER_SPI_status>:
/*-----------------------------------------------------------------------*/

inline DSTATUS USER_SPI_status (
	BYTE drv		/* Physical drive number (0) */
)
{
 8008e38:	b480      	push	{r7}
 8008e3a:	b083      	sub	sp, #12
 8008e3c:	af00      	add	r7, sp, #0
 8008e3e:	4603      	mov	r3, r0
 8008e40:	71fb      	strb	r3, [r7, #7]
	if (drv) return STA_NOINIT;		/* Supports only drive 0 */
 8008e42:	79fb      	ldrb	r3, [r7, #7]
 8008e44:	2b00      	cmp	r3, #0
 8008e46:	d001      	beq.n	8008e4c <USER_SPI_status+0x14>
 8008e48:	2301      	movs	r3, #1
 8008e4a:	e002      	b.n	8008e52 <USER_SPI_status+0x1a>

	return Stat;	/* Return disk status */
 8008e4c:	4b04      	ldr	r3, [pc, #16]	; (8008e60 <USER_SPI_status+0x28>)
 8008e4e:	781b      	ldrb	r3, [r3, #0]
 8008e50:	b2db      	uxtb	r3, r3
}
 8008e52:	4618      	mov	r0, r3
 8008e54:	370c      	adds	r7, #12
 8008e56:	46bd      	mov	sp, r7
 8008e58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e5c:	4770      	bx	lr
 8008e5e:	bf00      	nop
 8008e60:	20000028 	.word	0x20000028

08008e64 <USER_SPI_read>:
	BYTE drv,		/* Physical drive number (0) */
	BYTE *buff,		/* Pointer to the data buffer to store read data */
	DWORD sector,	/* Start sector number (LBA) */
	UINT count		/* Number of sectors to read (1..128) */
)
{
 8008e64:	b580      	push	{r7, lr}
 8008e66:	b084      	sub	sp, #16
 8008e68:	af00      	add	r7, sp, #0
 8008e6a:	60b9      	str	r1, [r7, #8]
 8008e6c:	607a      	str	r2, [r7, #4]
 8008e6e:	603b      	str	r3, [r7, #0]
 8008e70:	4603      	mov	r3, r0
 8008e72:	73fb      	strb	r3, [r7, #15]
	if (drv || !count) return RES_PARERR;		/* Check parameter */
 8008e74:	7bfb      	ldrb	r3, [r7, #15]
 8008e76:	2b00      	cmp	r3, #0
 8008e78:	d102      	bne.n	8008e80 <USER_SPI_read+0x1c>
 8008e7a:	683b      	ldr	r3, [r7, #0]
 8008e7c:	2b00      	cmp	r3, #0
 8008e7e:	d101      	bne.n	8008e84 <USER_SPI_read+0x20>
 8008e80:	2304      	movs	r3, #4
 8008e82:	e04d      	b.n	8008f20 <USER_SPI_read+0xbc>
	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check if drive is ready */
 8008e84:	4b28      	ldr	r3, [pc, #160]	; (8008f28 <USER_SPI_read+0xc4>)
 8008e86:	781b      	ldrb	r3, [r3, #0]
 8008e88:	b2db      	uxtb	r3, r3
 8008e8a:	f003 0301 	and.w	r3, r3, #1
 8008e8e:	2b00      	cmp	r3, #0
 8008e90:	d001      	beq.n	8008e96 <USER_SPI_read+0x32>
 8008e92:	2303      	movs	r3, #3
 8008e94:	e044      	b.n	8008f20 <USER_SPI_read+0xbc>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* LBA ot BA conversion (byte addressing cards) */
 8008e96:	4b25      	ldr	r3, [pc, #148]	; (8008f2c <USER_SPI_read+0xc8>)
 8008e98:	781b      	ldrb	r3, [r3, #0]
 8008e9a:	f003 0308 	and.w	r3, r3, #8
 8008e9e:	2b00      	cmp	r3, #0
 8008ea0:	d102      	bne.n	8008ea8 <USER_SPI_read+0x44>
 8008ea2:	687b      	ldr	r3, [r7, #4]
 8008ea4:	025b      	lsls	r3, r3, #9
 8008ea6:	607b      	str	r3, [r7, #4]

	if (count == 1) {	/* Single sector read */
 8008ea8:	683b      	ldr	r3, [r7, #0]
 8008eaa:	2b01      	cmp	r3, #1
 8008eac:	d111      	bne.n	8008ed2 <USER_SPI_read+0x6e>
		if ((send_cmd(CMD17, sector) == 0)	/* READ_SINGLE_BLOCK */
 8008eae:	6879      	ldr	r1, [r7, #4]
 8008eb0:	2011      	movs	r0, #17
 8008eb2:	f7ff fe66 	bl	8008b82 <send_cmd>
 8008eb6:	4603      	mov	r3, r0
 8008eb8:	2b00      	cmp	r3, #0
 8008eba:	d129      	bne.n	8008f10 <USER_SPI_read+0xac>
			&& rcvr_datablock(buff, 512)) {
 8008ebc:	f44f 7100 	mov.w	r1, #512	; 0x200
 8008ec0:	68b8      	ldr	r0, [r7, #8]
 8008ec2:	f7ff fe03 	bl	8008acc <rcvr_datablock>
 8008ec6:	4603      	mov	r3, r0
 8008ec8:	2b00      	cmp	r3, #0
 8008eca:	d021      	beq.n	8008f10 <USER_SPI_read+0xac>
			count = 0;
 8008ecc:	2300      	movs	r3, #0
 8008ece:	603b      	str	r3, [r7, #0]
 8008ed0:	e01e      	b.n	8008f10 <USER_SPI_read+0xac>
		}
	}
	else {				/* Multiple sector read */
		if (send_cmd(CMD18, sector) == 0) {	/* READ_MULTIPLE_BLOCK */
 8008ed2:	6879      	ldr	r1, [r7, #4]
 8008ed4:	2012      	movs	r0, #18
 8008ed6:	f7ff fe54 	bl	8008b82 <send_cmd>
 8008eda:	4603      	mov	r3, r0
 8008edc:	2b00      	cmp	r3, #0
 8008ede:	d117      	bne.n	8008f10 <USER_SPI_read+0xac>
			do {
				if (!rcvr_datablock(buff, 512)) break;
 8008ee0:	f44f 7100 	mov.w	r1, #512	; 0x200
 8008ee4:	68b8      	ldr	r0, [r7, #8]
 8008ee6:	f7ff fdf1 	bl	8008acc <rcvr_datablock>
 8008eea:	4603      	mov	r3, r0
 8008eec:	2b00      	cmp	r3, #0
 8008eee:	d00a      	beq.n	8008f06 <USER_SPI_read+0xa2>
				buff += 512;
 8008ef0:	68bb      	ldr	r3, [r7, #8]
 8008ef2:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8008ef6:	60bb      	str	r3, [r7, #8]
			} while (--count);
 8008ef8:	683b      	ldr	r3, [r7, #0]
 8008efa:	3b01      	subs	r3, #1
 8008efc:	603b      	str	r3, [r7, #0]
 8008efe:	683b      	ldr	r3, [r7, #0]
 8008f00:	2b00      	cmp	r3, #0
 8008f02:	d1ed      	bne.n	8008ee0 <USER_SPI_read+0x7c>
 8008f04:	e000      	b.n	8008f08 <USER_SPI_read+0xa4>
				if (!rcvr_datablock(buff, 512)) break;
 8008f06:	bf00      	nop
			send_cmd(CMD12, 0);				/* STOP_TRANSMISSION */
 8008f08:	2100      	movs	r1, #0
 8008f0a:	200c      	movs	r0, #12
 8008f0c:	f7ff fe39 	bl	8008b82 <send_cmd>
		}
	}
	despiselect();
 8008f10:	f7ff fdb4 	bl	8008a7c <despiselect>

	return count ? RES_ERROR : RES_OK;	/* Return result */
 8008f14:	683b      	ldr	r3, [r7, #0]
 8008f16:	2b00      	cmp	r3, #0
 8008f18:	bf14      	ite	ne
 8008f1a:	2301      	movne	r3, #1
 8008f1c:	2300      	moveq	r3, #0
 8008f1e:	b2db      	uxtb	r3, r3
}
 8008f20:	4618      	mov	r0, r3
 8008f22:	3710      	adds	r7, #16
 8008f24:	46bd      	mov	sp, r7
 8008f26:	bd80      	pop	{r7, pc}
 8008f28:	20000028 	.word	0x20000028
 8008f2c:	200006f0 	.word	0x200006f0

08008f30 <USER_SPI_write>:
	BYTE drv,			/* Physical drive number (0) */
	const BYTE *buff,	/* Ponter to the data to write */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Number of sectors to write (1..128) */
)
{
 8008f30:	b580      	push	{r7, lr}
 8008f32:	b084      	sub	sp, #16
 8008f34:	af00      	add	r7, sp, #0
 8008f36:	60b9      	str	r1, [r7, #8]
 8008f38:	607a      	str	r2, [r7, #4]
 8008f3a:	603b      	str	r3, [r7, #0]
 8008f3c:	4603      	mov	r3, r0
 8008f3e:	73fb      	strb	r3, [r7, #15]
	if (drv || !count) return RES_PARERR;		/* Check parameter */
 8008f40:	7bfb      	ldrb	r3, [r7, #15]
 8008f42:	2b00      	cmp	r3, #0
 8008f44:	d102      	bne.n	8008f4c <USER_SPI_write+0x1c>
 8008f46:	683b      	ldr	r3, [r7, #0]
 8008f48:	2b00      	cmp	r3, #0
 8008f4a:	d101      	bne.n	8008f50 <USER_SPI_write+0x20>
 8008f4c:	2304      	movs	r3, #4
 8008f4e:	e063      	b.n	8009018 <USER_SPI_write+0xe8>
	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check drive status */
 8008f50:	4b33      	ldr	r3, [pc, #204]	; (8009020 <USER_SPI_write+0xf0>)
 8008f52:	781b      	ldrb	r3, [r3, #0]
 8008f54:	b2db      	uxtb	r3, r3
 8008f56:	f003 0301 	and.w	r3, r3, #1
 8008f5a:	2b00      	cmp	r3, #0
 8008f5c:	d001      	beq.n	8008f62 <USER_SPI_write+0x32>
 8008f5e:	2303      	movs	r3, #3
 8008f60:	e05a      	b.n	8009018 <USER_SPI_write+0xe8>
	if (Stat & STA_PROTECT) return RES_WRPRT;	/* Check write protect */
 8008f62:	4b2f      	ldr	r3, [pc, #188]	; (8009020 <USER_SPI_write+0xf0>)
 8008f64:	781b      	ldrb	r3, [r3, #0]
 8008f66:	b2db      	uxtb	r3, r3
 8008f68:	f003 0304 	and.w	r3, r3, #4
 8008f6c:	2b00      	cmp	r3, #0
 8008f6e:	d001      	beq.n	8008f74 <USER_SPI_write+0x44>
 8008f70:	2302      	movs	r3, #2
 8008f72:	e051      	b.n	8009018 <USER_SPI_write+0xe8>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* LBA ==> BA conversion (byte addressing cards) */
 8008f74:	4b2b      	ldr	r3, [pc, #172]	; (8009024 <USER_SPI_write+0xf4>)
 8008f76:	781b      	ldrb	r3, [r3, #0]
 8008f78:	f003 0308 	and.w	r3, r3, #8
 8008f7c:	2b00      	cmp	r3, #0
 8008f7e:	d102      	bne.n	8008f86 <USER_SPI_write+0x56>
 8008f80:	687b      	ldr	r3, [r7, #4]
 8008f82:	025b      	lsls	r3, r3, #9
 8008f84:	607b      	str	r3, [r7, #4]

	if (count == 1) {	/* Single sector write */
 8008f86:	683b      	ldr	r3, [r7, #0]
 8008f88:	2b01      	cmp	r3, #1
 8008f8a:	d110      	bne.n	8008fae <USER_SPI_write+0x7e>
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
 8008f8c:	6879      	ldr	r1, [r7, #4]
 8008f8e:	2018      	movs	r0, #24
 8008f90:	f7ff fdf7 	bl	8008b82 <send_cmd>
 8008f94:	4603      	mov	r3, r0
 8008f96:	2b00      	cmp	r3, #0
 8008f98:	d136      	bne.n	8009008 <USER_SPI_write+0xd8>
			&& xmit_datablock(buff, 0xFE)) {
 8008f9a:	21fe      	movs	r1, #254	; 0xfe
 8008f9c:	68b8      	ldr	r0, [r7, #8]
 8008f9e:	f7ff fdbe 	bl	8008b1e <xmit_datablock>
 8008fa2:	4603      	mov	r3, r0
 8008fa4:	2b00      	cmp	r3, #0
 8008fa6:	d02f      	beq.n	8009008 <USER_SPI_write+0xd8>
			count = 0;
 8008fa8:	2300      	movs	r3, #0
 8008faa:	603b      	str	r3, [r7, #0]
 8008fac:	e02c      	b.n	8009008 <USER_SPI_write+0xd8>
		}
	}
	else {				/* Multiple sector write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);	/* Predefine number of sectors */
 8008fae:	4b1d      	ldr	r3, [pc, #116]	; (8009024 <USER_SPI_write+0xf4>)
 8008fb0:	781b      	ldrb	r3, [r3, #0]
 8008fb2:	f003 0306 	and.w	r3, r3, #6
 8008fb6:	2b00      	cmp	r3, #0
 8008fb8:	d003      	beq.n	8008fc2 <USER_SPI_write+0x92>
 8008fba:	6839      	ldr	r1, [r7, #0]
 8008fbc:	2097      	movs	r0, #151	; 0x97
 8008fbe:	f7ff fde0 	bl	8008b82 <send_cmd>
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
 8008fc2:	6879      	ldr	r1, [r7, #4]
 8008fc4:	2019      	movs	r0, #25
 8008fc6:	f7ff fddc 	bl	8008b82 <send_cmd>
 8008fca:	4603      	mov	r3, r0
 8008fcc:	2b00      	cmp	r3, #0
 8008fce:	d11b      	bne.n	8009008 <USER_SPI_write+0xd8>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
 8008fd0:	21fc      	movs	r1, #252	; 0xfc
 8008fd2:	68b8      	ldr	r0, [r7, #8]
 8008fd4:	f7ff fda3 	bl	8008b1e <xmit_datablock>
 8008fd8:	4603      	mov	r3, r0
 8008fda:	2b00      	cmp	r3, #0
 8008fdc:	d00a      	beq.n	8008ff4 <USER_SPI_write+0xc4>
				buff += 512;
 8008fde:	68bb      	ldr	r3, [r7, #8]
 8008fe0:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8008fe4:	60bb      	str	r3, [r7, #8]
			} while (--count);
 8008fe6:	683b      	ldr	r3, [r7, #0]
 8008fe8:	3b01      	subs	r3, #1
 8008fea:	603b      	str	r3, [r7, #0]
 8008fec:	683b      	ldr	r3, [r7, #0]
 8008fee:	2b00      	cmp	r3, #0
 8008ff0:	d1ee      	bne.n	8008fd0 <USER_SPI_write+0xa0>
 8008ff2:	e000      	b.n	8008ff6 <USER_SPI_write+0xc6>
				if (!xmit_datablock(buff, 0xFC)) break;
 8008ff4:	bf00      	nop
			if (!xmit_datablock(0, 0xFD)) count = 1;	/* STOP_TRAN token */
 8008ff6:	21fd      	movs	r1, #253	; 0xfd
 8008ff8:	2000      	movs	r0, #0
 8008ffa:	f7ff fd90 	bl	8008b1e <xmit_datablock>
 8008ffe:	4603      	mov	r3, r0
 8009000:	2b00      	cmp	r3, #0
 8009002:	d101      	bne.n	8009008 <USER_SPI_write+0xd8>
 8009004:	2301      	movs	r3, #1
 8009006:	603b      	str	r3, [r7, #0]
		}
	}
	despiselect();
 8009008:	f7ff fd38 	bl	8008a7c <despiselect>

	return count ? RES_ERROR : RES_OK;	/* Return result */
 800900c:	683b      	ldr	r3, [r7, #0]
 800900e:	2b00      	cmp	r3, #0
 8009010:	bf14      	ite	ne
 8009012:	2301      	movne	r3, #1
 8009014:	2300      	moveq	r3, #0
 8009016:	b2db      	uxtb	r3, r3
}
 8009018:	4618      	mov	r0, r3
 800901a:	3710      	adds	r7, #16
 800901c:	46bd      	mov	sp, r7
 800901e:	bd80      	pop	{r7, pc}
 8009020:	20000028 	.word	0x20000028
 8009024:	200006f0 	.word	0x200006f0

08009028 <USER_SPI_ioctl>:
inline DRESULT USER_SPI_ioctl (
	BYTE drv,		/* Physical drive number (0) */
	BYTE cmd,		/* Control command code */
	void *buff		/* Pointer to the conrtol data */
)
{
 8009028:	b580      	push	{r7, lr}
 800902a:	b08c      	sub	sp, #48	; 0x30
 800902c:	af00      	add	r7, sp, #0
 800902e:	4603      	mov	r3, r0
 8009030:	603a      	str	r2, [r7, #0]
 8009032:	71fb      	strb	r3, [r7, #7]
 8009034:	460b      	mov	r3, r1
 8009036:	71bb      	strb	r3, [r7, #6]
	DRESULT res;
	BYTE n, csd[16];
	DWORD *dp, st, ed, csize;


	if (drv) return RES_PARERR;					/* Check parameter */
 8009038:	79fb      	ldrb	r3, [r7, #7]
 800903a:	2b00      	cmp	r3, #0
 800903c:	d001      	beq.n	8009042 <USER_SPI_ioctl+0x1a>
 800903e:	2304      	movs	r3, #4
 8009040:	e15a      	b.n	80092f8 <USER_SPI_ioctl+0x2d0>
	if (Stat & STA_NOINIT) return RES_NOTRDY;	/* Check if drive is ready */
 8009042:	4baf      	ldr	r3, [pc, #700]	; (8009300 <USER_SPI_ioctl+0x2d8>)
 8009044:	781b      	ldrb	r3, [r3, #0]
 8009046:	b2db      	uxtb	r3, r3
 8009048:	f003 0301 	and.w	r3, r3, #1
 800904c:	2b00      	cmp	r3, #0
 800904e:	d001      	beq.n	8009054 <USER_SPI_ioctl+0x2c>
 8009050:	2303      	movs	r3, #3
 8009052:	e151      	b.n	80092f8 <USER_SPI_ioctl+0x2d0>

	res = RES_ERROR;
 8009054:	2301      	movs	r3, #1
 8009056:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f

	switch (cmd) {
 800905a:	79bb      	ldrb	r3, [r7, #6]
 800905c:	2b04      	cmp	r3, #4
 800905e:	f200 8136 	bhi.w	80092ce <USER_SPI_ioctl+0x2a6>
 8009062:	a201      	add	r2, pc, #4	; (adr r2, 8009068 <USER_SPI_ioctl+0x40>)
 8009064:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009068:	0800907d 	.word	0x0800907d
 800906c:	08009091 	.word	0x08009091
 8009070:	080092cf 	.word	0x080092cf
 8009074:	0800913d 	.word	0x0800913d
 8009078:	08009233 	.word	0x08009233
	case CTRL_SYNC :		/* Wait for end of internal write process of the drive */
		if (spiselect()) res = RES_OK;
 800907c:	f7ff fd0c 	bl	8008a98 <spiselect>
 8009080:	4603      	mov	r3, r0
 8009082:	2b00      	cmp	r3, #0
 8009084:	f000 8127 	beq.w	80092d6 <USER_SPI_ioctl+0x2ae>
 8009088:	2300      	movs	r3, #0
 800908a:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		break;
 800908e:	e122      	b.n	80092d6 <USER_SPI_ioctl+0x2ae>

	case GET_SECTOR_COUNT :	/* Get drive capacity in unit of sector (DWORD) */
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
 8009090:	2100      	movs	r1, #0
 8009092:	2009      	movs	r0, #9
 8009094:	f7ff fd75 	bl	8008b82 <send_cmd>
 8009098:	4603      	mov	r3, r0
 800909a:	2b00      	cmp	r3, #0
 800909c:	f040 811d 	bne.w	80092da <USER_SPI_ioctl+0x2b2>
 80090a0:	f107 030c 	add.w	r3, r7, #12
 80090a4:	2110      	movs	r1, #16
 80090a6:	4618      	mov	r0, r3
 80090a8:	f7ff fd10 	bl	8008acc <rcvr_datablock>
 80090ac:	4603      	mov	r3, r0
 80090ae:	2b00      	cmp	r3, #0
 80090b0:	f000 8113 	beq.w	80092da <USER_SPI_ioctl+0x2b2>
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
 80090b4:	7b3b      	ldrb	r3, [r7, #12]
 80090b6:	099b      	lsrs	r3, r3, #6
 80090b8:	b2db      	uxtb	r3, r3
 80090ba:	2b01      	cmp	r3, #1
 80090bc:	d111      	bne.n	80090e2 <USER_SPI_ioctl+0xba>
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
 80090be:	7d7b      	ldrb	r3, [r7, #21]
 80090c0:	461a      	mov	r2, r3
 80090c2:	7d3b      	ldrb	r3, [r7, #20]
 80090c4:	021b      	lsls	r3, r3, #8
 80090c6:	4413      	add	r3, r2
 80090c8:	461a      	mov	r2, r3
 80090ca:	7cfb      	ldrb	r3, [r7, #19]
 80090cc:	041b      	lsls	r3, r3, #16
 80090ce:	f403 137c 	and.w	r3, r3, #4128768	; 0x3f0000
 80090d2:	4413      	add	r3, r2
 80090d4:	3301      	adds	r3, #1
 80090d6:	61fb      	str	r3, [r7, #28]
				*(DWORD*)buff = csize << 10;
 80090d8:	69fb      	ldr	r3, [r7, #28]
 80090da:	029a      	lsls	r2, r3, #10
 80090dc:	683b      	ldr	r3, [r7, #0]
 80090de:	601a      	str	r2, [r3, #0]
 80090e0:	e028      	b.n	8009134 <USER_SPI_ioctl+0x10c>
			} else {					/* SDC ver 1.XX or MMC ver 3 */
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
 80090e2:	7c7b      	ldrb	r3, [r7, #17]
 80090e4:	f003 030f 	and.w	r3, r3, #15
 80090e8:	b2da      	uxtb	r2, r3
 80090ea:	7dbb      	ldrb	r3, [r7, #22]
 80090ec:	09db      	lsrs	r3, r3, #7
 80090ee:	b2db      	uxtb	r3, r3
 80090f0:	4413      	add	r3, r2
 80090f2:	b2da      	uxtb	r2, r3
 80090f4:	7d7b      	ldrb	r3, [r7, #21]
 80090f6:	005b      	lsls	r3, r3, #1
 80090f8:	b2db      	uxtb	r3, r3
 80090fa:	f003 0306 	and.w	r3, r3, #6
 80090fe:	b2db      	uxtb	r3, r3
 8009100:	4413      	add	r3, r2
 8009102:	b2db      	uxtb	r3, r3
 8009104:	3302      	adds	r3, #2
 8009106:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
 800910a:	7d3b      	ldrb	r3, [r7, #20]
 800910c:	099b      	lsrs	r3, r3, #6
 800910e:	b2db      	uxtb	r3, r3
 8009110:	461a      	mov	r2, r3
 8009112:	7cfb      	ldrb	r3, [r7, #19]
 8009114:	009b      	lsls	r3, r3, #2
 8009116:	441a      	add	r2, r3
 8009118:	7cbb      	ldrb	r3, [r7, #18]
 800911a:	029b      	lsls	r3, r3, #10
 800911c:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8009120:	4413      	add	r3, r2
 8009122:	3301      	adds	r3, #1
 8009124:	61fb      	str	r3, [r7, #28]
				*(DWORD*)buff = csize << (n - 9);
 8009126:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 800912a:	3b09      	subs	r3, #9
 800912c:	69fa      	ldr	r2, [r7, #28]
 800912e:	409a      	lsls	r2, r3
 8009130:	683b      	ldr	r3, [r7, #0]
 8009132:	601a      	str	r2, [r3, #0]
			}
			res = RES_OK;
 8009134:	2300      	movs	r3, #0
 8009136:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		}
		break;
 800913a:	e0ce      	b.n	80092da <USER_SPI_ioctl+0x2b2>

	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDC ver 2.00 */
 800913c:	4b71      	ldr	r3, [pc, #452]	; (8009304 <USER_SPI_ioctl+0x2dc>)
 800913e:	781b      	ldrb	r3, [r3, #0]
 8009140:	f003 0304 	and.w	r3, r3, #4
 8009144:	2b00      	cmp	r3, #0
 8009146:	d031      	beq.n	80091ac <USER_SPI_ioctl+0x184>
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
 8009148:	2100      	movs	r1, #0
 800914a:	208d      	movs	r0, #141	; 0x8d
 800914c:	f7ff fd19 	bl	8008b82 <send_cmd>
 8009150:	4603      	mov	r3, r0
 8009152:	2b00      	cmp	r3, #0
 8009154:	f040 80c3 	bne.w	80092de <USER_SPI_ioctl+0x2b6>
				xchg_spi(0xFF);
 8009158:	20ff      	movs	r0, #255	; 0xff
 800915a:	f7ff fc1f 	bl	800899c <xchg_spi>
				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
 800915e:	f107 030c 	add.w	r3, r7, #12
 8009162:	2110      	movs	r1, #16
 8009164:	4618      	mov	r0, r3
 8009166:	f7ff fcb1 	bl	8008acc <rcvr_datablock>
 800916a:	4603      	mov	r3, r0
 800916c:	2b00      	cmp	r3, #0
 800916e:	f000 80b6 	beq.w	80092de <USER_SPI_ioctl+0x2b6>
					for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
 8009172:	2330      	movs	r3, #48	; 0x30
 8009174:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
 8009178:	e007      	b.n	800918a <USER_SPI_ioctl+0x162>
 800917a:	20ff      	movs	r0, #255	; 0xff
 800917c:	f7ff fc0e 	bl	800899c <xchg_spi>
 8009180:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8009184:	3b01      	subs	r3, #1
 8009186:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
 800918a:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 800918e:	2b00      	cmp	r3, #0
 8009190:	d1f3      	bne.n	800917a <USER_SPI_ioctl+0x152>
					*(DWORD*)buff = 16UL << (csd[10] >> 4);
 8009192:	7dbb      	ldrb	r3, [r7, #22]
 8009194:	091b      	lsrs	r3, r3, #4
 8009196:	b2db      	uxtb	r3, r3
 8009198:	461a      	mov	r2, r3
 800919a:	2310      	movs	r3, #16
 800919c:	fa03 f202 	lsl.w	r2, r3, r2
 80091a0:	683b      	ldr	r3, [r7, #0]
 80091a2:	601a      	str	r2, [r3, #0]
					res = RES_OK;
 80091a4:	2300      	movs	r3, #0
 80091a6:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
				}
				res = RES_OK;
			}
		}
		break;
 80091aa:	e098      	b.n	80092de <USER_SPI_ioctl+0x2b6>
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
 80091ac:	2100      	movs	r1, #0
 80091ae:	2009      	movs	r0, #9
 80091b0:	f7ff fce7 	bl	8008b82 <send_cmd>
 80091b4:	4603      	mov	r3, r0
 80091b6:	2b00      	cmp	r3, #0
 80091b8:	f040 8091 	bne.w	80092de <USER_SPI_ioctl+0x2b6>
 80091bc:	f107 030c 	add.w	r3, r7, #12
 80091c0:	2110      	movs	r1, #16
 80091c2:	4618      	mov	r0, r3
 80091c4:	f7ff fc82 	bl	8008acc <rcvr_datablock>
 80091c8:	4603      	mov	r3, r0
 80091ca:	2b00      	cmp	r3, #0
 80091cc:	f000 8087 	beq.w	80092de <USER_SPI_ioctl+0x2b6>
				if (CardType & CT_SD1) {	/* SDC ver 1.XX */
 80091d0:	4b4c      	ldr	r3, [pc, #304]	; (8009304 <USER_SPI_ioctl+0x2dc>)
 80091d2:	781b      	ldrb	r3, [r3, #0]
 80091d4:	f003 0302 	and.w	r3, r3, #2
 80091d8:	2b00      	cmp	r3, #0
 80091da:	d012      	beq.n	8009202 <USER_SPI_ioctl+0x1da>
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
 80091dc:	7dbb      	ldrb	r3, [r7, #22]
 80091de:	005b      	lsls	r3, r3, #1
 80091e0:	f003 037e 	and.w	r3, r3, #126	; 0x7e
 80091e4:	7dfa      	ldrb	r2, [r7, #23]
 80091e6:	09d2      	lsrs	r2, r2, #7
 80091e8:	b2d2      	uxtb	r2, r2
 80091ea:	4413      	add	r3, r2
 80091ec:	1c5a      	adds	r2, r3, #1
 80091ee:	7e7b      	ldrb	r3, [r7, #25]
 80091f0:	099b      	lsrs	r3, r3, #6
 80091f2:	b2db      	uxtb	r3, r3
 80091f4:	3b01      	subs	r3, #1
 80091f6:	fa02 f303 	lsl.w	r3, r2, r3
 80091fa:	461a      	mov	r2, r3
 80091fc:	683b      	ldr	r3, [r7, #0]
 80091fe:	601a      	str	r2, [r3, #0]
 8009200:	e013      	b.n	800922a <USER_SPI_ioctl+0x202>
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
 8009202:	7dbb      	ldrb	r3, [r7, #22]
 8009204:	109b      	asrs	r3, r3, #2
 8009206:	b29b      	uxth	r3, r3
 8009208:	f003 031f 	and.w	r3, r3, #31
 800920c:	3301      	adds	r3, #1
 800920e:	7dfa      	ldrb	r2, [r7, #23]
 8009210:	00d2      	lsls	r2, r2, #3
 8009212:	f002 0218 	and.w	r2, r2, #24
 8009216:	7df9      	ldrb	r1, [r7, #23]
 8009218:	0949      	lsrs	r1, r1, #5
 800921a:	b2c9      	uxtb	r1, r1
 800921c:	440a      	add	r2, r1
 800921e:	3201      	adds	r2, #1
 8009220:	fb02 f303 	mul.w	r3, r2, r3
 8009224:	461a      	mov	r2, r3
 8009226:	683b      	ldr	r3, [r7, #0]
 8009228:	601a      	str	r2, [r3, #0]
				res = RES_OK;
 800922a:	2300      	movs	r3, #0
 800922c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		break;
 8009230:	e055      	b.n	80092de <USER_SPI_ioctl+0x2b6>

	case CTRL_TRIM :	/* Erase a block of sectors (used when _USE_ERASE == 1) */
		if (!(CardType & CT_SDC)) break;				/* Check if the card is SDC */
 8009232:	4b34      	ldr	r3, [pc, #208]	; (8009304 <USER_SPI_ioctl+0x2dc>)
 8009234:	781b      	ldrb	r3, [r3, #0]
 8009236:	f003 0306 	and.w	r3, r3, #6
 800923a:	2b00      	cmp	r3, #0
 800923c:	d051      	beq.n	80092e2 <USER_SPI_ioctl+0x2ba>
		if (USER_SPI_ioctl(drv, MMC_GET_CSD, csd)) break;	/* Get CSD */
 800923e:	f107 020c 	add.w	r2, r7, #12
 8009242:	79fb      	ldrb	r3, [r7, #7]
 8009244:	210b      	movs	r1, #11
 8009246:	4618      	mov	r0, r3
 8009248:	f7ff feee 	bl	8009028 <USER_SPI_ioctl>
 800924c:	4603      	mov	r3, r0
 800924e:	2b00      	cmp	r3, #0
 8009250:	d149      	bne.n	80092e6 <USER_SPI_ioctl+0x2be>
		if (!(csd[0] >> 6) && !(csd[10] & 0x40)) break;	/* Check if sector erase can be applied to the card */
 8009252:	7b3b      	ldrb	r3, [r7, #12]
 8009254:	099b      	lsrs	r3, r3, #6
 8009256:	b2db      	uxtb	r3, r3
 8009258:	2b00      	cmp	r3, #0
 800925a:	d104      	bne.n	8009266 <USER_SPI_ioctl+0x23e>
 800925c:	7dbb      	ldrb	r3, [r7, #22]
 800925e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009262:	2b00      	cmp	r3, #0
 8009264:	d041      	beq.n	80092ea <USER_SPI_ioctl+0x2c2>
		dp = buff; st = dp[0]; ed = dp[1];				/* Load sector block */
 8009266:	683b      	ldr	r3, [r7, #0]
 8009268:	623b      	str	r3, [r7, #32]
 800926a:	6a3b      	ldr	r3, [r7, #32]
 800926c:	681b      	ldr	r3, [r3, #0]
 800926e:	62bb      	str	r3, [r7, #40]	; 0x28
 8009270:	6a3b      	ldr	r3, [r7, #32]
 8009272:	685b      	ldr	r3, [r3, #4]
 8009274:	627b      	str	r3, [r7, #36]	; 0x24
		if (!(CardType & CT_BLOCK)) {
 8009276:	4b23      	ldr	r3, [pc, #140]	; (8009304 <USER_SPI_ioctl+0x2dc>)
 8009278:	781b      	ldrb	r3, [r3, #0]
 800927a:	f003 0308 	and.w	r3, r3, #8
 800927e:	2b00      	cmp	r3, #0
 8009280:	d105      	bne.n	800928e <USER_SPI_ioctl+0x266>
			st *= 512; ed *= 512;
 8009282:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009284:	025b      	lsls	r3, r3, #9
 8009286:	62bb      	str	r3, [r7, #40]	; 0x28
 8009288:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800928a:	025b      	lsls	r3, r3, #9
 800928c:	627b      	str	r3, [r7, #36]	; 0x24
		}
		if (send_cmd(CMD32, st) == 0 && send_cmd(CMD33, ed) == 0 && send_cmd(CMD38, 0) == 0 && wait_ready(30000)) {	/* Erase sector block */
 800928e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8009290:	2020      	movs	r0, #32
 8009292:	f7ff fc76 	bl	8008b82 <send_cmd>
 8009296:	4603      	mov	r3, r0
 8009298:	2b00      	cmp	r3, #0
 800929a:	d128      	bne.n	80092ee <USER_SPI_ioctl+0x2c6>
 800929c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800929e:	2021      	movs	r0, #33	; 0x21
 80092a0:	f7ff fc6f 	bl	8008b82 <send_cmd>
 80092a4:	4603      	mov	r3, r0
 80092a6:	2b00      	cmp	r3, #0
 80092a8:	d121      	bne.n	80092ee <USER_SPI_ioctl+0x2c6>
 80092aa:	2100      	movs	r1, #0
 80092ac:	2026      	movs	r0, #38	; 0x26
 80092ae:	f7ff fc68 	bl	8008b82 <send_cmd>
 80092b2:	4603      	mov	r3, r0
 80092b4:	2b00      	cmp	r3, #0
 80092b6:	d11a      	bne.n	80092ee <USER_SPI_ioctl+0x2c6>
 80092b8:	f247 5030 	movw	r0, #30000	; 0x7530
 80092bc:	f7ff fbbb 	bl	8008a36 <wait_ready>
 80092c0:	4603      	mov	r3, r0
 80092c2:	2b00      	cmp	r3, #0
 80092c4:	d013      	beq.n	80092ee <USER_SPI_ioctl+0x2c6>
			res = RES_OK;	/* FatFs does not check result of this command */
 80092c6:	2300      	movs	r3, #0
 80092c8:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		}
		break;
 80092cc:	e00f      	b.n	80092ee <USER_SPI_ioctl+0x2c6>

	default:
		res = RES_PARERR;
 80092ce:	2304      	movs	r3, #4
 80092d0:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 80092d4:	e00c      	b.n	80092f0 <USER_SPI_ioctl+0x2c8>
		break;
 80092d6:	bf00      	nop
 80092d8:	e00a      	b.n	80092f0 <USER_SPI_ioctl+0x2c8>
		break;
 80092da:	bf00      	nop
 80092dc:	e008      	b.n	80092f0 <USER_SPI_ioctl+0x2c8>
		break;
 80092de:	bf00      	nop
 80092e0:	e006      	b.n	80092f0 <USER_SPI_ioctl+0x2c8>
		if (!(CardType & CT_SDC)) break;				/* Check if the card is SDC */
 80092e2:	bf00      	nop
 80092e4:	e004      	b.n	80092f0 <USER_SPI_ioctl+0x2c8>
		if (USER_SPI_ioctl(drv, MMC_GET_CSD, csd)) break;	/* Get CSD */
 80092e6:	bf00      	nop
 80092e8:	e002      	b.n	80092f0 <USER_SPI_ioctl+0x2c8>
		if (!(csd[0] >> 6) && !(csd[10] & 0x40)) break;	/* Check if sector erase can be applied to the card */
 80092ea:	bf00      	nop
 80092ec:	e000      	b.n	80092f0 <USER_SPI_ioctl+0x2c8>
		break;
 80092ee:	bf00      	nop
	}

	despiselect();
 80092f0:	f7ff fbc4 	bl	8008a7c <despiselect>

	return res;
 80092f4:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
}
 80092f8:	4618      	mov	r0, r3
 80092fa:	3730      	adds	r7, #48	; 0x30
 80092fc:	46bd      	mov	sp, r7
 80092fe:	bd80      	pop	{r7, pc}
 8009300:	20000028 	.word	0x20000028
 8009304:	200006f0 	.word	0x200006f0

08009308 <FATFS_LinkDriverEx>:
  * @param  lun : only used for USB Key Disk to add multi-lun management
            else the parameter must be equal to 0
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriverEx(const Diskio_drvTypeDef *drv, char *path, uint8_t lun)
{
 8009308:	b480      	push	{r7}
 800930a:	b087      	sub	sp, #28
 800930c:	af00      	add	r7, sp, #0
 800930e:	60f8      	str	r0, [r7, #12]
 8009310:	60b9      	str	r1, [r7, #8]
 8009312:	4613      	mov	r3, r2
 8009314:	71fb      	strb	r3, [r7, #7]
  uint8_t ret = 1;
 8009316:	2301      	movs	r3, #1
 8009318:	75fb      	strb	r3, [r7, #23]
  uint8_t DiskNum = 0;
 800931a:	2300      	movs	r3, #0
 800931c:	75bb      	strb	r3, [r7, #22]

  if(disk.nbr < _VOLUMES)
 800931e:	4b1f      	ldr	r3, [pc, #124]	; (800939c <FATFS_LinkDriverEx+0x94>)
 8009320:	7a5b      	ldrb	r3, [r3, #9]
 8009322:	b2db      	uxtb	r3, r3
 8009324:	2b00      	cmp	r3, #0
 8009326:	d131      	bne.n	800938c <FATFS_LinkDriverEx+0x84>
  {
    disk.is_initialized[disk.nbr] = 0;
 8009328:	4b1c      	ldr	r3, [pc, #112]	; (800939c <FATFS_LinkDriverEx+0x94>)
 800932a:	7a5b      	ldrb	r3, [r3, #9]
 800932c:	b2db      	uxtb	r3, r3
 800932e:	461a      	mov	r2, r3
 8009330:	4b1a      	ldr	r3, [pc, #104]	; (800939c <FATFS_LinkDriverEx+0x94>)
 8009332:	2100      	movs	r1, #0
 8009334:	5499      	strb	r1, [r3, r2]
    disk.drv[disk.nbr] = drv;
 8009336:	4b19      	ldr	r3, [pc, #100]	; (800939c <FATFS_LinkDriverEx+0x94>)
 8009338:	7a5b      	ldrb	r3, [r3, #9]
 800933a:	b2db      	uxtb	r3, r3
 800933c:	4a17      	ldr	r2, [pc, #92]	; (800939c <FATFS_LinkDriverEx+0x94>)
 800933e:	009b      	lsls	r3, r3, #2
 8009340:	4413      	add	r3, r2
 8009342:	68fa      	ldr	r2, [r7, #12]
 8009344:	605a      	str	r2, [r3, #4]
    disk.lun[disk.nbr] = lun;
 8009346:	4b15      	ldr	r3, [pc, #84]	; (800939c <FATFS_LinkDriverEx+0x94>)
 8009348:	7a5b      	ldrb	r3, [r3, #9]
 800934a:	b2db      	uxtb	r3, r3
 800934c:	461a      	mov	r2, r3
 800934e:	4b13      	ldr	r3, [pc, #76]	; (800939c <FATFS_LinkDriverEx+0x94>)
 8009350:	4413      	add	r3, r2
 8009352:	79fa      	ldrb	r2, [r7, #7]
 8009354:	721a      	strb	r2, [r3, #8]
    DiskNum = disk.nbr++;
 8009356:	4b11      	ldr	r3, [pc, #68]	; (800939c <FATFS_LinkDriverEx+0x94>)
 8009358:	7a5b      	ldrb	r3, [r3, #9]
 800935a:	b2db      	uxtb	r3, r3
 800935c:	1c5a      	adds	r2, r3, #1
 800935e:	b2d1      	uxtb	r1, r2
 8009360:	4a0e      	ldr	r2, [pc, #56]	; (800939c <FATFS_LinkDriverEx+0x94>)
 8009362:	7251      	strb	r1, [r2, #9]
 8009364:	75bb      	strb	r3, [r7, #22]
    path[0] = DiskNum + '0';
 8009366:	7dbb      	ldrb	r3, [r7, #22]
 8009368:	3330      	adds	r3, #48	; 0x30
 800936a:	b2da      	uxtb	r2, r3
 800936c:	68bb      	ldr	r3, [r7, #8]
 800936e:	701a      	strb	r2, [r3, #0]
    path[1] = ':';
 8009370:	68bb      	ldr	r3, [r7, #8]
 8009372:	3301      	adds	r3, #1
 8009374:	223a      	movs	r2, #58	; 0x3a
 8009376:	701a      	strb	r2, [r3, #0]
    path[2] = '/';
 8009378:	68bb      	ldr	r3, [r7, #8]
 800937a:	3302      	adds	r3, #2
 800937c:	222f      	movs	r2, #47	; 0x2f
 800937e:	701a      	strb	r2, [r3, #0]
    path[3] = 0;
 8009380:	68bb      	ldr	r3, [r7, #8]
 8009382:	3303      	adds	r3, #3
 8009384:	2200      	movs	r2, #0
 8009386:	701a      	strb	r2, [r3, #0]
    ret = 0;
 8009388:	2300      	movs	r3, #0
 800938a:	75fb      	strb	r3, [r7, #23]
  }

  return ret;
 800938c:	7dfb      	ldrb	r3, [r7, #23]
}
 800938e:	4618      	mov	r0, r3
 8009390:	371c      	adds	r7, #28
 8009392:	46bd      	mov	sp, r7
 8009394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009398:	4770      	bx	lr
 800939a:	bf00      	nop
 800939c:	200006fc 	.word	0x200006fc

080093a0 <FATFS_LinkDriver>:
  * @param  drv: pointer to the disk IO Driver structure
  * @param  path: pointer to the logical drive path
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriver(const Diskio_drvTypeDef *drv, char *path)
{
 80093a0:	b580      	push	{r7, lr}
 80093a2:	b082      	sub	sp, #8
 80093a4:	af00      	add	r7, sp, #0
 80093a6:	6078      	str	r0, [r7, #4]
 80093a8:	6039      	str	r1, [r7, #0]
  return FATFS_LinkDriverEx(drv, path, 0);
 80093aa:	2200      	movs	r2, #0
 80093ac:	6839      	ldr	r1, [r7, #0]
 80093ae:	6878      	ldr	r0, [r7, #4]
 80093b0:	f7ff ffaa 	bl	8009308 <FATFS_LinkDriverEx>
 80093b4:	4603      	mov	r3, r0
}
 80093b6:	4618      	mov	r0, r3
 80093b8:	3708      	adds	r7, #8
 80093ba:	46bd      	mov	sp, r7
 80093bc:	bd80      	pop	{r7, pc}
	...

080093c0 <__NVIC_SetPriority>:
{
 80093c0:	b480      	push	{r7}
 80093c2:	b083      	sub	sp, #12
 80093c4:	af00      	add	r7, sp, #0
 80093c6:	4603      	mov	r3, r0
 80093c8:	6039      	str	r1, [r7, #0]
 80093ca:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80093cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80093d0:	2b00      	cmp	r3, #0
 80093d2:	db0a      	blt.n	80093ea <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80093d4:	683b      	ldr	r3, [r7, #0]
 80093d6:	b2da      	uxtb	r2, r3
 80093d8:	490c      	ldr	r1, [pc, #48]	; (800940c <__NVIC_SetPriority+0x4c>)
 80093da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80093de:	0112      	lsls	r2, r2, #4
 80093e0:	b2d2      	uxtb	r2, r2
 80093e2:	440b      	add	r3, r1
 80093e4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 80093e8:	e00a      	b.n	8009400 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80093ea:	683b      	ldr	r3, [r7, #0]
 80093ec:	b2da      	uxtb	r2, r3
 80093ee:	4908      	ldr	r1, [pc, #32]	; (8009410 <__NVIC_SetPriority+0x50>)
 80093f0:	79fb      	ldrb	r3, [r7, #7]
 80093f2:	f003 030f 	and.w	r3, r3, #15
 80093f6:	3b04      	subs	r3, #4
 80093f8:	0112      	lsls	r2, r2, #4
 80093fa:	b2d2      	uxtb	r2, r2
 80093fc:	440b      	add	r3, r1
 80093fe:	761a      	strb	r2, [r3, #24]
}
 8009400:	bf00      	nop
 8009402:	370c      	adds	r7, #12
 8009404:	46bd      	mov	sp, r7
 8009406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800940a:	4770      	bx	lr
 800940c:	e000e100 	.word	0xe000e100
 8009410:	e000ed00 	.word	0xe000ed00

08009414 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8009414:	b580      	push	{r7, lr}
 8009416:	af00      	add	r7, sp, #0
  /* Clear overflow flag */
  SysTick->CTRL;
 8009418:	4b05      	ldr	r3, [pc, #20]	; (8009430 <SysTick_Handler+0x1c>)
 800941a:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800941c:	f001 fd28 	bl	800ae70 <xTaskGetSchedulerState>
 8009420:	4603      	mov	r3, r0
 8009422:	2b01      	cmp	r3, #1
 8009424:	d001      	beq.n	800942a <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
 8009426:	f002 fb0f 	bl	800ba48 <xPortSysTickHandler>
  }
}
 800942a:	bf00      	nop
 800942c:	bd80      	pop	{r7, pc}
 800942e:	bf00      	nop
 8009430:	e000e010 	.word	0xe000e010

08009434 <SVC_Setup>:
#endif /* SysTick */

/*
  Setup SVC to reset value.
*/
__STATIC_INLINE void SVC_Setup (void) {
 8009434:	b580      	push	{r7, lr}
 8009436:	af00      	add	r7, sp, #0
#if (__ARM_ARCH_7A__ == 0U)
  /* Service Call interrupt might be configured before kernel start     */
  /* and when its priority is lower or equal to BASEPRI, svc intruction */
  /* causes a Hard Fault.                                               */
  NVIC_SetPriority (SVCall_IRQ_NBR, 0U);
 8009438:	2100      	movs	r1, #0
 800943a:	f06f 0004 	mvn.w	r0, #4
 800943e:	f7ff ffbf 	bl	80093c0 <__NVIC_SetPriority>
#endif
}
 8009442:	bf00      	nop
 8009444:	bd80      	pop	{r7, pc}
	...

08009448 <osKernelInitialize>:
static uint32_t OS_Tick_GetOverflow (void);
/* Get OS Tick interval */
static uint32_t OS_Tick_GetInterval (void);
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
 8009448:	b480      	push	{r7}
 800944a:	b083      	sub	sp, #12
 800944c:	af00      	add	r7, sp, #0
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800944e:	f3ef 8305 	mrs	r3, IPSR
 8009452:	603b      	str	r3, [r7, #0]
  return(result);
 8009454:	683b      	ldr	r3, [r7, #0]
  osStatus_t stat;

  if (IS_IRQ()) {
 8009456:	2b00      	cmp	r3, #0
 8009458:	d003      	beq.n	8009462 <osKernelInitialize+0x1a>
    stat = osErrorISR;
 800945a:	f06f 0305 	mvn.w	r3, #5
 800945e:	607b      	str	r3, [r7, #4]
 8009460:	e00c      	b.n	800947c <osKernelInitialize+0x34>
  }
  else {
    if (KernelState == osKernelInactive) {
 8009462:	4b0a      	ldr	r3, [pc, #40]	; (800948c <osKernelInitialize+0x44>)
 8009464:	681b      	ldr	r3, [r3, #0]
 8009466:	2b00      	cmp	r3, #0
 8009468:	d105      	bne.n	8009476 <osKernelInitialize+0x2e>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800946a:	4b08      	ldr	r3, [pc, #32]	; (800948c <osKernelInitialize+0x44>)
 800946c:	2201      	movs	r2, #1
 800946e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8009470:	2300      	movs	r3, #0
 8009472:	607b      	str	r3, [r7, #4]
 8009474:	e002      	b.n	800947c <osKernelInitialize+0x34>
    } else {
      stat = osError;
 8009476:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800947a:	607b      	str	r3, [r7, #4]
    }
  }

  return (stat);
 800947c:	687b      	ldr	r3, [r7, #4]
}
 800947e:	4618      	mov	r0, r3
 8009480:	370c      	adds	r7, #12
 8009482:	46bd      	mov	sp, r7
 8009484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009488:	4770      	bx	lr
 800948a:	bf00      	nop
 800948c:	20000708 	.word	0x20000708

08009490 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8009490:	b580      	push	{r7, lr}
 8009492:	b082      	sub	sp, #8
 8009494:	af00      	add	r7, sp, #0
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009496:	f3ef 8305 	mrs	r3, IPSR
 800949a:	603b      	str	r3, [r7, #0]
  return(result);
 800949c:	683b      	ldr	r3, [r7, #0]
  osStatus_t stat;

  if (IS_IRQ()) {
 800949e:	2b00      	cmp	r3, #0
 80094a0:	d003      	beq.n	80094aa <osKernelStart+0x1a>
    stat = osErrorISR;
 80094a2:	f06f 0305 	mvn.w	r3, #5
 80094a6:	607b      	str	r3, [r7, #4]
 80094a8:	e010      	b.n	80094cc <osKernelStart+0x3c>
  }
  else {
    if (KernelState == osKernelReady) {
 80094aa:	4b0b      	ldr	r3, [pc, #44]	; (80094d8 <osKernelStart+0x48>)
 80094ac:	681b      	ldr	r3, [r3, #0]
 80094ae:	2b01      	cmp	r3, #1
 80094b0:	d109      	bne.n	80094c6 <osKernelStart+0x36>
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
 80094b2:	f7ff ffbf 	bl	8009434 <SVC_Setup>
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 80094b6:	4b08      	ldr	r3, [pc, #32]	; (80094d8 <osKernelStart+0x48>)
 80094b8:	2202      	movs	r2, #2
 80094ba:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 80094bc:	f001 f87c 	bl	800a5b8 <vTaskStartScheduler>
      stat = osOK;
 80094c0:	2300      	movs	r3, #0
 80094c2:	607b      	str	r3, [r7, #4]
 80094c4:	e002      	b.n	80094cc <osKernelStart+0x3c>
    } else {
      stat = osError;
 80094c6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80094ca:	607b      	str	r3, [r7, #4]
    }
  }

  return (stat);
 80094cc:	687b      	ldr	r3, [r7, #4]
}
 80094ce:	4618      	mov	r0, r3
 80094d0:	3708      	adds	r7, #8
 80094d2:	46bd      	mov	sp, r7
 80094d4:	bd80      	pop	{r7, pc}
 80094d6:	bf00      	nop
 80094d8:	20000708 	.word	0x20000708

080094dc <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80094dc:	b580      	push	{r7, lr}
 80094de:	b08e      	sub	sp, #56	; 0x38
 80094e0:	af04      	add	r7, sp, #16
 80094e2:	60f8      	str	r0, [r7, #12]
 80094e4:	60b9      	str	r1, [r7, #8]
 80094e6:	607a      	str	r2, [r7, #4]
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80094e8:	2300      	movs	r3, #0
 80094ea:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80094ec:	f3ef 8305 	mrs	r3, IPSR
 80094f0:	617b      	str	r3, [r7, #20]
  return(result);
 80094f2:	697b      	ldr	r3, [r7, #20]

  if (!IS_IRQ() && (func != NULL)) {
 80094f4:	2b00      	cmp	r3, #0
 80094f6:	d17e      	bne.n	80095f6 <osThreadNew+0x11a>
 80094f8:	68fb      	ldr	r3, [r7, #12]
 80094fa:	2b00      	cmp	r3, #0
 80094fc:	d07b      	beq.n	80095f6 <osThreadNew+0x11a>
    stack = configMINIMAL_STACK_SIZE;
 80094fe:	2380      	movs	r3, #128	; 0x80
 8009500:	623b      	str	r3, [r7, #32]
    prio  = (UBaseType_t)osPriorityNormal;
 8009502:	2318      	movs	r3, #24
 8009504:	61fb      	str	r3, [r7, #28]

    name = NULL;
 8009506:	2300      	movs	r3, #0
 8009508:	627b      	str	r3, [r7, #36]	; 0x24
    mem  = -1;
 800950a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800950e:	61bb      	str	r3, [r7, #24]

    if (attr != NULL) {
 8009510:	687b      	ldr	r3, [r7, #4]
 8009512:	2b00      	cmp	r3, #0
 8009514:	d045      	beq.n	80095a2 <osThreadNew+0xc6>
      if (attr->name != NULL) {
 8009516:	687b      	ldr	r3, [r7, #4]
 8009518:	681b      	ldr	r3, [r3, #0]
 800951a:	2b00      	cmp	r3, #0
 800951c:	d002      	beq.n	8009524 <osThreadNew+0x48>
        name = attr->name;
 800951e:	687b      	ldr	r3, [r7, #4]
 8009520:	681b      	ldr	r3, [r3, #0]
 8009522:	627b      	str	r3, [r7, #36]	; 0x24
      }
      if (attr->priority != osPriorityNone) {
 8009524:	687b      	ldr	r3, [r7, #4]
 8009526:	699b      	ldr	r3, [r3, #24]
 8009528:	2b00      	cmp	r3, #0
 800952a:	d002      	beq.n	8009532 <osThreadNew+0x56>
        prio = (UBaseType_t)attr->priority;
 800952c:	687b      	ldr	r3, [r7, #4]
 800952e:	699b      	ldr	r3, [r3, #24]
 8009530:	61fb      	str	r3, [r7, #28]
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8009532:	69fb      	ldr	r3, [r7, #28]
 8009534:	2b00      	cmp	r3, #0
 8009536:	d008      	beq.n	800954a <osThreadNew+0x6e>
 8009538:	69fb      	ldr	r3, [r7, #28]
 800953a:	2b38      	cmp	r3, #56	; 0x38
 800953c:	d805      	bhi.n	800954a <osThreadNew+0x6e>
 800953e:	687b      	ldr	r3, [r7, #4]
 8009540:	685b      	ldr	r3, [r3, #4]
 8009542:	f003 0301 	and.w	r3, r3, #1
 8009546:	2b00      	cmp	r3, #0
 8009548:	d001      	beq.n	800954e <osThreadNew+0x72>
        return (NULL);
 800954a:	2300      	movs	r3, #0
 800954c:	e054      	b.n	80095f8 <osThreadNew+0x11c>
      }

      if (attr->stack_size > 0U) {
 800954e:	687b      	ldr	r3, [r7, #4]
 8009550:	695b      	ldr	r3, [r3, #20]
 8009552:	2b00      	cmp	r3, #0
 8009554:	d003      	beq.n	800955e <osThreadNew+0x82>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	695b      	ldr	r3, [r3, #20]
 800955a:	089b      	lsrs	r3, r3, #2
 800955c:	623b      	str	r3, [r7, #32]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800955e:	687b      	ldr	r3, [r7, #4]
 8009560:	689b      	ldr	r3, [r3, #8]
 8009562:	2b00      	cmp	r3, #0
 8009564:	d00e      	beq.n	8009584 <osThreadNew+0xa8>
 8009566:	687b      	ldr	r3, [r7, #4]
 8009568:	68db      	ldr	r3, [r3, #12]
 800956a:	2bbb      	cmp	r3, #187	; 0xbb
 800956c:	d90a      	bls.n	8009584 <osThreadNew+0xa8>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800956e:	687b      	ldr	r3, [r7, #4]
 8009570:	691b      	ldr	r3, [r3, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009572:	2b00      	cmp	r3, #0
 8009574:	d006      	beq.n	8009584 <osThreadNew+0xa8>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8009576:	687b      	ldr	r3, [r7, #4]
 8009578:	695b      	ldr	r3, [r3, #20]
 800957a:	2b00      	cmp	r3, #0
 800957c:	d002      	beq.n	8009584 <osThreadNew+0xa8>
        mem = 1;
 800957e:	2301      	movs	r3, #1
 8009580:	61bb      	str	r3, [r7, #24]
 8009582:	e010      	b.n	80095a6 <osThreadNew+0xca>
      }
      else {
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8009584:	687b      	ldr	r3, [r7, #4]
 8009586:	689b      	ldr	r3, [r3, #8]
 8009588:	2b00      	cmp	r3, #0
 800958a:	d10c      	bne.n	80095a6 <osThreadNew+0xca>
 800958c:	687b      	ldr	r3, [r7, #4]
 800958e:	68db      	ldr	r3, [r3, #12]
 8009590:	2b00      	cmp	r3, #0
 8009592:	d108      	bne.n	80095a6 <osThreadNew+0xca>
 8009594:	687b      	ldr	r3, [r7, #4]
 8009596:	691b      	ldr	r3, [r3, #16]
 8009598:	2b00      	cmp	r3, #0
 800959a:	d104      	bne.n	80095a6 <osThreadNew+0xca>
          mem = 0;
 800959c:	2300      	movs	r3, #0
 800959e:	61bb      	str	r3, [r7, #24]
 80095a0:	e001      	b.n	80095a6 <osThreadNew+0xca>
        }
      }
    }
    else {
      mem = 0;
 80095a2:	2300      	movs	r3, #0
 80095a4:	61bb      	str	r3, [r7, #24]
    }

    if (mem == 1) {
 80095a6:	69bb      	ldr	r3, [r7, #24]
 80095a8:	2b01      	cmp	r3, #1
 80095aa:	d110      	bne.n	80095ce <osThreadNew+0xf2>
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80095ac:	687b      	ldr	r3, [r7, #4]
 80095ae:	691b      	ldr	r3, [r3, #16]
                                                                                      (StaticTask_t *)attr->cb_mem);
 80095b0:	687a      	ldr	r2, [r7, #4]
 80095b2:	6892      	ldr	r2, [r2, #8]
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80095b4:	9202      	str	r2, [sp, #8]
 80095b6:	9301      	str	r3, [sp, #4]
 80095b8:	69fb      	ldr	r3, [r7, #28]
 80095ba:	9300      	str	r3, [sp, #0]
 80095bc:	68bb      	ldr	r3, [r7, #8]
 80095be:	6a3a      	ldr	r2, [r7, #32]
 80095c0:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80095c2:	68f8      	ldr	r0, [r7, #12]
 80095c4:	f000 fe0c 	bl	800a1e0 <xTaskCreateStatic>
 80095c8:	4603      	mov	r3, r0
 80095ca:	613b      	str	r3, [r7, #16]
 80095cc:	e013      	b.n	80095f6 <osThreadNew+0x11a>
      #endif
    }
    else {
      if (mem == 0) {
 80095ce:	69bb      	ldr	r3, [r7, #24]
 80095d0:	2b00      	cmp	r3, #0
 80095d2:	d110      	bne.n	80095f6 <osThreadNew+0x11a>
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80095d4:	6a3b      	ldr	r3, [r7, #32]
 80095d6:	b29a      	uxth	r2, r3
 80095d8:	f107 0310 	add.w	r3, r7, #16
 80095dc:	9301      	str	r3, [sp, #4]
 80095de:	69fb      	ldr	r3, [r7, #28]
 80095e0:	9300      	str	r3, [sp, #0]
 80095e2:	68bb      	ldr	r3, [r7, #8]
 80095e4:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80095e6:	68f8      	ldr	r0, [r7, #12]
 80095e8:	f000 fe57 	bl	800a29a <xTaskCreate>
 80095ec:	4603      	mov	r3, r0
 80095ee:	2b01      	cmp	r3, #1
 80095f0:	d001      	beq.n	80095f6 <osThreadNew+0x11a>
            hTask = NULL;
 80095f2:	2300      	movs	r3, #0
 80095f4:	613b      	str	r3, [r7, #16]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 80095f6:	693b      	ldr	r3, [r7, #16]
}
 80095f8:	4618      	mov	r0, r3
 80095fa:	3728      	adds	r7, #40	; 0x28
 80095fc:	46bd      	mov	sp, r7
 80095fe:	bd80      	pop	{r7, pc}

08009600 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8009600:	b580      	push	{r7, lr}
 8009602:	b084      	sub	sp, #16
 8009604:	af00      	add	r7, sp, #0
 8009606:	6078      	str	r0, [r7, #4]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009608:	f3ef 8305 	mrs	r3, IPSR
 800960c:	60bb      	str	r3, [r7, #8]
  return(result);
 800960e:	68bb      	ldr	r3, [r7, #8]
  osStatus_t stat;

  if (IS_IRQ()) {
 8009610:	2b00      	cmp	r3, #0
 8009612:	d003      	beq.n	800961c <osDelay+0x1c>
    stat = osErrorISR;
 8009614:	f06f 0305 	mvn.w	r3, #5
 8009618:	60fb      	str	r3, [r7, #12]
 800961a:	e007      	b.n	800962c <osDelay+0x2c>
  }
  else {
    stat = osOK;
 800961c:	2300      	movs	r3, #0
 800961e:	60fb      	str	r3, [r7, #12]

    if (ticks != 0U) {
 8009620:	687b      	ldr	r3, [r7, #4]
 8009622:	2b00      	cmp	r3, #0
 8009624:	d002      	beq.n	800962c <osDelay+0x2c>
      vTaskDelay(ticks);
 8009626:	6878      	ldr	r0, [r7, #4]
 8009628:	f000 ff92 	bl	800a550 <vTaskDelay>
    }
  }

  return (stat);
 800962c:	68fb      	ldr	r3, [r7, #12]
}
 800962e:	4618      	mov	r0, r3
 8009630:	3710      	adds	r7, #16
 8009632:	46bd      	mov	sp, r7
 8009634:	bd80      	pop	{r7, pc}
	...

08009638 <vApplicationGetIdleTaskMemory>:

/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 8009638:	b480      	push	{r7}
 800963a:	b085      	sub	sp, #20
 800963c:	af00      	add	r7, sp, #0
 800963e:	60f8      	str	r0, [r7, #12]
 8009640:	60b9      	str	r1, [r7, #8]
 8009642:	607a      	str	r2, [r7, #4]
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8009644:	68fb      	ldr	r3, [r7, #12]
 8009646:	4a07      	ldr	r2, [pc, #28]	; (8009664 <vApplicationGetIdleTaskMemory+0x2c>)
 8009648:	601a      	str	r2, [r3, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800964a:	68bb      	ldr	r3, [r7, #8]
 800964c:	4a06      	ldr	r2, [pc, #24]	; (8009668 <vApplicationGetIdleTaskMemory+0x30>)
 800964e:	601a      	str	r2, [r3, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8009650:	687b      	ldr	r3, [r7, #4]
 8009652:	2280      	movs	r2, #128	; 0x80
 8009654:	601a      	str	r2, [r3, #0]
}
 8009656:	bf00      	nop
 8009658:	3714      	adds	r7, #20
 800965a:	46bd      	mov	sp, r7
 800965c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009660:	4770      	bx	lr
 8009662:	bf00      	nop
 8009664:	2000070c 	.word	0x2000070c
 8009668:	200007c8 	.word	0x200007c8

0800966c <vApplicationGetTimerTaskMemory>:

/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800966c:	b480      	push	{r7}
 800966e:	b085      	sub	sp, #20
 8009670:	af00      	add	r7, sp, #0
 8009672:	60f8      	str	r0, [r7, #12]
 8009674:	60b9      	str	r1, [r7, #8]
 8009676:	607a      	str	r2, [r7, #4]
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8009678:	68fb      	ldr	r3, [r7, #12]
 800967a:	4a07      	ldr	r2, [pc, #28]	; (8009698 <vApplicationGetTimerTaskMemory+0x2c>)
 800967c:	601a      	str	r2, [r3, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800967e:	68bb      	ldr	r3, [r7, #8]
 8009680:	4a06      	ldr	r2, [pc, #24]	; (800969c <vApplicationGetTimerTaskMemory+0x30>)
 8009682:	601a      	str	r2, [r3, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8009684:	687b      	ldr	r3, [r7, #4]
 8009686:	f44f 7280 	mov.w	r2, #256	; 0x100
 800968a:	601a      	str	r2, [r3, #0]
}
 800968c:	bf00      	nop
 800968e:	3714      	adds	r7, #20
 8009690:	46bd      	mov	sp, r7
 8009692:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009696:	4770      	bx	lr
 8009698:	200009c8 	.word	0x200009c8
 800969c:	20000a84 	.word	0x20000a84

080096a0 <vListInitialise>:
/*-----------------------------------------------------------
 * PUBLIC LIST API documented in list.h
 *----------------------------------------------------------*/

void vListInitialise( List_t * const pxList )
{
 80096a0:	b480      	push	{r7}
 80096a2:	b083      	sub	sp, #12
 80096a4:	af00      	add	r7, sp, #0
 80096a6:	6078      	str	r0, [r7, #4]
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80096a8:	687b      	ldr	r3, [r7, #4]
 80096aa:	f103 0208 	add.w	r2, r3, #8
 80096ae:	687b      	ldr	r3, [r7, #4]
 80096b0:	605a      	str	r2, [r3, #4]

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80096b2:	687b      	ldr	r3, [r7, #4]
 80096b4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80096b8:	609a      	str	r2, [r3, #8]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80096ba:	687b      	ldr	r3, [r7, #4]
 80096bc:	f103 0208 	add.w	r2, r3, #8
 80096c0:	687b      	ldr	r3, [r7, #4]
 80096c2:	60da      	str	r2, [r3, #12]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80096c4:	687b      	ldr	r3, [r7, #4]
 80096c6:	f103 0208 	add.w	r2, r3, #8
 80096ca:	687b      	ldr	r3, [r7, #4]
 80096cc:	611a      	str	r2, [r3, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80096ce:	687b      	ldr	r3, [r7, #4]
 80096d0:	2200      	movs	r2, #0
 80096d2:	601a      	str	r2, [r3, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80096d4:	bf00      	nop
 80096d6:	370c      	adds	r7, #12
 80096d8:	46bd      	mov	sp, r7
 80096da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096de:	4770      	bx	lr

080096e0 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
 80096e0:	b480      	push	{r7}
 80096e2:	b083      	sub	sp, #12
 80096e4:	af00      	add	r7, sp, #0
 80096e6:	6078      	str	r0, [r7, #4]
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80096e8:	687b      	ldr	r3, [r7, #4]
 80096ea:	2200      	movs	r2, #0
 80096ec:	611a      	str	r2, [r3, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80096ee:	bf00      	nop
 80096f0:	370c      	adds	r7, #12
 80096f2:	46bd      	mov	sp, r7
 80096f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096f8:	4770      	bx	lr

080096fa <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80096fa:	b480      	push	{r7}
 80096fc:	b085      	sub	sp, #20
 80096fe:	af00      	add	r7, sp, #0
 8009700:	6078      	str	r0, [r7, #4]
 8009702:	6039      	str	r1, [r7, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
 8009704:	687b      	ldr	r3, [r7, #4]
 8009706:	685b      	ldr	r3, [r3, #4]
 8009708:	60fb      	str	r3, [r7, #12]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800970a:	683b      	ldr	r3, [r7, #0]
 800970c:	68fa      	ldr	r2, [r7, #12]
 800970e:	605a      	str	r2, [r3, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8009710:	68fb      	ldr	r3, [r7, #12]
 8009712:	689a      	ldr	r2, [r3, #8]
 8009714:	683b      	ldr	r3, [r7, #0]
 8009716:	609a      	str	r2, [r3, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8009718:	68fb      	ldr	r3, [r7, #12]
 800971a:	689b      	ldr	r3, [r3, #8]
 800971c:	683a      	ldr	r2, [r7, #0]
 800971e:	605a      	str	r2, [r3, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8009720:	68fb      	ldr	r3, [r7, #12]
 8009722:	683a      	ldr	r2, [r7, #0]
 8009724:	609a      	str	r2, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;
 8009726:	683b      	ldr	r3, [r7, #0]
 8009728:	687a      	ldr	r2, [r7, #4]
 800972a:	611a      	str	r2, [r3, #16]

	( pxList->uxNumberOfItems )++;
 800972c:	687b      	ldr	r3, [r7, #4]
 800972e:	681b      	ldr	r3, [r3, #0]
 8009730:	1c5a      	adds	r2, r3, #1
 8009732:	687b      	ldr	r3, [r7, #4]
 8009734:	601a      	str	r2, [r3, #0]
}
 8009736:	bf00      	nop
 8009738:	3714      	adds	r7, #20
 800973a:	46bd      	mov	sp, r7
 800973c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009740:	4770      	bx	lr

08009742 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8009742:	b480      	push	{r7}
 8009744:	b085      	sub	sp, #20
 8009746:	af00      	add	r7, sp, #0
 8009748:	6078      	str	r0, [r7, #4]
 800974a:	6039      	str	r1, [r7, #0]
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800974c:	683b      	ldr	r3, [r7, #0]
 800974e:	681b      	ldr	r3, [r3, #0]
 8009750:	60bb      	str	r3, [r7, #8]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8009752:	68bb      	ldr	r3, [r7, #8]
 8009754:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8009758:	d103      	bne.n	8009762 <vListInsert+0x20>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800975a:	687b      	ldr	r3, [r7, #4]
 800975c:	691b      	ldr	r3, [r3, #16]
 800975e:	60fb      	str	r3, [r7, #12]
 8009760:	e00c      	b.n	800977c <vListInsert+0x3a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8009762:	687b      	ldr	r3, [r7, #4]
 8009764:	3308      	adds	r3, #8
 8009766:	60fb      	str	r3, [r7, #12]
 8009768:	e002      	b.n	8009770 <vListInsert+0x2e>
 800976a:	68fb      	ldr	r3, [r7, #12]
 800976c:	685b      	ldr	r3, [r3, #4]
 800976e:	60fb      	str	r3, [r7, #12]
 8009770:	68fb      	ldr	r3, [r7, #12]
 8009772:	685b      	ldr	r3, [r3, #4]
 8009774:	681b      	ldr	r3, [r3, #0]
 8009776:	68ba      	ldr	r2, [r7, #8]
 8009778:	429a      	cmp	r2, r3
 800977a:	d2f6      	bcs.n	800976a <vListInsert+0x28>
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800977c:	68fb      	ldr	r3, [r7, #12]
 800977e:	685a      	ldr	r2, [r3, #4]
 8009780:	683b      	ldr	r3, [r7, #0]
 8009782:	605a      	str	r2, [r3, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8009784:	683b      	ldr	r3, [r7, #0]
 8009786:	685b      	ldr	r3, [r3, #4]
 8009788:	683a      	ldr	r2, [r7, #0]
 800978a:	609a      	str	r2, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800978c:	683b      	ldr	r3, [r7, #0]
 800978e:	68fa      	ldr	r2, [r7, #12]
 8009790:	609a      	str	r2, [r3, #8]
	pxIterator->pxNext = pxNewListItem;
 8009792:	68fb      	ldr	r3, [r7, #12]
 8009794:	683a      	ldr	r2, [r7, #0]
 8009796:	605a      	str	r2, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;
 8009798:	683b      	ldr	r3, [r7, #0]
 800979a:	687a      	ldr	r2, [r7, #4]
 800979c:	611a      	str	r2, [r3, #16]

	( pxList->uxNumberOfItems )++;
 800979e:	687b      	ldr	r3, [r7, #4]
 80097a0:	681b      	ldr	r3, [r3, #0]
 80097a2:	1c5a      	adds	r2, r3, #1
 80097a4:	687b      	ldr	r3, [r7, #4]
 80097a6:	601a      	str	r2, [r3, #0]
}
 80097a8:	bf00      	nop
 80097aa:	3714      	adds	r7, #20
 80097ac:	46bd      	mov	sp, r7
 80097ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097b2:	4770      	bx	lr

080097b4 <uxListRemove>:
/*-----------------------------------------------------------*/

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
 80097b4:	b480      	push	{r7}
 80097b6:	b085      	sub	sp, #20
 80097b8:	af00      	add	r7, sp, #0
 80097ba:	6078      	str	r0, [r7, #4]
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 80097bc:	687b      	ldr	r3, [r7, #4]
 80097be:	691b      	ldr	r3, [r3, #16]
 80097c0:	60fb      	str	r3, [r7, #12]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80097c2:	687b      	ldr	r3, [r7, #4]
 80097c4:	685b      	ldr	r3, [r3, #4]
 80097c6:	687a      	ldr	r2, [r7, #4]
 80097c8:	6892      	ldr	r2, [r2, #8]
 80097ca:	609a      	str	r2, [r3, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80097cc:	687b      	ldr	r3, [r7, #4]
 80097ce:	689b      	ldr	r3, [r3, #8]
 80097d0:	687a      	ldr	r2, [r7, #4]
 80097d2:	6852      	ldr	r2, [r2, #4]
 80097d4:	605a      	str	r2, [r3, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80097d6:	68fb      	ldr	r3, [r7, #12]
 80097d8:	685b      	ldr	r3, [r3, #4]
 80097da:	687a      	ldr	r2, [r7, #4]
 80097dc:	429a      	cmp	r2, r3
 80097de:	d103      	bne.n	80097e8 <uxListRemove+0x34>
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80097e0:	687b      	ldr	r3, [r7, #4]
 80097e2:	689a      	ldr	r2, [r3, #8]
 80097e4:	68fb      	ldr	r3, [r7, #12]
 80097e6:	605a      	str	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 80097e8:	687b      	ldr	r3, [r7, #4]
 80097ea:	2200      	movs	r2, #0
 80097ec:	611a      	str	r2, [r3, #16]
	( pxList->uxNumberOfItems )--;
 80097ee:	68fb      	ldr	r3, [r7, #12]
 80097f0:	681b      	ldr	r3, [r3, #0]
 80097f2:	1e5a      	subs	r2, r3, #1
 80097f4:	68fb      	ldr	r3, [r7, #12]
 80097f6:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80097f8:	68fb      	ldr	r3, [r7, #12]
 80097fa:	681b      	ldr	r3, [r3, #0]
}
 80097fc:	4618      	mov	r0, r3
 80097fe:	3714      	adds	r7, #20
 8009800:	46bd      	mov	sp, r7
 8009802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009806:	4770      	bx	lr

08009808 <xQueueGenericReset>:
	}														\
	taskEXIT_CRITICAL()
/*-----------------------------------------------------------*/

BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
{
 8009808:	b580      	push	{r7, lr}
 800980a:	b084      	sub	sp, #16
 800980c:	af00      	add	r7, sp, #0
 800980e:	6078      	str	r0, [r7, #4]
 8009810:	6039      	str	r1, [r7, #0]
Queue_t * const pxQueue = xQueue;
 8009812:	687b      	ldr	r3, [r7, #4]
 8009814:	60fb      	str	r3, [r7, #12]

	configASSERT( pxQueue );
 8009816:	68fb      	ldr	r3, [r7, #12]
 8009818:	2b00      	cmp	r3, #0
 800981a:	d10a      	bne.n	8009832 <xQueueGenericReset+0x2a>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800981c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009820:	f383 8811 	msr	BASEPRI, r3
 8009824:	f3bf 8f6f 	isb	sy
 8009828:	f3bf 8f4f 	dsb	sy
 800982c:	60bb      	str	r3, [r7, #8]
		"	msr basepri, %0											\n" \
		"	isb														\n" \
		"	dsb														\n" \
		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
	);
}
 800982e:	bf00      	nop
 8009830:	e7fe      	b.n	8009830 <xQueueGenericReset+0x28>

	taskENTER_CRITICAL();
 8009832:	f002 f877 	bl	800b924 <vPortEnterCritical>
	{
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009836:	68fb      	ldr	r3, [r7, #12]
 8009838:	681a      	ldr	r2, [r3, #0]
 800983a:	68fb      	ldr	r3, [r7, #12]
 800983c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800983e:	68f9      	ldr	r1, [r7, #12]
 8009840:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8009842:	fb01 f303 	mul.w	r3, r1, r3
 8009846:	441a      	add	r2, r3
 8009848:	68fb      	ldr	r3, [r7, #12]
 800984a:	609a      	str	r2, [r3, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800984c:	68fb      	ldr	r3, [r7, #12]
 800984e:	2200      	movs	r2, #0
 8009850:	639a      	str	r2, [r3, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8009852:	68fb      	ldr	r3, [r7, #12]
 8009854:	681a      	ldr	r2, [r3, #0]
 8009856:	68fb      	ldr	r3, [r7, #12]
 8009858:	605a      	str	r2, [r3, #4]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800985a:	68fb      	ldr	r3, [r7, #12]
 800985c:	681a      	ldr	r2, [r3, #0]
 800985e:	68fb      	ldr	r3, [r7, #12]
 8009860:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009862:	3b01      	subs	r3, #1
 8009864:	68f9      	ldr	r1, [r7, #12]
 8009866:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8009868:	fb01 f303 	mul.w	r3, r1, r3
 800986c:	441a      	add	r2, r3
 800986e:	68fb      	ldr	r3, [r7, #12]
 8009870:	60da      	str	r2, [r3, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8009872:	68fb      	ldr	r3, [r7, #12]
 8009874:	22ff      	movs	r2, #255	; 0xff
 8009876:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800987a:	68fb      	ldr	r3, [r7, #12]
 800987c:	22ff      	movs	r2, #255	; 0xff
 800987e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

		if( xNewQueue == pdFALSE )
 8009882:	683b      	ldr	r3, [r7, #0]
 8009884:	2b00      	cmp	r3, #0
 8009886:	d114      	bne.n	80098b2 <xQueueGenericReset+0xaa>
			/* If there are tasks blocked waiting to read from the queue, then
			the tasks will remain blocked as after this function exits the queue
			will still be empty.  If there are tasks blocked waiting to write to
			the queue, then one should be unblocked as after this function exits
			it will be possible to write to it. */
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009888:	68fb      	ldr	r3, [r7, #12]
 800988a:	691b      	ldr	r3, [r3, #16]
 800988c:	2b00      	cmp	r3, #0
 800988e:	d01a      	beq.n	80098c6 <xQueueGenericReset+0xbe>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009890:	68fb      	ldr	r3, [r7, #12]
 8009892:	3310      	adds	r3, #16
 8009894:	4618      	mov	r0, r3
 8009896:	f001 f929 	bl	800aaec <xTaskRemoveFromEventList>
 800989a:	4603      	mov	r3, r0
 800989c:	2b00      	cmp	r3, #0
 800989e:	d012      	beq.n	80098c6 <xQueueGenericReset+0xbe>
				{
					queueYIELD_IF_USING_PREEMPTION();
 80098a0:	4b0c      	ldr	r3, [pc, #48]	; (80098d4 <xQueueGenericReset+0xcc>)
 80098a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80098a6:	601a      	str	r2, [r3, #0]
 80098a8:	f3bf 8f4f 	dsb	sy
 80098ac:	f3bf 8f6f 	isb	sy
 80098b0:	e009      	b.n	80098c6 <xQueueGenericReset+0xbe>
			}
		}
		else
		{
			/* Ensure the event queues start in the correct state. */
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80098b2:	68fb      	ldr	r3, [r7, #12]
 80098b4:	3310      	adds	r3, #16
 80098b6:	4618      	mov	r0, r3
 80098b8:	f7ff fef2 	bl	80096a0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80098bc:	68fb      	ldr	r3, [r7, #12]
 80098be:	3324      	adds	r3, #36	; 0x24
 80098c0:	4618      	mov	r0, r3
 80098c2:	f7ff feed 	bl	80096a0 <vListInitialise>
		}
	}
	taskEXIT_CRITICAL();
 80098c6:	f002 f85d 	bl	800b984 <vPortExitCritical>

	/* A value is returned for calling semantic consistency with previous
	versions. */
	return pdPASS;
 80098ca:	2301      	movs	r3, #1
}
 80098cc:	4618      	mov	r0, r3
 80098ce:	3710      	adds	r7, #16
 80098d0:	46bd      	mov	sp, r7
 80098d2:	bd80      	pop	{r7, pc}
 80098d4:	e000ed04 	.word	0xe000ed04

080098d8 <xQueueGenericCreateStatic>:
/*-----------------------------------------------------------*/

#if( configSUPPORT_STATIC_ALLOCATION == 1 )

	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType )
	{
 80098d8:	b580      	push	{r7, lr}
 80098da:	b08e      	sub	sp, #56	; 0x38
 80098dc:	af02      	add	r7, sp, #8
 80098de:	60f8      	str	r0, [r7, #12]
 80098e0:	60b9      	str	r1, [r7, #8]
 80098e2:	607a      	str	r2, [r7, #4]
 80098e4:	603b      	str	r3, [r7, #0]
	Queue_t *pxNewQueue;

		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80098e6:	68fb      	ldr	r3, [r7, #12]
 80098e8:	2b00      	cmp	r3, #0
 80098ea:	d10a      	bne.n	8009902 <xQueueGenericCreateStatic+0x2a>
	__asm volatile
 80098ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098f0:	f383 8811 	msr	BASEPRI, r3
 80098f4:	f3bf 8f6f 	isb	sy
 80098f8:	f3bf 8f4f 	dsb	sy
 80098fc:	62bb      	str	r3, [r7, #40]	; 0x28
}
 80098fe:	bf00      	nop
 8009900:	e7fe      	b.n	8009900 <xQueueGenericCreateStatic+0x28>

		/* The StaticQueue_t structure and the queue storage area must be
		supplied. */
		configASSERT( pxStaticQueue != NULL );
 8009902:	683b      	ldr	r3, [r7, #0]
 8009904:	2b00      	cmp	r3, #0
 8009906:	d10a      	bne.n	800991e <xQueueGenericCreateStatic+0x46>
	__asm volatile
 8009908:	f04f 0350 	mov.w	r3, #80	; 0x50
 800990c:	f383 8811 	msr	BASEPRI, r3
 8009910:	f3bf 8f6f 	isb	sy
 8009914:	f3bf 8f4f 	dsb	sy
 8009918:	627b      	str	r3, [r7, #36]	; 0x24
}
 800991a:	bf00      	nop
 800991c:	e7fe      	b.n	800991c <xQueueGenericCreateStatic+0x44>

		/* A queue storage area should be provided if the item size is not 0, and
		should not be provided if the item size is 0. */
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800991e:	687b      	ldr	r3, [r7, #4]
 8009920:	2b00      	cmp	r3, #0
 8009922:	d002      	beq.n	800992a <xQueueGenericCreateStatic+0x52>
 8009924:	68bb      	ldr	r3, [r7, #8]
 8009926:	2b00      	cmp	r3, #0
 8009928:	d001      	beq.n	800992e <xQueueGenericCreateStatic+0x56>
 800992a:	2301      	movs	r3, #1
 800992c:	e000      	b.n	8009930 <xQueueGenericCreateStatic+0x58>
 800992e:	2300      	movs	r3, #0
 8009930:	2b00      	cmp	r3, #0
 8009932:	d10a      	bne.n	800994a <xQueueGenericCreateStatic+0x72>
	__asm volatile
 8009934:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009938:	f383 8811 	msr	BASEPRI, r3
 800993c:	f3bf 8f6f 	isb	sy
 8009940:	f3bf 8f4f 	dsb	sy
 8009944:	623b      	str	r3, [r7, #32]
}
 8009946:	bf00      	nop
 8009948:	e7fe      	b.n	8009948 <xQueueGenericCreateStatic+0x70>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800994a:	687b      	ldr	r3, [r7, #4]
 800994c:	2b00      	cmp	r3, #0
 800994e:	d102      	bne.n	8009956 <xQueueGenericCreateStatic+0x7e>
 8009950:	68bb      	ldr	r3, [r7, #8]
 8009952:	2b00      	cmp	r3, #0
 8009954:	d101      	bne.n	800995a <xQueueGenericCreateStatic+0x82>
 8009956:	2301      	movs	r3, #1
 8009958:	e000      	b.n	800995c <xQueueGenericCreateStatic+0x84>
 800995a:	2300      	movs	r3, #0
 800995c:	2b00      	cmp	r3, #0
 800995e:	d10a      	bne.n	8009976 <xQueueGenericCreateStatic+0x9e>
	__asm volatile
 8009960:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009964:	f383 8811 	msr	BASEPRI, r3
 8009968:	f3bf 8f6f 	isb	sy
 800996c:	f3bf 8f4f 	dsb	sy
 8009970:	61fb      	str	r3, [r7, #28]
}
 8009972:	bf00      	nop
 8009974:	e7fe      	b.n	8009974 <xQueueGenericCreateStatic+0x9c>
		#if( configASSERT_DEFINED == 1 )
		{
			/* Sanity check that the size of the structure used to declare a
			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
			the real queue and semaphore structures. */
			volatile size_t xSize = sizeof( StaticQueue_t );
 8009976:	2350      	movs	r3, #80	; 0x50
 8009978:	617b      	str	r3, [r7, #20]
			configASSERT( xSize == sizeof( Queue_t ) );
 800997a:	697b      	ldr	r3, [r7, #20]
 800997c:	2b50      	cmp	r3, #80	; 0x50
 800997e:	d00a      	beq.n	8009996 <xQueueGenericCreateStatic+0xbe>
	__asm volatile
 8009980:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009984:	f383 8811 	msr	BASEPRI, r3
 8009988:	f3bf 8f6f 	isb	sy
 800998c:	f3bf 8f4f 	dsb	sy
 8009990:	61bb      	str	r3, [r7, #24]
}
 8009992:	bf00      	nop
 8009994:	e7fe      	b.n	8009994 <xQueueGenericCreateStatic+0xbc>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8009996:	697b      	ldr	r3, [r7, #20]
		#endif /* configASSERT_DEFINED */

		/* The address of a statically allocated queue was passed in, use it.
		The address of a statically allocated storage area was also passed in
		but is already set. */
		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structures are designed to have the same alignment, and the size is checked by an assert. */
 8009998:	683b      	ldr	r3, [r7, #0]
 800999a:	62fb      	str	r3, [r7, #44]	; 0x2c

		if( pxNewQueue != NULL )
 800999c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800999e:	2b00      	cmp	r3, #0
 80099a0:	d00d      	beq.n	80099be <xQueueGenericCreateStatic+0xe6>
			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
			{
				/* Queues can be allocated wither statically or dynamically, so
				note this queue was allocated statically in case the queue is
				later deleted. */
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80099a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80099a4:	2201      	movs	r2, #1
 80099a6:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
			}
			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */

			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 80099aa:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 80099ae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80099b0:	9300      	str	r3, [sp, #0]
 80099b2:	4613      	mov	r3, r2
 80099b4:	687a      	ldr	r2, [r7, #4]
 80099b6:	68b9      	ldr	r1, [r7, #8]
 80099b8:	68f8      	ldr	r0, [r7, #12]
 80099ba:	f000 f805 	bl	80099c8 <prvInitialiseNewQueue>
		{
			traceQUEUE_CREATE_FAILED( ucQueueType );
			mtCOVERAGE_TEST_MARKER();
		}

		return pxNewQueue;
 80099be:	6afb      	ldr	r3, [r7, #44]	; 0x2c
	}
 80099c0:	4618      	mov	r0, r3
 80099c2:	3730      	adds	r7, #48	; 0x30
 80099c4:	46bd      	mov	sp, r7
 80099c6:	bd80      	pop	{r7, pc}

080099c8 <prvInitialiseNewQueue>:

#endif /* configSUPPORT_STATIC_ALLOCATION */
/*-----------------------------------------------------------*/

static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, const uint8_t ucQueueType, Queue_t *pxNewQueue )
{
 80099c8:	b580      	push	{r7, lr}
 80099ca:	b084      	sub	sp, #16
 80099cc:	af00      	add	r7, sp, #0
 80099ce:	60f8      	str	r0, [r7, #12]
 80099d0:	60b9      	str	r1, [r7, #8]
 80099d2:	607a      	str	r2, [r7, #4]
 80099d4:	70fb      	strb	r3, [r7, #3]
	/* Remove compiler warnings about unused parameters should
	configUSE_TRACE_FACILITY not be set to 1. */
	( void ) ucQueueType;

	if( uxItemSize == ( UBaseType_t ) 0 )
 80099d6:	68bb      	ldr	r3, [r7, #8]
 80099d8:	2b00      	cmp	r3, #0
 80099da:	d103      	bne.n	80099e4 <prvInitialiseNewQueue+0x1c>
	{
		/* No RAM was allocated for the queue storage area, but PC head cannot
		be set to NULL because NULL is used as a key to say the queue is used as
		a mutex.  Therefore just set pcHead to point to the queue as a benign
		value that is known to be within the memory map. */
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80099dc:	69bb      	ldr	r3, [r7, #24]
 80099de:	69ba      	ldr	r2, [r7, #24]
 80099e0:	601a      	str	r2, [r3, #0]
 80099e2:	e002      	b.n	80099ea <prvInitialiseNewQueue+0x22>
	}
	else
	{
		/* Set the head to the start of the queue storage area. */
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 80099e4:	69bb      	ldr	r3, [r7, #24]
 80099e6:	687a      	ldr	r2, [r7, #4]
 80099e8:	601a      	str	r2, [r3, #0]
	}

	/* Initialise the queue members as described where the queue type is
	defined. */
	pxNewQueue->uxLength = uxQueueLength;
 80099ea:	69bb      	ldr	r3, [r7, #24]
 80099ec:	68fa      	ldr	r2, [r7, #12]
 80099ee:	63da      	str	r2, [r3, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
 80099f0:	69bb      	ldr	r3, [r7, #24]
 80099f2:	68ba      	ldr	r2, [r7, #8]
 80099f4:	641a      	str	r2, [r3, #64]	; 0x40
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80099f6:	2101      	movs	r1, #1
 80099f8:	69b8      	ldr	r0, [r7, #24]
 80099fa:	f7ff ff05 	bl	8009808 <xQueueGenericReset>

	#if ( configUSE_TRACE_FACILITY == 1 )
	{
		pxNewQueue->ucQueueType = ucQueueType;
 80099fe:	69bb      	ldr	r3, [r7, #24]
 8009a00:	78fa      	ldrb	r2, [r7, #3]
 8009a02:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
		pxNewQueue->pxQueueSetContainer = NULL;
	}
	#endif /* configUSE_QUEUE_SETS */

	traceQUEUE_CREATE( pxNewQueue );
}
 8009a06:	bf00      	nop
 8009a08:	3710      	adds	r7, #16
 8009a0a:	46bd      	mov	sp, r7
 8009a0c:	bd80      	pop	{r7, pc}
	...

08009a10 <xQueueGenericSend>:

#endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) */
/*-----------------------------------------------------------*/

BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition )
{
 8009a10:	b580      	push	{r7, lr}
 8009a12:	b08e      	sub	sp, #56	; 0x38
 8009a14:	af00      	add	r7, sp, #0
 8009a16:	60f8      	str	r0, [r7, #12]
 8009a18:	60b9      	str	r1, [r7, #8]
 8009a1a:	607a      	str	r2, [r7, #4]
 8009a1c:	603b      	str	r3, [r7, #0]
BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 8009a1e:	2300      	movs	r3, #0
 8009a20:	637b      	str	r3, [r7, #52]	; 0x34
TimeOut_t xTimeOut;
Queue_t * const pxQueue = xQueue;
 8009a22:	68fb      	ldr	r3, [r7, #12]
 8009a24:	633b      	str	r3, [r7, #48]	; 0x30

	configASSERT( pxQueue );
 8009a26:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009a28:	2b00      	cmp	r3, #0
 8009a2a:	d10a      	bne.n	8009a42 <xQueueGenericSend+0x32>
	__asm volatile
 8009a2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a30:	f383 8811 	msr	BASEPRI, r3
 8009a34:	f3bf 8f6f 	isb	sy
 8009a38:	f3bf 8f4f 	dsb	sy
 8009a3c:	62bb      	str	r3, [r7, #40]	; 0x28
}
 8009a3e:	bf00      	nop
 8009a40:	e7fe      	b.n	8009a40 <xQueueGenericSend+0x30>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009a42:	68bb      	ldr	r3, [r7, #8]
 8009a44:	2b00      	cmp	r3, #0
 8009a46:	d103      	bne.n	8009a50 <xQueueGenericSend+0x40>
 8009a48:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009a4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009a4c:	2b00      	cmp	r3, #0
 8009a4e:	d101      	bne.n	8009a54 <xQueueGenericSend+0x44>
 8009a50:	2301      	movs	r3, #1
 8009a52:	e000      	b.n	8009a56 <xQueueGenericSend+0x46>
 8009a54:	2300      	movs	r3, #0
 8009a56:	2b00      	cmp	r3, #0
 8009a58:	d10a      	bne.n	8009a70 <xQueueGenericSend+0x60>
	__asm volatile
 8009a5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a5e:	f383 8811 	msr	BASEPRI, r3
 8009a62:	f3bf 8f6f 	isb	sy
 8009a66:	f3bf 8f4f 	dsb	sy
 8009a6a:	627b      	str	r3, [r7, #36]	; 0x24
}
 8009a6c:	bf00      	nop
 8009a6e:	e7fe      	b.n	8009a6e <xQueueGenericSend+0x5e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8009a70:	683b      	ldr	r3, [r7, #0]
 8009a72:	2b02      	cmp	r3, #2
 8009a74:	d103      	bne.n	8009a7e <xQueueGenericSend+0x6e>
 8009a76:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009a78:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009a7a:	2b01      	cmp	r3, #1
 8009a7c:	d101      	bne.n	8009a82 <xQueueGenericSend+0x72>
 8009a7e:	2301      	movs	r3, #1
 8009a80:	e000      	b.n	8009a84 <xQueueGenericSend+0x74>
 8009a82:	2300      	movs	r3, #0
 8009a84:	2b00      	cmp	r3, #0
 8009a86:	d10a      	bne.n	8009a9e <xQueueGenericSend+0x8e>
	__asm volatile
 8009a88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a8c:	f383 8811 	msr	BASEPRI, r3
 8009a90:	f3bf 8f6f 	isb	sy
 8009a94:	f3bf 8f4f 	dsb	sy
 8009a98:	623b      	str	r3, [r7, #32]
}
 8009a9a:	bf00      	nop
 8009a9c:	e7fe      	b.n	8009a9c <xQueueGenericSend+0x8c>
	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
	{
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009a9e:	f001 f9e7 	bl	800ae70 <xTaskGetSchedulerState>
 8009aa2:	4603      	mov	r3, r0
 8009aa4:	2b00      	cmp	r3, #0
 8009aa6:	d102      	bne.n	8009aae <xQueueGenericSend+0x9e>
 8009aa8:	687b      	ldr	r3, [r7, #4]
 8009aaa:	2b00      	cmp	r3, #0
 8009aac:	d101      	bne.n	8009ab2 <xQueueGenericSend+0xa2>
 8009aae:	2301      	movs	r3, #1
 8009ab0:	e000      	b.n	8009ab4 <xQueueGenericSend+0xa4>
 8009ab2:	2300      	movs	r3, #0
 8009ab4:	2b00      	cmp	r3, #0
 8009ab6:	d10a      	bne.n	8009ace <xQueueGenericSend+0xbe>
	__asm volatile
 8009ab8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009abc:	f383 8811 	msr	BASEPRI, r3
 8009ac0:	f3bf 8f6f 	isb	sy
 8009ac4:	f3bf 8f4f 	dsb	sy
 8009ac8:	61fb      	str	r3, [r7, #28]
}
 8009aca:	bf00      	nop
 8009acc:	e7fe      	b.n	8009acc <xQueueGenericSend+0xbc>
	/*lint -save -e904 This function relaxes the coding standard somewhat to
	allow return statements within the function itself.  This is done in the
	interest of execution time efficiency. */
	for( ;; )
	{
		taskENTER_CRITICAL();
 8009ace:	f001 ff29 	bl	800b924 <vPortEnterCritical>
		{
			/* Is there room on the queue now?  The running task must be the
			highest priority task wanting to access the queue.  If the head item
			in the queue is to be overwritten then it does not matter if the
			queue is full. */
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009ad2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009ad4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009ad6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009ad8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009ada:	429a      	cmp	r2, r3
 8009adc:	d302      	bcc.n	8009ae4 <xQueueGenericSend+0xd4>
 8009ade:	683b      	ldr	r3, [r7, #0]
 8009ae0:	2b02      	cmp	r3, #2
 8009ae2:	d129      	bne.n	8009b38 <xQueueGenericSend+0x128>
						}
					}
				}
				#else /* configUSE_QUEUE_SETS */
				{
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009ae4:	683a      	ldr	r2, [r7, #0]
 8009ae6:	68b9      	ldr	r1, [r7, #8]
 8009ae8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8009aea:	f000 fa0b 	bl	8009f04 <prvCopyDataToQueue>
 8009aee:	62f8      	str	r0, [r7, #44]	; 0x2c

					/* If there was a task waiting for data to arrive on the
					queue then unblock it now. */
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009af0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009af2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009af4:	2b00      	cmp	r3, #0
 8009af6:	d010      	beq.n	8009b1a <xQueueGenericSend+0x10a>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009af8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009afa:	3324      	adds	r3, #36	; 0x24
 8009afc:	4618      	mov	r0, r3
 8009afe:	f000 fff5 	bl	800aaec <xTaskRemoveFromEventList>
 8009b02:	4603      	mov	r3, r0
 8009b04:	2b00      	cmp	r3, #0
 8009b06:	d013      	beq.n	8009b30 <xQueueGenericSend+0x120>
						{
							/* The unblocked task has a priority higher than
							our own so yield immediately.  Yes it is ok to do
							this from within the critical section - the kernel
							takes care of that. */
							queueYIELD_IF_USING_PREEMPTION();
 8009b08:	4b3f      	ldr	r3, [pc, #252]	; (8009c08 <xQueueGenericSend+0x1f8>)
 8009b0a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009b0e:	601a      	str	r2, [r3, #0]
 8009b10:	f3bf 8f4f 	dsb	sy
 8009b14:	f3bf 8f6f 	isb	sy
 8009b18:	e00a      	b.n	8009b30 <xQueueGenericSend+0x120>
						else
						{
							mtCOVERAGE_TEST_MARKER();
						}
					}
					else if( xYieldRequired != pdFALSE )
 8009b1a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009b1c:	2b00      	cmp	r3, #0
 8009b1e:	d007      	beq.n	8009b30 <xQueueGenericSend+0x120>
					{
						/* This path is a special case that will only get
						executed if the task was holding multiple mutexes and
						the mutexes were given back in an order that is
						different to that in which they were taken. */
						queueYIELD_IF_USING_PREEMPTION();
 8009b20:	4b39      	ldr	r3, [pc, #228]	; (8009c08 <xQueueGenericSend+0x1f8>)
 8009b22:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009b26:	601a      	str	r2, [r3, #0]
 8009b28:	f3bf 8f4f 	dsb	sy
 8009b2c:	f3bf 8f6f 	isb	sy
						mtCOVERAGE_TEST_MARKER();
					}
				}
				#endif /* configUSE_QUEUE_SETS */

				taskEXIT_CRITICAL();
 8009b30:	f001 ff28 	bl	800b984 <vPortExitCritical>
				return pdPASS;
 8009b34:	2301      	movs	r3, #1
 8009b36:	e063      	b.n	8009c00 <xQueueGenericSend+0x1f0>
			}
			else
			{
				if( xTicksToWait == ( TickType_t ) 0 )
 8009b38:	687b      	ldr	r3, [r7, #4]
 8009b3a:	2b00      	cmp	r3, #0
 8009b3c:	d103      	bne.n	8009b46 <xQueueGenericSend+0x136>
				{
					/* The queue was full and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
 8009b3e:	f001 ff21 	bl	800b984 <vPortExitCritical>

					/* Return to the original privilege level before exiting
					the function. */
					traceQUEUE_SEND_FAILED( pxQueue );
					return errQUEUE_FULL;
 8009b42:	2300      	movs	r3, #0
 8009b44:	e05c      	b.n	8009c00 <xQueueGenericSend+0x1f0>
				}
				else if( xEntryTimeSet == pdFALSE )
 8009b46:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009b48:	2b00      	cmp	r3, #0
 8009b4a:	d106      	bne.n	8009b5a <xQueueGenericSend+0x14a>
				{
					/* The queue was full and a block time was specified so
					configure the timeout structure. */
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009b4c:	f107 0314 	add.w	r3, r7, #20
 8009b50:	4618      	mov	r0, r3
 8009b52:	f001 f82f 	bl	800abb4 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 8009b56:	2301      	movs	r3, #1
 8009b58:	637b      	str	r3, [r7, #52]	; 0x34
					/* Entry time was already set. */
					mtCOVERAGE_TEST_MARKER();
				}
			}
		}
		taskEXIT_CRITICAL();
 8009b5a:	f001 ff13 	bl	800b984 <vPortExitCritical>

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
 8009b5e:	f000 fd9b 	bl	800a698 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009b62:	f001 fedf 	bl	800b924 <vPortEnterCritical>
 8009b66:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009b68:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8009b6c:	b25b      	sxtb	r3, r3
 8009b6e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8009b72:	d103      	bne.n	8009b7c <xQueueGenericSend+0x16c>
 8009b74:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009b76:	2200      	movs	r2, #0
 8009b78:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8009b7c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009b7e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8009b82:	b25b      	sxtb	r3, r3
 8009b84:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8009b88:	d103      	bne.n	8009b92 <xQueueGenericSend+0x182>
 8009b8a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009b8c:	2200      	movs	r2, #0
 8009b8e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009b92:	f001 fef7 	bl	800b984 <vPortExitCritical>

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009b96:	1d3a      	adds	r2, r7, #4
 8009b98:	f107 0314 	add.w	r3, r7, #20
 8009b9c:	4611      	mov	r1, r2
 8009b9e:	4618      	mov	r0, r3
 8009ba0:	f001 f81e 	bl	800abe0 <xTaskCheckForTimeOut>
 8009ba4:	4603      	mov	r3, r0
 8009ba6:	2b00      	cmp	r3, #0
 8009ba8:	d124      	bne.n	8009bf4 <xQueueGenericSend+0x1e4>
		{
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 8009baa:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8009bac:	f000 faa2 	bl	800a0f4 <prvIsQueueFull>
 8009bb0:	4603      	mov	r3, r0
 8009bb2:	2b00      	cmp	r3, #0
 8009bb4:	d018      	beq.n	8009be8 <xQueueGenericSend+0x1d8>
			{
				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8009bb6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009bb8:	3310      	adds	r3, #16
 8009bba:	687a      	ldr	r2, [r7, #4]
 8009bbc:	4611      	mov	r1, r2
 8009bbe:	4618      	mov	r0, r3
 8009bc0:	f000 ff44 	bl	800aa4c <vTaskPlaceOnEventList>
				/* Unlocking the queue means queue events can effect the
				event list.  It is possible that interrupts occurring now
				remove this task from the event list again - but as the
				scheduler is suspended the task will go onto the pending
				ready last instead of the actual ready list. */
				prvUnlockQueue( pxQueue );
 8009bc4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8009bc6:	f000 fa2d 	bl	800a024 <prvUnlockQueue>
				/* Resuming the scheduler will move tasks from the pending
				ready list into the ready list - so it is feasible that this
				task is already in a ready list before it yields - in which
				case the yield will not cause a context switch unless there
				is also a higher priority task in the pending ready list. */
				if( xTaskResumeAll() == pdFALSE )
 8009bca:	f000 fd73 	bl	800a6b4 <xTaskResumeAll>
 8009bce:	4603      	mov	r3, r0
 8009bd0:	2b00      	cmp	r3, #0
 8009bd2:	f47f af7c 	bne.w	8009ace <xQueueGenericSend+0xbe>
				{
					portYIELD_WITHIN_API();
 8009bd6:	4b0c      	ldr	r3, [pc, #48]	; (8009c08 <xQueueGenericSend+0x1f8>)
 8009bd8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009bdc:	601a      	str	r2, [r3, #0]
 8009bde:	f3bf 8f4f 	dsb	sy
 8009be2:	f3bf 8f6f 	isb	sy
 8009be6:	e772      	b.n	8009ace <xQueueGenericSend+0xbe>
				}
			}
			else
			{
				/* Try again. */
				prvUnlockQueue( pxQueue );
 8009be8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8009bea:	f000 fa1b 	bl	800a024 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009bee:	f000 fd61 	bl	800a6b4 <xTaskResumeAll>
 8009bf2:	e76c      	b.n	8009ace <xQueueGenericSend+0xbe>
			}
		}
		else
		{
			/* The timeout has expired. */
			prvUnlockQueue( pxQueue );
 8009bf4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8009bf6:	f000 fa15 	bl	800a024 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009bfa:	f000 fd5b 	bl	800a6b4 <xTaskResumeAll>

			traceQUEUE_SEND_FAILED( pxQueue );
			return errQUEUE_FULL;
 8009bfe:	2300      	movs	r3, #0
		}
	} /*lint -restore */
}
 8009c00:	4618      	mov	r0, r3
 8009c02:	3738      	adds	r7, #56	; 0x38
 8009c04:	46bd      	mov	sp, r7
 8009c06:	bd80      	pop	{r7, pc}
 8009c08:	e000ed04 	.word	0xe000ed04

08009c0c <xQueueGenericSendFromISR>:
/*-----------------------------------------------------------*/

BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition )
{
 8009c0c:	b580      	push	{r7, lr}
 8009c0e:	b090      	sub	sp, #64	; 0x40
 8009c10:	af00      	add	r7, sp, #0
 8009c12:	60f8      	str	r0, [r7, #12]
 8009c14:	60b9      	str	r1, [r7, #8]
 8009c16:	607a      	str	r2, [r7, #4]
 8009c18:	603b      	str	r3, [r7, #0]
BaseType_t xReturn;
UBaseType_t uxSavedInterruptStatus;
Queue_t * const pxQueue = xQueue;
 8009c1a:	68fb      	ldr	r3, [r7, #12]
 8009c1c:	63bb      	str	r3, [r7, #56]	; 0x38

	configASSERT( pxQueue );
 8009c1e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c20:	2b00      	cmp	r3, #0
 8009c22:	d10a      	bne.n	8009c3a <xQueueGenericSendFromISR+0x2e>
	__asm volatile
 8009c24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c28:	f383 8811 	msr	BASEPRI, r3
 8009c2c:	f3bf 8f6f 	isb	sy
 8009c30:	f3bf 8f4f 	dsb	sy
 8009c34:	62bb      	str	r3, [r7, #40]	; 0x28
}
 8009c36:	bf00      	nop
 8009c38:	e7fe      	b.n	8009c38 <xQueueGenericSendFromISR+0x2c>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009c3a:	68bb      	ldr	r3, [r7, #8]
 8009c3c:	2b00      	cmp	r3, #0
 8009c3e:	d103      	bne.n	8009c48 <xQueueGenericSendFromISR+0x3c>
 8009c40:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009c44:	2b00      	cmp	r3, #0
 8009c46:	d101      	bne.n	8009c4c <xQueueGenericSendFromISR+0x40>
 8009c48:	2301      	movs	r3, #1
 8009c4a:	e000      	b.n	8009c4e <xQueueGenericSendFromISR+0x42>
 8009c4c:	2300      	movs	r3, #0
 8009c4e:	2b00      	cmp	r3, #0
 8009c50:	d10a      	bne.n	8009c68 <xQueueGenericSendFromISR+0x5c>
	__asm volatile
 8009c52:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c56:	f383 8811 	msr	BASEPRI, r3
 8009c5a:	f3bf 8f6f 	isb	sy
 8009c5e:	f3bf 8f4f 	dsb	sy
 8009c62:	627b      	str	r3, [r7, #36]	; 0x24
}
 8009c64:	bf00      	nop
 8009c66:	e7fe      	b.n	8009c66 <xQueueGenericSendFromISR+0x5a>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8009c68:	683b      	ldr	r3, [r7, #0]
 8009c6a:	2b02      	cmp	r3, #2
 8009c6c:	d103      	bne.n	8009c76 <xQueueGenericSendFromISR+0x6a>
 8009c6e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009c72:	2b01      	cmp	r3, #1
 8009c74:	d101      	bne.n	8009c7a <xQueueGenericSendFromISR+0x6e>
 8009c76:	2301      	movs	r3, #1
 8009c78:	e000      	b.n	8009c7c <xQueueGenericSendFromISR+0x70>
 8009c7a:	2300      	movs	r3, #0
 8009c7c:	2b00      	cmp	r3, #0
 8009c7e:	d10a      	bne.n	8009c96 <xQueueGenericSendFromISR+0x8a>
	__asm volatile
 8009c80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c84:	f383 8811 	msr	BASEPRI, r3
 8009c88:	f3bf 8f6f 	isb	sy
 8009c8c:	f3bf 8f4f 	dsb	sy
 8009c90:	623b      	str	r3, [r7, #32]
}
 8009c92:	bf00      	nop
 8009c94:	e7fe      	b.n	8009c94 <xQueueGenericSendFromISR+0x88>
	that have been assigned a priority at or (logically) below the maximum
	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
	safe API to ensure interrupt entry is as fast and as simple as possible.
	More information (albeit Cortex-M specific) is provided on the following
	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009c96:	f001 ff27 	bl	800bae8 <vPortValidateInterruptPriority>

portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
{
uint32_t ulOriginalBASEPRI, ulNewBASEPRI;

	__asm volatile
 8009c9a:	f3ef 8211 	mrs	r2, BASEPRI
 8009c9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ca2:	f383 8811 	msr	BASEPRI, r3
 8009ca6:	f3bf 8f6f 	isb	sy
 8009caa:	f3bf 8f4f 	dsb	sy
 8009cae:	61fa      	str	r2, [r7, #28]
 8009cb0:	61bb      	str	r3, [r7, #24]
		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
	);

	/* This return will not be reached but is necessary to prevent compiler
	warnings. */
	return ulOriginalBASEPRI;
 8009cb2:	69fb      	ldr	r3, [r7, #28]
	/* Similar to xQueueGenericSend, except without blocking if there is no room
	in the queue.  Also don't directly wake a task that was blocked on a queue
	read, instead return a flag to say whether a context switch is required or
	not (i.e. has a task with a higher priority than us been woken by this
	post). */
	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8009cb4:	637b      	str	r3, [r7, #52]	; 0x34
	{
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009cb6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009cb8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009cba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009cbc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009cbe:	429a      	cmp	r2, r3
 8009cc0:	d302      	bcc.n	8009cc8 <xQueueGenericSendFromISR+0xbc>
 8009cc2:	683b      	ldr	r3, [r7, #0]
 8009cc4:	2b02      	cmp	r3, #2
 8009cc6:	d12f      	bne.n	8009d28 <xQueueGenericSendFromISR+0x11c>
		{
			const int8_t cTxLock = pxQueue->cTxLock;
 8009cc8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009cca:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8009cce:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009cd2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009cd4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009cd6:	62fb      	str	r3, [r7, #44]	; 0x2c
			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
			in a task disinheriting a priority and prvCopyDataToQueue() can be
			called here even though the disinherit function does not check if
			the scheduler is suspended before accessing the ready lists. */
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009cd8:	683a      	ldr	r2, [r7, #0]
 8009cda:	68b9      	ldr	r1, [r7, #8]
 8009cdc:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8009cde:	f000 f911 	bl	8009f04 <prvCopyDataToQueue>

			/* The event list is not altered if the queue is locked.  This will
			be done when the queue is unlocked later. */
			if( cTxLock == queueUNLOCKED )
 8009ce2:	f997 3033 	ldrsb.w	r3, [r7, #51]	; 0x33
 8009ce6:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8009cea:	d112      	bne.n	8009d12 <xQueueGenericSendFromISR+0x106>
						}
					}
				}
				#else /* configUSE_QUEUE_SETS */
				{
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009cec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009cee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009cf0:	2b00      	cmp	r3, #0
 8009cf2:	d016      	beq.n	8009d22 <xQueueGenericSendFromISR+0x116>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009cf4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009cf6:	3324      	adds	r3, #36	; 0x24
 8009cf8:	4618      	mov	r0, r3
 8009cfa:	f000 fef7 	bl	800aaec <xTaskRemoveFromEventList>
 8009cfe:	4603      	mov	r3, r0
 8009d00:	2b00      	cmp	r3, #0
 8009d02:	d00e      	beq.n	8009d22 <xQueueGenericSendFromISR+0x116>
						{
							/* The task waiting has a higher priority so record that a
							context	switch is required. */
							if( pxHigherPriorityTaskWoken != NULL )
 8009d04:	687b      	ldr	r3, [r7, #4]
 8009d06:	2b00      	cmp	r3, #0
 8009d08:	d00b      	beq.n	8009d22 <xQueueGenericSendFromISR+0x116>
							{
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009d0a:	687b      	ldr	r3, [r7, #4]
 8009d0c:	2201      	movs	r2, #1
 8009d0e:	601a      	str	r2, [r3, #0]
 8009d10:	e007      	b.n	8009d22 <xQueueGenericSendFromISR+0x116>
			}
			else
			{
				/* Increment the lock count so the task that unlocks the queue
				knows that data was posted while it was locked. */
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009d12:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8009d16:	3301      	adds	r3, #1
 8009d18:	b2db      	uxtb	r3, r3
 8009d1a:	b25a      	sxtb	r2, r3
 8009d1c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d1e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
			}

			xReturn = pdPASS;
 8009d22:	2301      	movs	r3, #1
 8009d24:	63fb      	str	r3, [r7, #60]	; 0x3c
		{
 8009d26:	e001      	b.n	8009d2c <xQueueGenericSendFromISR+0x120>
		}
		else
		{
			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
			xReturn = errQUEUE_FULL;
 8009d28:	2300      	movs	r3, #0
 8009d2a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009d2c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009d2e:	617b      	str	r3, [r7, #20]
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8009d30:	697b      	ldr	r3, [r7, #20]
 8009d32:	f383 8811 	msr	BASEPRI, r3
	(
		"	msr basepri, %0	" :: "r" ( ulNewMaskValue ) : "memory"
	);
}
 8009d36:	bf00      	nop
		}
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );

	return xReturn;
 8009d38:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
}
 8009d3a:	4618      	mov	r0, r3
 8009d3c:	3740      	adds	r7, #64	; 0x40
 8009d3e:	46bd      	mov	sp, r7
 8009d40:	bd80      	pop	{r7, pc}
	...

08009d44 <xQueueReceive>:
	return xReturn;
}
/*-----------------------------------------------------------*/

BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
{
 8009d44:	b580      	push	{r7, lr}
 8009d46:	b08c      	sub	sp, #48	; 0x30
 8009d48:	af00      	add	r7, sp, #0
 8009d4a:	60f8      	str	r0, [r7, #12]
 8009d4c:	60b9      	str	r1, [r7, #8]
 8009d4e:	607a      	str	r2, [r7, #4]
BaseType_t xEntryTimeSet = pdFALSE;
 8009d50:	2300      	movs	r3, #0
 8009d52:	62fb      	str	r3, [r7, #44]	; 0x2c
TimeOut_t xTimeOut;
Queue_t * const pxQueue = xQueue;
 8009d54:	68fb      	ldr	r3, [r7, #12]
 8009d56:	62bb      	str	r3, [r7, #40]	; 0x28

	/* Check the pointer is not NULL. */
	configASSERT( ( pxQueue ) );
 8009d58:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009d5a:	2b00      	cmp	r3, #0
 8009d5c:	d10a      	bne.n	8009d74 <xQueueReceive+0x30>
	__asm volatile
 8009d5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d62:	f383 8811 	msr	BASEPRI, r3
 8009d66:	f3bf 8f6f 	isb	sy
 8009d6a:	f3bf 8f4f 	dsb	sy
 8009d6e:	623b      	str	r3, [r7, #32]
}
 8009d70:	bf00      	nop
 8009d72:	e7fe      	b.n	8009d72 <xQueueReceive+0x2e>

	/* The buffer into which data is received can only be NULL if the data size
	is zero (so no data is copied into the buffer. */
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009d74:	68bb      	ldr	r3, [r7, #8]
 8009d76:	2b00      	cmp	r3, #0
 8009d78:	d103      	bne.n	8009d82 <xQueueReceive+0x3e>
 8009d7a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009d7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009d7e:	2b00      	cmp	r3, #0
 8009d80:	d101      	bne.n	8009d86 <xQueueReceive+0x42>
 8009d82:	2301      	movs	r3, #1
 8009d84:	e000      	b.n	8009d88 <xQueueReceive+0x44>
 8009d86:	2300      	movs	r3, #0
 8009d88:	2b00      	cmp	r3, #0
 8009d8a:	d10a      	bne.n	8009da2 <xQueueReceive+0x5e>
	__asm volatile
 8009d8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d90:	f383 8811 	msr	BASEPRI, r3
 8009d94:	f3bf 8f6f 	isb	sy
 8009d98:	f3bf 8f4f 	dsb	sy
 8009d9c:	61fb      	str	r3, [r7, #28]
}
 8009d9e:	bf00      	nop
 8009da0:	e7fe      	b.n	8009da0 <xQueueReceive+0x5c>

	/* Cannot block if the scheduler is suspended. */
	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
	{
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009da2:	f001 f865 	bl	800ae70 <xTaskGetSchedulerState>
 8009da6:	4603      	mov	r3, r0
 8009da8:	2b00      	cmp	r3, #0
 8009daa:	d102      	bne.n	8009db2 <xQueueReceive+0x6e>
 8009dac:	687b      	ldr	r3, [r7, #4]
 8009dae:	2b00      	cmp	r3, #0
 8009db0:	d101      	bne.n	8009db6 <xQueueReceive+0x72>
 8009db2:	2301      	movs	r3, #1
 8009db4:	e000      	b.n	8009db8 <xQueueReceive+0x74>
 8009db6:	2300      	movs	r3, #0
 8009db8:	2b00      	cmp	r3, #0
 8009dba:	d10a      	bne.n	8009dd2 <xQueueReceive+0x8e>
	__asm volatile
 8009dbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dc0:	f383 8811 	msr	BASEPRI, r3
 8009dc4:	f3bf 8f6f 	isb	sy
 8009dc8:	f3bf 8f4f 	dsb	sy
 8009dcc:	61bb      	str	r3, [r7, #24]
}
 8009dce:	bf00      	nop
 8009dd0:	e7fe      	b.n	8009dd0 <xQueueReceive+0x8c>
	/*lint -save -e904  This function relaxes the coding standard somewhat to
	allow return statements within the function itself.  This is done in the
	interest of execution time efficiency. */
	for( ;; )
	{
		taskENTER_CRITICAL();
 8009dd2:	f001 fda7 	bl	800b924 <vPortEnterCritical>
		{
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009dd6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009dd8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009dda:	627b      	str	r3, [r7, #36]	; 0x24

			/* Is there data in the queue now?  To be running the calling task
			must be the highest priority task wanting to access the queue. */
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009ddc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009dde:	2b00      	cmp	r3, #0
 8009de0:	d01f      	beq.n	8009e22 <xQueueReceive+0xde>
			{
				/* Data available, remove one item. */
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009de2:	68b9      	ldr	r1, [r7, #8]
 8009de4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8009de6:	f000 f8f7 	bl	8009fd8 <prvCopyDataFromQueue>
				traceQUEUE_RECEIVE( pxQueue );
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009dea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009dec:	1e5a      	subs	r2, r3, #1
 8009dee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009df0:	639a      	str	r2, [r3, #56]	; 0x38

				/* There is now space in the queue, were any tasks waiting to
				post to the queue?  If so, unblock the highest priority waiting
				task. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009df2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009df4:	691b      	ldr	r3, [r3, #16]
 8009df6:	2b00      	cmp	r3, #0
 8009df8:	d00f      	beq.n	8009e1a <xQueueReceive+0xd6>
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009dfa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009dfc:	3310      	adds	r3, #16
 8009dfe:	4618      	mov	r0, r3
 8009e00:	f000 fe74 	bl	800aaec <xTaskRemoveFromEventList>
 8009e04:	4603      	mov	r3, r0
 8009e06:	2b00      	cmp	r3, #0
 8009e08:	d007      	beq.n	8009e1a <xQueueReceive+0xd6>
					{
						queueYIELD_IF_USING_PREEMPTION();
 8009e0a:	4b3d      	ldr	r3, [pc, #244]	; (8009f00 <xQueueReceive+0x1bc>)
 8009e0c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009e10:	601a      	str	r2, [r3, #0]
 8009e12:	f3bf 8f4f 	dsb	sy
 8009e16:	f3bf 8f6f 	isb	sy
				else
				{
					mtCOVERAGE_TEST_MARKER();
				}

				taskEXIT_CRITICAL();
 8009e1a:	f001 fdb3 	bl	800b984 <vPortExitCritical>
				return pdPASS;
 8009e1e:	2301      	movs	r3, #1
 8009e20:	e069      	b.n	8009ef6 <xQueueReceive+0x1b2>
			}
			else
			{
				if( xTicksToWait == ( TickType_t ) 0 )
 8009e22:	687b      	ldr	r3, [r7, #4]
 8009e24:	2b00      	cmp	r3, #0
 8009e26:	d103      	bne.n	8009e30 <xQueueReceive+0xec>
				{
					/* The queue was empty and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
 8009e28:	f001 fdac 	bl	800b984 <vPortExitCritical>
					traceQUEUE_RECEIVE_FAILED( pxQueue );
					return errQUEUE_EMPTY;
 8009e2c:	2300      	movs	r3, #0
 8009e2e:	e062      	b.n	8009ef6 <xQueueReceive+0x1b2>
				}
				else if( xEntryTimeSet == pdFALSE )
 8009e30:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009e32:	2b00      	cmp	r3, #0
 8009e34:	d106      	bne.n	8009e44 <xQueueReceive+0x100>
				{
					/* The queue was empty and a block time was specified so
					configure the timeout structure. */
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009e36:	f107 0310 	add.w	r3, r7, #16
 8009e3a:	4618      	mov	r0, r3
 8009e3c:	f000 feba 	bl	800abb4 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 8009e40:	2301      	movs	r3, #1
 8009e42:	62fb      	str	r3, [r7, #44]	; 0x2c
					/* Entry time was already set. */
					mtCOVERAGE_TEST_MARKER();
				}
			}
		}
		taskEXIT_CRITICAL();
 8009e44:	f001 fd9e 	bl	800b984 <vPortExitCritical>

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
 8009e48:	f000 fc26 	bl	800a698 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009e4c:	f001 fd6a 	bl	800b924 <vPortEnterCritical>
 8009e50:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009e52:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8009e56:	b25b      	sxtb	r3, r3
 8009e58:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8009e5c:	d103      	bne.n	8009e66 <xQueueReceive+0x122>
 8009e5e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009e60:	2200      	movs	r2, #0
 8009e62:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8009e66:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009e68:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8009e6c:	b25b      	sxtb	r3, r3
 8009e6e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8009e72:	d103      	bne.n	8009e7c <xQueueReceive+0x138>
 8009e74:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009e76:	2200      	movs	r2, #0
 8009e78:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009e7c:	f001 fd82 	bl	800b984 <vPortExitCritical>

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009e80:	1d3a      	adds	r2, r7, #4
 8009e82:	f107 0310 	add.w	r3, r7, #16
 8009e86:	4611      	mov	r1, r2
 8009e88:	4618      	mov	r0, r3
 8009e8a:	f000 fea9 	bl	800abe0 <xTaskCheckForTimeOut>
 8009e8e:	4603      	mov	r3, r0
 8009e90:	2b00      	cmp	r3, #0
 8009e92:	d123      	bne.n	8009edc <xQueueReceive+0x198>
		{
			/* The timeout has not expired.  If the queue is still empty place
			the task on the list of tasks waiting to receive from the queue. */
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009e94:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8009e96:	f000 f917 	bl	800a0c8 <prvIsQueueEmpty>
 8009e9a:	4603      	mov	r3, r0
 8009e9c:	2b00      	cmp	r3, #0
 8009e9e:	d017      	beq.n	8009ed0 <xQueueReceive+0x18c>
			{
				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009ea0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009ea2:	3324      	adds	r3, #36	; 0x24
 8009ea4:	687a      	ldr	r2, [r7, #4]
 8009ea6:	4611      	mov	r1, r2
 8009ea8:	4618      	mov	r0, r3
 8009eaa:	f000 fdcf 	bl	800aa4c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009eae:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8009eb0:	f000 f8b8 	bl	800a024 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009eb4:	f000 fbfe 	bl	800a6b4 <xTaskResumeAll>
 8009eb8:	4603      	mov	r3, r0
 8009eba:	2b00      	cmp	r3, #0
 8009ebc:	d189      	bne.n	8009dd2 <xQueueReceive+0x8e>
				{
					portYIELD_WITHIN_API();
 8009ebe:	4b10      	ldr	r3, [pc, #64]	; (8009f00 <xQueueReceive+0x1bc>)
 8009ec0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009ec4:	601a      	str	r2, [r3, #0]
 8009ec6:	f3bf 8f4f 	dsb	sy
 8009eca:	f3bf 8f6f 	isb	sy
 8009ece:	e780      	b.n	8009dd2 <xQueueReceive+0x8e>
			}
			else
			{
				/* The queue contains data again.  Loop back to try and read the
				data. */
				prvUnlockQueue( pxQueue );
 8009ed0:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8009ed2:	f000 f8a7 	bl	800a024 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009ed6:	f000 fbed 	bl	800a6b4 <xTaskResumeAll>
 8009eda:	e77a      	b.n	8009dd2 <xQueueReceive+0x8e>
		}
		else
		{
			/* Timed out.  If there is no data in the queue exit, otherwise loop
			back and attempt to read the data. */
			prvUnlockQueue( pxQueue );
 8009edc:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8009ede:	f000 f8a1 	bl	800a024 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009ee2:	f000 fbe7 	bl	800a6b4 <xTaskResumeAll>

			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009ee6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8009ee8:	f000 f8ee 	bl	800a0c8 <prvIsQueueEmpty>
 8009eec:	4603      	mov	r3, r0
 8009eee:	2b00      	cmp	r3, #0
 8009ef0:	f43f af6f 	beq.w	8009dd2 <xQueueReceive+0x8e>
			{
				traceQUEUE_RECEIVE_FAILED( pxQueue );
				return errQUEUE_EMPTY;
 8009ef4:	2300      	movs	r3, #0
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	} /*lint -restore */
}
 8009ef6:	4618      	mov	r0, r3
 8009ef8:	3730      	adds	r7, #48	; 0x30
 8009efa:	46bd      	mov	sp, r7
 8009efc:	bd80      	pop	{r7, pc}
 8009efe:	bf00      	nop
 8009f00:	e000ed04 	.word	0xe000ed04

08009f04 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 8009f04:	b580      	push	{r7, lr}
 8009f06:	b086      	sub	sp, #24
 8009f08:	af00      	add	r7, sp, #0
 8009f0a:	60f8      	str	r0, [r7, #12]
 8009f0c:	60b9      	str	r1, [r7, #8]
 8009f0e:	607a      	str	r2, [r7, #4]
BaseType_t xReturn = pdFALSE;
 8009f10:	2300      	movs	r3, #0
 8009f12:	617b      	str	r3, [r7, #20]
UBaseType_t uxMessagesWaiting;

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009f14:	68fb      	ldr	r3, [r7, #12]
 8009f16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f18:	613b      	str	r3, [r7, #16]

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009f1a:	68fb      	ldr	r3, [r7, #12]
 8009f1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009f1e:	2b00      	cmp	r3, #0
 8009f20:	d10d      	bne.n	8009f3e <prvCopyDataToQueue+0x3a>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009f22:	68fb      	ldr	r3, [r7, #12]
 8009f24:	681b      	ldr	r3, [r3, #0]
 8009f26:	2b00      	cmp	r3, #0
 8009f28:	d14d      	bne.n	8009fc6 <prvCopyDataToQueue+0xc2>
			{
				/* The mutex is no longer being held. */
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009f2a:	68fb      	ldr	r3, [r7, #12]
 8009f2c:	689b      	ldr	r3, [r3, #8]
 8009f2e:	4618      	mov	r0, r3
 8009f30:	f000 ffbc 	bl	800aeac <xTaskPriorityDisinherit>
 8009f34:	6178      	str	r0, [r7, #20]
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009f36:	68fb      	ldr	r3, [r7, #12]
 8009f38:	2200      	movs	r2, #0
 8009f3a:	609a      	str	r2, [r3, #8]
 8009f3c:	e043      	b.n	8009fc6 <prvCopyDataToQueue+0xc2>
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configUSE_MUTEXES */
	}
	else if( xPosition == queueSEND_TO_BACK )
 8009f3e:	687b      	ldr	r3, [r7, #4]
 8009f40:	2b00      	cmp	r3, #0
 8009f42:	d119      	bne.n	8009f78 <prvCopyDataToQueue+0x74>
	{
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009f44:	68fb      	ldr	r3, [r7, #12]
 8009f46:	6858      	ldr	r0, [r3, #4]
 8009f48:	68fb      	ldr	r3, [r7, #12]
 8009f4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009f4c:	461a      	mov	r2, r3
 8009f4e:	68b9      	ldr	r1, [r7, #8]
 8009f50:	f01b ffd6 	bl	8025f00 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009f54:	68fb      	ldr	r3, [r7, #12]
 8009f56:	685a      	ldr	r2, [r3, #4]
 8009f58:	68fb      	ldr	r3, [r7, #12]
 8009f5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009f5c:	441a      	add	r2, r3
 8009f5e:	68fb      	ldr	r3, [r7, #12]
 8009f60:	605a      	str	r2, [r3, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009f62:	68fb      	ldr	r3, [r7, #12]
 8009f64:	685a      	ldr	r2, [r3, #4]
 8009f66:	68fb      	ldr	r3, [r7, #12]
 8009f68:	689b      	ldr	r3, [r3, #8]
 8009f6a:	429a      	cmp	r2, r3
 8009f6c:	d32b      	bcc.n	8009fc6 <prvCopyDataToQueue+0xc2>
		{
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8009f6e:	68fb      	ldr	r3, [r7, #12]
 8009f70:	681a      	ldr	r2, [r3, #0]
 8009f72:	68fb      	ldr	r3, [r7, #12]
 8009f74:	605a      	str	r2, [r3, #4]
 8009f76:	e026      	b.n	8009fc6 <prvCopyDataToQueue+0xc2>
			mtCOVERAGE_TEST_MARKER();
		}
	}
	else
	{
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8009f78:	68fb      	ldr	r3, [r7, #12]
 8009f7a:	68d8      	ldr	r0, [r3, #12]
 8009f7c:	68fb      	ldr	r3, [r7, #12]
 8009f7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009f80:	461a      	mov	r2, r3
 8009f82:	68b9      	ldr	r1, [r7, #8]
 8009f84:	f01b ffbc 	bl	8025f00 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009f88:	68fb      	ldr	r3, [r7, #12]
 8009f8a:	68da      	ldr	r2, [r3, #12]
 8009f8c:	68fb      	ldr	r3, [r7, #12]
 8009f8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009f90:	425b      	negs	r3, r3
 8009f92:	441a      	add	r2, r3
 8009f94:	68fb      	ldr	r3, [r7, #12]
 8009f96:	60da      	str	r2, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009f98:	68fb      	ldr	r3, [r7, #12]
 8009f9a:	68da      	ldr	r2, [r3, #12]
 8009f9c:	68fb      	ldr	r3, [r7, #12]
 8009f9e:	681b      	ldr	r3, [r3, #0]
 8009fa0:	429a      	cmp	r2, r3
 8009fa2:	d207      	bcs.n	8009fb4 <prvCopyDataToQueue+0xb0>
		{
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8009fa4:	68fb      	ldr	r3, [r7, #12]
 8009fa6:	689a      	ldr	r2, [r3, #8]
 8009fa8:	68fb      	ldr	r3, [r7, #12]
 8009faa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009fac:	425b      	negs	r3, r3
 8009fae:	441a      	add	r2, r3
 8009fb0:	68fb      	ldr	r3, [r7, #12]
 8009fb2:	60da      	str	r2, [r3, #12]
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}

		if( xPosition == queueOVERWRITE )
 8009fb4:	687b      	ldr	r3, [r7, #4]
 8009fb6:	2b02      	cmp	r3, #2
 8009fb8:	d105      	bne.n	8009fc6 <prvCopyDataToQueue+0xc2>
		{
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009fba:	693b      	ldr	r3, [r7, #16]
 8009fbc:	2b00      	cmp	r3, #0
 8009fbe:	d002      	beq.n	8009fc6 <prvCopyDataToQueue+0xc2>
			{
				/* An item is not being added but overwritten, so subtract
				one from the recorded number of items in the queue so when
				one is added again below the number of recorded items remains
				correct. */
				--uxMessagesWaiting;
 8009fc0:	693b      	ldr	r3, [r7, #16]
 8009fc2:	3b01      	subs	r3, #1
 8009fc4:	613b      	str	r3, [r7, #16]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009fc6:	693b      	ldr	r3, [r7, #16]
 8009fc8:	1c5a      	adds	r2, r3, #1
 8009fca:	68fb      	ldr	r3, [r7, #12]
 8009fcc:	639a      	str	r2, [r3, #56]	; 0x38

	return xReturn;
 8009fce:	697b      	ldr	r3, [r7, #20]
}
 8009fd0:	4618      	mov	r0, r3
 8009fd2:	3718      	adds	r7, #24
 8009fd4:	46bd      	mov	sp, r7
 8009fd6:	bd80      	pop	{r7, pc}

08009fd8 <prvCopyDataFromQueue>:
/*-----------------------------------------------------------*/

static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
{
 8009fd8:	b580      	push	{r7, lr}
 8009fda:	b082      	sub	sp, #8
 8009fdc:	af00      	add	r7, sp, #0
 8009fde:	6078      	str	r0, [r7, #4]
 8009fe0:	6039      	str	r1, [r7, #0]
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009fe2:	687b      	ldr	r3, [r7, #4]
 8009fe4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009fe6:	2b00      	cmp	r3, #0
 8009fe8:	d018      	beq.n	800a01c <prvCopyDataFromQueue+0x44>
	{
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009fea:	687b      	ldr	r3, [r7, #4]
 8009fec:	68da      	ldr	r2, [r3, #12]
 8009fee:	687b      	ldr	r3, [r7, #4]
 8009ff0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009ff2:	441a      	add	r2, r3
 8009ff4:	687b      	ldr	r3, [r7, #4]
 8009ff6:	60da      	str	r2, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009ff8:	687b      	ldr	r3, [r7, #4]
 8009ffa:	68da      	ldr	r2, [r3, #12]
 8009ffc:	687b      	ldr	r3, [r7, #4]
 8009ffe:	689b      	ldr	r3, [r3, #8]
 800a000:	429a      	cmp	r2, r3
 800a002:	d303      	bcc.n	800a00c <prvCopyDataFromQueue+0x34>
		{
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a004:	687b      	ldr	r3, [r7, #4]
 800a006:	681a      	ldr	r2, [r3, #0]
 800a008:	687b      	ldr	r3, [r7, #4]
 800a00a:	60da      	str	r2, [r3, #12]
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a00c:	687b      	ldr	r3, [r7, #4]
 800a00e:	68d9      	ldr	r1, [r3, #12]
 800a010:	687b      	ldr	r3, [r7, #4]
 800a012:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a014:	461a      	mov	r2, r3
 800a016:	6838      	ldr	r0, [r7, #0]
 800a018:	f01b ff72 	bl	8025f00 <memcpy>
	}
}
 800a01c:	bf00      	nop
 800a01e:	3708      	adds	r7, #8
 800a020:	46bd      	mov	sp, r7
 800a022:	bd80      	pop	{r7, pc}

0800a024 <prvUnlockQueue>:
/*-----------------------------------------------------------*/

static void prvUnlockQueue( Queue_t * const pxQueue )
{
 800a024:	b580      	push	{r7, lr}
 800a026:	b084      	sub	sp, #16
 800a028:	af00      	add	r7, sp, #0
 800a02a:	6078      	str	r0, [r7, #4]

	/* The lock counts contains the number of extra data items placed or
	removed from the queue while the queue was locked.  When a queue is
	locked items can be added or removed, but the event lists cannot be
	updated. */
	taskENTER_CRITICAL();
 800a02c:	f001 fc7a 	bl	800b924 <vPortEnterCritical>
	{
		int8_t cTxLock = pxQueue->cTxLock;
 800a030:	687b      	ldr	r3, [r7, #4]
 800a032:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800a036:	73fb      	strb	r3, [r7, #15]

		/* See if data was added to the queue while it was locked. */
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800a038:	e011      	b.n	800a05e <prvUnlockQueue+0x3a>
			}
			#else /* configUSE_QUEUE_SETS */
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a03a:	687b      	ldr	r3, [r7, #4]
 800a03c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a03e:	2b00      	cmp	r3, #0
 800a040:	d012      	beq.n	800a068 <prvUnlockQueue+0x44>
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a042:	687b      	ldr	r3, [r7, #4]
 800a044:	3324      	adds	r3, #36	; 0x24
 800a046:	4618      	mov	r0, r3
 800a048:	f000 fd50 	bl	800aaec <xTaskRemoveFromEventList>
 800a04c:	4603      	mov	r3, r0
 800a04e:	2b00      	cmp	r3, #0
 800a050:	d001      	beq.n	800a056 <prvUnlockQueue+0x32>
					{
						/* The task waiting has a higher priority so record that
						a context switch is required. */
						vTaskMissedYield();
 800a052:	f000 fe27 	bl	800aca4 <vTaskMissedYield>
					break;
				}
			}
			#endif /* configUSE_QUEUE_SETS */

			--cTxLock;
 800a056:	7bfb      	ldrb	r3, [r7, #15]
 800a058:	3b01      	subs	r3, #1
 800a05a:	b2db      	uxtb	r3, r3
 800a05c:	73fb      	strb	r3, [r7, #15]
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800a05e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800a062:	2b00      	cmp	r3, #0
 800a064:	dce9      	bgt.n	800a03a <prvUnlockQueue+0x16>
 800a066:	e000      	b.n	800a06a <prvUnlockQueue+0x46>
					break;
 800a068:	bf00      	nop
		}

		pxQueue->cTxLock = queueUNLOCKED;
 800a06a:	687b      	ldr	r3, [r7, #4]
 800a06c:	22ff      	movs	r2, #255	; 0xff
 800a06e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
	}
	taskEXIT_CRITICAL();
 800a072:	f001 fc87 	bl	800b984 <vPortExitCritical>

	/* Do the same for the Rx lock. */
	taskENTER_CRITICAL();
 800a076:	f001 fc55 	bl	800b924 <vPortEnterCritical>
	{
		int8_t cRxLock = pxQueue->cRxLock;
 800a07a:	687b      	ldr	r3, [r7, #4]
 800a07c:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800a080:	73bb      	strb	r3, [r7, #14]

		while( cRxLock > queueLOCKED_UNMODIFIED )
 800a082:	e011      	b.n	800a0a8 <prvUnlockQueue+0x84>
		{
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a084:	687b      	ldr	r3, [r7, #4]
 800a086:	691b      	ldr	r3, [r3, #16]
 800a088:	2b00      	cmp	r3, #0
 800a08a:	d012      	beq.n	800a0b2 <prvUnlockQueue+0x8e>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a08c:	687b      	ldr	r3, [r7, #4]
 800a08e:	3310      	adds	r3, #16
 800a090:	4618      	mov	r0, r3
 800a092:	f000 fd2b 	bl	800aaec <xTaskRemoveFromEventList>
 800a096:	4603      	mov	r3, r0
 800a098:	2b00      	cmp	r3, #0
 800a09a:	d001      	beq.n	800a0a0 <prvUnlockQueue+0x7c>
				{
					vTaskMissedYield();
 800a09c:	f000 fe02 	bl	800aca4 <vTaskMissedYield>
				else
				{
					mtCOVERAGE_TEST_MARKER();
				}

				--cRxLock;
 800a0a0:	7bbb      	ldrb	r3, [r7, #14]
 800a0a2:	3b01      	subs	r3, #1
 800a0a4:	b2db      	uxtb	r3, r3
 800a0a6:	73bb      	strb	r3, [r7, #14]
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800a0a8:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800a0ac:	2b00      	cmp	r3, #0
 800a0ae:	dce9      	bgt.n	800a084 <prvUnlockQueue+0x60>
 800a0b0:	e000      	b.n	800a0b4 <prvUnlockQueue+0x90>
			}
			else
			{
				break;
 800a0b2:	bf00      	nop
			}
		}

		pxQueue->cRxLock = queueUNLOCKED;
 800a0b4:	687b      	ldr	r3, [r7, #4]
 800a0b6:	22ff      	movs	r2, #255	; 0xff
 800a0b8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
	}
	taskEXIT_CRITICAL();
 800a0bc:	f001 fc62 	bl	800b984 <vPortExitCritical>
}
 800a0c0:	bf00      	nop
 800a0c2:	3710      	adds	r7, #16
 800a0c4:	46bd      	mov	sp, r7
 800a0c6:	bd80      	pop	{r7, pc}

0800a0c8 <prvIsQueueEmpty>:
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800a0c8:	b580      	push	{r7, lr}
 800a0ca:	b084      	sub	sp, #16
 800a0cc:	af00      	add	r7, sp, #0
 800a0ce:	6078      	str	r0, [r7, #4]
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a0d0:	f001 fc28 	bl	800b924 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800a0d4:	687b      	ldr	r3, [r7, #4]
 800a0d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a0d8:	2b00      	cmp	r3, #0
 800a0da:	d102      	bne.n	800a0e2 <prvIsQueueEmpty+0x1a>
		{
			xReturn = pdTRUE;
 800a0dc:	2301      	movs	r3, #1
 800a0de:	60fb      	str	r3, [r7, #12]
 800a0e0:	e001      	b.n	800a0e6 <prvIsQueueEmpty+0x1e>
		}
		else
		{
			xReturn = pdFALSE;
 800a0e2:	2300      	movs	r3, #0
 800a0e4:	60fb      	str	r3, [r7, #12]
		}
	}
	taskEXIT_CRITICAL();
 800a0e6:	f001 fc4d 	bl	800b984 <vPortExitCritical>

	return xReturn;
 800a0ea:	68fb      	ldr	r3, [r7, #12]
}
 800a0ec:	4618      	mov	r0, r3
 800a0ee:	3710      	adds	r7, #16
 800a0f0:	46bd      	mov	sp, r7
 800a0f2:	bd80      	pop	{r7, pc}

0800a0f4 <prvIsQueueFull>:
	return xReturn;
} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
 800a0f4:	b580      	push	{r7, lr}
 800a0f6:	b084      	sub	sp, #16
 800a0f8:	af00      	add	r7, sp, #0
 800a0fa:	6078      	str	r0, [r7, #4]
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a0fc:	f001 fc12 	bl	800b924 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800a100:	687b      	ldr	r3, [r7, #4]
 800a102:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800a104:	687b      	ldr	r3, [r7, #4]
 800a106:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a108:	429a      	cmp	r2, r3
 800a10a:	d102      	bne.n	800a112 <prvIsQueueFull+0x1e>
		{
			xReturn = pdTRUE;
 800a10c:	2301      	movs	r3, #1
 800a10e:	60fb      	str	r3, [r7, #12]
 800a110:	e001      	b.n	800a116 <prvIsQueueFull+0x22>
		}
		else
		{
			xReturn = pdFALSE;
 800a112:	2300      	movs	r3, #0
 800a114:	60fb      	str	r3, [r7, #12]
		}
	}
	taskEXIT_CRITICAL();
 800a116:	f001 fc35 	bl	800b984 <vPortExitCritical>

	return xReturn;
 800a11a:	68fb      	ldr	r3, [r7, #12]
}
 800a11c:	4618      	mov	r0, r3
 800a11e:	3710      	adds	r7, #16
 800a120:	46bd      	mov	sp, r7
 800a122:	bd80      	pop	{r7, pc}

0800a124 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800a124:	b480      	push	{r7}
 800a126:	b085      	sub	sp, #20
 800a128:	af00      	add	r7, sp, #0
 800a12a:	6078      	str	r0, [r7, #4]
 800a12c:	6039      	str	r1, [r7, #0]
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a12e:	2300      	movs	r3, #0
 800a130:	60fb      	str	r3, [r7, #12]
 800a132:	e014      	b.n	800a15e <vQueueAddToRegistry+0x3a>
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800a134:	4a0f      	ldr	r2, [pc, #60]	; (800a174 <vQueueAddToRegistry+0x50>)
 800a136:	68fb      	ldr	r3, [r7, #12]
 800a138:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 800a13c:	2b00      	cmp	r3, #0
 800a13e:	d10b      	bne.n	800a158 <vQueueAddToRegistry+0x34>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800a140:	490c      	ldr	r1, [pc, #48]	; (800a174 <vQueueAddToRegistry+0x50>)
 800a142:	68fb      	ldr	r3, [r7, #12]
 800a144:	683a      	ldr	r2, [r7, #0]
 800a146:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800a14a:	4a0a      	ldr	r2, [pc, #40]	; (800a174 <vQueueAddToRegistry+0x50>)
 800a14c:	68fb      	ldr	r3, [r7, #12]
 800a14e:	00db      	lsls	r3, r3, #3
 800a150:	4413      	add	r3, r2
 800a152:	687a      	ldr	r2, [r7, #4]
 800a154:	605a      	str	r2, [r3, #4]

				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
				break;
 800a156:	e006      	b.n	800a166 <vQueueAddToRegistry+0x42>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a158:	68fb      	ldr	r3, [r7, #12]
 800a15a:	3301      	adds	r3, #1
 800a15c:	60fb      	str	r3, [r7, #12]
 800a15e:	68fb      	ldr	r3, [r7, #12]
 800a160:	2b07      	cmp	r3, #7
 800a162:	d9e7      	bls.n	800a134 <vQueueAddToRegistry+0x10>
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800a164:	bf00      	nop
 800a166:	bf00      	nop
 800a168:	3714      	adds	r7, #20
 800a16a:	46bd      	mov	sp, r7
 800a16c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a170:	4770      	bx	lr
 800a172:	bf00      	nop
 800a174:	20000e84 	.word	0x20000e84

0800a178 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800a178:	b580      	push	{r7, lr}
 800a17a:	b086      	sub	sp, #24
 800a17c:	af00      	add	r7, sp, #0
 800a17e:	60f8      	str	r0, [r7, #12]
 800a180:	60b9      	str	r1, [r7, #8]
 800a182:	607a      	str	r2, [r7, #4]
	Queue_t * const pxQueue = xQueue;
 800a184:	68fb      	ldr	r3, [r7, #12]
 800a186:	617b      	str	r3, [r7, #20]
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800a188:	f001 fbcc 	bl	800b924 <vPortEnterCritical>
 800a18c:	697b      	ldr	r3, [r7, #20]
 800a18e:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800a192:	b25b      	sxtb	r3, r3
 800a194:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800a198:	d103      	bne.n	800a1a2 <vQueueWaitForMessageRestricted+0x2a>
 800a19a:	697b      	ldr	r3, [r7, #20]
 800a19c:	2200      	movs	r2, #0
 800a19e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a1a2:	697b      	ldr	r3, [r7, #20]
 800a1a4:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800a1a8:	b25b      	sxtb	r3, r3
 800a1aa:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800a1ae:	d103      	bne.n	800a1b8 <vQueueWaitForMessageRestricted+0x40>
 800a1b0:	697b      	ldr	r3, [r7, #20]
 800a1b2:	2200      	movs	r2, #0
 800a1b4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a1b8:	f001 fbe4 	bl	800b984 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800a1bc:	697b      	ldr	r3, [r7, #20]
 800a1be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a1c0:	2b00      	cmp	r3, #0
 800a1c2:	d106      	bne.n	800a1d2 <vQueueWaitForMessageRestricted+0x5a>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800a1c4:	697b      	ldr	r3, [r7, #20]
 800a1c6:	3324      	adds	r3, #36	; 0x24
 800a1c8:	687a      	ldr	r2, [r7, #4]
 800a1ca:	68b9      	ldr	r1, [r7, #8]
 800a1cc:	4618      	mov	r0, r3
 800a1ce:	f000 fc61 	bl	800aa94 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800a1d2:	6978      	ldr	r0, [r7, #20]
 800a1d4:	f7ff ff26 	bl	800a024 <prvUnlockQueue>
	}
 800a1d8:	bf00      	nop
 800a1da:	3718      	adds	r7, #24
 800a1dc:	46bd      	mov	sp, r7
 800a1de:	bd80      	pop	{r7, pc}

0800a1e0 <xTaskCreateStatic>:
									const uint32_t ulStackDepth,
									void * const pvParameters,
									UBaseType_t uxPriority,
									StackType_t * const puxStackBuffer,
									StaticTask_t * const pxTaskBuffer )
	{
 800a1e0:	b580      	push	{r7, lr}
 800a1e2:	b08e      	sub	sp, #56	; 0x38
 800a1e4:	af04      	add	r7, sp, #16
 800a1e6:	60f8      	str	r0, [r7, #12]
 800a1e8:	60b9      	str	r1, [r7, #8]
 800a1ea:	607a      	str	r2, [r7, #4]
 800a1ec:	603b      	str	r3, [r7, #0]
	TCB_t *pxNewTCB;
	TaskHandle_t xReturn;

		configASSERT( puxStackBuffer != NULL );
 800a1ee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a1f0:	2b00      	cmp	r3, #0
 800a1f2:	d10a      	bne.n	800a20a <xTaskCreateStatic+0x2a>
	__asm volatile
 800a1f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1f8:	f383 8811 	msr	BASEPRI, r3
 800a1fc:	f3bf 8f6f 	isb	sy
 800a200:	f3bf 8f4f 	dsb	sy
 800a204:	623b      	str	r3, [r7, #32]
}
 800a206:	bf00      	nop
 800a208:	e7fe      	b.n	800a208 <xTaskCreateStatic+0x28>
		configASSERT( pxTaskBuffer != NULL );
 800a20a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a20c:	2b00      	cmp	r3, #0
 800a20e:	d10a      	bne.n	800a226 <xTaskCreateStatic+0x46>
	__asm volatile
 800a210:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a214:	f383 8811 	msr	BASEPRI, r3
 800a218:	f3bf 8f6f 	isb	sy
 800a21c:	f3bf 8f4f 	dsb	sy
 800a220:	61fb      	str	r3, [r7, #28]
}
 800a222:	bf00      	nop
 800a224:	e7fe      	b.n	800a224 <xTaskCreateStatic+0x44>
		#if( configASSERT_DEFINED == 1 )
		{
			/* Sanity check that the size of the structure used to declare a
			variable of type StaticTask_t equals the size of the real task
			structure. */
			volatile size_t xSize = sizeof( StaticTask_t );
 800a226:	23bc      	movs	r3, #188	; 0xbc
 800a228:	613b      	str	r3, [r7, #16]
			configASSERT( xSize == sizeof( TCB_t ) );
 800a22a:	693b      	ldr	r3, [r7, #16]
 800a22c:	2bbc      	cmp	r3, #188	; 0xbc
 800a22e:	d00a      	beq.n	800a246 <xTaskCreateStatic+0x66>
	__asm volatile
 800a230:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a234:	f383 8811 	msr	BASEPRI, r3
 800a238:	f3bf 8f6f 	isb	sy
 800a23c:	f3bf 8f4f 	dsb	sy
 800a240:	61bb      	str	r3, [r7, #24]
}
 800a242:	bf00      	nop
 800a244:	e7fe      	b.n	800a244 <xTaskCreateStatic+0x64>
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800a246:	693b      	ldr	r3, [r7, #16]
		}
		#endif /* configASSERT_DEFINED */


		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 800a248:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a24a:	2b00      	cmp	r3, #0
 800a24c:	d01e      	beq.n	800a28c <xTaskCreateStatic+0xac>
 800a24e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a250:	2b00      	cmp	r3, #0
 800a252:	d01b      	beq.n	800a28c <xTaskCreateStatic+0xac>
		{
			/* The memory used for the task's TCB and stack are passed into this
			function - use them. */
			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures are designed to have the same alignment, and the size is checked by an assert. */
 800a254:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a256:	627b      	str	r3, [r7, #36]	; 0x24
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800a258:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a25a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800a25c:	631a      	str	r2, [r3, #48]	; 0x30

			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
			{
				/* Tasks can be created statically or dynamically, so note this
				task was created statically in case the task is later deleted. */
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800a25e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a260:	2202      	movs	r2, #2
 800a262:	f883 20b9 	strb.w	r2, [r3, #185]	; 0xb9
			}
			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */

			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800a266:	2300      	movs	r3, #0
 800a268:	9303      	str	r3, [sp, #12]
 800a26a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a26c:	9302      	str	r3, [sp, #8]
 800a26e:	f107 0314 	add.w	r3, r7, #20
 800a272:	9301      	str	r3, [sp, #4]
 800a274:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a276:	9300      	str	r3, [sp, #0]
 800a278:	683b      	ldr	r3, [r7, #0]
 800a27a:	687a      	ldr	r2, [r7, #4]
 800a27c:	68b9      	ldr	r1, [r7, #8]
 800a27e:	68f8      	ldr	r0, [r7, #12]
 800a280:	f000 f850 	bl	800a324 <prvInitialiseNewTask>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a284:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800a286:	f000 f8f3 	bl	800a470 <prvAddNewTaskToReadyList>
 800a28a:	e001      	b.n	800a290 <xTaskCreateStatic+0xb0>
		}
		else
		{
			xReturn = NULL;
 800a28c:	2300      	movs	r3, #0
 800a28e:	617b      	str	r3, [r7, #20]
		}

		return xReturn;
 800a290:	697b      	ldr	r3, [r7, #20]
	}
 800a292:	4618      	mov	r0, r3
 800a294:	3728      	adds	r7, #40	; 0x28
 800a296:	46bd      	mov	sp, r7
 800a298:	bd80      	pop	{r7, pc}

0800a29a <xTaskCreate>:
							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and single characters only. */
							const configSTACK_DEPTH_TYPE usStackDepth,
							void * const pvParameters,
							UBaseType_t uxPriority,
							TaskHandle_t * const pxCreatedTask )
	{
 800a29a:	b580      	push	{r7, lr}
 800a29c:	b08c      	sub	sp, #48	; 0x30
 800a29e:	af04      	add	r7, sp, #16
 800a2a0:	60f8      	str	r0, [r7, #12]
 800a2a2:	60b9      	str	r1, [r7, #8]
 800a2a4:	603b      	str	r3, [r7, #0]
 800a2a6:	4613      	mov	r3, r2
 800a2a8:	80fb      	strh	r3, [r7, #6]
		#else /* portSTACK_GROWTH */
		{
		StackType_t *pxStack;

			/* Allocate space for the stack used by the task being created. */
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800a2aa:	88fb      	ldrh	r3, [r7, #6]
 800a2ac:	009b      	lsls	r3, r3, #2
 800a2ae:	4618      	mov	r0, r3
 800a2b0:	f001 fc5a 	bl	800bb68 <pvPortMalloc>
 800a2b4:	6178      	str	r0, [r7, #20]

			if( pxStack != NULL )
 800a2b6:	697b      	ldr	r3, [r7, #20]
 800a2b8:	2b00      	cmp	r3, #0
 800a2ba:	d00e      	beq.n	800a2da <xTaskCreate+0x40>
			{
				/* Allocate space for the TCB. */
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800a2bc:	20bc      	movs	r0, #188	; 0xbc
 800a2be:	f001 fc53 	bl	800bb68 <pvPortMalloc>
 800a2c2:	61f8      	str	r0, [r7, #28]

				if( pxNewTCB != NULL )
 800a2c4:	69fb      	ldr	r3, [r7, #28]
 800a2c6:	2b00      	cmp	r3, #0
 800a2c8:	d003      	beq.n	800a2d2 <xTaskCreate+0x38>
				{
					/* Store the stack location in the TCB. */
					pxNewTCB->pxStack = pxStack;
 800a2ca:	69fb      	ldr	r3, [r7, #28]
 800a2cc:	697a      	ldr	r2, [r7, #20]
 800a2ce:	631a      	str	r2, [r3, #48]	; 0x30
 800a2d0:	e005      	b.n	800a2de <xTaskCreate+0x44>
				}
				else
				{
					/* The stack cannot be used as the TCB was not created.  Free
					it again. */
					vPortFree( pxStack );
 800a2d2:	6978      	ldr	r0, [r7, #20]
 800a2d4:	f001 fd14 	bl	800bd00 <vPortFree>
 800a2d8:	e001      	b.n	800a2de <xTaskCreate+0x44>
				}
			}
			else
			{
				pxNewTCB = NULL;
 800a2da:	2300      	movs	r3, #0
 800a2dc:	61fb      	str	r3, [r7, #28]
			}
		}
		#endif /* portSTACK_GROWTH */

		if( pxNewTCB != NULL )
 800a2de:	69fb      	ldr	r3, [r7, #28]
 800a2e0:	2b00      	cmp	r3, #0
 800a2e2:	d017      	beq.n	800a314 <xTaskCreate+0x7a>
		{
			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consolidated for readability reasons. */
			{
				/* Tasks can be created statically or dynamically, so note this
				task was created dynamically in case it is later deleted. */
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800a2e4:	69fb      	ldr	r3, [r7, #28]
 800a2e6:	2200      	movs	r2, #0
 800a2e8:	f883 20b9 	strb.w	r2, [r3, #185]	; 0xb9
			}
			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */

			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800a2ec:	88fa      	ldrh	r2, [r7, #6]
 800a2ee:	2300      	movs	r3, #0
 800a2f0:	9303      	str	r3, [sp, #12]
 800a2f2:	69fb      	ldr	r3, [r7, #28]
 800a2f4:	9302      	str	r3, [sp, #8]
 800a2f6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a2f8:	9301      	str	r3, [sp, #4]
 800a2fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a2fc:	9300      	str	r3, [sp, #0]
 800a2fe:	683b      	ldr	r3, [r7, #0]
 800a300:	68b9      	ldr	r1, [r7, #8]
 800a302:	68f8      	ldr	r0, [r7, #12]
 800a304:	f000 f80e 	bl	800a324 <prvInitialiseNewTask>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a308:	69f8      	ldr	r0, [r7, #28]
 800a30a:	f000 f8b1 	bl	800a470 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800a30e:	2301      	movs	r3, #1
 800a310:	61bb      	str	r3, [r7, #24]
 800a312:	e002      	b.n	800a31a <xTaskCreate+0x80>
		}
		else
		{
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800a314:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a318:	61bb      	str	r3, [r7, #24]
		}

		return xReturn;
 800a31a:	69bb      	ldr	r3, [r7, #24]
	}
 800a31c:	4618      	mov	r0, r3
 800a31e:	3720      	adds	r7, #32
 800a320:	46bd      	mov	sp, r7
 800a322:	bd80      	pop	{r7, pc}

0800a324 <prvInitialiseNewTask>:
									void * const pvParameters,
									UBaseType_t uxPriority,
									TaskHandle_t * const pxCreatedTask,
									TCB_t *pxNewTCB,
									const MemoryRegion_t * const xRegions )
{
 800a324:	b580      	push	{r7, lr}
 800a326:	b088      	sub	sp, #32
 800a328:	af00      	add	r7, sp, #0
 800a32a:	60f8      	str	r0, [r7, #12]
 800a32c:	60b9      	str	r1, [r7, #8]
 800a32e:	607a      	str	r2, [r7, #4]
 800a330:	603b      	str	r3, [r7, #0]

	/* Avoid dependency on memset() if it is not required. */
	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
	{
		/* Fill the stack with a known value to assist debugging. */
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a332:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a334:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800a336:	687b      	ldr	r3, [r7, #4]
 800a338:	009b      	lsls	r3, r3, #2
 800a33a:	461a      	mov	r2, r3
 800a33c:	21a5      	movs	r1, #165	; 0xa5
 800a33e:	f01b fe07 	bl	8025f50 <memset>
	grows from high memory to low (as per the 80x86) or vice versa.
	portSTACK_GROWTH is used to make the result positive or negative as required
	by the port. */
	#if( portSTACK_GROWTH < 0 )
	{
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800a342:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a344:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a346:	687b      	ldr	r3, [r7, #4]
 800a348:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800a34c:	3b01      	subs	r3, #1
 800a34e:	009b      	lsls	r3, r3, #2
 800a350:	4413      	add	r3, r2
 800a352:	61bb      	str	r3, [r7, #24]
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800a354:	69bb      	ldr	r3, [r7, #24]
 800a356:	f023 0307 	bic.w	r3, r3, #7
 800a35a:	61bb      	str	r3, [r7, #24]

		/* Check the alignment of the calculated top of stack is correct. */
		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) == 0UL ) );
 800a35c:	69bb      	ldr	r3, [r7, #24]
 800a35e:	f003 0307 	and.w	r3, r3, #7
 800a362:	2b00      	cmp	r3, #0
 800a364:	d00a      	beq.n	800a37c <prvInitialiseNewTask+0x58>
	__asm volatile
 800a366:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a36a:	f383 8811 	msr	BASEPRI, r3
 800a36e:	f3bf 8f6f 	isb	sy
 800a372:	f3bf 8f4f 	dsb	sy
 800a376:	617b      	str	r3, [r7, #20]
}
 800a378:	bf00      	nop
 800a37a:	e7fe      	b.n	800a37a <prvInitialiseNewTask+0x56>
		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
	}
	#endif /* portSTACK_GROWTH */

	/* Store the task name in the TCB. */
	if( pcName != NULL )
 800a37c:	68bb      	ldr	r3, [r7, #8]
 800a37e:	2b00      	cmp	r3, #0
 800a380:	d01f      	beq.n	800a3c2 <prvInitialiseNewTask+0x9e>
	{
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800a382:	2300      	movs	r3, #0
 800a384:	61fb      	str	r3, [r7, #28]
 800a386:	e012      	b.n	800a3ae <prvInitialiseNewTask+0x8a>
		{
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800a388:	68ba      	ldr	r2, [r7, #8]
 800a38a:	69fb      	ldr	r3, [r7, #28]
 800a38c:	4413      	add	r3, r2
 800a38e:	7819      	ldrb	r1, [r3, #0]
 800a390:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a392:	69fb      	ldr	r3, [r7, #28]
 800a394:	4413      	add	r3, r2
 800a396:	3334      	adds	r3, #52	; 0x34
 800a398:	460a      	mov	r2, r1
 800a39a:	701a      	strb	r2, [r3, #0]

			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
			configMAX_TASK_NAME_LEN characters just in case the memory after the
			string is not accessible (extremely unlikely). */
			if( pcName[ x ] == ( char ) 0x00 )
 800a39c:	68ba      	ldr	r2, [r7, #8]
 800a39e:	69fb      	ldr	r3, [r7, #28]
 800a3a0:	4413      	add	r3, r2
 800a3a2:	781b      	ldrb	r3, [r3, #0]
 800a3a4:	2b00      	cmp	r3, #0
 800a3a6:	d006      	beq.n	800a3b6 <prvInitialiseNewTask+0x92>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800a3a8:	69fb      	ldr	r3, [r7, #28]
 800a3aa:	3301      	adds	r3, #1
 800a3ac:	61fb      	str	r3, [r7, #28]
 800a3ae:	69fb      	ldr	r3, [r7, #28]
 800a3b0:	2b0f      	cmp	r3, #15
 800a3b2:	d9e9      	bls.n	800a388 <prvInitialiseNewTask+0x64>
 800a3b4:	e000      	b.n	800a3b8 <prvInitialiseNewTask+0x94>
			{
				break;
 800a3b6:	bf00      	nop
			}
		}

		/* Ensure the name string is terminated in the case that the string length
		was greater or equal to configMAX_TASK_NAME_LEN. */
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800a3b8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a3ba:	2200      	movs	r2, #0
 800a3bc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a3c0:	e003      	b.n	800a3ca <prvInitialiseNewTask+0xa6>
	}
	else
	{
		/* The task has not been given a name, so just ensure there is a NULL
		terminator when it is read out. */
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800a3c2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a3c4:	2200      	movs	r2, #0
 800a3c6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
	}

	/* This is used as an array index so must ensure it's not too large.  First
	remove the privilege bit if one is present. */
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800a3ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a3cc:	2b37      	cmp	r3, #55	; 0x37
 800a3ce:	d901      	bls.n	800a3d4 <prvInitialiseNewTask+0xb0>
	{
		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 800a3d0:	2337      	movs	r3, #55	; 0x37
 800a3d2:	62bb      	str	r3, [r7, #40]	; 0x28
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxNewTCB->uxPriority = uxPriority;
 800a3d4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a3d6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a3d8:	62da      	str	r2, [r3, #44]	; 0x2c
	#if ( configUSE_MUTEXES == 1 )
	{
		pxNewTCB->uxBasePriority = uxPriority;
 800a3da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a3dc:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a3de:	64da      	str	r2, [r3, #76]	; 0x4c
		pxNewTCB->uxMutexesHeld = 0;
 800a3e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a3e2:	2200      	movs	r2, #0
 800a3e4:	651a      	str	r2, [r3, #80]	; 0x50
	}
	#endif /* configUSE_MUTEXES */

	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800a3e6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a3e8:	3304      	adds	r3, #4
 800a3ea:	4618      	mov	r0, r3
 800a3ec:	f7ff f978 	bl	80096e0 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800a3f0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a3f2:	3318      	adds	r3, #24
 800a3f4:	4618      	mov	r0, r3
 800a3f6:	f7ff f973 	bl	80096e0 <vListInitialiseItem>

	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
	back to	the containing TCB from a generic item in a list. */
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800a3fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a3fc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a3fe:	611a      	str	r2, [r3, #16]

	/* Event lists are always in priority order. */
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a400:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a402:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a406:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a408:	619a      	str	r2, [r3, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800a40a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a40c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a40e:	625a      	str	r2, [r3, #36]	; 0x24
	}
	#endif

	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
	{
		pxNewTCB->ulNotifiedValue = 0;
 800a410:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a412:	2200      	movs	r2, #0
 800a414:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800a418:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a41a:	2200      	movs	r2, #0
 800a41c:	f883 20b8 	strb.w	r2, [r3, #184]	; 0xb8
	#if ( configUSE_NEWLIB_REENTRANT == 1 )
	{
		/* Initialise this task's Newlib reent structure.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800a420:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a422:	3354      	adds	r3, #84	; 0x54
 800a424:	2260      	movs	r2, #96	; 0x60
 800a426:	2100      	movs	r1, #0
 800a428:	4618      	mov	r0, r3
 800a42a:	f01b fd91 	bl	8025f50 <memset>
 800a42e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a430:	4a0c      	ldr	r2, [pc, #48]	; (800a464 <prvInitialiseNewTask+0x140>)
 800a432:	659a      	str	r2, [r3, #88]	; 0x58
 800a434:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a436:	4a0c      	ldr	r2, [pc, #48]	; (800a468 <prvInitialiseNewTask+0x144>)
 800a438:	65da      	str	r2, [r3, #92]	; 0x5c
 800a43a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a43c:	4a0b      	ldr	r2, [pc, #44]	; (800a46c <prvInitialiseNewTask+0x148>)
 800a43e:	661a      	str	r2, [r3, #96]	; 0x60
			}
			#endif /* portSTACK_GROWTH */
		}
		#else /* portHAS_STACK_OVERFLOW_CHECKING */
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800a440:	683a      	ldr	r2, [r7, #0]
 800a442:	68f9      	ldr	r1, [r7, #12]
 800a444:	69b8      	ldr	r0, [r7, #24]
 800a446:	f001 f941 	bl	800b6cc <pxPortInitialiseStack>
 800a44a:	4602      	mov	r2, r0
 800a44c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a44e:	601a      	str	r2, [r3, #0]
		}
		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
	}
	#endif /* portUSING_MPU_WRAPPERS */

	if( pxCreatedTask != NULL )
 800a450:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a452:	2b00      	cmp	r3, #0
 800a454:	d002      	beq.n	800a45c <prvInitialiseNewTask+0x138>
	{
		/* Pass the handle out in an anonymous way.  The handle can be used to
		change the created task's priority, delete the created task, etc.*/
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800a456:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a458:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a45a:	601a      	str	r2, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800a45c:	bf00      	nop
 800a45e:	3720      	adds	r7, #32
 800a460:	46bd      	mov	sp, r7
 800a462:	bd80      	pop	{r7, pc}
 800a464:	08032138 	.word	0x08032138
 800a468:	08032158 	.word	0x08032158
 800a46c:	08032118 	.word	0x08032118

0800a470 <prvAddNewTaskToReadyList>:
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800a470:	b580      	push	{r7, lr}
 800a472:	b082      	sub	sp, #8
 800a474:	af00      	add	r7, sp, #0
 800a476:	6078      	str	r0, [r7, #4]
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800a478:	f001 fa54 	bl	800b924 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800a47c:	4b2d      	ldr	r3, [pc, #180]	; (800a534 <prvAddNewTaskToReadyList+0xc4>)
 800a47e:	681b      	ldr	r3, [r3, #0]
 800a480:	3301      	adds	r3, #1
 800a482:	4a2c      	ldr	r2, [pc, #176]	; (800a534 <prvAddNewTaskToReadyList+0xc4>)
 800a484:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800a486:	4b2c      	ldr	r3, [pc, #176]	; (800a538 <prvAddNewTaskToReadyList+0xc8>)
 800a488:	681b      	ldr	r3, [r3, #0]
 800a48a:	2b00      	cmp	r3, #0
 800a48c:	d109      	bne.n	800a4a2 <prvAddNewTaskToReadyList+0x32>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800a48e:	4a2a      	ldr	r2, [pc, #168]	; (800a538 <prvAddNewTaskToReadyList+0xc8>)
 800a490:	687b      	ldr	r3, [r7, #4]
 800a492:	6013      	str	r3, [r2, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800a494:	4b27      	ldr	r3, [pc, #156]	; (800a534 <prvAddNewTaskToReadyList+0xc4>)
 800a496:	681b      	ldr	r3, [r3, #0]
 800a498:	2b01      	cmp	r3, #1
 800a49a:	d110      	bne.n	800a4be <prvAddNewTaskToReadyList+0x4e>
			{
				/* This is the first task to be created so do the preliminary
				initialisation required.  We will not recover if this call
				fails, but we will report the failure. */
				prvInitialiseTaskLists();
 800a49c:	f000 fc26 	bl	800acec <prvInitialiseTaskLists>
 800a4a0:	e00d      	b.n	800a4be <prvAddNewTaskToReadyList+0x4e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800a4a2:	4b26      	ldr	r3, [pc, #152]	; (800a53c <prvAddNewTaskToReadyList+0xcc>)
 800a4a4:	681b      	ldr	r3, [r3, #0]
 800a4a6:	2b00      	cmp	r3, #0
 800a4a8:	d109      	bne.n	800a4be <prvAddNewTaskToReadyList+0x4e>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800a4aa:	4b23      	ldr	r3, [pc, #140]	; (800a538 <prvAddNewTaskToReadyList+0xc8>)
 800a4ac:	681b      	ldr	r3, [r3, #0]
 800a4ae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a4b0:	687b      	ldr	r3, [r7, #4]
 800a4b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a4b4:	429a      	cmp	r2, r3
 800a4b6:	d802      	bhi.n	800a4be <prvAddNewTaskToReadyList+0x4e>
				{
					pxCurrentTCB = pxNewTCB;
 800a4b8:	4a1f      	ldr	r2, [pc, #124]	; (800a538 <prvAddNewTaskToReadyList+0xc8>)
 800a4ba:	687b      	ldr	r3, [r7, #4]
 800a4bc:	6013      	str	r3, [r2, #0]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800a4be:	4b20      	ldr	r3, [pc, #128]	; (800a540 <prvAddNewTaskToReadyList+0xd0>)
 800a4c0:	681b      	ldr	r3, [r3, #0]
 800a4c2:	3301      	adds	r3, #1
 800a4c4:	4a1e      	ldr	r2, [pc, #120]	; (800a540 <prvAddNewTaskToReadyList+0xd0>)
 800a4c6:	6013      	str	r3, [r2, #0]

		#if ( configUSE_TRACE_FACILITY == 1 )
		{
			/* Add a counter into the TCB for tracing only. */
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800a4c8:	4b1d      	ldr	r3, [pc, #116]	; (800a540 <prvAddNewTaskToReadyList+0xd0>)
 800a4ca:	681a      	ldr	r2, [r3, #0]
 800a4cc:	687b      	ldr	r3, [r7, #4]
 800a4ce:	645a      	str	r2, [r3, #68]	; 0x44
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800a4d0:	687b      	ldr	r3, [r7, #4]
 800a4d2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a4d4:	4b1b      	ldr	r3, [pc, #108]	; (800a544 <prvAddNewTaskToReadyList+0xd4>)
 800a4d6:	681b      	ldr	r3, [r3, #0]
 800a4d8:	429a      	cmp	r2, r3
 800a4da:	d903      	bls.n	800a4e4 <prvAddNewTaskToReadyList+0x74>
 800a4dc:	687b      	ldr	r3, [r7, #4]
 800a4de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a4e0:	4a18      	ldr	r2, [pc, #96]	; (800a544 <prvAddNewTaskToReadyList+0xd4>)
 800a4e2:	6013      	str	r3, [r2, #0]
 800a4e4:	687b      	ldr	r3, [r7, #4]
 800a4e6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a4e8:	4613      	mov	r3, r2
 800a4ea:	009b      	lsls	r3, r3, #2
 800a4ec:	4413      	add	r3, r2
 800a4ee:	009b      	lsls	r3, r3, #2
 800a4f0:	4a15      	ldr	r2, [pc, #84]	; (800a548 <prvAddNewTaskToReadyList+0xd8>)
 800a4f2:	441a      	add	r2, r3
 800a4f4:	687b      	ldr	r3, [r7, #4]
 800a4f6:	3304      	adds	r3, #4
 800a4f8:	4619      	mov	r1, r3
 800a4fa:	4610      	mov	r0, r2
 800a4fc:	f7ff f8fd 	bl	80096fa <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800a500:	f001 fa40 	bl	800b984 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800a504:	4b0d      	ldr	r3, [pc, #52]	; (800a53c <prvAddNewTaskToReadyList+0xcc>)
 800a506:	681b      	ldr	r3, [r3, #0]
 800a508:	2b00      	cmp	r3, #0
 800a50a:	d00e      	beq.n	800a52a <prvAddNewTaskToReadyList+0xba>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800a50c:	4b0a      	ldr	r3, [pc, #40]	; (800a538 <prvAddNewTaskToReadyList+0xc8>)
 800a50e:	681b      	ldr	r3, [r3, #0]
 800a510:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a512:	687b      	ldr	r3, [r7, #4]
 800a514:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a516:	429a      	cmp	r2, r3
 800a518:	d207      	bcs.n	800a52a <prvAddNewTaskToReadyList+0xba>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800a51a:	4b0c      	ldr	r3, [pc, #48]	; (800a54c <prvAddNewTaskToReadyList+0xdc>)
 800a51c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a520:	601a      	str	r2, [r3, #0]
 800a522:	f3bf 8f4f 	dsb	sy
 800a526:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800a52a:	bf00      	nop
 800a52c:	3708      	adds	r7, #8
 800a52e:	46bd      	mov	sp, r7
 800a530:	bd80      	pop	{r7, pc}
 800a532:	bf00      	nop
 800a534:	20001398 	.word	0x20001398
 800a538:	20000ec4 	.word	0x20000ec4
 800a53c:	200013a4 	.word	0x200013a4
 800a540:	200013b4 	.word	0x200013b4
 800a544:	200013a0 	.word	0x200013a0
 800a548:	20000ec8 	.word	0x20000ec8
 800a54c:	e000ed04 	.word	0xe000ed04

0800a550 <vTaskDelay>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelay == 1 )

	void vTaskDelay( const TickType_t xTicksToDelay )
	{
 800a550:	b580      	push	{r7, lr}
 800a552:	b084      	sub	sp, #16
 800a554:	af00      	add	r7, sp, #0
 800a556:	6078      	str	r0, [r7, #4]
	BaseType_t xAlreadyYielded = pdFALSE;
 800a558:	2300      	movs	r3, #0
 800a55a:	60fb      	str	r3, [r7, #12]

		/* A delay time of zero just forces a reschedule. */
		if( xTicksToDelay > ( TickType_t ) 0U )
 800a55c:	687b      	ldr	r3, [r7, #4]
 800a55e:	2b00      	cmp	r3, #0
 800a560:	d017      	beq.n	800a592 <vTaskDelay+0x42>
		{
			configASSERT( uxSchedulerSuspended == 0 );
 800a562:	4b13      	ldr	r3, [pc, #76]	; (800a5b0 <vTaskDelay+0x60>)
 800a564:	681b      	ldr	r3, [r3, #0]
 800a566:	2b00      	cmp	r3, #0
 800a568:	d00a      	beq.n	800a580 <vTaskDelay+0x30>
	__asm volatile
 800a56a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a56e:	f383 8811 	msr	BASEPRI, r3
 800a572:	f3bf 8f6f 	isb	sy
 800a576:	f3bf 8f4f 	dsb	sy
 800a57a:	60bb      	str	r3, [r7, #8]
}
 800a57c:	bf00      	nop
 800a57e:	e7fe      	b.n	800a57e <vTaskDelay+0x2e>
			vTaskSuspendAll();
 800a580:	f000 f88a 	bl	800a698 <vTaskSuspendAll>
				list or removed from the blocked list until the scheduler
				is resumed.

				This task cannot be in an event list as it is the currently
				executing task. */
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800a584:	2100      	movs	r1, #0
 800a586:	6878      	ldr	r0, [r7, #4]
 800a588:	f000 fcfe 	bl	800af88 <prvAddCurrentTaskToDelayedList>
			}
			xAlreadyYielded = xTaskResumeAll();
 800a58c:	f000 f892 	bl	800a6b4 <xTaskResumeAll>
 800a590:	60f8      	str	r0, [r7, #12]
			mtCOVERAGE_TEST_MARKER();
		}

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
 800a592:	68fb      	ldr	r3, [r7, #12]
 800a594:	2b00      	cmp	r3, #0
 800a596:	d107      	bne.n	800a5a8 <vTaskDelay+0x58>
		{
			portYIELD_WITHIN_API();
 800a598:	4b06      	ldr	r3, [pc, #24]	; (800a5b4 <vTaskDelay+0x64>)
 800a59a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a59e:	601a      	str	r2, [r3, #0]
 800a5a0:	f3bf 8f4f 	dsb	sy
 800a5a4:	f3bf 8f6f 	isb	sy
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
 800a5a8:	bf00      	nop
 800a5aa:	3710      	adds	r7, #16
 800a5ac:	46bd      	mov	sp, r7
 800a5ae:	bd80      	pop	{r7, pc}
 800a5b0:	200013c0 	.word	0x200013c0
 800a5b4:	e000ed04 	.word	0xe000ed04

0800a5b8 <vTaskStartScheduler>:

#endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
/*-----------------------------------------------------------*/

void vTaskStartScheduler( void )
{
 800a5b8:	b580      	push	{r7, lr}
 800a5ba:	b08a      	sub	sp, #40	; 0x28
 800a5bc:	af04      	add	r7, sp, #16
BaseType_t xReturn;

	/* Add the idle task at the lowest priority. */
	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
	{
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800a5be:	2300      	movs	r3, #0
 800a5c0:	60bb      	str	r3, [r7, #8]
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800a5c2:	2300      	movs	r3, #0
 800a5c4:	607b      	str	r3, [r7, #4]
		uint32_t ulIdleTaskStackSize;

		/* The Idle task is created using user provided RAM - obtain the
		address of the RAM then create the idle task. */
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a5c6:	463a      	mov	r2, r7
 800a5c8:	1d39      	adds	r1, r7, #4
 800a5ca:	f107 0308 	add.w	r3, r7, #8
 800a5ce:	4618      	mov	r0, r3
 800a5d0:	f7ff f832 	bl	8009638 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800a5d4:	6839      	ldr	r1, [r7, #0]
 800a5d6:	687b      	ldr	r3, [r7, #4]
 800a5d8:	68ba      	ldr	r2, [r7, #8]
 800a5da:	9202      	str	r2, [sp, #8]
 800a5dc:	9301      	str	r3, [sp, #4]
 800a5de:	2300      	movs	r3, #0
 800a5e0:	9300      	str	r3, [sp, #0]
 800a5e2:	2300      	movs	r3, #0
 800a5e4:	460a      	mov	r2, r1
 800a5e6:	4924      	ldr	r1, [pc, #144]	; (800a678 <vTaskStartScheduler+0xc0>)
 800a5e8:	4824      	ldr	r0, [pc, #144]	; (800a67c <vTaskStartScheduler+0xc4>)
 800a5ea:	f7ff fdf9 	bl	800a1e0 <xTaskCreateStatic>
 800a5ee:	4603      	mov	r3, r0
 800a5f0:	4a23      	ldr	r2, [pc, #140]	; (800a680 <vTaskStartScheduler+0xc8>)
 800a5f2:	6013      	str	r3, [r2, #0]
												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIORITY is zero. */
												pxIdleTaskStackBuffer,
												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant explicit cast to all supported compilers. */

		if( xIdleTaskHandle != NULL )
 800a5f4:	4b22      	ldr	r3, [pc, #136]	; (800a680 <vTaskStartScheduler+0xc8>)
 800a5f6:	681b      	ldr	r3, [r3, #0]
 800a5f8:	2b00      	cmp	r3, #0
 800a5fa:	d002      	beq.n	800a602 <vTaskStartScheduler+0x4a>
		{
			xReturn = pdPASS;
 800a5fc:	2301      	movs	r3, #1
 800a5fe:	617b      	str	r3, [r7, #20]
 800a600:	e001      	b.n	800a606 <vTaskStartScheduler+0x4e>
		}
		else
		{
			xReturn = pdFAIL;
 800a602:	2300      	movs	r3, #0
 800a604:	617b      	str	r3, [r7, #20]
	}
	#endif /* configSUPPORT_STATIC_ALLOCATION */

	#if ( configUSE_TIMERS == 1 )
	{
		if( xReturn == pdPASS )
 800a606:	697b      	ldr	r3, [r7, #20]
 800a608:	2b01      	cmp	r3, #1
 800a60a:	d102      	bne.n	800a612 <vTaskStartScheduler+0x5a>
		{
			xReturn = xTimerCreateTimerTask();
 800a60c:	f000 fd10 	bl	800b030 <xTimerCreateTimerTask>
 800a610:	6178      	str	r0, [r7, #20]
			mtCOVERAGE_TEST_MARKER();
		}
	}
	#endif /* configUSE_TIMERS */

	if( xReturn == pdPASS )
 800a612:	697b      	ldr	r3, [r7, #20]
 800a614:	2b01      	cmp	r3, #1
 800a616:	d11b      	bne.n	800a650 <vTaskStartScheduler+0x98>
	__asm volatile
 800a618:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a61c:	f383 8811 	msr	BASEPRI, r3
 800a620:	f3bf 8f6f 	isb	sy
 800a624:	f3bf 8f4f 	dsb	sy
 800a628:	613b      	str	r3, [r7, #16]
}
 800a62a:	bf00      	nop
		{
			/* Switch Newlib's _impure_ptr variable to point to the _reent
			structure specific to the task that will run first.
			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
			for additional information. */
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800a62c:	4b15      	ldr	r3, [pc, #84]	; (800a684 <vTaskStartScheduler+0xcc>)
 800a62e:	681b      	ldr	r3, [r3, #0]
 800a630:	3354      	adds	r3, #84	; 0x54
 800a632:	4a15      	ldr	r2, [pc, #84]	; (800a688 <vTaskStartScheduler+0xd0>)
 800a634:	6013      	str	r3, [r2, #0]
		}
		#endif /* configUSE_NEWLIB_REENTRANT */

		xNextTaskUnblockTime = portMAX_DELAY;
 800a636:	4b15      	ldr	r3, [pc, #84]	; (800a68c <vTaskStartScheduler+0xd4>)
 800a638:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800a63c:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800a63e:	4b14      	ldr	r3, [pc, #80]	; (800a690 <vTaskStartScheduler+0xd8>)
 800a640:	2201      	movs	r2, #1
 800a642:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800a644:	4b13      	ldr	r3, [pc, #76]	; (800a694 <vTaskStartScheduler+0xdc>)
 800a646:	2200      	movs	r2, #0
 800a648:	601a      	str	r2, [r3, #0]

		traceTASK_SWITCHED_IN();

		/* Setting up the timer tick is hardware specific and thus in the
		portable interface. */
		if( xPortStartScheduler() != pdFALSE )
 800a64a:	f001 f8c9 	bl	800b7e0 <xPortStartScheduler>
	}

	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
	meaning xIdleTaskHandle is not used anywhere else. */
	( void ) xIdleTaskHandle;
}
 800a64e:	e00e      	b.n	800a66e <vTaskStartScheduler+0xb6>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800a650:	697b      	ldr	r3, [r7, #20]
 800a652:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800a656:	d10a      	bne.n	800a66e <vTaskStartScheduler+0xb6>
	__asm volatile
 800a658:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a65c:	f383 8811 	msr	BASEPRI, r3
 800a660:	f3bf 8f6f 	isb	sy
 800a664:	f3bf 8f4f 	dsb	sy
 800a668:	60fb      	str	r3, [r7, #12]
}
 800a66a:	bf00      	nop
 800a66c:	e7fe      	b.n	800a66c <vTaskStartScheduler+0xb4>
}
 800a66e:	bf00      	nop
 800a670:	3718      	adds	r7, #24
 800a672:	46bd      	mov	sp, r7
 800a674:	bd80      	pop	{r7, pc}
 800a676:	bf00      	nop
 800a678:	0802e748 	.word	0x0802e748
 800a67c:	0800acbd 	.word	0x0800acbd
 800a680:	200013bc 	.word	0x200013bc
 800a684:	20000ec4 	.word	0x20000ec4
 800a688:	200000bc 	.word	0x200000bc
 800a68c:	200013b8 	.word	0x200013b8
 800a690:	200013a4 	.word	0x200013a4
 800a694:	2000139c 	.word	0x2000139c

0800a698 <vTaskSuspendAll>:
	vPortEndScheduler();
}
/*----------------------------------------------------------*/

void vTaskSuspendAll( void )
{
 800a698:	b480      	push	{r7}
 800a69a:	af00      	add	r7, sp, #0
	do not otherwise exhibit real time behaviour. */
	portSOFTWARE_BARRIER();

	/* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
	is used to allow calls to vTaskSuspendAll() to nest. */
	++uxSchedulerSuspended;
 800a69c:	4b04      	ldr	r3, [pc, #16]	; (800a6b0 <vTaskSuspendAll+0x18>)
 800a69e:	681b      	ldr	r3, [r3, #0]
 800a6a0:	3301      	adds	r3, #1
 800a6a2:	4a03      	ldr	r2, [pc, #12]	; (800a6b0 <vTaskSuspendAll+0x18>)
 800a6a4:	6013      	str	r3, [r2, #0]

	/* Enforces ordering for ports and optimised compilers that may otherwise place
	the above increment elsewhere. */
	portMEMORY_BARRIER();
}
 800a6a6:	bf00      	nop
 800a6a8:	46bd      	mov	sp, r7
 800a6aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6ae:	4770      	bx	lr
 800a6b0:	200013c0 	.word	0x200013c0

0800a6b4 <xTaskResumeAll>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

BaseType_t xTaskResumeAll( void )
{
 800a6b4:	b580      	push	{r7, lr}
 800a6b6:	b084      	sub	sp, #16
 800a6b8:	af00      	add	r7, sp, #0
TCB_t *pxTCB = NULL;
 800a6ba:	2300      	movs	r3, #0
 800a6bc:	60fb      	str	r3, [r7, #12]
BaseType_t xAlreadyYielded = pdFALSE;
 800a6be:	2300      	movs	r3, #0
 800a6c0:	60bb      	str	r3, [r7, #8]

	/* If uxSchedulerSuspended is zero then this function does not match a
	previous call to vTaskSuspendAll(). */
	configASSERT( uxSchedulerSuspended );
 800a6c2:	4b42      	ldr	r3, [pc, #264]	; (800a7cc <xTaskResumeAll+0x118>)
 800a6c4:	681b      	ldr	r3, [r3, #0]
 800a6c6:	2b00      	cmp	r3, #0
 800a6c8:	d10a      	bne.n	800a6e0 <xTaskResumeAll+0x2c>
	__asm volatile
 800a6ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6ce:	f383 8811 	msr	BASEPRI, r3
 800a6d2:	f3bf 8f6f 	isb	sy
 800a6d6:	f3bf 8f4f 	dsb	sy
 800a6da:	603b      	str	r3, [r7, #0]
}
 800a6dc:	bf00      	nop
 800a6de:	e7fe      	b.n	800a6de <xTaskResumeAll+0x2a>
	/* It is possible that an ISR caused a task to be removed from an event
	list while the scheduler was suspended.  If this was the case then the
	removed task will have been added to the xPendingReadyList.  Once the
	scheduler has been resumed it is safe to move all the pending ready
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
 800a6e0:	f001 f920 	bl	800b924 <vPortEnterCritical>
	{
		--uxSchedulerSuspended;
 800a6e4:	4b39      	ldr	r3, [pc, #228]	; (800a7cc <xTaskResumeAll+0x118>)
 800a6e6:	681b      	ldr	r3, [r3, #0]
 800a6e8:	3b01      	subs	r3, #1
 800a6ea:	4a38      	ldr	r2, [pc, #224]	; (800a7cc <xTaskResumeAll+0x118>)
 800a6ec:	6013      	str	r3, [r2, #0]

		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a6ee:	4b37      	ldr	r3, [pc, #220]	; (800a7cc <xTaskResumeAll+0x118>)
 800a6f0:	681b      	ldr	r3, [r3, #0]
 800a6f2:	2b00      	cmp	r3, #0
 800a6f4:	d162      	bne.n	800a7bc <xTaskResumeAll+0x108>
		{
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800a6f6:	4b36      	ldr	r3, [pc, #216]	; (800a7d0 <xTaskResumeAll+0x11c>)
 800a6f8:	681b      	ldr	r3, [r3, #0]
 800a6fa:	2b00      	cmp	r3, #0
 800a6fc:	d05e      	beq.n	800a7bc <xTaskResumeAll+0x108>
			{
				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a6fe:	e02f      	b.n	800a760 <xTaskResumeAll+0xac>
				{
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a700:	4b34      	ldr	r3, [pc, #208]	; (800a7d4 <xTaskResumeAll+0x120>)
 800a702:	68db      	ldr	r3, [r3, #12]
 800a704:	68db      	ldr	r3, [r3, #12]
 800a706:	60fb      	str	r3, [r7, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a708:	68fb      	ldr	r3, [r7, #12]
 800a70a:	3318      	adds	r3, #24
 800a70c:	4618      	mov	r0, r3
 800a70e:	f7ff f851 	bl	80097b4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a712:	68fb      	ldr	r3, [r7, #12]
 800a714:	3304      	adds	r3, #4
 800a716:	4618      	mov	r0, r3
 800a718:	f7ff f84c 	bl	80097b4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800a71c:	68fb      	ldr	r3, [r7, #12]
 800a71e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a720:	4b2d      	ldr	r3, [pc, #180]	; (800a7d8 <xTaskResumeAll+0x124>)
 800a722:	681b      	ldr	r3, [r3, #0]
 800a724:	429a      	cmp	r2, r3
 800a726:	d903      	bls.n	800a730 <xTaskResumeAll+0x7c>
 800a728:	68fb      	ldr	r3, [r7, #12]
 800a72a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a72c:	4a2a      	ldr	r2, [pc, #168]	; (800a7d8 <xTaskResumeAll+0x124>)
 800a72e:	6013      	str	r3, [r2, #0]
 800a730:	68fb      	ldr	r3, [r7, #12]
 800a732:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a734:	4613      	mov	r3, r2
 800a736:	009b      	lsls	r3, r3, #2
 800a738:	4413      	add	r3, r2
 800a73a:	009b      	lsls	r3, r3, #2
 800a73c:	4a27      	ldr	r2, [pc, #156]	; (800a7dc <xTaskResumeAll+0x128>)
 800a73e:	441a      	add	r2, r3
 800a740:	68fb      	ldr	r3, [r7, #12]
 800a742:	3304      	adds	r3, #4
 800a744:	4619      	mov	r1, r3
 800a746:	4610      	mov	r0, r2
 800a748:	f7fe ffd7 	bl	80096fa <vListInsertEnd>

					/* If the moved task has a priority higher than the current
					task then a yield must be performed. */
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a74c:	68fb      	ldr	r3, [r7, #12]
 800a74e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a750:	4b23      	ldr	r3, [pc, #140]	; (800a7e0 <xTaskResumeAll+0x12c>)
 800a752:	681b      	ldr	r3, [r3, #0]
 800a754:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a756:	429a      	cmp	r2, r3
 800a758:	d302      	bcc.n	800a760 <xTaskResumeAll+0xac>
					{
						xYieldPending = pdTRUE;
 800a75a:	4b22      	ldr	r3, [pc, #136]	; (800a7e4 <xTaskResumeAll+0x130>)
 800a75c:	2201      	movs	r2, #1
 800a75e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a760:	4b1c      	ldr	r3, [pc, #112]	; (800a7d4 <xTaskResumeAll+0x120>)
 800a762:	681b      	ldr	r3, [r3, #0]
 800a764:	2b00      	cmp	r3, #0
 800a766:	d1cb      	bne.n	800a700 <xTaskResumeAll+0x4c>
					{
						mtCOVERAGE_TEST_MARKER();
					}
				}

				if( pxTCB != NULL )
 800a768:	68fb      	ldr	r3, [r7, #12]
 800a76a:	2b00      	cmp	r3, #0
 800a76c:	d001      	beq.n	800a772 <xTaskResumeAll+0xbe>
					which may have prevented the next unblock time from being
					re-calculated, in which case re-calculate it now.  Mainly
					important for low power tickless implementations, where
					this can prevent an unnecessary exit from low power
					state. */
					prvResetNextTaskUnblockTime();
 800a76e:	f000 fb5f 	bl	800ae30 <prvResetNextTaskUnblockTime>
				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does
				not	slip, and that any delayed tasks are resumed at the correct
				time. */
				{
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800a772:	4b1d      	ldr	r3, [pc, #116]	; (800a7e8 <xTaskResumeAll+0x134>)
 800a774:	681b      	ldr	r3, [r3, #0]
 800a776:	607b      	str	r3, [r7, #4]

					if( xPendedCounts > ( TickType_t ) 0U )
 800a778:	687b      	ldr	r3, [r7, #4]
 800a77a:	2b00      	cmp	r3, #0
 800a77c:	d010      	beq.n	800a7a0 <xTaskResumeAll+0xec>
					{
						do
						{
							if( xTaskIncrementTick() != pdFALSE )
 800a77e:	f000 f847 	bl	800a810 <xTaskIncrementTick>
 800a782:	4603      	mov	r3, r0
 800a784:	2b00      	cmp	r3, #0
 800a786:	d002      	beq.n	800a78e <xTaskResumeAll+0xda>
							{
								xYieldPending = pdTRUE;
 800a788:	4b16      	ldr	r3, [pc, #88]	; (800a7e4 <xTaskResumeAll+0x130>)
 800a78a:	2201      	movs	r2, #1
 800a78c:	601a      	str	r2, [r3, #0]
							}
							else
							{
								mtCOVERAGE_TEST_MARKER();
							}
							--xPendedCounts;
 800a78e:	687b      	ldr	r3, [r7, #4]
 800a790:	3b01      	subs	r3, #1
 800a792:	607b      	str	r3, [r7, #4]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800a794:	687b      	ldr	r3, [r7, #4]
 800a796:	2b00      	cmp	r3, #0
 800a798:	d1f1      	bne.n	800a77e <xTaskResumeAll+0xca>

						xPendedTicks = 0;
 800a79a:	4b13      	ldr	r3, [pc, #76]	; (800a7e8 <xTaskResumeAll+0x134>)
 800a79c:	2200      	movs	r2, #0
 800a79e:	601a      	str	r2, [r3, #0]
					{
						mtCOVERAGE_TEST_MARKER();
					}
				}

				if( xYieldPending != pdFALSE )
 800a7a0:	4b10      	ldr	r3, [pc, #64]	; (800a7e4 <xTaskResumeAll+0x130>)
 800a7a2:	681b      	ldr	r3, [r3, #0]
 800a7a4:	2b00      	cmp	r3, #0
 800a7a6:	d009      	beq.n	800a7bc <xTaskResumeAll+0x108>
				{
					#if( configUSE_PREEMPTION != 0 )
					{
						xAlreadyYielded = pdTRUE;
 800a7a8:	2301      	movs	r3, #1
 800a7aa:	60bb      	str	r3, [r7, #8]
					}
					#endif
					taskYIELD_IF_USING_PREEMPTION();
 800a7ac:	4b0f      	ldr	r3, [pc, #60]	; (800a7ec <xTaskResumeAll+0x138>)
 800a7ae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a7b2:	601a      	str	r2, [r3, #0]
 800a7b4:	f3bf 8f4f 	dsb	sy
 800a7b8:	f3bf 8f6f 	isb	sy
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800a7bc:	f001 f8e2 	bl	800b984 <vPortExitCritical>

	return xAlreadyYielded;
 800a7c0:	68bb      	ldr	r3, [r7, #8]
}
 800a7c2:	4618      	mov	r0, r3
 800a7c4:	3710      	adds	r7, #16
 800a7c6:	46bd      	mov	sp, r7
 800a7c8:	bd80      	pop	{r7, pc}
 800a7ca:	bf00      	nop
 800a7cc:	200013c0 	.word	0x200013c0
 800a7d0:	20001398 	.word	0x20001398
 800a7d4:	20001358 	.word	0x20001358
 800a7d8:	200013a0 	.word	0x200013a0
 800a7dc:	20000ec8 	.word	0x20000ec8
 800a7e0:	20000ec4 	.word	0x20000ec4
 800a7e4:	200013ac 	.word	0x200013ac
 800a7e8:	200013a8 	.word	0x200013a8
 800a7ec:	e000ed04 	.word	0xe000ed04

0800a7f0 <xTaskGetTickCount>:
/*-----------------------------------------------------------*/

TickType_t xTaskGetTickCount( void )
{
 800a7f0:	b480      	push	{r7}
 800a7f2:	b083      	sub	sp, #12
 800a7f4:	af00      	add	r7, sp, #0
TickType_t xTicks;

	/* Critical section required if running on a 16 bit processor. */
	portTICK_TYPE_ENTER_CRITICAL();
	{
		xTicks = xTickCount;
 800a7f6:	4b05      	ldr	r3, [pc, #20]	; (800a80c <xTaskGetTickCount+0x1c>)
 800a7f8:	681b      	ldr	r3, [r3, #0]
 800a7fa:	607b      	str	r3, [r7, #4]
	}
	portTICK_TYPE_EXIT_CRITICAL();

	return xTicks;
 800a7fc:	687b      	ldr	r3, [r7, #4]
}
 800a7fe:	4618      	mov	r0, r3
 800a800:	370c      	adds	r7, #12
 800a802:	46bd      	mov	sp, r7
 800a804:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a808:	4770      	bx	lr
 800a80a:	bf00      	nop
 800a80c:	2000139c 	.word	0x2000139c

0800a810 <xTaskIncrementTick>:

#endif /* INCLUDE_xTaskAbortDelay */
/*----------------------------------------------------------*/

BaseType_t xTaskIncrementTick( void )
{
 800a810:	b580      	push	{r7, lr}
 800a812:	b086      	sub	sp, #24
 800a814:	af00      	add	r7, sp, #0
TCB_t * pxTCB;
TickType_t xItemValue;
BaseType_t xSwitchRequired = pdFALSE;
 800a816:	2300      	movs	r3, #0
 800a818:	617b      	str	r3, [r7, #20]

	/* Called by the portable layer each time a tick interrupt occurs.
	Increments the tick then checks to see if the new tick value will cause any
	tasks to be unblocked. */
	traceTASK_INCREMENT_TICK( xTickCount );
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a81a:	4b4f      	ldr	r3, [pc, #316]	; (800a958 <xTaskIncrementTick+0x148>)
 800a81c:	681b      	ldr	r3, [r3, #0]
 800a81e:	2b00      	cmp	r3, #0
 800a820:	f040 808f 	bne.w	800a942 <xTaskIncrementTick+0x132>
	{
		/* Minor optimisation.  The tick count cannot change in this
		block. */
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800a824:	4b4d      	ldr	r3, [pc, #308]	; (800a95c <xTaskIncrementTick+0x14c>)
 800a826:	681b      	ldr	r3, [r3, #0]
 800a828:	3301      	adds	r3, #1
 800a82a:	613b      	str	r3, [r7, #16]

		/* Increment the RTOS tick, switching the delayed and overflowed
		delayed lists if it wraps to 0. */
		xTickCount = xConstTickCount;
 800a82c:	4a4b      	ldr	r2, [pc, #300]	; (800a95c <xTaskIncrementTick+0x14c>)
 800a82e:	693b      	ldr	r3, [r7, #16]
 800a830:	6013      	str	r3, [r2, #0]

		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800a832:	693b      	ldr	r3, [r7, #16]
 800a834:	2b00      	cmp	r3, #0
 800a836:	d120      	bne.n	800a87a <xTaskIncrementTick+0x6a>
		{
			taskSWITCH_DELAYED_LISTS();
 800a838:	4b49      	ldr	r3, [pc, #292]	; (800a960 <xTaskIncrementTick+0x150>)
 800a83a:	681b      	ldr	r3, [r3, #0]
 800a83c:	681b      	ldr	r3, [r3, #0]
 800a83e:	2b00      	cmp	r3, #0
 800a840:	d00a      	beq.n	800a858 <xTaskIncrementTick+0x48>
	__asm volatile
 800a842:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a846:	f383 8811 	msr	BASEPRI, r3
 800a84a:	f3bf 8f6f 	isb	sy
 800a84e:	f3bf 8f4f 	dsb	sy
 800a852:	603b      	str	r3, [r7, #0]
}
 800a854:	bf00      	nop
 800a856:	e7fe      	b.n	800a856 <xTaskIncrementTick+0x46>
 800a858:	4b41      	ldr	r3, [pc, #260]	; (800a960 <xTaskIncrementTick+0x150>)
 800a85a:	681b      	ldr	r3, [r3, #0]
 800a85c:	60fb      	str	r3, [r7, #12]
 800a85e:	4b41      	ldr	r3, [pc, #260]	; (800a964 <xTaskIncrementTick+0x154>)
 800a860:	681b      	ldr	r3, [r3, #0]
 800a862:	4a3f      	ldr	r2, [pc, #252]	; (800a960 <xTaskIncrementTick+0x150>)
 800a864:	6013      	str	r3, [r2, #0]
 800a866:	4a3f      	ldr	r2, [pc, #252]	; (800a964 <xTaskIncrementTick+0x154>)
 800a868:	68fb      	ldr	r3, [r7, #12]
 800a86a:	6013      	str	r3, [r2, #0]
 800a86c:	4b3e      	ldr	r3, [pc, #248]	; (800a968 <xTaskIncrementTick+0x158>)
 800a86e:	681b      	ldr	r3, [r3, #0]
 800a870:	3301      	adds	r3, #1
 800a872:	4a3d      	ldr	r2, [pc, #244]	; (800a968 <xTaskIncrementTick+0x158>)
 800a874:	6013      	str	r3, [r2, #0]
 800a876:	f000 fadb 	bl	800ae30 <prvResetNextTaskUnblockTime>

		/* See if this tick has made a timeout expire.  Tasks are stored in
		the	queue in the order of their wake time - meaning once one task
		has been found whose block time has not expired there is no need to
		look any further down the list. */
		if( xConstTickCount >= xNextTaskUnblockTime )
 800a87a:	4b3c      	ldr	r3, [pc, #240]	; (800a96c <xTaskIncrementTick+0x15c>)
 800a87c:	681b      	ldr	r3, [r3, #0]
 800a87e:	693a      	ldr	r2, [r7, #16]
 800a880:	429a      	cmp	r2, r3
 800a882:	d349      	bcc.n	800a918 <xTaskIncrementTick+0x108>
		{
			for( ;; )
			{
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a884:	4b36      	ldr	r3, [pc, #216]	; (800a960 <xTaskIncrementTick+0x150>)
 800a886:	681b      	ldr	r3, [r3, #0]
 800a888:	681b      	ldr	r3, [r3, #0]
 800a88a:	2b00      	cmp	r3, #0
 800a88c:	d104      	bne.n	800a898 <xTaskIncrementTick+0x88>
					/* The delayed list is empty.  Set xNextTaskUnblockTime
					to the maximum possible value so it is extremely
					unlikely that the
					if( xTickCount >= xNextTaskUnblockTime ) test will pass
					next time through. */
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a88e:	4b37      	ldr	r3, [pc, #220]	; (800a96c <xTaskIncrementTick+0x15c>)
 800a890:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800a894:	601a      	str	r2, [r3, #0]
					break;
 800a896:	e03f      	b.n	800a918 <xTaskIncrementTick+0x108>
				{
					/* The delayed list is not empty, get the value of the
					item at the head of the delayed list.  This is the time
					at which the task at the head of the delayed list must
					be removed from the Blocked state. */
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a898:	4b31      	ldr	r3, [pc, #196]	; (800a960 <xTaskIncrementTick+0x150>)
 800a89a:	681b      	ldr	r3, [r3, #0]
 800a89c:	68db      	ldr	r3, [r3, #12]
 800a89e:	68db      	ldr	r3, [r3, #12]
 800a8a0:	60bb      	str	r3, [r7, #8]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800a8a2:	68bb      	ldr	r3, [r7, #8]
 800a8a4:	685b      	ldr	r3, [r3, #4]
 800a8a6:	607b      	str	r3, [r7, #4]

					if( xConstTickCount < xItemValue )
 800a8a8:	693a      	ldr	r2, [r7, #16]
 800a8aa:	687b      	ldr	r3, [r7, #4]
 800a8ac:	429a      	cmp	r2, r3
 800a8ae:	d203      	bcs.n	800a8b8 <xTaskIncrementTick+0xa8>
						/* It is not time to unblock this item yet, but the
						item value is the time at which the task at the head
						of the blocked list must be removed from the Blocked
						state -	so record the item value in
						xNextTaskUnblockTime. */
						xNextTaskUnblockTime = xItemValue;
 800a8b0:	4a2e      	ldr	r2, [pc, #184]	; (800a96c <xTaskIncrementTick+0x15c>)
 800a8b2:	687b      	ldr	r3, [r7, #4]
 800a8b4:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800a8b6:	e02f      	b.n	800a918 <xTaskIncrementTick+0x108>
					{
						mtCOVERAGE_TEST_MARKER();
					}

					/* It is time to remove the item from the Blocked state. */
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a8b8:	68bb      	ldr	r3, [r7, #8]
 800a8ba:	3304      	adds	r3, #4
 800a8bc:	4618      	mov	r0, r3
 800a8be:	f7fe ff79 	bl	80097b4 <uxListRemove>

					/* Is the task waiting on an event also?  If so remove
					it from the event list. */
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800a8c2:	68bb      	ldr	r3, [r7, #8]
 800a8c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a8c6:	2b00      	cmp	r3, #0
 800a8c8:	d004      	beq.n	800a8d4 <xTaskIncrementTick+0xc4>
					{
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a8ca:	68bb      	ldr	r3, [r7, #8]
 800a8cc:	3318      	adds	r3, #24
 800a8ce:	4618      	mov	r0, r3
 800a8d0:	f7fe ff70 	bl	80097b4 <uxListRemove>
						mtCOVERAGE_TEST_MARKER();
					}

					/* Place the unblocked task into the appropriate ready
					list. */
					prvAddTaskToReadyList( pxTCB );
 800a8d4:	68bb      	ldr	r3, [r7, #8]
 800a8d6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a8d8:	4b25      	ldr	r3, [pc, #148]	; (800a970 <xTaskIncrementTick+0x160>)
 800a8da:	681b      	ldr	r3, [r3, #0]
 800a8dc:	429a      	cmp	r2, r3
 800a8de:	d903      	bls.n	800a8e8 <xTaskIncrementTick+0xd8>
 800a8e0:	68bb      	ldr	r3, [r7, #8]
 800a8e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a8e4:	4a22      	ldr	r2, [pc, #136]	; (800a970 <xTaskIncrementTick+0x160>)
 800a8e6:	6013      	str	r3, [r2, #0]
 800a8e8:	68bb      	ldr	r3, [r7, #8]
 800a8ea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a8ec:	4613      	mov	r3, r2
 800a8ee:	009b      	lsls	r3, r3, #2
 800a8f0:	4413      	add	r3, r2
 800a8f2:	009b      	lsls	r3, r3, #2
 800a8f4:	4a1f      	ldr	r2, [pc, #124]	; (800a974 <xTaskIncrementTick+0x164>)
 800a8f6:	441a      	add	r2, r3
 800a8f8:	68bb      	ldr	r3, [r7, #8]
 800a8fa:	3304      	adds	r3, #4
 800a8fc:	4619      	mov	r1, r3
 800a8fe:	4610      	mov	r0, r2
 800a900:	f7fe fefb 	bl	80096fa <vListInsertEnd>
					{
						/* Preemption is on, but a context switch should
						only be performed if the unblocked task has a
						priority that is equal to or higher than the
						currently executing task. */
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a904:	68bb      	ldr	r3, [r7, #8]
 800a906:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a908:	4b1b      	ldr	r3, [pc, #108]	; (800a978 <xTaskIncrementTick+0x168>)
 800a90a:	681b      	ldr	r3, [r3, #0]
 800a90c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a90e:	429a      	cmp	r2, r3
 800a910:	d3b8      	bcc.n	800a884 <xTaskIncrementTick+0x74>
						{
							xSwitchRequired = pdTRUE;
 800a912:	2301      	movs	r3, #1
 800a914:	617b      	str	r3, [r7, #20]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a916:	e7b5      	b.n	800a884 <xTaskIncrementTick+0x74>
		/* Tasks of equal priority to the currently running task will share
		processing time (time slice) if preemption is on, and the application
		writer has not explicitly turned time slicing off. */
		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
		{
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800a918:	4b17      	ldr	r3, [pc, #92]	; (800a978 <xTaskIncrementTick+0x168>)
 800a91a:	681b      	ldr	r3, [r3, #0]
 800a91c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a91e:	4915      	ldr	r1, [pc, #84]	; (800a974 <xTaskIncrementTick+0x164>)
 800a920:	4613      	mov	r3, r2
 800a922:	009b      	lsls	r3, r3, #2
 800a924:	4413      	add	r3, r2
 800a926:	009b      	lsls	r3, r3, #2
 800a928:	440b      	add	r3, r1
 800a92a:	681b      	ldr	r3, [r3, #0]
 800a92c:	2b01      	cmp	r3, #1
 800a92e:	d901      	bls.n	800a934 <xTaskIncrementTick+0x124>
			{
				xSwitchRequired = pdTRUE;
 800a930:	2301      	movs	r3, #1
 800a932:	617b      	str	r3, [r7, #20]
		}
		#endif /* configUSE_TICK_HOOK */

		#if ( configUSE_PREEMPTION == 1 )
		{
			if( xYieldPending != pdFALSE )
 800a934:	4b11      	ldr	r3, [pc, #68]	; (800a97c <xTaskIncrementTick+0x16c>)
 800a936:	681b      	ldr	r3, [r3, #0]
 800a938:	2b00      	cmp	r3, #0
 800a93a:	d007      	beq.n	800a94c <xTaskIncrementTick+0x13c>
			{
				xSwitchRequired = pdTRUE;
 800a93c:	2301      	movs	r3, #1
 800a93e:	617b      	str	r3, [r7, #20]
 800a940:	e004      	b.n	800a94c <xTaskIncrementTick+0x13c>
		}
		#endif /* configUSE_PREEMPTION */
	}
	else
	{
		++xPendedTicks;
 800a942:	4b0f      	ldr	r3, [pc, #60]	; (800a980 <xTaskIncrementTick+0x170>)
 800a944:	681b      	ldr	r3, [r3, #0]
 800a946:	3301      	adds	r3, #1
 800a948:	4a0d      	ldr	r2, [pc, #52]	; (800a980 <xTaskIncrementTick+0x170>)
 800a94a:	6013      	str	r3, [r2, #0]
			vApplicationTickHook();
		}
		#endif
	}

	return xSwitchRequired;
 800a94c:	697b      	ldr	r3, [r7, #20]
}
 800a94e:	4618      	mov	r0, r3
 800a950:	3718      	adds	r7, #24
 800a952:	46bd      	mov	sp, r7
 800a954:	bd80      	pop	{r7, pc}
 800a956:	bf00      	nop
 800a958:	200013c0 	.word	0x200013c0
 800a95c:	2000139c 	.word	0x2000139c
 800a960:	20001350 	.word	0x20001350
 800a964:	20001354 	.word	0x20001354
 800a968:	200013b0 	.word	0x200013b0
 800a96c:	200013b8 	.word	0x200013b8
 800a970:	200013a0 	.word	0x200013a0
 800a974:	20000ec8 	.word	0x20000ec8
 800a978:	20000ec4 	.word	0x20000ec4
 800a97c:	200013ac 	.word	0x200013ac
 800a980:	200013a8 	.word	0x200013a8

0800a984 <vTaskSwitchContext>:

#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
 800a984:	b480      	push	{r7}
 800a986:	b085      	sub	sp, #20
 800a988:	af00      	add	r7, sp, #0
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a98a:	4b2a      	ldr	r3, [pc, #168]	; (800aa34 <vTaskSwitchContext+0xb0>)
 800a98c:	681b      	ldr	r3, [r3, #0]
 800a98e:	2b00      	cmp	r3, #0
 800a990:	d003      	beq.n	800a99a <vTaskSwitchContext+0x16>
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xYieldPending = pdTRUE;
 800a992:	4b29      	ldr	r3, [pc, #164]	; (800aa38 <vTaskSwitchContext+0xb4>)
 800a994:	2201      	movs	r2, #1
 800a996:	601a      	str	r2, [r3, #0]
			for additional information. */
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
		}
		#endif /* configUSE_NEWLIB_REENTRANT */
	}
}
 800a998:	e046      	b.n	800aa28 <vTaskSwitchContext+0xa4>
		xYieldPending = pdFALSE;
 800a99a:	4b27      	ldr	r3, [pc, #156]	; (800aa38 <vTaskSwitchContext+0xb4>)
 800a99c:	2200      	movs	r2, #0
 800a99e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a9a0:	4b26      	ldr	r3, [pc, #152]	; (800aa3c <vTaskSwitchContext+0xb8>)
 800a9a2:	681b      	ldr	r3, [r3, #0]
 800a9a4:	60fb      	str	r3, [r7, #12]
 800a9a6:	e010      	b.n	800a9ca <vTaskSwitchContext+0x46>
 800a9a8:	68fb      	ldr	r3, [r7, #12]
 800a9aa:	2b00      	cmp	r3, #0
 800a9ac:	d10a      	bne.n	800a9c4 <vTaskSwitchContext+0x40>
	__asm volatile
 800a9ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a9b2:	f383 8811 	msr	BASEPRI, r3
 800a9b6:	f3bf 8f6f 	isb	sy
 800a9ba:	f3bf 8f4f 	dsb	sy
 800a9be:	607b      	str	r3, [r7, #4]
}
 800a9c0:	bf00      	nop
 800a9c2:	e7fe      	b.n	800a9c2 <vTaskSwitchContext+0x3e>
 800a9c4:	68fb      	ldr	r3, [r7, #12]
 800a9c6:	3b01      	subs	r3, #1
 800a9c8:	60fb      	str	r3, [r7, #12]
 800a9ca:	491d      	ldr	r1, [pc, #116]	; (800aa40 <vTaskSwitchContext+0xbc>)
 800a9cc:	68fa      	ldr	r2, [r7, #12]
 800a9ce:	4613      	mov	r3, r2
 800a9d0:	009b      	lsls	r3, r3, #2
 800a9d2:	4413      	add	r3, r2
 800a9d4:	009b      	lsls	r3, r3, #2
 800a9d6:	440b      	add	r3, r1
 800a9d8:	681b      	ldr	r3, [r3, #0]
 800a9da:	2b00      	cmp	r3, #0
 800a9dc:	d0e4      	beq.n	800a9a8 <vTaskSwitchContext+0x24>
 800a9de:	68fa      	ldr	r2, [r7, #12]
 800a9e0:	4613      	mov	r3, r2
 800a9e2:	009b      	lsls	r3, r3, #2
 800a9e4:	4413      	add	r3, r2
 800a9e6:	009b      	lsls	r3, r3, #2
 800a9e8:	4a15      	ldr	r2, [pc, #84]	; (800aa40 <vTaskSwitchContext+0xbc>)
 800a9ea:	4413      	add	r3, r2
 800a9ec:	60bb      	str	r3, [r7, #8]
 800a9ee:	68bb      	ldr	r3, [r7, #8]
 800a9f0:	685b      	ldr	r3, [r3, #4]
 800a9f2:	685a      	ldr	r2, [r3, #4]
 800a9f4:	68bb      	ldr	r3, [r7, #8]
 800a9f6:	605a      	str	r2, [r3, #4]
 800a9f8:	68bb      	ldr	r3, [r7, #8]
 800a9fa:	685a      	ldr	r2, [r3, #4]
 800a9fc:	68bb      	ldr	r3, [r7, #8]
 800a9fe:	3308      	adds	r3, #8
 800aa00:	429a      	cmp	r2, r3
 800aa02:	d104      	bne.n	800aa0e <vTaskSwitchContext+0x8a>
 800aa04:	68bb      	ldr	r3, [r7, #8]
 800aa06:	685b      	ldr	r3, [r3, #4]
 800aa08:	685a      	ldr	r2, [r3, #4]
 800aa0a:	68bb      	ldr	r3, [r7, #8]
 800aa0c:	605a      	str	r2, [r3, #4]
 800aa0e:	68bb      	ldr	r3, [r7, #8]
 800aa10:	685b      	ldr	r3, [r3, #4]
 800aa12:	68db      	ldr	r3, [r3, #12]
 800aa14:	4a0b      	ldr	r2, [pc, #44]	; (800aa44 <vTaskSwitchContext+0xc0>)
 800aa16:	6013      	str	r3, [r2, #0]
 800aa18:	4a08      	ldr	r2, [pc, #32]	; (800aa3c <vTaskSwitchContext+0xb8>)
 800aa1a:	68fb      	ldr	r3, [r7, #12]
 800aa1c:	6013      	str	r3, [r2, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800aa1e:	4b09      	ldr	r3, [pc, #36]	; (800aa44 <vTaskSwitchContext+0xc0>)
 800aa20:	681b      	ldr	r3, [r3, #0]
 800aa22:	3354      	adds	r3, #84	; 0x54
 800aa24:	4a08      	ldr	r2, [pc, #32]	; (800aa48 <vTaskSwitchContext+0xc4>)
 800aa26:	6013      	str	r3, [r2, #0]
}
 800aa28:	bf00      	nop
 800aa2a:	3714      	adds	r7, #20
 800aa2c:	46bd      	mov	sp, r7
 800aa2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa32:	4770      	bx	lr
 800aa34:	200013c0 	.word	0x200013c0
 800aa38:	200013ac 	.word	0x200013ac
 800aa3c:	200013a0 	.word	0x200013a0
 800aa40:	20000ec8 	.word	0x20000ec8
 800aa44:	20000ec4 	.word	0x20000ec4
 800aa48:	200000bc 	.word	0x200000bc

0800aa4c <vTaskPlaceOnEventList>:
/*-----------------------------------------------------------*/

void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
{
 800aa4c:	b580      	push	{r7, lr}
 800aa4e:	b084      	sub	sp, #16
 800aa50:	af00      	add	r7, sp, #0
 800aa52:	6078      	str	r0, [r7, #4]
 800aa54:	6039      	str	r1, [r7, #0]
	configASSERT( pxEventList );
 800aa56:	687b      	ldr	r3, [r7, #4]
 800aa58:	2b00      	cmp	r3, #0
 800aa5a:	d10a      	bne.n	800aa72 <vTaskPlaceOnEventList+0x26>
	__asm volatile
 800aa5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa60:	f383 8811 	msr	BASEPRI, r3
 800aa64:	f3bf 8f6f 	isb	sy
 800aa68:	f3bf 8f4f 	dsb	sy
 800aa6c:	60fb      	str	r3, [r7, #12]
}
 800aa6e:	bf00      	nop
 800aa70:	e7fe      	b.n	800aa70 <vTaskPlaceOnEventList+0x24>

	/* Place the event list item of the TCB in the appropriate event list.
	This is placed in the list in priority order so the highest priority task
	is the first to be woken by the event.  The queue that contains the event
	list is locked, preventing simultaneous access from interrupts. */
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800aa72:	4b07      	ldr	r3, [pc, #28]	; (800aa90 <vTaskPlaceOnEventList+0x44>)
 800aa74:	681b      	ldr	r3, [r3, #0]
 800aa76:	3318      	adds	r3, #24
 800aa78:	4619      	mov	r1, r3
 800aa7a:	6878      	ldr	r0, [r7, #4]
 800aa7c:	f7fe fe61 	bl	8009742 <vListInsert>

	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800aa80:	2101      	movs	r1, #1
 800aa82:	6838      	ldr	r0, [r7, #0]
 800aa84:	f000 fa80 	bl	800af88 <prvAddCurrentTaskToDelayedList>
}
 800aa88:	bf00      	nop
 800aa8a:	3710      	adds	r7, #16
 800aa8c:	46bd      	mov	sp, r7
 800aa8e:	bd80      	pop	{r7, pc}
 800aa90:	20000ec4 	.word	0x20000ec4

0800aa94 <vTaskPlaceOnEventListRestricted>:
/*-----------------------------------------------------------*/

#if( configUSE_TIMERS == 1 )

	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800aa94:	b580      	push	{r7, lr}
 800aa96:	b086      	sub	sp, #24
 800aa98:	af00      	add	r7, sp, #0
 800aa9a:	60f8      	str	r0, [r7, #12]
 800aa9c:	60b9      	str	r1, [r7, #8]
 800aa9e:	607a      	str	r2, [r7, #4]
		configASSERT( pxEventList );
 800aaa0:	68fb      	ldr	r3, [r7, #12]
 800aaa2:	2b00      	cmp	r3, #0
 800aaa4:	d10a      	bne.n	800aabc <vTaskPlaceOnEventListRestricted+0x28>
	__asm volatile
 800aaa6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aaaa:	f383 8811 	msr	BASEPRI, r3
 800aaae:	f3bf 8f6f 	isb	sy
 800aab2:	f3bf 8f4f 	dsb	sy
 800aab6:	617b      	str	r3, [r7, #20]
}
 800aab8:	bf00      	nop
 800aaba:	e7fe      	b.n	800aaba <vTaskPlaceOnEventListRestricted+0x26>

		/* Place the event list item of the TCB in the appropriate event list.
		In this case it is assume that this is the only task that is going to
		be waiting on this event list, so the faster vListInsertEnd() function
		can be used in place of vListInsert. */
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800aabc:	4b0a      	ldr	r3, [pc, #40]	; (800aae8 <vTaskPlaceOnEventListRestricted+0x54>)
 800aabe:	681b      	ldr	r3, [r3, #0]
 800aac0:	3318      	adds	r3, #24
 800aac2:	4619      	mov	r1, r3
 800aac4:	68f8      	ldr	r0, [r7, #12]
 800aac6:	f7fe fe18 	bl	80096fa <vListInsertEnd>

		/* If the task should block indefinitely then set the block time to a
		value that will be recognised as an indefinite delay inside the
		prvAddCurrentTaskToDelayedList() function. */
		if( xWaitIndefinitely != pdFALSE )
 800aaca:	687b      	ldr	r3, [r7, #4]
 800aacc:	2b00      	cmp	r3, #0
 800aace:	d002      	beq.n	800aad6 <vTaskPlaceOnEventListRestricted+0x42>
		{
			xTicksToWait = portMAX_DELAY;
 800aad0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800aad4:	60bb      	str	r3, [r7, #8]
		}

		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800aad6:	6879      	ldr	r1, [r7, #4]
 800aad8:	68b8      	ldr	r0, [r7, #8]
 800aada:	f000 fa55 	bl	800af88 <prvAddCurrentTaskToDelayedList>
	}
 800aade:	bf00      	nop
 800aae0:	3718      	adds	r7, #24
 800aae2:	46bd      	mov	sp, r7
 800aae4:	bd80      	pop	{r7, pc}
 800aae6:	bf00      	nop
 800aae8:	20000ec4 	.word	0x20000ec4

0800aaec <xTaskRemoveFromEventList>:

#endif /* configUSE_TIMERS */
/*-----------------------------------------------------------*/

BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
{
 800aaec:	b580      	push	{r7, lr}
 800aaee:	b086      	sub	sp, #24
 800aaf0:	af00      	add	r7, sp, #0
 800aaf2:	6078      	str	r0, [r7, #4]
	get called - the lock count on the queue will get modified instead.  This
	means exclusive access to the event list is guaranteed here.

	This function assumes that a check has already been made to ensure that
	pxEventList is not empty. */
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800aaf4:	687b      	ldr	r3, [r7, #4]
 800aaf6:	68db      	ldr	r3, [r3, #12]
 800aaf8:	68db      	ldr	r3, [r3, #12]
 800aafa:	613b      	str	r3, [r7, #16]
	configASSERT( pxUnblockedTCB );
 800aafc:	693b      	ldr	r3, [r7, #16]
 800aafe:	2b00      	cmp	r3, #0
 800ab00:	d10a      	bne.n	800ab18 <xTaskRemoveFromEventList+0x2c>
	__asm volatile
 800ab02:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab06:	f383 8811 	msr	BASEPRI, r3
 800ab0a:	f3bf 8f6f 	isb	sy
 800ab0e:	f3bf 8f4f 	dsb	sy
 800ab12:	60fb      	str	r3, [r7, #12]
}
 800ab14:	bf00      	nop
 800ab16:	e7fe      	b.n	800ab16 <xTaskRemoveFromEventList+0x2a>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800ab18:	693b      	ldr	r3, [r7, #16]
 800ab1a:	3318      	adds	r3, #24
 800ab1c:	4618      	mov	r0, r3
 800ab1e:	f7fe fe49 	bl	80097b4 <uxListRemove>

	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ab22:	4b1e      	ldr	r3, [pc, #120]	; (800ab9c <xTaskRemoveFromEventList+0xb0>)
 800ab24:	681b      	ldr	r3, [r3, #0]
 800ab26:	2b00      	cmp	r3, #0
 800ab28:	d11d      	bne.n	800ab66 <xTaskRemoveFromEventList+0x7a>
	{
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800ab2a:	693b      	ldr	r3, [r7, #16]
 800ab2c:	3304      	adds	r3, #4
 800ab2e:	4618      	mov	r0, r3
 800ab30:	f7fe fe40 	bl	80097b4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800ab34:	693b      	ldr	r3, [r7, #16]
 800ab36:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ab38:	4b19      	ldr	r3, [pc, #100]	; (800aba0 <xTaskRemoveFromEventList+0xb4>)
 800ab3a:	681b      	ldr	r3, [r3, #0]
 800ab3c:	429a      	cmp	r2, r3
 800ab3e:	d903      	bls.n	800ab48 <xTaskRemoveFromEventList+0x5c>
 800ab40:	693b      	ldr	r3, [r7, #16]
 800ab42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ab44:	4a16      	ldr	r2, [pc, #88]	; (800aba0 <xTaskRemoveFromEventList+0xb4>)
 800ab46:	6013      	str	r3, [r2, #0]
 800ab48:	693b      	ldr	r3, [r7, #16]
 800ab4a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ab4c:	4613      	mov	r3, r2
 800ab4e:	009b      	lsls	r3, r3, #2
 800ab50:	4413      	add	r3, r2
 800ab52:	009b      	lsls	r3, r3, #2
 800ab54:	4a13      	ldr	r2, [pc, #76]	; (800aba4 <xTaskRemoveFromEventList+0xb8>)
 800ab56:	441a      	add	r2, r3
 800ab58:	693b      	ldr	r3, [r7, #16]
 800ab5a:	3304      	adds	r3, #4
 800ab5c:	4619      	mov	r1, r3
 800ab5e:	4610      	mov	r0, r2
 800ab60:	f7fe fdcb 	bl	80096fa <vListInsertEnd>
 800ab64:	e005      	b.n	800ab72 <xTaskRemoveFromEventList+0x86>
	}
	else
	{
		/* The delayed and ready lists cannot be accessed, so hold this task
		pending until the scheduler is resumed. */
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ab66:	693b      	ldr	r3, [r7, #16]
 800ab68:	3318      	adds	r3, #24
 800ab6a:	4619      	mov	r1, r3
 800ab6c:	480e      	ldr	r0, [pc, #56]	; (800aba8 <xTaskRemoveFromEventList+0xbc>)
 800ab6e:	f7fe fdc4 	bl	80096fa <vListInsertEnd>
	}

	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ab72:	693b      	ldr	r3, [r7, #16]
 800ab74:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ab76:	4b0d      	ldr	r3, [pc, #52]	; (800abac <xTaskRemoveFromEventList+0xc0>)
 800ab78:	681b      	ldr	r3, [r3, #0]
 800ab7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ab7c:	429a      	cmp	r2, r3
 800ab7e:	d905      	bls.n	800ab8c <xTaskRemoveFromEventList+0xa0>
	{
		/* Return true if the task removed from the event list has a higher
		priority than the calling task.  This allows the calling task to know if
		it should force a context switch now. */
		xReturn = pdTRUE;
 800ab80:	2301      	movs	r3, #1
 800ab82:	617b      	str	r3, [r7, #20]

		/* Mark that a yield is pending in case the user is not using the
		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
		xYieldPending = pdTRUE;
 800ab84:	4b0a      	ldr	r3, [pc, #40]	; (800abb0 <xTaskRemoveFromEventList+0xc4>)
 800ab86:	2201      	movs	r2, #1
 800ab88:	601a      	str	r2, [r3, #0]
 800ab8a:	e001      	b.n	800ab90 <xTaskRemoveFromEventList+0xa4>
	}
	else
	{
		xReturn = pdFALSE;
 800ab8c:	2300      	movs	r3, #0
 800ab8e:	617b      	str	r3, [r7, #20]
	}

	return xReturn;
 800ab90:	697b      	ldr	r3, [r7, #20]
}
 800ab92:	4618      	mov	r0, r3
 800ab94:	3718      	adds	r7, #24
 800ab96:	46bd      	mov	sp, r7
 800ab98:	bd80      	pop	{r7, pc}
 800ab9a:	bf00      	nop
 800ab9c:	200013c0 	.word	0x200013c0
 800aba0:	200013a0 	.word	0x200013a0
 800aba4:	20000ec8 	.word	0x20000ec8
 800aba8:	20001358 	.word	0x20001358
 800abac:	20000ec4 	.word	0x20000ec4
 800abb0:	200013ac 	.word	0x200013ac

0800abb4 <vTaskInternalSetTimeOutState>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
{
 800abb4:	b480      	push	{r7}
 800abb6:	b083      	sub	sp, #12
 800abb8:	af00      	add	r7, sp, #0
 800abba:	6078      	str	r0, [r7, #4]
	/* For internal use only as it does not use a critical section. */
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800abbc:	4b06      	ldr	r3, [pc, #24]	; (800abd8 <vTaskInternalSetTimeOutState+0x24>)
 800abbe:	681a      	ldr	r2, [r3, #0]
 800abc0:	687b      	ldr	r3, [r7, #4]
 800abc2:	601a      	str	r2, [r3, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800abc4:	4b05      	ldr	r3, [pc, #20]	; (800abdc <vTaskInternalSetTimeOutState+0x28>)
 800abc6:	681a      	ldr	r2, [r3, #0]
 800abc8:	687b      	ldr	r3, [r7, #4]
 800abca:	605a      	str	r2, [r3, #4]
}
 800abcc:	bf00      	nop
 800abce:	370c      	adds	r7, #12
 800abd0:	46bd      	mov	sp, r7
 800abd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abd6:	4770      	bx	lr
 800abd8:	200013b0 	.word	0x200013b0
 800abdc:	2000139c 	.word	0x2000139c

0800abe0 <xTaskCheckForTimeOut>:
/*-----------------------------------------------------------*/

BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
{
 800abe0:	b580      	push	{r7, lr}
 800abe2:	b088      	sub	sp, #32
 800abe4:	af00      	add	r7, sp, #0
 800abe6:	6078      	str	r0, [r7, #4]
 800abe8:	6039      	str	r1, [r7, #0]
BaseType_t xReturn;

	configASSERT( pxTimeOut );
 800abea:	687b      	ldr	r3, [r7, #4]
 800abec:	2b00      	cmp	r3, #0
 800abee:	d10a      	bne.n	800ac06 <xTaskCheckForTimeOut+0x26>
	__asm volatile
 800abf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800abf4:	f383 8811 	msr	BASEPRI, r3
 800abf8:	f3bf 8f6f 	isb	sy
 800abfc:	f3bf 8f4f 	dsb	sy
 800ac00:	613b      	str	r3, [r7, #16]
}
 800ac02:	bf00      	nop
 800ac04:	e7fe      	b.n	800ac04 <xTaskCheckForTimeOut+0x24>
	configASSERT( pxTicksToWait );
 800ac06:	683b      	ldr	r3, [r7, #0]
 800ac08:	2b00      	cmp	r3, #0
 800ac0a:	d10a      	bne.n	800ac22 <xTaskCheckForTimeOut+0x42>
	__asm volatile
 800ac0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac10:	f383 8811 	msr	BASEPRI, r3
 800ac14:	f3bf 8f6f 	isb	sy
 800ac18:	f3bf 8f4f 	dsb	sy
 800ac1c:	60fb      	str	r3, [r7, #12]
}
 800ac1e:	bf00      	nop
 800ac20:	e7fe      	b.n	800ac20 <xTaskCheckForTimeOut+0x40>

	taskENTER_CRITICAL();
 800ac22:	f000 fe7f 	bl	800b924 <vPortEnterCritical>
	{
		/* Minor optimisation.  The tick count cannot change in this block. */
		const TickType_t xConstTickCount = xTickCount;
 800ac26:	4b1d      	ldr	r3, [pc, #116]	; (800ac9c <xTaskCheckForTimeOut+0xbc>)
 800ac28:	681b      	ldr	r3, [r3, #0]
 800ac2a:	61bb      	str	r3, [r7, #24]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800ac2c:	687b      	ldr	r3, [r7, #4]
 800ac2e:	685b      	ldr	r3, [r3, #4]
 800ac30:	69ba      	ldr	r2, [r7, #24]
 800ac32:	1ad3      	subs	r3, r2, r3
 800ac34:	617b      	str	r3, [r7, #20]
			}
			else
		#endif

		#if ( INCLUDE_vTaskSuspend == 1 )
			if( *pxTicksToWait == portMAX_DELAY )
 800ac36:	683b      	ldr	r3, [r7, #0]
 800ac38:	681b      	ldr	r3, [r3, #0]
 800ac3a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800ac3e:	d102      	bne.n	800ac46 <xTaskCheckForTimeOut+0x66>
			{
				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
				specified is the maximum block time then the task should block
				indefinitely, and therefore never time out. */
				xReturn = pdFALSE;
 800ac40:	2300      	movs	r3, #0
 800ac42:	61fb      	str	r3, [r7, #28]
 800ac44:	e023      	b.n	800ac8e <xTaskCheckForTimeOut+0xae>
			}
			else
		#endif

		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800ac46:	687b      	ldr	r3, [r7, #4]
 800ac48:	681a      	ldr	r2, [r3, #0]
 800ac4a:	4b15      	ldr	r3, [pc, #84]	; (800aca0 <xTaskCheckForTimeOut+0xc0>)
 800ac4c:	681b      	ldr	r3, [r3, #0]
 800ac4e:	429a      	cmp	r2, r3
 800ac50:	d007      	beq.n	800ac62 <xTaskCheckForTimeOut+0x82>
 800ac52:	687b      	ldr	r3, [r7, #4]
 800ac54:	685b      	ldr	r3, [r3, #4]
 800ac56:	69ba      	ldr	r2, [r7, #24]
 800ac58:	429a      	cmp	r2, r3
 800ac5a:	d302      	bcc.n	800ac62 <xTaskCheckForTimeOut+0x82>
			/* The tick count is greater than the time at which
			vTaskSetTimeout() was called, but has also overflowed since
			vTaskSetTimeOut() was called.  It must have wrapped all the way
			around and gone past again. This passed since vTaskSetTimeout()
			was called. */
			xReturn = pdTRUE;
 800ac5c:	2301      	movs	r3, #1
 800ac5e:	61fb      	str	r3, [r7, #28]
 800ac60:	e015      	b.n	800ac8e <xTaskCheckForTimeOut+0xae>
		}
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800ac62:	683b      	ldr	r3, [r7, #0]
 800ac64:	681b      	ldr	r3, [r3, #0]
 800ac66:	697a      	ldr	r2, [r7, #20]
 800ac68:	429a      	cmp	r2, r3
 800ac6a:	d20b      	bcs.n	800ac84 <xTaskCheckForTimeOut+0xa4>
		{
			/* Not a genuine timeout. Adjust parameters for time remaining. */
			*pxTicksToWait -= xElapsedTime;
 800ac6c:	683b      	ldr	r3, [r7, #0]
 800ac6e:	681a      	ldr	r2, [r3, #0]
 800ac70:	697b      	ldr	r3, [r7, #20]
 800ac72:	1ad2      	subs	r2, r2, r3
 800ac74:	683b      	ldr	r3, [r7, #0]
 800ac76:	601a      	str	r2, [r3, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800ac78:	6878      	ldr	r0, [r7, #4]
 800ac7a:	f7ff ff9b 	bl	800abb4 <vTaskInternalSetTimeOutState>
			xReturn = pdFALSE;
 800ac7e:	2300      	movs	r3, #0
 800ac80:	61fb      	str	r3, [r7, #28]
 800ac82:	e004      	b.n	800ac8e <xTaskCheckForTimeOut+0xae>
		}
		else
		{
			*pxTicksToWait = 0;
 800ac84:	683b      	ldr	r3, [r7, #0]
 800ac86:	2200      	movs	r2, #0
 800ac88:	601a      	str	r2, [r3, #0]
			xReturn = pdTRUE;
 800ac8a:	2301      	movs	r3, #1
 800ac8c:	61fb      	str	r3, [r7, #28]
		}
	}
	taskEXIT_CRITICAL();
 800ac8e:	f000 fe79 	bl	800b984 <vPortExitCritical>

	return xReturn;
 800ac92:	69fb      	ldr	r3, [r7, #28]
}
 800ac94:	4618      	mov	r0, r3
 800ac96:	3720      	adds	r7, #32
 800ac98:	46bd      	mov	sp, r7
 800ac9a:	bd80      	pop	{r7, pc}
 800ac9c:	2000139c 	.word	0x2000139c
 800aca0:	200013b0 	.word	0x200013b0

0800aca4 <vTaskMissedYield>:
/*-----------------------------------------------------------*/

void vTaskMissedYield( void )
{
 800aca4:	b480      	push	{r7}
 800aca6:	af00      	add	r7, sp, #0
	xYieldPending = pdTRUE;
 800aca8:	4b03      	ldr	r3, [pc, #12]	; (800acb8 <vTaskMissedYield+0x14>)
 800acaa:	2201      	movs	r2, #1
 800acac:	601a      	str	r2, [r3, #0]
}
 800acae:	bf00      	nop
 800acb0:	46bd      	mov	sp, r7
 800acb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acb6:	4770      	bx	lr
 800acb8:	200013ac 	.word	0x200013ac

0800acbc <prvIdleTask>:
 *
 * void prvIdleTask( void *pvParameters );
 *
 */
static portTASK_FUNCTION( prvIdleTask, pvParameters )
{
 800acbc:	b580      	push	{r7, lr}
 800acbe:	b082      	sub	sp, #8
 800acc0:	af00      	add	r7, sp, #0
 800acc2:	6078      	str	r0, [r7, #4]

	for( ;; )
	{
		/* See if any tasks have deleted themselves - if so then the idle task
		is responsible for freeing the deleted task's TCB and stack. */
		prvCheckTasksWaitingTermination();
 800acc4:	f000 f852 	bl	800ad6c <prvCheckTasksWaitingTermination>

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800acc8:	4b06      	ldr	r3, [pc, #24]	; (800ace4 <prvIdleTask+0x28>)
 800acca:	681b      	ldr	r3, [r3, #0]
 800accc:	2b01      	cmp	r3, #1
 800acce:	d9f9      	bls.n	800acc4 <prvIdleTask+0x8>
			{
				taskYIELD();
 800acd0:	4b05      	ldr	r3, [pc, #20]	; (800ace8 <prvIdleTask+0x2c>)
 800acd2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800acd6:	601a      	str	r2, [r3, #0]
 800acd8:	f3bf 8f4f 	dsb	sy
 800acdc:	f3bf 8f6f 	isb	sy
		prvCheckTasksWaitingTermination();
 800ace0:	e7f0      	b.n	800acc4 <prvIdleTask+0x8>
 800ace2:	bf00      	nop
 800ace4:	20000ec8 	.word	0x20000ec8
 800ace8:	e000ed04 	.word	0xe000ed04

0800acec <prvInitialiseTaskLists>:

#endif /* portUSING_MPU_WRAPPERS */
/*-----------------------------------------------------------*/

static void prvInitialiseTaskLists( void )
{
 800acec:	b580      	push	{r7, lr}
 800acee:	b082      	sub	sp, #8
 800acf0:	af00      	add	r7, sp, #0
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800acf2:	2300      	movs	r3, #0
 800acf4:	607b      	str	r3, [r7, #4]
 800acf6:	e00c      	b.n	800ad12 <prvInitialiseTaskLists+0x26>
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800acf8:	687a      	ldr	r2, [r7, #4]
 800acfa:	4613      	mov	r3, r2
 800acfc:	009b      	lsls	r3, r3, #2
 800acfe:	4413      	add	r3, r2
 800ad00:	009b      	lsls	r3, r3, #2
 800ad02:	4a12      	ldr	r2, [pc, #72]	; (800ad4c <prvInitialiseTaskLists+0x60>)
 800ad04:	4413      	add	r3, r2
 800ad06:	4618      	mov	r0, r3
 800ad08:	f7fe fcca 	bl	80096a0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ad0c:	687b      	ldr	r3, [r7, #4]
 800ad0e:	3301      	adds	r3, #1
 800ad10:	607b      	str	r3, [r7, #4]
 800ad12:	687b      	ldr	r3, [r7, #4]
 800ad14:	2b37      	cmp	r3, #55	; 0x37
 800ad16:	d9ef      	bls.n	800acf8 <prvInitialiseTaskLists+0xc>
	}

	vListInitialise( &xDelayedTaskList1 );
 800ad18:	480d      	ldr	r0, [pc, #52]	; (800ad50 <prvInitialiseTaskLists+0x64>)
 800ad1a:	f7fe fcc1 	bl	80096a0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800ad1e:	480d      	ldr	r0, [pc, #52]	; (800ad54 <prvInitialiseTaskLists+0x68>)
 800ad20:	f7fe fcbe 	bl	80096a0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800ad24:	480c      	ldr	r0, [pc, #48]	; (800ad58 <prvInitialiseTaskLists+0x6c>)
 800ad26:	f7fe fcbb 	bl	80096a0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800ad2a:	480c      	ldr	r0, [pc, #48]	; (800ad5c <prvInitialiseTaskLists+0x70>)
 800ad2c:	f7fe fcb8 	bl	80096a0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800ad30:	480b      	ldr	r0, [pc, #44]	; (800ad60 <prvInitialiseTaskLists+0x74>)
 800ad32:	f7fe fcb5 	bl	80096a0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800ad36:	4b0b      	ldr	r3, [pc, #44]	; (800ad64 <prvInitialiseTaskLists+0x78>)
 800ad38:	4a05      	ldr	r2, [pc, #20]	; (800ad50 <prvInitialiseTaskLists+0x64>)
 800ad3a:	601a      	str	r2, [r3, #0]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800ad3c:	4b0a      	ldr	r3, [pc, #40]	; (800ad68 <prvInitialiseTaskLists+0x7c>)
 800ad3e:	4a05      	ldr	r2, [pc, #20]	; (800ad54 <prvInitialiseTaskLists+0x68>)
 800ad40:	601a      	str	r2, [r3, #0]
}
 800ad42:	bf00      	nop
 800ad44:	3708      	adds	r7, #8
 800ad46:	46bd      	mov	sp, r7
 800ad48:	bd80      	pop	{r7, pc}
 800ad4a:	bf00      	nop
 800ad4c:	20000ec8 	.word	0x20000ec8
 800ad50:	20001328 	.word	0x20001328
 800ad54:	2000133c 	.word	0x2000133c
 800ad58:	20001358 	.word	0x20001358
 800ad5c:	2000136c 	.word	0x2000136c
 800ad60:	20001384 	.word	0x20001384
 800ad64:	20001350 	.word	0x20001350
 800ad68:	20001354 	.word	0x20001354

0800ad6c <prvCheckTasksWaitingTermination>:
/*-----------------------------------------------------------*/

static void prvCheckTasksWaitingTermination( void )
{
 800ad6c:	b580      	push	{r7, lr}
 800ad6e:	b082      	sub	sp, #8
 800ad70:	af00      	add	r7, sp, #0
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ad72:	e019      	b.n	800ada8 <prvCheckTasksWaitingTermination+0x3c>
		{
			taskENTER_CRITICAL();
 800ad74:	f000 fdd6 	bl	800b924 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ad78:	4b10      	ldr	r3, [pc, #64]	; (800adbc <prvCheckTasksWaitingTermination+0x50>)
 800ad7a:	68db      	ldr	r3, [r3, #12]
 800ad7c:	68db      	ldr	r3, [r3, #12]
 800ad7e:	607b      	str	r3, [r7, #4]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ad80:	687b      	ldr	r3, [r7, #4]
 800ad82:	3304      	adds	r3, #4
 800ad84:	4618      	mov	r0, r3
 800ad86:	f7fe fd15 	bl	80097b4 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800ad8a:	4b0d      	ldr	r3, [pc, #52]	; (800adc0 <prvCheckTasksWaitingTermination+0x54>)
 800ad8c:	681b      	ldr	r3, [r3, #0]
 800ad8e:	3b01      	subs	r3, #1
 800ad90:	4a0b      	ldr	r2, [pc, #44]	; (800adc0 <prvCheckTasksWaitingTermination+0x54>)
 800ad92:	6013      	str	r3, [r2, #0]
				--uxDeletedTasksWaitingCleanUp;
 800ad94:	4b0b      	ldr	r3, [pc, #44]	; (800adc4 <prvCheckTasksWaitingTermination+0x58>)
 800ad96:	681b      	ldr	r3, [r3, #0]
 800ad98:	3b01      	subs	r3, #1
 800ad9a:	4a0a      	ldr	r2, [pc, #40]	; (800adc4 <prvCheckTasksWaitingTermination+0x58>)
 800ad9c:	6013      	str	r3, [r2, #0]
			}
			taskEXIT_CRITICAL();
 800ad9e:	f000 fdf1 	bl	800b984 <vPortExitCritical>

			prvDeleteTCB( pxTCB );
 800ada2:	6878      	ldr	r0, [r7, #4]
 800ada4:	f000 f810 	bl	800adc8 <prvDeleteTCB>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ada8:	4b06      	ldr	r3, [pc, #24]	; (800adc4 <prvCheckTasksWaitingTermination+0x58>)
 800adaa:	681b      	ldr	r3, [r3, #0]
 800adac:	2b00      	cmp	r3, #0
 800adae:	d1e1      	bne.n	800ad74 <prvCheckTasksWaitingTermination+0x8>
		}
	}
	#endif /* INCLUDE_vTaskDelete */
}
 800adb0:	bf00      	nop
 800adb2:	bf00      	nop
 800adb4:	3708      	adds	r7, #8
 800adb6:	46bd      	mov	sp, r7
 800adb8:	bd80      	pop	{r7, pc}
 800adba:	bf00      	nop
 800adbc:	2000136c 	.word	0x2000136c
 800adc0:	20001398 	.word	0x20001398
 800adc4:	20001380 	.word	0x20001380

0800adc8 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
 800adc8:	b580      	push	{r7, lr}
 800adca:	b084      	sub	sp, #16
 800adcc:	af00      	add	r7, sp, #0
 800adce:	6078      	str	r0, [r7, #4]
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800add0:	687b      	ldr	r3, [r7, #4]
 800add2:	3354      	adds	r3, #84	; 0x54
 800add4:	4618      	mov	r0, r3
 800add6:	f01c f90b 	bl	8026ff0 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800adda:	687b      	ldr	r3, [r7, #4]
 800addc:	f893 30b9 	ldrb.w	r3, [r3, #185]	; 0xb9
 800ade0:	2b00      	cmp	r3, #0
 800ade2:	d108      	bne.n	800adf6 <prvDeleteTCB+0x2e>
			{
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
 800ade4:	687b      	ldr	r3, [r7, #4]
 800ade6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ade8:	4618      	mov	r0, r3
 800adea:	f000 ff89 	bl	800bd00 <vPortFree>
				vPortFree( pxTCB );
 800adee:	6878      	ldr	r0, [r7, #4]
 800adf0:	f000 ff86 	bl	800bd00 <vPortFree>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
	}
 800adf4:	e018      	b.n	800ae28 <prvDeleteTCB+0x60>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800adf6:	687b      	ldr	r3, [r7, #4]
 800adf8:	f893 30b9 	ldrb.w	r3, [r3, #185]	; 0xb9
 800adfc:	2b01      	cmp	r3, #1
 800adfe:	d103      	bne.n	800ae08 <prvDeleteTCB+0x40>
				vPortFree( pxTCB );
 800ae00:	6878      	ldr	r0, [r7, #4]
 800ae02:	f000 ff7d 	bl	800bd00 <vPortFree>
	}
 800ae06:	e00f      	b.n	800ae28 <prvDeleteTCB+0x60>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800ae08:	687b      	ldr	r3, [r7, #4]
 800ae0a:	f893 30b9 	ldrb.w	r3, [r3, #185]	; 0xb9
 800ae0e:	2b02      	cmp	r3, #2
 800ae10:	d00a      	beq.n	800ae28 <prvDeleteTCB+0x60>
	__asm volatile
 800ae12:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ae16:	f383 8811 	msr	BASEPRI, r3
 800ae1a:	f3bf 8f6f 	isb	sy
 800ae1e:	f3bf 8f4f 	dsb	sy
 800ae22:	60fb      	str	r3, [r7, #12]
}
 800ae24:	bf00      	nop
 800ae26:	e7fe      	b.n	800ae26 <prvDeleteTCB+0x5e>
	}
 800ae28:	bf00      	nop
 800ae2a:	3710      	adds	r7, #16
 800ae2c:	46bd      	mov	sp, r7
 800ae2e:	bd80      	pop	{r7, pc}

0800ae30 <prvResetNextTaskUnblockTime>:

#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
 800ae30:	b480      	push	{r7}
 800ae32:	b083      	sub	sp, #12
 800ae34:	af00      	add	r7, sp, #0
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ae36:	4b0c      	ldr	r3, [pc, #48]	; (800ae68 <prvResetNextTaskUnblockTime+0x38>)
 800ae38:	681b      	ldr	r3, [r3, #0]
 800ae3a:	681b      	ldr	r3, [r3, #0]
 800ae3c:	2b00      	cmp	r3, #0
 800ae3e:	d104      	bne.n	800ae4a <prvResetNextTaskUnblockTime+0x1a>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800ae40:	4b0a      	ldr	r3, [pc, #40]	; (800ae6c <prvResetNextTaskUnblockTime+0x3c>)
 800ae42:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800ae46:	601a      	str	r2, [r3, #0]
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
	}
}
 800ae48:	e008      	b.n	800ae5c <prvResetNextTaskUnblockTime+0x2c>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ae4a:	4b07      	ldr	r3, [pc, #28]	; (800ae68 <prvResetNextTaskUnblockTime+0x38>)
 800ae4c:	681b      	ldr	r3, [r3, #0]
 800ae4e:	68db      	ldr	r3, [r3, #12]
 800ae50:	68db      	ldr	r3, [r3, #12]
 800ae52:	607b      	str	r3, [r7, #4]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ae54:	687b      	ldr	r3, [r7, #4]
 800ae56:	685b      	ldr	r3, [r3, #4]
 800ae58:	4a04      	ldr	r2, [pc, #16]	; (800ae6c <prvResetNextTaskUnblockTime+0x3c>)
 800ae5a:	6013      	str	r3, [r2, #0]
}
 800ae5c:	bf00      	nop
 800ae5e:	370c      	adds	r7, #12
 800ae60:	46bd      	mov	sp, r7
 800ae62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae66:	4770      	bx	lr
 800ae68:	20001350 	.word	0x20001350
 800ae6c:	200013b8 	.word	0x200013b8

0800ae70 <xTaskGetSchedulerState>:
/*-----------------------------------------------------------*/

#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )

	BaseType_t xTaskGetSchedulerState( void )
	{
 800ae70:	b480      	push	{r7}
 800ae72:	b083      	sub	sp, #12
 800ae74:	af00      	add	r7, sp, #0
	BaseType_t xReturn;

		if( xSchedulerRunning == pdFALSE )
 800ae76:	4b0b      	ldr	r3, [pc, #44]	; (800aea4 <xTaskGetSchedulerState+0x34>)
 800ae78:	681b      	ldr	r3, [r3, #0]
 800ae7a:	2b00      	cmp	r3, #0
 800ae7c:	d102      	bne.n	800ae84 <xTaskGetSchedulerState+0x14>
		{
			xReturn = taskSCHEDULER_NOT_STARTED;
 800ae7e:	2301      	movs	r3, #1
 800ae80:	607b      	str	r3, [r7, #4]
 800ae82:	e008      	b.n	800ae96 <xTaskGetSchedulerState+0x26>
		}
		else
		{
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ae84:	4b08      	ldr	r3, [pc, #32]	; (800aea8 <xTaskGetSchedulerState+0x38>)
 800ae86:	681b      	ldr	r3, [r3, #0]
 800ae88:	2b00      	cmp	r3, #0
 800ae8a:	d102      	bne.n	800ae92 <xTaskGetSchedulerState+0x22>
			{
				xReturn = taskSCHEDULER_RUNNING;
 800ae8c:	2302      	movs	r3, #2
 800ae8e:	607b      	str	r3, [r7, #4]
 800ae90:	e001      	b.n	800ae96 <xTaskGetSchedulerState+0x26>
			}
			else
			{
				xReturn = taskSCHEDULER_SUSPENDED;
 800ae92:	2300      	movs	r3, #0
 800ae94:	607b      	str	r3, [r7, #4]
			}
		}

		return xReturn;
 800ae96:	687b      	ldr	r3, [r7, #4]
	}
 800ae98:	4618      	mov	r0, r3
 800ae9a:	370c      	adds	r7, #12
 800ae9c:	46bd      	mov	sp, r7
 800ae9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aea2:	4770      	bx	lr
 800aea4:	200013a4 	.word	0x200013a4
 800aea8:	200013c0 	.word	0x200013c0

0800aeac <xTaskPriorityDisinherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
	{
 800aeac:	b580      	push	{r7, lr}
 800aeae:	b086      	sub	sp, #24
 800aeb0:	af00      	add	r7, sp, #0
 800aeb2:	6078      	str	r0, [r7, #4]
	TCB_t * const pxTCB = pxMutexHolder;
 800aeb4:	687b      	ldr	r3, [r7, #4]
 800aeb6:	613b      	str	r3, [r7, #16]
	BaseType_t xReturn = pdFALSE;
 800aeb8:	2300      	movs	r3, #0
 800aeba:	617b      	str	r3, [r7, #20]

		if( pxMutexHolder != NULL )
 800aebc:	687b      	ldr	r3, [r7, #4]
 800aebe:	2b00      	cmp	r3, #0
 800aec0:	d056      	beq.n	800af70 <xTaskPriorityDisinherit+0xc4>
		{
			/* A task can only have an inherited priority if it holds the mutex.
			If the mutex is held by a task then it cannot be given from an
			interrupt, and if a mutex is given by the holding task then it must
			be the running state task. */
			configASSERT( pxTCB == pxCurrentTCB );
 800aec2:	4b2e      	ldr	r3, [pc, #184]	; (800af7c <xTaskPriorityDisinherit+0xd0>)
 800aec4:	681b      	ldr	r3, [r3, #0]
 800aec6:	693a      	ldr	r2, [r7, #16]
 800aec8:	429a      	cmp	r2, r3
 800aeca:	d00a      	beq.n	800aee2 <xTaskPriorityDisinherit+0x36>
	__asm volatile
 800aecc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aed0:	f383 8811 	msr	BASEPRI, r3
 800aed4:	f3bf 8f6f 	isb	sy
 800aed8:	f3bf 8f4f 	dsb	sy
 800aedc:	60fb      	str	r3, [r7, #12]
}
 800aede:	bf00      	nop
 800aee0:	e7fe      	b.n	800aee0 <xTaskPriorityDisinherit+0x34>
			configASSERT( pxTCB->uxMutexesHeld );
 800aee2:	693b      	ldr	r3, [r7, #16]
 800aee4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800aee6:	2b00      	cmp	r3, #0
 800aee8:	d10a      	bne.n	800af00 <xTaskPriorityDisinherit+0x54>
	__asm volatile
 800aeea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aeee:	f383 8811 	msr	BASEPRI, r3
 800aef2:	f3bf 8f6f 	isb	sy
 800aef6:	f3bf 8f4f 	dsb	sy
 800aefa:	60bb      	str	r3, [r7, #8]
}
 800aefc:	bf00      	nop
 800aefe:	e7fe      	b.n	800aefe <xTaskPriorityDisinherit+0x52>
			( pxTCB->uxMutexesHeld )--;
 800af00:	693b      	ldr	r3, [r7, #16]
 800af02:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800af04:	1e5a      	subs	r2, r3, #1
 800af06:	693b      	ldr	r3, [r7, #16]
 800af08:	651a      	str	r2, [r3, #80]	; 0x50

			/* Has the holder of the mutex inherited the priority of another
			task? */
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800af0a:	693b      	ldr	r3, [r7, #16]
 800af0c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800af0e:	693b      	ldr	r3, [r7, #16]
 800af10:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800af12:	429a      	cmp	r2, r3
 800af14:	d02c      	beq.n	800af70 <xTaskPriorityDisinherit+0xc4>
			{
				/* Only disinherit if no other mutexes are held. */
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800af16:	693b      	ldr	r3, [r7, #16]
 800af18:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800af1a:	2b00      	cmp	r3, #0
 800af1c:	d128      	bne.n	800af70 <xTaskPriorityDisinherit+0xc4>
					/* A task can only have an inherited priority if it holds
					the mutex.  If the mutex is held by a task then it cannot be
					given from an interrupt, and if a mutex is given by the
					holding task then it must be the running state task.  Remove
					the holding task from the ready/delayed list. */
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800af1e:	693b      	ldr	r3, [r7, #16]
 800af20:	3304      	adds	r3, #4
 800af22:	4618      	mov	r0, r3
 800af24:	f7fe fc46 	bl	80097b4 <uxListRemove>
					}

					/* Disinherit the priority before adding the task into the
					new	ready list. */
					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800af28:	693b      	ldr	r3, [r7, #16]
 800af2a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800af2c:	693b      	ldr	r3, [r7, #16]
 800af2e:	62da      	str	r2, [r3, #44]	; 0x2c

					/* Reset the event list item value.  It cannot be in use for
					any other purpose if this task is running, and it must be
					running to give back the mutex. */
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800af30:	693b      	ldr	r3, [r7, #16]
 800af32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af34:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800af38:	693b      	ldr	r3, [r7, #16]
 800af3a:	619a      	str	r2, [r3, #24]
					prvAddTaskToReadyList( pxTCB );
 800af3c:	693b      	ldr	r3, [r7, #16]
 800af3e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800af40:	4b0f      	ldr	r3, [pc, #60]	; (800af80 <xTaskPriorityDisinherit+0xd4>)
 800af42:	681b      	ldr	r3, [r3, #0]
 800af44:	429a      	cmp	r2, r3
 800af46:	d903      	bls.n	800af50 <xTaskPriorityDisinherit+0xa4>
 800af48:	693b      	ldr	r3, [r7, #16]
 800af4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af4c:	4a0c      	ldr	r2, [pc, #48]	; (800af80 <xTaskPriorityDisinherit+0xd4>)
 800af4e:	6013      	str	r3, [r2, #0]
 800af50:	693b      	ldr	r3, [r7, #16]
 800af52:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800af54:	4613      	mov	r3, r2
 800af56:	009b      	lsls	r3, r3, #2
 800af58:	4413      	add	r3, r2
 800af5a:	009b      	lsls	r3, r3, #2
 800af5c:	4a09      	ldr	r2, [pc, #36]	; (800af84 <xTaskPriorityDisinherit+0xd8>)
 800af5e:	441a      	add	r2, r3
 800af60:	693b      	ldr	r3, [r7, #16]
 800af62:	3304      	adds	r3, #4
 800af64:	4619      	mov	r1, r3
 800af66:	4610      	mov	r0, r2
 800af68:	f7fe fbc7 	bl	80096fa <vListInsertEnd>
					in an order different to that in which they were taken.
					If a context switch did not occur when the first mutex was
					returned, even if a task was waiting on it, then a context
					switch should occur when the last mutex is returned whether
					a task is waiting on it or not. */
					xReturn = pdTRUE;
 800af6c:	2301      	movs	r3, #1
 800af6e:	617b      	str	r3, [r7, #20]
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
 800af70:	697b      	ldr	r3, [r7, #20]
	}
 800af72:	4618      	mov	r0, r3
 800af74:	3718      	adds	r7, #24
 800af76:	46bd      	mov	sp, r7
 800af78:	bd80      	pop	{r7, pc}
 800af7a:	bf00      	nop
 800af7c:	20000ec4 	.word	0x20000ec4
 800af80:	200013a0 	.word	0x200013a0
 800af84:	20000ec8 	.word	0x20000ec8

0800af88 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800af88:	b580      	push	{r7, lr}
 800af8a:	b084      	sub	sp, #16
 800af8c:	af00      	add	r7, sp, #0
 800af8e:	6078      	str	r0, [r7, #4]
 800af90:	6039      	str	r1, [r7, #0]
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800af92:	4b21      	ldr	r3, [pc, #132]	; (800b018 <prvAddCurrentTaskToDelayedList+0x90>)
 800af94:	681b      	ldr	r3, [r3, #0]
 800af96:	60fb      	str	r3, [r7, #12]
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800af98:	4b20      	ldr	r3, [pc, #128]	; (800b01c <prvAddCurrentTaskToDelayedList+0x94>)
 800af9a:	681b      	ldr	r3, [r3, #0]
 800af9c:	3304      	adds	r3, #4
 800af9e:	4618      	mov	r0, r3
 800afa0:	f7fe fc08 	bl	80097b4 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800afa4:	687b      	ldr	r3, [r7, #4]
 800afa6:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800afaa:	d10a      	bne.n	800afc2 <prvAddCurrentTaskToDelayedList+0x3a>
 800afac:	683b      	ldr	r3, [r7, #0]
 800afae:	2b00      	cmp	r3, #0
 800afb0:	d007      	beq.n	800afc2 <prvAddCurrentTaskToDelayedList+0x3a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800afb2:	4b1a      	ldr	r3, [pc, #104]	; (800b01c <prvAddCurrentTaskToDelayedList+0x94>)
 800afb4:	681b      	ldr	r3, [r3, #0]
 800afb6:	3304      	adds	r3, #4
 800afb8:	4619      	mov	r1, r3
 800afba:	4819      	ldr	r0, [pc, #100]	; (800b020 <prvAddCurrentTaskToDelayedList+0x98>)
 800afbc:	f7fe fb9d 	bl	80096fa <vListInsertEnd>

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800afc0:	e026      	b.n	800b010 <prvAddCurrentTaskToDelayedList+0x88>
			xTimeToWake = xConstTickCount + xTicksToWait;
 800afc2:	68fa      	ldr	r2, [r7, #12]
 800afc4:	687b      	ldr	r3, [r7, #4]
 800afc6:	4413      	add	r3, r2
 800afc8:	60bb      	str	r3, [r7, #8]
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800afca:	4b14      	ldr	r3, [pc, #80]	; (800b01c <prvAddCurrentTaskToDelayedList+0x94>)
 800afcc:	681b      	ldr	r3, [r3, #0]
 800afce:	68ba      	ldr	r2, [r7, #8]
 800afd0:	605a      	str	r2, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800afd2:	68ba      	ldr	r2, [r7, #8]
 800afd4:	68fb      	ldr	r3, [r7, #12]
 800afd6:	429a      	cmp	r2, r3
 800afd8:	d209      	bcs.n	800afee <prvAddCurrentTaskToDelayedList+0x66>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800afda:	4b12      	ldr	r3, [pc, #72]	; (800b024 <prvAddCurrentTaskToDelayedList+0x9c>)
 800afdc:	681a      	ldr	r2, [r3, #0]
 800afde:	4b0f      	ldr	r3, [pc, #60]	; (800b01c <prvAddCurrentTaskToDelayedList+0x94>)
 800afe0:	681b      	ldr	r3, [r3, #0]
 800afe2:	3304      	adds	r3, #4
 800afe4:	4619      	mov	r1, r3
 800afe6:	4610      	mov	r0, r2
 800afe8:	f7fe fbab 	bl	8009742 <vListInsert>
}
 800afec:	e010      	b.n	800b010 <prvAddCurrentTaskToDelayedList+0x88>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800afee:	4b0e      	ldr	r3, [pc, #56]	; (800b028 <prvAddCurrentTaskToDelayedList+0xa0>)
 800aff0:	681a      	ldr	r2, [r3, #0]
 800aff2:	4b0a      	ldr	r3, [pc, #40]	; (800b01c <prvAddCurrentTaskToDelayedList+0x94>)
 800aff4:	681b      	ldr	r3, [r3, #0]
 800aff6:	3304      	adds	r3, #4
 800aff8:	4619      	mov	r1, r3
 800affa:	4610      	mov	r0, r2
 800affc:	f7fe fba1 	bl	8009742 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800b000:	4b0a      	ldr	r3, [pc, #40]	; (800b02c <prvAddCurrentTaskToDelayedList+0xa4>)
 800b002:	681b      	ldr	r3, [r3, #0]
 800b004:	68ba      	ldr	r2, [r7, #8]
 800b006:	429a      	cmp	r2, r3
 800b008:	d202      	bcs.n	800b010 <prvAddCurrentTaskToDelayedList+0x88>
					xNextTaskUnblockTime = xTimeToWake;
 800b00a:	4a08      	ldr	r2, [pc, #32]	; (800b02c <prvAddCurrentTaskToDelayedList+0xa4>)
 800b00c:	68bb      	ldr	r3, [r7, #8]
 800b00e:	6013      	str	r3, [r2, #0]
}
 800b010:	bf00      	nop
 800b012:	3710      	adds	r7, #16
 800b014:	46bd      	mov	sp, r7
 800b016:	bd80      	pop	{r7, pc}
 800b018:	2000139c 	.word	0x2000139c
 800b01c:	20000ec4 	.word	0x20000ec4
 800b020:	20001384 	.word	0x20001384
 800b024:	20001354 	.word	0x20001354
 800b028:	20001350 	.word	0x20001350
 800b02c:	200013b8 	.word	0x200013b8

0800b030 <xTimerCreateTimerTask>:
									TimerCallbackFunction_t pxCallbackFunction,
									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
/*-----------------------------------------------------------*/

BaseType_t xTimerCreateTimerTask( void )
{
 800b030:	b580      	push	{r7, lr}
 800b032:	b08a      	sub	sp, #40	; 0x28
 800b034:	af04      	add	r7, sp, #16
BaseType_t xReturn = pdFAIL;
 800b036:	2300      	movs	r3, #0
 800b038:	617b      	str	r3, [r7, #20]

	/* This function is called when the scheduler is started if
	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
	timer service task has been created/initialised.  If timers have already
	been created then the initialisation will already have been performed. */
	prvCheckForValidListAndQueue();
 800b03a:	f000 fb07 	bl	800b64c <prvCheckForValidListAndQueue>

	if( xTimerQueue != NULL )
 800b03e:	4b1c      	ldr	r3, [pc, #112]	; (800b0b0 <xTimerCreateTimerTask+0x80>)
 800b040:	681b      	ldr	r3, [r3, #0]
 800b042:	2b00      	cmp	r3, #0
 800b044:	d021      	beq.n	800b08a <xTimerCreateTimerTask+0x5a>
	{
		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
		{
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800b046:	2300      	movs	r3, #0
 800b048:	60fb      	str	r3, [r7, #12]
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800b04a:	2300      	movs	r3, #0
 800b04c:	60bb      	str	r3, [r7, #8]
			uint32_t ulTimerTaskStackSize;

			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b04e:	1d3a      	adds	r2, r7, #4
 800b050:	f107 0108 	add.w	r1, r7, #8
 800b054:	f107 030c 	add.w	r3, r7, #12
 800b058:	4618      	mov	r0, r3
 800b05a:	f7fe fb07 	bl	800966c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800b05e:	6879      	ldr	r1, [r7, #4]
 800b060:	68bb      	ldr	r3, [r7, #8]
 800b062:	68fa      	ldr	r2, [r7, #12]
 800b064:	9202      	str	r2, [sp, #8]
 800b066:	9301      	str	r3, [sp, #4]
 800b068:	2302      	movs	r3, #2
 800b06a:	9300      	str	r3, [sp, #0]
 800b06c:	2300      	movs	r3, #0
 800b06e:	460a      	mov	r2, r1
 800b070:	4910      	ldr	r1, [pc, #64]	; (800b0b4 <xTimerCreateTimerTask+0x84>)
 800b072:	4811      	ldr	r0, [pc, #68]	; (800b0b8 <xTimerCreateTimerTask+0x88>)
 800b074:	f7ff f8b4 	bl	800a1e0 <xTaskCreateStatic>
 800b078:	4603      	mov	r3, r0
 800b07a:	4a10      	ldr	r2, [pc, #64]	; (800b0bc <xTimerCreateTimerTask+0x8c>)
 800b07c:	6013      	str	r3, [r2, #0]
													NULL,
													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
													pxTimerTaskStackBuffer,
													pxTimerTaskTCBBuffer );

			if( xTimerTaskHandle != NULL )
 800b07e:	4b0f      	ldr	r3, [pc, #60]	; (800b0bc <xTimerCreateTimerTask+0x8c>)
 800b080:	681b      	ldr	r3, [r3, #0]
 800b082:	2b00      	cmp	r3, #0
 800b084:	d001      	beq.n	800b08a <xTimerCreateTimerTask+0x5a>
			{
				xReturn = pdPASS;
 800b086:	2301      	movs	r3, #1
 800b088:	617b      	str	r3, [r7, #20]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	configASSERT( xReturn );
 800b08a:	697b      	ldr	r3, [r7, #20]
 800b08c:	2b00      	cmp	r3, #0
 800b08e:	d10a      	bne.n	800b0a6 <xTimerCreateTimerTask+0x76>
	__asm volatile
 800b090:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b094:	f383 8811 	msr	BASEPRI, r3
 800b098:	f3bf 8f6f 	isb	sy
 800b09c:	f3bf 8f4f 	dsb	sy
 800b0a0:	613b      	str	r3, [r7, #16]
}
 800b0a2:	bf00      	nop
 800b0a4:	e7fe      	b.n	800b0a4 <xTimerCreateTimerTask+0x74>
	return xReturn;
 800b0a6:	697b      	ldr	r3, [r7, #20]
}
 800b0a8:	4618      	mov	r0, r3
 800b0aa:	3718      	adds	r7, #24
 800b0ac:	46bd      	mov	sp, r7
 800b0ae:	bd80      	pop	{r7, pc}
 800b0b0:	200013f4 	.word	0x200013f4
 800b0b4:	0802e750 	.word	0x0802e750
 800b0b8:	0800b1f5 	.word	0x0800b1f5
 800b0bc:	200013f8 	.word	0x200013f8

0800b0c0 <xTimerGenericCommand>:
	}
}
/*-----------------------------------------------------------*/

BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t * const pxHigherPriorityTaskWoken, const TickType_t xTicksToWait )
{
 800b0c0:	b580      	push	{r7, lr}
 800b0c2:	b08a      	sub	sp, #40	; 0x28
 800b0c4:	af00      	add	r7, sp, #0
 800b0c6:	60f8      	str	r0, [r7, #12]
 800b0c8:	60b9      	str	r1, [r7, #8]
 800b0ca:	607a      	str	r2, [r7, #4]
 800b0cc:	603b      	str	r3, [r7, #0]
BaseType_t xReturn = pdFAIL;
 800b0ce:	2300      	movs	r3, #0
 800b0d0:	627b      	str	r3, [r7, #36]	; 0x24
DaemonTaskMessage_t xMessage;

	configASSERT( xTimer );
 800b0d2:	68fb      	ldr	r3, [r7, #12]
 800b0d4:	2b00      	cmp	r3, #0
 800b0d6:	d10a      	bne.n	800b0ee <xTimerGenericCommand+0x2e>
	__asm volatile
 800b0d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b0dc:	f383 8811 	msr	BASEPRI, r3
 800b0e0:	f3bf 8f6f 	isb	sy
 800b0e4:	f3bf 8f4f 	dsb	sy
 800b0e8:	623b      	str	r3, [r7, #32]
}
 800b0ea:	bf00      	nop
 800b0ec:	e7fe      	b.n	800b0ec <xTimerGenericCommand+0x2c>

	/* Send a message to the timer service task to perform a particular action
	on a particular timer definition. */
	if( xTimerQueue != NULL )
 800b0ee:	4b1a      	ldr	r3, [pc, #104]	; (800b158 <xTimerGenericCommand+0x98>)
 800b0f0:	681b      	ldr	r3, [r3, #0]
 800b0f2:	2b00      	cmp	r3, #0
 800b0f4:	d02a      	beq.n	800b14c <xTimerGenericCommand+0x8c>
	{
		/* Send a command to the timer service task to start the xTimer timer. */
		xMessage.xMessageID = xCommandID;
 800b0f6:	68bb      	ldr	r3, [r7, #8]
 800b0f8:	613b      	str	r3, [r7, #16]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800b0fa:	687b      	ldr	r3, [r7, #4]
 800b0fc:	617b      	str	r3, [r7, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800b0fe:	68fb      	ldr	r3, [r7, #12]
 800b100:	61bb      	str	r3, [r7, #24]

		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800b102:	68bb      	ldr	r3, [r7, #8]
 800b104:	2b05      	cmp	r3, #5
 800b106:	dc18      	bgt.n	800b13a <xTimerGenericCommand+0x7a>
		{
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800b108:	f7ff feb2 	bl	800ae70 <xTaskGetSchedulerState>
 800b10c:	4603      	mov	r3, r0
 800b10e:	2b02      	cmp	r3, #2
 800b110:	d109      	bne.n	800b126 <xTimerGenericCommand+0x66>
			{
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800b112:	4b11      	ldr	r3, [pc, #68]	; (800b158 <xTimerGenericCommand+0x98>)
 800b114:	6818      	ldr	r0, [r3, #0]
 800b116:	f107 0110 	add.w	r1, r7, #16
 800b11a:	2300      	movs	r3, #0
 800b11c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800b11e:	f7fe fc77 	bl	8009a10 <xQueueGenericSend>
 800b122:	6278      	str	r0, [r7, #36]	; 0x24
 800b124:	e012      	b.n	800b14c <xTimerGenericCommand+0x8c>
			}
			else
			{
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800b126:	4b0c      	ldr	r3, [pc, #48]	; (800b158 <xTimerGenericCommand+0x98>)
 800b128:	6818      	ldr	r0, [r3, #0]
 800b12a:	f107 0110 	add.w	r1, r7, #16
 800b12e:	2300      	movs	r3, #0
 800b130:	2200      	movs	r2, #0
 800b132:	f7fe fc6d 	bl	8009a10 <xQueueGenericSend>
 800b136:	6278      	str	r0, [r7, #36]	; 0x24
 800b138:	e008      	b.n	800b14c <xTimerGenericCommand+0x8c>
			}
		}
		else
		{
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800b13a:	4b07      	ldr	r3, [pc, #28]	; (800b158 <xTimerGenericCommand+0x98>)
 800b13c:	6818      	ldr	r0, [r3, #0]
 800b13e:	f107 0110 	add.w	r1, r7, #16
 800b142:	2300      	movs	r3, #0
 800b144:	683a      	ldr	r2, [r7, #0]
 800b146:	f7fe fd61 	bl	8009c0c <xQueueGenericSendFromISR>
 800b14a:	6278      	str	r0, [r7, #36]	; 0x24
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	return xReturn;
 800b14c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 800b14e:	4618      	mov	r0, r3
 800b150:	3728      	adds	r7, #40	; 0x28
 800b152:	46bd      	mov	sp, r7
 800b154:	bd80      	pop	{r7, pc}
 800b156:	bf00      	nop
 800b158:	200013f4 	.word	0x200013f4

0800b15c <prvProcessExpiredTimer>:
	return pxTimer->pcTimerName;
}
/*-----------------------------------------------------------*/

static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
{
 800b15c:	b580      	push	{r7, lr}
 800b15e:	b088      	sub	sp, #32
 800b160:	af02      	add	r7, sp, #8
 800b162:	6078      	str	r0, [r7, #4]
 800b164:	6039      	str	r1, [r7, #0]
BaseType_t xResult;
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b166:	4b22      	ldr	r3, [pc, #136]	; (800b1f0 <prvProcessExpiredTimer+0x94>)
 800b168:	681b      	ldr	r3, [r3, #0]
 800b16a:	68db      	ldr	r3, [r3, #12]
 800b16c:	68db      	ldr	r3, [r3, #12]
 800b16e:	617b      	str	r3, [r7, #20]

	/* Remove the timer from the list of active timers.  A check has already
	been performed to ensure the list is not empty. */
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b170:	697b      	ldr	r3, [r7, #20]
 800b172:	3304      	adds	r3, #4
 800b174:	4618      	mov	r0, r3
 800b176:	f7fe fb1d 	bl	80097b4 <uxListRemove>
	traceTIMER_EXPIRED( pxTimer );

	/* If the timer is an auto-reload timer then calculate the next
	expiry time and re-insert the timer in the list of active timers. */
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b17a:	697b      	ldr	r3, [r7, #20]
 800b17c:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800b180:	f003 0304 	and.w	r3, r3, #4
 800b184:	2b00      	cmp	r3, #0
 800b186:	d022      	beq.n	800b1ce <prvProcessExpiredTimer+0x72>
	{
		/* The timer is inserted into a list using a time relative to anything
		other than the current time.  It will therefore be inserted into the
		correct list relative to the time this task thinks it is now. */
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800b188:	697b      	ldr	r3, [r7, #20]
 800b18a:	699a      	ldr	r2, [r3, #24]
 800b18c:	687b      	ldr	r3, [r7, #4]
 800b18e:	18d1      	adds	r1, r2, r3
 800b190:	687b      	ldr	r3, [r7, #4]
 800b192:	683a      	ldr	r2, [r7, #0]
 800b194:	6978      	ldr	r0, [r7, #20]
 800b196:	f000 f8d1 	bl	800b33c <prvInsertTimerInActiveList>
 800b19a:	4603      	mov	r3, r0
 800b19c:	2b00      	cmp	r3, #0
 800b19e:	d01f      	beq.n	800b1e0 <prvProcessExpiredTimer+0x84>
		{
			/* The timer expired before it was added to the active timer
			list.  Reload it now.  */
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b1a0:	2300      	movs	r3, #0
 800b1a2:	9300      	str	r3, [sp, #0]
 800b1a4:	2300      	movs	r3, #0
 800b1a6:	687a      	ldr	r2, [r7, #4]
 800b1a8:	2100      	movs	r1, #0
 800b1aa:	6978      	ldr	r0, [r7, #20]
 800b1ac:	f7ff ff88 	bl	800b0c0 <xTimerGenericCommand>
 800b1b0:	6138      	str	r0, [r7, #16]
			configASSERT( xResult );
 800b1b2:	693b      	ldr	r3, [r7, #16]
 800b1b4:	2b00      	cmp	r3, #0
 800b1b6:	d113      	bne.n	800b1e0 <prvProcessExpiredTimer+0x84>
	__asm volatile
 800b1b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b1bc:	f383 8811 	msr	BASEPRI, r3
 800b1c0:	f3bf 8f6f 	isb	sy
 800b1c4:	f3bf 8f4f 	dsb	sy
 800b1c8:	60fb      	str	r3, [r7, #12]
}
 800b1ca:	bf00      	nop
 800b1cc:	e7fe      	b.n	800b1cc <prvProcessExpiredTimer+0x70>
			mtCOVERAGE_TEST_MARKER();
		}
	}
	else
	{
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b1ce:	697b      	ldr	r3, [r7, #20]
 800b1d0:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800b1d4:	f023 0301 	bic.w	r3, r3, #1
 800b1d8:	b2da      	uxtb	r2, r3
 800b1da:	697b      	ldr	r3, [r7, #20]
 800b1dc:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
		mtCOVERAGE_TEST_MARKER();
	}

	/* Call the timer callback. */
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b1e0:	697b      	ldr	r3, [r7, #20]
 800b1e2:	6a1b      	ldr	r3, [r3, #32]
 800b1e4:	6978      	ldr	r0, [r7, #20]
 800b1e6:	4798      	blx	r3
}
 800b1e8:	bf00      	nop
 800b1ea:	3718      	adds	r7, #24
 800b1ec:	46bd      	mov	sp, r7
 800b1ee:	bd80      	pop	{r7, pc}
 800b1f0:	200013ec 	.word	0x200013ec

0800b1f4 <prvTimerTask>:
/*-----------------------------------------------------------*/

static portTASK_FUNCTION( prvTimerTask, pvParameters )
{
 800b1f4:	b580      	push	{r7, lr}
 800b1f6:	b084      	sub	sp, #16
 800b1f8:	af00      	add	r7, sp, #0
 800b1fa:	6078      	str	r0, [r7, #4]

	for( ;; )
	{
		/* Query the timers list to see if it contains any timers, and if so,
		obtain the time at which the next timer will expire. */
		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 800b1fc:	f107 0308 	add.w	r3, r7, #8
 800b200:	4618      	mov	r0, r3
 800b202:	f000 f857 	bl	800b2b4 <prvGetNextExpireTime>
 800b206:	60f8      	str	r0, [r7, #12]

		/* If a timer has expired, process it.  Otherwise, block this task
		until either a timer does expire, or a command is received. */
		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 800b208:	68bb      	ldr	r3, [r7, #8]
 800b20a:	4619      	mov	r1, r3
 800b20c:	68f8      	ldr	r0, [r7, #12]
 800b20e:	f000 f803 	bl	800b218 <prvProcessTimerOrBlockTask>

		/* Empty the command queue. */
		prvProcessReceivedCommands();
 800b212:	f000 f8d5 	bl	800b3c0 <prvProcessReceivedCommands>
		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 800b216:	e7f1      	b.n	800b1fc <prvTimerTask+0x8>

0800b218 <prvProcessTimerOrBlockTask>:
	}
}
/*-----------------------------------------------------------*/

static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty )
{
 800b218:	b580      	push	{r7, lr}
 800b21a:	b084      	sub	sp, #16
 800b21c:	af00      	add	r7, sp, #0
 800b21e:	6078      	str	r0, [r7, #4]
 800b220:	6039      	str	r1, [r7, #0]
TickType_t xTimeNow;
BaseType_t xTimerListsWereSwitched;

	vTaskSuspendAll();
 800b222:	f7ff fa39 	bl	800a698 <vTaskSuspendAll>
		/* Obtain the time now to make an assessment as to whether the timer
		has expired or not.  If obtaining the time causes the lists to switch
		then don't process this timer as any timers that remained in the list
		when the lists were switched will have been processed within the
		prvSampleTimeNow() function. */
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b226:	f107 0308 	add.w	r3, r7, #8
 800b22a:	4618      	mov	r0, r3
 800b22c:	f000 f866 	bl	800b2fc <prvSampleTimeNow>
 800b230:	60f8      	str	r0, [r7, #12]
		if( xTimerListsWereSwitched == pdFALSE )
 800b232:	68bb      	ldr	r3, [r7, #8]
 800b234:	2b00      	cmp	r3, #0
 800b236:	d130      	bne.n	800b29a <prvProcessTimerOrBlockTask+0x82>
		{
			/* The tick count has not overflowed, has the timer expired? */
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800b238:	683b      	ldr	r3, [r7, #0]
 800b23a:	2b00      	cmp	r3, #0
 800b23c:	d10a      	bne.n	800b254 <prvProcessTimerOrBlockTask+0x3c>
 800b23e:	687a      	ldr	r2, [r7, #4]
 800b240:	68fb      	ldr	r3, [r7, #12]
 800b242:	429a      	cmp	r2, r3
 800b244:	d806      	bhi.n	800b254 <prvProcessTimerOrBlockTask+0x3c>
			{
				( void ) xTaskResumeAll();
 800b246:	f7ff fa35 	bl	800a6b4 <xTaskResumeAll>
				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 800b24a:	68f9      	ldr	r1, [r7, #12]
 800b24c:	6878      	ldr	r0, [r7, #4]
 800b24e:	f7ff ff85 	bl	800b15c <prvProcessExpiredTimer>
		else
		{
			( void ) xTaskResumeAll();
		}
	}
}
 800b252:	e024      	b.n	800b29e <prvProcessTimerOrBlockTask+0x86>
				if( xListWasEmpty != pdFALSE )
 800b254:	683b      	ldr	r3, [r7, #0]
 800b256:	2b00      	cmp	r3, #0
 800b258:	d008      	beq.n	800b26c <prvProcessTimerOrBlockTask+0x54>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800b25a:	4b13      	ldr	r3, [pc, #76]	; (800b2a8 <prvProcessTimerOrBlockTask+0x90>)
 800b25c:	681b      	ldr	r3, [r3, #0]
 800b25e:	681b      	ldr	r3, [r3, #0]
 800b260:	2b00      	cmp	r3, #0
 800b262:	d101      	bne.n	800b268 <prvProcessTimerOrBlockTask+0x50>
 800b264:	2301      	movs	r3, #1
 800b266:	e000      	b.n	800b26a <prvProcessTimerOrBlockTask+0x52>
 800b268:	2300      	movs	r3, #0
 800b26a:	603b      	str	r3, [r7, #0]
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800b26c:	4b0f      	ldr	r3, [pc, #60]	; (800b2ac <prvProcessTimerOrBlockTask+0x94>)
 800b26e:	6818      	ldr	r0, [r3, #0]
 800b270:	687a      	ldr	r2, [r7, #4]
 800b272:	68fb      	ldr	r3, [r7, #12]
 800b274:	1ad3      	subs	r3, r2, r3
 800b276:	683a      	ldr	r2, [r7, #0]
 800b278:	4619      	mov	r1, r3
 800b27a:	f7fe ff7d 	bl	800a178 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800b27e:	f7ff fa19 	bl	800a6b4 <xTaskResumeAll>
 800b282:	4603      	mov	r3, r0
 800b284:	2b00      	cmp	r3, #0
 800b286:	d10a      	bne.n	800b29e <prvProcessTimerOrBlockTask+0x86>
					portYIELD_WITHIN_API();
 800b288:	4b09      	ldr	r3, [pc, #36]	; (800b2b0 <prvProcessTimerOrBlockTask+0x98>)
 800b28a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b28e:	601a      	str	r2, [r3, #0]
 800b290:	f3bf 8f4f 	dsb	sy
 800b294:	f3bf 8f6f 	isb	sy
}
 800b298:	e001      	b.n	800b29e <prvProcessTimerOrBlockTask+0x86>
			( void ) xTaskResumeAll();
 800b29a:	f7ff fa0b 	bl	800a6b4 <xTaskResumeAll>
}
 800b29e:	bf00      	nop
 800b2a0:	3710      	adds	r7, #16
 800b2a2:	46bd      	mov	sp, r7
 800b2a4:	bd80      	pop	{r7, pc}
 800b2a6:	bf00      	nop
 800b2a8:	200013f0 	.word	0x200013f0
 800b2ac:	200013f4 	.word	0x200013f4
 800b2b0:	e000ed04 	.word	0xe000ed04

0800b2b4 <prvGetNextExpireTime>:
/*-----------------------------------------------------------*/

static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
{
 800b2b4:	b480      	push	{r7}
 800b2b6:	b085      	sub	sp, #20
 800b2b8:	af00      	add	r7, sp, #0
 800b2ba:	6078      	str	r0, [r7, #4]
	the timer with the nearest expiry time will expire.  If there are no
	active timers then just set the next expire time to 0.  That will cause
	this task to unblock when the tick count overflows, at which point the
	timer lists will be switched and the next expiry time can be
	re-assessed.  */
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b2bc:	4b0e      	ldr	r3, [pc, #56]	; (800b2f8 <prvGetNextExpireTime+0x44>)
 800b2be:	681b      	ldr	r3, [r3, #0]
 800b2c0:	681b      	ldr	r3, [r3, #0]
 800b2c2:	2b00      	cmp	r3, #0
 800b2c4:	d101      	bne.n	800b2ca <prvGetNextExpireTime+0x16>
 800b2c6:	2201      	movs	r2, #1
 800b2c8:	e000      	b.n	800b2cc <prvGetNextExpireTime+0x18>
 800b2ca:	2200      	movs	r2, #0
 800b2cc:	687b      	ldr	r3, [r7, #4]
 800b2ce:	601a      	str	r2, [r3, #0]
	if( *pxListWasEmpty == pdFALSE )
 800b2d0:	687b      	ldr	r3, [r7, #4]
 800b2d2:	681b      	ldr	r3, [r3, #0]
 800b2d4:	2b00      	cmp	r3, #0
 800b2d6:	d105      	bne.n	800b2e4 <prvGetNextExpireTime+0x30>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b2d8:	4b07      	ldr	r3, [pc, #28]	; (800b2f8 <prvGetNextExpireTime+0x44>)
 800b2da:	681b      	ldr	r3, [r3, #0]
 800b2dc:	68db      	ldr	r3, [r3, #12]
 800b2de:	681b      	ldr	r3, [r3, #0]
 800b2e0:	60fb      	str	r3, [r7, #12]
 800b2e2:	e001      	b.n	800b2e8 <prvGetNextExpireTime+0x34>
	}
	else
	{
		/* Ensure the task unblocks when the tick count rolls over. */
		xNextExpireTime = ( TickType_t ) 0U;
 800b2e4:	2300      	movs	r3, #0
 800b2e6:	60fb      	str	r3, [r7, #12]
	}

	return xNextExpireTime;
 800b2e8:	68fb      	ldr	r3, [r7, #12]
}
 800b2ea:	4618      	mov	r0, r3
 800b2ec:	3714      	adds	r7, #20
 800b2ee:	46bd      	mov	sp, r7
 800b2f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2f4:	4770      	bx	lr
 800b2f6:	bf00      	nop
 800b2f8:	200013ec 	.word	0x200013ec

0800b2fc <prvSampleTimeNow>:
/*-----------------------------------------------------------*/

static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
{
 800b2fc:	b580      	push	{r7, lr}
 800b2fe:	b084      	sub	sp, #16
 800b300:	af00      	add	r7, sp, #0
 800b302:	6078      	str	r0, [r7, #4]
TickType_t xTimeNow;
PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only accessible to one task. */

	xTimeNow = xTaskGetTickCount();
 800b304:	f7ff fa74 	bl	800a7f0 <xTaskGetTickCount>
 800b308:	60f8      	str	r0, [r7, #12]

	if( xTimeNow < xLastTime )
 800b30a:	4b0b      	ldr	r3, [pc, #44]	; (800b338 <prvSampleTimeNow+0x3c>)
 800b30c:	681b      	ldr	r3, [r3, #0]
 800b30e:	68fa      	ldr	r2, [r7, #12]
 800b310:	429a      	cmp	r2, r3
 800b312:	d205      	bcs.n	800b320 <prvSampleTimeNow+0x24>
	{
		prvSwitchTimerLists();
 800b314:	f000 f936 	bl	800b584 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800b318:	687b      	ldr	r3, [r7, #4]
 800b31a:	2201      	movs	r2, #1
 800b31c:	601a      	str	r2, [r3, #0]
 800b31e:	e002      	b.n	800b326 <prvSampleTimeNow+0x2a>
	}
	else
	{
		*pxTimerListsWereSwitched = pdFALSE;
 800b320:	687b      	ldr	r3, [r7, #4]
 800b322:	2200      	movs	r2, #0
 800b324:	601a      	str	r2, [r3, #0]
	}

	xLastTime = xTimeNow;
 800b326:	4a04      	ldr	r2, [pc, #16]	; (800b338 <prvSampleTimeNow+0x3c>)
 800b328:	68fb      	ldr	r3, [r7, #12]
 800b32a:	6013      	str	r3, [r2, #0]

	return xTimeNow;
 800b32c:	68fb      	ldr	r3, [r7, #12]
}
 800b32e:	4618      	mov	r0, r3
 800b330:	3710      	adds	r7, #16
 800b332:	46bd      	mov	sp, r7
 800b334:	bd80      	pop	{r7, pc}
 800b336:	bf00      	nop
 800b338:	200013fc 	.word	0x200013fc

0800b33c <prvInsertTimerInActiveList>:
/*-----------------------------------------------------------*/

static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiryTime, const TickType_t xTimeNow, const TickType_t xCommandTime )
{
 800b33c:	b580      	push	{r7, lr}
 800b33e:	b086      	sub	sp, #24
 800b340:	af00      	add	r7, sp, #0
 800b342:	60f8      	str	r0, [r7, #12]
 800b344:	60b9      	str	r1, [r7, #8]
 800b346:	607a      	str	r2, [r7, #4]
 800b348:	603b      	str	r3, [r7, #0]
BaseType_t xProcessTimerNow = pdFALSE;
 800b34a:	2300      	movs	r3, #0
 800b34c:	617b      	str	r3, [r7, #20]

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800b34e:	68fb      	ldr	r3, [r7, #12]
 800b350:	68ba      	ldr	r2, [r7, #8]
 800b352:	605a      	str	r2, [r3, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b354:	68fb      	ldr	r3, [r7, #12]
 800b356:	68fa      	ldr	r2, [r7, #12]
 800b358:	611a      	str	r2, [r3, #16]

	if( xNextExpiryTime <= xTimeNow )
 800b35a:	68ba      	ldr	r2, [r7, #8]
 800b35c:	687b      	ldr	r3, [r7, #4]
 800b35e:	429a      	cmp	r2, r3
 800b360:	d812      	bhi.n	800b388 <prvInsertTimerInActiveList+0x4c>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b362:	687a      	ldr	r2, [r7, #4]
 800b364:	683b      	ldr	r3, [r7, #0]
 800b366:	1ad2      	subs	r2, r2, r3
 800b368:	68fb      	ldr	r3, [r7, #12]
 800b36a:	699b      	ldr	r3, [r3, #24]
 800b36c:	429a      	cmp	r2, r3
 800b36e:	d302      	bcc.n	800b376 <prvInsertTimerInActiveList+0x3a>
		{
			/* The time between a command being issued and the command being
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
 800b370:	2301      	movs	r3, #1
 800b372:	617b      	str	r3, [r7, #20]
 800b374:	e01b      	b.n	800b3ae <prvInsertTimerInActiveList+0x72>
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800b376:	4b10      	ldr	r3, [pc, #64]	; (800b3b8 <prvInsertTimerInActiveList+0x7c>)
 800b378:	681a      	ldr	r2, [r3, #0]
 800b37a:	68fb      	ldr	r3, [r7, #12]
 800b37c:	3304      	adds	r3, #4
 800b37e:	4619      	mov	r1, r3
 800b380:	4610      	mov	r0, r2
 800b382:	f7fe f9de 	bl	8009742 <vListInsert>
 800b386:	e012      	b.n	800b3ae <prvInsertTimerInActiveList+0x72>
		}
	}
	else
	{
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800b388:	687a      	ldr	r2, [r7, #4]
 800b38a:	683b      	ldr	r3, [r7, #0]
 800b38c:	429a      	cmp	r2, r3
 800b38e:	d206      	bcs.n	800b39e <prvInsertTimerInActiveList+0x62>
 800b390:	68ba      	ldr	r2, [r7, #8]
 800b392:	683b      	ldr	r3, [r7, #0]
 800b394:	429a      	cmp	r2, r3
 800b396:	d302      	bcc.n	800b39e <prvInsertTimerInActiveList+0x62>
		{
			/* If, since the command was issued, the tick count has overflowed
			but the expiry time has not, then the timer must have already passed
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
 800b398:	2301      	movs	r3, #1
 800b39a:	617b      	str	r3, [r7, #20]
 800b39c:	e007      	b.n	800b3ae <prvInsertTimerInActiveList+0x72>
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b39e:	4b07      	ldr	r3, [pc, #28]	; (800b3bc <prvInsertTimerInActiveList+0x80>)
 800b3a0:	681a      	ldr	r2, [r3, #0]
 800b3a2:	68fb      	ldr	r3, [r7, #12]
 800b3a4:	3304      	adds	r3, #4
 800b3a6:	4619      	mov	r1, r3
 800b3a8:	4610      	mov	r0, r2
 800b3aa:	f7fe f9ca 	bl	8009742 <vListInsert>
		}
	}

	return xProcessTimerNow;
 800b3ae:	697b      	ldr	r3, [r7, #20]
}
 800b3b0:	4618      	mov	r0, r3
 800b3b2:	3718      	adds	r7, #24
 800b3b4:	46bd      	mov	sp, r7
 800b3b6:	bd80      	pop	{r7, pc}
 800b3b8:	200013f0 	.word	0x200013f0
 800b3bc:	200013ec 	.word	0x200013ec

0800b3c0 <prvProcessReceivedCommands>:
/*-----------------------------------------------------------*/

static void	prvProcessReceivedCommands( void )
{
 800b3c0:	b580      	push	{r7, lr}
 800b3c2:	b08e      	sub	sp, #56	; 0x38
 800b3c4:	af02      	add	r7, sp, #8
DaemonTaskMessage_t xMessage;
Timer_t *pxTimer;
BaseType_t xTimerListsWereSwitched, xResult;
TickType_t xTimeNow;

	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800b3c6:	e0ca      	b.n	800b55e <prvProcessReceivedCommands+0x19e>
	{
		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
		{
			/* Negative commands are pended function calls rather than timer
			commands. */
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800b3c8:	687b      	ldr	r3, [r7, #4]
 800b3ca:	2b00      	cmp	r3, #0
 800b3cc:	da18      	bge.n	800b400 <prvProcessReceivedCommands+0x40>
			{
				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 800b3ce:	1d3b      	adds	r3, r7, #4
 800b3d0:	3304      	adds	r3, #4
 800b3d2:	62fb      	str	r3, [r7, #44]	; 0x2c

				/* The timer uses the xCallbackParameters member to request a
				callback be executed.  Check the callback is not NULL. */
				configASSERT( pxCallback );
 800b3d4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b3d6:	2b00      	cmp	r3, #0
 800b3d8:	d10a      	bne.n	800b3f0 <prvProcessReceivedCommands+0x30>
	__asm volatile
 800b3da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b3de:	f383 8811 	msr	BASEPRI, r3
 800b3e2:	f3bf 8f6f 	isb	sy
 800b3e6:	f3bf 8f4f 	dsb	sy
 800b3ea:	61fb      	str	r3, [r7, #28]
}
 800b3ec:	bf00      	nop
 800b3ee:	e7fe      	b.n	800b3ee <prvProcessReceivedCommands+0x2e>

				/* Call the function. */
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800b3f0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b3f2:	681b      	ldr	r3, [r3, #0]
 800b3f4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b3f6:	6850      	ldr	r0, [r2, #4]
 800b3f8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b3fa:	6892      	ldr	r2, [r2, #8]
 800b3fc:	4611      	mov	r1, r2
 800b3fe:	4798      	blx	r3
		}
		#endif /* INCLUDE_xTimerPendFunctionCall */

		/* Commands that are positive are timer commands rather than pended
		function calls. */
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	2b00      	cmp	r3, #0
 800b404:	f2c0 80aa 	blt.w	800b55c <prvProcessReceivedCommands+0x19c>
		{
			/* The messages uses the xTimerParameters member to work on a
			software timer. */
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800b408:	68fb      	ldr	r3, [r7, #12]
 800b40a:	62bb      	str	r3, [r7, #40]	; 0x28

			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800b40c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b40e:	695b      	ldr	r3, [r3, #20]
 800b410:	2b00      	cmp	r3, #0
 800b412:	d004      	beq.n	800b41e <prvProcessReceivedCommands+0x5e>
			{
				/* The timer is in a list, remove it. */
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b414:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b416:	3304      	adds	r3, #4
 800b418:	4618      	mov	r0, r3
 800b41a:	f7fe f9cb 	bl	80097b4 <uxListRemove>
			it must be present in the function call.  prvSampleTimeNow() must be
			called after the message is received from xTimerQueue so there is no
			possibility of a higher priority task adding a message to the message
			queue with a time that is ahead of the timer daemon task (because it
			pre-empted the timer daemon task after the xTimeNow value was set). */
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b41e:	463b      	mov	r3, r7
 800b420:	4618      	mov	r0, r3
 800b422:	f7ff ff6b 	bl	800b2fc <prvSampleTimeNow>
 800b426:	6278      	str	r0, [r7, #36]	; 0x24

			switch( xMessage.xMessageID )
 800b428:	687b      	ldr	r3, [r7, #4]
 800b42a:	2b09      	cmp	r3, #9
 800b42c:	f200 8097 	bhi.w	800b55e <prvProcessReceivedCommands+0x19e>
 800b430:	a201      	add	r2, pc, #4	; (adr r2, 800b438 <prvProcessReceivedCommands+0x78>)
 800b432:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b436:	bf00      	nop
 800b438:	0800b461 	.word	0x0800b461
 800b43c:	0800b461 	.word	0x0800b461
 800b440:	0800b461 	.word	0x0800b461
 800b444:	0800b4d5 	.word	0x0800b4d5
 800b448:	0800b4e9 	.word	0x0800b4e9
 800b44c:	0800b533 	.word	0x0800b533
 800b450:	0800b461 	.word	0x0800b461
 800b454:	0800b461 	.word	0x0800b461
 800b458:	0800b4d5 	.word	0x0800b4d5
 800b45c:	0800b4e9 	.word	0x0800b4e9
				case tmrCOMMAND_START_FROM_ISR :
				case tmrCOMMAND_RESET :
				case tmrCOMMAND_RESET_FROM_ISR :
				case tmrCOMMAND_START_DONT_TRACE :
					/* Start or restart a timer. */
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b460:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b462:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800b466:	f043 0301 	orr.w	r3, r3, #1
 800b46a:	b2da      	uxtb	r2, r3
 800b46c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b46e:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800b472:	68ba      	ldr	r2, [r7, #8]
 800b474:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b476:	699b      	ldr	r3, [r3, #24]
 800b478:	18d1      	adds	r1, r2, r3
 800b47a:	68bb      	ldr	r3, [r7, #8]
 800b47c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800b47e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800b480:	f7ff ff5c 	bl	800b33c <prvInsertTimerInActiveList>
 800b484:	4603      	mov	r3, r0
 800b486:	2b00      	cmp	r3, #0
 800b488:	d069      	beq.n	800b55e <prvProcessReceivedCommands+0x19e>
					{
						/* The timer expired before it was added to the active
						timer list.  Process it now. */
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b48a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b48c:	6a1b      	ldr	r3, [r3, #32]
 800b48e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800b490:	4798      	blx	r3
						traceTIMER_EXPIRED( pxTimer );

						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b492:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b494:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800b498:	f003 0304 	and.w	r3, r3, #4
 800b49c:	2b00      	cmp	r3, #0
 800b49e:	d05e      	beq.n	800b55e <prvProcessReceivedCommands+0x19e>
						{
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800b4a0:	68ba      	ldr	r2, [r7, #8]
 800b4a2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4a4:	699b      	ldr	r3, [r3, #24]
 800b4a6:	441a      	add	r2, r3
 800b4a8:	2300      	movs	r3, #0
 800b4aa:	9300      	str	r3, [sp, #0]
 800b4ac:	2300      	movs	r3, #0
 800b4ae:	2100      	movs	r1, #0
 800b4b0:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800b4b2:	f7ff fe05 	bl	800b0c0 <xTimerGenericCommand>
 800b4b6:	6238      	str	r0, [r7, #32]
							configASSERT( xResult );
 800b4b8:	6a3b      	ldr	r3, [r7, #32]
 800b4ba:	2b00      	cmp	r3, #0
 800b4bc:	d14f      	bne.n	800b55e <prvProcessReceivedCommands+0x19e>
	__asm volatile
 800b4be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b4c2:	f383 8811 	msr	BASEPRI, r3
 800b4c6:	f3bf 8f6f 	isb	sy
 800b4ca:	f3bf 8f4f 	dsb	sy
 800b4ce:	61bb      	str	r3, [r7, #24]
}
 800b4d0:	bf00      	nop
 800b4d2:	e7fe      	b.n	800b4d2 <prvProcessReceivedCommands+0x112>
					break;

				case tmrCOMMAND_STOP :
				case tmrCOMMAND_STOP_FROM_ISR :
					/* The timer has already been removed from the active list. */
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b4d4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4d6:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800b4da:	f023 0301 	bic.w	r3, r3, #1
 800b4de:	b2da      	uxtb	r2, r3
 800b4e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4e2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
					break;
 800b4e6:	e03a      	b.n	800b55e <prvProcessReceivedCommands+0x19e>

				case tmrCOMMAND_CHANGE_PERIOD :
				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b4e8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4ea:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800b4ee:	f043 0301 	orr.w	r3, r3, #1
 800b4f2:	b2da      	uxtb	r2, r3
 800b4f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4f6:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800b4fa:	68ba      	ldr	r2, [r7, #8]
 800b4fc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4fe:	619a      	str	r2, [r3, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800b500:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b502:	699b      	ldr	r3, [r3, #24]
 800b504:	2b00      	cmp	r3, #0
 800b506:	d10a      	bne.n	800b51e <prvProcessReceivedCommands+0x15e>
	__asm volatile
 800b508:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b50c:	f383 8811 	msr	BASEPRI, r3
 800b510:	f3bf 8f6f 	isb	sy
 800b514:	f3bf 8f4f 	dsb	sy
 800b518:	617b      	str	r3, [r7, #20]
}
 800b51a:	bf00      	nop
 800b51c:	e7fe      	b.n	800b51c <prvProcessReceivedCommands+0x15c>
					be longer or shorter than the old one.  The command time is
					therefore set to the current time, and as the period cannot
					be zero the next expiry time can only be in the future,
					meaning (unlike for the xTimerStart() case above) there is
					no fail case that needs to be handled here. */
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800b51e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b520:	699a      	ldr	r2, [r3, #24]
 800b522:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b524:	18d1      	adds	r1, r2, r3
 800b526:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b528:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800b52a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800b52c:	f7ff ff06 	bl	800b33c <prvInsertTimerInActiveList>
					break;
 800b530:	e015      	b.n	800b55e <prvProcessReceivedCommands+0x19e>
					#if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
					{
						/* The timer has already been removed from the active list,
						just free up the memory if the memory was dynamically
						allocated. */
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800b532:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b534:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800b538:	f003 0302 	and.w	r3, r3, #2
 800b53c:	2b00      	cmp	r3, #0
 800b53e:	d103      	bne.n	800b548 <prvProcessReceivedCommands+0x188>
						{
							vPortFree( pxTimer );
 800b540:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800b542:	f000 fbdd 	bl	800bd00 <vPortFree>
 800b546:	e00a      	b.n	800b55e <prvProcessReceivedCommands+0x19e>
						}
						else
						{
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b548:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b54a:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800b54e:	f023 0301 	bic.w	r3, r3, #1
 800b552:	b2da      	uxtb	r2, r3
 800b554:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b556:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
						no need to free the memory - just mark the timer as
						"not active". */
						pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
					}
					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
					break;
 800b55a:	e000      	b.n	800b55e <prvProcessReceivedCommands+0x19e>

				default	:
					/* Don't expect to get here. */
					break;
			}
		}
 800b55c:	bf00      	nop
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800b55e:	4b08      	ldr	r3, [pc, #32]	; (800b580 <prvProcessReceivedCommands+0x1c0>)
 800b560:	681b      	ldr	r3, [r3, #0]
 800b562:	1d39      	adds	r1, r7, #4
 800b564:	2200      	movs	r2, #0
 800b566:	4618      	mov	r0, r3
 800b568:	f7fe fbec 	bl	8009d44 <xQueueReceive>
 800b56c:	4603      	mov	r3, r0
 800b56e:	2b00      	cmp	r3, #0
 800b570:	f47f af2a 	bne.w	800b3c8 <prvProcessReceivedCommands+0x8>
	}
}
 800b574:	bf00      	nop
 800b576:	bf00      	nop
 800b578:	3730      	adds	r7, #48	; 0x30
 800b57a:	46bd      	mov	sp, r7
 800b57c:	bd80      	pop	{r7, pc}
 800b57e:	bf00      	nop
 800b580:	200013f4 	.word	0x200013f4

0800b584 <prvSwitchTimerLists>:
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800b584:	b580      	push	{r7, lr}
 800b586:	b088      	sub	sp, #32
 800b588:	af02      	add	r7, sp, #8

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800b58a:	e048      	b.n	800b61e <prvSwitchTimerLists+0x9a>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b58c:	4b2d      	ldr	r3, [pc, #180]	; (800b644 <prvSwitchTimerLists+0xc0>)
 800b58e:	681b      	ldr	r3, [r3, #0]
 800b590:	68db      	ldr	r3, [r3, #12]
 800b592:	681b      	ldr	r3, [r3, #0]
 800b594:	613b      	str	r3, [r7, #16]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b596:	4b2b      	ldr	r3, [pc, #172]	; (800b644 <prvSwitchTimerLists+0xc0>)
 800b598:	681b      	ldr	r3, [r3, #0]
 800b59a:	68db      	ldr	r3, [r3, #12]
 800b59c:	68db      	ldr	r3, [r3, #12]
 800b59e:	60fb      	str	r3, [r7, #12]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b5a0:	68fb      	ldr	r3, [r7, #12]
 800b5a2:	3304      	adds	r3, #4
 800b5a4:	4618      	mov	r0, r3
 800b5a6:	f7fe f905 	bl	80097b4 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b5aa:	68fb      	ldr	r3, [r7, #12]
 800b5ac:	6a1b      	ldr	r3, [r3, #32]
 800b5ae:	68f8      	ldr	r0, [r7, #12]
 800b5b0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b5b2:	68fb      	ldr	r3, [r7, #12]
 800b5b4:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800b5b8:	f003 0304 	and.w	r3, r3, #4
 800b5bc:	2b00      	cmp	r3, #0
 800b5be:	d02e      	beq.n	800b61e <prvSwitchTimerLists+0x9a>
			the timer going into the same timer list then it has already expired
			and the timer should be re-inserted into the current list so it is
			processed again within this loop.  Otherwise a command should be sent
			to restart the timer to ensure it is only inserted into a list after
			the lists have been swapped. */
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800b5c0:	68fb      	ldr	r3, [r7, #12]
 800b5c2:	699b      	ldr	r3, [r3, #24]
 800b5c4:	693a      	ldr	r2, [r7, #16]
 800b5c6:	4413      	add	r3, r2
 800b5c8:	60bb      	str	r3, [r7, #8]
			if( xReloadTime > xNextExpireTime )
 800b5ca:	68ba      	ldr	r2, [r7, #8]
 800b5cc:	693b      	ldr	r3, [r7, #16]
 800b5ce:	429a      	cmp	r2, r3
 800b5d0:	d90e      	bls.n	800b5f0 <prvSwitchTimerLists+0x6c>
			{
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800b5d2:	68fb      	ldr	r3, [r7, #12]
 800b5d4:	68ba      	ldr	r2, [r7, #8]
 800b5d6:	605a      	str	r2, [r3, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b5d8:	68fb      	ldr	r3, [r7, #12]
 800b5da:	68fa      	ldr	r2, [r7, #12]
 800b5dc:	611a      	str	r2, [r3, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b5de:	4b19      	ldr	r3, [pc, #100]	; (800b644 <prvSwitchTimerLists+0xc0>)
 800b5e0:	681a      	ldr	r2, [r3, #0]
 800b5e2:	68fb      	ldr	r3, [r7, #12]
 800b5e4:	3304      	adds	r3, #4
 800b5e6:	4619      	mov	r1, r3
 800b5e8:	4610      	mov	r0, r2
 800b5ea:	f7fe f8aa 	bl	8009742 <vListInsert>
 800b5ee:	e016      	b.n	800b61e <prvSwitchTimerLists+0x9a>
			}
			else
			{
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b5f0:	2300      	movs	r3, #0
 800b5f2:	9300      	str	r3, [sp, #0]
 800b5f4:	2300      	movs	r3, #0
 800b5f6:	693a      	ldr	r2, [r7, #16]
 800b5f8:	2100      	movs	r1, #0
 800b5fa:	68f8      	ldr	r0, [r7, #12]
 800b5fc:	f7ff fd60 	bl	800b0c0 <xTimerGenericCommand>
 800b600:	6078      	str	r0, [r7, #4]
				configASSERT( xResult );
 800b602:	687b      	ldr	r3, [r7, #4]
 800b604:	2b00      	cmp	r3, #0
 800b606:	d10a      	bne.n	800b61e <prvSwitchTimerLists+0x9a>
	__asm volatile
 800b608:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b60c:	f383 8811 	msr	BASEPRI, r3
 800b610:	f3bf 8f6f 	isb	sy
 800b614:	f3bf 8f4f 	dsb	sy
 800b618:	603b      	str	r3, [r7, #0]
}
 800b61a:	bf00      	nop
 800b61c:	e7fe      	b.n	800b61c <prvSwitchTimerLists+0x98>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800b61e:	4b09      	ldr	r3, [pc, #36]	; (800b644 <prvSwitchTimerLists+0xc0>)
 800b620:	681b      	ldr	r3, [r3, #0]
 800b622:	681b      	ldr	r3, [r3, #0]
 800b624:	2b00      	cmp	r3, #0
 800b626:	d1b1      	bne.n	800b58c <prvSwitchTimerLists+0x8>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
 800b628:	4b06      	ldr	r3, [pc, #24]	; (800b644 <prvSwitchTimerLists+0xc0>)
 800b62a:	681b      	ldr	r3, [r3, #0]
 800b62c:	617b      	str	r3, [r7, #20]
	pxCurrentTimerList = pxOverflowTimerList;
 800b62e:	4b06      	ldr	r3, [pc, #24]	; (800b648 <prvSwitchTimerLists+0xc4>)
 800b630:	681b      	ldr	r3, [r3, #0]
 800b632:	4a04      	ldr	r2, [pc, #16]	; (800b644 <prvSwitchTimerLists+0xc0>)
 800b634:	6013      	str	r3, [r2, #0]
	pxOverflowTimerList = pxTemp;
 800b636:	4a04      	ldr	r2, [pc, #16]	; (800b648 <prvSwitchTimerLists+0xc4>)
 800b638:	697b      	ldr	r3, [r7, #20]
 800b63a:	6013      	str	r3, [r2, #0]
}
 800b63c:	bf00      	nop
 800b63e:	3718      	adds	r7, #24
 800b640:	46bd      	mov	sp, r7
 800b642:	bd80      	pop	{r7, pc}
 800b644:	200013ec 	.word	0x200013ec
 800b648:	200013f0 	.word	0x200013f0

0800b64c <prvCheckForValidListAndQueue>:
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800b64c:	b580      	push	{r7, lr}
 800b64e:	b082      	sub	sp, #8
 800b650:	af02      	add	r7, sp, #8
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
 800b652:	f000 f967 	bl	800b924 <vPortEnterCritical>
	{
		if( xTimerQueue == NULL )
 800b656:	4b15      	ldr	r3, [pc, #84]	; (800b6ac <prvCheckForValidListAndQueue+0x60>)
 800b658:	681b      	ldr	r3, [r3, #0]
 800b65a:	2b00      	cmp	r3, #0
 800b65c:	d120      	bne.n	800b6a0 <prvCheckForValidListAndQueue+0x54>
		{
			vListInitialise( &xActiveTimerList1 );
 800b65e:	4814      	ldr	r0, [pc, #80]	; (800b6b0 <prvCheckForValidListAndQueue+0x64>)
 800b660:	f7fe f81e 	bl	80096a0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800b664:	4813      	ldr	r0, [pc, #76]	; (800b6b4 <prvCheckForValidListAndQueue+0x68>)
 800b666:	f7fe f81b 	bl	80096a0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800b66a:	4b13      	ldr	r3, [pc, #76]	; (800b6b8 <prvCheckForValidListAndQueue+0x6c>)
 800b66c:	4a10      	ldr	r2, [pc, #64]	; (800b6b0 <prvCheckForValidListAndQueue+0x64>)
 800b66e:	601a      	str	r2, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800b670:	4b12      	ldr	r3, [pc, #72]	; (800b6bc <prvCheckForValidListAndQueue+0x70>)
 800b672:	4a10      	ldr	r2, [pc, #64]	; (800b6b4 <prvCheckForValidListAndQueue+0x68>)
 800b674:	601a      	str	r2, [r3, #0]
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b676:	2300      	movs	r3, #0
 800b678:	9300      	str	r3, [sp, #0]
 800b67a:	4b11      	ldr	r3, [pc, #68]	; (800b6c0 <prvCheckForValidListAndQueue+0x74>)
 800b67c:	4a11      	ldr	r2, [pc, #68]	; (800b6c4 <prvCheckForValidListAndQueue+0x78>)
 800b67e:	2110      	movs	r1, #16
 800b680:	200a      	movs	r0, #10
 800b682:	f7fe f929 	bl	80098d8 <xQueueGenericCreateStatic>
 800b686:	4603      	mov	r3, r0
 800b688:	4a08      	ldr	r2, [pc, #32]	; (800b6ac <prvCheckForValidListAndQueue+0x60>)
 800b68a:	6013      	str	r3, [r2, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800b68c:	4b07      	ldr	r3, [pc, #28]	; (800b6ac <prvCheckForValidListAndQueue+0x60>)
 800b68e:	681b      	ldr	r3, [r3, #0]
 800b690:	2b00      	cmp	r3, #0
 800b692:	d005      	beq.n	800b6a0 <prvCheckForValidListAndQueue+0x54>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800b694:	4b05      	ldr	r3, [pc, #20]	; (800b6ac <prvCheckForValidListAndQueue+0x60>)
 800b696:	681b      	ldr	r3, [r3, #0]
 800b698:	490b      	ldr	r1, [pc, #44]	; (800b6c8 <prvCheckForValidListAndQueue+0x7c>)
 800b69a:	4618      	mov	r0, r3
 800b69c:	f7fe fd42 	bl	800a124 <vQueueAddToRegistry>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800b6a0:	f000 f970 	bl	800b984 <vPortExitCritical>
}
 800b6a4:	bf00      	nop
 800b6a6:	46bd      	mov	sp, r7
 800b6a8:	bd80      	pop	{r7, pc}
 800b6aa:	bf00      	nop
 800b6ac:	200013f4 	.word	0x200013f4
 800b6b0:	200013c4 	.word	0x200013c4
 800b6b4:	200013d8 	.word	0x200013d8
 800b6b8:	200013ec 	.word	0x200013ec
 800b6bc:	200013f0 	.word	0x200013f0
 800b6c0:	200014a0 	.word	0x200014a0
 800b6c4:	20001400 	.word	0x20001400
 800b6c8:	0802e758 	.word	0x0802e758

0800b6cc <pxPortInitialiseStack>:

/*
 * See header file for description.
 */
StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters )
{
 800b6cc:	b480      	push	{r7}
 800b6ce:	b085      	sub	sp, #20
 800b6d0:	af00      	add	r7, sp, #0
 800b6d2:	60f8      	str	r0, [r7, #12]
 800b6d4:	60b9      	str	r1, [r7, #8]
 800b6d6:	607a      	str	r2, [r7, #4]
	/* Simulate the stack frame as it would be created by a context switch
	interrupt. */

	/* Offset added to account for the way the MCU uses the stack on entry/exit
	of interrupts, and to ensure alignment. */
	pxTopOfStack--;
 800b6d8:	68fb      	ldr	r3, [r7, #12]
 800b6da:	3b04      	subs	r3, #4
 800b6dc:	60fb      	str	r3, [r7, #12]

	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800b6de:	68fb      	ldr	r3, [r7, #12]
 800b6e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800b6e4:	601a      	str	r2, [r3, #0]
	pxTopOfStack--;
 800b6e6:	68fb      	ldr	r3, [r7, #12]
 800b6e8:	3b04      	subs	r3, #4
 800b6ea:	60fb      	str	r3, [r7, #12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800b6ec:	68bb      	ldr	r3, [r7, #8]
 800b6ee:	f023 0201 	bic.w	r2, r3, #1
 800b6f2:	68fb      	ldr	r3, [r7, #12]
 800b6f4:	601a      	str	r2, [r3, #0]
	pxTopOfStack--;
 800b6f6:	68fb      	ldr	r3, [r7, #12]
 800b6f8:	3b04      	subs	r3, #4
 800b6fa:	60fb      	str	r3, [r7, #12]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800b6fc:	4a0c      	ldr	r2, [pc, #48]	; (800b730 <pxPortInitialiseStack+0x64>)
 800b6fe:	68fb      	ldr	r3, [r7, #12]
 800b700:	601a      	str	r2, [r3, #0]

	/* Save code space by skipping register initialisation. */
	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 800b702:	68fb      	ldr	r3, [r7, #12]
 800b704:	3b14      	subs	r3, #20
 800b706:	60fb      	str	r3, [r7, #12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800b708:	687a      	ldr	r2, [r7, #4]
 800b70a:	68fb      	ldr	r3, [r7, #12]
 800b70c:	601a      	str	r2, [r3, #0]

	/* A save method is being used that requires each task to maintain its
	own exec return value. */
	pxTopOfStack--;
 800b70e:	68fb      	ldr	r3, [r7, #12]
 800b710:	3b04      	subs	r3, #4
 800b712:	60fb      	str	r3, [r7, #12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800b714:	68fb      	ldr	r3, [r7, #12]
 800b716:	f06f 0202 	mvn.w	r2, #2
 800b71a:	601a      	str	r2, [r3, #0]

	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 800b71c:	68fb      	ldr	r3, [r7, #12]
 800b71e:	3b20      	subs	r3, #32
 800b720:	60fb      	str	r3, [r7, #12]

	return pxTopOfStack;
 800b722:	68fb      	ldr	r3, [r7, #12]
}
 800b724:	4618      	mov	r0, r3
 800b726:	3714      	adds	r7, #20
 800b728:	46bd      	mov	sp, r7
 800b72a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b72e:	4770      	bx	lr
 800b730:	0800b735 	.word	0x0800b735

0800b734 <prvTaskExitError>:
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
 800b734:	b480      	push	{r7}
 800b736:	b085      	sub	sp, #20
 800b738:	af00      	add	r7, sp, #0
volatile uint32_t ulDummy = 0;
 800b73a:	2300      	movs	r3, #0
 800b73c:	607b      	str	r3, [r7, #4]
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
 800b73e:	4b12      	ldr	r3, [pc, #72]	; (800b788 <prvTaskExitError+0x54>)
 800b740:	681b      	ldr	r3, [r3, #0]
 800b742:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800b746:	d00a      	beq.n	800b75e <prvTaskExitError+0x2a>
	__asm volatile
 800b748:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b74c:	f383 8811 	msr	BASEPRI, r3
 800b750:	f3bf 8f6f 	isb	sy
 800b754:	f3bf 8f4f 	dsb	sy
 800b758:	60fb      	str	r3, [r7, #12]
}
 800b75a:	bf00      	nop
 800b75c:	e7fe      	b.n	800b75c <prvTaskExitError+0x28>
	__asm volatile
 800b75e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b762:	f383 8811 	msr	BASEPRI, r3
 800b766:	f3bf 8f6f 	isb	sy
 800b76a:	f3bf 8f4f 	dsb	sy
 800b76e:	60bb      	str	r3, [r7, #8]
}
 800b770:	bf00      	nop
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
 800b772:	bf00      	nop
 800b774:	687b      	ldr	r3, [r7, #4]
 800b776:	2b00      	cmp	r3, #0
 800b778:	d0fc      	beq.n	800b774 <prvTaskExitError+0x40>
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
 800b77a:	bf00      	nop
 800b77c:	bf00      	nop
 800b77e:	3714      	adds	r7, #20
 800b780:	46bd      	mov	sp, r7
 800b782:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b786:	4770      	bx	lr
 800b788:	2000002c 	.word	0x2000002c
 800b78c:	00000000 	.word	0x00000000

0800b790 <SVC_Handler>:
/*-----------------------------------------------------------*/

void vPortSVCHandler( void )
{
	__asm volatile (
 800b790:	4b07      	ldr	r3, [pc, #28]	; (800b7b0 <pxCurrentTCBConst2>)
 800b792:	6819      	ldr	r1, [r3, #0]
 800b794:	6808      	ldr	r0, [r1, #0]
 800b796:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b79a:	f380 8809 	msr	PSP, r0
 800b79e:	f3bf 8f6f 	isb	sy
 800b7a2:	f04f 0000 	mov.w	r0, #0
 800b7a6:	f380 8811 	msr	BASEPRI, r0
 800b7aa:	4770      	bx	lr
 800b7ac:	f3af 8000 	nop.w

0800b7b0 <pxCurrentTCBConst2>:
 800b7b0:	20000ec4 	.word	0x20000ec4
					"	bx r14							\n"
					"									\n"
					"	.align 4						\n"
					"pxCurrentTCBConst2: .word pxCurrentTCB				\n"
				);
}
 800b7b4:	bf00      	nop
 800b7b6:	bf00      	nop

0800b7b8 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800b7b8:	4808      	ldr	r0, [pc, #32]	; (800b7dc <prvPortStartFirstTask+0x24>)
 800b7ba:	6800      	ldr	r0, [r0, #0]
 800b7bc:	6800      	ldr	r0, [r0, #0]
 800b7be:	f380 8808 	msr	MSP, r0
 800b7c2:	f04f 0000 	mov.w	r0, #0
 800b7c6:	f380 8814 	msr	CONTROL, r0
 800b7ca:	b662      	cpsie	i
 800b7cc:	b661      	cpsie	f
 800b7ce:	f3bf 8f4f 	dsb	sy
 800b7d2:	f3bf 8f6f 	isb	sy
 800b7d6:	df00      	svc	0
 800b7d8:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800b7da:	bf00      	nop
 800b7dc:	e000ed08 	.word	0xe000ed08

0800b7e0 <xPortStartScheduler>:

/*
 * See header file for description.
 */
BaseType_t xPortStartScheduler( void )
{
 800b7e0:	b580      	push	{r7, lr}
 800b7e2:	b086      	sub	sp, #24
 800b7e4:	af00      	add	r7, sp, #0
	configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );

	/* This port can be used on all revisions of the Cortex-M7 core other than
	the r0p1 parts.  r0p1 parts should use the port from the
	/source/portable/GCC/ARM_CM7/r0p1 directory. */
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800b7e6:	4b46      	ldr	r3, [pc, #280]	; (800b900 <xPortStartScheduler+0x120>)
 800b7e8:	681b      	ldr	r3, [r3, #0]
 800b7ea:	4a46      	ldr	r2, [pc, #280]	; (800b904 <xPortStartScheduler+0x124>)
 800b7ec:	4293      	cmp	r3, r2
 800b7ee:	d10a      	bne.n	800b806 <xPortStartScheduler+0x26>
	__asm volatile
 800b7f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b7f4:	f383 8811 	msr	BASEPRI, r3
 800b7f8:	f3bf 8f6f 	isb	sy
 800b7fc:	f3bf 8f4f 	dsb	sy
 800b800:	613b      	str	r3, [r7, #16]
}
 800b802:	bf00      	nop
 800b804:	e7fe      	b.n	800b804 <xPortStartScheduler+0x24>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800b806:	4b3e      	ldr	r3, [pc, #248]	; (800b900 <xPortStartScheduler+0x120>)
 800b808:	681b      	ldr	r3, [r3, #0]
 800b80a:	4a3f      	ldr	r2, [pc, #252]	; (800b908 <xPortStartScheduler+0x128>)
 800b80c:	4293      	cmp	r3, r2
 800b80e:	d10a      	bne.n	800b826 <xPortStartScheduler+0x46>
	__asm volatile
 800b810:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b814:	f383 8811 	msr	BASEPRI, r3
 800b818:	f3bf 8f6f 	isb	sy
 800b81c:	f3bf 8f4f 	dsb	sy
 800b820:	60fb      	str	r3, [r7, #12]
}
 800b822:	bf00      	nop
 800b824:	e7fe      	b.n	800b824 <xPortStartScheduler+0x44>

	#if( configASSERT_DEFINED == 1 )
	{
		volatile uint32_t ulOriginalPriority;
		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_IP_REGISTERS_OFFSET_16 + portFIRST_USER_INTERRUPT_NUMBER );
 800b826:	4b39      	ldr	r3, [pc, #228]	; (800b90c <xPortStartScheduler+0x12c>)
 800b828:	617b      	str	r3, [r7, #20]
		functions can be called.  ISR safe functions are those that end in
		"FromISR".  FreeRTOS maintains separate thread and ISR API functions to
		ensure interrupt entry is as fast and simple as possible.

		Save the interrupt priority value that is about to be clobbered. */
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800b82a:	697b      	ldr	r3, [r7, #20]
 800b82c:	781b      	ldrb	r3, [r3, #0]
 800b82e:	b2db      	uxtb	r3, r3
 800b830:	607b      	str	r3, [r7, #4]

		/* Determine the number of priority bits available.  First write to all
		possible bits. */
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800b832:	697b      	ldr	r3, [r7, #20]
 800b834:	22ff      	movs	r2, #255	; 0xff
 800b836:	701a      	strb	r2, [r3, #0]

		/* Read the value back to see how many bits stuck. */
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800b838:	697b      	ldr	r3, [r7, #20]
 800b83a:	781b      	ldrb	r3, [r3, #0]
 800b83c:	b2db      	uxtb	r3, r3
 800b83e:	70fb      	strb	r3, [r7, #3]

		/* Use the same mask on the maximum system call priority. */
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800b840:	78fb      	ldrb	r3, [r7, #3]
 800b842:	b2db      	uxtb	r3, r3
 800b844:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800b848:	b2da      	uxtb	r2, r3
 800b84a:	4b31      	ldr	r3, [pc, #196]	; (800b910 <xPortStartScheduler+0x130>)
 800b84c:	701a      	strb	r2, [r3, #0]

		/* Calculate the maximum acceptable priority group value for the number
		of bits read back. */
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800b84e:	4b31      	ldr	r3, [pc, #196]	; (800b914 <xPortStartScheduler+0x134>)
 800b850:	2207      	movs	r2, #7
 800b852:	601a      	str	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800b854:	e009      	b.n	800b86a <xPortStartScheduler+0x8a>
		{
			ulMaxPRIGROUPValue--;
 800b856:	4b2f      	ldr	r3, [pc, #188]	; (800b914 <xPortStartScheduler+0x134>)
 800b858:	681b      	ldr	r3, [r3, #0]
 800b85a:	3b01      	subs	r3, #1
 800b85c:	4a2d      	ldr	r2, [pc, #180]	; (800b914 <xPortStartScheduler+0x134>)
 800b85e:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800b860:	78fb      	ldrb	r3, [r7, #3]
 800b862:	b2db      	uxtb	r3, r3
 800b864:	005b      	lsls	r3, r3, #1
 800b866:	b2db      	uxtb	r3, r3
 800b868:	70fb      	strb	r3, [r7, #3]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800b86a:	78fb      	ldrb	r3, [r7, #3]
 800b86c:	b2db      	uxtb	r3, r3
 800b86e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b872:	2b80      	cmp	r3, #128	; 0x80
 800b874:	d0ef      	beq.n	800b856 <xPortStartScheduler+0x76>
		#ifdef configPRIO_BITS
		{
			/* Check the FreeRTOS configuration that defines the number of
			priority bits matches the number of priority bits actually queried
			from the hardware. */
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800b876:	4b27      	ldr	r3, [pc, #156]	; (800b914 <xPortStartScheduler+0x134>)
 800b878:	681b      	ldr	r3, [r3, #0]
 800b87a:	f1c3 0307 	rsb	r3, r3, #7
 800b87e:	2b04      	cmp	r3, #4
 800b880:	d00a      	beq.n	800b898 <xPortStartScheduler+0xb8>
	__asm volatile
 800b882:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b886:	f383 8811 	msr	BASEPRI, r3
 800b88a:	f3bf 8f6f 	isb	sy
 800b88e:	f3bf 8f4f 	dsb	sy
 800b892:	60bb      	str	r3, [r7, #8]
}
 800b894:	bf00      	nop
 800b896:	e7fe      	b.n	800b896 <xPortStartScheduler+0xb6>
		}
		#endif

		/* Shift the priority group value back to its position within the AIRCR
		register. */
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 800b898:	4b1e      	ldr	r3, [pc, #120]	; (800b914 <xPortStartScheduler+0x134>)
 800b89a:	681b      	ldr	r3, [r3, #0]
 800b89c:	021b      	lsls	r3, r3, #8
 800b89e:	4a1d      	ldr	r2, [pc, #116]	; (800b914 <xPortStartScheduler+0x134>)
 800b8a0:	6013      	str	r3, [r2, #0]
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800b8a2:	4b1c      	ldr	r3, [pc, #112]	; (800b914 <xPortStartScheduler+0x134>)
 800b8a4:	681b      	ldr	r3, [r3, #0]
 800b8a6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800b8aa:	4a1a      	ldr	r2, [pc, #104]	; (800b914 <xPortStartScheduler+0x134>)
 800b8ac:	6013      	str	r3, [r2, #0]

		/* Restore the clobbered interrupt priority register to its original
		value. */
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800b8ae:	687b      	ldr	r3, [r7, #4]
 800b8b0:	b2da      	uxtb	r2, r3
 800b8b2:	697b      	ldr	r3, [r7, #20]
 800b8b4:	701a      	strb	r2, [r3, #0]
	}
	#endif /* conifgASSERT_DEFINED */

	/* Make PendSV and SysTick the lowest priority interrupts. */
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800b8b6:	4b18      	ldr	r3, [pc, #96]	; (800b918 <xPortStartScheduler+0x138>)
 800b8b8:	681b      	ldr	r3, [r3, #0]
 800b8ba:	4a17      	ldr	r2, [pc, #92]	; (800b918 <xPortStartScheduler+0x138>)
 800b8bc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800b8c0:	6013      	str	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800b8c2:	4b15      	ldr	r3, [pc, #84]	; (800b918 <xPortStartScheduler+0x138>)
 800b8c4:	681b      	ldr	r3, [r3, #0]
 800b8c6:	4a14      	ldr	r2, [pc, #80]	; (800b918 <xPortStartScheduler+0x138>)
 800b8c8:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800b8cc:	6013      	str	r3, [r2, #0]

	/* Start the timer that generates the tick ISR.  Interrupts are disabled
	here already. */
	vPortSetupTimerInterrupt();
 800b8ce:	f000 f8dd 	bl	800ba8c <vPortSetupTimerInterrupt>

	/* Initialise the critical nesting count ready for the first task. */
	uxCriticalNesting = 0;
 800b8d2:	4b12      	ldr	r3, [pc, #72]	; (800b91c <xPortStartScheduler+0x13c>)
 800b8d4:	2200      	movs	r2, #0
 800b8d6:	601a      	str	r2, [r3, #0]

	/* Ensure the VFP is enabled - it should be anyway. */
	vPortEnableVFP();
 800b8d8:	f000 f8fc 	bl	800bad4 <vPortEnableVFP>

	/* Lazy save always. */
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800b8dc:	4b10      	ldr	r3, [pc, #64]	; (800b920 <xPortStartScheduler+0x140>)
 800b8de:	681b      	ldr	r3, [r3, #0]
 800b8e0:	4a0f      	ldr	r2, [pc, #60]	; (800b920 <xPortStartScheduler+0x140>)
 800b8e2:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800b8e6:	6013      	str	r3, [r2, #0]

	/* Start the first task. */
	prvPortStartFirstTask();
 800b8e8:	f7ff ff66 	bl	800b7b8 <prvPortStartFirstTask>
	exit error function to prevent compiler warnings about a static function
	not being called in the case that the application writer overrides this
	functionality by defining configTASK_RETURN_ADDRESS.  Call
	vTaskSwitchContext() so link time optimisation does not remove the
	symbol. */
	vTaskSwitchContext();
 800b8ec:	f7ff f84a 	bl	800a984 <vTaskSwitchContext>
	prvTaskExitError();
 800b8f0:	f7ff ff20 	bl	800b734 <prvTaskExitError>

	/* Should not get here! */
	return 0;
 800b8f4:	2300      	movs	r3, #0
}
 800b8f6:	4618      	mov	r0, r3
 800b8f8:	3718      	adds	r7, #24
 800b8fa:	46bd      	mov	sp, r7
 800b8fc:	bd80      	pop	{r7, pc}
 800b8fe:	bf00      	nop
 800b900:	e000ed00 	.word	0xe000ed00
 800b904:	410fc271 	.word	0x410fc271
 800b908:	410fc270 	.word	0x410fc270
 800b90c:	e000e400 	.word	0xe000e400
 800b910:	200014f0 	.word	0x200014f0
 800b914:	200014f4 	.word	0x200014f4
 800b918:	e000ed20 	.word	0xe000ed20
 800b91c:	2000002c 	.word	0x2000002c
 800b920:	e000ef34 	.word	0xe000ef34

0800b924 <vPortEnterCritical>:
	configASSERT( uxCriticalNesting == 1000UL );
}
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
 800b924:	b480      	push	{r7}
 800b926:	b083      	sub	sp, #12
 800b928:	af00      	add	r7, sp, #0
	__asm volatile
 800b92a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b92e:	f383 8811 	msr	BASEPRI, r3
 800b932:	f3bf 8f6f 	isb	sy
 800b936:	f3bf 8f4f 	dsb	sy
 800b93a:	607b      	str	r3, [r7, #4]
}
 800b93c:	bf00      	nop
	portDISABLE_INTERRUPTS();
	uxCriticalNesting++;
 800b93e:	4b0f      	ldr	r3, [pc, #60]	; (800b97c <vPortEnterCritical+0x58>)
 800b940:	681b      	ldr	r3, [r3, #0]
 800b942:	3301      	adds	r3, #1
 800b944:	4a0d      	ldr	r2, [pc, #52]	; (800b97c <vPortEnterCritical+0x58>)
 800b946:	6013      	str	r3, [r2, #0]
	/* This is not the interrupt safe version of the enter critical function so
	assert() if it is being called from an interrupt context.  Only API
	functions that end in "FromISR" can be used in an interrupt.  Only assert if
	the critical nesting count is 1 to protect against recursive calls if the
	assert function also uses a critical section. */
	if( uxCriticalNesting == 1 )
 800b948:	4b0c      	ldr	r3, [pc, #48]	; (800b97c <vPortEnterCritical+0x58>)
 800b94a:	681b      	ldr	r3, [r3, #0]
 800b94c:	2b01      	cmp	r3, #1
 800b94e:	d10f      	bne.n	800b970 <vPortEnterCritical+0x4c>
	{
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800b950:	4b0b      	ldr	r3, [pc, #44]	; (800b980 <vPortEnterCritical+0x5c>)
 800b952:	681b      	ldr	r3, [r3, #0]
 800b954:	b2db      	uxtb	r3, r3
 800b956:	2b00      	cmp	r3, #0
 800b958:	d00a      	beq.n	800b970 <vPortEnterCritical+0x4c>
	__asm volatile
 800b95a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b95e:	f383 8811 	msr	BASEPRI, r3
 800b962:	f3bf 8f6f 	isb	sy
 800b966:	f3bf 8f4f 	dsb	sy
 800b96a:	603b      	str	r3, [r7, #0]
}
 800b96c:	bf00      	nop
 800b96e:	e7fe      	b.n	800b96e <vPortEnterCritical+0x4a>
	}
}
 800b970:	bf00      	nop
 800b972:	370c      	adds	r7, #12
 800b974:	46bd      	mov	sp, r7
 800b976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b97a:	4770      	bx	lr
 800b97c:	2000002c 	.word	0x2000002c
 800b980:	e000ed04 	.word	0xe000ed04

0800b984 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
 800b984:	b480      	push	{r7}
 800b986:	b083      	sub	sp, #12
 800b988:	af00      	add	r7, sp, #0
	configASSERT( uxCriticalNesting );
 800b98a:	4b12      	ldr	r3, [pc, #72]	; (800b9d4 <vPortExitCritical+0x50>)
 800b98c:	681b      	ldr	r3, [r3, #0]
 800b98e:	2b00      	cmp	r3, #0
 800b990:	d10a      	bne.n	800b9a8 <vPortExitCritical+0x24>
	__asm volatile
 800b992:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b996:	f383 8811 	msr	BASEPRI, r3
 800b99a:	f3bf 8f6f 	isb	sy
 800b99e:	f3bf 8f4f 	dsb	sy
 800b9a2:	607b      	str	r3, [r7, #4]
}
 800b9a4:	bf00      	nop
 800b9a6:	e7fe      	b.n	800b9a6 <vPortExitCritical+0x22>
	uxCriticalNesting--;
 800b9a8:	4b0a      	ldr	r3, [pc, #40]	; (800b9d4 <vPortExitCritical+0x50>)
 800b9aa:	681b      	ldr	r3, [r3, #0]
 800b9ac:	3b01      	subs	r3, #1
 800b9ae:	4a09      	ldr	r2, [pc, #36]	; (800b9d4 <vPortExitCritical+0x50>)
 800b9b0:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800b9b2:	4b08      	ldr	r3, [pc, #32]	; (800b9d4 <vPortExitCritical+0x50>)
 800b9b4:	681b      	ldr	r3, [r3, #0]
 800b9b6:	2b00      	cmp	r3, #0
 800b9b8:	d105      	bne.n	800b9c6 <vPortExitCritical+0x42>
 800b9ba:	2300      	movs	r3, #0
 800b9bc:	603b      	str	r3, [r7, #0]
	__asm volatile
 800b9be:	683b      	ldr	r3, [r7, #0]
 800b9c0:	f383 8811 	msr	BASEPRI, r3
}
 800b9c4:	bf00      	nop
	{
		portENABLE_INTERRUPTS();
	}
}
 800b9c6:	bf00      	nop
 800b9c8:	370c      	adds	r7, #12
 800b9ca:	46bd      	mov	sp, r7
 800b9cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9d0:	4770      	bx	lr
 800b9d2:	bf00      	nop
 800b9d4:	2000002c 	.word	0x2000002c
	...

0800b9e0 <PendSV_Handler>:

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
 800b9e0:	f3ef 8009 	mrs	r0, PSP
 800b9e4:	f3bf 8f6f 	isb	sy
 800b9e8:	4b15      	ldr	r3, [pc, #84]	; (800ba40 <pxCurrentTCBConst>)
 800b9ea:	681a      	ldr	r2, [r3, #0]
 800b9ec:	f01e 0f10 	tst.w	lr, #16
 800b9f0:	bf08      	it	eq
 800b9f2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800b9f6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b9fa:	6010      	str	r0, [r2, #0]
 800b9fc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800ba00:	f04f 0050 	mov.w	r0, #80	; 0x50
 800ba04:	f380 8811 	msr	BASEPRI, r0
 800ba08:	f3bf 8f4f 	dsb	sy
 800ba0c:	f3bf 8f6f 	isb	sy
 800ba10:	f7fe ffb8 	bl	800a984 <vTaskSwitchContext>
 800ba14:	f04f 0000 	mov.w	r0, #0
 800ba18:	f380 8811 	msr	BASEPRI, r0
 800ba1c:	bc09      	pop	{r0, r3}
 800ba1e:	6819      	ldr	r1, [r3, #0]
 800ba20:	6808      	ldr	r0, [r1, #0]
 800ba22:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba26:	f01e 0f10 	tst.w	lr, #16
 800ba2a:	bf08      	it	eq
 800ba2c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800ba30:	f380 8809 	msr	PSP, r0
 800ba34:	f3bf 8f6f 	isb	sy
 800ba38:	4770      	bx	lr
 800ba3a:	bf00      	nop
 800ba3c:	f3af 8000 	nop.w

0800ba40 <pxCurrentTCBConst>:
 800ba40:	20000ec4 	.word	0x20000ec4
	"										\n"
	"	.align 4							\n"
	"pxCurrentTCBConst: .word pxCurrentTCB	\n"
	::"i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)
	);
}
 800ba44:	bf00      	nop
 800ba46:	bf00      	nop

0800ba48 <xPortSysTickHandler>:
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
 800ba48:	b580      	push	{r7, lr}
 800ba4a:	b082      	sub	sp, #8
 800ba4c:	af00      	add	r7, sp, #0
	__asm volatile
 800ba4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ba52:	f383 8811 	msr	BASEPRI, r3
 800ba56:	f3bf 8f6f 	isb	sy
 800ba5a:	f3bf 8f4f 	dsb	sy
 800ba5e:	607b      	str	r3, [r7, #4]
}
 800ba60:	bf00      	nop
	save and then restore the interrupt mask value as its value is already
	known. */
	portDISABLE_INTERRUPTS();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
 800ba62:	f7fe fed5 	bl	800a810 <xTaskIncrementTick>
 800ba66:	4603      	mov	r3, r0
 800ba68:	2b00      	cmp	r3, #0
 800ba6a:	d003      	beq.n	800ba74 <xPortSysTickHandler+0x2c>
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800ba6c:	4b06      	ldr	r3, [pc, #24]	; (800ba88 <xPortSysTickHandler+0x40>)
 800ba6e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ba72:	601a      	str	r2, [r3, #0]
 800ba74:	2300      	movs	r3, #0
 800ba76:	603b      	str	r3, [r7, #0]
	__asm volatile
 800ba78:	683b      	ldr	r3, [r7, #0]
 800ba7a:	f383 8811 	msr	BASEPRI, r3
}
 800ba7e:	bf00      	nop
		}
	}
	portENABLE_INTERRUPTS();
}
 800ba80:	bf00      	nop
 800ba82:	3708      	adds	r7, #8
 800ba84:	46bd      	mov	sp, r7
 800ba86:	bd80      	pop	{r7, pc}
 800ba88:	e000ed04 	.word	0xe000ed04

0800ba8c <vPortSetupTimerInterrupt>:
/*
 * Setup the systick timer to generate the tick interrupts at the required
 * frequency.
 */
__attribute__(( weak )) void vPortSetupTimerInterrupt( void )
{
 800ba8c:	b480      	push	{r7}
 800ba8e:	af00      	add	r7, sp, #0
		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
	}
	#endif /* configUSE_TICKLESS_IDLE */

	/* Stop and clear the SysTick. */
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ba90:	4b0b      	ldr	r3, [pc, #44]	; (800bac0 <vPortSetupTimerInterrupt+0x34>)
 800ba92:	2200      	movs	r2, #0
 800ba94:	601a      	str	r2, [r3, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800ba96:	4b0b      	ldr	r3, [pc, #44]	; (800bac4 <vPortSetupTimerInterrupt+0x38>)
 800ba98:	2200      	movs	r2, #0
 800ba9a:	601a      	str	r2, [r3, #0]

	/* Configure SysTick to interrupt at the requested rate. */
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ba9c:	4b0a      	ldr	r3, [pc, #40]	; (800bac8 <vPortSetupTimerInterrupt+0x3c>)
 800ba9e:	681b      	ldr	r3, [r3, #0]
 800baa0:	4a0a      	ldr	r2, [pc, #40]	; (800bacc <vPortSetupTimerInterrupt+0x40>)
 800baa2:	fba2 2303 	umull	r2, r3, r2, r3
 800baa6:	099b      	lsrs	r3, r3, #6
 800baa8:	4a09      	ldr	r2, [pc, #36]	; (800bad0 <vPortSetupTimerInterrupt+0x44>)
 800baaa:	3b01      	subs	r3, #1
 800baac:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800baae:	4b04      	ldr	r3, [pc, #16]	; (800bac0 <vPortSetupTimerInterrupt+0x34>)
 800bab0:	2207      	movs	r2, #7
 800bab2:	601a      	str	r2, [r3, #0]
}
 800bab4:	bf00      	nop
 800bab6:	46bd      	mov	sp, r7
 800bab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800babc:	4770      	bx	lr
 800babe:	bf00      	nop
 800bac0:	e000e010 	.word	0xe000e010
 800bac4:	e000e018 	.word	0xe000e018
 800bac8:	20000008 	.word	0x20000008
 800bacc:	10624dd3 	.word	0x10624dd3
 800bad0:	e000e014 	.word	0xe000e014

0800bad4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800bad4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800bae4 <vPortEnableVFP+0x10>
 800bad8:	6801      	ldr	r1, [r0, #0]
 800bada:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800bade:	6001      	str	r1, [r0, #0]
 800bae0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800bae2:	bf00      	nop
 800bae4:	e000ed88 	.word	0xe000ed88

0800bae8 <vPortValidateInterruptPriority>:
/*-----------------------------------------------------------*/

#if( configASSERT_DEFINED == 1 )

	void vPortValidateInterruptPriority( void )
	{
 800bae8:	b480      	push	{r7}
 800baea:	b085      	sub	sp, #20
 800baec:	af00      	add	r7, sp, #0
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800baee:	f3ef 8305 	mrs	r3, IPSR
 800baf2:	60fb      	str	r3, [r7, #12]

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800baf4:	68fb      	ldr	r3, [r7, #12]
 800baf6:	2b0f      	cmp	r3, #15
 800baf8:	d914      	bls.n	800bb24 <vPortValidateInterruptPriority+0x3c>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800bafa:	4a17      	ldr	r2, [pc, #92]	; (800bb58 <vPortValidateInterruptPriority+0x70>)
 800bafc:	68fb      	ldr	r3, [r7, #12]
 800bafe:	4413      	add	r3, r2
 800bb00:	781b      	ldrb	r3, [r3, #0]
 800bb02:	72fb      	strb	r3, [r7, #11]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800bb04:	4b15      	ldr	r3, [pc, #84]	; (800bb5c <vPortValidateInterruptPriority+0x74>)
 800bb06:	781b      	ldrb	r3, [r3, #0]
 800bb08:	7afa      	ldrb	r2, [r7, #11]
 800bb0a:	429a      	cmp	r2, r3
 800bb0c:	d20a      	bcs.n	800bb24 <vPortValidateInterruptPriority+0x3c>
	__asm volatile
 800bb0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bb12:	f383 8811 	msr	BASEPRI, r3
 800bb16:	f3bf 8f6f 	isb	sy
 800bb1a:	f3bf 8f4f 	dsb	sy
 800bb1e:	607b      	str	r3, [r7, #4]
}
 800bb20:	bf00      	nop
 800bb22:	e7fe      	b.n	800bb22 <vPortValidateInterruptPriority+0x3a>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800bb24:	4b0e      	ldr	r3, [pc, #56]	; (800bb60 <vPortValidateInterruptPriority+0x78>)
 800bb26:	681b      	ldr	r3, [r3, #0]
 800bb28:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 800bb2c:	4b0d      	ldr	r3, [pc, #52]	; (800bb64 <vPortValidateInterruptPriority+0x7c>)
 800bb2e:	681b      	ldr	r3, [r3, #0]
 800bb30:	429a      	cmp	r2, r3
 800bb32:	d90a      	bls.n	800bb4a <vPortValidateInterruptPriority+0x62>
	__asm volatile
 800bb34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bb38:	f383 8811 	msr	BASEPRI, r3
 800bb3c:	f3bf 8f6f 	isb	sy
 800bb40:	f3bf 8f4f 	dsb	sy
 800bb44:	603b      	str	r3, [r7, #0]
}
 800bb46:	bf00      	nop
 800bb48:	e7fe      	b.n	800bb48 <vPortValidateInterruptPriority+0x60>
	}
 800bb4a:	bf00      	nop
 800bb4c:	3714      	adds	r7, #20
 800bb4e:	46bd      	mov	sp, r7
 800bb50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb54:	4770      	bx	lr
 800bb56:	bf00      	nop
 800bb58:	e000e3f0 	.word	0xe000e3f0
 800bb5c:	200014f0 	.word	0x200014f0
 800bb60:	e000ed0c 	.word	0xe000ed0c
 800bb64:	200014f4 	.word	0x200014f4

0800bb68 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800bb68:	b580      	push	{r7, lr}
 800bb6a:	b08a      	sub	sp, #40	; 0x28
 800bb6c:	af00      	add	r7, sp, #0
 800bb6e:	6078      	str	r0, [r7, #4]
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;
 800bb70:	2300      	movs	r3, #0
 800bb72:	61fb      	str	r3, [r7, #28]

	vTaskSuspendAll();
 800bb74:	f7fe fd90 	bl	800a698 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800bb78:	4b5b      	ldr	r3, [pc, #364]	; (800bce8 <pvPortMalloc+0x180>)
 800bb7a:	681b      	ldr	r3, [r3, #0]
 800bb7c:	2b00      	cmp	r3, #0
 800bb7e:	d101      	bne.n	800bb84 <pvPortMalloc+0x1c>
		{
			prvHeapInit();
 800bb80:	f000 f920 	bl	800bdc4 <prvHeapInit>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800bb84:	4b59      	ldr	r3, [pc, #356]	; (800bcec <pvPortMalloc+0x184>)
 800bb86:	681a      	ldr	r2, [r3, #0]
 800bb88:	687b      	ldr	r3, [r7, #4]
 800bb8a:	4013      	ands	r3, r2
 800bb8c:	2b00      	cmp	r3, #0
 800bb8e:	f040 8093 	bne.w	800bcb8 <pvPortMalloc+0x150>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800bb92:	687b      	ldr	r3, [r7, #4]
 800bb94:	2b00      	cmp	r3, #0
 800bb96:	d01d      	beq.n	800bbd4 <pvPortMalloc+0x6c>
			{
				xWantedSize += xHeapStructSize;
 800bb98:	2208      	movs	r2, #8
 800bb9a:	687b      	ldr	r3, [r7, #4]
 800bb9c:	4413      	add	r3, r2
 800bb9e:	607b      	str	r3, [r7, #4]

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800bba0:	687b      	ldr	r3, [r7, #4]
 800bba2:	f003 0307 	and.w	r3, r3, #7
 800bba6:	2b00      	cmp	r3, #0
 800bba8:	d014      	beq.n	800bbd4 <pvPortMalloc+0x6c>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800bbaa:	687b      	ldr	r3, [r7, #4]
 800bbac:	f023 0307 	bic.w	r3, r3, #7
 800bbb0:	3308      	adds	r3, #8
 800bbb2:	607b      	str	r3, [r7, #4]
					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 800bbb4:	687b      	ldr	r3, [r7, #4]
 800bbb6:	f003 0307 	and.w	r3, r3, #7
 800bbba:	2b00      	cmp	r3, #0
 800bbbc:	d00a      	beq.n	800bbd4 <pvPortMalloc+0x6c>
	__asm volatile
 800bbbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bbc2:	f383 8811 	msr	BASEPRI, r3
 800bbc6:	f3bf 8f6f 	isb	sy
 800bbca:	f3bf 8f4f 	dsb	sy
 800bbce:	617b      	str	r3, [r7, #20]
}
 800bbd0:	bf00      	nop
 800bbd2:	e7fe      	b.n	800bbd2 <pvPortMalloc+0x6a>
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800bbd4:	687b      	ldr	r3, [r7, #4]
 800bbd6:	2b00      	cmp	r3, #0
 800bbd8:	d06e      	beq.n	800bcb8 <pvPortMalloc+0x150>
 800bbda:	4b45      	ldr	r3, [pc, #276]	; (800bcf0 <pvPortMalloc+0x188>)
 800bbdc:	681b      	ldr	r3, [r3, #0]
 800bbde:	687a      	ldr	r2, [r7, #4]
 800bbe0:	429a      	cmp	r2, r3
 800bbe2:	d869      	bhi.n	800bcb8 <pvPortMalloc+0x150>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
 800bbe4:	4b43      	ldr	r3, [pc, #268]	; (800bcf4 <pvPortMalloc+0x18c>)
 800bbe6:	623b      	str	r3, [r7, #32]
				pxBlock = xStart.pxNextFreeBlock;
 800bbe8:	4b42      	ldr	r3, [pc, #264]	; (800bcf4 <pvPortMalloc+0x18c>)
 800bbea:	681b      	ldr	r3, [r3, #0]
 800bbec:	627b      	str	r3, [r7, #36]	; 0x24
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800bbee:	e004      	b.n	800bbfa <pvPortMalloc+0x92>
				{
					pxPreviousBlock = pxBlock;
 800bbf0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bbf2:	623b      	str	r3, [r7, #32]
					pxBlock = pxBlock->pxNextFreeBlock;
 800bbf4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bbf6:	681b      	ldr	r3, [r3, #0]
 800bbf8:	627b      	str	r3, [r7, #36]	; 0x24
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800bbfa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bbfc:	685b      	ldr	r3, [r3, #4]
 800bbfe:	687a      	ldr	r2, [r7, #4]
 800bc00:	429a      	cmp	r2, r3
 800bc02:	d903      	bls.n	800bc0c <pvPortMalloc+0xa4>
 800bc04:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bc06:	681b      	ldr	r3, [r3, #0]
 800bc08:	2b00      	cmp	r3, #0
 800bc0a:	d1f1      	bne.n	800bbf0 <pvPortMalloc+0x88>
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800bc0c:	4b36      	ldr	r3, [pc, #216]	; (800bce8 <pvPortMalloc+0x180>)
 800bc0e:	681b      	ldr	r3, [r3, #0]
 800bc10:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800bc12:	429a      	cmp	r2, r3
 800bc14:	d050      	beq.n	800bcb8 <pvPortMalloc+0x150>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800bc16:	6a3b      	ldr	r3, [r7, #32]
 800bc18:	681b      	ldr	r3, [r3, #0]
 800bc1a:	2208      	movs	r2, #8
 800bc1c:	4413      	add	r3, r2
 800bc1e:	61fb      	str	r3, [r7, #28]

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800bc20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bc22:	681a      	ldr	r2, [r3, #0]
 800bc24:	6a3b      	ldr	r3, [r7, #32]
 800bc26:	601a      	str	r2, [r3, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800bc28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bc2a:	685a      	ldr	r2, [r3, #4]
 800bc2c:	687b      	ldr	r3, [r7, #4]
 800bc2e:	1ad2      	subs	r2, r2, r3
 800bc30:	2308      	movs	r3, #8
 800bc32:	005b      	lsls	r3, r3, #1
 800bc34:	429a      	cmp	r2, r3
 800bc36:	d91f      	bls.n	800bc78 <pvPortMalloc+0x110>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800bc38:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800bc3a:	687b      	ldr	r3, [r7, #4]
 800bc3c:	4413      	add	r3, r2
 800bc3e:	61bb      	str	r3, [r7, #24]
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800bc40:	69bb      	ldr	r3, [r7, #24]
 800bc42:	f003 0307 	and.w	r3, r3, #7
 800bc46:	2b00      	cmp	r3, #0
 800bc48:	d00a      	beq.n	800bc60 <pvPortMalloc+0xf8>
	__asm volatile
 800bc4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc4e:	f383 8811 	msr	BASEPRI, r3
 800bc52:	f3bf 8f6f 	isb	sy
 800bc56:	f3bf 8f4f 	dsb	sy
 800bc5a:	613b      	str	r3, [r7, #16]
}
 800bc5c:	bf00      	nop
 800bc5e:	e7fe      	b.n	800bc5e <pvPortMalloc+0xf6>

						/* Calculate the sizes of two blocks split from the
						single block. */
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800bc60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bc62:	685a      	ldr	r2, [r3, #4]
 800bc64:	687b      	ldr	r3, [r7, #4]
 800bc66:	1ad2      	subs	r2, r2, r3
 800bc68:	69bb      	ldr	r3, [r7, #24]
 800bc6a:	605a      	str	r2, [r3, #4]
						pxBlock->xBlockSize = xWantedSize;
 800bc6c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bc6e:	687a      	ldr	r2, [r7, #4]
 800bc70:	605a      	str	r2, [r3, #4]

						/* Insert the new block into the list of free blocks. */
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800bc72:	69b8      	ldr	r0, [r7, #24]
 800bc74:	f000 f908 	bl	800be88 <prvInsertBlockIntoFreeList>
					else
					{
						mtCOVERAGE_TEST_MARKER();
					}

					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800bc78:	4b1d      	ldr	r3, [pc, #116]	; (800bcf0 <pvPortMalloc+0x188>)
 800bc7a:	681a      	ldr	r2, [r3, #0]
 800bc7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bc7e:	685b      	ldr	r3, [r3, #4]
 800bc80:	1ad3      	subs	r3, r2, r3
 800bc82:	4a1b      	ldr	r2, [pc, #108]	; (800bcf0 <pvPortMalloc+0x188>)
 800bc84:	6013      	str	r3, [r2, #0]

					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800bc86:	4b1a      	ldr	r3, [pc, #104]	; (800bcf0 <pvPortMalloc+0x188>)
 800bc88:	681a      	ldr	r2, [r3, #0]
 800bc8a:	4b1b      	ldr	r3, [pc, #108]	; (800bcf8 <pvPortMalloc+0x190>)
 800bc8c:	681b      	ldr	r3, [r3, #0]
 800bc8e:	429a      	cmp	r2, r3
 800bc90:	d203      	bcs.n	800bc9a <pvPortMalloc+0x132>
					{
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800bc92:	4b17      	ldr	r3, [pc, #92]	; (800bcf0 <pvPortMalloc+0x188>)
 800bc94:	681b      	ldr	r3, [r3, #0]
 800bc96:	4a18      	ldr	r2, [pc, #96]	; (800bcf8 <pvPortMalloc+0x190>)
 800bc98:	6013      	str	r3, [r2, #0]
						mtCOVERAGE_TEST_MARKER();
					}

					/* The block is being returned - it is allocated and owned
					by the application and has no "next" block. */
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800bc9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bc9c:	685a      	ldr	r2, [r3, #4]
 800bc9e:	4b13      	ldr	r3, [pc, #76]	; (800bcec <pvPortMalloc+0x184>)
 800bca0:	681b      	ldr	r3, [r3, #0]
 800bca2:	431a      	orrs	r2, r3
 800bca4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bca6:	605a      	str	r2, [r3, #4]
					pxBlock->pxNextFreeBlock = NULL;
 800bca8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bcaa:	2200      	movs	r2, #0
 800bcac:	601a      	str	r2, [r3, #0]
					xNumberOfSuccessfulAllocations++;
 800bcae:	4b13      	ldr	r3, [pc, #76]	; (800bcfc <pvPortMalloc+0x194>)
 800bcb0:	681b      	ldr	r3, [r3, #0]
 800bcb2:	3301      	adds	r3, #1
 800bcb4:	4a11      	ldr	r2, [pc, #68]	; (800bcfc <pvPortMalloc+0x194>)
 800bcb6:	6013      	str	r3, [r2, #0]
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800bcb8:	f7fe fcfc 	bl	800a6b4 <xTaskResumeAll>
			mtCOVERAGE_TEST_MARKER();
		}
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800bcbc:	69fb      	ldr	r3, [r7, #28]
 800bcbe:	f003 0307 	and.w	r3, r3, #7
 800bcc2:	2b00      	cmp	r3, #0
 800bcc4:	d00a      	beq.n	800bcdc <pvPortMalloc+0x174>
	__asm volatile
 800bcc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bcca:	f383 8811 	msr	BASEPRI, r3
 800bcce:	f3bf 8f6f 	isb	sy
 800bcd2:	f3bf 8f4f 	dsb	sy
 800bcd6:	60fb      	str	r3, [r7, #12]
}
 800bcd8:	bf00      	nop
 800bcda:	e7fe      	b.n	800bcda <pvPortMalloc+0x172>
	return pvReturn;
 800bcdc:	69fb      	ldr	r3, [r7, #28]
}
 800bcde:	4618      	mov	r0, r3
 800bce0:	3728      	adds	r7, #40	; 0x28
 800bce2:	46bd      	mov	sp, r7
 800bce4:	bd80      	pop	{r7, pc}
 800bce6:	bf00      	nop
 800bce8:	20002c70 	.word	0x20002c70
 800bcec:	20002c84 	.word	0x20002c84
 800bcf0:	20002c74 	.word	0x20002c74
 800bcf4:	20002c68 	.word	0x20002c68
 800bcf8:	20002c78 	.word	0x20002c78
 800bcfc:	20002c7c 	.word	0x20002c7c

0800bd00 <vPortFree>:
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
 800bd00:	b580      	push	{r7, lr}
 800bd02:	b086      	sub	sp, #24
 800bd04:	af00      	add	r7, sp, #0
 800bd06:	6078      	str	r0, [r7, #4]
uint8_t *puc = ( uint8_t * ) pv;
 800bd08:	687b      	ldr	r3, [r7, #4]
 800bd0a:	617b      	str	r3, [r7, #20]
BlockLink_t *pxLink;

	if( pv != NULL )
 800bd0c:	687b      	ldr	r3, [r7, #4]
 800bd0e:	2b00      	cmp	r3, #0
 800bd10:	d04d      	beq.n	800bdae <vPortFree+0xae>
	{
		/* The memory being freed will have an BlockLink_t structure immediately
		before it. */
		puc -= xHeapStructSize;
 800bd12:	2308      	movs	r3, #8
 800bd14:	425b      	negs	r3, r3
 800bd16:	697a      	ldr	r2, [r7, #20]
 800bd18:	4413      	add	r3, r2
 800bd1a:	617b      	str	r3, [r7, #20]

		/* This casting is to keep the compiler from issuing warnings. */
		pxLink = ( void * ) puc;
 800bd1c:	697b      	ldr	r3, [r7, #20]
 800bd1e:	613b      	str	r3, [r7, #16]

		/* Check the block is actually allocated. */
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800bd20:	693b      	ldr	r3, [r7, #16]
 800bd22:	685a      	ldr	r2, [r3, #4]
 800bd24:	4b24      	ldr	r3, [pc, #144]	; (800bdb8 <vPortFree+0xb8>)
 800bd26:	681b      	ldr	r3, [r3, #0]
 800bd28:	4013      	ands	r3, r2
 800bd2a:	2b00      	cmp	r3, #0
 800bd2c:	d10a      	bne.n	800bd44 <vPortFree+0x44>
	__asm volatile
 800bd2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bd32:	f383 8811 	msr	BASEPRI, r3
 800bd36:	f3bf 8f6f 	isb	sy
 800bd3a:	f3bf 8f4f 	dsb	sy
 800bd3e:	60fb      	str	r3, [r7, #12]
}
 800bd40:	bf00      	nop
 800bd42:	e7fe      	b.n	800bd42 <vPortFree+0x42>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800bd44:	693b      	ldr	r3, [r7, #16]
 800bd46:	681b      	ldr	r3, [r3, #0]
 800bd48:	2b00      	cmp	r3, #0
 800bd4a:	d00a      	beq.n	800bd62 <vPortFree+0x62>
	__asm volatile
 800bd4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bd50:	f383 8811 	msr	BASEPRI, r3
 800bd54:	f3bf 8f6f 	isb	sy
 800bd58:	f3bf 8f4f 	dsb	sy
 800bd5c:	60bb      	str	r3, [r7, #8]
}
 800bd5e:	bf00      	nop
 800bd60:	e7fe      	b.n	800bd60 <vPortFree+0x60>

		if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
 800bd62:	693b      	ldr	r3, [r7, #16]
 800bd64:	685a      	ldr	r2, [r3, #4]
 800bd66:	4b14      	ldr	r3, [pc, #80]	; (800bdb8 <vPortFree+0xb8>)
 800bd68:	681b      	ldr	r3, [r3, #0]
 800bd6a:	4013      	ands	r3, r2
 800bd6c:	2b00      	cmp	r3, #0
 800bd6e:	d01e      	beq.n	800bdae <vPortFree+0xae>
		{
			if( pxLink->pxNextFreeBlock == NULL )
 800bd70:	693b      	ldr	r3, [r7, #16]
 800bd72:	681b      	ldr	r3, [r3, #0]
 800bd74:	2b00      	cmp	r3, #0
 800bd76:	d11a      	bne.n	800bdae <vPortFree+0xae>
			{
				/* The block is being returned to the heap - it is no longer
				allocated. */
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800bd78:	693b      	ldr	r3, [r7, #16]
 800bd7a:	685a      	ldr	r2, [r3, #4]
 800bd7c:	4b0e      	ldr	r3, [pc, #56]	; (800bdb8 <vPortFree+0xb8>)
 800bd7e:	681b      	ldr	r3, [r3, #0]
 800bd80:	43db      	mvns	r3, r3
 800bd82:	401a      	ands	r2, r3
 800bd84:	693b      	ldr	r3, [r7, #16]
 800bd86:	605a      	str	r2, [r3, #4]

				vTaskSuspendAll();
 800bd88:	f7fe fc86 	bl	800a698 <vTaskSuspendAll>
				{
					/* Add this block to the list of free blocks. */
					xFreeBytesRemaining += pxLink->xBlockSize;
 800bd8c:	693b      	ldr	r3, [r7, #16]
 800bd8e:	685a      	ldr	r2, [r3, #4]
 800bd90:	4b0a      	ldr	r3, [pc, #40]	; (800bdbc <vPortFree+0xbc>)
 800bd92:	681b      	ldr	r3, [r3, #0]
 800bd94:	4413      	add	r3, r2
 800bd96:	4a09      	ldr	r2, [pc, #36]	; (800bdbc <vPortFree+0xbc>)
 800bd98:	6013      	str	r3, [r2, #0]
					traceFREE( pv, pxLink->xBlockSize );
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800bd9a:	6938      	ldr	r0, [r7, #16]
 800bd9c:	f000 f874 	bl	800be88 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800bda0:	4b07      	ldr	r3, [pc, #28]	; (800bdc0 <vPortFree+0xc0>)
 800bda2:	681b      	ldr	r3, [r3, #0]
 800bda4:	3301      	adds	r3, #1
 800bda6:	4a06      	ldr	r2, [pc, #24]	; (800bdc0 <vPortFree+0xc0>)
 800bda8:	6013      	str	r3, [r2, #0]
				}
				( void ) xTaskResumeAll();
 800bdaa:	f7fe fc83 	bl	800a6b4 <xTaskResumeAll>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
}
 800bdae:	bf00      	nop
 800bdb0:	3718      	adds	r7, #24
 800bdb2:	46bd      	mov	sp, r7
 800bdb4:	bd80      	pop	{r7, pc}
 800bdb6:	bf00      	nop
 800bdb8:	20002c84 	.word	0x20002c84
 800bdbc:	20002c74 	.word	0x20002c74
 800bdc0:	20002c80 	.word	0x20002c80

0800bdc4 <prvHeapInit>:
	/* This just exists to keep the linker quiet. */
}
/*-----------------------------------------------------------*/

static void prvHeapInit( void )
{
 800bdc4:	b480      	push	{r7}
 800bdc6:	b085      	sub	sp, #20
 800bdc8:	af00      	add	r7, sp, #0
BlockLink_t *pxFirstFreeBlock;
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800bdca:	f241 7370 	movw	r3, #6000	; 0x1770
 800bdce:	60bb      	str	r3, [r7, #8]

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
 800bdd0:	4b27      	ldr	r3, [pc, #156]	; (800be70 <prvHeapInit+0xac>)
 800bdd2:	60fb      	str	r3, [r7, #12]

	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800bdd4:	68fb      	ldr	r3, [r7, #12]
 800bdd6:	f003 0307 	and.w	r3, r3, #7
 800bdda:	2b00      	cmp	r3, #0
 800bddc:	d00c      	beq.n	800bdf8 <prvHeapInit+0x34>
	{
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800bdde:	68fb      	ldr	r3, [r7, #12]
 800bde0:	3307      	adds	r3, #7
 800bde2:	60fb      	str	r3, [r7, #12]
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800bde4:	68fb      	ldr	r3, [r7, #12]
 800bde6:	f023 0307 	bic.w	r3, r3, #7
 800bdea:	60fb      	str	r3, [r7, #12]
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800bdec:	68ba      	ldr	r2, [r7, #8]
 800bdee:	68fb      	ldr	r3, [r7, #12]
 800bdf0:	1ad3      	subs	r3, r2, r3
 800bdf2:	4a1f      	ldr	r2, [pc, #124]	; (800be70 <prvHeapInit+0xac>)
 800bdf4:	4413      	add	r3, r2
 800bdf6:	60bb      	str	r3, [r7, #8]
	}

	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800bdf8:	68fb      	ldr	r3, [r7, #12]
 800bdfa:	607b      	str	r3, [r7, #4]

	/* xStart is used to hold a pointer to the first item in the list of free
	blocks.  The void cast is used to prevent compiler warnings. */
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800bdfc:	4a1d      	ldr	r2, [pc, #116]	; (800be74 <prvHeapInit+0xb0>)
 800bdfe:	687b      	ldr	r3, [r7, #4]
 800be00:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800be02:	4b1c      	ldr	r3, [pc, #112]	; (800be74 <prvHeapInit+0xb0>)
 800be04:	2200      	movs	r2, #0
 800be06:	605a      	str	r2, [r3, #4]

	/* pxEnd is used to mark the end of the list of free blocks and is inserted
	at the end of the heap space. */
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800be08:	687b      	ldr	r3, [r7, #4]
 800be0a:	68ba      	ldr	r2, [r7, #8]
 800be0c:	4413      	add	r3, r2
 800be0e:	60fb      	str	r3, [r7, #12]
	uxAddress -= xHeapStructSize;
 800be10:	2208      	movs	r2, #8
 800be12:	68fb      	ldr	r3, [r7, #12]
 800be14:	1a9b      	subs	r3, r3, r2
 800be16:	60fb      	str	r3, [r7, #12]
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800be18:	68fb      	ldr	r3, [r7, #12]
 800be1a:	f023 0307 	bic.w	r3, r3, #7
 800be1e:	60fb      	str	r3, [r7, #12]
	pxEnd = ( void * ) uxAddress;
 800be20:	68fb      	ldr	r3, [r7, #12]
 800be22:	4a15      	ldr	r2, [pc, #84]	; (800be78 <prvHeapInit+0xb4>)
 800be24:	6013      	str	r3, [r2, #0]
	pxEnd->xBlockSize = 0;
 800be26:	4b14      	ldr	r3, [pc, #80]	; (800be78 <prvHeapInit+0xb4>)
 800be28:	681b      	ldr	r3, [r3, #0]
 800be2a:	2200      	movs	r2, #0
 800be2c:	605a      	str	r2, [r3, #4]
	pxEnd->pxNextFreeBlock = NULL;
 800be2e:	4b12      	ldr	r3, [pc, #72]	; (800be78 <prvHeapInit+0xb4>)
 800be30:	681b      	ldr	r3, [r3, #0]
 800be32:	2200      	movs	r2, #0
 800be34:	601a      	str	r2, [r3, #0]

	/* To start with there is a single free block that is sized to take up the
	entire heap space, minus the space taken by pxEnd. */
	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
 800be36:	687b      	ldr	r3, [r7, #4]
 800be38:	603b      	str	r3, [r7, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800be3a:	683b      	ldr	r3, [r7, #0]
 800be3c:	68fa      	ldr	r2, [r7, #12]
 800be3e:	1ad2      	subs	r2, r2, r3
 800be40:	683b      	ldr	r3, [r7, #0]
 800be42:	605a      	str	r2, [r3, #4]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800be44:	4b0c      	ldr	r3, [pc, #48]	; (800be78 <prvHeapInit+0xb4>)
 800be46:	681a      	ldr	r2, [r3, #0]
 800be48:	683b      	ldr	r3, [r7, #0]
 800be4a:	601a      	str	r2, [r3, #0]

	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800be4c:	683b      	ldr	r3, [r7, #0]
 800be4e:	685b      	ldr	r3, [r3, #4]
 800be50:	4a0a      	ldr	r2, [pc, #40]	; (800be7c <prvHeapInit+0xb8>)
 800be52:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800be54:	683b      	ldr	r3, [r7, #0]
 800be56:	685b      	ldr	r3, [r3, #4]
 800be58:	4a09      	ldr	r2, [pc, #36]	; (800be80 <prvHeapInit+0xbc>)
 800be5a:	6013      	str	r3, [r2, #0]

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800be5c:	4b09      	ldr	r3, [pc, #36]	; (800be84 <prvHeapInit+0xc0>)
 800be5e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 800be62:	601a      	str	r2, [r3, #0]
}
 800be64:	bf00      	nop
 800be66:	3714      	adds	r7, #20
 800be68:	46bd      	mov	sp, r7
 800be6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be6e:	4770      	bx	lr
 800be70:	200014f8 	.word	0x200014f8
 800be74:	20002c68 	.word	0x20002c68
 800be78:	20002c70 	.word	0x20002c70
 800be7c:	20002c78 	.word	0x20002c78
 800be80:	20002c74 	.word	0x20002c74
 800be84:	20002c84 	.word	0x20002c84

0800be88 <prvInsertBlockIntoFreeList>:
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800be88:	b480      	push	{r7}
 800be8a:	b085      	sub	sp, #20
 800be8c:	af00      	add	r7, sp, #0
 800be8e:	6078      	str	r0, [r7, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800be90:	4b28      	ldr	r3, [pc, #160]	; (800bf34 <prvInsertBlockIntoFreeList+0xac>)
 800be92:	60fb      	str	r3, [r7, #12]
 800be94:	e002      	b.n	800be9c <prvInsertBlockIntoFreeList+0x14>
 800be96:	68fb      	ldr	r3, [r7, #12]
 800be98:	681b      	ldr	r3, [r3, #0]
 800be9a:	60fb      	str	r3, [r7, #12]
 800be9c:	68fb      	ldr	r3, [r7, #12]
 800be9e:	681b      	ldr	r3, [r3, #0]
 800bea0:	687a      	ldr	r2, [r7, #4]
 800bea2:	429a      	cmp	r2, r3
 800bea4:	d8f7      	bhi.n	800be96 <prvInsertBlockIntoFreeList+0xe>
		/* Nothing to do here, just iterate to the right position. */
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
 800bea6:	68fb      	ldr	r3, [r7, #12]
 800bea8:	60bb      	str	r3, [r7, #8]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800beaa:	68fb      	ldr	r3, [r7, #12]
 800beac:	685b      	ldr	r3, [r3, #4]
 800beae:	68ba      	ldr	r2, [r7, #8]
 800beb0:	4413      	add	r3, r2
 800beb2:	687a      	ldr	r2, [r7, #4]
 800beb4:	429a      	cmp	r2, r3
 800beb6:	d108      	bne.n	800beca <prvInsertBlockIntoFreeList+0x42>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800beb8:	68fb      	ldr	r3, [r7, #12]
 800beba:	685a      	ldr	r2, [r3, #4]
 800bebc:	687b      	ldr	r3, [r7, #4]
 800bebe:	685b      	ldr	r3, [r3, #4]
 800bec0:	441a      	add	r2, r3
 800bec2:	68fb      	ldr	r3, [r7, #12]
 800bec4:	605a      	str	r2, [r3, #4]
		pxBlockToInsert = pxIterator;
 800bec6:	68fb      	ldr	r3, [r7, #12]
 800bec8:	607b      	str	r3, [r7, #4]
		mtCOVERAGE_TEST_MARKER();
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
 800beca:	687b      	ldr	r3, [r7, #4]
 800becc:	60bb      	str	r3, [r7, #8]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bece:	687b      	ldr	r3, [r7, #4]
 800bed0:	685b      	ldr	r3, [r3, #4]
 800bed2:	68ba      	ldr	r2, [r7, #8]
 800bed4:	441a      	add	r2, r3
 800bed6:	68fb      	ldr	r3, [r7, #12]
 800bed8:	681b      	ldr	r3, [r3, #0]
 800beda:	429a      	cmp	r2, r3
 800bedc:	d118      	bne.n	800bf10 <prvInsertBlockIntoFreeList+0x88>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800bede:	68fb      	ldr	r3, [r7, #12]
 800bee0:	681a      	ldr	r2, [r3, #0]
 800bee2:	4b15      	ldr	r3, [pc, #84]	; (800bf38 <prvInsertBlockIntoFreeList+0xb0>)
 800bee4:	681b      	ldr	r3, [r3, #0]
 800bee6:	429a      	cmp	r2, r3
 800bee8:	d00d      	beq.n	800bf06 <prvInsertBlockIntoFreeList+0x7e>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800beea:	687b      	ldr	r3, [r7, #4]
 800beec:	685a      	ldr	r2, [r3, #4]
 800beee:	68fb      	ldr	r3, [r7, #12]
 800bef0:	681b      	ldr	r3, [r3, #0]
 800bef2:	685b      	ldr	r3, [r3, #4]
 800bef4:	441a      	add	r2, r3
 800bef6:	687b      	ldr	r3, [r7, #4]
 800bef8:	605a      	str	r2, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800befa:	68fb      	ldr	r3, [r7, #12]
 800befc:	681b      	ldr	r3, [r3, #0]
 800befe:	681a      	ldr	r2, [r3, #0]
 800bf00:	687b      	ldr	r3, [r7, #4]
 800bf02:	601a      	str	r2, [r3, #0]
 800bf04:	e008      	b.n	800bf18 <prvInsertBlockIntoFreeList+0x90>
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800bf06:	4b0c      	ldr	r3, [pc, #48]	; (800bf38 <prvInsertBlockIntoFreeList+0xb0>)
 800bf08:	681a      	ldr	r2, [r3, #0]
 800bf0a:	687b      	ldr	r3, [r7, #4]
 800bf0c:	601a      	str	r2, [r3, #0]
 800bf0e:	e003      	b.n	800bf18 <prvInsertBlockIntoFreeList+0x90>
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800bf10:	68fb      	ldr	r3, [r7, #12]
 800bf12:	681a      	ldr	r2, [r3, #0]
 800bf14:	687b      	ldr	r3, [r7, #4]
 800bf16:	601a      	str	r2, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800bf18:	68fa      	ldr	r2, [r7, #12]
 800bf1a:	687b      	ldr	r3, [r7, #4]
 800bf1c:	429a      	cmp	r2, r3
 800bf1e:	d002      	beq.n	800bf26 <prvInsertBlockIntoFreeList+0x9e>
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800bf20:	68fb      	ldr	r3, [r7, #12]
 800bf22:	687a      	ldr	r2, [r7, #4]
 800bf24:	601a      	str	r2, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800bf26:	bf00      	nop
 800bf28:	3714      	adds	r7, #20
 800bf2a:	46bd      	mov	sp, r7
 800bf2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf30:	4770      	bx	lr
 800bf32:	bf00      	nop
 800bf34:	20002c68 	.word	0x20002c68
 800bf38:	20002c70 	.word	0x20002c70

0800bf3c <_ZdlPvj>:
 800bf3c:	f017 bfc6 	b.w	8023ecc <_ZdlPv>

0800bf40 <_Znwj>:
 800bf40:	2801      	cmp	r0, #1
 800bf42:	bf38      	it	cc
 800bf44:	2001      	movcc	r0, #1
 800bf46:	b510      	push	{r4, lr}
 800bf48:	4604      	mov	r4, r0
 800bf4a:	4620      	mov	r0, r4
 800bf4c:	f019 ff7e 	bl	8025e4c <malloc>
 800bf50:	b930      	cbnz	r0, 800bf60 <_Znwj+0x20>
 800bf52:	f018 f83b 	bl	8023fcc <_ZSt15get_new_handlerv>
 800bf56:	b908      	cbnz	r0, 800bf5c <_Znwj+0x1c>
 800bf58:	f019 f965 	bl	8025226 <abort>
 800bf5c:	4780      	blx	r0
 800bf5e:	e7f4      	b.n	800bf4a <_Znwj+0xa>
 800bf60:	bd10      	pop	{r4, pc}

0800bf62 <__cxa_pure_virtual>:
 800bf62:	b508      	push	{r3, lr}
 800bf64:	f018 f81e 	bl	8023fa4 <_ZSt9terminatev>

0800bf68 <_ZNSt13basic_ostreamIwSt11char_traitsIwEEC1EPSt15basic_streambufIwS1_E.isra.0>:
 800bf68:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bf6a:	1d05      	adds	r5, r0, #4
 800bf6c:	4604      	mov	r4, r0
 800bf6e:	4628      	mov	r0, r5
 800bf70:	9101      	str	r1, [sp, #4]
 800bf72:	f00b fd3d 	bl	80179f0 <_ZNSt8ios_baseC1Ev>
 800bf76:	2300      	movs	r3, #0
 800bf78:	e9c4 331d 	strd	r3, r3, [r4, #116]	; 0x74
 800bf7c:	e9c4 3320 	strd	r3, r3, [r4, #128]	; 0x80
 800bf80:	e9c4 3322 	strd	r3, r3, [r4, #136]	; 0x88
 800bf84:	f884 307c 	strb.w	r3, [r4, #124]	; 0x7c
 800bf88:	4b05      	ldr	r3, [pc, #20]	; (800bfa0 <_ZNSt13basic_ostreamIwSt11char_traitsIwEEC1EPSt15basic_streambufIwS1_E.isra.0+0x38>)
 800bf8a:	9901      	ldr	r1, [sp, #4]
 800bf8c:	6023      	str	r3, [r4, #0]
 800bf8e:	4628      	mov	r0, r5
 800bf90:	3314      	adds	r3, #20
 800bf92:	6063      	str	r3, [r4, #4]
 800bf94:	b003      	add	sp, #12
 800bf96:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bf9a:	f00b bd12 	b.w	80179c2 <_ZNSt9basic_iosIwSt11char_traitsIwEE4initEPSt15basic_streambufIwS1_E>
 800bf9e:	bf00      	nop
 800bfa0:	08030ec4 	.word	0x08030ec4

0800bfa4 <_ZNSoC1EPSt15basic_streambufIcSt11char_traitsIcEE.isra.0>:
 800bfa4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bfa6:	1d05      	adds	r5, r0, #4
 800bfa8:	4604      	mov	r4, r0
 800bfaa:	4628      	mov	r0, r5
 800bfac:	9101      	str	r1, [sp, #4]
 800bfae:	f00b fd1f 	bl	80179f0 <_ZNSt8ios_baseC1Ev>
 800bfb2:	2300      	movs	r3, #0
 800bfb4:	e9c4 331f 	strd	r3, r3, [r4, #124]	; 0x7c
 800bfb8:	e9c4 3321 	strd	r3, r3, [r4, #132]	; 0x84
 800bfbc:	6763      	str	r3, [r4, #116]	; 0x74
 800bfbe:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800bfc2:	4b05      	ldr	r3, [pc, #20]	; (800bfd8 <_ZNSoC1EPSt15basic_streambufIcSt11char_traitsIcEE.isra.0+0x34>)
 800bfc4:	9901      	ldr	r1, [sp, #4]
 800bfc6:	6023      	str	r3, [r4, #0]
 800bfc8:	4628      	mov	r0, r5
 800bfca:	3314      	adds	r3, #20
 800bfcc:	6063      	str	r3, [r4, #4]
 800bfce:	b003      	add	sp, #12
 800bfd0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bfd4:	f00b bcaa 	b.w	801792c <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E>
 800bfd8:	08030e94 	.word	0x08030e94

0800bfdc <_ZNSt8ios_base4InitC1Ev>:
 800bfdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfe0:	f8df 9244 	ldr.w	r9, [pc, #580]	; 800c228 <_ZNSt8ios_base4InitC1Ev+0x24c>
 800bfe4:	ed2d 8b02 	vpush	{d8}
 800bfe8:	f8d9 4000 	ldr.w	r4, [r9]
 800bfec:	1c63      	adds	r3, r4, #1
 800bfee:	ee08 0a10 	vmov	s16, r0
 800bff2:	b083      	sub	sp, #12
 800bff4:	f8c9 3000 	str.w	r3, [r9]
 800bff8:	2c00      	cmp	r4, #0
 800bffa:	f040 80ed 	bne.w	800c1d8 <_ZNSt8ios_base4InitC1Ev+0x1fc>
 800bffe:	f8df b22c 	ldr.w	fp, [pc, #556]	; 800c22c <_ZNSt8ios_base4InitC1Ev+0x250>
 800c002:	4b79      	ldr	r3, [pc, #484]	; (800c1e8 <_ZNSt8ios_base4InitC1Ev+0x20c>)
 800c004:	4f79      	ldr	r7, [pc, #484]	; (800c1ec <_ZNSt8ios_base4InitC1Ev+0x210>)
 800c006:	4e7a      	ldr	r6, [pc, #488]	; (800c1f0 <_ZNSt8ios_base4InitC1Ev+0x214>)
 800c008:	f8df a224 	ldr.w	sl, [pc, #548]	; 800c230 <_ZNSt8ios_base4InitC1Ev+0x254>
 800c00c:	2201      	movs	r2, #1
 800c00e:	701a      	strb	r2, [r3, #0]
 800c010:	f8db 3000 	ldr.w	r3, [fp]
 800c014:	4a77      	ldr	r2, [pc, #476]	; (800c1f4 <_ZNSt8ios_base4InitC1Ev+0x218>)
 800c016:	689d      	ldr	r5, [r3, #8]
 800c018:	61bc      	str	r4, [r7, #24]
 800c01a:	e9c7 2400 	strd	r2, r4, [r7]
 800c01e:	e9c7 4402 	strd	r4, r4, [r7, #8]
 800c022:	e9c7 4404 	strd	r4, r4, [r7, #16]
 800c026:	f107 001c 	add.w	r0, r7, #28
 800c02a:	f000 fea7 	bl	800cd7c <_ZNSt6localeC1Ev>
 800c02e:	f8db 1000 	ldr.w	r1, [fp]
 800c032:	4a70      	ldr	r2, [pc, #448]	; (800c1f4 <_ZNSt8ios_base4InitC1Ev+0x218>)
 800c034:	623d      	str	r5, [r7, #32]
 800c036:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 800c03a:	684d      	ldr	r5, [r1, #4]
 800c03c:	f8c7 a000 	str.w	sl, [r7]
 800c040:	f8c7 8024 	str.w	r8, [r7, #36]	; 0x24
 800c044:	e9c6 2400 	strd	r2, r4, [r6]
 800c048:	e9c6 4402 	strd	r4, r4, [r6, #8]
 800c04c:	e9c6 4404 	strd	r4, r4, [r6, #16]
 800c050:	61b4      	str	r4, [r6, #24]
 800c052:	f106 001c 	add.w	r0, r6, #28
 800c056:	f000 fe91 	bl	800cd7c <_ZNSt6localeC1Ev>
 800c05a:	e9c6 5808 	strd	r5, r8, [r6, #32]
 800c05e:	f8db 1000 	ldr.w	r1, [fp]
 800c062:	4d65      	ldr	r5, [pc, #404]	; (800c1f8 <_ZNSt8ios_base4InitC1Ev+0x21c>)
 800c064:	4a63      	ldr	r2, [pc, #396]	; (800c1f4 <_ZNSt8ios_base4InitC1Ev+0x218>)
 800c066:	68cb      	ldr	r3, [r1, #12]
 800c068:	f8c6 a000 	str.w	sl, [r6]
 800c06c:	e9c5 2400 	strd	r2, r4, [r5]
 800c070:	e9c5 4402 	strd	r4, r4, [r5, #8]
 800c074:	e9c5 4404 	strd	r4, r4, [r5, #16]
 800c078:	61ac      	str	r4, [r5, #24]
 800c07a:	f105 001c 	add.w	r0, r5, #28
 800c07e:	9301      	str	r3, [sp, #4]
 800c080:	f000 fe7c 	bl	800cd7c <_ZNSt6localeC1Ev>
 800c084:	9b01      	ldr	r3, [sp, #4]
 800c086:	f8c5 a000 	str.w	sl, [r5]
 800c08a:	f8df a1a8 	ldr.w	sl, [pc, #424]	; 800c234 <_ZNSt8ios_base4InitC1Ev+0x258>
 800c08e:	e9c5 3808 	strd	r3, r8, [r5, #32]
 800c092:	4639      	mov	r1, r7
 800c094:	4650      	mov	r0, sl
 800c096:	f7ff ff85 	bl	800bfa4 <_ZNSoC1EPSt15basic_streambufIcSt11char_traitsIcEE.isra.0>
 800c09a:	4a58      	ldr	r2, [pc, #352]	; (800c1fc <_ZNSt8ios_base4InitC1Ev+0x220>)
 800c09c:	4610      	mov	r0, r2
 800c09e:	f00b fca7 	bl	80179f0 <_ZNSt8ios_baseC1Ev>
 800c0a2:	4a56      	ldr	r2, [pc, #344]	; (800c1fc <_ZNSt8ios_base4InitC1Ev+0x220>)
 800c0a4:	4956      	ldr	r1, [pc, #344]	; (800c200 <_ZNSt8ios_base4InitC1Ev+0x224>)
 800c0a6:	f842 1c08 	str.w	r1, [r2, #-8]
 800c0aa:	f1a2 0708 	sub.w	r7, r2, #8
 800c0ae:	3114      	adds	r1, #20
 800c0b0:	60b9      	str	r1, [r7, #8]
 800c0b2:	4631      	mov	r1, r6
 800c0b4:	4e53      	ldr	r6, [pc, #332]	; (800c204 <_ZNSt8ios_base4InitC1Ev+0x228>)
 800c0b6:	6714      	str	r4, [r2, #112]	; 0x70
 800c0b8:	e9c2 441e 	strd	r4, r4, [r2, #120]	; 0x78
 800c0bc:	e9c2 4420 	strd	r4, r4, [r2, #128]	; 0x80
 800c0c0:	f8a2 4074 	strh.w	r4, [r2, #116]	; 0x74
 800c0c4:	f842 4c04 	str.w	r4, [r2, #-4]
 800c0c8:	4610      	mov	r0, r2
 800c0ca:	f00b fc2f 	bl	801792c <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E>
 800c0ce:	4629      	mov	r1, r5
 800c0d0:	4630      	mov	r0, r6
 800c0d2:	f7ff ff67 	bl	800bfa4 <_ZNSoC1EPSt15basic_streambufIcSt11char_traitsIcEE.isra.0>
 800c0d6:	4629      	mov	r1, r5
 800c0d8:	484b      	ldr	r0, [pc, #300]	; (800c208 <_ZNSt8ios_base4InitC1Ev+0x22c>)
 800c0da:	f7ff ff63 	bl	800bfa4 <_ZNSoC1EPSt15basic_streambufIcSt11char_traitsIcEE.isra.0>
 800c0de:	6932      	ldr	r2, [r6, #16]
 800c0e0:	f8db 3000 	ldr.w	r3, [fp]
 800c0e4:	f8c7 a078 	str.w	sl, [r7, #120]	; 0x78
 800c0e8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c0ec:	4f47      	ldr	r7, [pc, #284]	; (800c20c <_ZNSt8ios_base4InitC1Ev+0x230>)
 800c0ee:	6132      	str	r2, [r6, #16]
 800c0f0:	4a47      	ldr	r2, [pc, #284]	; (800c210 <_ZNSt8ios_base4InitC1Ev+0x234>)
 800c0f2:	689d      	ldr	r5, [r3, #8]
 800c0f4:	f8c6 a074 	str.w	sl, [r6, #116]	; 0x74
 800c0f8:	e9c7 2400 	strd	r2, r4, [r7]
 800c0fc:	e9c7 4402 	strd	r4, r4, [r7, #8]
 800c100:	e9c7 4404 	strd	r4, r4, [r7, #16]
 800c104:	61bc      	str	r4, [r7, #24]
 800c106:	f107 001c 	add.w	r0, r7, #28
 800c10a:	f000 fe37 	bl	800cd7c <_ZNSt6localeC1Ev>
 800c10e:	4e41      	ldr	r6, [pc, #260]	; (800c214 <_ZNSt8ios_base4InitC1Ev+0x238>)
 800c110:	f8db 1000 	ldr.w	r1, [fp]
 800c114:	4a3e      	ldr	r2, [pc, #248]	; (800c210 <_ZNSt8ios_base4InitC1Ev+0x234>)
 800c116:	f8df a120 	ldr.w	sl, [pc, #288]	; 800c238 <_ZNSt8ios_base4InitC1Ev+0x25c>
 800c11a:	f8c7 a000 	str.w	sl, [r7]
 800c11e:	e9c7 5808 	strd	r5, r8, [r7, #32]
 800c122:	f106 001c 	add.w	r0, r6, #28
 800c126:	684d      	ldr	r5, [r1, #4]
 800c128:	61b4      	str	r4, [r6, #24]
 800c12a:	e9c6 2400 	strd	r2, r4, [r6]
 800c12e:	e9c6 4402 	strd	r4, r4, [r6, #8]
 800c132:	e9c6 4404 	strd	r4, r4, [r6, #16]
 800c136:	f000 fe21 	bl	800cd7c <_ZNSt6localeC1Ev>
 800c13a:	f8db 1000 	ldr.w	r1, [fp]
 800c13e:	4a34      	ldr	r2, [pc, #208]	; (800c210 <_ZNSt8ios_base4InitC1Ev+0x234>)
 800c140:	f8d1 b00c 	ldr.w	fp, [r1, #12]
 800c144:	f8c6 a000 	str.w	sl, [r6]
 800c148:	e9c6 5808 	strd	r5, r8, [r6, #32]
 800c14c:	4d32      	ldr	r5, [pc, #200]	; (800c218 <_ZNSt8ios_base4InitC1Ev+0x23c>)
 800c14e:	e9c5 2400 	strd	r2, r4, [r5]
 800c152:	e9c5 4402 	strd	r4, r4, [r5, #8]
 800c156:	e9c5 4404 	strd	r4, r4, [r5, #16]
 800c15a:	61ac      	str	r4, [r5, #24]
 800c15c:	f105 001c 	add.w	r0, r5, #28
 800c160:	f000 fe0c 	bl	800cd7c <_ZNSt6localeC1Ev>
 800c164:	e9c5 b808 	strd	fp, r8, [r5, #32]
 800c168:	f8df b0d0 	ldr.w	fp, [pc, #208]	; 800c23c <_ZNSt8ios_base4InitC1Ev+0x260>
 800c16c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800c240 <_ZNSt8ios_base4InitC1Ev+0x264>
 800c170:	f8c5 a000 	str.w	sl, [r5]
 800c174:	4639      	mov	r1, r7
 800c176:	4658      	mov	r0, fp
 800c178:	f7ff fef6 	bl	800bf68 <_ZNSt13basic_ostreamIwSt11char_traitsIwEEC1EPSt15basic_streambufIwS1_E.isra.0>
 800c17c:	4640      	mov	r0, r8
 800c17e:	f00b fc37 	bl	80179f0 <_ZNSt8ios_baseC1Ev>
 800c182:	4b26      	ldr	r3, [pc, #152]	; (800c21c <_ZNSt8ios_base4InitC1Ev+0x240>)
 800c184:	f888 4078 	strb.w	r4, [r8, #120]	; 0x78
 800c188:	f1a8 0708 	sub.w	r7, r8, #8
 800c18c:	e9c8 441c 	strd	r4, r4, [r8, #112]	; 0x70
 800c190:	e9c8 441f 	strd	r4, r4, [r8, #124]	; 0x7c
 800c194:	e9c8 4421 	strd	r4, r4, [r8, #132]	; 0x84
 800c198:	f848 3c08 	str.w	r3, [r8, #-8]
 800c19c:	f848 4c04 	str.w	r4, [r8, #-4]
 800c1a0:	3314      	adds	r3, #20
 800c1a2:	4c1f      	ldr	r4, [pc, #124]	; (800c220 <_ZNSt8ios_base4InitC1Ev+0x244>)
 800c1a4:	60bb      	str	r3, [r7, #8]
 800c1a6:	4631      	mov	r1, r6
 800c1a8:	4640      	mov	r0, r8
 800c1aa:	f00b fc0a 	bl	80179c2 <_ZNSt9basic_iosIwSt11char_traitsIwEE4initEPSt15basic_streambufIwS1_E>
 800c1ae:	4629      	mov	r1, r5
 800c1b0:	4620      	mov	r0, r4
 800c1b2:	f7ff fed9 	bl	800bf68 <_ZNSt13basic_ostreamIwSt11char_traitsIwEEC1EPSt15basic_streambufIwS1_E.isra.0>
 800c1b6:	481b      	ldr	r0, [pc, #108]	; (800c224 <_ZNSt8ios_base4InitC1Ev+0x248>)
 800c1b8:	4629      	mov	r1, r5
 800c1ba:	f7ff fed5 	bl	800bf68 <_ZNSt13basic_ostreamIwSt11char_traitsIwEEC1EPSt15basic_streambufIwS1_E.isra.0>
 800c1be:	6923      	ldr	r3, [r4, #16]
 800c1c0:	f8c8 b070 	str.w	fp, [r8, #112]	; 0x70
 800c1c4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800c1c8:	6123      	str	r3, [r4, #16]
 800c1ca:	f8d9 3000 	ldr.w	r3, [r9]
 800c1ce:	f8c4 b074 	str.w	fp, [r4, #116]	; 0x74
 800c1d2:	3301      	adds	r3, #1
 800c1d4:	f8c9 3000 	str.w	r3, [r9]
 800c1d8:	ee18 0a10 	vmov	r0, s16
 800c1dc:	b003      	add	sp, #12
 800c1de:	ecbd 8b02 	vpop	{d8}
 800c1e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c1e6:	bf00      	nop
 800c1e8:	20000030 	.word	0x20000030
 800c1ec:	20003dac 	.word	0x20003dac
 800c1f0:	20003d5c 	.word	0x20003d5c
 800c1f4:	08030fac 	.word	0x08030fac
 800c1f8:	20003d84 	.word	0x20003d84
 800c1fc:	20003e54 	.word	0x20003e54
 800c200:	08030858 	.word	0x08030858
 800c204:	20003edc 	.word	0x20003edc
 800c208:	20003f68 	.word	0x20003f68
 800c20c:	20003e24 	.word	0x20003e24
 800c210:	08030fec 	.word	0x08030fec
 800c214:	20003dd4 	.word	0x20003dd4
 800c218:	20003dfc 	.word	0x20003dfc
 800c21c:	08030888 	.word	0x08030888
 800c220:	20004114 	.word	0x20004114
 800c224:	200041a4 	.word	0x200041a4
 800c228:	20003c8c 	.word	0x20003c8c
 800c22c:	200000bc 	.word	0x200000bc
 800c230:	08030694 	.word	0x08030694
 800c234:	20003ff4 	.word	0x20003ff4
 800c238:	080306d4 	.word	0x080306d4
 800c23c:	20004234 	.word	0x20004234
 800c240:	20004088 	.word	0x20004088

0800c244 <_ZNSt8ios_base4InitD1Ev>:
 800c244:	4a0d      	ldr	r2, [pc, #52]	; (800c27c <_ZNSt8ios_base4InitD1Ev+0x38>)
 800c246:	6813      	ldr	r3, [r2, #0]
 800c248:	1e59      	subs	r1, r3, #1
 800c24a:	2b02      	cmp	r3, #2
 800c24c:	b510      	push	{r4, lr}
 800c24e:	4604      	mov	r4, r0
 800c250:	6011      	str	r1, [r2, #0]
 800c252:	d111      	bne.n	800c278 <_ZNSt8ios_base4InitD1Ev+0x34>
 800c254:	480a      	ldr	r0, [pc, #40]	; (800c280 <_ZNSt8ios_base4InitD1Ev+0x3c>)
 800c256:	f011 f918 	bl	801d48a <_ZNSo5flushEv>
 800c25a:	480a      	ldr	r0, [pc, #40]	; (800c284 <_ZNSt8ios_base4InitD1Ev+0x40>)
 800c25c:	f011 f915 	bl	801d48a <_ZNSo5flushEv>
 800c260:	4809      	ldr	r0, [pc, #36]	; (800c288 <_ZNSt8ios_base4InitD1Ev+0x44>)
 800c262:	f011 f912 	bl	801d48a <_ZNSo5flushEv>
 800c266:	4809      	ldr	r0, [pc, #36]	; (800c28c <_ZNSt8ios_base4InitD1Ev+0x48>)
 800c268:	f011 f92b 	bl	801d4c2 <_ZNSt13basic_ostreamIwSt11char_traitsIwEE5flushEv>
 800c26c:	4808      	ldr	r0, [pc, #32]	; (800c290 <_ZNSt8ios_base4InitD1Ev+0x4c>)
 800c26e:	f011 f928 	bl	801d4c2 <_ZNSt13basic_ostreamIwSt11char_traitsIwEE5flushEv>
 800c272:	4808      	ldr	r0, [pc, #32]	; (800c294 <_ZNSt8ios_base4InitD1Ev+0x50>)
 800c274:	f011 f925 	bl	801d4c2 <_ZNSt13basic_ostreamIwSt11char_traitsIwEE5flushEv>
 800c278:	4620      	mov	r0, r4
 800c27a:	bd10      	pop	{r4, pc}
 800c27c:	20003c8c 	.word	0x20003c8c
 800c280:	20003ff4 	.word	0x20003ff4
 800c284:	20003edc 	.word	0x20003edc
 800c288:	20003f68 	.word	0x20003f68
 800c28c:	20004234 	.word	0x20004234
 800c290:	20004114 	.word	0x20004114
 800c294:	200041a4 	.word	0x200041a4

0800c298 <_ZNSt6locale5facetD1Ev>:
 800c298:	4770      	bx	lr

0800c29a <_ZNKSt6locale5facet19_M_remove_referenceEv>:
 800c29a:	6842      	ldr	r2, [r0, #4]
 800c29c:	1e51      	subs	r1, r2, #1
 800c29e:	2a01      	cmp	r2, #1
 800c2a0:	6041      	str	r1, [r0, #4]
 800c2a2:	d102      	bne.n	800c2aa <_ZNKSt6locale5facet19_M_remove_referenceEv+0x10>
 800c2a4:	6803      	ldr	r3, [r0, #0]
 800c2a6:	685b      	ldr	r3, [r3, #4]
 800c2a8:	4718      	bx	r3
 800c2aa:	4770      	bx	lr

0800c2ac <_ZNSt6localeC1ERKS_>:
 800c2ac:	4a04      	ldr	r2, [pc, #16]	; (800c2c0 <_ZNSt6localeC1ERKS_+0x14>)
 800c2ae:	680b      	ldr	r3, [r1, #0]
 800c2b0:	6812      	ldr	r2, [r2, #0]
 800c2b2:	6003      	str	r3, [r0, #0]
 800c2b4:	4293      	cmp	r3, r2
 800c2b6:	bf1e      	ittt	ne
 800c2b8:	681a      	ldrne	r2, [r3, #0]
 800c2ba:	3201      	addne	r2, #1
 800c2bc:	601a      	strne	r2, [r3, #0]
 800c2be:	4770      	bx	lr
 800c2c0:	20002c8c 	.word	0x20002c8c

0800c2c4 <_ZNSt6localeC1EPNS_5_ImplE>:
 800c2c4:	6001      	str	r1, [r0, #0]
 800c2c6:	4770      	bx	lr

0800c2c8 <_ZNSt6locale5facet18_S_initialize_onceEv>:
 800c2c8:	4902      	ldr	r1, [pc, #8]	; (800c2d4 <_ZNSt6locale5facet18_S_initialize_onceEv+0xc>)
 800c2ca:	4803      	ldr	r0, [pc, #12]	; (800c2d8 <_ZNSt6locale5facet18_S_initialize_onceEv+0x10>)
 800c2cc:	2200      	movs	r2, #0
 800c2ce:	f018 ba51 	b.w	8024774 <_ZNSt6locale5facet18_S_create_c_localeERPiPKcS1_>
 800c2d2:	bf00      	nop
 800c2d4:	0802e930 	.word	0x0802e930
 800c2d8:	20002c94 	.word	0x20002c94

0800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>:
 800c2dc:	b510      	push	{r4, lr}
 800c2de:	4c03      	ldr	r4, [pc, #12]	; (800c2ec <_ZNSt6locale5facet15_S_get_c_localeEv+0x10>)
 800c2e0:	6823      	ldr	r3, [r4, #0]
 800c2e2:	b90b      	cbnz	r3, 800c2e8 <_ZNSt6locale5facet15_S_get_c_localeEv+0xc>
 800c2e4:	f7ff fff0 	bl	800c2c8 <_ZNSt6locale5facet18_S_initialize_onceEv>
 800c2e8:	6820      	ldr	r0, [r4, #0]
 800c2ea:	bd10      	pop	{r4, pc}
 800c2ec:	20002c94 	.word	0x20002c94

0800c2f0 <_ZNSt6locale5facet13_S_get_c_nameEv>:
 800c2f0:	4800      	ldr	r0, [pc, #0]	; (800c2f4 <_ZNSt6locale5facet13_S_get_c_nameEv+0x4>)
 800c2f2:	4770      	bx	lr
 800c2f4:	0802e930 	.word	0x0802e930

0800c2f8 <_ZNSt6locale5_ImplD1Ev>:
 800c2f8:	b538      	push	{r3, r4, r5, lr}
 800c2fa:	6843      	ldr	r3, [r0, #4]
 800c2fc:	4604      	mov	r4, r0
 800c2fe:	b15b      	cbz	r3, 800c318 <_ZNSt6locale5_ImplD1Ev+0x20>
 800c300:	2500      	movs	r5, #0
 800c302:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 800c306:	42aa      	cmp	r2, r5
 800c308:	d906      	bls.n	800c318 <_ZNSt6locale5_ImplD1Ev+0x20>
 800c30a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800c30e:	b108      	cbz	r0, 800c314 <_ZNSt6locale5_ImplD1Ev+0x1c>
 800c310:	f7ff ffc3 	bl	800c29a <_ZNKSt6locale5facet19_M_remove_referenceEv>
 800c314:	3501      	adds	r5, #1
 800c316:	e7f4      	b.n	800c302 <_ZNSt6locale5_ImplD1Ev+0xa>
 800c318:	6860      	ldr	r0, [r4, #4]
 800c31a:	b108      	cbz	r0, 800c320 <_ZNSt6locale5_ImplD1Ev+0x28>
 800c31c:	f017 fdd8 	bl	8023ed0 <_ZdaPv>
 800c320:	68e3      	ldr	r3, [r4, #12]
 800c322:	b15b      	cbz	r3, 800c33c <_ZNSt6locale5_ImplD1Ev+0x44>
 800c324:	2500      	movs	r5, #0
 800c326:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
 800c32a:	42aa      	cmp	r2, r5
 800c32c:	d906      	bls.n	800c33c <_ZNSt6locale5_ImplD1Ev+0x44>
 800c32e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800c332:	b108      	cbz	r0, 800c338 <_ZNSt6locale5_ImplD1Ev+0x40>
 800c334:	f7ff ffb1 	bl	800c29a <_ZNKSt6locale5facet19_M_remove_referenceEv>
 800c338:	3501      	adds	r5, #1
 800c33a:	e7f4      	b.n	800c326 <_ZNSt6locale5_ImplD1Ev+0x2e>
 800c33c:	68e0      	ldr	r0, [r4, #12]
 800c33e:	b108      	cbz	r0, 800c344 <_ZNSt6locale5_ImplD1Ev+0x4c>
 800c340:	f017 fdc6 	bl	8023ed0 <_ZdaPv>
 800c344:	6923      	ldr	r3, [r4, #16]
 800c346:	b91b      	cbnz	r3, 800c350 <_ZNSt6locale5_ImplD1Ev+0x58>
 800c348:	6920      	ldr	r0, [r4, #16]
 800c34a:	b958      	cbnz	r0, 800c364 <_ZNSt6locale5_ImplD1Ev+0x6c>
 800c34c:	4620      	mov	r0, r4
 800c34e:	bd38      	pop	{r3, r4, r5, pc}
 800c350:	2500      	movs	r5, #0
 800c352:	6923      	ldr	r3, [r4, #16]
 800c354:	5958      	ldr	r0, [r3, r5]
 800c356:	b108      	cbz	r0, 800c35c <_ZNSt6locale5_ImplD1Ev+0x64>
 800c358:	f017 fdba 	bl	8023ed0 <_ZdaPv>
 800c35c:	3504      	adds	r5, #4
 800c35e:	2d18      	cmp	r5, #24
 800c360:	d1f7      	bne.n	800c352 <_ZNSt6locale5_ImplD1Ev+0x5a>
 800c362:	e7f1      	b.n	800c348 <_ZNSt6locale5_ImplD1Ev+0x50>
 800c364:	f017 fdb4 	bl	8023ed0 <_ZdaPv>
 800c368:	e7f0      	b.n	800c34c <_ZNSt6locale5_ImplD1Ev+0x54>

0800c36a <_ZNSt6locale5_Impl19_M_remove_referenceEv>:
 800c36a:	6803      	ldr	r3, [r0, #0]
 800c36c:	1e5a      	subs	r2, r3, #1
 800c36e:	2b01      	cmp	r3, #1
 800c370:	b510      	push	{r4, lr}
 800c372:	4604      	mov	r4, r0
 800c374:	6002      	str	r2, [r0, #0]
 800c376:	d106      	bne.n	800c386 <_ZNSt6locale5_Impl19_M_remove_referenceEv+0x1c>
 800c378:	f7ff ffbe 	bl	800c2f8 <_ZNSt6locale5_ImplD1Ev>
 800c37c:	4620      	mov	r0, r4
 800c37e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c382:	f017 bda3 	b.w	8023ecc <_ZdlPv>
 800c386:	bd10      	pop	{r4, pc}

0800c388 <_ZNSt6localeD1Ev>:
 800c388:	4b05      	ldr	r3, [pc, #20]	; (800c3a0 <_ZNSt6localeD1Ev+0x18>)
 800c38a:	b510      	push	{r4, lr}
 800c38c:	681b      	ldr	r3, [r3, #0]
 800c38e:	4604      	mov	r4, r0
 800c390:	6800      	ldr	r0, [r0, #0]
 800c392:	4298      	cmp	r0, r3
 800c394:	d001      	beq.n	800c39a <_ZNSt6localeD1Ev+0x12>
 800c396:	f7ff ffe8 	bl	800c36a <_ZNSt6locale5_Impl19_M_remove_referenceEv>
 800c39a:	4620      	mov	r0, r4
 800c39c:	bd10      	pop	{r4, pc}
 800c39e:	bf00      	nop
 800c3a0:	20002c8c 	.word	0x20002c8c

0800c3a4 <_ZNSt6localeaSERKS_>:
 800c3a4:	4a0a      	ldr	r2, [pc, #40]	; (800c3d0 <_ZNSt6localeaSERKS_+0x2c>)
 800c3a6:	b538      	push	{r3, r4, r5, lr}
 800c3a8:	680b      	ldr	r3, [r1, #0]
 800c3aa:	460d      	mov	r5, r1
 800c3ac:	6811      	ldr	r1, [r2, #0]
 800c3ae:	428b      	cmp	r3, r1
 800c3b0:	bf18      	it	ne
 800c3b2:	681a      	ldrne	r2, [r3, #0]
 800c3b4:	4604      	mov	r4, r0
 800c3b6:	6800      	ldr	r0, [r0, #0]
 800c3b8:	bf1c      	itt	ne
 800c3ba:	3201      	addne	r2, #1
 800c3bc:	601a      	strne	r2, [r3, #0]
 800c3be:	4281      	cmp	r1, r0
 800c3c0:	d001      	beq.n	800c3c6 <_ZNSt6localeaSERKS_+0x22>
 800c3c2:	f7ff ffd2 	bl	800c36a <_ZNSt6locale5_Impl19_M_remove_referenceEv>
 800c3c6:	682b      	ldr	r3, [r5, #0]
 800c3c8:	6023      	str	r3, [r4, #0]
 800c3ca:	4620      	mov	r0, r4
 800c3cc:	bd38      	pop	{r3, r4, r5, pc}
 800c3ce:	bf00      	nop
 800c3d0:	20002c8c 	.word	0x20002c8c

0800c3d4 <_ZNKSt6locale2id5_M_idEv>:
 800c3d4:	6803      	ldr	r3, [r0, #0]
 800c3d6:	b923      	cbnz	r3, 800c3e2 <_ZNKSt6locale2id5_M_idEv+0xe>
 800c3d8:	4a03      	ldr	r2, [pc, #12]	; (800c3e8 <_ZNKSt6locale2id5_M_idEv+0x14>)
 800c3da:	6813      	ldr	r3, [r2, #0]
 800c3dc:	3301      	adds	r3, #1
 800c3de:	6013      	str	r3, [r2, #0]
 800c3e0:	6003      	str	r3, [r0, #0]
 800c3e2:	6800      	ldr	r0, [r0, #0]
 800c3e4:	3801      	subs	r0, #1
 800c3e6:	4770      	bx	lr
 800c3e8:	20002c90 	.word	0x20002c90

0800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>:
 800c3ec:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3f0:	4604      	mov	r4, r0
 800c3f2:	4616      	mov	r6, r2
 800c3f4:	4608      	mov	r0, r1
 800c3f6:	2a00      	cmp	r2, #0
 800c3f8:	f000 80ad 	beq.w	800c556 <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x16a>
 800c3fc:	f7ff ffea 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800c400:	68a3      	ldr	r3, [r4, #8]
 800c402:	3b01      	subs	r3, #1
 800c404:	4298      	cmp	r0, r3
 800c406:	4605      	mov	r5, r0
 800c408:	d941      	bls.n	800c48e <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0xa2>
 800c40a:	f100 0804 	add.w	r8, r0, #4
 800c40e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800c412:	4598      	cmp	r8, r3
 800c414:	bf34      	ite	cc
 800c416:	ea4f 0788 	movcc.w	r7, r8, lsl #2
 800c41a:	f04f 37ff 	movcs.w	r7, #4294967295	; 0xffffffff
 800c41e:	4638      	mov	r0, r7
 800c420:	f8d4 a004 	ldr.w	sl, [r4, #4]
 800c424:	f017 fdda 	bl	8023fdc <_Znaj>
 800c428:	4683      	mov	fp, r0
 800c42a:	68a0      	ldr	r0, [r4, #8]
 800c42c:	2300      	movs	r3, #0
 800c42e:	4298      	cmp	r0, r3
 800c430:	d169      	bne.n	800c506 <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x11a>
 800c432:	f1c0 0204 	rsb	r2, r0, #4
 800c436:	442a      	add	r2, r5
 800c438:	0092      	lsls	r2, r2, #2
 800c43a:	4580      	cmp	r8, r0
 800c43c:	bf38      	it	cc
 800c43e:	2200      	movcc	r2, #0
 800c440:	2100      	movs	r1, #0
 800c442:	eb0b 0080 	add.w	r0, fp, r0, lsl #2
 800c446:	f019 fd83 	bl	8025f50 <memset>
 800c44a:	4638      	mov	r0, r7
 800c44c:	f8d4 900c 	ldr.w	r9, [r4, #12]
 800c450:	f017 fdc4 	bl	8023fdc <_Znaj>
 800c454:	4607      	mov	r7, r0
 800c456:	68a0      	ldr	r0, [r4, #8]
 800c458:	2300      	movs	r3, #0
 800c45a:	4298      	cmp	r0, r3
 800c45c:	d15a      	bne.n	800c514 <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x128>
 800c45e:	f1c0 0204 	rsb	r2, r0, #4
 800c462:	442a      	add	r2, r5
 800c464:	0092      	lsls	r2, r2, #2
 800c466:	4580      	cmp	r8, r0
 800c468:	bf38      	it	cc
 800c46a:	2200      	movcc	r2, #0
 800c46c:	2100      	movs	r1, #0
 800c46e:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800c472:	f019 fd6d 	bl	8025f50 <memset>
 800c476:	e9c4 b801 	strd	fp, r8, [r4, #4]
 800c47a:	60e7      	str	r7, [r4, #12]
 800c47c:	f1ba 0f00 	cmp.w	sl, #0
 800c480:	d14f      	bne.n	800c522 <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x136>
 800c482:	f1b9 0f00 	cmp.w	r9, #0
 800c486:	d002      	beq.n	800c48e <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0xa2>
 800c488:	4648      	mov	r0, r9
 800c48a:	f017 fd21 	bl	8023ed0 <_ZdaPv>
 800c48e:	6873      	ldr	r3, [r6, #4]
 800c490:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800c494:	3301      	adds	r3, #1
 800c496:	6073      	str	r3, [r6, #4]
 800c498:	f859 3025 	ldr.w	r3, [r9, r5, lsl #2]
 800c49c:	b30b      	cbz	r3, 800c4e2 <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0xf6>
 800c49e:	492f      	ldr	r1, [pc, #188]	; (800c55c <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x170>)
 800c4a0:	6808      	ldr	r0, [r1, #0]
 800c4a2:	b1d0      	cbz	r0, 800c4da <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0xee>
 800c4a4:	f7ff ff96 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800c4a8:	4285      	cmp	r5, r0
 800c4aa:	d13e      	bne.n	800c52a <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x13e>
 800c4ac:	6848      	ldr	r0, [r1, #4]
 800c4ae:	f8d4 a004 	ldr.w	sl, [r4, #4]
 800c4b2:	f7ff ff8f 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800c4b6:	f85a 3020 	ldr.w	r3, [sl, r0, lsl #2]
 800c4ba:	4607      	mov	r7, r0
 800c4bc:	b16b      	cbz	r3, 800c4da <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0xee>
 800c4be:	6849      	ldr	r1, [r1, #4]
 800c4c0:	4630      	mov	r0, r6
 800c4c2:	f008 f837 	bl	8014534 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE>
 800c4c6:	6843      	ldr	r3, [r0, #4]
 800c4c8:	3301      	adds	r3, #1
 800c4ca:	4680      	mov	r8, r0
 800c4cc:	6043      	str	r3, [r0, #4]
 800c4ce:	f85a 0027 	ldr.w	r0, [sl, r7, lsl #2]
 800c4d2:	f7ff fee2 	bl	800c29a <_ZNKSt6locale5facet19_M_remove_referenceEv>
 800c4d6:	f84a 8027 	str.w	r8, [sl, r7, lsl #2]
 800c4da:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 800c4de:	f7ff fedc 	bl	800c29a <_ZNKSt6locale5facet19_M_remove_referenceEv>
 800c4e2:	f849 6025 	str.w	r6, [r9, r5, lsl #2]
 800c4e6:	2500      	movs	r5, #0
 800c4e8:	462e      	mov	r6, r5
 800c4ea:	68a3      	ldr	r3, [r4, #8]
 800c4ec:	42ab      	cmp	r3, r5
 800c4ee:	d932      	bls.n	800c556 <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x16a>
 800c4f0:	68e3      	ldr	r3, [r4, #12]
 800c4f2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800c4f6:	b120      	cbz	r0, 800c502 <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x116>
 800c4f8:	f7ff fecf 	bl	800c29a <_ZNKSt6locale5facet19_M_remove_referenceEv>
 800c4fc:	68e3      	ldr	r3, [r4, #12]
 800c4fe:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800c502:	3501      	adds	r5, #1
 800c504:	e7f1      	b.n	800c4ea <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0xfe>
 800c506:	6862      	ldr	r2, [r4, #4]
 800c508:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800c50c:	f84b 2023 	str.w	r2, [fp, r3, lsl #2]
 800c510:	3301      	adds	r3, #1
 800c512:	e78c      	b.n	800c42e <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x42>
 800c514:	68e2      	ldr	r2, [r4, #12]
 800c516:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800c51a:	f847 2023 	str.w	r2, [r7, r3, lsl #2]
 800c51e:	3301      	adds	r3, #1
 800c520:	e79b      	b.n	800c45a <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x6e>
 800c522:	4650      	mov	r0, sl
 800c524:	f017 fcd4 	bl	8023ed0 <_ZdaPv>
 800c528:	e7ab      	b.n	800c482 <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x96>
 800c52a:	6848      	ldr	r0, [r1, #4]
 800c52c:	f7ff ff52 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800c530:	4285      	cmp	r5, r0
 800c532:	d10e      	bne.n	800c552 <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x166>
 800c534:	6808      	ldr	r0, [r1, #0]
 800c536:	f8d4 a004 	ldr.w	sl, [r4, #4]
 800c53a:	f7ff ff4b 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800c53e:	f85a 3020 	ldr.w	r3, [sl, r0, lsl #2]
 800c542:	4607      	mov	r7, r0
 800c544:	2b00      	cmp	r3, #0
 800c546:	d0c8      	beq.n	800c4da <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0xee>
 800c548:	6809      	ldr	r1, [r1, #0]
 800c54a:	4630      	mov	r0, r6
 800c54c:	f002 fefc 	bl	800f348 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE>
 800c550:	e7b9      	b.n	800c4c6 <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0xda>
 800c552:	3108      	adds	r1, #8
 800c554:	e7a4      	b.n	800c4a0 <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0xb4>
 800c556:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c55a:	bf00      	nop
 800c55c:	0802e950 	.word	0x0802e950

0800c560 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj>:
 800c560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c564:	4f21      	ldr	r7, [pc, #132]	; (800c5ec <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj+0x8c>)
 800c566:	783b      	ldrb	r3, [r7, #0]
 800c568:	f3bf 8f5b 	dmb	ish
 800c56c:	07db      	lsls	r3, r3, #31
 800c56e:	4606      	mov	r6, r0
 800c570:	460c      	mov	r4, r1
 800c572:	4615      	mov	r5, r2
 800c574:	d406      	bmi.n	800c584 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj+0x24>
 800c576:	4638      	mov	r0, r7
 800c578:	f017 fd19 	bl	8023fae <__cxa_guard_acquire>
 800c57c:	b110      	cbz	r0, 800c584 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj+0x24>
 800c57e:	4638      	mov	r0, r7
 800c580:	f017 fd21 	bl	8023fc6 <__cxa_guard_release>
 800c584:	491a      	ldr	r1, [pc, #104]	; (800c5f0 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj+0x90>)
 800c586:	6808      	ldr	r0, [r1, #0]
 800c588:	b1f0      	cbz	r0, 800c5c8 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj+0x68>
 800c58a:	f7ff ff23 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800c58e:	42a8      	cmp	r0, r5
 800c590:	6848      	ldr	r0, [r1, #4]
 800c592:	d10d      	bne.n	800c5b0 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj+0x50>
 800c594:	f7ff ff1e 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800c598:	4603      	mov	r3, r0
 800c59a:	68f1      	ldr	r1, [r6, #12]
 800c59c:	f851 2025 	ldr.w	r2, [r1, r5, lsl #2]
 800c5a0:	b1aa      	cbz	r2, 800c5ce <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj+0x6e>
 800c5a2:	b304      	cbz	r4, 800c5e6 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj+0x86>
 800c5a4:	6823      	ldr	r3, [r4, #0]
 800c5a6:	4620      	mov	r0, r4
 800c5a8:	685b      	ldr	r3, [r3, #4]
 800c5aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c5ae:	4718      	bx	r3
 800c5b0:	f7ff ff10 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800c5b4:	42a8      	cmp	r0, r5
 800c5b6:	d105      	bne.n	800c5c4 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj+0x64>
 800c5b8:	6808      	ldr	r0, [r1, #0]
 800c5ba:	f7ff ff0b 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800c5be:	462b      	mov	r3, r5
 800c5c0:	4605      	mov	r5, r0
 800c5c2:	e7ea      	b.n	800c59a <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj+0x3a>
 800c5c4:	3108      	adds	r1, #8
 800c5c6:	e7de      	b.n	800c586 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj+0x26>
 800c5c8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800c5cc:	e7e5      	b.n	800c59a <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj+0x3a>
 800c5ce:	6862      	ldr	r2, [r4, #4]
 800c5d0:	1c50      	adds	r0, r2, #1
 800c5d2:	6060      	str	r0, [r4, #4]
 800c5d4:	1c58      	adds	r0, r3, #1
 800c5d6:	bf18      	it	ne
 800c5d8:	3202      	addne	r2, #2
 800c5da:	f841 4025 	str.w	r4, [r1, r5, lsl #2]
 800c5de:	bf1c      	itt	ne
 800c5e0:	6062      	strne	r2, [r4, #4]
 800c5e2:	f841 4023 	strne.w	r4, [r1, r3, lsl #2]
 800c5e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5ea:	bf00      	nop
 800c5ec:	20002c88 	.word	0x20002c88
 800c5f0:	0802e950 	.word	0x0802e950

0800c5f4 <_ZN12_GLOBAL__N_116get_locale_mutexEv.isra.0>:
 800c5f4:	b510      	push	{r4, lr}
 800c5f6:	4c08      	ldr	r4, [pc, #32]	; (800c618 <_ZN12_GLOBAL__N_116get_locale_mutexEv.isra.0+0x24>)
 800c5f8:	7823      	ldrb	r3, [r4, #0]
 800c5fa:	f3bf 8f5b 	dmb	ish
 800c5fe:	07db      	lsls	r3, r3, #31
 800c600:	d408      	bmi.n	800c614 <_ZN12_GLOBAL__N_116get_locale_mutexEv.isra.0+0x20>
 800c602:	4620      	mov	r0, r4
 800c604:	f017 fcd3 	bl	8023fae <__cxa_guard_acquire>
 800c608:	b120      	cbz	r0, 800c614 <_ZN12_GLOBAL__N_116get_locale_mutexEv.isra.0+0x20>
 800c60a:	4620      	mov	r0, r4
 800c60c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c610:	f017 bcd9 	b.w	8023fc6 <__cxa_guard_release>
 800c614:	bd10      	pop	{r4, pc}
 800c616:	bf00      	nop
 800c618:	20002c9c 	.word	0x20002c9c

0800c61c <_ZNSt6locale5_ImplC1Ej>:
 800c61c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c620:	2330      	movs	r3, #48	; 0x30
 800c622:	6083      	str	r3, [r0, #8]
 800c624:	4bc2      	ldr	r3, [pc, #776]	; (800c930 <_ZNSt6locale5_ImplC1Ej+0x314>)
 800c626:	6001      	str	r1, [r0, #0]
 800c628:	b087      	sub	sp, #28
 800c62a:	4606      	mov	r6, r0
 800c62c:	22c0      	movs	r2, #192	; 0xc0
 800c62e:	2100      	movs	r1, #0
 800c630:	4618      	mov	r0, r3
 800c632:	f019 fc8d 	bl	8025f50 <memset>
 800c636:	4bbf      	ldr	r3, [pc, #764]	; (800c934 <_ZNSt6locale5_ImplC1Ej+0x318>)
 800c638:	6070      	str	r0, [r6, #4]
 800c63a:	22c0      	movs	r2, #192	; 0xc0
 800c63c:	4618      	mov	r0, r3
 800c63e:	2100      	movs	r1, #0
 800c640:	f019 fc86 	bl	8025f50 <memset>
 800c644:	4cbc      	ldr	r4, [pc, #752]	; (800c938 <_ZNSt6locale5_ImplC1Ej+0x31c>)
 800c646:	4dbd      	ldr	r5, [pc, #756]	; (800c93c <_ZNSt6locale5_ImplC1Ej+0x320>)
 800c648:	60f0      	str	r0, [r6, #12]
 800c64a:	2214      	movs	r2, #20
 800c64c:	2100      	movs	r1, #0
 800c64e:	1d20      	adds	r0, r4, #4
 800c650:	f019 fc7e 	bl	8025f50 <memset>
 800c654:	6134      	str	r4, [r6, #16]
 800c656:	6025      	str	r5, [r4, #0]
 800c658:	f7ff fe4a 	bl	800c2f0 <_ZNSt6locale5facet13_S_get_c_nameEv>
 800c65c:	4cb8      	ldr	r4, [pc, #736]	; (800c940 <_ZNSt6locale5_ImplC1Ej+0x324>)
 800c65e:	8803      	ldrh	r3, [r0, #0]
 800c660:	802b      	strh	r3, [r5, #0]
 800c662:	2200      	movs	r2, #0
 800c664:	2301      	movs	r3, #1
 800c666:	4611      	mov	r1, r2
 800c668:	4620      	mov	r0, r4
 800c66a:	f004 fb67 	bl	8010d3c <_ZNSt5ctypeIcEC1EPKcbj>
 800c66e:	4622      	mov	r2, r4
 800c670:	4630      	mov	r0, r6
 800c672:	49b4      	ldr	r1, [pc, #720]	; (800c944 <_ZNSt6locale5_ImplC1Ej+0x328>)
 800c674:	4cb4      	ldr	r4, [pc, #720]	; (800c948 <_ZNSt6locale5_ImplC1Ej+0x32c>)
 800c676:	f8df a3c4 	ldr.w	sl, [pc, #964]	; 800ca3c <_ZNSt6locale5_ImplC1Ej+0x420>
 800c67a:	f8df b3c4 	ldr.w	fp, [pc, #964]	; 800ca40 <_ZNSt6locale5_ImplC1Ej+0x424>
 800c67e:	4db3      	ldr	r5, [pc, #716]	; (800c94c <_ZNSt6locale5_ImplC1Ej+0x330>)
 800c680:	f8df 93c0 	ldr.w	r9, [pc, #960]	; 800ca44 <_ZNSt6locale5_ImplC1Ej+0x428>
 800c684:	f8df 83c0 	ldr.w	r8, [pc, #960]	; 800ca48 <_ZNSt6locale5_ImplC1Ej+0x42c>
 800c688:	f7ff feb0 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c68c:	4ab0      	ldr	r2, [pc, #704]	; (800c950 <_ZNSt6locale5_ImplC1Ej+0x334>)
 800c68e:	2101      	movs	r1, #1
 800c690:	4610      	mov	r0, r2
 800c692:	f018 f8df 	bl	8024854 <_ZNSt7codecvtIcc10_mbstate_tEC1Ej>
 800c696:	4630      	mov	r0, r6
 800c698:	4aad      	ldr	r2, [pc, #692]	; (800c950 <_ZNSt6locale5_ImplC1Ej+0x334>)
 800c69a:	49ae      	ldr	r1, [pc, #696]	; (800c954 <_ZNSt6locale5_ImplC1Ej+0x338>)
 800c69c:	f7ff fea6 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c6a0:	4aad      	ldr	r2, [pc, #692]	; (800c958 <_ZNSt6locale5_ImplC1Ej+0x33c>)
 800c6a2:	4bae      	ldr	r3, [pc, #696]	; (800c95c <_ZNSt6locale5_ImplC1Ej+0x340>)
 800c6a4:	6013      	str	r3, [r2, #0]
 800c6a6:	2701      	movs	r7, #1
 800c6a8:	2300      	movs	r3, #0
 800c6aa:	e9c2 3302 	strd	r3, r3, [r2, #8]
 800c6ae:	e9c2 3305 	strd	r3, r3, [r2, #20]
 800c6b2:	e9c2 3307 	strd	r3, r3, [r2, #28]
 800c6b6:	7413      	strb	r3, [r2, #16]
 800c6b8:	8493      	strh	r3, [r2, #36]	; 0x24
 800c6ba:	f882 3064 	strb.w	r3, [r2, #100]	; 0x64
 800c6be:	6057      	str	r7, [r2, #4]
 800c6c0:	4611      	mov	r1, r2
 800c6c2:	4aa7      	ldr	r2, [pc, #668]	; (800c960 <_ZNSt6locale5_ImplC1Ej+0x344>)
 800c6c4:	6067      	str	r7, [r4, #4]
 800c6c6:	6022      	str	r2, [r4, #0]
 800c6c8:	60a1      	str	r1, [r4, #8]
 800c6ca:	4620      	mov	r0, r4
 800c6cc:	4619      	mov	r1, r3
 800c6ce:	f000 ff0f 	bl	800d4f0 <_ZNSt7__cxx118numpunctIcE22_M_initialize_numpunctEPi>
 800c6d2:	4622      	mov	r2, r4
 800c6d4:	4630      	mov	r0, r6
 800c6d6:	49a3      	ldr	r1, [pc, #652]	; (800c964 <_ZNSt6locale5_ImplC1Ej+0x348>)
 800c6d8:	4ca3      	ldr	r4, [pc, #652]	; (800c968 <_ZNSt6locale5_ImplC1Ej+0x34c>)
 800c6da:	f7ff fe87 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c6de:	4aa3      	ldr	r2, [pc, #652]	; (800c96c <_ZNSt6locale5_ImplC1Ej+0x350>)
 800c6e0:	49a3      	ldr	r1, [pc, #652]	; (800c970 <_ZNSt6locale5_ImplC1Ej+0x354>)
 800c6e2:	6057      	str	r7, [r2, #4]
 800c6e4:	6011      	str	r1, [r2, #0]
 800c6e6:	4630      	mov	r0, r6
 800c6e8:	49a2      	ldr	r1, [pc, #648]	; (800c974 <_ZNSt6locale5_ImplC1Ej+0x358>)
 800c6ea:	f7ff fe7f 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c6ee:	4aa2      	ldr	r2, [pc, #648]	; (800c978 <_ZNSt6locale5_ImplC1Ej+0x35c>)
 800c6f0:	49a2      	ldr	r1, [pc, #648]	; (800c97c <_ZNSt6locale5_ImplC1Ej+0x360>)
 800c6f2:	6057      	str	r7, [r2, #4]
 800c6f4:	6011      	str	r1, [r2, #0]
 800c6f6:	4630      	mov	r0, r6
 800c6f8:	49a1      	ldr	r1, [pc, #644]	; (800c980 <_ZNSt6locale5_ImplC1Ej+0x364>)
 800c6fa:	f7ff fe77 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c6fe:	4aa1      	ldr	r2, [pc, #644]	; (800c984 <_ZNSt6locale5_ImplC1Ej+0x368>)
 800c700:	6067      	str	r7, [r4, #4]
 800c702:	6022      	str	r2, [r4, #0]
 800c704:	f7ff fdea 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 800c708:	4622      	mov	r2, r4
 800c70a:	60a0      	str	r0, [r4, #8]
 800c70c:	499e      	ldr	r1, [pc, #632]	; (800c988 <_ZNSt6locale5_ImplC1Ej+0x36c>)
 800c70e:	4c9f      	ldr	r4, [pc, #636]	; (800c98c <_ZNSt6locale5_ImplC1Ej+0x370>)
 800c710:	4630      	mov	r0, r6
 800c712:	f7ff fe6b 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c716:	4a9e      	ldr	r2, [pc, #632]	; (800c990 <_ZNSt6locale5_ImplC1Ej+0x374>)
 800c718:	f8ca 2000 	str.w	r2, [sl]
 800c71c:	2300      	movs	r3, #0
 800c71e:	4a9d      	ldr	r2, [pc, #628]	; (800c994 <_ZNSt6locale5_ImplC1Ej+0x378>)
 800c720:	6067      	str	r7, [r4, #4]
 800c722:	4619      	mov	r1, r3
 800c724:	6022      	str	r2, [r4, #0]
 800c726:	f8c4 a008 	str.w	sl, [r4, #8]
 800c72a:	461a      	mov	r2, r3
 800c72c:	4620      	mov	r0, r4
 800c72e:	e9ca 3302 	strd	r3, r3, [sl, #8]
 800c732:	e9ca 3305 	strd	r3, r3, [sl, #20]
 800c736:	e9ca 3307 	strd	r3, r3, [sl, #28]
 800c73a:	e9ca 3309 	strd	r3, r3, [sl, #36]	; 0x24
 800c73e:	e9ca 330b 	strd	r3, r3, [sl, #44]	; 0x2c
 800c742:	f8aa 3010 	strh.w	r3, [sl, #16]
 800c746:	f88a 3012 	strb.w	r3, [sl, #18]
 800c74a:	f8ca 3034 	str.w	r3, [sl, #52]	; 0x34
 800c74e:	f88a 3043 	strb.w	r3, [sl, #67]	; 0x43
 800c752:	f8ca 7004 	str.w	r7, [sl, #4]
 800c756:	f000 fb6f 	bl	800ce38 <_ZNSt7__cxx1110moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc>
 800c75a:	4622      	mov	r2, r4
 800c75c:	4630      	mov	r0, r6
 800c75e:	498e      	ldr	r1, [pc, #568]	; (800c998 <_ZNSt6locale5_ImplC1Ej+0x37c>)
 800c760:	4c8e      	ldr	r4, [pc, #568]	; (800c99c <_ZNSt6locale5_ImplC1Ej+0x380>)
 800c762:	f7ff fe43 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c766:	4a8e      	ldr	r2, [pc, #568]	; (800c9a0 <_ZNSt6locale5_ImplC1Ej+0x384>)
 800c768:	f8cb 2000 	str.w	r2, [fp]
 800c76c:	2300      	movs	r3, #0
 800c76e:	4a8d      	ldr	r2, [pc, #564]	; (800c9a4 <_ZNSt6locale5_ImplC1Ej+0x388>)
 800c770:	6067      	str	r7, [r4, #4]
 800c772:	4619      	mov	r1, r3
 800c774:	6022      	str	r2, [r4, #0]
 800c776:	f8c4 b008 	str.w	fp, [r4, #8]
 800c77a:	461a      	mov	r2, r3
 800c77c:	4620      	mov	r0, r4
 800c77e:	e9cb 3302 	strd	r3, r3, [fp, #8]
 800c782:	e9cb 3305 	strd	r3, r3, [fp, #20]
 800c786:	e9cb 3307 	strd	r3, r3, [fp, #28]
 800c78a:	e9cb 3309 	strd	r3, r3, [fp, #36]	; 0x24
 800c78e:	e9cb 330b 	strd	r3, r3, [fp, #44]	; 0x2c
 800c792:	f8ab 3010 	strh.w	r3, [fp, #16]
 800c796:	f88b 3012 	strb.w	r3, [fp, #18]
 800c79a:	f8cb 3034 	str.w	r3, [fp, #52]	; 0x34
 800c79e:	f88b 3043 	strb.w	r3, [fp, #67]	; 0x43
 800c7a2:	f8cb 7004 	str.w	r7, [fp, #4]
 800c7a6:	f000 fb03 	bl	800cdb0 <_ZNSt7__cxx1110moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc>
 800c7aa:	4622      	mov	r2, r4
 800c7ac:	4630      	mov	r0, r6
 800c7ae:	497e      	ldr	r1, [pc, #504]	; (800c9a8 <_ZNSt6locale5_ImplC1Ej+0x38c>)
 800c7b0:	4c7e      	ldr	r4, [pc, #504]	; (800c9ac <_ZNSt6locale5_ImplC1Ej+0x390>)
 800c7b2:	f7ff fe1b 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c7b6:	4a7e      	ldr	r2, [pc, #504]	; (800c9b0 <_ZNSt6locale5_ImplC1Ej+0x394>)
 800c7b8:	497e      	ldr	r1, [pc, #504]	; (800c9b4 <_ZNSt6locale5_ImplC1Ej+0x398>)
 800c7ba:	6057      	str	r7, [r2, #4]
 800c7bc:	6011      	str	r1, [r2, #0]
 800c7be:	4630      	mov	r0, r6
 800c7c0:	497d      	ldr	r1, [pc, #500]	; (800c9b8 <_ZNSt6locale5_ImplC1Ej+0x39c>)
 800c7c2:	f7ff fe13 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c7c6:	4a7d      	ldr	r2, [pc, #500]	; (800c9bc <_ZNSt6locale5_ImplC1Ej+0x3a0>)
 800c7c8:	497d      	ldr	r1, [pc, #500]	; (800c9c0 <_ZNSt6locale5_ImplC1Ej+0x3a4>)
 800c7ca:	6057      	str	r7, [r2, #4]
 800c7cc:	6011      	str	r1, [r2, #0]
 800c7ce:	4630      	mov	r0, r6
 800c7d0:	497c      	ldr	r1, [pc, #496]	; (800c9c4 <_ZNSt6locale5_ImplC1Ej+0x3a8>)
 800c7d2:	f7ff fe0b 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c7d6:	2300      	movs	r3, #0
 800c7d8:	4a7b      	ldr	r2, [pc, #492]	; (800c9c8 <_ZNSt6locale5_ImplC1Ej+0x3ac>)
 800c7da:	606f      	str	r7, [r5, #4]
 800c7dc:	e9c5 3302 	strd	r3, r3, [r5, #8]
 800c7e0:	e9c5 3304 	strd	r3, r3, [r5, #16]
 800c7e4:	e9c5 3306 	strd	r3, r3, [r5, #24]
 800c7e8:	e9c5 3308 	strd	r3, r3, [r5, #32]
 800c7ec:	e9c5 330a 	strd	r3, r3, [r5, #40]	; 0x28
 800c7f0:	e9c5 330c 	strd	r3, r3, [r5, #48]	; 0x30
 800c7f4:	e9c5 330e 	strd	r3, r3, [r5, #56]	; 0x38
 800c7f8:	e9c5 3310 	strd	r3, r3, [r5, #64]	; 0x40
 800c7fc:	e9c5 3312 	strd	r3, r3, [r5, #72]	; 0x48
 800c800:	e9c5 3314 	strd	r3, r3, [r5, #80]	; 0x50
 800c804:	e9c5 3316 	strd	r3, r3, [r5, #88]	; 0x58
 800c808:	e9c5 3318 	strd	r3, r3, [r5, #96]	; 0x60
 800c80c:	e9c5 331a 	strd	r3, r3, [r5, #104]	; 0x68
 800c810:	e9c5 331c 	strd	r3, r3, [r5, #112]	; 0x70
 800c814:	e9c5 331e 	strd	r3, r3, [r5, #120]	; 0x78
 800c818:	602a      	str	r2, [r5, #0]
 800c81a:	4629      	mov	r1, r5
 800c81c:	e9c5 3320 	strd	r3, r3, [r5, #128]	; 0x80
 800c820:	463a      	mov	r2, r7
 800c822:	e9c5 3322 	strd	r3, r3, [r5, #136]	; 0x88
 800c826:	e9c5 3324 	strd	r3, r3, [r5, #144]	; 0x90
 800c82a:	e9c5 3326 	strd	r3, r3, [r5, #152]	; 0x98
 800c82e:	e9c5 3328 	strd	r3, r3, [r5, #160]	; 0xa0
 800c832:	e9c5 332a 	strd	r3, r3, [r5, #168]	; 0xa8
 800c836:	e9c5 332c 	strd	r3, r3, [r5, #176]	; 0xb0
 800c83a:	e9c5 332e 	strd	r3, r3, [r5, #184]	; 0xb8
 800c83e:	f8c5 30c0 	str.w	r3, [r5, #192]	; 0xc0
 800c842:	f885 30c4 	strb.w	r3, [r5, #196]	; 0xc4
 800c846:	4620      	mov	r0, r4
 800c848:	f00b fd66 	bl	8018318 <_ZNSt11__timepunctIcEC1EPSt17__timepunct_cacheIcEj>
 800c84c:	4622      	mov	r2, r4
 800c84e:	4630      	mov	r0, r6
 800c850:	495e      	ldr	r1, [pc, #376]	; (800c9cc <_ZNSt6locale5_ImplC1Ej+0x3b0>)
 800c852:	4c5f      	ldr	r4, [pc, #380]	; (800c9d0 <_ZNSt6locale5_ImplC1Ej+0x3b4>)
 800c854:	f7ff fdca 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c858:	4a5e      	ldr	r2, [pc, #376]	; (800c9d4 <_ZNSt6locale5_ImplC1Ej+0x3b8>)
 800c85a:	495f      	ldr	r1, [pc, #380]	; (800c9d8 <_ZNSt6locale5_ImplC1Ej+0x3bc>)
 800c85c:	6057      	str	r7, [r2, #4]
 800c85e:	6011      	str	r1, [r2, #0]
 800c860:	4630      	mov	r0, r6
 800c862:	495e      	ldr	r1, [pc, #376]	; (800c9dc <_ZNSt6locale5_ImplC1Ej+0x3c0>)
 800c864:	f7ff fdc2 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c868:	4a5d      	ldr	r2, [pc, #372]	; (800c9e0 <_ZNSt6locale5_ImplC1Ej+0x3c4>)
 800c86a:	495e      	ldr	r1, [pc, #376]	; (800c9e4 <_ZNSt6locale5_ImplC1Ej+0x3c8>)
 800c86c:	6057      	str	r7, [r2, #4]
 800c86e:	6011      	str	r1, [r2, #0]
 800c870:	4630      	mov	r0, r6
 800c872:	495d      	ldr	r1, [pc, #372]	; (800c9e8 <_ZNSt6locale5_ImplC1Ej+0x3cc>)
 800c874:	f7ff fdba 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c878:	4a5c      	ldr	r2, [pc, #368]	; (800c9ec <_ZNSt6locale5_ImplC1Ej+0x3d0>)
 800c87a:	4639      	mov	r1, r7
 800c87c:	4610      	mov	r0, r2
 800c87e:	f005 f815 	bl	80118ac <_ZNSt7__cxx118messagesIcEC1Ej>
 800c882:	4630      	mov	r0, r6
 800c884:	4a59      	ldr	r2, [pc, #356]	; (800c9ec <_ZNSt6locale5_ImplC1Ej+0x3d0>)
 800c886:	495a      	ldr	r1, [pc, #360]	; (800c9f0 <_ZNSt6locale5_ImplC1Ej+0x3d4>)
 800c888:	f7ff fdb0 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c88c:	4a59      	ldr	r2, [pc, #356]	; (800c9f4 <_ZNSt6locale5_ImplC1Ej+0x3d8>)
 800c88e:	4639      	mov	r1, r7
 800c890:	4610      	mov	r0, r2
 800c892:	f004 fa3f 	bl	8010d14 <_ZNSt5ctypeIwEC1Ej>
 800c896:	4630      	mov	r0, r6
 800c898:	4a56      	ldr	r2, [pc, #344]	; (800c9f4 <_ZNSt6locale5_ImplC1Ej+0x3d8>)
 800c89a:	4957      	ldr	r1, [pc, #348]	; (800c9f8 <_ZNSt6locale5_ImplC1Ej+0x3dc>)
 800c89c:	f7ff fda6 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c8a0:	4a56      	ldr	r2, [pc, #344]	; (800c9fc <_ZNSt6locale5_ImplC1Ej+0x3e0>)
 800c8a2:	4639      	mov	r1, r7
 800c8a4:	4610      	mov	r0, r2
 800c8a6:	f017 ffe5 	bl	8024874 <_ZNSt7codecvtIwc10_mbstate_tEC1Ej>
 800c8aa:	4630      	mov	r0, r6
 800c8ac:	4a53      	ldr	r2, [pc, #332]	; (800c9fc <_ZNSt6locale5_ImplC1Ej+0x3e0>)
 800c8ae:	4954      	ldr	r1, [pc, #336]	; (800ca00 <_ZNSt6locale5_ImplC1Ej+0x3e4>)
 800c8b0:	f7ff fd9c 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c8b4:	4b53      	ldr	r3, [pc, #332]	; (800ca04 <_ZNSt6locale5_ImplC1Ej+0x3e8>)
 800c8b6:	4a54      	ldr	r2, [pc, #336]	; (800ca08 <_ZNSt6locale5_ImplC1Ej+0x3ec>)
 800c8b8:	601a      	str	r2, [r3, #0]
 800c8ba:	461a      	mov	r2, r3
 800c8bc:	605f      	str	r7, [r3, #4]
 800c8be:	2300      	movs	r3, #0
 800c8c0:	e9c2 3302 	strd	r3, r3, [r2, #8]
 800c8c4:	e9c2 3305 	strd	r3, r3, [r2, #20]
 800c8c8:	e9c2 3307 	strd	r3, r3, [r2, #28]
 800c8cc:	7413      	strb	r3, [r2, #16]
 800c8ce:	6253      	str	r3, [r2, #36]	; 0x24
 800c8d0:	6293      	str	r3, [r2, #40]	; 0x28
 800c8d2:	f882 3124 	strb.w	r3, [r2, #292]	; 0x124
 800c8d6:	4611      	mov	r1, r2
 800c8d8:	4a4c      	ldr	r2, [pc, #304]	; (800ca0c <_ZNSt6locale5_ImplC1Ej+0x3f0>)
 800c8da:	6067      	str	r7, [r4, #4]
 800c8dc:	6022      	str	r2, [r4, #0]
 800c8de:	60a1      	str	r1, [r4, #8]
 800c8e0:	4620      	mov	r0, r4
 800c8e2:	4619      	mov	r1, r3
 800c8e4:	f000 fe6c 	bl	800d5c0 <_ZNSt7__cxx118numpunctIwE22_M_initialize_numpunctEPi>
 800c8e8:	4622      	mov	r2, r4
 800c8ea:	4630      	mov	r0, r6
 800c8ec:	4948      	ldr	r1, [pc, #288]	; (800ca10 <_ZNSt6locale5_ImplC1Ej+0x3f4>)
 800c8ee:	4c49      	ldr	r4, [pc, #292]	; (800ca14 <_ZNSt6locale5_ImplC1Ej+0x3f8>)
 800c8f0:	f7ff fd7c 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c8f4:	4a48      	ldr	r2, [pc, #288]	; (800ca18 <_ZNSt6locale5_ImplC1Ej+0x3fc>)
 800c8f6:	4949      	ldr	r1, [pc, #292]	; (800ca1c <_ZNSt6locale5_ImplC1Ej+0x400>)
 800c8f8:	6057      	str	r7, [r2, #4]
 800c8fa:	6011      	str	r1, [r2, #0]
 800c8fc:	4630      	mov	r0, r6
 800c8fe:	4948      	ldr	r1, [pc, #288]	; (800ca20 <_ZNSt6locale5_ImplC1Ej+0x404>)
 800c900:	f7ff fd74 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c904:	4a47      	ldr	r2, [pc, #284]	; (800ca24 <_ZNSt6locale5_ImplC1Ej+0x408>)
 800c906:	4948      	ldr	r1, [pc, #288]	; (800ca28 <_ZNSt6locale5_ImplC1Ej+0x40c>)
 800c908:	6057      	str	r7, [r2, #4]
 800c90a:	6011      	str	r1, [r2, #0]
 800c90c:	4630      	mov	r0, r6
 800c90e:	4947      	ldr	r1, [pc, #284]	; (800ca2c <_ZNSt6locale5_ImplC1Ej+0x410>)
 800c910:	f7ff fd6c 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c914:	4a46      	ldr	r2, [pc, #280]	; (800ca30 <_ZNSt6locale5_ImplC1Ej+0x414>)
 800c916:	6067      	str	r7, [r4, #4]
 800c918:	6022      	str	r2, [r4, #0]
 800c91a:	f7ff fcdf 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 800c91e:	4622      	mov	r2, r4
 800c920:	60a0      	str	r0, [r4, #8]
 800c922:	4944      	ldr	r1, [pc, #272]	; (800ca34 <_ZNSt6locale5_ImplC1Ej+0x418>)
 800c924:	4c44      	ldr	r4, [pc, #272]	; (800ca38 <_ZNSt6locale5_ImplC1Ej+0x41c>)
 800c926:	4630      	mov	r0, r6
 800c928:	f7ff fd60 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800c92c:	e08e      	b.n	800ca4c <_ZNSt6locale5_ImplC1Ej+0x430>
 800c92e:	bf00      	nop
 800c930:	20003a44 	.word	0x20003a44
 800c934:	20003954 	.word	0x20003954
 800c938:	2000393c 	.word	0x2000393c
 800c93c:	2000322c 	.word	0x2000322c
 800c940:	20003238 	.word	0x20003238
 800c944:	20003c04 	.word	0x20003c04
 800c948:	20002cc0 	.word	0x20002cc0
 800c94c:	20002f34 	.word	0x20002f34
 800c950:	20003a14 	.word	0x20003a14
 800c954:	20003d54 	.word	0x20003d54
 800c958:	20002da4 	.word	0x20002da4
 800c95c:	0802ea58 	.word	0x0802ea58
 800c960:	0802f8ac 	.word	0x0802f8ac
 800c964:	20003c38 	.word	0x20003c38
 800c968:	20003a2c 	.word	0x20003a2c
 800c96c:	20003b04 	.word	0x20003b04
 800c970:	08030948 	.word	0x08030948
 800c974:	20003cd8 	.word	0x20003cd8
 800c978:	20003b14 	.word	0x20003b14
 800c97c:	08030984 	.word	0x08030984
 800c980:	20003cd4 	.word	0x20003cd4
 800c984:	0802f890 	.word	0x0802f890
 800c988:	20003c2c 	.word	0x20003c2c
 800c98c:	20002d64 	.word	0x20002d64
 800c990:	0802e9f0 	.word	0x0802e9f0
 800c994:	0802f904 	.word	0x0802f904
 800c998:	20003c48 	.word	0x20003c48
 800c99c:	20002d70 	.word	0x20002d70
 800c9a0:	0802e9e0 	.word	0x0802e9e0
 800c9a4:	0802f8d0 	.word	0x0802f8d0
 800c9a8:	20003c44 	.word	0x20003c44
 800c9ac:	20002d28 	.word	0x20002d28
 800c9b0:	20002d08 	.word	0x20002d08
 800c9b4:	0802f954 	.word	0x0802f954
 800c9b8:	20003c40 	.word	0x20003c40
 800c9bc:	20002d18 	.word	0x20002d18
 800c9c0:	0802f96c 	.word	0x0802f96c
 800c9c4:	20003c3c 	.word	0x20003c3c
 800c9c8:	080309b4 	.word	0x080309b4
 800c9cc:	20003cd0 	.word	0x20003cd0
 800c9d0:	20002ccc 	.word	0x20002ccc
 800c9d4:	20002cd8 	.word	0x20002cd8
 800c9d8:	0802f984 	.word	0x0802f984
 800c9dc:	20003c34 	.word	0x20003c34
 800c9e0:	20002ce8 	.word	0x20002ce8
 800c9e4:	08030ab4 	.word	0x08030ab4
 800c9e8:	20003ccc 	.word	0x20003ccc
 800c9ec:	20002ca0 	.word	0x20002ca0
 800c9f0:	20003c30 	.word	0x20003c30
 800c9f4:	20003458 	.word	0x20003458
 800c9f8:	20003c08 	.word	0x20003c08
 800c9fc:	20003a20 	.word	0x20003a20
 800ca00:	20003d58 	.word	0x20003d58
 800ca04:	20002e0c 	.word	0x20002e0c
 800ca08:	0802ea68 	.word	0x0802ea68
 800ca0c:	08030384 	.word	0x08030384
 800ca10:	20003c78 	.word	0x20003c78
 800ca14:	20003a38 	.word	0x20003a38
 800ca18:	20003b0c 	.word	0x20003b0c
 800ca1c:	08031140 	.word	0x08031140
 800ca20:	20003d38 	.word	0x20003d38
 800ca24:	20003b1c 	.word	0x20003b1c
 800ca28:	0803117c 	.word	0x0803117c
 800ca2c:	20003d34 	.word	0x20003d34
 800ca30:	08030368 	.word	0x08030368
 800ca34:	20003c6c 	.word	0x20003c6c
 800ca38:	20002d7c 	.word	0x20002d7c
 800ca3c:	200030c4 	.word	0x200030c4
 800ca40:	20003108 	.word	0x20003108
 800ca44:	2000314c 	.word	0x2000314c
 800ca48:	200031bc 	.word	0x200031bc
 800ca4c:	4a8f      	ldr	r2, [pc, #572]	; (800cc8c <_ZNSt6locale5_ImplC1Ej+0x670>)
 800ca4e:	f8c9 2000 	str.w	r2, [r9]
 800ca52:	2300      	movs	r3, #0
 800ca54:	4a8e      	ldr	r2, [pc, #568]	; (800cc90 <_ZNSt6locale5_ImplC1Ej+0x674>)
 800ca56:	6067      	str	r7, [r4, #4]
 800ca58:	4619      	mov	r1, r3
 800ca5a:	6022      	str	r2, [r4, #0]
 800ca5c:	f8c4 9008 	str.w	r9, [r4, #8]
 800ca60:	461a      	mov	r2, r3
 800ca62:	4620      	mov	r0, r4
 800ca64:	e9c9 3302 	strd	r3, r3, [r9, #8]
 800ca68:	e9c9 3305 	strd	r3, r3, [r9, #20]
 800ca6c:	e9c9 3307 	strd	r3, r3, [r9, #28]
 800ca70:	e9c9 3309 	strd	r3, r3, [r9, #36]	; 0x24
 800ca74:	e9c9 330b 	strd	r3, r3, [r9, #44]	; 0x2c
 800ca78:	e9c9 330d 	strd	r3, r3, [r9, #52]	; 0x34
 800ca7c:	f889 3010 	strb.w	r3, [r9, #16]
 800ca80:	f8c9 303c 	str.w	r3, [r9, #60]	; 0x3c
 800ca84:	f889 306c 	strb.w	r3, [r9, #108]	; 0x6c
 800ca88:	f8c9 7004 	str.w	r7, [r9, #4]
 800ca8c:	f000 fa94 	bl	800cfb8 <_ZNSt7__cxx1110moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc>
 800ca90:	4622      	mov	r2, r4
 800ca92:	4630      	mov	r0, r6
 800ca94:	497f      	ldr	r1, [pc, #508]	; (800cc94 <_ZNSt6locale5_ImplC1Ej+0x678>)
 800ca96:	4c80      	ldr	r4, [pc, #512]	; (800cc98 <_ZNSt6locale5_ImplC1Ej+0x67c>)
 800ca98:	f7ff fca8 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800ca9c:	4a7f      	ldr	r2, [pc, #508]	; (800cc9c <_ZNSt6locale5_ImplC1Ej+0x680>)
 800ca9e:	f8c8 2000 	str.w	r2, [r8]
 800caa2:	2300      	movs	r3, #0
 800caa4:	4a7e      	ldr	r2, [pc, #504]	; (800cca0 <_ZNSt6locale5_ImplC1Ej+0x684>)
 800caa6:	6067      	str	r7, [r4, #4]
 800caa8:	4619      	mov	r1, r3
 800caaa:	6022      	str	r2, [r4, #0]
 800caac:	f8c4 8008 	str.w	r8, [r4, #8]
 800cab0:	461a      	mov	r2, r3
 800cab2:	4620      	mov	r0, r4
 800cab4:	e9c8 3302 	strd	r3, r3, [r8, #8]
 800cab8:	e9c8 3305 	strd	r3, r3, [r8, #20]
 800cabc:	e9c8 3307 	strd	r3, r3, [r8, #28]
 800cac0:	e9c8 3309 	strd	r3, r3, [r8, #36]	; 0x24
 800cac4:	e9c8 330b 	strd	r3, r3, [r8, #44]	; 0x2c
 800cac8:	e9c8 330d 	strd	r3, r3, [r8, #52]	; 0x34
 800cacc:	f888 3010 	strb.w	r3, [r8, #16]
 800cad0:	f8c8 303c 	str.w	r3, [r8, #60]	; 0x3c
 800cad4:	f888 306c 	strb.w	r3, [r8, #108]	; 0x6c
 800cad8:	f8c8 7004 	str.w	r7, [r8, #4]
 800cadc:	f000 fa24 	bl	800cf28 <_ZNSt7__cxx1110moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc>
 800cae0:	4622      	mov	r2, r4
 800cae2:	4630      	mov	r0, r6
 800cae4:	496f      	ldr	r1, [pc, #444]	; (800cca4 <_ZNSt6locale5_ImplC1Ej+0x688>)
 800cae6:	4c70      	ldr	r4, [pc, #448]	; (800cca8 <_ZNSt6locale5_ImplC1Ej+0x68c>)
 800cae8:	f7ff fc80 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800caec:	4a6f      	ldr	r2, [pc, #444]	; (800ccac <_ZNSt6locale5_ImplC1Ej+0x690>)
 800caee:	4970      	ldr	r1, [pc, #448]	; (800ccb0 <_ZNSt6locale5_ImplC1Ej+0x694>)
 800caf0:	6057      	str	r7, [r2, #4]
 800caf2:	6011      	str	r1, [r2, #0]
 800caf4:	4630      	mov	r0, r6
 800caf6:	496f      	ldr	r1, [pc, #444]	; (800ccb4 <_ZNSt6locale5_ImplC1Ej+0x698>)
 800caf8:	f7ff fc78 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800cafc:	4a6e      	ldr	r2, [pc, #440]	; (800ccb8 <_ZNSt6locale5_ImplC1Ej+0x69c>)
 800cafe:	496f      	ldr	r1, [pc, #444]	; (800ccbc <_ZNSt6locale5_ImplC1Ej+0x6a0>)
 800cb00:	6057      	str	r7, [r2, #4]
 800cb02:	6011      	str	r1, [r2, #0]
 800cb04:	4630      	mov	r0, r6
 800cb06:	496e      	ldr	r1, [pc, #440]	; (800ccc0 <_ZNSt6locale5_ImplC1Ej+0x6a4>)
 800cb08:	f7ff fc70 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800cb0c:	2300      	movs	r3, #0
 800cb0e:	4a6d      	ldr	r2, [pc, #436]	; (800ccc4 <_ZNSt6locale5_ImplC1Ej+0x6a8>)
 800cb10:	6067      	str	r7, [r4, #4]
 800cb12:	e9c4 3302 	strd	r3, r3, [r4, #8]
 800cb16:	e9c4 3304 	strd	r3, r3, [r4, #16]
 800cb1a:	e9c4 3306 	strd	r3, r3, [r4, #24]
 800cb1e:	e9c4 3308 	strd	r3, r3, [r4, #32]
 800cb22:	e9c4 330a 	strd	r3, r3, [r4, #40]	; 0x28
 800cb26:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
 800cb2a:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 800cb2e:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 800cb32:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800cb36:	e9c4 3314 	strd	r3, r3, [r4, #80]	; 0x50
 800cb3a:	e9c4 3316 	strd	r3, r3, [r4, #88]	; 0x58
 800cb3e:	e9c4 3318 	strd	r3, r3, [r4, #96]	; 0x60
 800cb42:	e9c4 331a 	strd	r3, r3, [r4, #104]	; 0x68
 800cb46:	e9c4 331c 	strd	r3, r3, [r4, #112]	; 0x70
 800cb4a:	e9c4 331e 	strd	r3, r3, [r4, #120]	; 0x78
 800cb4e:	6022      	str	r2, [r4, #0]
 800cb50:	e9c4 3320 	strd	r3, r3, [r4, #128]	; 0x80
 800cb54:	e9c4 3322 	strd	r3, r3, [r4, #136]	; 0x88
 800cb58:	e9c4 3324 	strd	r3, r3, [r4, #144]	; 0x90
 800cb5c:	e9c4 3326 	strd	r3, r3, [r4, #152]	; 0x98
 800cb60:	e9c4 3328 	strd	r3, r3, [r4, #160]	; 0xa0
 800cb64:	e9c4 332a 	strd	r3, r3, [r4, #168]	; 0xa8
 800cb68:	e9c4 332c 	strd	r3, r3, [r4, #176]	; 0xb0
 800cb6c:	e9c4 332e 	strd	r3, r3, [r4, #184]	; 0xb8
 800cb70:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800cb74:	f884 30c4 	strb.w	r3, [r4, #196]	; 0xc4
 800cb78:	4b53      	ldr	r3, [pc, #332]	; (800ccc8 <_ZNSt6locale5_ImplC1Ej+0x6ac>)
 800cb7a:	463a      	mov	r2, r7
 800cb7c:	4621      	mov	r1, r4
 800cb7e:	4618      	mov	r0, r3
 800cb80:	f011 fe24 	bl	801e7cc <_ZNSt11__timepunctIwEC1EPSt17__timepunct_cacheIwEj>
 800cb84:	4b50      	ldr	r3, [pc, #320]	; (800ccc8 <_ZNSt6locale5_ImplC1Ej+0x6ac>)
 800cb86:	4951      	ldr	r1, [pc, #324]	; (800cccc <_ZNSt6locale5_ImplC1Ej+0x6b0>)
 800cb88:	461a      	mov	r2, r3
 800cb8a:	4630      	mov	r0, r6
 800cb8c:	f7ff fc2e 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800cb90:	4a4f      	ldr	r2, [pc, #316]	; (800ccd0 <_ZNSt6locale5_ImplC1Ej+0x6b4>)
 800cb92:	4b50      	ldr	r3, [pc, #320]	; (800ccd4 <_ZNSt6locale5_ImplC1Ej+0x6b8>)
 800cb94:	6057      	str	r7, [r2, #4]
 800cb96:	6013      	str	r3, [r2, #0]
 800cb98:	4630      	mov	r0, r6
 800cb9a:	494f      	ldr	r1, [pc, #316]	; (800ccd8 <_ZNSt6locale5_ImplC1Ej+0x6bc>)
 800cb9c:	f7ff fc26 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800cba0:	4a4e      	ldr	r2, [pc, #312]	; (800ccdc <_ZNSt6locale5_ImplC1Ej+0x6c0>)
 800cba2:	4b4f      	ldr	r3, [pc, #316]	; (800cce0 <_ZNSt6locale5_ImplC1Ej+0x6c4>)
 800cba4:	6013      	str	r3, [r2, #0]
 800cba6:	6057      	str	r7, [r2, #4]
 800cba8:	4630      	mov	r0, r6
 800cbaa:	494e      	ldr	r1, [pc, #312]	; (800cce4 <_ZNSt6locale5_ImplC1Ej+0x6c8>)
 800cbac:	f7ff fc1e 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800cbb0:	4a4d      	ldr	r2, [pc, #308]	; (800cce8 <_ZNSt6locale5_ImplC1Ej+0x6cc>)
 800cbb2:	4639      	mov	r1, r7
 800cbb4:	4610      	mov	r0, r2
 800cbb6:	f008 fdb1 	bl	801571c <_ZNSt7__cxx118messagesIwEC1Ej>
 800cbba:	4630      	mov	r0, r6
 800cbbc:	4a4a      	ldr	r2, [pc, #296]	; (800cce8 <_ZNSt6locale5_ImplC1Ej+0x6cc>)
 800cbbe:	494b      	ldr	r1, [pc, #300]	; (800ccec <_ZNSt6locale5_ImplC1Ej+0x6d0>)
 800cbc0:	f7ff fc14 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800cbc4:	4a4a      	ldr	r2, [pc, #296]	; (800ccf0 <_ZNSt6locale5_ImplC1Ej+0x6d4>)
 800cbc6:	4b4b      	ldr	r3, [pc, #300]	; (800ccf4 <_ZNSt6locale5_ImplC1Ej+0x6d8>)
 800cbc8:	6057      	str	r7, [r2, #4]
 800cbca:	6013      	str	r3, [r2, #0]
 800cbcc:	4630      	mov	r0, r6
 800cbce:	494a      	ldr	r1, [pc, #296]	; (800ccf8 <_ZNSt6locale5_ImplC1Ej+0x6dc>)
 800cbd0:	f7ff fc0c 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800cbd4:	4a49      	ldr	r2, [pc, #292]	; (800ccfc <_ZNSt6locale5_ImplC1Ej+0x6e0>)
 800cbd6:	4b4a      	ldr	r3, [pc, #296]	; (800cd00 <_ZNSt6locale5_ImplC1Ej+0x6e4>)
 800cbd8:	6057      	str	r7, [r2, #4]
 800cbda:	6013      	str	r3, [r2, #0]
 800cbdc:	4630      	mov	r0, r6
 800cbde:	4949      	ldr	r1, [pc, #292]	; (800cd04 <_ZNSt6locale5_ImplC1Ej+0x6e8>)
 800cbe0:	f7ff fc04 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800cbe4:	4a48      	ldr	r2, [pc, #288]	; (800cd08 <_ZNSt6locale5_ImplC1Ej+0x6ec>)
 800cbe6:	4b49      	ldr	r3, [pc, #292]	; (800cd0c <_ZNSt6locale5_ImplC1Ej+0x6f0>)
 800cbe8:	6057      	str	r7, [r2, #4]
 800cbea:	6013      	str	r3, [r2, #0]
 800cbec:	4630      	mov	r0, r6
 800cbee:	4948      	ldr	r1, [pc, #288]	; (800cd10 <_ZNSt6locale5_ImplC1Ej+0x6f4>)
 800cbf0:	f7ff fbfc 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800cbf4:	4a47      	ldr	r2, [pc, #284]	; (800cd14 <_ZNSt6locale5_ImplC1Ej+0x6f8>)
 800cbf6:	4b48      	ldr	r3, [pc, #288]	; (800cd18 <_ZNSt6locale5_ImplC1Ej+0x6fc>)
 800cbf8:	6057      	str	r7, [r2, #4]
 800cbfa:	6013      	str	r3, [r2, #0]
 800cbfc:	4630      	mov	r0, r6
 800cbfe:	4947      	ldr	r1, [pc, #284]	; (800cd1c <_ZNSt6locale5_ImplC1Ej+0x700>)
 800cc00:	f7ff fbf4 	bl	800c3ec <_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE>
 800cc04:	4946      	ldr	r1, [pc, #280]	; (800cd20 <_ZNSt6locale5_ImplC1Ej+0x704>)
 800cc06:	4b47      	ldr	r3, [pc, #284]	; (800cd24 <_ZNSt6locale5_ImplC1Ej+0x708>)
 800cc08:	f8cd b008 	str.w	fp, [sp, #8]
 800cc0c:	e9cd 1903 	strd	r1, r9, [sp, #12]
 800cc10:	4630      	mov	r0, r6
 800cc12:	4669      	mov	r1, sp
 800cc14:	e9cd 3a00 	strd	r3, sl, [sp]
 800cc18:	f8cd 8014 	str.w	r8, [sp, #20]
 800cc1c:	f001 faec 	bl	800e1f8 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE>
 800cc20:	4841      	ldr	r0, [pc, #260]	; (800cd28 <_ZNSt6locale5_ImplC1Ej+0x70c>)
 800cc22:	68f7      	ldr	r7, [r6, #12]
 800cc24:	f7ff fbd6 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800cc28:	4b3e      	ldr	r3, [pc, #248]	; (800cd24 <_ZNSt6locale5_ImplC1Ej+0x708>)
 800cc2a:	f847 3020 	str.w	r3, [r7, r0, lsl #2]
 800cc2e:	483f      	ldr	r0, [pc, #252]	; (800cd2c <_ZNSt6locale5_ImplC1Ej+0x710>)
 800cc30:	68f7      	ldr	r7, [r6, #12]
 800cc32:	f7ff fbcf 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800cc36:	f847 a020 	str.w	sl, [r7, r0, lsl #2]
 800cc3a:	483d      	ldr	r0, [pc, #244]	; (800cd30 <_ZNSt6locale5_ImplC1Ej+0x714>)
 800cc3c:	68f7      	ldr	r7, [r6, #12]
 800cc3e:	f7ff fbc9 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800cc42:	f847 b020 	str.w	fp, [r7, r0, lsl #2]
 800cc46:	483b      	ldr	r0, [pc, #236]	; (800cd34 <_ZNSt6locale5_ImplC1Ej+0x718>)
 800cc48:	68f7      	ldr	r7, [r6, #12]
 800cc4a:	f7ff fbc3 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800cc4e:	f847 5020 	str.w	r5, [r7, r0, lsl #2]
 800cc52:	4839      	ldr	r0, [pc, #228]	; (800cd38 <_ZNSt6locale5_ImplC1Ej+0x71c>)
 800cc54:	68f5      	ldr	r5, [r6, #12]
 800cc56:	f7ff fbbd 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800cc5a:	4931      	ldr	r1, [pc, #196]	; (800cd20 <_ZNSt6locale5_ImplC1Ej+0x704>)
 800cc5c:	f845 1020 	str.w	r1, [r5, r0, lsl #2]
 800cc60:	480c      	ldr	r0, [pc, #48]	; (800cc94 <_ZNSt6locale5_ImplC1Ej+0x678>)
 800cc62:	68f5      	ldr	r5, [r6, #12]
 800cc64:	f7ff fbb6 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800cc68:	f845 9020 	str.w	r9, [r5, r0, lsl #2]
 800cc6c:	480d      	ldr	r0, [pc, #52]	; (800cca4 <_ZNSt6locale5_ImplC1Ej+0x688>)
 800cc6e:	68f5      	ldr	r5, [r6, #12]
 800cc70:	f7ff fbb0 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800cc74:	f845 8020 	str.w	r8, [r5, r0, lsl #2]
 800cc78:	4814      	ldr	r0, [pc, #80]	; (800cccc <_ZNSt6locale5_ImplC1Ej+0x6b0>)
 800cc7a:	68f5      	ldr	r5, [r6, #12]
 800cc7c:	f7ff fbaa 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800cc80:	f845 4020 	str.w	r4, [r5, r0, lsl #2]
 800cc84:	4630      	mov	r0, r6
 800cc86:	b007      	add	sp, #28
 800cc88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc8c:	0802ea10 	.word	0x0802ea10
 800cc90:	080303dc 	.word	0x080303dc
 800cc94:	20003c88 	.word	0x20003c88
 800cc98:	20002d88 	.word	0x20002d88
 800cc9c:	0802ea00 	.word	0x0802ea00
 800cca0:	080303a8 	.word	0x080303a8
 800cca4:	20003c84 	.word	0x20003c84
 800cca8:	20002ffc 	.word	0x20002ffc
 800ccac:	20002d10 	.word	0x20002d10
 800ccb0:	0803042c 	.word	0x0803042c
 800ccb4:	20003c80 	.word	0x20003c80
 800ccb8:	20002d20 	.word	0x20002d20
 800ccbc:	08030444 	.word	0x08030444
 800ccc0:	20003c7c 	.word	0x20003c7c
 800ccc4:	080311ac 	.word	0x080311ac
 800ccc8:	20002d3c 	.word	0x20002d3c
 800cccc:	20003d30 	.word	0x20003d30
 800ccd0:	20002ce0 	.word	0x20002ce0
 800ccd4:	0803045c 	.word	0x0803045c
 800ccd8:	20003c74 	.word	0x20003c74
 800ccdc:	20002cf0 	.word	0x20002cf0
 800cce0:	080312ac 	.word	0x080312ac
 800cce4:	20003d2c 	.word	0x20003d2c
 800cce8:	20002cb0 	.word	0x20002cb0
 800ccec:	20003c70 	.word	0x20003c70
 800ccf0:	20002cf8 	.word	0x20002cf8
 800ccf4:	0802eda8 	.word	0x0802eda8
 800ccf8:	20003b30 	.word	0x20003b30
 800ccfc:	20002d00 	.word	0x20002d00
 800cd00:	0802ed50 	.word	0x0802ed50
 800cd04:	20003b28 	.word	0x20003b28
 800cd08:	20002d94 	.word	0x20002d94
 800cd0c:	0802ed7c 	.word	0x0802ed7c
 800cd10:	20003b2c 	.word	0x20003b2c
 800cd14:	20002d9c 	.word	0x20002d9c
 800cd18:	0802ed24 	.word	0x0802ed24
 800cd1c:	20003b24 	.word	0x20003b24
 800cd20:	20002e0c 	.word	0x20002e0c
 800cd24:	20002da4 	.word	0x20002da4
 800cd28:	20003c38 	.word	0x20003c38
 800cd2c:	20003c48 	.word	0x20003c48
 800cd30:	20003c44 	.word	0x20003c44
 800cd34:	20003cd0 	.word	0x20003cd0
 800cd38:	20003c78 	.word	0x20003c78

0800cd3c <_ZNSt6locale18_S_initialize_onceEv>:
 800cd3c:	b510      	push	{r4, lr}
 800cd3e:	4c07      	ldr	r4, [pc, #28]	; (800cd5c <_ZNSt6locale18_S_initialize_onceEv+0x20>)
 800cd40:	2102      	movs	r1, #2
 800cd42:	4620      	mov	r0, r4
 800cd44:	f7ff fc6a 	bl	800c61c <_ZNSt6locale5_ImplC1Ej>
 800cd48:	4b05      	ldr	r3, [pc, #20]	; (800cd60 <_ZNSt6locale18_S_initialize_onceEv+0x24>)
 800cd4a:	4806      	ldr	r0, [pc, #24]	; (800cd64 <_ZNSt6locale18_S_initialize_onceEv+0x28>)
 800cd4c:	601c      	str	r4, [r3, #0]
 800cd4e:	4b06      	ldr	r3, [pc, #24]	; (800cd68 <_ZNSt6locale18_S_initialize_onceEv+0x2c>)
 800cd50:	4621      	mov	r1, r4
 800cd52:	601c      	str	r4, [r3, #0]
 800cd54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cd58:	f7ff bab4 	b.w	800c2c4 <_ZNSt6localeC1EPNS_5_ImplE>
 800cd5c:	20002d50 	.word	0x20002d50
 800cd60:	20002c8c 	.word	0x20002c8c
 800cd64:	20003938 	.word	0x20003938
 800cd68:	20002c98 	.word	0x20002c98

0800cd6c <_ZNSt6locale13_S_initializeEv>:
 800cd6c:	4b02      	ldr	r3, [pc, #8]	; (800cd78 <_ZNSt6locale13_S_initializeEv+0xc>)
 800cd6e:	681b      	ldr	r3, [r3, #0]
 800cd70:	b90b      	cbnz	r3, 800cd76 <_ZNSt6locale13_S_initializeEv+0xa>
 800cd72:	f7ff bfe3 	b.w	800cd3c <_ZNSt6locale18_S_initialize_onceEv>
 800cd76:	4770      	bx	lr
 800cd78:	20002c8c 	.word	0x20002c8c

0800cd7c <_ZNSt6localeC1Ev>:
 800cd7c:	b538      	push	{r3, r4, r5, lr}
 800cd7e:	2300      	movs	r3, #0
 800cd80:	6003      	str	r3, [r0, #0]
 800cd82:	4604      	mov	r4, r0
 800cd84:	4d08      	ldr	r5, [pc, #32]	; (800cda8 <_ZNSt6localeC1Ev+0x2c>)
 800cd86:	f7ff fff1 	bl	800cd6c <_ZNSt6locale13_S_initializeEv>
 800cd8a:	4a08      	ldr	r2, [pc, #32]	; (800cdac <_ZNSt6localeC1Ev+0x30>)
 800cd8c:	682b      	ldr	r3, [r5, #0]
 800cd8e:	6812      	ldr	r2, [r2, #0]
 800cd90:	6023      	str	r3, [r4, #0]
 800cd92:	4293      	cmp	r3, r2
 800cd94:	d006      	beq.n	800cda4 <_ZNSt6localeC1Ev+0x28>
 800cd96:	f7ff fc2d 	bl	800c5f4 <_ZN12_GLOBAL__N_116get_locale_mutexEv.isra.0>
 800cd9a:	682b      	ldr	r3, [r5, #0]
 800cd9c:	6023      	str	r3, [r4, #0]
 800cd9e:	681a      	ldr	r2, [r3, #0]
 800cda0:	3201      	adds	r2, #1
 800cda2:	601a      	str	r2, [r3, #0]
 800cda4:	4620      	mov	r0, r4
 800cda6:	bd38      	pop	{r3, r4, r5, pc}
 800cda8:	20002c98 	.word	0x20002c98
 800cdac:	20002c8c 	.word	0x20002c8c

0800cdb0 <_ZNSt7__cxx1110moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc>:
 800cdb0:	b538      	push	{r3, r4, r5, lr}
 800cdb2:	6884      	ldr	r4, [r0, #8]
 800cdb4:	4605      	mov	r5, r0
 800cdb6:	b9ac      	cbnz	r4, 800cde4 <_ZNSt7__cxx1110moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc+0x34>
 800cdb8:	2044      	movs	r0, #68	; 0x44
 800cdba:	f7ff f8c1 	bl	800bf40 <_Znwj>
 800cdbe:	4b1a      	ldr	r3, [pc, #104]	; (800ce28 <_ZNSt7__cxx1110moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc+0x78>)
 800cdc0:	8204      	strh	r4, [r0, #16]
 800cdc2:	e9c0 3400 	strd	r3, r4, [r0]
 800cdc6:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800cdca:	e9c0 4405 	strd	r4, r4, [r0, #20]
 800cdce:	e9c0 4407 	strd	r4, r4, [r0, #28]
 800cdd2:	e9c0 4409 	strd	r4, r4, [r0, #36]	; 0x24
 800cdd6:	e9c0 440b 	strd	r4, r4, [r0, #44]	; 0x2c
 800cdda:	7484      	strb	r4, [r0, #18]
 800cddc:	6344      	str	r4, [r0, #52]	; 0x34
 800cdde:	f880 4043 	strb.w	r4, [r0, #67]	; 0x43
 800cde2:	60a8      	str	r0, [r5, #8]
 800cde4:	68ab      	ldr	r3, [r5, #8]
 800cde6:	4911      	ldr	r1, [pc, #68]	; (800ce2c <_ZNSt7__cxx1110moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc+0x7c>)
 800cde8:	222e      	movs	r2, #46	; 0x2e
 800cdea:	745a      	strb	r2, [r3, #17]
 800cdec:	68ab      	ldr	r3, [r5, #8]
 800cdee:	222c      	movs	r2, #44	; 0x2c
 800cdf0:	749a      	strb	r2, [r3, #18]
 800cdf2:	68aa      	ldr	r2, [r5, #8]
 800cdf4:	2300      	movs	r3, #0
 800cdf6:	e9c2 1305 	strd	r1, r3, [r2, #20]
 800cdfa:	e9c2 1307 	strd	r1, r3, [r2, #28]
 800cdfe:	e9c2 1309 	strd	r1, r3, [r2, #36]	; 0x24
 800ce02:	6091      	str	r1, [r2, #8]
 800ce04:	490a      	ldr	r1, [pc, #40]	; (800ce30 <_ZNSt7__cxx1110moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc+0x80>)
 800ce06:	60d3      	str	r3, [r2, #12]
 800ce08:	6808      	ldr	r0, [r1, #0]
 800ce0a:	6310      	str	r0, [r2, #48]	; 0x30
 800ce0c:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ce0e:	68aa      	ldr	r2, [r5, #8]
 800ce10:	6350      	str	r0, [r2, #52]	; 0x34
 800ce12:	4a08      	ldr	r2, [pc, #32]	; (800ce34 <_ZNSt7__cxx1110moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc+0x84>)
 800ce14:	6810      	ldr	r0, [r2, #0]
 800ce16:	68aa      	ldr	r2, [r5, #8]
 800ce18:	5cc1      	ldrb	r1, [r0, r3]
 800ce1a:	441a      	add	r2, r3
 800ce1c:	3301      	adds	r3, #1
 800ce1e:	2b0b      	cmp	r3, #11
 800ce20:	f882 1038 	strb.w	r1, [r2, #56]	; 0x38
 800ce24:	d1f7      	bne.n	800ce16 <_ZNSt7__cxx1110moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc+0x66>
 800ce26:	bd38      	pop	{r3, r4, r5, pc}
 800ce28:	0802e9e0 	.word	0x0802e9e0
 800ce2c:	08032cb9 	.word	0x08032cb9
 800ce30:	08031a20 	.word	0x08031a20
 800ce34:	2000003c 	.word	0x2000003c

0800ce38 <_ZNSt7__cxx1110moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc>:
 800ce38:	b538      	push	{r3, r4, r5, lr}
 800ce3a:	6884      	ldr	r4, [r0, #8]
 800ce3c:	4605      	mov	r5, r0
 800ce3e:	b9ac      	cbnz	r4, 800ce6c <_ZNSt7__cxx1110moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc+0x34>
 800ce40:	2044      	movs	r0, #68	; 0x44
 800ce42:	f7ff f87d 	bl	800bf40 <_Znwj>
 800ce46:	4b1a      	ldr	r3, [pc, #104]	; (800ceb0 <_ZNSt7__cxx1110moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc+0x78>)
 800ce48:	8204      	strh	r4, [r0, #16]
 800ce4a:	e9c0 3400 	strd	r3, r4, [r0]
 800ce4e:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800ce52:	e9c0 4405 	strd	r4, r4, [r0, #20]
 800ce56:	e9c0 4407 	strd	r4, r4, [r0, #28]
 800ce5a:	e9c0 4409 	strd	r4, r4, [r0, #36]	; 0x24
 800ce5e:	e9c0 440b 	strd	r4, r4, [r0, #44]	; 0x2c
 800ce62:	7484      	strb	r4, [r0, #18]
 800ce64:	6344      	str	r4, [r0, #52]	; 0x34
 800ce66:	f880 4043 	strb.w	r4, [r0, #67]	; 0x43
 800ce6a:	60a8      	str	r0, [r5, #8]
 800ce6c:	68ab      	ldr	r3, [r5, #8]
 800ce6e:	4911      	ldr	r1, [pc, #68]	; (800ceb4 <_ZNSt7__cxx1110moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc+0x7c>)
 800ce70:	222e      	movs	r2, #46	; 0x2e
 800ce72:	745a      	strb	r2, [r3, #17]
 800ce74:	68ab      	ldr	r3, [r5, #8]
 800ce76:	222c      	movs	r2, #44	; 0x2c
 800ce78:	749a      	strb	r2, [r3, #18]
 800ce7a:	68aa      	ldr	r2, [r5, #8]
 800ce7c:	2300      	movs	r3, #0
 800ce7e:	e9c2 1305 	strd	r1, r3, [r2, #20]
 800ce82:	e9c2 1307 	strd	r1, r3, [r2, #28]
 800ce86:	e9c2 1309 	strd	r1, r3, [r2, #36]	; 0x24
 800ce8a:	6091      	str	r1, [r2, #8]
 800ce8c:	490a      	ldr	r1, [pc, #40]	; (800ceb8 <_ZNSt7__cxx1110moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc+0x80>)
 800ce8e:	60d3      	str	r3, [r2, #12]
 800ce90:	6808      	ldr	r0, [r1, #0]
 800ce92:	6310      	str	r0, [r2, #48]	; 0x30
 800ce94:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ce96:	68aa      	ldr	r2, [r5, #8]
 800ce98:	6350      	str	r0, [r2, #52]	; 0x34
 800ce9a:	4a08      	ldr	r2, [pc, #32]	; (800cebc <_ZNSt7__cxx1110moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc+0x84>)
 800ce9c:	6810      	ldr	r0, [r2, #0]
 800ce9e:	68aa      	ldr	r2, [r5, #8]
 800cea0:	5cc1      	ldrb	r1, [r0, r3]
 800cea2:	441a      	add	r2, r3
 800cea4:	3301      	adds	r3, #1
 800cea6:	2b0b      	cmp	r3, #11
 800cea8:	f882 1038 	strb.w	r1, [r2, #56]	; 0x38
 800ceac:	d1f7      	bne.n	800ce9e <_ZNSt7__cxx1110moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc+0x66>
 800ceae:	bd38      	pop	{r3, r4, r5, pc}
 800ceb0:	0802e9f0 	.word	0x0802e9f0
 800ceb4:	08032cb9 	.word	0x08032cb9
 800ceb8:	08031a20 	.word	0x08031a20
 800cebc:	2000003c 	.word	0x2000003c

0800cec0 <_ZNSt7__cxx1110moneypunctIcLb1EED1Ev>:
 800cec0:	4b06      	ldr	r3, [pc, #24]	; (800cedc <_ZNSt7__cxx1110moneypunctIcLb1EED1Ev+0x1c>)
 800cec2:	b510      	push	{r4, lr}
 800cec4:	4604      	mov	r4, r0
 800cec6:	6003      	str	r3, [r0, #0]
 800cec8:	6880      	ldr	r0, [r0, #8]
 800ceca:	b110      	cbz	r0, 800ced2 <_ZNSt7__cxx1110moneypunctIcLb1EED1Ev+0x12>
 800cecc:	6803      	ldr	r3, [r0, #0]
 800cece:	685b      	ldr	r3, [r3, #4]
 800ced0:	4798      	blx	r3
 800ced2:	4620      	mov	r0, r4
 800ced4:	f7ff f9e0 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800ced8:	4620      	mov	r0, r4
 800ceda:	bd10      	pop	{r4, pc}
 800cedc:	0802f8d0 	.word	0x0802f8d0

0800cee0 <_ZNSt7__cxx1110moneypunctIcLb1EED0Ev>:
 800cee0:	b510      	push	{r4, lr}
 800cee2:	4604      	mov	r4, r0
 800cee4:	f7ff ffec 	bl	800cec0 <_ZNSt7__cxx1110moneypunctIcLb1EED1Ev>
 800cee8:	4620      	mov	r0, r4
 800ceea:	f016 ffef 	bl	8023ecc <_ZdlPv>
 800ceee:	4620      	mov	r0, r4
 800cef0:	bd10      	pop	{r4, pc}
	...

0800cef4 <_ZNSt7__cxx1110moneypunctIcLb0EED1Ev>:
 800cef4:	4b06      	ldr	r3, [pc, #24]	; (800cf10 <_ZNSt7__cxx1110moneypunctIcLb0EED1Ev+0x1c>)
 800cef6:	b510      	push	{r4, lr}
 800cef8:	4604      	mov	r4, r0
 800cefa:	6003      	str	r3, [r0, #0]
 800cefc:	6880      	ldr	r0, [r0, #8]
 800cefe:	b110      	cbz	r0, 800cf06 <_ZNSt7__cxx1110moneypunctIcLb0EED1Ev+0x12>
 800cf00:	6803      	ldr	r3, [r0, #0]
 800cf02:	685b      	ldr	r3, [r3, #4]
 800cf04:	4798      	blx	r3
 800cf06:	4620      	mov	r0, r4
 800cf08:	f7ff f9c6 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800cf0c:	4620      	mov	r0, r4
 800cf0e:	bd10      	pop	{r4, pc}
 800cf10:	0802f904 	.word	0x0802f904

0800cf14 <_ZNSt7__cxx1110moneypunctIcLb0EED0Ev>:
 800cf14:	b510      	push	{r4, lr}
 800cf16:	4604      	mov	r4, r0
 800cf18:	f7ff ffec 	bl	800cef4 <_ZNSt7__cxx1110moneypunctIcLb0EED1Ev>
 800cf1c:	4620      	mov	r0, r4
 800cf1e:	f016 ffd5 	bl	8023ecc <_ZdlPv>
 800cf22:	4620      	mov	r0, r4
 800cf24:	bd10      	pop	{r4, pc}
	...

0800cf28 <_ZNSt7__cxx1110moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc>:
 800cf28:	b538      	push	{r3, r4, r5, lr}
 800cf2a:	6884      	ldr	r4, [r0, #8]
 800cf2c:	4605      	mov	r5, r0
 800cf2e:	b9b4      	cbnz	r4, 800cf5e <_ZNSt7__cxx1110moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x36>
 800cf30:	2070      	movs	r0, #112	; 0x70
 800cf32:	f7ff f805 	bl	800bf40 <_Znwj>
 800cf36:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800cf3a:	e9c0 4405 	strd	r4, r4, [r0, #20]
 800cf3e:	e9c0 4407 	strd	r4, r4, [r0, #28]
 800cf42:	e9c0 4409 	strd	r4, r4, [r0, #36]	; 0x24
 800cf46:	e9c0 440b 	strd	r4, r4, [r0, #44]	; 0x2c
 800cf4a:	e9c0 440d 	strd	r4, r4, [r0, #52]	; 0x34
 800cf4e:	4b15      	ldr	r3, [pc, #84]	; (800cfa4 <_ZNSt7__cxx1110moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x7c>)
 800cf50:	6044      	str	r4, [r0, #4]
 800cf52:	6003      	str	r3, [r0, #0]
 800cf54:	7404      	strb	r4, [r0, #16]
 800cf56:	63c4      	str	r4, [r0, #60]	; 0x3c
 800cf58:	f880 406c 	strb.w	r4, [r0, #108]	; 0x6c
 800cf5c:	60a8      	str	r0, [r5, #8]
 800cf5e:	68ab      	ldr	r3, [r5, #8]
 800cf60:	212e      	movs	r1, #46	; 0x2e
 800cf62:	222c      	movs	r2, #44	; 0x2c
 800cf64:	e9c3 1205 	strd	r1, r2, [r3, #20]
 800cf68:	490f      	ldr	r1, [pc, #60]	; (800cfa8 <_ZNSt7__cxx1110moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x80>)
 800cf6a:	4a10      	ldr	r2, [pc, #64]	; (800cfac <_ZNSt7__cxx1110moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x84>)
 800cf6c:	609a      	str	r2, [r3, #8]
 800cf6e:	2200      	movs	r2, #0
 800cf70:	e9c3 1207 	strd	r1, r2, [r3, #28]
 800cf74:	e9c3 1209 	strd	r1, r2, [r3, #36]	; 0x24
 800cf78:	e9c3 120b 	strd	r1, r2, [r3, #44]	; 0x2c
 800cf7c:	60da      	str	r2, [r3, #12]
 800cf7e:	635a      	str	r2, [r3, #52]	; 0x34
 800cf80:	4a0b      	ldr	r2, [pc, #44]	; (800cfb0 <_ZNSt7__cxx1110moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x88>)
 800cf82:	6810      	ldr	r0, [r2, #0]
 800cf84:	6398      	str	r0, [r3, #56]	; 0x38
 800cf86:	68ab      	ldr	r3, [r5, #8]
 800cf88:	63d8      	str	r0, [r3, #60]	; 0x3c
 800cf8a:	4b0a      	ldr	r3, [pc, #40]	; (800cfb4 <_ZNSt7__cxx1110moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x8c>)
 800cf8c:	68aa      	ldr	r2, [r5, #8]
 800cf8e:	681b      	ldr	r3, [r3, #0]
 800cf90:	3240      	adds	r2, #64	; 0x40
 800cf92:	1e59      	subs	r1, r3, #1
 800cf94:	330a      	adds	r3, #10
 800cf96:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800cf9a:	f842 0b04 	str.w	r0, [r2], #4
 800cf9e:	4299      	cmp	r1, r3
 800cfa0:	d1f9      	bne.n	800cf96 <_ZNSt7__cxx1110moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x6e>
 800cfa2:	bd38      	pop	{r3, r4, r5, pc}
 800cfa4:	0802ea00 	.word	0x0802ea00
 800cfa8:	08033054 	.word	0x08033054
 800cfac:	08032cb9 	.word	0x08032cb9
 800cfb0:	08031a20 	.word	0x08031a20
 800cfb4:	2000003c 	.word	0x2000003c

0800cfb8 <_ZNSt7__cxx1110moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc>:
 800cfb8:	b538      	push	{r3, r4, r5, lr}
 800cfba:	6884      	ldr	r4, [r0, #8]
 800cfbc:	4605      	mov	r5, r0
 800cfbe:	b9b4      	cbnz	r4, 800cfee <_ZNSt7__cxx1110moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x36>
 800cfc0:	2070      	movs	r0, #112	; 0x70
 800cfc2:	f7fe ffbd 	bl	800bf40 <_Znwj>
 800cfc6:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800cfca:	e9c0 4405 	strd	r4, r4, [r0, #20]
 800cfce:	e9c0 4407 	strd	r4, r4, [r0, #28]
 800cfd2:	e9c0 4409 	strd	r4, r4, [r0, #36]	; 0x24
 800cfd6:	e9c0 440b 	strd	r4, r4, [r0, #44]	; 0x2c
 800cfda:	e9c0 440d 	strd	r4, r4, [r0, #52]	; 0x34
 800cfde:	4b15      	ldr	r3, [pc, #84]	; (800d034 <_ZNSt7__cxx1110moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x7c>)
 800cfe0:	6044      	str	r4, [r0, #4]
 800cfe2:	6003      	str	r3, [r0, #0]
 800cfe4:	7404      	strb	r4, [r0, #16]
 800cfe6:	63c4      	str	r4, [r0, #60]	; 0x3c
 800cfe8:	f880 406c 	strb.w	r4, [r0, #108]	; 0x6c
 800cfec:	60a8      	str	r0, [r5, #8]
 800cfee:	68ab      	ldr	r3, [r5, #8]
 800cff0:	212e      	movs	r1, #46	; 0x2e
 800cff2:	222c      	movs	r2, #44	; 0x2c
 800cff4:	e9c3 1205 	strd	r1, r2, [r3, #20]
 800cff8:	490f      	ldr	r1, [pc, #60]	; (800d038 <_ZNSt7__cxx1110moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x80>)
 800cffa:	4a10      	ldr	r2, [pc, #64]	; (800d03c <_ZNSt7__cxx1110moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x84>)
 800cffc:	609a      	str	r2, [r3, #8]
 800cffe:	2200      	movs	r2, #0
 800d000:	e9c3 1207 	strd	r1, r2, [r3, #28]
 800d004:	e9c3 1209 	strd	r1, r2, [r3, #36]	; 0x24
 800d008:	e9c3 120b 	strd	r1, r2, [r3, #44]	; 0x2c
 800d00c:	60da      	str	r2, [r3, #12]
 800d00e:	635a      	str	r2, [r3, #52]	; 0x34
 800d010:	4a0b      	ldr	r2, [pc, #44]	; (800d040 <_ZNSt7__cxx1110moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x88>)
 800d012:	6810      	ldr	r0, [r2, #0]
 800d014:	6398      	str	r0, [r3, #56]	; 0x38
 800d016:	68ab      	ldr	r3, [r5, #8]
 800d018:	63d8      	str	r0, [r3, #60]	; 0x3c
 800d01a:	4b0a      	ldr	r3, [pc, #40]	; (800d044 <_ZNSt7__cxx1110moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x8c>)
 800d01c:	68aa      	ldr	r2, [r5, #8]
 800d01e:	681b      	ldr	r3, [r3, #0]
 800d020:	3240      	adds	r2, #64	; 0x40
 800d022:	1e59      	subs	r1, r3, #1
 800d024:	330a      	adds	r3, #10
 800d026:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800d02a:	f842 0b04 	str.w	r0, [r2], #4
 800d02e:	4299      	cmp	r1, r3
 800d030:	d1f9      	bne.n	800d026 <_ZNSt7__cxx1110moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x6e>
 800d032:	bd38      	pop	{r3, r4, r5, pc}
 800d034:	0802ea10 	.word	0x0802ea10
 800d038:	08033054 	.word	0x08033054
 800d03c:	08032cb9 	.word	0x08032cb9
 800d040:	08031a20 	.word	0x08031a20
 800d044:	2000003c 	.word	0x2000003c

0800d048 <_ZNSt7__cxx1110moneypunctIwLb1EED1Ev>:
 800d048:	4b06      	ldr	r3, [pc, #24]	; (800d064 <_ZNSt7__cxx1110moneypunctIwLb1EED1Ev+0x1c>)
 800d04a:	b510      	push	{r4, lr}
 800d04c:	4604      	mov	r4, r0
 800d04e:	6003      	str	r3, [r0, #0]
 800d050:	6880      	ldr	r0, [r0, #8]
 800d052:	b110      	cbz	r0, 800d05a <_ZNSt7__cxx1110moneypunctIwLb1EED1Ev+0x12>
 800d054:	6803      	ldr	r3, [r0, #0]
 800d056:	685b      	ldr	r3, [r3, #4]
 800d058:	4798      	blx	r3
 800d05a:	4620      	mov	r0, r4
 800d05c:	f7ff f91c 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d060:	4620      	mov	r0, r4
 800d062:	bd10      	pop	{r4, pc}
 800d064:	080303a8 	.word	0x080303a8

0800d068 <_ZNSt7__cxx1110moneypunctIwLb1EED0Ev>:
 800d068:	b510      	push	{r4, lr}
 800d06a:	4604      	mov	r4, r0
 800d06c:	f7ff ffec 	bl	800d048 <_ZNSt7__cxx1110moneypunctIwLb1EED1Ev>
 800d070:	4620      	mov	r0, r4
 800d072:	f016 ff2b 	bl	8023ecc <_ZdlPv>
 800d076:	4620      	mov	r0, r4
 800d078:	bd10      	pop	{r4, pc}
	...

0800d07c <_ZNSt7__cxx1110moneypunctIwLb0EED1Ev>:
 800d07c:	4b06      	ldr	r3, [pc, #24]	; (800d098 <_ZNSt7__cxx1110moneypunctIwLb0EED1Ev+0x1c>)
 800d07e:	b510      	push	{r4, lr}
 800d080:	4604      	mov	r4, r0
 800d082:	6003      	str	r3, [r0, #0]
 800d084:	6880      	ldr	r0, [r0, #8]
 800d086:	b110      	cbz	r0, 800d08e <_ZNSt7__cxx1110moneypunctIwLb0EED1Ev+0x12>
 800d088:	6803      	ldr	r3, [r0, #0]
 800d08a:	685b      	ldr	r3, [r3, #4]
 800d08c:	4798      	blx	r3
 800d08e:	4620      	mov	r0, r4
 800d090:	f7ff f902 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d094:	4620      	mov	r0, r4
 800d096:	bd10      	pop	{r4, pc}
 800d098:	080303dc 	.word	0x080303dc

0800d09c <_ZNSt7__cxx1110moneypunctIwLb0EED0Ev>:
 800d09c:	b510      	push	{r4, lr}
 800d09e:	4604      	mov	r4, r0
 800d0a0:	f7ff ffec 	bl	800d07c <_ZNSt7__cxx1110moneypunctIwLb0EED1Ev>
 800d0a4:	4620      	mov	r0, r4
 800d0a6:	f016 ff11 	bl	8023ecc <_ZdlPv>
 800d0aa:	4620      	mov	r0, r4
 800d0ac:	bd10      	pop	{r4, pc}
	...

0800d0b0 <_ZNSt18__moneypunct_cacheIcLb1EED1Ev>:
 800d0b0:	4b0d      	ldr	r3, [pc, #52]	; (800d0e8 <_ZNSt18__moneypunct_cacheIcLb1EED1Ev+0x38>)
 800d0b2:	b510      	push	{r4, lr}
 800d0b4:	6003      	str	r3, [r0, #0]
 800d0b6:	f890 3043 	ldrb.w	r3, [r0, #67]	; 0x43
 800d0ba:	4604      	mov	r4, r0
 800d0bc:	b17b      	cbz	r3, 800d0de <_ZNSt18__moneypunct_cacheIcLb1EED1Ev+0x2e>
 800d0be:	6880      	ldr	r0, [r0, #8]
 800d0c0:	b108      	cbz	r0, 800d0c6 <_ZNSt18__moneypunct_cacheIcLb1EED1Ev+0x16>
 800d0c2:	f016 ff05 	bl	8023ed0 <_ZdaPv>
 800d0c6:	6960      	ldr	r0, [r4, #20]
 800d0c8:	b108      	cbz	r0, 800d0ce <_ZNSt18__moneypunct_cacheIcLb1EED1Ev+0x1e>
 800d0ca:	f016 ff01 	bl	8023ed0 <_ZdaPv>
 800d0ce:	69e0      	ldr	r0, [r4, #28]
 800d0d0:	b108      	cbz	r0, 800d0d6 <_ZNSt18__moneypunct_cacheIcLb1EED1Ev+0x26>
 800d0d2:	f016 fefd 	bl	8023ed0 <_ZdaPv>
 800d0d6:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800d0d8:	b108      	cbz	r0, 800d0de <_ZNSt18__moneypunct_cacheIcLb1EED1Ev+0x2e>
 800d0da:	f016 fef9 	bl	8023ed0 <_ZdaPv>
 800d0de:	4620      	mov	r0, r4
 800d0e0:	f7ff f8da 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d0e4:	4620      	mov	r0, r4
 800d0e6:	bd10      	pop	{r4, pc}
 800d0e8:	0802e9e0 	.word	0x0802e9e0

0800d0ec <_ZNSt18__moneypunct_cacheIcLb1EED0Ev>:
 800d0ec:	b510      	push	{r4, lr}
 800d0ee:	4604      	mov	r4, r0
 800d0f0:	f7ff ffde 	bl	800d0b0 <_ZNSt18__moneypunct_cacheIcLb1EED1Ev>
 800d0f4:	4620      	mov	r0, r4
 800d0f6:	f016 fee9 	bl	8023ecc <_ZdlPv>
 800d0fa:	4620      	mov	r0, r4
 800d0fc:	bd10      	pop	{r4, pc}
	...

0800d100 <_ZNSt18__moneypunct_cacheIcLb0EED1Ev>:
 800d100:	4b0d      	ldr	r3, [pc, #52]	; (800d138 <_ZNSt18__moneypunct_cacheIcLb0EED1Ev+0x38>)
 800d102:	b510      	push	{r4, lr}
 800d104:	6003      	str	r3, [r0, #0]
 800d106:	f890 3043 	ldrb.w	r3, [r0, #67]	; 0x43
 800d10a:	4604      	mov	r4, r0
 800d10c:	b17b      	cbz	r3, 800d12e <_ZNSt18__moneypunct_cacheIcLb0EED1Ev+0x2e>
 800d10e:	6880      	ldr	r0, [r0, #8]
 800d110:	b108      	cbz	r0, 800d116 <_ZNSt18__moneypunct_cacheIcLb0EED1Ev+0x16>
 800d112:	f016 fedd 	bl	8023ed0 <_ZdaPv>
 800d116:	6960      	ldr	r0, [r4, #20]
 800d118:	b108      	cbz	r0, 800d11e <_ZNSt18__moneypunct_cacheIcLb0EED1Ev+0x1e>
 800d11a:	f016 fed9 	bl	8023ed0 <_ZdaPv>
 800d11e:	69e0      	ldr	r0, [r4, #28]
 800d120:	b108      	cbz	r0, 800d126 <_ZNSt18__moneypunct_cacheIcLb0EED1Ev+0x26>
 800d122:	f016 fed5 	bl	8023ed0 <_ZdaPv>
 800d126:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800d128:	b108      	cbz	r0, 800d12e <_ZNSt18__moneypunct_cacheIcLb0EED1Ev+0x2e>
 800d12a:	f016 fed1 	bl	8023ed0 <_ZdaPv>
 800d12e:	4620      	mov	r0, r4
 800d130:	f7ff f8b2 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d134:	4620      	mov	r0, r4
 800d136:	bd10      	pop	{r4, pc}
 800d138:	0802e9f0 	.word	0x0802e9f0

0800d13c <_ZNSt18__moneypunct_cacheIcLb0EED0Ev>:
 800d13c:	b510      	push	{r4, lr}
 800d13e:	4604      	mov	r4, r0
 800d140:	f7ff ffde 	bl	800d100 <_ZNSt18__moneypunct_cacheIcLb0EED1Ev>
 800d144:	4620      	mov	r0, r4
 800d146:	f016 fec1 	bl	8023ecc <_ZdlPv>
 800d14a:	4620      	mov	r0, r4
 800d14c:	bd10      	pop	{r4, pc}
	...

0800d150 <_ZNSt18__moneypunct_cacheIwLb1EED1Ev>:
 800d150:	4b0d      	ldr	r3, [pc, #52]	; (800d188 <_ZNSt18__moneypunct_cacheIwLb1EED1Ev+0x38>)
 800d152:	b510      	push	{r4, lr}
 800d154:	6003      	str	r3, [r0, #0]
 800d156:	f890 306c 	ldrb.w	r3, [r0, #108]	; 0x6c
 800d15a:	4604      	mov	r4, r0
 800d15c:	b17b      	cbz	r3, 800d17e <_ZNSt18__moneypunct_cacheIwLb1EED1Ev+0x2e>
 800d15e:	6880      	ldr	r0, [r0, #8]
 800d160:	b108      	cbz	r0, 800d166 <_ZNSt18__moneypunct_cacheIwLb1EED1Ev+0x16>
 800d162:	f016 feb5 	bl	8023ed0 <_ZdaPv>
 800d166:	69e0      	ldr	r0, [r4, #28]
 800d168:	b108      	cbz	r0, 800d16e <_ZNSt18__moneypunct_cacheIwLb1EED1Ev+0x1e>
 800d16a:	f016 feb1 	bl	8023ed0 <_ZdaPv>
 800d16e:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800d170:	b108      	cbz	r0, 800d176 <_ZNSt18__moneypunct_cacheIwLb1EED1Ev+0x26>
 800d172:	f016 fead 	bl	8023ed0 <_ZdaPv>
 800d176:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800d178:	b108      	cbz	r0, 800d17e <_ZNSt18__moneypunct_cacheIwLb1EED1Ev+0x2e>
 800d17a:	f016 fea9 	bl	8023ed0 <_ZdaPv>
 800d17e:	4620      	mov	r0, r4
 800d180:	f7ff f88a 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d184:	4620      	mov	r0, r4
 800d186:	bd10      	pop	{r4, pc}
 800d188:	0802ea00 	.word	0x0802ea00

0800d18c <_ZNSt18__moneypunct_cacheIwLb1EED0Ev>:
 800d18c:	b510      	push	{r4, lr}
 800d18e:	4604      	mov	r4, r0
 800d190:	f7ff ffde 	bl	800d150 <_ZNSt18__moneypunct_cacheIwLb1EED1Ev>
 800d194:	4620      	mov	r0, r4
 800d196:	f016 fe99 	bl	8023ecc <_ZdlPv>
 800d19a:	4620      	mov	r0, r4
 800d19c:	bd10      	pop	{r4, pc}
	...

0800d1a0 <_ZNSt18__moneypunct_cacheIwLb0EED1Ev>:
 800d1a0:	4b0d      	ldr	r3, [pc, #52]	; (800d1d8 <_ZNSt18__moneypunct_cacheIwLb0EED1Ev+0x38>)
 800d1a2:	b510      	push	{r4, lr}
 800d1a4:	6003      	str	r3, [r0, #0]
 800d1a6:	f890 306c 	ldrb.w	r3, [r0, #108]	; 0x6c
 800d1aa:	4604      	mov	r4, r0
 800d1ac:	b17b      	cbz	r3, 800d1ce <_ZNSt18__moneypunct_cacheIwLb0EED1Ev+0x2e>
 800d1ae:	6880      	ldr	r0, [r0, #8]
 800d1b0:	b108      	cbz	r0, 800d1b6 <_ZNSt18__moneypunct_cacheIwLb0EED1Ev+0x16>
 800d1b2:	f016 fe8d 	bl	8023ed0 <_ZdaPv>
 800d1b6:	69e0      	ldr	r0, [r4, #28]
 800d1b8:	b108      	cbz	r0, 800d1be <_ZNSt18__moneypunct_cacheIwLb0EED1Ev+0x1e>
 800d1ba:	f016 fe89 	bl	8023ed0 <_ZdaPv>
 800d1be:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800d1c0:	b108      	cbz	r0, 800d1c6 <_ZNSt18__moneypunct_cacheIwLb0EED1Ev+0x26>
 800d1c2:	f016 fe85 	bl	8023ed0 <_ZdaPv>
 800d1c6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800d1c8:	b108      	cbz	r0, 800d1ce <_ZNSt18__moneypunct_cacheIwLb0EED1Ev+0x2e>
 800d1ca:	f016 fe81 	bl	8023ed0 <_ZdaPv>
 800d1ce:	4620      	mov	r0, r4
 800d1d0:	f7ff f862 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d1d4:	4620      	mov	r0, r4
 800d1d6:	bd10      	pop	{r4, pc}
 800d1d8:	0802ea10 	.word	0x0802ea10

0800d1dc <_ZNSt18__moneypunct_cacheIwLb0EED0Ev>:
 800d1dc:	b510      	push	{r4, lr}
 800d1de:	4604      	mov	r4, r0
 800d1e0:	f7ff ffde 	bl	800d1a0 <_ZNSt18__moneypunct_cacheIwLb0EED1Ev>
 800d1e4:	4620      	mov	r0, r4
 800d1e6:	f016 fe71 	bl	8023ecc <_ZdlPv>
 800d1ea:	4620      	mov	r0, r4
 800d1ec:	bd10      	pop	{r4, pc}
	...

0800d1f0 <_ZNSt10moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc>:
 800d1f0:	b538      	push	{r3, r4, r5, lr}
 800d1f2:	6884      	ldr	r4, [r0, #8]
 800d1f4:	4605      	mov	r5, r0
 800d1f6:	b9ac      	cbnz	r4, 800d224 <_ZNSt10moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc+0x34>
 800d1f8:	2044      	movs	r0, #68	; 0x44
 800d1fa:	f7fe fea1 	bl	800bf40 <_Znwj>
 800d1fe:	4b1a      	ldr	r3, [pc, #104]	; (800d268 <_ZNSt10moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc+0x78>)
 800d200:	8204      	strh	r4, [r0, #16]
 800d202:	e9c0 3400 	strd	r3, r4, [r0]
 800d206:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800d20a:	e9c0 4405 	strd	r4, r4, [r0, #20]
 800d20e:	e9c0 4407 	strd	r4, r4, [r0, #28]
 800d212:	e9c0 4409 	strd	r4, r4, [r0, #36]	; 0x24
 800d216:	e9c0 440b 	strd	r4, r4, [r0, #44]	; 0x2c
 800d21a:	7484      	strb	r4, [r0, #18]
 800d21c:	6344      	str	r4, [r0, #52]	; 0x34
 800d21e:	f880 4043 	strb.w	r4, [r0, #67]	; 0x43
 800d222:	60a8      	str	r0, [r5, #8]
 800d224:	68ab      	ldr	r3, [r5, #8]
 800d226:	4911      	ldr	r1, [pc, #68]	; (800d26c <_ZNSt10moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc+0x7c>)
 800d228:	222e      	movs	r2, #46	; 0x2e
 800d22a:	745a      	strb	r2, [r3, #17]
 800d22c:	68ab      	ldr	r3, [r5, #8]
 800d22e:	222c      	movs	r2, #44	; 0x2c
 800d230:	749a      	strb	r2, [r3, #18]
 800d232:	68aa      	ldr	r2, [r5, #8]
 800d234:	2300      	movs	r3, #0
 800d236:	e9c2 1305 	strd	r1, r3, [r2, #20]
 800d23a:	e9c2 1307 	strd	r1, r3, [r2, #28]
 800d23e:	e9c2 1309 	strd	r1, r3, [r2, #36]	; 0x24
 800d242:	6091      	str	r1, [r2, #8]
 800d244:	490a      	ldr	r1, [pc, #40]	; (800d270 <_ZNSt10moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc+0x80>)
 800d246:	60d3      	str	r3, [r2, #12]
 800d248:	6808      	ldr	r0, [r1, #0]
 800d24a:	6310      	str	r0, [r2, #48]	; 0x30
 800d24c:	62d3      	str	r3, [r2, #44]	; 0x2c
 800d24e:	68aa      	ldr	r2, [r5, #8]
 800d250:	6350      	str	r0, [r2, #52]	; 0x34
 800d252:	4a08      	ldr	r2, [pc, #32]	; (800d274 <_ZNSt10moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc+0x84>)
 800d254:	6810      	ldr	r0, [r2, #0]
 800d256:	68aa      	ldr	r2, [r5, #8]
 800d258:	5cc1      	ldrb	r1, [r0, r3]
 800d25a:	441a      	add	r2, r3
 800d25c:	3301      	adds	r3, #1
 800d25e:	2b0b      	cmp	r3, #11
 800d260:	f882 1038 	strb.w	r1, [r2, #56]	; 0x38
 800d264:	d1f7      	bne.n	800d256 <_ZNSt10moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc+0x66>
 800d266:	bd38      	pop	{r3, r4, r5, pc}
 800d268:	0802e9e0 	.word	0x0802e9e0
 800d26c:	08032cb9 	.word	0x08032cb9
 800d270:	08031a20 	.word	0x08031a20
 800d274:	2000003c 	.word	0x2000003c

0800d278 <_ZNSt10moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc>:
 800d278:	b538      	push	{r3, r4, r5, lr}
 800d27a:	6884      	ldr	r4, [r0, #8]
 800d27c:	4605      	mov	r5, r0
 800d27e:	b9ac      	cbnz	r4, 800d2ac <_ZNSt10moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc+0x34>
 800d280:	2044      	movs	r0, #68	; 0x44
 800d282:	f7fe fe5d 	bl	800bf40 <_Znwj>
 800d286:	4b1a      	ldr	r3, [pc, #104]	; (800d2f0 <_ZNSt10moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc+0x78>)
 800d288:	8204      	strh	r4, [r0, #16]
 800d28a:	e9c0 3400 	strd	r3, r4, [r0]
 800d28e:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800d292:	e9c0 4405 	strd	r4, r4, [r0, #20]
 800d296:	e9c0 4407 	strd	r4, r4, [r0, #28]
 800d29a:	e9c0 4409 	strd	r4, r4, [r0, #36]	; 0x24
 800d29e:	e9c0 440b 	strd	r4, r4, [r0, #44]	; 0x2c
 800d2a2:	7484      	strb	r4, [r0, #18]
 800d2a4:	6344      	str	r4, [r0, #52]	; 0x34
 800d2a6:	f880 4043 	strb.w	r4, [r0, #67]	; 0x43
 800d2aa:	60a8      	str	r0, [r5, #8]
 800d2ac:	68ab      	ldr	r3, [r5, #8]
 800d2ae:	4911      	ldr	r1, [pc, #68]	; (800d2f4 <_ZNSt10moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc+0x7c>)
 800d2b0:	222e      	movs	r2, #46	; 0x2e
 800d2b2:	745a      	strb	r2, [r3, #17]
 800d2b4:	68ab      	ldr	r3, [r5, #8]
 800d2b6:	222c      	movs	r2, #44	; 0x2c
 800d2b8:	749a      	strb	r2, [r3, #18]
 800d2ba:	68aa      	ldr	r2, [r5, #8]
 800d2bc:	2300      	movs	r3, #0
 800d2be:	e9c2 1305 	strd	r1, r3, [r2, #20]
 800d2c2:	e9c2 1307 	strd	r1, r3, [r2, #28]
 800d2c6:	e9c2 1309 	strd	r1, r3, [r2, #36]	; 0x24
 800d2ca:	6091      	str	r1, [r2, #8]
 800d2cc:	490a      	ldr	r1, [pc, #40]	; (800d2f8 <_ZNSt10moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc+0x80>)
 800d2ce:	60d3      	str	r3, [r2, #12]
 800d2d0:	6808      	ldr	r0, [r1, #0]
 800d2d2:	6310      	str	r0, [r2, #48]	; 0x30
 800d2d4:	62d3      	str	r3, [r2, #44]	; 0x2c
 800d2d6:	68aa      	ldr	r2, [r5, #8]
 800d2d8:	6350      	str	r0, [r2, #52]	; 0x34
 800d2da:	4a08      	ldr	r2, [pc, #32]	; (800d2fc <_ZNSt10moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc+0x84>)
 800d2dc:	6810      	ldr	r0, [r2, #0]
 800d2de:	68aa      	ldr	r2, [r5, #8]
 800d2e0:	5cc1      	ldrb	r1, [r0, r3]
 800d2e2:	441a      	add	r2, r3
 800d2e4:	3301      	adds	r3, #1
 800d2e6:	2b0b      	cmp	r3, #11
 800d2e8:	f882 1038 	strb.w	r1, [r2, #56]	; 0x38
 800d2ec:	d1f7      	bne.n	800d2de <_ZNSt10moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc+0x66>
 800d2ee:	bd38      	pop	{r3, r4, r5, pc}
 800d2f0:	0802e9f0 	.word	0x0802e9f0
 800d2f4:	08032cb9 	.word	0x08032cb9
 800d2f8:	08031a20 	.word	0x08031a20
 800d2fc:	2000003c 	.word	0x2000003c

0800d300 <_ZNSt10moneypunctIcLb1EED1Ev>:
 800d300:	4b06      	ldr	r3, [pc, #24]	; (800d31c <_ZNSt10moneypunctIcLb1EED1Ev+0x1c>)
 800d302:	b510      	push	{r4, lr}
 800d304:	4604      	mov	r4, r0
 800d306:	6003      	str	r3, [r0, #0]
 800d308:	6880      	ldr	r0, [r0, #8]
 800d30a:	b110      	cbz	r0, 800d312 <_ZNSt10moneypunctIcLb1EED1Ev+0x12>
 800d30c:	6803      	ldr	r3, [r0, #0]
 800d30e:	685b      	ldr	r3, [r3, #4]
 800d310:	4798      	blx	r3
 800d312:	4620      	mov	r0, r4
 800d314:	f7fe ffc0 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d318:	4620      	mov	r0, r4
 800d31a:	bd10      	pop	{r4, pc}
 800d31c:	080309d4 	.word	0x080309d4

0800d320 <_ZNSt10moneypunctIcLb1EED0Ev>:
 800d320:	b510      	push	{r4, lr}
 800d322:	4604      	mov	r4, r0
 800d324:	f7ff ffec 	bl	800d300 <_ZNSt10moneypunctIcLb1EED1Ev>
 800d328:	4620      	mov	r0, r4
 800d32a:	f016 fdcf 	bl	8023ecc <_ZdlPv>
 800d32e:	4620      	mov	r0, r4
 800d330:	bd10      	pop	{r4, pc}
	...

0800d334 <_ZNSt10moneypunctIcLb0EED1Ev>:
 800d334:	4b06      	ldr	r3, [pc, #24]	; (800d350 <_ZNSt10moneypunctIcLb0EED1Ev+0x1c>)
 800d336:	b510      	push	{r4, lr}
 800d338:	4604      	mov	r4, r0
 800d33a:	6003      	str	r3, [r0, #0]
 800d33c:	6880      	ldr	r0, [r0, #8]
 800d33e:	b110      	cbz	r0, 800d346 <_ZNSt10moneypunctIcLb0EED1Ev+0x12>
 800d340:	6803      	ldr	r3, [r0, #0]
 800d342:	685b      	ldr	r3, [r3, #4]
 800d344:	4798      	blx	r3
 800d346:	4620      	mov	r0, r4
 800d348:	f7fe ffa6 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d34c:	4620      	mov	r0, r4
 800d34e:	bd10      	pop	{r4, pc}
 800d350:	08030a08 	.word	0x08030a08

0800d354 <_ZNSt10moneypunctIcLb0EED0Ev>:
 800d354:	b510      	push	{r4, lr}
 800d356:	4604      	mov	r4, r0
 800d358:	f7ff ffec 	bl	800d334 <_ZNSt10moneypunctIcLb0EED1Ev>
 800d35c:	4620      	mov	r0, r4
 800d35e:	f016 fdb5 	bl	8023ecc <_ZdlPv>
 800d362:	4620      	mov	r0, r4
 800d364:	bd10      	pop	{r4, pc}
	...

0800d368 <_ZNSt10moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc>:
 800d368:	b538      	push	{r3, r4, r5, lr}
 800d36a:	6884      	ldr	r4, [r0, #8]
 800d36c:	4605      	mov	r5, r0
 800d36e:	b9b4      	cbnz	r4, 800d39e <_ZNSt10moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x36>
 800d370:	2070      	movs	r0, #112	; 0x70
 800d372:	f7fe fde5 	bl	800bf40 <_Znwj>
 800d376:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800d37a:	e9c0 4405 	strd	r4, r4, [r0, #20]
 800d37e:	e9c0 4407 	strd	r4, r4, [r0, #28]
 800d382:	e9c0 4409 	strd	r4, r4, [r0, #36]	; 0x24
 800d386:	e9c0 440b 	strd	r4, r4, [r0, #44]	; 0x2c
 800d38a:	e9c0 440d 	strd	r4, r4, [r0, #52]	; 0x34
 800d38e:	4b15      	ldr	r3, [pc, #84]	; (800d3e4 <_ZNSt10moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x7c>)
 800d390:	6044      	str	r4, [r0, #4]
 800d392:	6003      	str	r3, [r0, #0]
 800d394:	7404      	strb	r4, [r0, #16]
 800d396:	63c4      	str	r4, [r0, #60]	; 0x3c
 800d398:	f880 406c 	strb.w	r4, [r0, #108]	; 0x6c
 800d39c:	60a8      	str	r0, [r5, #8]
 800d39e:	68ab      	ldr	r3, [r5, #8]
 800d3a0:	212e      	movs	r1, #46	; 0x2e
 800d3a2:	222c      	movs	r2, #44	; 0x2c
 800d3a4:	e9c3 1205 	strd	r1, r2, [r3, #20]
 800d3a8:	490f      	ldr	r1, [pc, #60]	; (800d3e8 <_ZNSt10moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x80>)
 800d3aa:	4a10      	ldr	r2, [pc, #64]	; (800d3ec <_ZNSt10moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x84>)
 800d3ac:	609a      	str	r2, [r3, #8]
 800d3ae:	2200      	movs	r2, #0
 800d3b0:	e9c3 1207 	strd	r1, r2, [r3, #28]
 800d3b4:	e9c3 1209 	strd	r1, r2, [r3, #36]	; 0x24
 800d3b8:	e9c3 120b 	strd	r1, r2, [r3, #44]	; 0x2c
 800d3bc:	60da      	str	r2, [r3, #12]
 800d3be:	635a      	str	r2, [r3, #52]	; 0x34
 800d3c0:	4a0b      	ldr	r2, [pc, #44]	; (800d3f0 <_ZNSt10moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x88>)
 800d3c2:	6810      	ldr	r0, [r2, #0]
 800d3c4:	6398      	str	r0, [r3, #56]	; 0x38
 800d3c6:	68ab      	ldr	r3, [r5, #8]
 800d3c8:	63d8      	str	r0, [r3, #60]	; 0x3c
 800d3ca:	4b0a      	ldr	r3, [pc, #40]	; (800d3f4 <_ZNSt10moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x8c>)
 800d3cc:	68aa      	ldr	r2, [r5, #8]
 800d3ce:	681b      	ldr	r3, [r3, #0]
 800d3d0:	3240      	adds	r2, #64	; 0x40
 800d3d2:	1e59      	subs	r1, r3, #1
 800d3d4:	330a      	adds	r3, #10
 800d3d6:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800d3da:	f842 0b04 	str.w	r0, [r2], #4
 800d3de:	4299      	cmp	r1, r3
 800d3e0:	d1f9      	bne.n	800d3d6 <_ZNSt10moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc+0x6e>
 800d3e2:	bd38      	pop	{r3, r4, r5, pc}
 800d3e4:	0802ea00 	.word	0x0802ea00
 800d3e8:	08033054 	.word	0x08033054
 800d3ec:	08032cb9 	.word	0x08032cb9
 800d3f0:	08031a20 	.word	0x08031a20
 800d3f4:	2000003c 	.word	0x2000003c

0800d3f8 <_ZNSt10moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc>:
 800d3f8:	b538      	push	{r3, r4, r5, lr}
 800d3fa:	6884      	ldr	r4, [r0, #8]
 800d3fc:	4605      	mov	r5, r0
 800d3fe:	b9b4      	cbnz	r4, 800d42e <_ZNSt10moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x36>
 800d400:	2070      	movs	r0, #112	; 0x70
 800d402:	f7fe fd9d 	bl	800bf40 <_Znwj>
 800d406:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800d40a:	e9c0 4405 	strd	r4, r4, [r0, #20]
 800d40e:	e9c0 4407 	strd	r4, r4, [r0, #28]
 800d412:	e9c0 4409 	strd	r4, r4, [r0, #36]	; 0x24
 800d416:	e9c0 440b 	strd	r4, r4, [r0, #44]	; 0x2c
 800d41a:	e9c0 440d 	strd	r4, r4, [r0, #52]	; 0x34
 800d41e:	4b15      	ldr	r3, [pc, #84]	; (800d474 <_ZNSt10moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x7c>)
 800d420:	6044      	str	r4, [r0, #4]
 800d422:	6003      	str	r3, [r0, #0]
 800d424:	7404      	strb	r4, [r0, #16]
 800d426:	63c4      	str	r4, [r0, #60]	; 0x3c
 800d428:	f880 406c 	strb.w	r4, [r0, #108]	; 0x6c
 800d42c:	60a8      	str	r0, [r5, #8]
 800d42e:	68ab      	ldr	r3, [r5, #8]
 800d430:	212e      	movs	r1, #46	; 0x2e
 800d432:	222c      	movs	r2, #44	; 0x2c
 800d434:	e9c3 1205 	strd	r1, r2, [r3, #20]
 800d438:	490f      	ldr	r1, [pc, #60]	; (800d478 <_ZNSt10moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x80>)
 800d43a:	4a10      	ldr	r2, [pc, #64]	; (800d47c <_ZNSt10moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x84>)
 800d43c:	609a      	str	r2, [r3, #8]
 800d43e:	2200      	movs	r2, #0
 800d440:	e9c3 1207 	strd	r1, r2, [r3, #28]
 800d444:	e9c3 1209 	strd	r1, r2, [r3, #36]	; 0x24
 800d448:	e9c3 120b 	strd	r1, r2, [r3, #44]	; 0x2c
 800d44c:	60da      	str	r2, [r3, #12]
 800d44e:	635a      	str	r2, [r3, #52]	; 0x34
 800d450:	4a0b      	ldr	r2, [pc, #44]	; (800d480 <_ZNSt10moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x88>)
 800d452:	6810      	ldr	r0, [r2, #0]
 800d454:	6398      	str	r0, [r3, #56]	; 0x38
 800d456:	68ab      	ldr	r3, [r5, #8]
 800d458:	63d8      	str	r0, [r3, #60]	; 0x3c
 800d45a:	4b0a      	ldr	r3, [pc, #40]	; (800d484 <_ZNSt10moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x8c>)
 800d45c:	68aa      	ldr	r2, [r5, #8]
 800d45e:	681b      	ldr	r3, [r3, #0]
 800d460:	3240      	adds	r2, #64	; 0x40
 800d462:	1e59      	subs	r1, r3, #1
 800d464:	330a      	adds	r3, #10
 800d466:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800d46a:	f842 0b04 	str.w	r0, [r2], #4
 800d46e:	4299      	cmp	r1, r3
 800d470:	d1f9      	bne.n	800d466 <_ZNSt10moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc+0x6e>
 800d472:	bd38      	pop	{r3, r4, r5, pc}
 800d474:	0802ea10 	.word	0x0802ea10
 800d478:	08033054 	.word	0x08033054
 800d47c:	08032cb9 	.word	0x08032cb9
 800d480:	08031a20 	.word	0x08031a20
 800d484:	2000003c 	.word	0x2000003c

0800d488 <_ZNSt10moneypunctIwLb1EED1Ev>:
 800d488:	4b06      	ldr	r3, [pc, #24]	; (800d4a4 <_ZNSt10moneypunctIwLb1EED1Ev+0x1c>)
 800d48a:	b510      	push	{r4, lr}
 800d48c:	4604      	mov	r4, r0
 800d48e:	6003      	str	r3, [r0, #0]
 800d490:	6880      	ldr	r0, [r0, #8]
 800d492:	b110      	cbz	r0, 800d49a <_ZNSt10moneypunctIwLb1EED1Ev+0x12>
 800d494:	6803      	ldr	r3, [r0, #0]
 800d496:	685b      	ldr	r3, [r3, #4]
 800d498:	4798      	blx	r3
 800d49a:	4620      	mov	r0, r4
 800d49c:	f7fe fefc 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d4a0:	4620      	mov	r0, r4
 800d4a2:	bd10      	pop	{r4, pc}
 800d4a4:	080311cc 	.word	0x080311cc

0800d4a8 <_ZNSt10moneypunctIwLb1EED0Ev>:
 800d4a8:	b510      	push	{r4, lr}
 800d4aa:	4604      	mov	r4, r0
 800d4ac:	f7ff ffec 	bl	800d488 <_ZNSt10moneypunctIwLb1EED1Ev>
 800d4b0:	4620      	mov	r0, r4
 800d4b2:	f016 fd0b 	bl	8023ecc <_ZdlPv>
 800d4b6:	4620      	mov	r0, r4
 800d4b8:	bd10      	pop	{r4, pc}
	...

0800d4bc <_ZNSt10moneypunctIwLb0EED1Ev>:
 800d4bc:	4b06      	ldr	r3, [pc, #24]	; (800d4d8 <_ZNSt10moneypunctIwLb0EED1Ev+0x1c>)
 800d4be:	b510      	push	{r4, lr}
 800d4c0:	4604      	mov	r4, r0
 800d4c2:	6003      	str	r3, [r0, #0]
 800d4c4:	6880      	ldr	r0, [r0, #8]
 800d4c6:	b110      	cbz	r0, 800d4ce <_ZNSt10moneypunctIwLb0EED1Ev+0x12>
 800d4c8:	6803      	ldr	r3, [r0, #0]
 800d4ca:	685b      	ldr	r3, [r3, #4]
 800d4cc:	4798      	blx	r3
 800d4ce:	4620      	mov	r0, r4
 800d4d0:	f7fe fee2 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d4d4:	4620      	mov	r0, r4
 800d4d6:	bd10      	pop	{r4, pc}
 800d4d8:	08031200 	.word	0x08031200

0800d4dc <_ZNSt10moneypunctIwLb0EED0Ev>:
 800d4dc:	b510      	push	{r4, lr}
 800d4de:	4604      	mov	r4, r0
 800d4e0:	f7ff ffec 	bl	800d4bc <_ZNSt10moneypunctIwLb0EED1Ev>
 800d4e4:	4620      	mov	r0, r4
 800d4e6:	f016 fcf1 	bl	8023ecc <_ZdlPv>
 800d4ea:	4620      	mov	r0, r4
 800d4ec:	bd10      	pop	{r4, pc}
	...

0800d4f0 <_ZNSt7__cxx118numpunctIcE22_M_initialize_numpunctEPi>:
 800d4f0:	b538      	push	{r3, r4, r5, lr}
 800d4f2:	6884      	ldr	r4, [r0, #8]
 800d4f4:	4605      	mov	r5, r0
 800d4f6:	b984      	cbnz	r4, 800d51a <_ZNSt7__cxx118numpunctIcE22_M_initialize_numpunctEPi+0x2a>
 800d4f8:	2068      	movs	r0, #104	; 0x68
 800d4fa:	f7fe fd21 	bl	800bf40 <_Znwj>
 800d4fe:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800d502:	e9c0 4405 	strd	r4, r4, [r0, #20]
 800d506:	e9c0 4407 	strd	r4, r4, [r0, #28]
 800d50a:	4b1a      	ldr	r3, [pc, #104]	; (800d574 <_ZNSt7__cxx118numpunctIcE22_M_initialize_numpunctEPi+0x84>)
 800d50c:	6044      	str	r4, [r0, #4]
 800d50e:	6003      	str	r3, [r0, #0]
 800d510:	7404      	strb	r4, [r0, #16]
 800d512:	8484      	strh	r4, [r0, #36]	; 0x24
 800d514:	f880 4064 	strb.w	r4, [r0, #100]	; 0x64
 800d518:	60a8      	str	r0, [r5, #8]
 800d51a:	68aa      	ldr	r2, [r5, #8]
 800d51c:	4b16      	ldr	r3, [pc, #88]	; (800d578 <_ZNSt7__cxx118numpunctIcE22_M_initialize_numpunctEPi+0x88>)
 800d51e:	6093      	str	r3, [r2, #8]
 800d520:	212e      	movs	r1, #46	; 0x2e
 800d522:	2300      	movs	r3, #0
 800d524:	f882 1024 	strb.w	r1, [r2, #36]	; 0x24
 800d528:	60d3      	str	r3, [r2, #12]
 800d52a:	7413      	strb	r3, [r2, #16]
 800d52c:	68aa      	ldr	r2, [r5, #8]
 800d52e:	212c      	movs	r1, #44	; 0x2c
 800d530:	f882 1025 	strb.w	r1, [r2, #37]	; 0x25
 800d534:	4a11      	ldr	r2, [pc, #68]	; (800d57c <_ZNSt7__cxx118numpunctIcE22_M_initialize_numpunctEPi+0x8c>)
 800d536:	6810      	ldr	r0, [r2, #0]
 800d538:	68aa      	ldr	r2, [r5, #8]
 800d53a:	5cc1      	ldrb	r1, [r0, r3]
 800d53c:	441a      	add	r2, r3
 800d53e:	3301      	adds	r3, #1
 800d540:	2b24      	cmp	r3, #36	; 0x24
 800d542:	f882 1026 	strb.w	r1, [r2, #38]	; 0x26
 800d546:	d1f7      	bne.n	800d538 <_ZNSt7__cxx118numpunctIcE22_M_initialize_numpunctEPi+0x48>
 800d548:	4b0d      	ldr	r3, [pc, #52]	; (800d580 <_ZNSt7__cxx118numpunctIcE22_M_initialize_numpunctEPi+0x90>)
 800d54a:	6818      	ldr	r0, [r3, #0]
 800d54c:	2300      	movs	r3, #0
 800d54e:	68aa      	ldr	r2, [r5, #8]
 800d550:	5cc1      	ldrb	r1, [r0, r3]
 800d552:	441a      	add	r2, r3
 800d554:	3301      	adds	r3, #1
 800d556:	2b1a      	cmp	r3, #26
 800d558:	f882 104a 	strb.w	r1, [r2, #74]	; 0x4a
 800d55c:	d1f7      	bne.n	800d54e <_ZNSt7__cxx118numpunctIcE22_M_initialize_numpunctEPi+0x5e>
 800d55e:	68ab      	ldr	r3, [r5, #8]
 800d560:	4a08      	ldr	r2, [pc, #32]	; (800d584 <_ZNSt7__cxx118numpunctIcE22_M_initialize_numpunctEPi+0x94>)
 800d562:	615a      	str	r2, [r3, #20]
 800d564:	2204      	movs	r2, #4
 800d566:	619a      	str	r2, [r3, #24]
 800d568:	4a07      	ldr	r2, [pc, #28]	; (800d588 <_ZNSt7__cxx118numpunctIcE22_M_initialize_numpunctEPi+0x98>)
 800d56a:	61da      	str	r2, [r3, #28]
 800d56c:	2205      	movs	r2, #5
 800d56e:	621a      	str	r2, [r3, #32]
 800d570:	bd38      	pop	{r3, r4, r5, pc}
 800d572:	bf00      	nop
 800d574:	0802ea58 	.word	0x0802ea58
 800d578:	08032cb9 	.word	0x08032cb9
 800d57c:	20000038 	.word	0x20000038
 800d580:	20000034 	.word	0x20000034
 800d584:	0802ea18 	.word	0x0802ea18
 800d588:	0802ea1d 	.word	0x0802ea1d

0800d58c <_ZNSt7__cxx118numpunctIcED1Ev>:
 800d58c:	4b06      	ldr	r3, [pc, #24]	; (800d5a8 <_ZNSt7__cxx118numpunctIcED1Ev+0x1c>)
 800d58e:	b510      	push	{r4, lr}
 800d590:	4604      	mov	r4, r0
 800d592:	6003      	str	r3, [r0, #0]
 800d594:	6880      	ldr	r0, [r0, #8]
 800d596:	b110      	cbz	r0, 800d59e <_ZNSt7__cxx118numpunctIcED1Ev+0x12>
 800d598:	6803      	ldr	r3, [r0, #0]
 800d59a:	685b      	ldr	r3, [r3, #4]
 800d59c:	4798      	blx	r3
 800d59e:	4620      	mov	r0, r4
 800d5a0:	f7fe fe7a 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d5a4:	4620      	mov	r0, r4
 800d5a6:	bd10      	pop	{r4, pc}
 800d5a8:	0802f8ac 	.word	0x0802f8ac

0800d5ac <_ZNSt7__cxx118numpunctIcED0Ev>:
 800d5ac:	b510      	push	{r4, lr}
 800d5ae:	4604      	mov	r4, r0
 800d5b0:	f7ff ffec 	bl	800d58c <_ZNSt7__cxx118numpunctIcED1Ev>
 800d5b4:	4620      	mov	r0, r4
 800d5b6:	f016 fc89 	bl	8023ecc <_ZdlPv>
 800d5ba:	4620      	mov	r0, r4
 800d5bc:	bd10      	pop	{r4, pc}
	...

0800d5c0 <_ZNSt7__cxx118numpunctIwE22_M_initialize_numpunctEPi>:
 800d5c0:	b538      	push	{r3, r4, r5, lr}
 800d5c2:	6884      	ldr	r4, [r0, #8]
 800d5c4:	4605      	mov	r5, r0
 800d5c6:	b994      	cbnz	r4, 800d5ee <_ZNSt7__cxx118numpunctIwE22_M_initialize_numpunctEPi+0x2e>
 800d5c8:	f44f 7094 	mov.w	r0, #296	; 0x128
 800d5cc:	f7fe fcb8 	bl	800bf40 <_Znwj>
 800d5d0:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800d5d4:	e9c0 4405 	strd	r4, r4, [r0, #20]
 800d5d8:	e9c0 4407 	strd	r4, r4, [r0, #28]
 800d5dc:	e9c0 4409 	strd	r4, r4, [r0, #36]	; 0x24
 800d5e0:	4b18      	ldr	r3, [pc, #96]	; (800d644 <_ZNSt7__cxx118numpunctIwE22_M_initialize_numpunctEPi+0x84>)
 800d5e2:	6044      	str	r4, [r0, #4]
 800d5e4:	6003      	str	r3, [r0, #0]
 800d5e6:	7404      	strb	r4, [r0, #16]
 800d5e8:	f880 4124 	strb.w	r4, [r0, #292]	; 0x124
 800d5ec:	60a8      	str	r0, [r5, #8]
 800d5ee:	68ab      	ldr	r3, [r5, #8]
 800d5f0:	4a15      	ldr	r2, [pc, #84]	; (800d648 <_ZNSt7__cxx118numpunctIwE22_M_initialize_numpunctEPi+0x88>)
 800d5f2:	609a      	str	r2, [r3, #8]
 800d5f4:	2200      	movs	r2, #0
 800d5f6:	212e      	movs	r1, #46	; 0x2e
 800d5f8:	60da      	str	r2, [r3, #12]
 800d5fa:	741a      	strb	r2, [r3, #16]
 800d5fc:	222c      	movs	r2, #44	; 0x2c
 800d5fe:	e9c3 1209 	strd	r1, r2, [r3, #36]	; 0x24
 800d602:	4a12      	ldr	r2, [pc, #72]	; (800d64c <_ZNSt7__cxx118numpunctIwE22_M_initialize_numpunctEPi+0x8c>)
 800d604:	6812      	ldr	r2, [r2, #0]
 800d606:	f103 002c 	add.w	r0, r3, #44	; 0x2c
 800d60a:	1e51      	subs	r1, r2, #1
 800d60c:	3223      	adds	r2, #35	; 0x23
 800d60e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800d612:	f840 4b04 	str.w	r4, [r0], #4
 800d616:	4291      	cmp	r1, r2
 800d618:	d1f9      	bne.n	800d60e <_ZNSt7__cxx118numpunctIwE22_M_initialize_numpunctEPi+0x4e>
 800d61a:	4a0d      	ldr	r2, [pc, #52]	; (800d650 <_ZNSt7__cxx118numpunctIwE22_M_initialize_numpunctEPi+0x90>)
 800d61c:	6812      	ldr	r2, [r2, #0]
 800d61e:	f103 00bc 	add.w	r0, r3, #188	; 0xbc
 800d622:	1e51      	subs	r1, r2, #1
 800d624:	3219      	adds	r2, #25
 800d626:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800d62a:	f840 4b04 	str.w	r4, [r0], #4
 800d62e:	4291      	cmp	r1, r2
 800d630:	d1f9      	bne.n	800d626 <_ZNSt7__cxx118numpunctIwE22_M_initialize_numpunctEPi+0x66>
 800d632:	4a08      	ldr	r2, [pc, #32]	; (800d654 <_ZNSt7__cxx118numpunctIwE22_M_initialize_numpunctEPi+0x94>)
 800d634:	615a      	str	r2, [r3, #20]
 800d636:	2204      	movs	r2, #4
 800d638:	619a      	str	r2, [r3, #24]
 800d63a:	4a07      	ldr	r2, [pc, #28]	; (800d658 <_ZNSt7__cxx118numpunctIwE22_M_initialize_numpunctEPi+0x98>)
 800d63c:	61da      	str	r2, [r3, #28]
 800d63e:	2205      	movs	r2, #5
 800d640:	621a      	str	r2, [r3, #32]
 800d642:	bd38      	pop	{r3, r4, r5, pc}
 800d644:	0802ea68 	.word	0x0802ea68
 800d648:	08032cb9 	.word	0x08032cb9
 800d64c:	20000038 	.word	0x20000038
 800d650:	20000034 	.word	0x20000034
 800d654:	0802ea24 	.word	0x0802ea24
 800d658:	0802ea38 	.word	0x0802ea38

0800d65c <_ZNSt7__cxx118numpunctIwED1Ev>:
 800d65c:	4b06      	ldr	r3, [pc, #24]	; (800d678 <_ZNSt7__cxx118numpunctIwED1Ev+0x1c>)
 800d65e:	b510      	push	{r4, lr}
 800d660:	4604      	mov	r4, r0
 800d662:	6003      	str	r3, [r0, #0]
 800d664:	6880      	ldr	r0, [r0, #8]
 800d666:	b110      	cbz	r0, 800d66e <_ZNSt7__cxx118numpunctIwED1Ev+0x12>
 800d668:	6803      	ldr	r3, [r0, #0]
 800d66a:	685b      	ldr	r3, [r3, #4]
 800d66c:	4798      	blx	r3
 800d66e:	4620      	mov	r0, r4
 800d670:	f7fe fe12 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d674:	4620      	mov	r0, r4
 800d676:	bd10      	pop	{r4, pc}
 800d678:	08030384 	.word	0x08030384

0800d67c <_ZNSt7__cxx118numpunctIwED0Ev>:
 800d67c:	b510      	push	{r4, lr}
 800d67e:	4604      	mov	r4, r0
 800d680:	f7ff ffec 	bl	800d65c <_ZNSt7__cxx118numpunctIwED1Ev>
 800d684:	4620      	mov	r0, r4
 800d686:	f016 fc21 	bl	8023ecc <_ZdlPv>
 800d68a:	4620      	mov	r0, r4
 800d68c:	bd10      	pop	{r4, pc}
	...

0800d690 <_ZNSt16__numpunct_cacheIcED1Ev>:
 800d690:	4b0b      	ldr	r3, [pc, #44]	; (800d6c0 <_ZNSt16__numpunct_cacheIcED1Ev+0x30>)
 800d692:	b510      	push	{r4, lr}
 800d694:	6003      	str	r3, [r0, #0]
 800d696:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 800d69a:	4604      	mov	r4, r0
 800d69c:	b15b      	cbz	r3, 800d6b6 <_ZNSt16__numpunct_cacheIcED1Ev+0x26>
 800d69e:	6880      	ldr	r0, [r0, #8]
 800d6a0:	b108      	cbz	r0, 800d6a6 <_ZNSt16__numpunct_cacheIcED1Ev+0x16>
 800d6a2:	f016 fc15 	bl	8023ed0 <_ZdaPv>
 800d6a6:	6960      	ldr	r0, [r4, #20]
 800d6a8:	b108      	cbz	r0, 800d6ae <_ZNSt16__numpunct_cacheIcED1Ev+0x1e>
 800d6aa:	f016 fc11 	bl	8023ed0 <_ZdaPv>
 800d6ae:	69e0      	ldr	r0, [r4, #28]
 800d6b0:	b108      	cbz	r0, 800d6b6 <_ZNSt16__numpunct_cacheIcED1Ev+0x26>
 800d6b2:	f016 fc0d 	bl	8023ed0 <_ZdaPv>
 800d6b6:	4620      	mov	r0, r4
 800d6b8:	f7fe fdee 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d6bc:	4620      	mov	r0, r4
 800d6be:	bd10      	pop	{r4, pc}
 800d6c0:	0802ea58 	.word	0x0802ea58

0800d6c4 <_ZNSt16__numpunct_cacheIcED0Ev>:
 800d6c4:	b510      	push	{r4, lr}
 800d6c6:	4604      	mov	r4, r0
 800d6c8:	f7ff ffe2 	bl	800d690 <_ZNSt16__numpunct_cacheIcED1Ev>
 800d6cc:	4620      	mov	r0, r4
 800d6ce:	f016 fbfd 	bl	8023ecc <_ZdlPv>
 800d6d2:	4620      	mov	r0, r4
 800d6d4:	bd10      	pop	{r4, pc}
	...

0800d6d8 <_ZNSt16__numpunct_cacheIwED1Ev>:
 800d6d8:	4b0b      	ldr	r3, [pc, #44]	; (800d708 <_ZNSt16__numpunct_cacheIwED1Ev+0x30>)
 800d6da:	b510      	push	{r4, lr}
 800d6dc:	6003      	str	r3, [r0, #0]
 800d6de:	f890 3124 	ldrb.w	r3, [r0, #292]	; 0x124
 800d6e2:	4604      	mov	r4, r0
 800d6e4:	b15b      	cbz	r3, 800d6fe <_ZNSt16__numpunct_cacheIwED1Ev+0x26>
 800d6e6:	6880      	ldr	r0, [r0, #8]
 800d6e8:	b108      	cbz	r0, 800d6ee <_ZNSt16__numpunct_cacheIwED1Ev+0x16>
 800d6ea:	f016 fbf1 	bl	8023ed0 <_ZdaPv>
 800d6ee:	6960      	ldr	r0, [r4, #20]
 800d6f0:	b108      	cbz	r0, 800d6f6 <_ZNSt16__numpunct_cacheIwED1Ev+0x1e>
 800d6f2:	f016 fbed 	bl	8023ed0 <_ZdaPv>
 800d6f6:	69e0      	ldr	r0, [r4, #28]
 800d6f8:	b108      	cbz	r0, 800d6fe <_ZNSt16__numpunct_cacheIwED1Ev+0x26>
 800d6fa:	f016 fbe9 	bl	8023ed0 <_ZdaPv>
 800d6fe:	4620      	mov	r0, r4
 800d700:	f7fe fdca 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d704:	4620      	mov	r0, r4
 800d706:	bd10      	pop	{r4, pc}
 800d708:	0802ea68 	.word	0x0802ea68

0800d70c <_ZNSt16__numpunct_cacheIwED0Ev>:
 800d70c:	b510      	push	{r4, lr}
 800d70e:	4604      	mov	r4, r0
 800d710:	f7ff ffe2 	bl	800d6d8 <_ZNSt16__numpunct_cacheIwED1Ev>
 800d714:	4620      	mov	r0, r4
 800d716:	f016 fbd9 	bl	8023ecc <_ZdlPv>
 800d71a:	4620      	mov	r0, r4
 800d71c:	bd10      	pop	{r4, pc}
	...

0800d720 <_ZNSt8numpunctIcE22_M_initialize_numpunctEPi>:
 800d720:	b538      	push	{r3, r4, r5, lr}
 800d722:	6884      	ldr	r4, [r0, #8]
 800d724:	4605      	mov	r5, r0
 800d726:	b984      	cbnz	r4, 800d74a <_ZNSt8numpunctIcE22_M_initialize_numpunctEPi+0x2a>
 800d728:	2068      	movs	r0, #104	; 0x68
 800d72a:	f7fe fc09 	bl	800bf40 <_Znwj>
 800d72e:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800d732:	e9c0 4405 	strd	r4, r4, [r0, #20]
 800d736:	e9c0 4407 	strd	r4, r4, [r0, #28]
 800d73a:	4b1a      	ldr	r3, [pc, #104]	; (800d7a4 <_ZNSt8numpunctIcE22_M_initialize_numpunctEPi+0x84>)
 800d73c:	6044      	str	r4, [r0, #4]
 800d73e:	6003      	str	r3, [r0, #0]
 800d740:	7404      	strb	r4, [r0, #16]
 800d742:	8484      	strh	r4, [r0, #36]	; 0x24
 800d744:	f880 4064 	strb.w	r4, [r0, #100]	; 0x64
 800d748:	60a8      	str	r0, [r5, #8]
 800d74a:	68aa      	ldr	r2, [r5, #8]
 800d74c:	4b16      	ldr	r3, [pc, #88]	; (800d7a8 <_ZNSt8numpunctIcE22_M_initialize_numpunctEPi+0x88>)
 800d74e:	6093      	str	r3, [r2, #8]
 800d750:	212e      	movs	r1, #46	; 0x2e
 800d752:	2300      	movs	r3, #0
 800d754:	f882 1024 	strb.w	r1, [r2, #36]	; 0x24
 800d758:	60d3      	str	r3, [r2, #12]
 800d75a:	7413      	strb	r3, [r2, #16]
 800d75c:	68aa      	ldr	r2, [r5, #8]
 800d75e:	212c      	movs	r1, #44	; 0x2c
 800d760:	f882 1025 	strb.w	r1, [r2, #37]	; 0x25
 800d764:	4a11      	ldr	r2, [pc, #68]	; (800d7ac <_ZNSt8numpunctIcE22_M_initialize_numpunctEPi+0x8c>)
 800d766:	6810      	ldr	r0, [r2, #0]
 800d768:	68aa      	ldr	r2, [r5, #8]
 800d76a:	5cc1      	ldrb	r1, [r0, r3]
 800d76c:	441a      	add	r2, r3
 800d76e:	3301      	adds	r3, #1
 800d770:	2b24      	cmp	r3, #36	; 0x24
 800d772:	f882 1026 	strb.w	r1, [r2, #38]	; 0x26
 800d776:	d1f7      	bne.n	800d768 <_ZNSt8numpunctIcE22_M_initialize_numpunctEPi+0x48>
 800d778:	4b0d      	ldr	r3, [pc, #52]	; (800d7b0 <_ZNSt8numpunctIcE22_M_initialize_numpunctEPi+0x90>)
 800d77a:	6818      	ldr	r0, [r3, #0]
 800d77c:	2300      	movs	r3, #0
 800d77e:	68aa      	ldr	r2, [r5, #8]
 800d780:	5cc1      	ldrb	r1, [r0, r3]
 800d782:	441a      	add	r2, r3
 800d784:	3301      	adds	r3, #1
 800d786:	2b1a      	cmp	r3, #26
 800d788:	f882 104a 	strb.w	r1, [r2, #74]	; 0x4a
 800d78c:	d1f7      	bne.n	800d77e <_ZNSt8numpunctIcE22_M_initialize_numpunctEPi+0x5e>
 800d78e:	68ab      	ldr	r3, [r5, #8]
 800d790:	4a08      	ldr	r2, [pc, #32]	; (800d7b4 <_ZNSt8numpunctIcE22_M_initialize_numpunctEPi+0x94>)
 800d792:	615a      	str	r2, [r3, #20]
 800d794:	2204      	movs	r2, #4
 800d796:	619a      	str	r2, [r3, #24]
 800d798:	4a07      	ldr	r2, [pc, #28]	; (800d7b8 <_ZNSt8numpunctIcE22_M_initialize_numpunctEPi+0x98>)
 800d79a:	61da      	str	r2, [r3, #28]
 800d79c:	2205      	movs	r2, #5
 800d79e:	621a      	str	r2, [r3, #32]
 800d7a0:	bd38      	pop	{r3, r4, r5, pc}
 800d7a2:	bf00      	nop
 800d7a4:	0802ea58 	.word	0x0802ea58
 800d7a8:	08032cb9 	.word	0x08032cb9
 800d7ac:	20000038 	.word	0x20000038
 800d7b0:	20000034 	.word	0x20000034
 800d7b4:	0802ea18 	.word	0x0802ea18
 800d7b8:	0802ea1d 	.word	0x0802ea1d

0800d7bc <_ZNSt8numpunctIcED1Ev>:
 800d7bc:	4b06      	ldr	r3, [pc, #24]	; (800d7d8 <_ZNSt8numpunctIcED1Ev+0x1c>)
 800d7be:	b510      	push	{r4, lr}
 800d7c0:	4604      	mov	r4, r0
 800d7c2:	6003      	str	r3, [r0, #0]
 800d7c4:	6880      	ldr	r0, [r0, #8]
 800d7c6:	b110      	cbz	r0, 800d7ce <_ZNSt8numpunctIcED1Ev+0x12>
 800d7c8:	6803      	ldr	r3, [r0, #0]
 800d7ca:	685b      	ldr	r3, [r3, #4]
 800d7cc:	4798      	blx	r3
 800d7ce:	4620      	mov	r0, r4
 800d7d0:	f7fe fd62 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d7d4:	4620      	mov	r0, r4
 800d7d6:	bd10      	pop	{r4, pc}
 800d7d8:	08030924 	.word	0x08030924

0800d7dc <_ZNSt8numpunctIcED0Ev>:
 800d7dc:	b510      	push	{r4, lr}
 800d7de:	4604      	mov	r4, r0
 800d7e0:	f7ff ffec 	bl	800d7bc <_ZNSt8numpunctIcED1Ev>
 800d7e4:	4620      	mov	r0, r4
 800d7e6:	f016 fb71 	bl	8023ecc <_ZdlPv>
 800d7ea:	4620      	mov	r0, r4
 800d7ec:	bd10      	pop	{r4, pc}
	...

0800d7f0 <_ZNSt8numpunctIwE22_M_initialize_numpunctEPi>:
 800d7f0:	b538      	push	{r3, r4, r5, lr}
 800d7f2:	6884      	ldr	r4, [r0, #8]
 800d7f4:	4605      	mov	r5, r0
 800d7f6:	b994      	cbnz	r4, 800d81e <_ZNSt8numpunctIwE22_M_initialize_numpunctEPi+0x2e>
 800d7f8:	f44f 7094 	mov.w	r0, #296	; 0x128
 800d7fc:	f7fe fba0 	bl	800bf40 <_Znwj>
 800d800:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800d804:	e9c0 4405 	strd	r4, r4, [r0, #20]
 800d808:	e9c0 4407 	strd	r4, r4, [r0, #28]
 800d80c:	e9c0 4409 	strd	r4, r4, [r0, #36]	; 0x24
 800d810:	4b18      	ldr	r3, [pc, #96]	; (800d874 <_ZNSt8numpunctIwE22_M_initialize_numpunctEPi+0x84>)
 800d812:	6044      	str	r4, [r0, #4]
 800d814:	6003      	str	r3, [r0, #0]
 800d816:	7404      	strb	r4, [r0, #16]
 800d818:	f880 4124 	strb.w	r4, [r0, #292]	; 0x124
 800d81c:	60a8      	str	r0, [r5, #8]
 800d81e:	68ab      	ldr	r3, [r5, #8]
 800d820:	4a15      	ldr	r2, [pc, #84]	; (800d878 <_ZNSt8numpunctIwE22_M_initialize_numpunctEPi+0x88>)
 800d822:	609a      	str	r2, [r3, #8]
 800d824:	2200      	movs	r2, #0
 800d826:	212e      	movs	r1, #46	; 0x2e
 800d828:	60da      	str	r2, [r3, #12]
 800d82a:	741a      	strb	r2, [r3, #16]
 800d82c:	222c      	movs	r2, #44	; 0x2c
 800d82e:	e9c3 1209 	strd	r1, r2, [r3, #36]	; 0x24
 800d832:	4a12      	ldr	r2, [pc, #72]	; (800d87c <_ZNSt8numpunctIwE22_M_initialize_numpunctEPi+0x8c>)
 800d834:	6812      	ldr	r2, [r2, #0]
 800d836:	f103 002c 	add.w	r0, r3, #44	; 0x2c
 800d83a:	1e51      	subs	r1, r2, #1
 800d83c:	3223      	adds	r2, #35	; 0x23
 800d83e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800d842:	f840 4b04 	str.w	r4, [r0], #4
 800d846:	4291      	cmp	r1, r2
 800d848:	d1f9      	bne.n	800d83e <_ZNSt8numpunctIwE22_M_initialize_numpunctEPi+0x4e>
 800d84a:	4a0d      	ldr	r2, [pc, #52]	; (800d880 <_ZNSt8numpunctIwE22_M_initialize_numpunctEPi+0x90>)
 800d84c:	6812      	ldr	r2, [r2, #0]
 800d84e:	f103 00bc 	add.w	r0, r3, #188	; 0xbc
 800d852:	1e51      	subs	r1, r2, #1
 800d854:	3219      	adds	r2, #25
 800d856:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800d85a:	f840 4b04 	str.w	r4, [r0], #4
 800d85e:	4291      	cmp	r1, r2
 800d860:	d1f9      	bne.n	800d856 <_ZNSt8numpunctIwE22_M_initialize_numpunctEPi+0x66>
 800d862:	4a08      	ldr	r2, [pc, #32]	; (800d884 <_ZNSt8numpunctIwE22_M_initialize_numpunctEPi+0x94>)
 800d864:	615a      	str	r2, [r3, #20]
 800d866:	2204      	movs	r2, #4
 800d868:	619a      	str	r2, [r3, #24]
 800d86a:	4a07      	ldr	r2, [pc, #28]	; (800d888 <_ZNSt8numpunctIwE22_M_initialize_numpunctEPi+0x98>)
 800d86c:	61da      	str	r2, [r3, #28]
 800d86e:	2205      	movs	r2, #5
 800d870:	621a      	str	r2, [r3, #32]
 800d872:	bd38      	pop	{r3, r4, r5, pc}
 800d874:	0802ea68 	.word	0x0802ea68
 800d878:	08032cb9 	.word	0x08032cb9
 800d87c:	20000038 	.word	0x20000038
 800d880:	20000034 	.word	0x20000034
 800d884:	0802ea24 	.word	0x0802ea24
 800d888:	0802ea38 	.word	0x0802ea38

0800d88c <_ZNSt8numpunctIwED1Ev>:
 800d88c:	4b06      	ldr	r3, [pc, #24]	; (800d8a8 <_ZNSt8numpunctIwED1Ev+0x1c>)
 800d88e:	b510      	push	{r4, lr}
 800d890:	4604      	mov	r4, r0
 800d892:	6003      	str	r3, [r0, #0]
 800d894:	6880      	ldr	r0, [r0, #8]
 800d896:	b110      	cbz	r0, 800d89e <_ZNSt8numpunctIwED1Ev+0x12>
 800d898:	6803      	ldr	r3, [r0, #0]
 800d89a:	685b      	ldr	r3, [r3, #4]
 800d89c:	4798      	blx	r3
 800d89e:	4620      	mov	r0, r4
 800d8a0:	f7fe fcfa 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800d8a4:	4620      	mov	r0, r4
 800d8a6:	bd10      	pop	{r4, pc}
 800d8a8:	0803111c 	.word	0x0803111c

0800d8ac <_ZNSt8numpunctIwED0Ev>:
 800d8ac:	b510      	push	{r4, lr}
 800d8ae:	4604      	mov	r4, r0
 800d8b0:	f7ff ffec 	bl	800d88c <_ZNSt8numpunctIwED1Ev>
 800d8b4:	4620      	mov	r0, r4
 800d8b6:	f016 fb09 	bl	8023ecc <_ZdlPv>
 800d8ba:	4620      	mov	r0, r4
 800d8bc:	bd10      	pop	{r4, pc}

0800d8be <_ZNKSt7codecvtIDsc10_mbstate_tE10do_unshiftERS0_PcS3_RS3_>:
 800d8be:	9b00      	ldr	r3, [sp, #0]
 800d8c0:	2003      	movs	r0, #3
 800d8c2:	601a      	str	r2, [r3, #0]
 800d8c4:	4770      	bx	lr

0800d8c6 <_ZNKSt19__codecvt_utf8_baseIDiE11do_encodingEv>:
 800d8c6:	2000      	movs	r0, #0
 800d8c8:	4770      	bx	lr

0800d8ca <_ZNKSt19__codecvt_utf8_baseIDiE16do_always_noconvEv>:
 800d8ca:	2000      	movs	r0, #0
 800d8cc:	4770      	bx	lr

0800d8ce <_ZNKSt7codecvtIDiDu10_mbstate_tE13do_max_lengthEv>:
 800d8ce:	2004      	movs	r0, #4
 800d8d0:	4770      	bx	lr

0800d8d2 <_ZNKSt7codecvtIDic10_mbstate_tE10do_unshiftERS0_PcS3_RS3_>:
 800d8d2:	9b00      	ldr	r3, [sp, #0]
 800d8d4:	2003      	movs	r0, #3
 800d8d6:	601a      	str	r2, [r3, #0]
 800d8d8:	4770      	bx	lr

0800d8da <_ZNKSt7codecvtIDsDu10_mbstate_tE10do_unshiftERS0_PDuS3_RS3_>:
 800d8da:	9b00      	ldr	r3, [sp, #0]
 800d8dc:	2003      	movs	r0, #3
 800d8de:	601a      	str	r2, [r3, #0]
 800d8e0:	4770      	bx	lr

0800d8e2 <_ZNKSt7codecvtIDiDu10_mbstate_tE10do_unshiftERS0_PDuS3_RS3_>:
 800d8e2:	9b00      	ldr	r3, [sp, #0]
 800d8e4:	2003      	movs	r0, #3
 800d8e6:	601a      	str	r2, [r3, #0]
 800d8e8:	4770      	bx	lr

0800d8ea <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm>:
 800d8ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d8ec:	4605      	mov	r5, r0
 800d8ee:	e9d0 2000 	ldrd	r2, r0, [r0]
 800d8f2:	1a80      	subs	r0, r0, r2
 800d8f4:	d065      	beq.n	800d9c2 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0xd8>
 800d8f6:	f992 4000 	ldrsb.w	r4, [r2]
 800d8fa:	7813      	ldrb	r3, [r2, #0]
 800d8fc:	2c00      	cmp	r4, #0
 800d8fe:	db03      	blt.n	800d908 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x1e>
 800d900:	3201      	adds	r2, #1
 800d902:	602a      	str	r2, [r5, #0]
 800d904:	4618      	mov	r0, r3
 800d906:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d908:	2bc1      	cmp	r3, #193	; 0xc1
 800d90a:	d93b      	bls.n	800d984 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800d90c:	2bdf      	cmp	r3, #223	; 0xdf
 800d90e:	d80f      	bhi.n	800d930 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x46>
 800d910:	2801      	cmp	r0, #1
 800d912:	d056      	beq.n	800d9c2 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0xd8>
 800d914:	7850      	ldrb	r0, [r2, #1]
 800d916:	f000 04c0 	and.w	r4, r0, #192	; 0xc0
 800d91a:	2c80      	cmp	r4, #128	; 0x80
 800d91c:	d132      	bne.n	800d984 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800d91e:	eb00 1083 	add.w	r0, r0, r3, lsl #6
 800d922:	f5a0 5042 	sub.w	r0, r0, #12416	; 0x3080
 800d926:	4281      	cmp	r1, r0
 800d928:	d3ed      	bcc.n	800d906 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x1c>
 800d92a:	3202      	adds	r2, #2
 800d92c:	602a      	str	r2, [r5, #0]
 800d92e:	e7ea      	b.n	800d906 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x1c>
 800d930:	2bef      	cmp	r3, #239	; 0xef
 800d932:	d81a      	bhi.n	800d96a <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x80>
 800d934:	2802      	cmp	r0, #2
 800d936:	d944      	bls.n	800d9c2 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0xd8>
 800d938:	7854      	ldrb	r4, [r2, #1]
 800d93a:	f004 00c0 	and.w	r0, r4, #192	; 0xc0
 800d93e:	2880      	cmp	r0, #128	; 0x80
 800d940:	d120      	bne.n	800d984 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800d942:	2be0      	cmp	r3, #224	; 0xe0
 800d944:	d101      	bne.n	800d94a <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x60>
 800d946:	2c9f      	cmp	r4, #159	; 0x9f
 800d948:	d91c      	bls.n	800d984 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800d94a:	7890      	ldrb	r0, [r2, #2]
 800d94c:	f000 06c0 	and.w	r6, r0, #192	; 0xc0
 800d950:	2e80      	cmp	r6, #128	; 0x80
 800d952:	d117      	bne.n	800d984 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800d954:	01a4      	lsls	r4, r4, #6
 800d956:	eb04 3303 	add.w	r3, r4, r3, lsl #12
 800d95a:	4403      	add	r3, r0
 800d95c:	f5a3 2062 	sub.w	r0, r3, #925696	; 0xe2000
 800d960:	3880      	subs	r0, #128	; 0x80
 800d962:	4281      	cmp	r1, r0
 800d964:	d3cf      	bcc.n	800d906 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x1c>
 800d966:	3203      	adds	r2, #3
 800d968:	e7e0      	b.n	800d92c <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x42>
 800d96a:	2bf4      	cmp	r3, #244	; 0xf4
 800d96c:	d80a      	bhi.n	800d984 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800d96e:	2803      	cmp	r0, #3
 800d970:	d927      	bls.n	800d9c2 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0xd8>
 800d972:	7854      	ldrb	r4, [r2, #1]
 800d974:	f004 00c0 	and.w	r0, r4, #192	; 0xc0
 800d978:	2880      	cmp	r0, #128	; 0x80
 800d97a:	d103      	bne.n	800d984 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800d97c:	2bf0      	cmp	r3, #240	; 0xf0
 800d97e:	d104      	bne.n	800d98a <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0xa0>
 800d980:	2c8f      	cmp	r4, #143	; 0x8f
 800d982:	d806      	bhi.n	800d992 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0xa8>
 800d984:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d988:	e7bd      	b.n	800d906 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x1c>
 800d98a:	2bf4      	cmp	r3, #244	; 0xf4
 800d98c:	d101      	bne.n	800d992 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0xa8>
 800d98e:	2c8f      	cmp	r4, #143	; 0x8f
 800d990:	d8f8      	bhi.n	800d984 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800d992:	7896      	ldrb	r6, [r2, #2]
 800d994:	f006 00c0 	and.w	r0, r6, #192	; 0xc0
 800d998:	2880      	cmp	r0, #128	; 0x80
 800d99a:	d1f3      	bne.n	800d984 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800d99c:	78d0      	ldrb	r0, [r2, #3]
 800d99e:	f000 07c0 	and.w	r7, r0, #192	; 0xc0
 800d9a2:	2f80      	cmp	r7, #128	; 0x80
 800d9a4:	d1ee      	bne.n	800d984 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800d9a6:	0324      	lsls	r4, r4, #12
 800d9a8:	eb04 4383 	add.w	r3, r4, r3, lsl #18
 800d9ac:	eb03 1386 	add.w	r3, r3, r6, lsl #6
 800d9b0:	4403      	add	r3, r0
 800d9b2:	f1a3 7072 	sub.w	r0, r3, #63438848	; 0x3c80000
 800d9b6:	f5a0 5002 	sub.w	r0, r0, #8320	; 0x2080
 800d9ba:	4288      	cmp	r0, r1
 800d9bc:	d8a3      	bhi.n	800d906 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x1c>
 800d9be:	3204      	adds	r2, #4
 800d9c0:	e7b4      	b.n	800d92c <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x42>
 800d9c2:	f06f 0001 	mvn.w	r0, #1
 800d9c6:	e79e      	b.n	800d906 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm+0x1c>

0800d9c8 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm>:
 800d9c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d9ca:	4605      	mov	r5, r0
 800d9cc:	e9d0 2000 	ldrd	r2, r0, [r0]
 800d9d0:	1a80      	subs	r0, r0, r2
 800d9d2:	d065      	beq.n	800daa0 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0xd8>
 800d9d4:	f992 4000 	ldrsb.w	r4, [r2]
 800d9d8:	7813      	ldrb	r3, [r2, #0]
 800d9da:	2c00      	cmp	r4, #0
 800d9dc:	db03      	blt.n	800d9e6 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x1e>
 800d9de:	3201      	adds	r2, #1
 800d9e0:	602a      	str	r2, [r5, #0]
 800d9e2:	4618      	mov	r0, r3
 800d9e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d9e6:	2bc1      	cmp	r3, #193	; 0xc1
 800d9e8:	d93b      	bls.n	800da62 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800d9ea:	2bdf      	cmp	r3, #223	; 0xdf
 800d9ec:	d80f      	bhi.n	800da0e <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x46>
 800d9ee:	2801      	cmp	r0, #1
 800d9f0:	d056      	beq.n	800daa0 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0xd8>
 800d9f2:	7850      	ldrb	r0, [r2, #1]
 800d9f4:	f000 04c0 	and.w	r4, r0, #192	; 0xc0
 800d9f8:	2c80      	cmp	r4, #128	; 0x80
 800d9fa:	d132      	bne.n	800da62 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800d9fc:	eb00 1083 	add.w	r0, r0, r3, lsl #6
 800da00:	f5a0 5042 	sub.w	r0, r0, #12416	; 0x3080
 800da04:	4281      	cmp	r1, r0
 800da06:	d3ed      	bcc.n	800d9e4 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x1c>
 800da08:	3202      	adds	r2, #2
 800da0a:	602a      	str	r2, [r5, #0]
 800da0c:	e7ea      	b.n	800d9e4 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x1c>
 800da0e:	2bef      	cmp	r3, #239	; 0xef
 800da10:	d81a      	bhi.n	800da48 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x80>
 800da12:	2802      	cmp	r0, #2
 800da14:	d944      	bls.n	800daa0 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0xd8>
 800da16:	7854      	ldrb	r4, [r2, #1]
 800da18:	f004 00c0 	and.w	r0, r4, #192	; 0xc0
 800da1c:	2880      	cmp	r0, #128	; 0x80
 800da1e:	d120      	bne.n	800da62 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800da20:	2be0      	cmp	r3, #224	; 0xe0
 800da22:	d101      	bne.n	800da28 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x60>
 800da24:	2c9f      	cmp	r4, #159	; 0x9f
 800da26:	d91c      	bls.n	800da62 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800da28:	7890      	ldrb	r0, [r2, #2]
 800da2a:	f000 06c0 	and.w	r6, r0, #192	; 0xc0
 800da2e:	2e80      	cmp	r6, #128	; 0x80
 800da30:	d117      	bne.n	800da62 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800da32:	01a4      	lsls	r4, r4, #6
 800da34:	eb04 3303 	add.w	r3, r4, r3, lsl #12
 800da38:	4403      	add	r3, r0
 800da3a:	f5a3 2062 	sub.w	r0, r3, #925696	; 0xe2000
 800da3e:	3880      	subs	r0, #128	; 0x80
 800da40:	4281      	cmp	r1, r0
 800da42:	d3cf      	bcc.n	800d9e4 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x1c>
 800da44:	3203      	adds	r2, #3
 800da46:	e7e0      	b.n	800da0a <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x42>
 800da48:	2bf4      	cmp	r3, #244	; 0xf4
 800da4a:	d80a      	bhi.n	800da62 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800da4c:	2803      	cmp	r0, #3
 800da4e:	d927      	bls.n	800daa0 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0xd8>
 800da50:	7854      	ldrb	r4, [r2, #1]
 800da52:	f004 00c0 	and.w	r0, r4, #192	; 0xc0
 800da56:	2880      	cmp	r0, #128	; 0x80
 800da58:	d103      	bne.n	800da62 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800da5a:	2bf0      	cmp	r3, #240	; 0xf0
 800da5c:	d104      	bne.n	800da68 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0xa0>
 800da5e:	2c8f      	cmp	r4, #143	; 0x8f
 800da60:	d806      	bhi.n	800da70 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0xa8>
 800da62:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800da66:	e7bd      	b.n	800d9e4 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x1c>
 800da68:	2bf4      	cmp	r3, #244	; 0xf4
 800da6a:	d101      	bne.n	800da70 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0xa8>
 800da6c:	2c8f      	cmp	r4, #143	; 0x8f
 800da6e:	d8f8      	bhi.n	800da62 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800da70:	7896      	ldrb	r6, [r2, #2]
 800da72:	f006 00c0 	and.w	r0, r6, #192	; 0xc0
 800da76:	2880      	cmp	r0, #128	; 0x80
 800da78:	d1f3      	bne.n	800da62 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800da7a:	78d0      	ldrb	r0, [r2, #3]
 800da7c:	f000 07c0 	and.w	r7, r0, #192	; 0xc0
 800da80:	2f80      	cmp	r7, #128	; 0x80
 800da82:	d1ee      	bne.n	800da62 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x9a>
 800da84:	0324      	lsls	r4, r4, #12
 800da86:	eb04 4383 	add.w	r3, r4, r3, lsl #18
 800da8a:	eb03 1386 	add.w	r3, r3, r6, lsl #6
 800da8e:	4403      	add	r3, r0
 800da90:	f1a3 7072 	sub.w	r0, r3, #63438848	; 0x3c80000
 800da94:	f5a0 5002 	sub.w	r0, r0, #8320	; 0x2080
 800da98:	4288      	cmp	r0, r1
 800da9a:	d8a3      	bhi.n	800d9e4 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x1c>
 800da9c:	3204      	adds	r2, #4
 800da9e:	e7b4      	b.n	800da0a <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x42>
 800daa0:	f06f 0001 	mvn.w	r0, #1
 800daa4:	e79e      	b.n	800d9e4 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm+0x1c>

0800daa6 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi>:
 800daa6:	297f      	cmp	r1, #127	; 0x7f
 800daa8:	d808      	bhi.n	800dabc <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi+0x16>
 800daaa:	e9d0 3200 	ldrd	r3, r2, [r0]
 800daae:	429a      	cmp	r2, r3
 800dab0:	d042      	beq.n	800db38 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi+0x92>
 800dab2:	1c5a      	adds	r2, r3, #1
 800dab4:	6002      	str	r2, [r0, #0]
 800dab6:	7019      	strb	r1, [r3, #0]
 800dab8:	2001      	movs	r0, #1
 800daba:	4770      	bx	lr
 800dabc:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800dac0:	d210      	bcs.n	800dae4 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi+0x3e>
 800dac2:	e9d0 3200 	ldrd	r3, r2, [r0]
 800dac6:	1ad2      	subs	r2, r2, r3
 800dac8:	2a01      	cmp	r2, #1
 800daca:	d935      	bls.n	800db38 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi+0x92>
 800dacc:	1c5a      	adds	r2, r3, #1
 800dace:	6002      	str	r2, [r0, #0]
 800dad0:	098a      	lsrs	r2, r1, #6
 800dad2:	3a40      	subs	r2, #64	; 0x40
 800dad4:	701a      	strb	r2, [r3, #0]
 800dad6:	6803      	ldr	r3, [r0, #0]
 800dad8:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 800dadc:	1c5a      	adds	r2, r3, #1
 800dade:	6002      	str	r2, [r0, #0]
 800dae0:	3980      	subs	r1, #128	; 0x80
 800dae2:	e7e8      	b.n	800dab6 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi+0x10>
 800dae4:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800dae8:	d211      	bcs.n	800db0e <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi+0x68>
 800daea:	e9d0 3200 	ldrd	r3, r2, [r0]
 800daee:	1ad2      	subs	r2, r2, r3
 800daf0:	2a02      	cmp	r2, #2
 800daf2:	d921      	bls.n	800db38 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi+0x92>
 800daf4:	1c5a      	adds	r2, r3, #1
 800daf6:	6002      	str	r2, [r0, #0]
 800daf8:	0b0a      	lsrs	r2, r1, #12
 800dafa:	3a20      	subs	r2, #32
 800dafc:	701a      	strb	r2, [r3, #0]
 800dafe:	6802      	ldr	r2, [r0, #0]
 800db00:	1c53      	adds	r3, r2, #1
 800db02:	6003      	str	r3, [r0, #0]
 800db04:	f3c1 1385 	ubfx	r3, r1, #6, #6
 800db08:	3b80      	subs	r3, #128	; 0x80
 800db0a:	7013      	strb	r3, [r2, #0]
 800db0c:	e7e3      	b.n	800dad6 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi+0x30>
 800db0e:	f5b1 1f88 	cmp.w	r1, #1114112	; 0x110000
 800db12:	d211      	bcs.n	800db38 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi+0x92>
 800db14:	e9d0 3200 	ldrd	r3, r2, [r0]
 800db18:	1ad2      	subs	r2, r2, r3
 800db1a:	2a03      	cmp	r2, #3
 800db1c:	d90c      	bls.n	800db38 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi+0x92>
 800db1e:	1c5a      	adds	r2, r3, #1
 800db20:	6002      	str	r2, [r0, #0]
 800db22:	0c8a      	lsrs	r2, r1, #18
 800db24:	3a10      	subs	r2, #16
 800db26:	701a      	strb	r2, [r3, #0]
 800db28:	6802      	ldr	r2, [r0, #0]
 800db2a:	1c53      	adds	r3, r2, #1
 800db2c:	6003      	str	r3, [r0, #0]
 800db2e:	f3c1 3305 	ubfx	r3, r1, #12, #6
 800db32:	3b80      	subs	r3, #128	; 0x80
 800db34:	7013      	strb	r3, [r2, #0]
 800db36:	e7e2      	b.n	800dafe <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi+0x58>
 800db38:	2000      	movs	r0, #0
 800db3a:	4770      	bx	lr

0800db3c <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi>:
 800db3c:	297f      	cmp	r1, #127	; 0x7f
 800db3e:	b510      	push	{r4, lr}
 800db40:	d808      	bhi.n	800db54 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi+0x18>
 800db42:	e9d0 3200 	ldrd	r3, r2, [r0]
 800db46:	429a      	cmp	r2, r3
 800db48:	d047      	beq.n	800dbda <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi+0x9e>
 800db4a:	1c5a      	adds	r2, r3, #1
 800db4c:	6002      	str	r2, [r0, #0]
 800db4e:	7019      	strb	r1, [r3, #0]
 800db50:	2001      	movs	r0, #1
 800db52:	bd10      	pop	{r4, pc}
 800db54:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800db58:	d20f      	bcs.n	800db7a <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi+0x3e>
 800db5a:	e9d0 3200 	ldrd	r3, r2, [r0]
 800db5e:	1ad2      	subs	r2, r2, r3
 800db60:	2a01      	cmp	r2, #1
 800db62:	d93a      	bls.n	800dbda <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi+0x9e>
 800db64:	098c      	lsrs	r4, r1, #6
 800db66:	461a      	mov	r2, r3
 800db68:	3c40      	subs	r4, #64	; 0x40
 800db6a:	f802 4b02 	strb.w	r4, [r2], #2
 800db6e:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 800db72:	3980      	subs	r1, #128	; 0x80
 800db74:	6002      	str	r2, [r0, #0]
 800db76:	7059      	strb	r1, [r3, #1]
 800db78:	e7ea      	b.n	800db50 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi+0x14>
 800db7a:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800db7e:	d212      	bcs.n	800dba6 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi+0x6a>
 800db80:	e9d0 3200 	ldrd	r3, r2, [r0]
 800db84:	1ad2      	subs	r2, r2, r3
 800db86:	2a02      	cmp	r2, #2
 800db88:	d927      	bls.n	800dbda <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi+0x9e>
 800db8a:	0b0a      	lsrs	r2, r1, #12
 800db8c:	3a20      	subs	r2, #32
 800db8e:	701a      	strb	r2, [r3, #0]
 800db90:	f3c1 1285 	ubfx	r2, r1, #6, #6
 800db94:	3a80      	subs	r2, #128	; 0x80
 800db96:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 800db9a:	705a      	strb	r2, [r3, #1]
 800db9c:	3980      	subs	r1, #128	; 0x80
 800db9e:	1cda      	adds	r2, r3, #3
 800dba0:	6002      	str	r2, [r0, #0]
 800dba2:	7099      	strb	r1, [r3, #2]
 800dba4:	e7d4      	b.n	800db50 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi+0x14>
 800dba6:	f5b1 1f88 	cmp.w	r1, #1114112	; 0x110000
 800dbaa:	d216      	bcs.n	800dbda <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi+0x9e>
 800dbac:	e9d0 3200 	ldrd	r3, r2, [r0]
 800dbb0:	1ad2      	subs	r2, r2, r3
 800dbb2:	2a03      	cmp	r2, #3
 800dbb4:	d911      	bls.n	800dbda <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi+0x9e>
 800dbb6:	0c8a      	lsrs	r2, r1, #18
 800dbb8:	3a10      	subs	r2, #16
 800dbba:	701a      	strb	r2, [r3, #0]
 800dbbc:	f3c1 3205 	ubfx	r2, r1, #12, #6
 800dbc0:	3a80      	subs	r2, #128	; 0x80
 800dbc2:	705a      	strb	r2, [r3, #1]
 800dbc4:	f3c1 1285 	ubfx	r2, r1, #6, #6
 800dbc8:	3a80      	subs	r2, #128	; 0x80
 800dbca:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 800dbce:	709a      	strb	r2, [r3, #2]
 800dbd0:	3980      	subs	r1, #128	; 0x80
 800dbd2:	1d1a      	adds	r2, r3, #4
 800dbd4:	6002      	str	r2, [r0, #0]
 800dbd6:	70d9      	strb	r1, [r3, #3]
 800dbd8:	e7ba      	b.n	800db50 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi+0x14>
 800dbda:	2000      	movs	r0, #0
 800dbdc:	e7b9      	b.n	800db52 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi+0x16>

0800dbde <_ZNSt12_GLOBAL__N_122write_utf16_code_pointIDsLb1EEEbRNS_5rangeIT_XT0_EEEDiSt12codecvt_mode>:
 800dbde:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800dbe2:	b510      	push	{r4, lr}
 800dbe4:	e9d0 4300 	ldrd	r4, r3, [r0]
 800dbe8:	d20b      	bcs.n	800dc02 <_ZNSt12_GLOBAL__N_122write_utf16_code_pointIDsLb1EEEbRNS_5rangeIT_XT0_EEEDiSt12codecvt_mode+0x24>
 800dbea:	42a3      	cmp	r3, r4
 800dbec:	d022      	beq.n	800dc34 <_ZNSt12_GLOBAL__N_122write_utf16_code_pointIDsLb1EEEbRNS_5rangeIT_XT0_EEEDiSt12codecvt_mode+0x56>
 800dbee:	07d3      	lsls	r3, r2, #31
 800dbf0:	b289      	uxth	r1, r1
 800dbf2:	d401      	bmi.n	800dbf8 <_ZNSt12_GLOBAL__N_122write_utf16_code_pointIDsLb1EEEbRNS_5rangeIT_XT0_EEEDiSt12codecvt_mode+0x1a>
 800dbf4:	ba49      	rev16	r1, r1
 800dbf6:	b289      	uxth	r1, r1
 800dbf8:	1ca3      	adds	r3, r4, #2
 800dbfa:	6003      	str	r3, [r0, #0]
 800dbfc:	8021      	strh	r1, [r4, #0]
 800dbfe:	2001      	movs	r0, #1
 800dc00:	bd10      	pop	{r4, pc}
 800dc02:	1b1b      	subs	r3, r3, r4
 800dc04:	2b02      	cmp	r3, #2
 800dc06:	d915      	bls.n	800dc34 <_ZNSt12_GLOBAL__N_122write_utf16_code_pointIDsLb1EEEbRNS_5rangeIT_XT0_EEEDiSt12codecvt_mode+0x56>
 800dc08:	0a8b      	lsrs	r3, r1, #10
 800dc0a:	f3c1 0109 	ubfx	r1, r1, #0, #10
 800dc0e:	f5a3 5321 	sub.w	r3, r3, #10304	; 0x2840
 800dc12:	f5a1 5110 	sub.w	r1, r1, #9216	; 0x2400
 800dc16:	f012 0201 	ands.w	r2, r2, #1
 800dc1a:	b29b      	uxth	r3, r3
 800dc1c:	b289      	uxth	r1, r1
 800dc1e:	d101      	bne.n	800dc24 <_ZNSt12_GLOBAL__N_122write_utf16_code_pointIDsLb1EEEbRNS_5rangeIT_XT0_EEEDiSt12codecvt_mode+0x46>
 800dc20:	ba5b      	rev16	r3, r3
 800dc22:	b29b      	uxth	r3, r3
 800dc24:	8023      	strh	r3, [r4, #0]
 800dc26:	b90a      	cbnz	r2, 800dc2c <_ZNSt12_GLOBAL__N_122write_utf16_code_pointIDsLb1EEEbRNS_5rangeIT_XT0_EEEDiSt12codecvt_mode+0x4e>
 800dc28:	ba49      	rev16	r1, r1
 800dc2a:	b289      	uxth	r1, r1
 800dc2c:	1d23      	adds	r3, r4, #4
 800dc2e:	6003      	str	r3, [r0, #0]
 800dc30:	8061      	strh	r1, [r4, #2]
 800dc32:	e7e4      	b.n	800dbfe <_ZNSt12_GLOBAL__N_122write_utf16_code_pointIDsLb1EEEbRNS_5rangeIT_XT0_EEEDiSt12codecvt_mode+0x20>
 800dc34:	2000      	movs	r0, #0
 800dc36:	e7e3      	b.n	800dc00 <_ZNSt12_GLOBAL__N_122write_utf16_code_pointIDsLb1EEEbRNS_5rangeIT_XT0_EEEDiSt12codecvt_mode+0x22>

0800dc38 <_ZNKSt7codecvtIDiDu10_mbstate_tE6do_outERS0_PKDiS4_RS4_PDuS6_RS6_>:
 800dc38:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dc3a:	461e      	mov	r6, r3
 800dc3c:	9b07      	ldr	r3, [sp, #28]
 800dc3e:	9300      	str	r3, [sp, #0]
 800dc40:	9b08      	ldr	r3, [sp, #32]
 800dc42:	9301      	str	r3, [sp, #4]
 800dc44:	4614      	mov	r4, r2
 800dc46:	42a6      	cmp	r6, r4
 800dc48:	4625      	mov	r5, r4
 800dc4a:	d012      	beq.n	800dc72 <_ZNKSt7codecvtIDiDu10_mbstate_tE6do_outERS0_PKDiS4_RS4_PDuS6_RS6_+0x3a>
 800dc4c:	6821      	ldr	r1, [r4, #0]
 800dc4e:	f5b1 1f88 	cmp.w	r1, #1114112	; 0x110000
 800dc52:	f104 0404 	add.w	r4, r4, #4
 800dc56:	d20e      	bcs.n	800dc76 <_ZNKSt7codecvtIDiDu10_mbstate_tE6do_outERS0_PKDiS4_RS4_PDuS6_RS6_+0x3e>
 800dc58:	4668      	mov	r0, sp
 800dc5a:	f7ff ff6f 	bl	800db3c <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi>
 800dc5e:	2800      	cmp	r0, #0
 800dc60:	d1f1      	bne.n	800dc46 <_ZNKSt7codecvtIDiDu10_mbstate_tE6do_outERS0_PKDiS4_RS4_PDuS6_RS6_+0xe>
 800dc62:	2001      	movs	r0, #1
 800dc64:	9b06      	ldr	r3, [sp, #24]
 800dc66:	9a00      	ldr	r2, [sp, #0]
 800dc68:	601d      	str	r5, [r3, #0]
 800dc6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dc6c:	601a      	str	r2, [r3, #0]
 800dc6e:	b002      	add	sp, #8
 800dc70:	bd70      	pop	{r4, r5, r6, pc}
 800dc72:	2000      	movs	r0, #0
 800dc74:	e7f6      	b.n	800dc64 <_ZNKSt7codecvtIDiDu10_mbstate_tE6do_outERS0_PKDiS4_RS4_PDuS6_RS6_+0x2c>
 800dc76:	2002      	movs	r0, #2
 800dc78:	e7f4      	b.n	800dc64 <_ZNKSt7codecvtIDiDu10_mbstate_tE6do_outERS0_PKDiS4_RS4_PDuS6_RS6_+0x2c>
	...

0800dc7c <_ZNKSt7codecvtIDsDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDsS6_RS6_>:
 800dc7c:	b530      	push	{r4, r5, lr}
 800dc7e:	b085      	sub	sp, #20
 800dc80:	e9cd 2300 	strd	r2, r3, [sp]
 800dc84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dc86:	9302      	str	r3, [sp, #8]
 800dc88:	4d14      	ldr	r5, [pc, #80]	; (800dcdc <_ZNKSt7codecvtIDsDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDsS6_RS6_+0x60>)
 800dc8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dc8c:	9303      	str	r3, [sp, #12]
 800dc8e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800dc92:	9c00      	ldr	r4, [sp, #0]
 800dc94:	42a2      	cmp	r2, r4
 800dc96:	d015      	beq.n	800dcc4 <_ZNKSt7codecvtIDsDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDsS6_RS6_+0x48>
 800dc98:	9a03      	ldr	r2, [sp, #12]
 800dc9a:	429a      	cmp	r2, r3
 800dc9c:	d012      	beq.n	800dcc4 <_ZNKSt7codecvtIDsDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDsS6_RS6_+0x48>
 800dc9e:	4629      	mov	r1, r5
 800dca0:	4668      	mov	r0, sp
 800dca2:	f7ff fe91 	bl	800d9c8 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm>
 800dca6:	1c83      	adds	r3, r0, #2
 800dca8:	4601      	mov	r1, r0
 800dcaa:	d009      	beq.n	800dcc0 <_ZNKSt7codecvtIDsDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDsS6_RS6_+0x44>
 800dcac:	f5b0 1f88 	cmp.w	r0, #1114112	; 0x110000
 800dcb0:	d211      	bcs.n	800dcd6 <_ZNKSt7codecvtIDsDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDsS6_RS6_+0x5a>
 800dcb2:	2201      	movs	r2, #1
 800dcb4:	a802      	add	r0, sp, #8
 800dcb6:	f7ff ff92 	bl	800dbde <_ZNSt12_GLOBAL__N_122write_utf16_code_pointIDsLb1EEEbRNS_5rangeIT_XT0_EEEDiSt12codecvt_mode>
 800dcba:	2800      	cmp	r0, #0
 800dcbc:	d1e7      	bne.n	800dc8e <_ZNKSt7codecvtIDsDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDsS6_RS6_+0x12>
 800dcbe:	9400      	str	r4, [sp, #0]
 800dcc0:	2001      	movs	r0, #1
 800dcc2:	e000      	b.n	800dcc6 <_ZNKSt7codecvtIDsDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDsS6_RS6_+0x4a>
 800dcc4:	2000      	movs	r0, #0
 800dcc6:	9b08      	ldr	r3, [sp, #32]
 800dcc8:	9a00      	ldr	r2, [sp, #0]
 800dcca:	601a      	str	r2, [r3, #0]
 800dccc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800dcce:	9a02      	ldr	r2, [sp, #8]
 800dcd0:	601a      	str	r2, [r3, #0]
 800dcd2:	b005      	add	sp, #20
 800dcd4:	bd30      	pop	{r4, r5, pc}
 800dcd6:	2002      	movs	r0, #2
 800dcd8:	e7f5      	b.n	800dcc6 <_ZNKSt7codecvtIDsDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDsS6_RS6_+0x4a>
 800dcda:	bf00      	nop
 800dcdc:	0010ffff 	.word	0x0010ffff

0800dce0 <_ZNSt12_GLOBAL__N_114write_utf8_bomIcEEbRNS_5rangeIT_Lb1EEESt12codecvt_mode>:
 800dce0:	078b      	lsls	r3, r1, #30
 800dce2:	d50c      	bpl.n	800dcfe <_ZNSt12_GLOBAL__N_114write_utf8_bomIcEEbRNS_5rangeIT_Lb1EEESt12codecvt_mode+0x1e>
 800dce4:	e9d0 3200 	ldrd	r3, r2, [r0]
 800dce8:	1ad2      	subs	r2, r2, r3
 800dcea:	2a02      	cmp	r2, #2
 800dcec:	d909      	bls.n	800dd02 <_ZNSt12_GLOBAL__N_114write_utf8_bomIcEEbRNS_5rangeIT_Lb1EEESt12codecvt_mode+0x22>
 800dcee:	4a06      	ldr	r2, [pc, #24]	; (800dd08 <_ZNSt12_GLOBAL__N_114write_utf8_bomIcEEbRNS_5rangeIT_Lb1EEESt12codecvt_mode+0x28>)
 800dcf0:	8811      	ldrh	r1, [r2, #0]
 800dcf2:	7892      	ldrb	r2, [r2, #2]
 800dcf4:	8019      	strh	r1, [r3, #0]
 800dcf6:	709a      	strb	r2, [r3, #2]
 800dcf8:	6803      	ldr	r3, [r0, #0]
 800dcfa:	3303      	adds	r3, #3
 800dcfc:	6003      	str	r3, [r0, #0]
 800dcfe:	2001      	movs	r0, #1
 800dd00:	4770      	bx	lr
 800dd02:	2000      	movs	r0, #0
 800dd04:	4770      	bx	lr
 800dd06:	bf00      	nop
 800dd08:	0802ea70 	.word	0x0802ea70

0800dd0c <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE>:
 800dd0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dd10:	460e      	mov	r6, r1
 800dd12:	4604      	mov	r4, r0
 800dd14:	4619      	mov	r1, r3
 800dd16:	4630      	mov	r0, r6
 800dd18:	9d06      	ldr	r5, [sp, #24]
 800dd1a:	4617      	mov	r7, r2
 800dd1c:	f7ff ffe0 	bl	800dce0 <_ZNSt12_GLOBAL__N_114write_utf8_bomIcEEbRNS_5rangeIT_Lb1EEESt12codecvt_mode>
 800dd20:	b378      	cbz	r0, 800dd82 <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x76>
 800dd22:	e9d4 3200 	ldrd	r3, r2, [r4]
 800dd26:	429a      	cmp	r2, r3
 800dd28:	d02e      	beq.n	800dd88 <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x7c>
 800dd2a:	8819      	ldrh	r1, [r3, #0]
 800dd2c:	f5a1 4058 	sub.w	r0, r1, #55296	; 0xd800
 800dd30:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 800dd34:	d21d      	bcs.n	800dd72 <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x66>
 800dd36:	2d01      	cmp	r5, #1
 800dd38:	d028      	beq.n	800dd8c <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x80>
 800dd3a:	1ad2      	subs	r2, r2, r3
 800dd3c:	2a02      	cmp	r2, #2
 800dd3e:	d923      	bls.n	800dd88 <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x7c>
 800dd40:	885b      	ldrh	r3, [r3, #2]
 800dd42:	f5a3 425c 	sub.w	r2, r3, #56320	; 0xdc00
 800dd46:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800dd4a:	d21f      	bcs.n	800dd8c <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x80>
 800dd4c:	f1a3 7357 	sub.w	r3, r3, #56360960	; 0x35c0000
 800dd50:	f5a3 3377 	sub.w	r3, r3, #252928	; 0x3dc00
 800dd54:	eb03 2181 	add.w	r1, r3, r1, lsl #10
 800dd58:	f04f 0802 	mov.w	r8, #2
 800dd5c:	428f      	cmp	r7, r1
 800dd5e:	d315      	bcc.n	800dd8c <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x80>
 800dd60:	4630      	mov	r0, r6
 800dd62:	f7ff fea0 	bl	800daa6 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi>
 800dd66:	b160      	cbz	r0, 800dd82 <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x76>
 800dd68:	6823      	ldr	r3, [r4, #0]
 800dd6a:	eb03 0348 	add.w	r3, r3, r8, lsl #1
 800dd6e:	6023      	str	r3, [r4, #0]
 800dd70:	e7d7      	b.n	800dd22 <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x16>
 800dd72:	f5a1 435c 	sub.w	r3, r1, #56320	; 0xdc00
 800dd76:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800dd7a:	d307      	bcc.n	800dd8c <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x80>
 800dd7c:	f04f 0801 	mov.w	r8, #1
 800dd80:	e7ec      	b.n	800dd5c <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x50>
 800dd82:	2001      	movs	r0, #1
 800dd84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dd88:	2000      	movs	r0, #0
 800dd8a:	e7fb      	b.n	800dd84 <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x78>
 800dd8c:	2002      	movs	r0, #2
 800dd8e:	e7f9      	b.n	800dd84 <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x78>

0800dd90 <_ZNKSt7codecvtIDsc10_mbstate_tE6do_outERS0_PKDsS4_RS4_PcS6_RS6_>:
 800dd90:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dd92:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800dd96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dd98:	9304      	str	r3, [sp, #16]
 800dd9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dd9c:	9305      	str	r3, [sp, #20]
 800dd9e:	2300      	movs	r3, #0
 800dda0:	9300      	str	r3, [sp, #0]
 800dda2:	4a07      	ldr	r2, [pc, #28]	; (800ddc0 <_ZNKSt7codecvtIDsc10_mbstate_tE6do_outERS0_PKDsS4_RS4_PcS6_RS6_+0x30>)
 800dda4:	a904      	add	r1, sp, #16
 800dda6:	a802      	add	r0, sp, #8
 800dda8:	f7ff ffb0 	bl	800dd0c <_ZNSt12_GLOBAL__N_19utf16_outIDscEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE>
 800ddac:	9b08      	ldr	r3, [sp, #32]
 800ddae:	9a02      	ldr	r2, [sp, #8]
 800ddb0:	601a      	str	r2, [r3, #0]
 800ddb2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ddb4:	9a04      	ldr	r2, [sp, #16]
 800ddb6:	601a      	str	r2, [r3, #0]
 800ddb8:	b007      	add	sp, #28
 800ddba:	f85d fb04 	ldr.w	pc, [sp], #4
 800ddbe:	bf00      	nop
 800ddc0:	0010ffff 	.word	0x0010ffff

0800ddc4 <_ZNSt12_GLOBAL__N_18ucs4_outIcEENSt12codecvt_base6resultERNS_5rangeIKDiLb1EEERNS3_IT_Lb1EEEmSt12codecvt_mode>:
 800ddc4:	b570      	push	{r4, r5, r6, lr}
 800ddc6:	460d      	mov	r5, r1
 800ddc8:	4604      	mov	r4, r0
 800ddca:	4619      	mov	r1, r3
 800ddcc:	4628      	mov	r0, r5
 800ddce:	4616      	mov	r6, r2
 800ddd0:	f7ff ff86 	bl	800dce0 <_ZNSt12_GLOBAL__N_114write_utf8_bomIcEEbRNS_5rangeIT_Lb1EEESt12codecvt_mode>
 800ddd4:	b170      	cbz	r0, 800ddf4 <_ZNSt12_GLOBAL__N_18ucs4_outIcEENSt12codecvt_base6resultERNS_5rangeIKDiLb1EEERNS3_IT_Lb1EEEmSt12codecvt_mode+0x30>
 800ddd6:	e9d4 3200 	ldrd	r3, r2, [r4]
 800ddda:	429a      	cmp	r2, r3
 800dddc:	d00c      	beq.n	800ddf8 <_ZNSt12_GLOBAL__N_18ucs4_outIcEENSt12codecvt_base6resultERNS_5rangeIKDiLb1EEERNS3_IT_Lb1EEEmSt12codecvt_mode+0x34>
 800ddde:	6819      	ldr	r1, [r3, #0]
 800dde0:	428e      	cmp	r6, r1
 800dde2:	d30b      	bcc.n	800ddfc <_ZNSt12_GLOBAL__N_18ucs4_outIcEENSt12codecvt_base6resultERNS_5rangeIKDiLb1EEERNS3_IT_Lb1EEEmSt12codecvt_mode+0x38>
 800dde4:	4628      	mov	r0, r5
 800dde6:	f7ff fe5e 	bl	800daa6 <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIcEEbRNS_5rangeIT_Lb1EEEDi>
 800ddea:	b118      	cbz	r0, 800ddf4 <_ZNSt12_GLOBAL__N_18ucs4_outIcEENSt12codecvt_base6resultERNS_5rangeIKDiLb1EEERNS3_IT_Lb1EEEmSt12codecvt_mode+0x30>
 800ddec:	6823      	ldr	r3, [r4, #0]
 800ddee:	3304      	adds	r3, #4
 800ddf0:	6023      	str	r3, [r4, #0]
 800ddf2:	e7f0      	b.n	800ddd6 <_ZNSt12_GLOBAL__N_18ucs4_outIcEENSt12codecvt_base6resultERNS_5rangeIKDiLb1EEERNS3_IT_Lb1EEEmSt12codecvt_mode+0x12>
 800ddf4:	2001      	movs	r0, #1
 800ddf6:	bd70      	pop	{r4, r5, r6, pc}
 800ddf8:	2000      	movs	r0, #0
 800ddfa:	e7fc      	b.n	800ddf6 <_ZNSt12_GLOBAL__N_18ucs4_outIcEENSt12codecvt_base6resultERNS_5rangeIKDiLb1EEERNS3_IT_Lb1EEEmSt12codecvt_mode+0x32>
 800ddfc:	2002      	movs	r0, #2
 800ddfe:	e7fa      	b.n	800ddf6 <_ZNSt12_GLOBAL__N_18ucs4_outIcEENSt12codecvt_base6resultERNS_5rangeIKDiLb1EEERNS3_IT_Lb1EEEmSt12codecvt_mode+0x32>

0800de00 <_ZNKSt7codecvtIDic10_mbstate_tE6do_outERS0_PKDiS4_RS4_PcS6_RS6_>:
 800de00:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800de02:	e9cd 2300 	strd	r2, r3, [sp]
 800de06:	9b07      	ldr	r3, [sp, #28]
 800de08:	9302      	str	r3, [sp, #8]
 800de0a:	9b08      	ldr	r3, [sp, #32]
 800de0c:	9303      	str	r3, [sp, #12]
 800de0e:	4a07      	ldr	r2, [pc, #28]	; (800de2c <_ZNKSt7codecvtIDic10_mbstate_tE6do_outERS0_PKDiS4_RS4_PcS6_RS6_+0x2c>)
 800de10:	2300      	movs	r3, #0
 800de12:	a902      	add	r1, sp, #8
 800de14:	4668      	mov	r0, sp
 800de16:	f7ff ffd5 	bl	800ddc4 <_ZNSt12_GLOBAL__N_18ucs4_outIcEENSt12codecvt_base6resultERNS_5rangeIKDiLb1EEERNS3_IT_Lb1EEEmSt12codecvt_mode>
 800de1a:	9b06      	ldr	r3, [sp, #24]
 800de1c:	9a00      	ldr	r2, [sp, #0]
 800de1e:	601a      	str	r2, [r3, #0]
 800de20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800de22:	9a02      	ldr	r2, [sp, #8]
 800de24:	601a      	str	r2, [r3, #0]
 800de26:	b005      	add	sp, #20
 800de28:	f85d fb04 	ldr.w	pc, [sp], #4
 800de2c:	0010ffff 	.word	0x0010ffff

0800de30 <_ZNSt12_GLOBAL__N_113read_utf8_bomIcEEvRNS_5rangeIKT_Lb1EEESt12codecvt_mode>:
 800de30:	b538      	push	{r3, r4, r5, lr}
 800de32:	074b      	lsls	r3, r1, #29
 800de34:	4604      	mov	r4, r0
 800de36:	d50c      	bpl.n	800de52 <_ZNSt12_GLOBAL__N_113read_utf8_bomIcEEvRNS_5rangeIKT_Lb1EEESt12codecvt_mode+0x22>
 800de38:	e9d0 5300 	ldrd	r5, r3, [r0]
 800de3c:	1b5b      	subs	r3, r3, r5
 800de3e:	2b02      	cmp	r3, #2
 800de40:	d907      	bls.n	800de52 <_ZNSt12_GLOBAL__N_113read_utf8_bomIcEEvRNS_5rangeIKT_Lb1EEESt12codecvt_mode+0x22>
 800de42:	4904      	ldr	r1, [pc, #16]	; (800de54 <_ZNSt12_GLOBAL__N_113read_utf8_bomIcEEvRNS_5rangeIKT_Lb1EEESt12codecvt_mode+0x24>)
 800de44:	2203      	movs	r2, #3
 800de46:	4628      	mov	r0, r5
 800de48:	f018 f84a 	bl	8025ee0 <memcmp>
 800de4c:	b908      	cbnz	r0, 800de52 <_ZNSt12_GLOBAL__N_113read_utf8_bomIcEEvRNS_5rangeIKT_Lb1EEESt12codecvt_mode+0x22>
 800de4e:	3503      	adds	r5, #3
 800de50:	6025      	str	r5, [r4, #0]
 800de52:	bd38      	pop	{r3, r4, r5, pc}
 800de54:	0802eb40 	.word	0x0802eb40

0800de58 <_ZNSt12_GLOBAL__N_17ucs4_inIcEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IDiLb1EEEmSt12codecvt_mode>:
 800de58:	b570      	push	{r4, r5, r6, lr}
 800de5a:	460c      	mov	r4, r1
 800de5c:	4619      	mov	r1, r3
 800de5e:	4605      	mov	r5, r0
 800de60:	4616      	mov	r6, r2
 800de62:	f7ff ffe5 	bl	800de30 <_ZNSt12_GLOBAL__N_113read_utf8_bomIcEEvRNS_5rangeIKT_Lb1EEESt12codecvt_mode>
 800de66:	e9d5 2300 	ldrd	r2, r3, [r5]
 800de6a:	429a      	cmp	r2, r3
 800de6c:	d012      	beq.n	800de94 <_ZNSt12_GLOBAL__N_17ucs4_inIcEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IDiLb1EEEmSt12codecvt_mode+0x3c>
 800de6e:	e9d4 3200 	ldrd	r3, r2, [r4]
 800de72:	429a      	cmp	r2, r3
 800de74:	d101      	bne.n	800de7a <_ZNSt12_GLOBAL__N_17ucs4_inIcEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IDiLb1EEEmSt12codecvt_mode+0x22>
 800de76:	2001      	movs	r0, #1
 800de78:	bd70      	pop	{r4, r5, r6, pc}
 800de7a:	4631      	mov	r1, r6
 800de7c:	4628      	mov	r0, r5
 800de7e:	f7ff fd34 	bl	800d8ea <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm>
 800de82:	1c83      	adds	r3, r0, #2
 800de84:	d0f7      	beq.n	800de76 <_ZNSt12_GLOBAL__N_17ucs4_inIcEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IDiLb1EEEmSt12codecvt_mode+0x1e>
 800de86:	4286      	cmp	r6, r0
 800de88:	d306      	bcc.n	800de98 <_ZNSt12_GLOBAL__N_17ucs4_inIcEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IDiLb1EEEmSt12codecvt_mode+0x40>
 800de8a:	6823      	ldr	r3, [r4, #0]
 800de8c:	1d1a      	adds	r2, r3, #4
 800de8e:	6022      	str	r2, [r4, #0]
 800de90:	6018      	str	r0, [r3, #0]
 800de92:	e7e8      	b.n	800de66 <_ZNSt12_GLOBAL__N_17ucs4_inIcEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IDiLb1EEEmSt12codecvt_mode+0xe>
 800de94:	2000      	movs	r0, #0
 800de96:	e7ef      	b.n	800de78 <_ZNSt12_GLOBAL__N_17ucs4_inIcEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IDiLb1EEEmSt12codecvt_mode+0x20>
 800de98:	2002      	movs	r0, #2
 800de9a:	e7ed      	b.n	800de78 <_ZNSt12_GLOBAL__N_17ucs4_inIcEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IDiLb1EEEmSt12codecvt_mode+0x20>

0800de9c <_ZNKSt7codecvtIDic10_mbstate_tE5do_inERS0_PKcS4_RS4_PDiS6_RS6_>:
 800de9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800de9e:	e9cd 2300 	strd	r2, r3, [sp]
 800dea2:	9b07      	ldr	r3, [sp, #28]
 800dea4:	9302      	str	r3, [sp, #8]
 800dea6:	9b08      	ldr	r3, [sp, #32]
 800dea8:	9303      	str	r3, [sp, #12]
 800deaa:	4a07      	ldr	r2, [pc, #28]	; (800dec8 <_ZNKSt7codecvtIDic10_mbstate_tE5do_inERS0_PKcS4_RS4_PDiS6_RS6_+0x2c>)
 800deac:	2300      	movs	r3, #0
 800deae:	a902      	add	r1, sp, #8
 800deb0:	4668      	mov	r0, sp
 800deb2:	f7ff ffd1 	bl	800de58 <_ZNSt12_GLOBAL__N_17ucs4_inIcEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IDiLb1EEEmSt12codecvt_mode>
 800deb6:	9b06      	ldr	r3, [sp, #24]
 800deb8:	9a00      	ldr	r2, [sp, #0]
 800deba:	601a      	str	r2, [r3, #0]
 800debc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800debe:	9a02      	ldr	r2, [sp, #8]
 800dec0:	601a      	str	r2, [r3, #0]
 800dec2:	b005      	add	sp, #20
 800dec4:	f85d fb04 	ldr.w	pc, [sp], #4
 800dec8:	0010ffff 	.word	0x0010ffff

0800decc <_ZNSt12_GLOBAL__N_19ucs4_spanIcEEPKT_S3_S3_jDiSt12codecvt_mode>:
 800decc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dece:	e9cd 0100 	strd	r0, r1, [sp]
 800ded2:	4668      	mov	r0, sp
 800ded4:	f89d 1018 	ldrb.w	r1, [sp, #24]
 800ded8:	4614      	mov	r4, r2
 800deda:	461d      	mov	r5, r3
 800dedc:	f7ff ffa8 	bl	800de30 <_ZNSt12_GLOBAL__N_113read_utf8_bomIcEEvRNS_5rangeIKT_Lb1EEESt12codecvt_mode>
 800dee0:	2000      	movs	r0, #0
 800dee2:	b144      	cbz	r4, 800def6 <_ZNSt12_GLOBAL__N_19ucs4_spanIcEEPKT_S3_S3_jDiSt12codecvt_mode+0x2a>
 800dee4:	42a8      	cmp	r0, r5
 800dee6:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 800deea:	d804      	bhi.n	800def6 <_ZNSt12_GLOBAL__N_19ucs4_spanIcEEPKT_S3_S3_jDiSt12codecvt_mode+0x2a>
 800deec:	4629      	mov	r1, r5
 800deee:	4668      	mov	r0, sp
 800def0:	f7ff fcfb 	bl	800d8ea <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm>
 800def4:	e7f5      	b.n	800dee2 <_ZNSt12_GLOBAL__N_19ucs4_spanIcEEPKT_S3_S3_jDiSt12codecvt_mode+0x16>
 800def6:	9800      	ldr	r0, [sp, #0]
 800def8:	b003      	add	sp, #12
 800defa:	bd30      	pop	{r4, r5, pc}

0800defc <_ZNKSt7codecvtIDic10_mbstate_tE9do_lengthERS0_PKcS4_j>:
 800defc:	b513      	push	{r0, r1, r4, lr}
 800defe:	4614      	mov	r4, r2
 800df00:	4619      	mov	r1, r3
 800df02:	2300      	movs	r3, #0
 800df04:	9300      	str	r3, [sp, #0]
 800df06:	9a04      	ldr	r2, [sp, #16]
 800df08:	4b03      	ldr	r3, [pc, #12]	; (800df18 <_ZNKSt7codecvtIDic10_mbstate_tE9do_lengthERS0_PKcS4_j+0x1c>)
 800df0a:	4620      	mov	r0, r4
 800df0c:	f7ff ffde 	bl	800decc <_ZNSt12_GLOBAL__N_19ucs4_spanIcEEPKT_S3_S3_jDiSt12codecvt_mode>
 800df10:	1b00      	subs	r0, r0, r4
 800df12:	b002      	add	sp, #8
 800df14:	bd10      	pop	{r4, pc}
 800df16:	bf00      	nop
 800df18:	0010ffff 	.word	0x0010ffff

0800df1c <_ZNSt12_GLOBAL__N_18utf16_inIcDsEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE>:
 800df1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800df20:	460d      	mov	r5, r1
 800df22:	4619      	mov	r1, r3
 800df24:	4604      	mov	r4, r0
 800df26:	4617      	mov	r7, r2
 800df28:	461e      	mov	r6, r3
 800df2a:	f7ff ff81 	bl	800de30 <_ZNSt12_GLOBAL__N_113read_utf8_bomIcEEvRNS_5rangeIKT_Lb1EEESt12codecvt_mode>
 800df2e:	e9d4 9800 	ldrd	r9, r8, [r4]
 800df32:	45c1      	cmp	r9, r8
 800df34:	d01b      	beq.n	800df6e <_ZNSt12_GLOBAL__N_18utf16_inIcDsEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x52>
 800df36:	e9d5 3200 	ldrd	r3, r2, [r5]
 800df3a:	429a      	cmp	r2, r3
 800df3c:	d017      	beq.n	800df6e <_ZNSt12_GLOBAL__N_18utf16_inIcDsEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x52>
 800df3e:	4639      	mov	r1, r7
 800df40:	4620      	mov	r0, r4
 800df42:	f7ff fcd2 	bl	800d8ea <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm>
 800df46:	1c83      	adds	r3, r0, #2
 800df48:	4601      	mov	r1, r0
 800df4a:	d104      	bne.n	800df56 <_ZNSt12_GLOBAL__N_18utf16_inIcDsEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x3a>
 800df4c:	9808      	ldr	r0, [sp, #32]
 800df4e:	3001      	adds	r0, #1
 800df50:	b2c0      	uxtb	r0, r0
 800df52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800df56:	4287      	cmp	r7, r0
 800df58:	d30b      	bcc.n	800df72 <_ZNSt12_GLOBAL__N_18utf16_inIcDsEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x56>
 800df5a:	4632      	mov	r2, r6
 800df5c:	4628      	mov	r0, r5
 800df5e:	f7ff fe3e 	bl	800dbde <_ZNSt12_GLOBAL__N_122write_utf16_code_pointIDsLb1EEEbRNS_5rangeIT_XT0_EEEDiSt12codecvt_mode>
 800df62:	2800      	cmp	r0, #0
 800df64:	d1e3      	bne.n	800df2e <_ZNSt12_GLOBAL__N_18utf16_inIcDsEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x12>
 800df66:	e9c4 9800 	strd	r9, r8, [r4]
 800df6a:	2001      	movs	r0, #1
 800df6c:	e7f1      	b.n	800df52 <_ZNSt12_GLOBAL__N_18utf16_inIcDsEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x36>
 800df6e:	2000      	movs	r0, #0
 800df70:	e7ef      	b.n	800df52 <_ZNSt12_GLOBAL__N_18utf16_inIcDsEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x36>
 800df72:	2002      	movs	r0, #2
 800df74:	e7ed      	b.n	800df52 <_ZNSt12_GLOBAL__N_18utf16_inIcDsEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE+0x36>
	...

0800df78 <_ZNKSt7codecvtIDsc10_mbstate_tE5do_inERS0_PKcS4_RS4_PDsS6_RS6_>:
 800df78:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800df7a:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800df7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800df80:	9304      	str	r3, [sp, #16]
 800df82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800df84:	9305      	str	r3, [sp, #20]
 800df86:	2300      	movs	r3, #0
 800df88:	9300      	str	r3, [sp, #0]
 800df8a:	4a07      	ldr	r2, [pc, #28]	; (800dfa8 <_ZNKSt7codecvtIDsc10_mbstate_tE5do_inERS0_PKcS4_RS4_PDsS6_RS6_+0x30>)
 800df8c:	2301      	movs	r3, #1
 800df8e:	a904      	add	r1, sp, #16
 800df90:	a802      	add	r0, sp, #8
 800df92:	f7ff ffc3 	bl	800df1c <_ZNSt12_GLOBAL__N_18utf16_inIcDsEENSt12codecvt_base6resultERNS_5rangeIKT_Lb1EEERNS3_IT0_Lb1EEEmSt12codecvt_modeNS_10surrogatesE>
 800df96:	9b08      	ldr	r3, [sp, #32]
 800df98:	9a02      	ldr	r2, [sp, #8]
 800df9a:	601a      	str	r2, [r3, #0]
 800df9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800df9e:	9a04      	ldr	r2, [sp, #16]
 800dfa0:	601a      	str	r2, [r3, #0]
 800dfa2:	b007      	add	sp, #28
 800dfa4:	f85d fb04 	ldr.w	pc, [sp], #4
 800dfa8:	0010ffff 	.word	0x0010ffff

0800dfac <_ZNSt12_GLOBAL__N_110utf16_spanIcEEPKT_S3_S3_jDiSt12codecvt_mode>:
 800dfac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dfae:	e9cd 0100 	strd	r0, r1, [sp]
 800dfb2:	f89d 1020 	ldrb.w	r1, [sp, #32]
 800dfb6:	4668      	mov	r0, sp
 800dfb8:	4616      	mov	r6, r2
 800dfba:	461c      	mov	r4, r3
 800dfbc:	f7ff ff38 	bl	800de30 <_ZNSt12_GLOBAL__N_113read_utf8_bomIcEEvRNS_5rangeIKT_Lb1EEESt12codecvt_mode>
 800dfc0:	2500      	movs	r5, #0
 800dfc2:	1c6f      	adds	r7, r5, #1
 800dfc4:	42b7      	cmp	r7, r6
 800dfc6:	d20e      	bcs.n	800dfe6 <_ZNSt12_GLOBAL__N_110utf16_spanIcEEPKT_S3_S3_jDiSt12codecvt_mode+0x3a>
 800dfc8:	4621      	mov	r1, r4
 800dfca:	4668      	mov	r0, sp
 800dfcc:	f7ff fc8d 	bl	800d8ea <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm>
 800dfd0:	42a0      	cmp	r0, r4
 800dfd2:	d902      	bls.n	800dfda <_ZNSt12_GLOBAL__N_110utf16_spanIcEEPKT_S3_S3_jDiSt12codecvt_mode+0x2e>
 800dfd4:	9800      	ldr	r0, [sp, #0]
 800dfd6:	b003      	add	sp, #12
 800dfd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dfda:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 800dfde:	bf28      	it	cs
 800dfe0:	463d      	movcs	r5, r7
 800dfe2:	3501      	adds	r5, #1
 800dfe4:	e7ed      	b.n	800dfc2 <_ZNSt12_GLOBAL__N_110utf16_spanIcEEPKT_S3_S3_jDiSt12codecvt_mode+0x16>
 800dfe6:	d1f5      	bne.n	800dfd4 <_ZNSt12_GLOBAL__N_110utf16_spanIcEEPKT_S3_S3_jDiSt12codecvt_mode+0x28>
 800dfe8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800dfec:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 800dff0:	428c      	cmp	r4, r1
 800dff2:	bf94      	ite	ls
 800dff4:	4621      	movls	r1, r4
 800dff6:	4619      	movhi	r1, r3
 800dff8:	4668      	mov	r0, sp
 800dffa:	f7ff fc76 	bl	800d8ea <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIcEEDiRNS_5rangeIKT_Lb1EEEm>
 800dffe:	e7e9      	b.n	800dfd4 <_ZNSt12_GLOBAL__N_110utf16_spanIcEEPKT_S3_S3_jDiSt12codecvt_mode+0x28>

0800e000 <_ZNKSt7codecvtIDsc10_mbstate_tE9do_lengthERS0_PKcS4_j>:
 800e000:	b513      	push	{r0, r1, r4, lr}
 800e002:	4614      	mov	r4, r2
 800e004:	4619      	mov	r1, r3
 800e006:	2300      	movs	r3, #0
 800e008:	9300      	str	r3, [sp, #0]
 800e00a:	9a04      	ldr	r2, [sp, #16]
 800e00c:	4b03      	ldr	r3, [pc, #12]	; (800e01c <_ZNKSt7codecvtIDsc10_mbstate_tE9do_lengthERS0_PKcS4_j+0x1c>)
 800e00e:	4620      	mov	r0, r4
 800e010:	f7ff ffcc 	bl	800dfac <_ZNSt12_GLOBAL__N_110utf16_spanIcEEPKT_S3_S3_jDiSt12codecvt_mode>
 800e014:	1b00      	subs	r0, r0, r4
 800e016:	b002      	add	sp, #8
 800e018:	bd10      	pop	{r4, pc}
 800e01a:	bf00      	nop
 800e01c:	0010ffff 	.word	0x0010ffff

0800e020 <_ZNKSt7codecvtIDsDu10_mbstate_tE6do_outERS0_PKDsS4_RS4_PDuS6_RS6_>:
 800e020:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e022:	461d      	mov	r5, r3
 800e024:	9b07      	ldr	r3, [sp, #28]
 800e026:	9300      	str	r3, [sp, #0]
 800e028:	9b08      	ldr	r3, [sp, #32]
 800e02a:	9301      	str	r3, [sp, #4]
 800e02c:	4614      	mov	r4, r2
 800e02e:	42a5      	cmp	r5, r4
 800e030:	d025      	beq.n	800e07e <_ZNKSt7codecvtIDsDu10_mbstate_tE6do_outERS0_PKDsS4_RS4_PDuS6_RS6_+0x5e>
 800e032:	8821      	ldrh	r1, [r4, #0]
 800e034:	f5a1 4358 	sub.w	r3, r1, #55296	; 0xd800
 800e038:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800e03c:	d215      	bcs.n	800e06a <_ZNKSt7codecvtIDsDu10_mbstate_tE6do_outERS0_PKDsS4_RS4_PDuS6_RS6_+0x4a>
 800e03e:	1b2b      	subs	r3, r5, r4
 800e040:	2b02      	cmp	r3, #2
 800e042:	d91c      	bls.n	800e07e <_ZNKSt7codecvtIDsDu10_mbstate_tE6do_outERS0_PKDsS4_RS4_PDuS6_RS6_+0x5e>
 800e044:	8862      	ldrh	r2, [r4, #2]
 800e046:	f5a2 435c 	sub.w	r3, r2, #56320	; 0xdc00
 800e04a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800e04e:	d21e      	bcs.n	800e08e <_ZNKSt7codecvtIDsDu10_mbstate_tE6do_outERS0_PKDsS4_RS4_PDuS6_RS6_+0x6e>
 800e050:	f1a2 7257 	sub.w	r2, r2, #56360960	; 0x35c0000
 800e054:	f5a2 3277 	sub.w	r2, r2, #252928	; 0x3dc00
 800e058:	eb02 2181 	add.w	r1, r2, r1, lsl #10
 800e05c:	2602      	movs	r6, #2
 800e05e:	4668      	mov	r0, sp
 800e060:	f7ff fd6c 	bl	800db3c <_ZNSt12_GLOBAL__N_121write_utf8_code_pointIDuEEbRNS_5rangeIT_Lb1EEEDi>
 800e064:	b940      	cbnz	r0, 800e078 <_ZNKSt7codecvtIDsDu10_mbstate_tE6do_outERS0_PKDsS4_RS4_PDuS6_RS6_+0x58>
 800e066:	2001      	movs	r0, #1
 800e068:	e00a      	b.n	800e080 <_ZNKSt7codecvtIDsDu10_mbstate_tE6do_outERS0_PKDsS4_RS4_PDuS6_RS6_+0x60>
 800e06a:	f5a1 435c 	sub.w	r3, r1, #56320	; 0xdc00
 800e06e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800e072:	d30c      	bcc.n	800e08e <_ZNKSt7codecvtIDsDu10_mbstate_tE6do_outERS0_PKDsS4_RS4_PDuS6_RS6_+0x6e>
 800e074:	2601      	movs	r6, #1
 800e076:	e7f2      	b.n	800e05e <_ZNKSt7codecvtIDsDu10_mbstate_tE6do_outERS0_PKDsS4_RS4_PDuS6_RS6_+0x3e>
 800e078:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 800e07c:	e7d7      	b.n	800e02e <_ZNKSt7codecvtIDsDu10_mbstate_tE6do_outERS0_PKDsS4_RS4_PDuS6_RS6_+0xe>
 800e07e:	2000      	movs	r0, #0
 800e080:	9b06      	ldr	r3, [sp, #24]
 800e082:	9a00      	ldr	r2, [sp, #0]
 800e084:	601c      	str	r4, [r3, #0]
 800e086:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e088:	601a      	str	r2, [r3, #0]
 800e08a:	b002      	add	sp, #8
 800e08c:	bd70      	pop	{r4, r5, r6, pc}
 800e08e:	2002      	movs	r0, #2
 800e090:	e7f6      	b.n	800e080 <_ZNKSt7codecvtIDsDu10_mbstate_tE6do_outERS0_PKDsS4_RS4_PDuS6_RS6_+0x60>
	...

0800e094 <_ZNKSt7codecvtIDiDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDiS6_RS6_>:
 800e094:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e096:	e9dd 4507 	ldrd	r4, r5, [sp, #28]
 800e09a:	e9cd 2300 	strd	r2, r3, [sp]
 800e09e:	490f      	ldr	r1, [pc, #60]	; (800e0dc <_ZNKSt7codecvtIDiDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDiS6_RS6_+0x48>)
 800e0a0:	e9dd 3200 	ldrd	r3, r2, [sp]
 800e0a4:	429a      	cmp	r2, r3
 800e0a6:	d014      	beq.n	800e0d2 <_ZNKSt7codecvtIDiDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDiS6_RS6_+0x3e>
 800e0a8:	42a5      	cmp	r5, r4
 800e0aa:	d107      	bne.n	800e0bc <_ZNKSt7codecvtIDiDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDiS6_RS6_+0x28>
 800e0ac:	2001      	movs	r0, #1
 800e0ae:	9b06      	ldr	r3, [sp, #24]
 800e0b0:	9a00      	ldr	r2, [sp, #0]
 800e0b2:	601a      	str	r2, [r3, #0]
 800e0b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e0b6:	601c      	str	r4, [r3, #0]
 800e0b8:	b003      	add	sp, #12
 800e0ba:	bd30      	pop	{r4, r5, pc}
 800e0bc:	4668      	mov	r0, sp
 800e0be:	f7ff fc83 	bl	800d9c8 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm>
 800e0c2:	1c83      	adds	r3, r0, #2
 800e0c4:	d0f2      	beq.n	800e0ac <_ZNKSt7codecvtIDiDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDiS6_RS6_+0x18>
 800e0c6:	f5b0 1f88 	cmp.w	r0, #1114112	; 0x110000
 800e0ca:	d204      	bcs.n	800e0d6 <_ZNKSt7codecvtIDiDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDiS6_RS6_+0x42>
 800e0cc:	f844 0b04 	str.w	r0, [r4], #4
 800e0d0:	e7e6      	b.n	800e0a0 <_ZNKSt7codecvtIDiDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDiS6_RS6_+0xc>
 800e0d2:	2000      	movs	r0, #0
 800e0d4:	e7eb      	b.n	800e0ae <_ZNKSt7codecvtIDiDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDiS6_RS6_+0x1a>
 800e0d6:	2002      	movs	r0, #2
 800e0d8:	e7e9      	b.n	800e0ae <_ZNKSt7codecvtIDiDu10_mbstate_tE5do_inERS0_PKDuS4_RS4_PDiS6_RS6_+0x1a>
 800e0da:	bf00      	nop
 800e0dc:	0010ffff 	.word	0x0010ffff

0800e0e0 <_ZNKSt7codecvtIDiDu10_mbstate_tE9do_lengthERS0_PKDuS4_j>:
 800e0e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e0e2:	e9cd 2300 	strd	r2, r3, [sp]
 800e0e6:	9d06      	ldr	r5, [sp, #24]
 800e0e8:	4908      	ldr	r1, [pc, #32]	; (800e10c <_ZNKSt7codecvtIDiDu10_mbstate_tE9do_lengthERS0_PKDuS4_j+0x2c>)
 800e0ea:	4614      	mov	r4, r2
 800e0ec:	2000      	movs	r0, #0
 800e0ee:	b145      	cbz	r5, 800e102 <_ZNKSt7codecvtIDiDu10_mbstate_tE9do_lengthERS0_PKDuS4_j+0x22>
 800e0f0:	f5b0 1f88 	cmp.w	r0, #1114112	; 0x110000
 800e0f4:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 800e0f8:	d203      	bcs.n	800e102 <_ZNKSt7codecvtIDiDu10_mbstate_tE9do_lengthERS0_PKDuS4_j+0x22>
 800e0fa:	4668      	mov	r0, sp
 800e0fc:	f7ff fc64 	bl	800d9c8 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm>
 800e100:	e7f5      	b.n	800e0ee <_ZNKSt7codecvtIDiDu10_mbstate_tE9do_lengthERS0_PKDuS4_j+0xe>
 800e102:	9800      	ldr	r0, [sp, #0]
 800e104:	1b00      	subs	r0, r0, r4
 800e106:	b003      	add	sp, #12
 800e108:	bd30      	pop	{r4, r5, pc}
 800e10a:	bf00      	nop
 800e10c:	0010ffff 	.word	0x0010ffff

0800e110 <_ZNKSt7codecvtIDsDu10_mbstate_tE9do_lengthERS0_PKDuS4_j>:
 800e110:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e112:	e9cd 2300 	strd	r2, r3, [sp]
 800e116:	9e08      	ldr	r6, [sp, #32]
 800e118:	490e      	ldr	r1, [pc, #56]	; (800e154 <_ZNKSt7codecvtIDsDu10_mbstate_tE9do_lengthERS0_PKDuS4_j+0x44>)
 800e11a:	4615      	mov	r5, r2
 800e11c:	2400      	movs	r4, #0
 800e11e:	1c67      	adds	r7, r4, #1
 800e120:	42be      	cmp	r6, r7
 800e122:	d90f      	bls.n	800e144 <_ZNKSt7codecvtIDsDu10_mbstate_tE9do_lengthERS0_PKDuS4_j+0x34>
 800e124:	4668      	mov	r0, sp
 800e126:	f7ff fc4f 	bl	800d9c8 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm>
 800e12a:	f5b0 1f88 	cmp.w	r0, #1114112	; 0x110000
 800e12e:	d303      	bcc.n	800e138 <_ZNKSt7codecvtIDsDu10_mbstate_tE9do_lengthERS0_PKDuS4_j+0x28>
 800e130:	9800      	ldr	r0, [sp, #0]
 800e132:	1b40      	subs	r0, r0, r5
 800e134:	b003      	add	sp, #12
 800e136:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e138:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 800e13c:	bf28      	it	cs
 800e13e:	463c      	movcs	r4, r7
 800e140:	3401      	adds	r4, #1
 800e142:	e7ec      	b.n	800e11e <_ZNKSt7codecvtIDsDu10_mbstate_tE9do_lengthERS0_PKDuS4_j+0xe>
 800e144:	d1f4      	bne.n	800e130 <_ZNKSt7codecvtIDsDu10_mbstate_tE9do_lengthERS0_PKDuS4_j+0x20>
 800e146:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e14a:	4668      	mov	r0, sp
 800e14c:	f7ff fc3c 	bl	800d9c8 <_ZNSt12_GLOBAL__N_120read_utf8_code_pointIDuEEDiRNS_5rangeIKT_Lb1EEEm>
 800e150:	e7ee      	b.n	800e130 <_ZNKSt7codecvtIDsDu10_mbstate_tE9do_lengthERS0_PKDuS4_j+0x20>
 800e152:	bf00      	nop
 800e154:	0010ffff 	.word	0x0010ffff

0800e158 <_ZNSt7codecvtIDiDu10_mbstate_tED1Ev>:
 800e158:	b510      	push	{r4, lr}
 800e15a:	4b03      	ldr	r3, [pc, #12]	; (800e168 <_ZNSt7codecvtIDiDu10_mbstate_tED1Ev+0x10>)
 800e15c:	6003      	str	r3, [r0, #0]
 800e15e:	4604      	mov	r4, r0
 800e160:	f7fe f89a 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800e164:	4620      	mov	r0, r4
 800e166:	bd10      	pop	{r4, pc}
 800e168:	0802eb1c 	.word	0x0802eb1c

0800e16c <_ZNSt7codecvtIDiDu10_mbstate_tED0Ev>:
 800e16c:	b510      	push	{r4, lr}
 800e16e:	4604      	mov	r4, r0
 800e170:	f7ff fff2 	bl	800e158 <_ZNSt7codecvtIDiDu10_mbstate_tED1Ev>
 800e174:	4620      	mov	r0, r4
 800e176:	f015 fea9 	bl	8023ecc <_ZdlPv>
 800e17a:	4620      	mov	r0, r4
 800e17c:	bd10      	pop	{r4, pc}
	...

0800e180 <_ZNSt7codecvtIDsc10_mbstate_tED1Ev>:
 800e180:	b510      	push	{r4, lr}
 800e182:	4b03      	ldr	r3, [pc, #12]	; (800e190 <_ZNSt7codecvtIDsc10_mbstate_tED1Ev+0x10>)
 800e184:	6003      	str	r3, [r0, #0]
 800e186:	4604      	mov	r4, r0
 800e188:	f7fe f886 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800e18c:	4620      	mov	r0, r4
 800e18e:	bd10      	pop	{r4, pc}
 800e190:	0802ea98 	.word	0x0802ea98

0800e194 <_ZNSt7codecvtIDsc10_mbstate_tED0Ev>:
 800e194:	b510      	push	{r4, lr}
 800e196:	4604      	mov	r4, r0
 800e198:	f7ff fff2 	bl	800e180 <_ZNSt7codecvtIDsc10_mbstate_tED1Ev>
 800e19c:	4620      	mov	r0, r4
 800e19e:	f015 fe95 	bl	8023ecc <_ZdlPv>
 800e1a2:	4620      	mov	r0, r4
 800e1a4:	bd10      	pop	{r4, pc}
	...

0800e1a8 <_ZNSt7codecvtIDic10_mbstate_tED1Ev>:
 800e1a8:	b510      	push	{r4, lr}
 800e1aa:	4b03      	ldr	r3, [pc, #12]	; (800e1b8 <_ZNSt7codecvtIDic10_mbstate_tED1Ev+0x10>)
 800e1ac:	6003      	str	r3, [r0, #0]
 800e1ae:	4604      	mov	r4, r0
 800e1b0:	f7fe f872 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800e1b4:	4620      	mov	r0, r4
 800e1b6:	bd10      	pop	{r4, pc}
 800e1b8:	0802eac4 	.word	0x0802eac4

0800e1bc <_ZNSt7codecvtIDic10_mbstate_tED0Ev>:
 800e1bc:	b510      	push	{r4, lr}
 800e1be:	4604      	mov	r4, r0
 800e1c0:	f7ff fff2 	bl	800e1a8 <_ZNSt7codecvtIDic10_mbstate_tED1Ev>
 800e1c4:	4620      	mov	r0, r4
 800e1c6:	f015 fe81 	bl	8023ecc <_ZdlPv>
 800e1ca:	4620      	mov	r0, r4
 800e1cc:	bd10      	pop	{r4, pc}
	...

0800e1d0 <_ZNSt7codecvtIDsDu10_mbstate_tED1Ev>:
 800e1d0:	b510      	push	{r4, lr}
 800e1d2:	4b03      	ldr	r3, [pc, #12]	; (800e1e0 <_ZNSt7codecvtIDsDu10_mbstate_tED1Ev+0x10>)
 800e1d4:	6003      	str	r3, [r0, #0]
 800e1d6:	4604      	mov	r4, r0
 800e1d8:	f7fe f85e 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 800e1dc:	4620      	mov	r0, r4
 800e1de:	bd10      	pop	{r4, pc}
 800e1e0:	0802eaf0 	.word	0x0802eaf0

0800e1e4 <_ZNSt7codecvtIDsDu10_mbstate_tED0Ev>:
 800e1e4:	b510      	push	{r4, lr}
 800e1e6:	4604      	mov	r4, r0
 800e1e8:	f7ff fff2 	bl	800e1d0 <_ZNSt7codecvtIDsDu10_mbstate_tED1Ev>
 800e1ec:	4620      	mov	r0, r4
 800e1ee:	f015 fe6d 	bl	8023ecc <_ZdlPv>
 800e1f2:	4620      	mov	r0, r4
 800e1f4:	bd10      	pop	{r4, pc}
	...

0800e1f8 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE>:
 800e1f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1fc:	b089      	sub	sp, #36	; 0x24
 800e1fe:	680b      	ldr	r3, [r1, #0]
 800e200:	9301      	str	r3, [sp, #4]
 800e202:	684b      	ldr	r3, [r1, #4]
 800e204:	4fa9      	ldr	r7, [pc, #676]	; (800e4ac <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2b4>)
 800e206:	9302      	str	r3, [sp, #8]
 800e208:	688b      	ldr	r3, [r1, #8]
 800e20a:	9303      	str	r3, [sp, #12]
 800e20c:	4ba8      	ldr	r3, [pc, #672]	; (800e4b0 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2b8>)
 800e20e:	603b      	str	r3, [r7, #0]
 800e210:	2501      	movs	r5, #1
 800e212:	9b01      	ldr	r3, [sp, #4]
 800e214:	607d      	str	r5, [r7, #4]
 800e216:	4604      	mov	r4, r0
 800e218:	460e      	mov	r6, r1
 800e21a:	60bb      	str	r3, [r7, #8]
 800e21c:	2100      	movs	r1, #0
 800e21e:	4638      	mov	r0, r7
 800e220:	f7ff fa7e 	bl	800d720 <_ZNSt8numpunctIcE22_M_initialize_numpunctEPi>
 800e224:	687b      	ldr	r3, [r7, #4]
 800e226:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800e22a:	f8df b318 	ldr.w	fp, [pc, #792]	; 800e544 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x34c>
 800e22e:	f8df a318 	ldr.w	sl, [pc, #792]	; 800e548 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x350>
 800e232:	442b      	add	r3, r5
 800e234:	607b      	str	r3, [r7, #4]
 800e236:	4b9f      	ldr	r3, [pc, #636]	; (800e4b4 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2bc>)
 800e238:	4618      	mov	r0, r3
 800e23a:	f7fe f8cb 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e23e:	f848 7020 	str.w	r7, [r8, r0, lsl #2]
 800e242:	4f9d      	ldr	r7, [pc, #628]	; (800e4b8 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2c0>)
 800e244:	4a9d      	ldr	r2, [pc, #628]	; (800e4bc <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2c4>)
 800e246:	607d      	str	r5, [r7, #4]
 800e248:	603a      	str	r2, [r7, #0]
 800e24a:	f7fe f847 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 800e24e:	687a      	ldr	r2, [r7, #4]
 800e250:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800e254:	60b8      	str	r0, [r7, #8]
 800e256:	442a      	add	r2, r5
 800e258:	607a      	str	r2, [r7, #4]
 800e25a:	4899      	ldr	r0, [pc, #612]	; (800e4c0 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2c8>)
 800e25c:	f7fe f8ba 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e260:	f848 7020 	str.w	r7, [r8, r0, lsl #2]
 800e264:	4f97      	ldr	r7, [pc, #604]	; (800e4c4 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2cc>)
 800e266:	4a98      	ldr	r2, [pc, #608]	; (800e4c8 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2d0>)
 800e268:	9b02      	ldr	r3, [sp, #8]
 800e26a:	603a      	str	r2, [r7, #0]
 800e26c:	2200      	movs	r2, #0
 800e26e:	60bb      	str	r3, [r7, #8]
 800e270:	4611      	mov	r1, r2
 800e272:	607d      	str	r5, [r7, #4]
 800e274:	4638      	mov	r0, r7
 800e276:	f7fe ffff 	bl	800d278 <_ZNSt10moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc>
 800e27a:	687a      	ldr	r2, [r7, #4]
 800e27c:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800e280:	442a      	add	r2, r5
 800e282:	607a      	str	r2, [r7, #4]
 800e284:	4658      	mov	r0, fp
 800e286:	f7fe f8a5 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e28a:	f848 7020 	str.w	r7, [r8, r0, lsl #2]
 800e28e:	4f8f      	ldr	r7, [pc, #572]	; (800e4cc <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2d4>)
 800e290:	4a8f      	ldr	r2, [pc, #572]	; (800e4d0 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2d8>)
 800e292:	9b03      	ldr	r3, [sp, #12]
 800e294:	603a      	str	r2, [r7, #0]
 800e296:	2200      	movs	r2, #0
 800e298:	60bb      	str	r3, [r7, #8]
 800e29a:	4611      	mov	r1, r2
 800e29c:	607d      	str	r5, [r7, #4]
 800e29e:	4638      	mov	r0, r7
 800e2a0:	f7fe ffa6 	bl	800d1f0 <_ZNSt10moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc>
 800e2a4:	687a      	ldr	r2, [r7, #4]
 800e2a6:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800e2aa:	442a      	add	r2, r5
 800e2ac:	607a      	str	r2, [r7, #4]
 800e2ae:	4650      	mov	r0, sl
 800e2b0:	f7fe f890 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e2b4:	f848 7020 	str.w	r7, [r8, r0, lsl #2]
 800e2b8:	f8df 8290 	ldr.w	r8, [pc, #656]	; 800e54c <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x354>
 800e2bc:	4a85      	ldr	r2, [pc, #532]	; (800e4d4 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2dc>)
 800e2be:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800e2c2:	f8c8 2000 	str.w	r2, [r8]
 800e2c6:	2702      	movs	r7, #2
 800e2c8:	f8c8 7004 	str.w	r7, [r8, #4]
 800e2cc:	4882      	ldr	r0, [pc, #520]	; (800e4d8 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2e0>)
 800e2ce:	f7fe f881 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e2d2:	f849 8020 	str.w	r8, [r9, r0, lsl #2]
 800e2d6:	f8df 8278 	ldr.w	r8, [pc, #632]	; 800e550 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x358>
 800e2da:	4a80      	ldr	r2, [pc, #512]	; (800e4dc <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2e4>)
 800e2dc:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800e2e0:	f8c8 2000 	str.w	r2, [r8]
 800e2e4:	f8c8 7004 	str.w	r7, [r8, #4]
 800e2e8:	487d      	ldr	r0, [pc, #500]	; (800e4e0 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2e8>)
 800e2ea:	f7fe f873 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e2ee:	f849 8020 	str.w	r8, [r9, r0, lsl #2]
 800e2f2:	f8df 8260 	ldr.w	r8, [pc, #608]	; 800e554 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x35c>
 800e2f6:	4a7b      	ldr	r2, [pc, #492]	; (800e4e4 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2ec>)
 800e2f8:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800e2fc:	f8c8 2000 	str.w	r2, [r8]
 800e300:	f8c8 7004 	str.w	r7, [r8, #4]
 800e304:	4878      	ldr	r0, [pc, #480]	; (800e4e8 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2f0>)
 800e306:	f7fe f865 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e30a:	f849 8020 	str.w	r8, [r9, r0, lsl #2]
 800e30e:	f8df 8248 	ldr.w	r8, [pc, #584]	; 800e558 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x360>
 800e312:	4629      	mov	r1, r5
 800e314:	4640      	mov	r0, r8
 800e316:	f00a f919 	bl	801854c <_ZNSt8messagesIcEC1Ej>
 800e31a:	f8d8 2004 	ldr.w	r2, [r8, #4]
 800e31e:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800e322:	4872      	ldr	r0, [pc, #456]	; (800e4ec <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2f4>)
 800e324:	442a      	add	r2, r5
 800e326:	f8c8 2004 	str.w	r2, [r8, #4]
 800e32a:	f7fe f853 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e32e:	f849 8020 	str.w	r8, [r9, r0, lsl #2]
 800e332:	68f3      	ldr	r3, [r6, #12]
 800e334:	9304      	str	r3, [sp, #16]
 800e336:	6933      	ldr	r3, [r6, #16]
 800e338:	9305      	str	r3, [sp, #20]
 800e33a:	6973      	ldr	r3, [r6, #20]
 800e33c:	4e6c      	ldr	r6, [pc, #432]	; (800e4f0 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2f8>)
 800e33e:	4a6d      	ldr	r2, [pc, #436]	; (800e4f4 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2fc>)
 800e340:	9306      	str	r3, [sp, #24]
 800e342:	9b04      	ldr	r3, [sp, #16]
 800e344:	60b3      	str	r3, [r6, #8]
 800e346:	2100      	movs	r1, #0
 800e348:	6075      	str	r5, [r6, #4]
 800e34a:	6032      	str	r2, [r6, #0]
 800e34c:	4630      	mov	r0, r6
 800e34e:	f7ff fa4f 	bl	800d7f0 <_ZNSt8numpunctIwE22_M_initialize_numpunctEPi>
 800e352:	6872      	ldr	r2, [r6, #4]
 800e354:	f8df 9204 	ldr.w	r9, [pc, #516]	; 800e55c <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x364>
 800e358:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800e35c:	442a      	add	r2, r5
 800e35e:	6072      	str	r2, [r6, #4]
 800e360:	4648      	mov	r0, r9
 800e362:	f7fe f837 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e366:	f848 6020 	str.w	r6, [r8, r0, lsl #2]
 800e36a:	4e63      	ldr	r6, [pc, #396]	; (800e4f8 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x300>)
 800e36c:	4a63      	ldr	r2, [pc, #396]	; (800e4fc <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x304>)
 800e36e:	6075      	str	r5, [r6, #4]
 800e370:	6032      	str	r2, [r6, #0]
 800e372:	f7fd ffb3 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 800e376:	6872      	ldr	r2, [r6, #4]
 800e378:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800e37c:	60b0      	str	r0, [r6, #8]
 800e37e:	442a      	add	r2, r5
 800e380:	6072      	str	r2, [r6, #4]
 800e382:	485f      	ldr	r0, [pc, #380]	; (800e500 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x308>)
 800e384:	f7fe f826 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e388:	f848 6020 	str.w	r6, [r8, r0, lsl #2]
 800e38c:	4e5d      	ldr	r6, [pc, #372]	; (800e504 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x30c>)
 800e38e:	4a5e      	ldr	r2, [pc, #376]	; (800e508 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x310>)
 800e390:	9b05      	ldr	r3, [sp, #20]
 800e392:	6032      	str	r2, [r6, #0]
 800e394:	2200      	movs	r2, #0
 800e396:	60b3      	str	r3, [r6, #8]
 800e398:	6075      	str	r5, [r6, #4]
 800e39a:	4611      	mov	r1, r2
 800e39c:	4630      	mov	r0, r6
 800e39e:	f7ff f82b 	bl	800d3f8 <_ZNSt10moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc>
 800e3a2:	6872      	ldr	r2, [r6, #4]
 800e3a4:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 800e560 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x368>
 800e3a8:	6861      	ldr	r1, [r4, #4]
 800e3aa:	9107      	str	r1, [sp, #28]
 800e3ac:	442a      	add	r2, r5
 800e3ae:	6072      	str	r2, [r6, #4]
 800e3b0:	4640      	mov	r0, r8
 800e3b2:	f7fe f80f 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e3b6:	9907      	ldr	r1, [sp, #28]
 800e3b8:	4a54      	ldr	r2, [pc, #336]	; (800e50c <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x314>)
 800e3ba:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
 800e3be:	4e54      	ldr	r6, [pc, #336]	; (800e510 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x318>)
 800e3c0:	9b06      	ldr	r3, [sp, #24]
 800e3c2:	6032      	str	r2, [r6, #0]
 800e3c4:	2200      	movs	r2, #0
 800e3c6:	60b3      	str	r3, [r6, #8]
 800e3c8:	6075      	str	r5, [r6, #4]
 800e3ca:	4611      	mov	r1, r2
 800e3cc:	4630      	mov	r0, r6
 800e3ce:	f7fe ffcb 	bl	800d368 <_ZNSt10moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc>
 800e3d2:	6872      	ldr	r2, [r6, #4]
 800e3d4:	6861      	ldr	r1, [r4, #4]
 800e3d6:	9107      	str	r1, [sp, #28]
 800e3d8:	442a      	add	r2, r5
 800e3da:	6072      	str	r2, [r6, #4]
 800e3dc:	4a4d      	ldr	r2, [pc, #308]	; (800e514 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x31c>)
 800e3de:	4610      	mov	r0, r2
 800e3e0:	f7fd fff8 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e3e4:	9907      	ldr	r1, [sp, #28]
 800e3e6:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
 800e3ea:	4e4b      	ldr	r6, [pc, #300]	; (800e518 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x320>)
 800e3ec:	494b      	ldr	r1, [pc, #300]	; (800e51c <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x324>)
 800e3ee:	6031      	str	r1, [r6, #0]
 800e3f0:	484b      	ldr	r0, [pc, #300]	; (800e520 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x328>)
 800e3f2:	6861      	ldr	r1, [r4, #4]
 800e3f4:	6077      	str	r7, [r6, #4]
 800e3f6:	9107      	str	r1, [sp, #28]
 800e3f8:	f7fd ffec 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e3fc:	9907      	ldr	r1, [sp, #28]
 800e3fe:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
 800e402:	4e48      	ldr	r6, [pc, #288]	; (800e524 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x32c>)
 800e404:	4948      	ldr	r1, [pc, #288]	; (800e528 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x330>)
 800e406:	6031      	str	r1, [r6, #0]
 800e408:	4848      	ldr	r0, [pc, #288]	; (800e52c <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x334>)
 800e40a:	6861      	ldr	r1, [r4, #4]
 800e40c:	6077      	str	r7, [r6, #4]
 800e40e:	9107      	str	r1, [sp, #28]
 800e410:	f7fd ffe0 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e414:	9907      	ldr	r1, [sp, #28]
 800e416:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
 800e41a:	4e45      	ldr	r6, [pc, #276]	; (800e530 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x338>)
 800e41c:	4945      	ldr	r1, [pc, #276]	; (800e534 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x33c>)
 800e41e:	6031      	str	r1, [r6, #0]
 800e420:	4845      	ldr	r0, [pc, #276]	; (800e538 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x340>)
 800e422:	6861      	ldr	r1, [r4, #4]
 800e424:	6077      	str	r7, [r6, #4]
 800e426:	9107      	str	r1, [sp, #28]
 800e428:	f7fd ffd4 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e42c:	9907      	ldr	r1, [sp, #28]
 800e42e:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
 800e432:	4e42      	ldr	r6, [pc, #264]	; (800e53c <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x344>)
 800e434:	4629      	mov	r1, r5
 800e436:	4630      	mov	r0, r6
 800e438:	f010 fae2 	bl	801ea00 <_ZNSt8messagesIwEC1Ej>
 800e43c:	6871      	ldr	r1, [r6, #4]
 800e43e:	6865      	ldr	r5, [r4, #4]
 800e440:	483f      	ldr	r0, [pc, #252]	; (800e540 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x348>)
 800e442:	3101      	adds	r1, #1
 800e444:	6071      	str	r1, [r6, #4]
 800e446:	f7fd ffc5 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e44a:	4b1a      	ldr	r3, [pc, #104]	; (800e4b4 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x2bc>)
 800e44c:	f845 6020 	str.w	r6, [r5, r0, lsl #2]
 800e450:	4618      	mov	r0, r3
 800e452:	68e5      	ldr	r5, [r4, #12]
 800e454:	f7fd ffbe 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e458:	9b01      	ldr	r3, [sp, #4]
 800e45a:	f845 3020 	str.w	r3, [r5, r0, lsl #2]
 800e45e:	4658      	mov	r0, fp
 800e460:	68e5      	ldr	r5, [r4, #12]
 800e462:	f7fd ffb7 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e466:	9b02      	ldr	r3, [sp, #8]
 800e468:	f845 3020 	str.w	r3, [r5, r0, lsl #2]
 800e46c:	4650      	mov	r0, sl
 800e46e:	68e5      	ldr	r5, [r4, #12]
 800e470:	f7fd ffb0 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e474:	9b03      	ldr	r3, [sp, #12]
 800e476:	f845 3020 	str.w	r3, [r5, r0, lsl #2]
 800e47a:	4648      	mov	r0, r9
 800e47c:	68e5      	ldr	r5, [r4, #12]
 800e47e:	f7fd ffa9 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e482:	9b04      	ldr	r3, [sp, #16]
 800e484:	f845 3020 	str.w	r3, [r5, r0, lsl #2]
 800e488:	4640      	mov	r0, r8
 800e48a:	68e5      	ldr	r5, [r4, #12]
 800e48c:	f7fd ffa2 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e490:	4a20      	ldr	r2, [pc, #128]	; (800e514 <_ZNSt6locale5_Impl13_M_init_extraEPPNS_5facetE+0x31c>)
 800e492:	9b05      	ldr	r3, [sp, #20]
 800e494:	f845 3020 	str.w	r3, [r5, r0, lsl #2]
 800e498:	4610      	mov	r0, r2
 800e49a:	68e4      	ldr	r4, [r4, #12]
 800e49c:	f7fd ff9a 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 800e4a0:	9b06      	ldr	r3, [sp, #24]
 800e4a2:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800e4a6:	b009      	add	sp, #36	; 0x24
 800e4a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e4ac:	20003b54 	.word	0x20003b54
 800e4b0:	08030924 	.word	0x08030924
 800e4b4:	20003cdc 	.word	0x20003cdc
 800e4b8:	20003bcc 	.word	0x20003bcc
 800e4bc:	08030908 	.word	0x08030908
 800e4c0:	20003cc0 	.word	0x20003cc0
 800e4c4:	20003b9c 	.word	0x20003b9c
 800e4c8:	08030a08 	.word	0x08030a08
 800e4cc:	20003ba8 	.word	0x20003ba8
 800e4d0:	080309d4 	.word	0x080309d4
 800e4d4:	08030a84 	.word	0x08030a84
 800e4d8:	20003ce4 	.word	0x20003ce4
 800e4dc:	08030a9c 	.word	0x08030a9c
 800e4e0:	20003ce0 	.word	0x20003ce0
 800e4e4:	08030ac8 	.word	0x08030ac8
 800e4e8:	20003cc8 	.word	0x20003cc8
 800e4ec:	20003cc4 	.word	0x20003cc4
 800e4f0:	20003b60 	.word	0x20003b60
 800e4f4:	0803111c 	.word	0x0803111c
 800e4f8:	20003bd8 	.word	0x20003bd8
 800e4fc:	080310c0 	.word	0x080310c0
 800e500:	20003d20 	.word	0x20003d20
 800e504:	20003bb4 	.word	0x20003bb4
 800e508:	08031200 	.word	0x08031200
 800e50c:	080311cc 	.word	0x080311cc
 800e510:	20003bc0 	.word	0x20003bc0
 800e514:	20003d48 	.word	0x20003d48
 800e518:	20003b84 	.word	0x20003b84
 800e51c:	0803127c 	.word	0x0803127c
 800e520:	20003d44 	.word	0x20003d44
 800e524:	20003b94 	.word	0x20003b94
 800e528:	08031294 	.word	0x08031294
 800e52c:	20003d40 	.word	0x20003d40
 800e530:	20003b74 	.word	0x20003b74
 800e534:	080312c0 	.word	0x080312c0
 800e538:	20003d28 	.word	0x20003d28
 800e53c:	20003b44 	.word	0x20003b44
 800e540:	20003d24 	.word	0x20003d24
 800e544:	20003cec 	.word	0x20003cec
 800e548:	20003ce8 	.word	0x20003ce8
 800e54c:	20003b7c 	.word	0x20003b7c
 800e550:	20003b8c 	.word	0x20003b8c
 800e554:	20003b6c 	.word	0x20003b6c
 800e558:	20003b34 	.word	0x20003b34
 800e55c:	20003d3c 	.word	0x20003d3c
 800e560:	20003d4c 	.word	0x20003d4c

0800e564 <_ZNSt13__facet_shims12_GLOBAL__N_116__destroy_stringIcEEvPv>:
 800e564:	f001 bd4e 	b.w	8010004 <_ZNSsD1Ev>

0800e568 <_ZNSt13__facet_shims12_GLOBAL__N_116__destroy_stringIwEEvPv>:
 800e568:	f002 b8f8 	b.w	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>

0800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>:
 800e56c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e56e:	680b      	ldr	r3, [r1, #0]
 800e570:	f853 5c0c 	ldr.w	r5, [r3, #-12]
 800e574:	4607      	mov	r7, r0
 800e576:	1c68      	adds	r0, r5, #1
 800e578:	460e      	mov	r6, r1
 800e57a:	f015 fd2f 	bl	8023fdc <_Znaj>
 800e57e:	2300      	movs	r3, #0
 800e580:	4604      	mov	r4, r0
 800e582:	4601      	mov	r1, r0
 800e584:	462a      	mov	r2, r5
 800e586:	4630      	mov	r0, r6
 800e588:	f001 fc72 	bl	800fe70 <_ZNKSs4copyEPcjj>
 800e58c:	2300      	movs	r3, #0
 800e58e:	5563      	strb	r3, [r4, r5]
 800e590:	603c      	str	r4, [r7, #0]
 800e592:	4628      	mov	r0, r5
 800e594:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e596 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>:
 800e596:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e598:	680b      	ldr	r3, [r1, #0]
 800e59a:	f853 5c0c 	ldr.w	r5, [r3, #-12]
 800e59e:	f06f 4260 	mvn.w	r2, #3758096384	; 0xe0000000
 800e5a2:	1c6b      	adds	r3, r5, #1
 800e5a4:	4293      	cmp	r3, r2
 800e5a6:	4607      	mov	r7, r0
 800e5a8:	bf34      	ite	cc
 800e5aa:	0098      	lslcc	r0, r3, #2
 800e5ac:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800e5b0:	460e      	mov	r6, r1
 800e5b2:	f015 fd13 	bl	8023fdc <_Znaj>
 800e5b6:	2300      	movs	r3, #0
 800e5b8:	4604      	mov	r4, r0
 800e5ba:	4601      	mov	r1, r0
 800e5bc:	462a      	mov	r2, r5
 800e5be:	4630      	mov	r0, r6
 800e5c0:	f002 f810 	bl	80105e4 <_ZNKSbIwSt11char_traitsIwESaIwEE4copyEPwjj>
 800e5c4:	2300      	movs	r3, #0
 800e5c6:	f844 3025 	str.w	r3, [r4, r5, lsl #2]
 800e5ca:	603c      	str	r4, [r7, #0]
 800e5cc:	4628      	mov	r0, r5
 800e5ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e5d0 <_ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIcE10do_compareEPKcS4_S4_S4_>:
 800e5d0:	b513      	push	{r0, r1, r4, lr}
 800e5d2:	9c04      	ldr	r4, [sp, #16]
 800e5d4:	e9cd 3400 	strd	r3, r4, [sp]
 800e5d8:	4613      	mov	r3, r2
 800e5da:	460a      	mov	r2, r1
 800e5dc:	68c1      	ldr	r1, [r0, #12]
 800e5de:	f04f 0000 	mov.w	r0, #0
 800e5e2:	f005 fd4a 	bl	801407a <_ZNSt13__facet_shims17__collate_compareIcEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKT_S9_S9_S9_>
 800e5e6:	b002      	add	sp, #8
 800e5e8:	bd10      	pop	{r4, pc}

0800e5ea <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE11do_get_yearESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 800e5ea:	b530      	push	{r4, r5, lr}
 800e5ec:	b08b      	sub	sp, #44	; 0x2c
 800e5ee:	460d      	mov	r5, r1
 800e5f0:	a90a      	add	r1, sp, #40	; 0x28
 800e5f2:	e901 000c 	stmdb	r1, {r2, r3}
 800e5f6:	2379      	movs	r3, #121	; 0x79
 800e5f8:	9306      	str	r3, [sp, #24]
 800e5fa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e5fc:	9305      	str	r3, [sp, #20]
 800e5fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e600:	9304      	str	r3, [sp, #16]
 800e602:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e604:	9303      	str	r3, [sp, #12]
 800e606:	aa0e      	add	r2, sp, #56	; 0x38
 800e608:	4604      	mov	r4, r0
 800e60a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e60e:	ab01      	add	r3, sp, #4
 800e610:	e883 0003 	stmia.w	r3, {r0, r1}
 800e614:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e616:	9300      	str	r3, [sp, #0]
 800e618:	4620      	mov	r0, r4
 800e61a:	9b08      	ldr	r3, [sp, #32]
 800e61c:	68aa      	ldr	r2, [r5, #8]
 800e61e:	f04f 0100 	mov.w	r1, #0
 800e622:	f005 fed2 	bl	80143ca <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 800e626:	4620      	mov	r0, r4
 800e628:	b00b      	add	sp, #44	; 0x2c
 800e62a:	bd30      	pop	{r4, r5, pc}

0800e62c <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE16do_get_monthnameESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 800e62c:	b530      	push	{r4, r5, lr}
 800e62e:	b08b      	sub	sp, #44	; 0x2c
 800e630:	460d      	mov	r5, r1
 800e632:	a90a      	add	r1, sp, #40	; 0x28
 800e634:	e901 000c 	stmdb	r1, {r2, r3}
 800e638:	236d      	movs	r3, #109	; 0x6d
 800e63a:	9306      	str	r3, [sp, #24]
 800e63c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e63e:	9305      	str	r3, [sp, #20]
 800e640:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e642:	9304      	str	r3, [sp, #16]
 800e644:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e646:	9303      	str	r3, [sp, #12]
 800e648:	aa0e      	add	r2, sp, #56	; 0x38
 800e64a:	4604      	mov	r4, r0
 800e64c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e650:	ab01      	add	r3, sp, #4
 800e652:	e883 0003 	stmia.w	r3, {r0, r1}
 800e656:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e658:	9300      	str	r3, [sp, #0]
 800e65a:	4620      	mov	r0, r4
 800e65c:	9b08      	ldr	r3, [sp, #32]
 800e65e:	68aa      	ldr	r2, [r5, #8]
 800e660:	f04f 0100 	mov.w	r1, #0
 800e664:	f005 feb1 	bl	80143ca <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 800e668:	4620      	mov	r0, r4
 800e66a:	b00b      	add	sp, #44	; 0x2c
 800e66c:	bd30      	pop	{r4, r5, pc}

0800e66e <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE14do_get_weekdayESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 800e66e:	b530      	push	{r4, r5, lr}
 800e670:	b08b      	sub	sp, #44	; 0x2c
 800e672:	460d      	mov	r5, r1
 800e674:	a90a      	add	r1, sp, #40	; 0x28
 800e676:	e901 000c 	stmdb	r1, {r2, r3}
 800e67a:	2377      	movs	r3, #119	; 0x77
 800e67c:	9306      	str	r3, [sp, #24]
 800e67e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e680:	9305      	str	r3, [sp, #20]
 800e682:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e684:	9304      	str	r3, [sp, #16]
 800e686:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e688:	9303      	str	r3, [sp, #12]
 800e68a:	aa0e      	add	r2, sp, #56	; 0x38
 800e68c:	4604      	mov	r4, r0
 800e68e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e692:	ab01      	add	r3, sp, #4
 800e694:	e883 0003 	stmia.w	r3, {r0, r1}
 800e698:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e69a:	9300      	str	r3, [sp, #0]
 800e69c:	4620      	mov	r0, r4
 800e69e:	9b08      	ldr	r3, [sp, #32]
 800e6a0:	68aa      	ldr	r2, [r5, #8]
 800e6a2:	f04f 0100 	mov.w	r1, #0
 800e6a6:	f005 fe90 	bl	80143ca <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 800e6aa:	4620      	mov	r0, r4
 800e6ac:	b00b      	add	sp, #44	; 0x2c
 800e6ae:	bd30      	pop	{r4, r5, pc}

0800e6b0 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE11do_get_dateESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 800e6b0:	b530      	push	{r4, r5, lr}
 800e6b2:	b08b      	sub	sp, #44	; 0x2c
 800e6b4:	460d      	mov	r5, r1
 800e6b6:	a90a      	add	r1, sp, #40	; 0x28
 800e6b8:	e901 000c 	stmdb	r1, {r2, r3}
 800e6bc:	2364      	movs	r3, #100	; 0x64
 800e6be:	9306      	str	r3, [sp, #24]
 800e6c0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e6c2:	9305      	str	r3, [sp, #20]
 800e6c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e6c6:	9304      	str	r3, [sp, #16]
 800e6c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e6ca:	9303      	str	r3, [sp, #12]
 800e6cc:	aa0e      	add	r2, sp, #56	; 0x38
 800e6ce:	4604      	mov	r4, r0
 800e6d0:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e6d4:	ab01      	add	r3, sp, #4
 800e6d6:	e883 0003 	stmia.w	r3, {r0, r1}
 800e6da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e6dc:	9300      	str	r3, [sp, #0]
 800e6de:	4620      	mov	r0, r4
 800e6e0:	9b08      	ldr	r3, [sp, #32]
 800e6e2:	68aa      	ldr	r2, [r5, #8]
 800e6e4:	f04f 0100 	mov.w	r1, #0
 800e6e8:	f005 fe6f 	bl	80143ca <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 800e6ec:	4620      	mov	r0, r4
 800e6ee:	b00b      	add	sp, #44	; 0x2c
 800e6f0:	bd30      	pop	{r4, r5, pc}

0800e6f2 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE11do_get_timeESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 800e6f2:	b530      	push	{r4, r5, lr}
 800e6f4:	b08b      	sub	sp, #44	; 0x2c
 800e6f6:	460d      	mov	r5, r1
 800e6f8:	a90a      	add	r1, sp, #40	; 0x28
 800e6fa:	e901 000c 	stmdb	r1, {r2, r3}
 800e6fe:	2374      	movs	r3, #116	; 0x74
 800e700:	9306      	str	r3, [sp, #24]
 800e702:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e704:	9305      	str	r3, [sp, #20]
 800e706:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e708:	9304      	str	r3, [sp, #16]
 800e70a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e70c:	9303      	str	r3, [sp, #12]
 800e70e:	aa0e      	add	r2, sp, #56	; 0x38
 800e710:	4604      	mov	r4, r0
 800e712:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e716:	ab01      	add	r3, sp, #4
 800e718:	e883 0003 	stmia.w	r3, {r0, r1}
 800e71c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e71e:	9300      	str	r3, [sp, #0]
 800e720:	4620      	mov	r0, r4
 800e722:	9b08      	ldr	r3, [sp, #32]
 800e724:	68aa      	ldr	r2, [r5, #8]
 800e726:	f04f 0100 	mov.w	r1, #0
 800e72a:	f005 fe4e 	bl	80143ca <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 800e72e:	4620      	mov	r0, r4
 800e730:	b00b      	add	sp, #44	; 0x2c
 800e732:	bd30      	pop	{r4, r5, pc}

0800e734 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE13do_date_orderEv>:
 800e734:	6881      	ldr	r1, [r0, #8]
 800e736:	f04f 0000 	mov.w	r0, #0
 800e73a:	f005 be40 	b.w	80143be <_ZNSt13__facet_shims20__time_get_dateorderIcEENSt9time_base9dateorderESt17integral_constantIbLb1EEPKNSt6locale5facetE>

0800e73e <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRe>:
 800e73e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e740:	b091      	sub	sp, #68	; 0x44
 800e742:	ac0a      	add	r4, sp, #40	; 0x28
 800e744:	e884 000c 	stmia.w	r4, {r2, r3}
 800e748:	2300      	movs	r3, #0
 800e74a:	9307      	str	r3, [sp, #28]
 800e74c:	930d      	str	r3, [sp, #52]	; 0x34
 800e74e:	ab0e      	add	r3, sp, #56	; 0x38
 800e750:	9306      	str	r3, [sp, #24]
 800e752:	ab0d      	add	r3, sp, #52	; 0x34
 800e754:	9305      	str	r3, [sp, #20]
 800e756:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e758:	9304      	str	r3, [sp, #16]
 800e75a:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800e75e:	9303      	str	r3, [sp, #12]
 800e760:	aa16      	add	r2, sp, #88	; 0x58
 800e762:	460f      	mov	r7, r1
 800e764:	4605      	mov	r5, r0
 800e766:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e76a:	ab01      	add	r3, sp, #4
 800e76c:	e883 0003 	stmia.w	r3, {r0, r1}
 800e770:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e772:	9300      	str	r3, [sp, #0]
 800e774:	ae08      	add	r6, sp, #32
 800e776:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e778:	68ba      	ldr	r2, [r7, #8]
 800e77a:	f04f 0100 	mov.w	r1, #0
 800e77e:	4630      	mov	r0, r6
 800e780:	f006 fa15 	bl	8014bae <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE>
 800e784:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e788:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e78a:	e884 0003 	stmia.w	r4, {r0, r1}
 800e78e:	b95b      	cbnz	r3, 800e7a8 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRe+0x6a>
 800e790:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800e794:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800e796:	e9c3 0100 	strd	r0, r1, [r3]
 800e79a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800e79e:	e885 0003 	stmia.w	r5, {r0, r1}
 800e7a2:	4628      	mov	r0, r5
 800e7a4:	b011      	add	sp, #68	; 0x44
 800e7a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e7a8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800e7aa:	6013      	str	r3, [r2, #0]
 800e7ac:	e7f5      	b.n	800e79a <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRe+0x5c>

0800e7ae <_ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIcE6do_putESt19ostreambuf_iteratorIcSt11char_traitsIcEEbRSt8ios_basece>:
 800e7ae:	b510      	push	{r4, lr}
 800e7b0:	b088      	sub	sp, #32
 800e7b2:	f10d 0c20 	add.w	ip, sp, #32
 800e7b6:	e90c 000c 	stmdb	ip, {r2, r3}
 800e7ba:	2300      	movs	r3, #0
 800e7bc:	9304      	str	r3, [sp, #16]
 800e7be:	f89d 3030 	ldrb.w	r3, [sp, #48]	; 0x30
 800e7c2:	9303      	str	r3, [sp, #12]
 800e7c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e7c6:	9302      	str	r3, [sp, #8]
 800e7c8:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800e7cc:	9301      	str	r3, [sp, #4]
 800e7ce:	9b07      	ldr	r3, [sp, #28]
 800e7d0:	9300      	str	r3, [sp, #0]
 800e7d2:	4613      	mov	r3, r2
 800e7d4:	688a      	ldr	r2, [r1, #8]
 800e7d6:	f04f 0100 	mov.w	r1, #0
 800e7da:	4604      	mov	r4, r0
 800e7dc:	f006 f8fe 	bl	80149dc <_ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE>
 800e7e0:	4620      	mov	r0, r4
 800e7e2:	b008      	add	sp, #32
 800e7e4:	bd10      	pop	{r4, pc}

0800e7e6 <_ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIcE8do_closeEi>:
 800e7e6:	460a      	mov	r2, r1
 800e7e8:	6901      	ldr	r1, [r0, #16]
 800e7ea:	f04f 0000 	mov.w	r0, #0
 800e7ee:	f005 bdde 	b.w	80143ae <_ZNSt13__facet_shims16__messages_closeIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEi>

0800e7f2 <_ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIcE7do_openERKSsRKSt6locale>:
 800e7f2:	b507      	push	{r0, r1, r2, lr}
 800e7f4:	6809      	ldr	r1, [r1, #0]
 800e7f6:	9200      	str	r2, [sp, #0]
 800e7f8:	f851 3c0c 	ldr.w	r3, [r1, #-12]
 800e7fc:	460a      	mov	r2, r1
 800e7fe:	6901      	ldr	r1, [r0, #16]
 800e800:	f04f 0000 	mov.w	r0, #0
 800e804:	f005 fda7 	bl	8014356 <_ZNSt13__facet_shims15__messages_openIcEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKcjRKS3_>
 800e808:	b003      	add	sp, #12
 800e80a:	f85d fb04 	ldr.w	pc, [sp], #4

0800e80e <_ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIwE10do_compareEPKwS4_S4_S4_>:
 800e80e:	b513      	push	{r0, r1, r4, lr}
 800e810:	9c04      	ldr	r4, [sp, #16]
 800e812:	e9cd 3400 	strd	r3, r4, [sp]
 800e816:	4613      	mov	r3, r2
 800e818:	460a      	mov	r2, r1
 800e81a:	68c1      	ldr	r1, [r0, #12]
 800e81c:	f04f 0000 	mov.w	r0, #0
 800e820:	f005 fc36 	bl	8014090 <_ZNSt13__facet_shims17__collate_compareIwEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKT_S9_S9_S9_>
 800e824:	b002      	add	sp, #8
 800e826:	bd10      	pop	{r4, pc}

0800e828 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE11do_get_yearESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 800e828:	b530      	push	{r4, r5, lr}
 800e82a:	b08b      	sub	sp, #44	; 0x2c
 800e82c:	460d      	mov	r5, r1
 800e82e:	a90a      	add	r1, sp, #40	; 0x28
 800e830:	e901 000c 	stmdb	r1, {r2, r3}
 800e834:	2379      	movs	r3, #121	; 0x79
 800e836:	9306      	str	r3, [sp, #24]
 800e838:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e83a:	9305      	str	r3, [sp, #20]
 800e83c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e83e:	9304      	str	r3, [sp, #16]
 800e840:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e842:	9303      	str	r3, [sp, #12]
 800e844:	aa0e      	add	r2, sp, #56	; 0x38
 800e846:	4604      	mov	r4, r0
 800e848:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e84c:	ab01      	add	r3, sp, #4
 800e84e:	e883 0003 	stmia.w	r3, {r0, r1}
 800e852:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e854:	9300      	str	r3, [sp, #0]
 800e856:	4620      	mov	r0, r4
 800e858:	9b08      	ldr	r3, [sp, #32]
 800e85a:	68aa      	ldr	r2, [r5, #8]
 800e85c:	f04f 0100 	mov.w	r1, #0
 800e860:	f005 fe0d 	bl	801447e <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 800e864:	4620      	mov	r0, r4
 800e866:	b00b      	add	sp, #44	; 0x2c
 800e868:	bd30      	pop	{r4, r5, pc}

0800e86a <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE16do_get_monthnameESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 800e86a:	b530      	push	{r4, r5, lr}
 800e86c:	b08b      	sub	sp, #44	; 0x2c
 800e86e:	460d      	mov	r5, r1
 800e870:	a90a      	add	r1, sp, #40	; 0x28
 800e872:	e901 000c 	stmdb	r1, {r2, r3}
 800e876:	236d      	movs	r3, #109	; 0x6d
 800e878:	9306      	str	r3, [sp, #24]
 800e87a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e87c:	9305      	str	r3, [sp, #20]
 800e87e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e880:	9304      	str	r3, [sp, #16]
 800e882:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e884:	9303      	str	r3, [sp, #12]
 800e886:	aa0e      	add	r2, sp, #56	; 0x38
 800e888:	4604      	mov	r4, r0
 800e88a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e88e:	ab01      	add	r3, sp, #4
 800e890:	e883 0003 	stmia.w	r3, {r0, r1}
 800e894:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e896:	9300      	str	r3, [sp, #0]
 800e898:	4620      	mov	r0, r4
 800e89a:	9b08      	ldr	r3, [sp, #32]
 800e89c:	68aa      	ldr	r2, [r5, #8]
 800e89e:	f04f 0100 	mov.w	r1, #0
 800e8a2:	f005 fdec 	bl	801447e <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 800e8a6:	4620      	mov	r0, r4
 800e8a8:	b00b      	add	sp, #44	; 0x2c
 800e8aa:	bd30      	pop	{r4, r5, pc}

0800e8ac <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE14do_get_weekdayESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 800e8ac:	b530      	push	{r4, r5, lr}
 800e8ae:	b08b      	sub	sp, #44	; 0x2c
 800e8b0:	460d      	mov	r5, r1
 800e8b2:	a90a      	add	r1, sp, #40	; 0x28
 800e8b4:	e901 000c 	stmdb	r1, {r2, r3}
 800e8b8:	2377      	movs	r3, #119	; 0x77
 800e8ba:	9306      	str	r3, [sp, #24]
 800e8bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e8be:	9305      	str	r3, [sp, #20]
 800e8c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e8c2:	9304      	str	r3, [sp, #16]
 800e8c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e8c6:	9303      	str	r3, [sp, #12]
 800e8c8:	aa0e      	add	r2, sp, #56	; 0x38
 800e8ca:	4604      	mov	r4, r0
 800e8cc:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e8d0:	ab01      	add	r3, sp, #4
 800e8d2:	e883 0003 	stmia.w	r3, {r0, r1}
 800e8d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e8d8:	9300      	str	r3, [sp, #0]
 800e8da:	4620      	mov	r0, r4
 800e8dc:	9b08      	ldr	r3, [sp, #32]
 800e8de:	68aa      	ldr	r2, [r5, #8]
 800e8e0:	f04f 0100 	mov.w	r1, #0
 800e8e4:	f005 fdcb 	bl	801447e <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 800e8e8:	4620      	mov	r0, r4
 800e8ea:	b00b      	add	sp, #44	; 0x2c
 800e8ec:	bd30      	pop	{r4, r5, pc}

0800e8ee <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE11do_get_dateESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 800e8ee:	b530      	push	{r4, r5, lr}
 800e8f0:	b08b      	sub	sp, #44	; 0x2c
 800e8f2:	460d      	mov	r5, r1
 800e8f4:	a90a      	add	r1, sp, #40	; 0x28
 800e8f6:	e901 000c 	stmdb	r1, {r2, r3}
 800e8fa:	2364      	movs	r3, #100	; 0x64
 800e8fc:	9306      	str	r3, [sp, #24]
 800e8fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e900:	9305      	str	r3, [sp, #20]
 800e902:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e904:	9304      	str	r3, [sp, #16]
 800e906:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e908:	9303      	str	r3, [sp, #12]
 800e90a:	aa0e      	add	r2, sp, #56	; 0x38
 800e90c:	4604      	mov	r4, r0
 800e90e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e912:	ab01      	add	r3, sp, #4
 800e914:	e883 0003 	stmia.w	r3, {r0, r1}
 800e918:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e91a:	9300      	str	r3, [sp, #0]
 800e91c:	4620      	mov	r0, r4
 800e91e:	9b08      	ldr	r3, [sp, #32]
 800e920:	68aa      	ldr	r2, [r5, #8]
 800e922:	f04f 0100 	mov.w	r1, #0
 800e926:	f005 fdaa 	bl	801447e <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 800e92a:	4620      	mov	r0, r4
 800e92c:	b00b      	add	sp, #44	; 0x2c
 800e92e:	bd30      	pop	{r4, r5, pc}

0800e930 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE11do_get_timeESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 800e930:	b530      	push	{r4, r5, lr}
 800e932:	b08b      	sub	sp, #44	; 0x2c
 800e934:	460d      	mov	r5, r1
 800e936:	a90a      	add	r1, sp, #40	; 0x28
 800e938:	e901 000c 	stmdb	r1, {r2, r3}
 800e93c:	2374      	movs	r3, #116	; 0x74
 800e93e:	9306      	str	r3, [sp, #24]
 800e940:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e942:	9305      	str	r3, [sp, #20]
 800e944:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e946:	9304      	str	r3, [sp, #16]
 800e948:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e94a:	9303      	str	r3, [sp, #12]
 800e94c:	aa0e      	add	r2, sp, #56	; 0x38
 800e94e:	4604      	mov	r4, r0
 800e950:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e954:	ab01      	add	r3, sp, #4
 800e956:	e883 0003 	stmia.w	r3, {r0, r1}
 800e95a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e95c:	9300      	str	r3, [sp, #0]
 800e95e:	4620      	mov	r0, r4
 800e960:	9b08      	ldr	r3, [sp, #32]
 800e962:	68aa      	ldr	r2, [r5, #8]
 800e964:	f04f 0100 	mov.w	r1, #0
 800e968:	f005 fd89 	bl	801447e <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 800e96c:	4620      	mov	r0, r4
 800e96e:	b00b      	add	sp, #44	; 0x2c
 800e970:	bd30      	pop	{r4, r5, pc}

0800e972 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE13do_date_orderEv>:
 800e972:	6881      	ldr	r1, [r0, #8]
 800e974:	f04f 0000 	mov.w	r0, #0
 800e978:	f005 bd24 	b.w	80143c4 <_ZNSt13__facet_shims20__time_get_dateorderIwEENSt9time_base9dateorderESt17integral_constantIbLb1EEPKNSt6locale5facetE>

0800e97c <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRe>:
 800e97c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e97e:	b091      	sub	sp, #68	; 0x44
 800e980:	ac0a      	add	r4, sp, #40	; 0x28
 800e982:	e884 000c 	stmia.w	r4, {r2, r3}
 800e986:	2300      	movs	r3, #0
 800e988:	9307      	str	r3, [sp, #28]
 800e98a:	930d      	str	r3, [sp, #52]	; 0x34
 800e98c:	ab0e      	add	r3, sp, #56	; 0x38
 800e98e:	9306      	str	r3, [sp, #24]
 800e990:	ab0d      	add	r3, sp, #52	; 0x34
 800e992:	9305      	str	r3, [sp, #20]
 800e994:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e996:	9304      	str	r3, [sp, #16]
 800e998:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800e99c:	9303      	str	r3, [sp, #12]
 800e99e:	aa16      	add	r2, sp, #88	; 0x58
 800e9a0:	460f      	mov	r7, r1
 800e9a2:	4605      	mov	r5, r0
 800e9a4:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e9a8:	ab01      	add	r3, sp, #4
 800e9aa:	e883 0003 	stmia.w	r3, {r0, r1}
 800e9ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e9b0:	9300      	str	r3, [sp, #0]
 800e9b2:	ae08      	add	r6, sp, #32
 800e9b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e9b6:	68ba      	ldr	r2, [r7, #8]
 800e9b8:	f04f 0100 	mov.w	r1, #0
 800e9bc:	4630      	mov	r0, r6
 800e9be:	f006 fa92 	bl	8014ee6 <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE>
 800e9c2:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e9c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e9c8:	e884 0003 	stmia.w	r4, {r0, r1}
 800e9cc:	b95b      	cbnz	r3, 800e9e6 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRe+0x6a>
 800e9ce:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800e9d2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800e9d4:	e9c3 0100 	strd	r0, r1, [r3]
 800e9d8:	e894 0003 	ldmia.w	r4, {r0, r1}
 800e9dc:	e885 0003 	stmia.w	r5, {r0, r1}
 800e9e0:	4628      	mov	r0, r5
 800e9e2:	b011      	add	sp, #68	; 0x44
 800e9e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e9e6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800e9e8:	6013      	str	r3, [r2, #0]
 800e9ea:	e7f5      	b.n	800e9d8 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRe+0x5c>

0800e9ec <_ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIwE6do_putESt19ostreambuf_iteratorIwSt11char_traitsIwEEbRSt8ios_basewe>:
 800e9ec:	b510      	push	{r4, lr}
 800e9ee:	b088      	sub	sp, #32
 800e9f0:	f10d 0c20 	add.w	ip, sp, #32
 800e9f4:	e90c 000c 	stmdb	ip, {r2, r3}
 800e9f8:	2300      	movs	r3, #0
 800e9fa:	9304      	str	r3, [sp, #16]
 800e9fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e9fe:	9303      	str	r3, [sp, #12]
 800ea00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ea02:	9302      	str	r3, [sp, #8]
 800ea04:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800ea08:	9301      	str	r3, [sp, #4]
 800ea0a:	9b07      	ldr	r3, [sp, #28]
 800ea0c:	9300      	str	r3, [sp, #0]
 800ea0e:	4613      	mov	r3, r2
 800ea10:	688a      	ldr	r2, [r1, #8]
 800ea12:	f04f 0100 	mov.w	r1, #0
 800ea16:	4604      	mov	r4, r0
 800ea18:	f006 f97c 	bl	8014d14 <_ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE>
 800ea1c:	4620      	mov	r0, r4
 800ea1e:	b008      	add	sp, #32
 800ea20:	bd10      	pop	{r4, pc}

0800ea22 <_ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIwE8do_closeEi>:
 800ea22:	460a      	mov	r2, r1
 800ea24:	6901      	ldr	r1, [r0, #16]
 800ea26:	f04f 0000 	mov.w	r0, #0
 800ea2a:	f005 bcc4 	b.w	80143b6 <_ZNSt13__facet_shims16__messages_closeIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEi>

0800ea2e <_ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIwE7do_openERKSsRKSt6locale>:
 800ea2e:	b507      	push	{r0, r1, r2, lr}
 800ea30:	6809      	ldr	r1, [r1, #0]
 800ea32:	9200      	str	r2, [sp, #0]
 800ea34:	f851 3c0c 	ldr.w	r3, [r1, #-12]
 800ea38:	460a      	mov	r2, r1
 800ea3a:	6901      	ldr	r1, [r0, #16]
 800ea3c:	f04f 0000 	mov.w	r0, #0
 800ea40:	f005 fc9f 	bl	8014382 <_ZNSt13__facet_shims15__messages_openIwEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKcjRKS3_>
 800ea44:	b003      	add	sp, #12
 800ea46:	f85d fb04 	ldr.w	pc, [sp], #4

0800ea4a <_ZNSt6locale5facet6__shimD1Ev>:
 800ea4a:	b510      	push	{r4, lr}
 800ea4c:	4604      	mov	r4, r0
 800ea4e:	6800      	ldr	r0, [r0, #0]
 800ea50:	6843      	ldr	r3, [r0, #4]
 800ea52:	1e5a      	subs	r2, r3, #1
 800ea54:	2b01      	cmp	r3, #1
 800ea56:	6042      	str	r2, [r0, #4]
 800ea58:	d102      	bne.n	800ea60 <_ZNSt6locale5facet6__shimD1Ev+0x16>
 800ea5a:	6803      	ldr	r3, [r0, #0]
 800ea5c:	685b      	ldr	r3, [r3, #4]
 800ea5e:	4798      	blx	r3
 800ea60:	4620      	mov	r0, r4
 800ea62:	bd10      	pop	{r4, pc}

0800ea64 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED1Ev>:
 800ea64:	b510      	push	{r4, lr}
 800ea66:	4b07      	ldr	r3, [pc, #28]	; (800ea84 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED1Ev+0x20>)
 800ea68:	6003      	str	r3, [r0, #0]
 800ea6a:	6903      	ldr	r3, [r0, #16]
 800ea6c:	2200      	movs	r2, #0
 800ea6e:	4604      	mov	r4, r0
 800ea70:	60da      	str	r2, [r3, #12]
 800ea72:	300c      	adds	r0, #12
 800ea74:	f7ff ffe9 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800ea78:	4620      	mov	r0, r4
 800ea7a:	f7fe fe9f 	bl	800d7bc <_ZNSt8numpunctIcED1Ev>
 800ea7e:	4620      	mov	r0, r4
 800ea80:	bd10      	pop	{r4, pc}
 800ea82:	bf00      	nop
 800ea84:	0802f41c 	.word	0x0802f41c

0800ea88 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED0Ev>:
 800ea88:	b510      	push	{r4, lr}
 800ea8a:	4604      	mov	r4, r0
 800ea8c:	f7ff ffea 	bl	800ea64 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED1Ev>
 800ea90:	4620      	mov	r0, r4
 800ea92:	f015 fa1b 	bl	8023ecc <_ZdlPv>
 800ea96:	4620      	mov	r0, r4
 800ea98:	bd10      	pop	{r4, pc}
	...

0800ea9c <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED1Ev>:
 800ea9c:	b510      	push	{r4, lr}
 800ea9e:	4b08      	ldr	r3, [pc, #32]	; (800eac0 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED1Ev+0x24>)
 800eaa0:	6003      	str	r3, [r0, #0]
 800eaa2:	6903      	ldr	r3, [r0, #16]
 800eaa4:	2200      	movs	r2, #0
 800eaa6:	4604      	mov	r4, r0
 800eaa8:	60da      	str	r2, [r3, #12]
 800eaaa:	619a      	str	r2, [r3, #24]
 800eaac:	621a      	str	r2, [r3, #32]
 800eaae:	629a      	str	r2, [r3, #40]	; 0x28
 800eab0:	300c      	adds	r0, #12
 800eab2:	f7ff ffca 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800eab6:	4620      	mov	r0, r4
 800eab8:	f7fe fc22 	bl	800d300 <_ZNSt10moneypunctIcLb1EED1Ev>
 800eabc:	4620      	mov	r0, r4
 800eabe:	bd10      	pop	{r4, pc}
 800eac0:	0802f548 	.word	0x0802f548

0800eac4 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED0Ev>:
 800eac4:	b510      	push	{r4, lr}
 800eac6:	4604      	mov	r4, r0
 800eac8:	f7ff ffe8 	bl	800ea9c <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED1Ev>
 800eacc:	4620      	mov	r0, r4
 800eace:	f015 f9fd 	bl	8023ecc <_ZdlPv>
 800ead2:	4620      	mov	r0, r4
 800ead4:	bd10      	pop	{r4, pc}
	...

0800ead8 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED1Ev>:
 800ead8:	b510      	push	{r4, lr}
 800eada:	4b08      	ldr	r3, [pc, #32]	; (800eafc <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED1Ev+0x24>)
 800eadc:	6003      	str	r3, [r0, #0]
 800eade:	6903      	ldr	r3, [r0, #16]
 800eae0:	2200      	movs	r2, #0
 800eae2:	4604      	mov	r4, r0
 800eae4:	60da      	str	r2, [r3, #12]
 800eae6:	619a      	str	r2, [r3, #24]
 800eae8:	621a      	str	r2, [r3, #32]
 800eaea:	629a      	str	r2, [r3, #40]	; 0x28
 800eaec:	300c      	adds	r0, #12
 800eaee:	f7ff ffac 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800eaf2:	4620      	mov	r0, r4
 800eaf4:	f7fe fc1e 	bl	800d334 <_ZNSt10moneypunctIcLb0EED1Ev>
 800eaf8:	4620      	mov	r0, r4
 800eafa:	bd10      	pop	{r4, pc}
 800eafc:	0802f514 	.word	0x0802f514

0800eb00 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED0Ev>:
 800eb00:	b510      	push	{r4, lr}
 800eb02:	4604      	mov	r4, r0
 800eb04:	f7ff ffe8 	bl	800ead8 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED1Ev>
 800eb08:	4620      	mov	r0, r4
 800eb0a:	f015 f9df 	bl	8023ecc <_ZdlPv>
 800eb0e:	4620      	mov	r0, r4
 800eb10:	bd10      	pop	{r4, pc}
	...

0800eb14 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED1Ev>:
 800eb14:	b510      	push	{r4, lr}
 800eb16:	4b05      	ldr	r3, [pc, #20]	; (800eb2c <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED1Ev+0x18>)
 800eb18:	4604      	mov	r4, r0
 800eb1a:	f840 3b10 	str.w	r3, [r0], #16
 800eb1e:	f7ff ff94 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800eb22:	4620      	mov	r0, r4
 800eb24:	f009 f99a 	bl	8017e5c <_ZNSt8messagesIcED1Ev>
 800eb28:	4620      	mov	r0, r4
 800eb2a:	bd10      	pop	{r4, pc}
 800eb2c:	0802f3e4 	.word	0x0802f3e4

0800eb30 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED0Ev>:
 800eb30:	b510      	push	{r4, lr}
 800eb32:	4604      	mov	r4, r0
 800eb34:	f7ff ffee 	bl	800eb14 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED1Ev>
 800eb38:	4620      	mov	r0, r4
 800eb3a:	f015 f9c7 	bl	8023ecc <_ZdlPv>
 800eb3e:	4620      	mov	r0, r4
 800eb40:	bd10      	pop	{r4, pc}
	...

0800eb44 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED1Ev>:
 800eb44:	b510      	push	{r4, lr}
 800eb46:	4b07      	ldr	r3, [pc, #28]	; (800eb64 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED1Ev+0x20>)
 800eb48:	6003      	str	r3, [r0, #0]
 800eb4a:	6903      	ldr	r3, [r0, #16]
 800eb4c:	2200      	movs	r2, #0
 800eb4e:	4604      	mov	r4, r0
 800eb50:	60da      	str	r2, [r3, #12]
 800eb52:	300c      	adds	r0, #12
 800eb54:	f7ff ff79 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800eb58:	4620      	mov	r0, r4
 800eb5a:	f7fe fe97 	bl	800d88c <_ZNSt8numpunctIwED1Ev>
 800eb5e:	4620      	mov	r0, r4
 800eb60:	bd10      	pop	{r4, pc}
 800eb62:	bf00      	nop
 800eb64:	0802f440 	.word	0x0802f440

0800eb68 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED0Ev>:
 800eb68:	b510      	push	{r4, lr}
 800eb6a:	4604      	mov	r4, r0
 800eb6c:	f7ff ffea 	bl	800eb44 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED1Ev>
 800eb70:	4620      	mov	r0, r4
 800eb72:	f015 f9ab 	bl	8023ecc <_ZdlPv>
 800eb76:	4620      	mov	r0, r4
 800eb78:	bd10      	pop	{r4, pc}
	...

0800eb7c <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED1Ev>:
 800eb7c:	b510      	push	{r4, lr}
 800eb7e:	4b08      	ldr	r3, [pc, #32]	; (800eba0 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED1Ev+0x24>)
 800eb80:	6003      	str	r3, [r0, #0]
 800eb82:	6903      	ldr	r3, [r0, #16]
 800eb84:	2200      	movs	r2, #0
 800eb86:	4604      	mov	r4, r0
 800eb88:	60da      	str	r2, [r3, #12]
 800eb8a:	621a      	str	r2, [r3, #32]
 800eb8c:	629a      	str	r2, [r3, #40]	; 0x28
 800eb8e:	631a      	str	r2, [r3, #48]	; 0x30
 800eb90:	300c      	adds	r0, #12
 800eb92:	f7ff ff5a 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800eb96:	4620      	mov	r0, r4
 800eb98:	f7fe fc76 	bl	800d488 <_ZNSt10moneypunctIwLb1EED1Ev>
 800eb9c:	4620      	mov	r0, r4
 800eb9e:	bd10      	pop	{r4, pc}
 800eba0:	0802f5b0 	.word	0x0802f5b0

0800eba4 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED0Ev>:
 800eba4:	b510      	push	{r4, lr}
 800eba6:	4604      	mov	r4, r0
 800eba8:	f7ff ffe8 	bl	800eb7c <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED1Ev>
 800ebac:	4620      	mov	r0, r4
 800ebae:	f015 f98d 	bl	8023ecc <_ZdlPv>
 800ebb2:	4620      	mov	r0, r4
 800ebb4:	bd10      	pop	{r4, pc}
	...

0800ebb8 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED1Ev>:
 800ebb8:	b510      	push	{r4, lr}
 800ebba:	4b08      	ldr	r3, [pc, #32]	; (800ebdc <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED1Ev+0x24>)
 800ebbc:	6003      	str	r3, [r0, #0]
 800ebbe:	6903      	ldr	r3, [r0, #16]
 800ebc0:	2200      	movs	r2, #0
 800ebc2:	4604      	mov	r4, r0
 800ebc4:	60da      	str	r2, [r3, #12]
 800ebc6:	621a      	str	r2, [r3, #32]
 800ebc8:	629a      	str	r2, [r3, #40]	; 0x28
 800ebca:	631a      	str	r2, [r3, #48]	; 0x30
 800ebcc:	300c      	adds	r0, #12
 800ebce:	f7ff ff3c 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800ebd2:	4620      	mov	r0, r4
 800ebd4:	f7fe fc72 	bl	800d4bc <_ZNSt10moneypunctIwLb0EED1Ev>
 800ebd8:	4620      	mov	r0, r4
 800ebda:	bd10      	pop	{r4, pc}
 800ebdc:	0802f57c 	.word	0x0802f57c

0800ebe0 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED0Ev>:
 800ebe0:	b510      	push	{r4, lr}
 800ebe2:	4604      	mov	r4, r0
 800ebe4:	f7ff ffe8 	bl	800ebb8 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED1Ev>
 800ebe8:	4620      	mov	r0, r4
 800ebea:	f015 f96f 	bl	8023ecc <_ZdlPv>
 800ebee:	4620      	mov	r0, r4
 800ebf0:	bd10      	pop	{r4, pc}
	...

0800ebf4 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED1Ev>:
 800ebf4:	b510      	push	{r4, lr}
 800ebf6:	4b05      	ldr	r3, [pc, #20]	; (800ec0c <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED1Ev+0x18>)
 800ebf8:	4604      	mov	r4, r0
 800ebfa:	f840 3b10 	str.w	r3, [r0], #16
 800ebfe:	f7ff ff24 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800ec02:	4620      	mov	r0, r4
 800ec04:	f00f fb5c 	bl	801e2c0 <_ZNSt8messagesIwED1Ev>
 800ec08:	4620      	mov	r0, r4
 800ec0a:	bd10      	pop	{r4, pc}
 800ec0c:	0802f400 	.word	0x0802f400

0800ec10 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED0Ev>:
 800ec10:	b510      	push	{r4, lr}
 800ec12:	4604      	mov	r4, r0
 800ec14:	f7ff ffee 	bl	800ebf4 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED1Ev>
 800ec18:	4620      	mov	r0, r4
 800ec1a:	f015 f957 	bl	8023ecc <_ZdlPv>
 800ec1e:	4620      	mov	r0, r4
 800ec20:	bd10      	pop	{r4, pc}
	...

0800ec24 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED1Ev>:
 800ec24:	b510      	push	{r4, lr}
 800ec26:	4b05      	ldr	r3, [pc, #20]	; (800ec3c <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED1Ev+0x18>)
 800ec28:	4604      	mov	r4, r0
 800ec2a:	f840 3b0c 	str.w	r3, [r0], #12
 800ec2e:	f7ff ff0c 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800ec32:	4620      	mov	r0, r4
 800ec34:	f009 f92a 	bl	8017e8c <_ZNSt7collateIcED1Ev>
 800ec38:	4620      	mov	r0, r4
 800ec3a:	bd10      	pop	{r4, pc}
 800ec3c:	0802f3ac 	.word	0x0802f3ac

0800ec40 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED0Ev>:
 800ec40:	b510      	push	{r4, lr}
 800ec42:	4604      	mov	r4, r0
 800ec44:	f7ff ffee 	bl	800ec24 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED1Ev>
 800ec48:	4620      	mov	r0, r4
 800ec4a:	f015 f93f 	bl	8023ecc <_ZdlPv>
 800ec4e:	4620      	mov	r0, r4
 800ec50:	bd10      	pop	{r4, pc}
	...

0800ec54 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED1Ev>:
 800ec54:	b510      	push	{r4, lr}
 800ec56:	4b05      	ldr	r3, [pc, #20]	; (800ec6c <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED1Ev+0x18>)
 800ec58:	4604      	mov	r4, r0
 800ec5a:	f840 3b08 	str.w	r3, [r0], #8
 800ec5e:	f7ff fef4 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800ec62:	4620      	mov	r0, r4
 800ec64:	f009 f874 	bl	8017d50 <_ZNSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 800ec68:	4620      	mov	r0, r4
 800ec6a:	bd10      	pop	{r4, pc}
 800ec6c:	0802f4b4 	.word	0x0802f4b4

0800ec70 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED0Ev>:
 800ec70:	b510      	push	{r4, lr}
 800ec72:	4604      	mov	r4, r0
 800ec74:	f7ff ffee 	bl	800ec54 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED1Ev>
 800ec78:	4620      	mov	r0, r4
 800ec7a:	f015 f927 	bl	8023ecc <_ZdlPv>
 800ec7e:	4620      	mov	r0, r4
 800ec80:	bd10      	pop	{r4, pc}
	...

0800ec84 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED1Ev>:
 800ec84:	b510      	push	{r4, lr}
 800ec86:	4b05      	ldr	r3, [pc, #20]	; (800ec9c <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED1Ev+0x18>)
 800ec88:	4604      	mov	r4, r0
 800ec8a:	f840 3b08 	str.w	r3, [r0], #8
 800ec8e:	f7ff fedc 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800ec92:	4620      	mov	r0, r4
 800ec94:	f009 f866 	bl	8017d64 <_ZNSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 800ec98:	4620      	mov	r0, r4
 800ec9a:	bd10      	pop	{r4, pc}
 800ec9c:	0802f4e4 	.word	0x0802f4e4

0800eca0 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED0Ev>:
 800eca0:	b510      	push	{r4, lr}
 800eca2:	4604      	mov	r4, r0
 800eca4:	f7ff ffee 	bl	800ec84 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED1Ev>
 800eca8:	4620      	mov	r0, r4
 800ecaa:	f015 f90f 	bl	8023ecc <_ZdlPv>
 800ecae:	4620      	mov	r0, r4
 800ecb0:	bd10      	pop	{r4, pc}
	...

0800ecb4 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED1Ev>:
 800ecb4:	b510      	push	{r4, lr}
 800ecb6:	4b05      	ldr	r3, [pc, #20]	; (800eccc <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED1Ev+0x18>)
 800ecb8:	4604      	mov	r4, r0
 800ecba:	f840 3b0c 	str.w	r3, [r0], #12
 800ecbe:	f7ff fec4 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800ecc2:	4620      	mov	r0, r4
 800ecc4:	f00f fb14 	bl	801e2f0 <_ZNSt7collateIwED1Ev>
 800ecc8:	4620      	mov	r0, r4
 800ecca:	bd10      	pop	{r4, pc}
 800eccc:	0802f3c8 	.word	0x0802f3c8

0800ecd0 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED0Ev>:
 800ecd0:	b510      	push	{r4, lr}
 800ecd2:	4604      	mov	r4, r0
 800ecd4:	f7ff ffee 	bl	800ecb4 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED1Ev>
 800ecd8:	4620      	mov	r0, r4
 800ecda:	f015 f8f7 	bl	8023ecc <_ZdlPv>
 800ecde:	4620      	mov	r0, r4
 800ece0:	bd10      	pop	{r4, pc}
	...

0800ece4 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED1Ev>:
 800ece4:	b510      	push	{r4, lr}
 800ece6:	4b05      	ldr	r3, [pc, #20]	; (800ecfc <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED1Ev+0x18>)
 800ece8:	4604      	mov	r4, r0
 800ecea:	f840 3b08 	str.w	r3, [r0], #8
 800ecee:	f7ff feac 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800ecf2:	4620      	mov	r0, r4
 800ecf4:	f00f fa5e 	bl	801e1b4 <_ZNSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 800ecf8:	4620      	mov	r0, r4
 800ecfa:	bd10      	pop	{r4, pc}
 800ecfc:	0802f4cc 	.word	0x0802f4cc

0800ed00 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED0Ev>:
 800ed00:	b510      	push	{r4, lr}
 800ed02:	4604      	mov	r4, r0
 800ed04:	f7ff ffee 	bl	800ece4 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED1Ev>
 800ed08:	4620      	mov	r0, r4
 800ed0a:	f015 f8df 	bl	8023ecc <_ZdlPv>
 800ed0e:	4620      	mov	r0, r4
 800ed10:	bd10      	pop	{r4, pc}
	...

0800ed14 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED1Ev>:
 800ed14:	b510      	push	{r4, lr}
 800ed16:	4b05      	ldr	r3, [pc, #20]	; (800ed2c <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED1Ev+0x18>)
 800ed18:	4604      	mov	r4, r0
 800ed1a:	f840 3b08 	str.w	r3, [r0], #8
 800ed1e:	f7ff fe94 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800ed22:	4620      	mov	r0, r4
 800ed24:	f00f fa50 	bl	801e1c8 <_ZNSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 800ed28:	4620      	mov	r0, r4
 800ed2a:	bd10      	pop	{r4, pc}
 800ed2c:	0802f4fc 	.word	0x0802f4fc

0800ed30 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED0Ev>:
 800ed30:	b510      	push	{r4, lr}
 800ed32:	4604      	mov	r4, r0
 800ed34:	f7ff ffee 	bl	800ed14 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED1Ev>
 800ed38:	4620      	mov	r0, r4
 800ed3a:	f015 f8c7 	bl	8023ecc <_ZdlPv>
 800ed3e:	4620      	mov	r0, r4
 800ed40:	bd10      	pop	{r4, pc}
	...

0800ed44 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED1Ev>:
 800ed44:	b510      	push	{r4, lr}
 800ed46:	4b05      	ldr	r3, [pc, #20]	; (800ed5c <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED1Ev+0x18>)
 800ed48:	4604      	mov	r4, r0
 800ed4a:	f840 3b08 	str.w	r3, [r0], #8
 800ed4e:	f7ff fe7c 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800ed52:	4620      	mov	r0, r4
 800ed54:	f009 f838 	bl	8017dc8 <_ZNSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 800ed58:	4620      	mov	r0, r4
 800ed5a:	bd10      	pop	{r4, pc}
 800ed5c:	0802f464 	.word	0x0802f464

0800ed60 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED0Ev>:
 800ed60:	b510      	push	{r4, lr}
 800ed62:	4604      	mov	r4, r0
 800ed64:	f7ff ffee 	bl	800ed44 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED1Ev>
 800ed68:	4620      	mov	r0, r4
 800ed6a:	f015 f8af 	bl	8023ecc <_ZdlPv>
 800ed6e:	4620      	mov	r0, r4
 800ed70:	bd10      	pop	{r4, pc}
	...

0800ed74 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED1Ev>:
 800ed74:	b510      	push	{r4, lr}
 800ed76:	4b05      	ldr	r3, [pc, #20]	; (800ed8c <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED1Ev+0x18>)
 800ed78:	4604      	mov	r4, r0
 800ed7a:	f840 3b08 	str.w	r3, [r0], #8
 800ed7e:	f7ff fe64 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 800ed82:	4620      	mov	r0, r4
 800ed84:	f00f fa52 	bl	801e22c <_ZNSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 800ed88:	4620      	mov	r0, r4
 800ed8a:	bd10      	pop	{r4, pc}
 800ed8c:	0802f48c 	.word	0x0802f48c

0800ed90 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED0Ev>:
 800ed90:	b510      	push	{r4, lr}
 800ed92:	4604      	mov	r4, r0
 800ed94:	f7ff ffee 	bl	800ed74 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED1Ev>
 800ed98:	4620      	mov	r0, r4
 800ed9a:	f015 f897 	bl	8023ecc <_ZdlPv>
 800ed9e:	4620      	mov	r0, r4
 800eda0:	bd10      	pop	{r4, pc}

0800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>:
 800eda2:	6983      	ldr	r3, [r0, #24]
 800eda4:	b510      	push	{r4, lr}
 800eda6:	4604      	mov	r4, r0
 800eda8:	b103      	cbz	r3, 800edac <_ZNSt13__facet_shims12__any_stringD1Ev+0xa>
 800edaa:	4798      	blx	r3
 800edac:	4620      	mov	r0, r4
 800edae:	bd10      	pop	{r4, pc}

0800edb0 <_ZNSt13__facet_shims21__numpunct_fill_cacheIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt16__numpunct_cacheIT_E>:
 800edb0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800edb2:	4608      	mov	r0, r1
 800edb4:	4614      	mov	r4, r2
 800edb6:	460d      	mov	r5, r1
 800edb8:	f009 fa92 	bl	80182e0 <_ZNKSt8numpunctIcE13decimal_pointEv>
 800edbc:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 800edc0:	4628      	mov	r0, r5
 800edc2:	f009 fa90 	bl	80182e6 <_ZNKSt8numpunctIcE13thousands_sepEv>
 800edc6:	2300      	movs	r3, #0
 800edc8:	60a3      	str	r3, [r4, #8]
 800edca:	6163      	str	r3, [r4, #20]
 800edcc:	61e3      	str	r3, [r4, #28]
 800edce:	2301      	movs	r3, #1
 800edd0:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 800edd4:	f884 0025 	strb.w	r0, [r4, #37]	; 0x25
 800edd8:	4629      	mov	r1, r5
 800edda:	a801      	add	r0, sp, #4
 800eddc:	f009 fa86 	bl	80182ec <_ZNKSt8numpunctIcE8groupingEv>
 800ede0:	a901      	add	r1, sp, #4
 800ede2:	f104 0008 	add.w	r0, r4, #8
 800ede6:	f7ff fbc1 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800edea:	60e0      	str	r0, [r4, #12]
 800edec:	a801      	add	r0, sp, #4
 800edee:	f001 f909 	bl	8010004 <_ZNSsD1Ev>
 800edf2:	4629      	mov	r1, r5
 800edf4:	a801      	add	r0, sp, #4
 800edf6:	f009 fa80 	bl	80182fa <_ZNKSt8numpunctIcE8truenameEv>
 800edfa:	a901      	add	r1, sp, #4
 800edfc:	f104 0014 	add.w	r0, r4, #20
 800ee00:	f7ff fbb4 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800ee04:	61a0      	str	r0, [r4, #24]
 800ee06:	a801      	add	r0, sp, #4
 800ee08:	f001 f8fc 	bl	8010004 <_ZNSsD1Ev>
 800ee0c:	4629      	mov	r1, r5
 800ee0e:	a801      	add	r0, sp, #4
 800ee10:	f009 fa7a 	bl	8018308 <_ZNKSt8numpunctIcE9falsenameEv>
 800ee14:	a901      	add	r1, sp, #4
 800ee16:	f104 001c 	add.w	r0, r4, #28
 800ee1a:	f7ff fba7 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800ee1e:	6220      	str	r0, [r4, #32]
 800ee20:	a801      	add	r0, sp, #4
 800ee22:	f001 f8ef 	bl	8010004 <_ZNSsD1Ev>
 800ee26:	b003      	add	sp, #12
 800ee28:	bd30      	pop	{r4, r5, pc}

0800ee2a <_ZNSt13__facet_shims21__numpunct_fill_cacheIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt16__numpunct_cacheIT_E>:
 800ee2a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ee2c:	4608      	mov	r0, r1
 800ee2e:	4614      	mov	r4, r2
 800ee30:	460d      	mov	r5, r1
 800ee32:	f00f fcaf 	bl	801e794 <_ZNKSt8numpunctIwE13decimal_pointEv>
 800ee36:	6260      	str	r0, [r4, #36]	; 0x24
 800ee38:	4628      	mov	r0, r5
 800ee3a:	f00f fcae 	bl	801e79a <_ZNKSt8numpunctIwE13thousands_sepEv>
 800ee3e:	2300      	movs	r3, #0
 800ee40:	60a3      	str	r3, [r4, #8]
 800ee42:	6163      	str	r3, [r4, #20]
 800ee44:	61e3      	str	r3, [r4, #28]
 800ee46:	2301      	movs	r3, #1
 800ee48:	f884 3124 	strb.w	r3, [r4, #292]	; 0x124
 800ee4c:	62a0      	str	r0, [r4, #40]	; 0x28
 800ee4e:	4629      	mov	r1, r5
 800ee50:	a801      	add	r0, sp, #4
 800ee52:	f00f fca5 	bl	801e7a0 <_ZNKSt8numpunctIwE8groupingEv>
 800ee56:	a901      	add	r1, sp, #4
 800ee58:	f104 0008 	add.w	r0, r4, #8
 800ee5c:	f7ff fb86 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800ee60:	60e0      	str	r0, [r4, #12]
 800ee62:	a801      	add	r0, sp, #4
 800ee64:	f001 f8ce 	bl	8010004 <_ZNSsD1Ev>
 800ee68:	4629      	mov	r1, r5
 800ee6a:	a801      	add	r0, sp, #4
 800ee6c:	f00f fc9f 	bl	801e7ae <_ZNKSt8numpunctIwE8truenameEv>
 800ee70:	a901      	add	r1, sp, #4
 800ee72:	f104 0014 	add.w	r0, r4, #20
 800ee76:	f7ff fb8e 	bl	800e596 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800ee7a:	61a0      	str	r0, [r4, #24]
 800ee7c:	a801      	add	r0, sp, #4
 800ee7e:	f001 fc6d 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800ee82:	4629      	mov	r1, r5
 800ee84:	a801      	add	r0, sp, #4
 800ee86:	f00f fc99 	bl	801e7bc <_ZNKSt8numpunctIwE9falsenameEv>
 800ee8a:	a901      	add	r1, sp, #4
 800ee8c:	f104 001c 	add.w	r0, r4, #28
 800ee90:	f7ff fb81 	bl	800e596 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800ee94:	6220      	str	r0, [r4, #32]
 800ee96:	a801      	add	r0, sp, #4
 800ee98:	f001 fc60 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800ee9c:	b003      	add	sp, #12
 800ee9e:	bd30      	pop	{r4, r5, pc}

0800eea0 <_ZNSt13__facet_shims17__collate_compareIcEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKT_S9_S9_S9_>:
 800eea0:	b410      	push	{r4}
 800eea2:	4608      	mov	r0, r1
 800eea4:	4611      	mov	r1, r2
 800eea6:	461a      	mov	r2, r3
 800eea8:	e9dd 3401 	ldrd	r3, r4, [sp, #4]
 800eeac:	9401      	str	r4, [sp, #4]
 800eeae:	f85d 4b04 	ldr.w	r4, [sp], #4
 800eeb2:	f009 bb6d 	b.w	8018590 <_ZNKSt7collateIcE7compareEPKcS2_S2_S2_>

0800eeb6 <_ZNSt13__facet_shims17__collate_compareIwEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKT_S9_S9_S9_>:
 800eeb6:	b410      	push	{r4}
 800eeb8:	4608      	mov	r0, r1
 800eeba:	4611      	mov	r1, r2
 800eebc:	461a      	mov	r2, r3
 800eebe:	e9dd 3401 	ldrd	r3, r4, [sp, #4]
 800eec2:	9401      	str	r4, [sp, #4]
 800eec4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800eec8:	f00f bdbc 	b.w	801ea44 <_ZNKSt7collateIwE7compareEPKwS2_S2_S2_>

0800eecc <_ZNSt13__facet_shims23__moneypunct_fill_cacheIcLb1EEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>:
 800eecc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800eece:	4608      	mov	r0, r1
 800eed0:	4614      	mov	r4, r2
 800eed2:	460d      	mov	r5, r1
 800eed4:	f009 f955 	bl	8018182 <_ZNKSt10moneypunctIcLb1EE13decimal_pointEv>
 800eed8:	7460      	strb	r0, [r4, #17]
 800eeda:	4628      	mov	r0, r5
 800eedc:	f009 f954 	bl	8018188 <_ZNKSt10moneypunctIcLb1EE13thousands_sepEv>
 800eee0:	74a0      	strb	r0, [r4, #18]
 800eee2:	4628      	mov	r0, r5
 800eee4:	f009 f96f 	bl	80181c6 <_ZNKSt10moneypunctIcLb1EE11frac_digitsEv>
 800eee8:	2300      	movs	r3, #0
 800eeea:	60a3      	str	r3, [r4, #8]
 800eeec:	6163      	str	r3, [r4, #20]
 800eeee:	61e3      	str	r3, [r4, #28]
 800eef0:	6263      	str	r3, [r4, #36]	; 0x24
 800eef2:	2301      	movs	r3, #1
 800eef4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800eef8:	62e0      	str	r0, [r4, #44]	; 0x2c
 800eefa:	4629      	mov	r1, r5
 800eefc:	a801      	add	r0, sp, #4
 800eefe:	f009 f946 	bl	801818e <_ZNKSt10moneypunctIcLb1EE8groupingEv>
 800ef02:	a901      	add	r1, sp, #4
 800ef04:	f104 0008 	add.w	r0, r4, #8
 800ef08:	f7ff fb30 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800ef0c:	60e0      	str	r0, [r4, #12]
 800ef0e:	a801      	add	r0, sp, #4
 800ef10:	f001 f878 	bl	8010004 <_ZNSsD1Ev>
 800ef14:	4629      	mov	r1, r5
 800ef16:	a801      	add	r0, sp, #4
 800ef18:	f009 f940 	bl	801819c <_ZNKSt10moneypunctIcLb1EE11curr_symbolEv>
 800ef1c:	a901      	add	r1, sp, #4
 800ef1e:	f104 0014 	add.w	r0, r4, #20
 800ef22:	f7ff fb23 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800ef26:	61a0      	str	r0, [r4, #24]
 800ef28:	a801      	add	r0, sp, #4
 800ef2a:	f001 f86b 	bl	8010004 <_ZNSsD1Ev>
 800ef2e:	4629      	mov	r1, r5
 800ef30:	a801      	add	r0, sp, #4
 800ef32:	f009 f93a 	bl	80181aa <_ZNKSt10moneypunctIcLb1EE13positive_signEv>
 800ef36:	a901      	add	r1, sp, #4
 800ef38:	f104 001c 	add.w	r0, r4, #28
 800ef3c:	f7ff fb16 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800ef40:	6220      	str	r0, [r4, #32]
 800ef42:	a801      	add	r0, sp, #4
 800ef44:	f001 f85e 	bl	8010004 <_ZNSsD1Ev>
 800ef48:	4629      	mov	r1, r5
 800ef4a:	a801      	add	r0, sp, #4
 800ef4c:	f009 f934 	bl	80181b8 <_ZNKSt10moneypunctIcLb1EE13negative_signEv>
 800ef50:	a901      	add	r1, sp, #4
 800ef52:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ef56:	f7ff fb09 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800ef5a:	62a0      	str	r0, [r4, #40]	; 0x28
 800ef5c:	a801      	add	r0, sp, #4
 800ef5e:	f001 f851 	bl	8010004 <_ZNSsD1Ev>
 800ef62:	4628      	mov	r0, r5
 800ef64:	f009 f932 	bl	80181cc <_ZNKSt10moneypunctIcLb1EE10pos_formatEv>
 800ef68:	6320      	str	r0, [r4, #48]	; 0x30
 800ef6a:	4628      	mov	r0, r5
 800ef6c:	f009 f933 	bl	80181d6 <_ZNKSt10moneypunctIcLb1EE10neg_formatEv>
 800ef70:	6360      	str	r0, [r4, #52]	; 0x34
 800ef72:	b003      	add	sp, #12
 800ef74:	bd30      	pop	{r4, r5, pc}

0800ef76 <_ZNSt13__facet_shims23__moneypunct_fill_cacheIcLb0EEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>:
 800ef76:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ef78:	4608      	mov	r0, r1
 800ef7a:	4614      	mov	r4, r2
 800ef7c:	460d      	mov	r5, r1
 800ef7e:	f009 f8d1 	bl	8018124 <_ZNKSt10moneypunctIcLb0EE13decimal_pointEv>
 800ef82:	7460      	strb	r0, [r4, #17]
 800ef84:	4628      	mov	r0, r5
 800ef86:	f009 f8d0 	bl	801812a <_ZNKSt10moneypunctIcLb0EE13thousands_sepEv>
 800ef8a:	74a0      	strb	r0, [r4, #18]
 800ef8c:	4628      	mov	r0, r5
 800ef8e:	f009 f8eb 	bl	8018168 <_ZNKSt10moneypunctIcLb0EE11frac_digitsEv>
 800ef92:	2300      	movs	r3, #0
 800ef94:	60a3      	str	r3, [r4, #8]
 800ef96:	6163      	str	r3, [r4, #20]
 800ef98:	61e3      	str	r3, [r4, #28]
 800ef9a:	6263      	str	r3, [r4, #36]	; 0x24
 800ef9c:	2301      	movs	r3, #1
 800ef9e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800efa2:	62e0      	str	r0, [r4, #44]	; 0x2c
 800efa4:	4629      	mov	r1, r5
 800efa6:	a801      	add	r0, sp, #4
 800efa8:	f009 f8c2 	bl	8018130 <_ZNKSt10moneypunctIcLb0EE8groupingEv>
 800efac:	a901      	add	r1, sp, #4
 800efae:	f104 0008 	add.w	r0, r4, #8
 800efb2:	f7ff fadb 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800efb6:	60e0      	str	r0, [r4, #12]
 800efb8:	a801      	add	r0, sp, #4
 800efba:	f001 f823 	bl	8010004 <_ZNSsD1Ev>
 800efbe:	4629      	mov	r1, r5
 800efc0:	a801      	add	r0, sp, #4
 800efc2:	f009 f8bc 	bl	801813e <_ZNKSt10moneypunctIcLb0EE11curr_symbolEv>
 800efc6:	a901      	add	r1, sp, #4
 800efc8:	f104 0014 	add.w	r0, r4, #20
 800efcc:	f7ff face 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800efd0:	61a0      	str	r0, [r4, #24]
 800efd2:	a801      	add	r0, sp, #4
 800efd4:	f001 f816 	bl	8010004 <_ZNSsD1Ev>
 800efd8:	4629      	mov	r1, r5
 800efda:	a801      	add	r0, sp, #4
 800efdc:	f009 f8b6 	bl	801814c <_ZNKSt10moneypunctIcLb0EE13positive_signEv>
 800efe0:	a901      	add	r1, sp, #4
 800efe2:	f104 001c 	add.w	r0, r4, #28
 800efe6:	f7ff fac1 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800efea:	6220      	str	r0, [r4, #32]
 800efec:	a801      	add	r0, sp, #4
 800efee:	f001 f809 	bl	8010004 <_ZNSsD1Ev>
 800eff2:	4629      	mov	r1, r5
 800eff4:	a801      	add	r0, sp, #4
 800eff6:	f009 f8b0 	bl	801815a <_ZNKSt10moneypunctIcLb0EE13negative_signEv>
 800effa:	a901      	add	r1, sp, #4
 800effc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f000:	f7ff fab4 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800f004:	62a0      	str	r0, [r4, #40]	; 0x28
 800f006:	a801      	add	r0, sp, #4
 800f008:	f000 fffc 	bl	8010004 <_ZNSsD1Ev>
 800f00c:	4628      	mov	r0, r5
 800f00e:	f009 f8ae 	bl	801816e <_ZNKSt10moneypunctIcLb0EE10pos_formatEv>
 800f012:	6320      	str	r0, [r4, #48]	; 0x30
 800f014:	4628      	mov	r0, r5
 800f016:	f009 f8af 	bl	8018178 <_ZNKSt10moneypunctIcLb0EE10neg_formatEv>
 800f01a:	6360      	str	r0, [r4, #52]	; 0x34
 800f01c:	b003      	add	sp, #12
 800f01e:	bd30      	pop	{r4, r5, pc}

0800f020 <_ZNSt13__facet_shims23__moneypunct_fill_cacheIwLb1EEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>:
 800f020:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f022:	4608      	mov	r0, r1
 800f024:	4614      	mov	r4, r2
 800f026:	460d      	mov	r5, r1
 800f028:	f00f fb05 	bl	801e636 <_ZNKSt10moneypunctIwLb1EE13decimal_pointEv>
 800f02c:	6160      	str	r0, [r4, #20]
 800f02e:	4628      	mov	r0, r5
 800f030:	f00f fb04 	bl	801e63c <_ZNKSt10moneypunctIwLb1EE13thousands_sepEv>
 800f034:	61a0      	str	r0, [r4, #24]
 800f036:	4628      	mov	r0, r5
 800f038:	f00f fb1f 	bl	801e67a <_ZNKSt10moneypunctIwLb1EE11frac_digitsEv>
 800f03c:	2300      	movs	r3, #0
 800f03e:	60a3      	str	r3, [r4, #8]
 800f040:	61e3      	str	r3, [r4, #28]
 800f042:	6263      	str	r3, [r4, #36]	; 0x24
 800f044:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f046:	2301      	movs	r3, #1
 800f048:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 800f04c:	6360      	str	r0, [r4, #52]	; 0x34
 800f04e:	4629      	mov	r1, r5
 800f050:	a801      	add	r0, sp, #4
 800f052:	f00f faf6 	bl	801e642 <_ZNKSt10moneypunctIwLb1EE8groupingEv>
 800f056:	a901      	add	r1, sp, #4
 800f058:	f104 0008 	add.w	r0, r4, #8
 800f05c:	f7ff fa86 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800f060:	60e0      	str	r0, [r4, #12]
 800f062:	a801      	add	r0, sp, #4
 800f064:	f000 ffce 	bl	8010004 <_ZNSsD1Ev>
 800f068:	4629      	mov	r1, r5
 800f06a:	a801      	add	r0, sp, #4
 800f06c:	f00f faf0 	bl	801e650 <_ZNKSt10moneypunctIwLb1EE11curr_symbolEv>
 800f070:	a901      	add	r1, sp, #4
 800f072:	f104 001c 	add.w	r0, r4, #28
 800f076:	f7ff fa8e 	bl	800e596 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800f07a:	6220      	str	r0, [r4, #32]
 800f07c:	a801      	add	r0, sp, #4
 800f07e:	f001 fb6d 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800f082:	4629      	mov	r1, r5
 800f084:	a801      	add	r0, sp, #4
 800f086:	f00f faea 	bl	801e65e <_ZNKSt10moneypunctIwLb1EE13positive_signEv>
 800f08a:	a901      	add	r1, sp, #4
 800f08c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f090:	f7ff fa81 	bl	800e596 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800f094:	62a0      	str	r0, [r4, #40]	; 0x28
 800f096:	a801      	add	r0, sp, #4
 800f098:	f001 fb60 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800f09c:	4629      	mov	r1, r5
 800f09e:	a801      	add	r0, sp, #4
 800f0a0:	f00f fae4 	bl	801e66c <_ZNKSt10moneypunctIwLb1EE13negative_signEv>
 800f0a4:	a901      	add	r1, sp, #4
 800f0a6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800f0aa:	f7ff fa74 	bl	800e596 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800f0ae:	6320      	str	r0, [r4, #48]	; 0x30
 800f0b0:	a801      	add	r0, sp, #4
 800f0b2:	f001 fb53 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800f0b6:	4628      	mov	r0, r5
 800f0b8:	f00f fae2 	bl	801e680 <_ZNKSt10moneypunctIwLb1EE10pos_formatEv>
 800f0bc:	63a0      	str	r0, [r4, #56]	; 0x38
 800f0be:	4628      	mov	r0, r5
 800f0c0:	f00f fae3 	bl	801e68a <_ZNKSt10moneypunctIwLb1EE10neg_formatEv>
 800f0c4:	63e0      	str	r0, [r4, #60]	; 0x3c
 800f0c6:	b003      	add	sp, #12
 800f0c8:	bd30      	pop	{r4, r5, pc}

0800f0ca <_ZNSt13__facet_shims23__moneypunct_fill_cacheIwLb0EEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>:
 800f0ca:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f0cc:	4608      	mov	r0, r1
 800f0ce:	4614      	mov	r4, r2
 800f0d0:	460d      	mov	r5, r1
 800f0d2:	f00f fa81 	bl	801e5d8 <_ZNKSt10moneypunctIwLb0EE13decimal_pointEv>
 800f0d6:	6160      	str	r0, [r4, #20]
 800f0d8:	4628      	mov	r0, r5
 800f0da:	f00f fa80 	bl	801e5de <_ZNKSt10moneypunctIwLb0EE13thousands_sepEv>
 800f0de:	61a0      	str	r0, [r4, #24]
 800f0e0:	4628      	mov	r0, r5
 800f0e2:	f00f fa9b 	bl	801e61c <_ZNKSt10moneypunctIwLb0EE11frac_digitsEv>
 800f0e6:	2300      	movs	r3, #0
 800f0e8:	60a3      	str	r3, [r4, #8]
 800f0ea:	61e3      	str	r3, [r4, #28]
 800f0ec:	6263      	str	r3, [r4, #36]	; 0x24
 800f0ee:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f0f0:	2301      	movs	r3, #1
 800f0f2:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 800f0f6:	6360      	str	r0, [r4, #52]	; 0x34
 800f0f8:	4629      	mov	r1, r5
 800f0fa:	a801      	add	r0, sp, #4
 800f0fc:	f00f fa72 	bl	801e5e4 <_ZNKSt10moneypunctIwLb0EE8groupingEv>
 800f100:	a901      	add	r1, sp, #4
 800f102:	f104 0008 	add.w	r0, r4, #8
 800f106:	f7ff fa31 	bl	800e56c <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800f10a:	60e0      	str	r0, [r4, #12]
 800f10c:	a801      	add	r0, sp, #4
 800f10e:	f000 ff79 	bl	8010004 <_ZNSsD1Ev>
 800f112:	4629      	mov	r1, r5
 800f114:	a801      	add	r0, sp, #4
 800f116:	f00f fa6c 	bl	801e5f2 <_ZNKSt10moneypunctIwLb0EE11curr_symbolEv>
 800f11a:	a901      	add	r1, sp, #4
 800f11c:	f104 001c 	add.w	r0, r4, #28
 800f120:	f7ff fa39 	bl	800e596 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800f124:	6220      	str	r0, [r4, #32]
 800f126:	a801      	add	r0, sp, #4
 800f128:	f001 fb18 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800f12c:	4629      	mov	r1, r5
 800f12e:	a801      	add	r0, sp, #4
 800f130:	f00f fa66 	bl	801e600 <_ZNKSt10moneypunctIwLb0EE13positive_signEv>
 800f134:	a901      	add	r1, sp, #4
 800f136:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800f13a:	f7ff fa2c 	bl	800e596 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800f13e:	62a0      	str	r0, [r4, #40]	; 0x28
 800f140:	a801      	add	r0, sp, #4
 800f142:	f001 fb0b 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800f146:	4629      	mov	r1, r5
 800f148:	a801      	add	r0, sp, #4
 800f14a:	f00f fa60 	bl	801e60e <_ZNKSt10moneypunctIwLb0EE13negative_signEv>
 800f14e:	a901      	add	r1, sp, #4
 800f150:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800f154:	f7ff fa1f 	bl	800e596 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKSbIS2_St11char_traitsIS2_ESaIS2_EE>
 800f158:	6320      	str	r0, [r4, #48]	; 0x30
 800f15a:	a801      	add	r0, sp, #4
 800f15c:	f001 fafe 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800f160:	4628      	mov	r0, r5
 800f162:	f00f fa5e 	bl	801e622 <_ZNKSt10moneypunctIwLb0EE10pos_formatEv>
 800f166:	63a0      	str	r0, [r4, #56]	; 0x38
 800f168:	4628      	mov	r0, r5
 800f16a:	f00f fa5f 	bl	801e62c <_ZNKSt10moneypunctIwLb0EE10neg_formatEv>
 800f16e:	63e0      	str	r0, [r4, #60]	; 0x3c
 800f170:	b003      	add	sp, #12
 800f172:	bd30      	pop	{r4, r5, pc}

0800f174 <_ZNSt13__facet_shims15__messages_openIcEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKcjRKS3_>:
 800f174:	b513      	push	{r0, r1, r4, lr}
 800f176:	460c      	mov	r4, r1
 800f178:	a801      	add	r0, sp, #4
 800f17a:	4611      	mov	r1, r2
 800f17c:	461a      	mov	r2, r3
 800f17e:	466b      	mov	r3, sp
 800f180:	f001 f99c 	bl	80104bc <_ZNSsC1EPKcjRKSaIcE>
 800f184:	9a04      	ldr	r2, [sp, #16]
 800f186:	a901      	add	r1, sp, #4
 800f188:	4620      	mov	r0, r4
 800f18a:	f009 f9ef 	bl	801856c <_ZNKSt8messagesIcE4openERKSsRKSt6locale>
 800f18e:	4604      	mov	r4, r0
 800f190:	a801      	add	r0, sp, #4
 800f192:	f000 ff37 	bl	8010004 <_ZNSsD1Ev>
 800f196:	4620      	mov	r0, r4
 800f198:	b002      	add	sp, #8
 800f19a:	bd10      	pop	{r4, pc}

0800f19c <_ZNSt13__facet_shims15__messages_openIwEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKcjRKS3_>:
 800f19c:	b513      	push	{r0, r1, r4, lr}
 800f19e:	460c      	mov	r4, r1
 800f1a0:	a801      	add	r0, sp, #4
 800f1a2:	4611      	mov	r1, r2
 800f1a4:	461a      	mov	r2, r3
 800f1a6:	466b      	mov	r3, sp
 800f1a8:	f001 f988 	bl	80104bc <_ZNSsC1EPKcjRKSaIcE>
 800f1ac:	9a04      	ldr	r2, [sp, #16]
 800f1ae:	a901      	add	r1, sp, #4
 800f1b0:	4620      	mov	r0, r4
 800f1b2:	f00f fc35 	bl	801ea20 <_ZNKSt8messagesIwE4openERKSsRKSt6locale>
 800f1b6:	4604      	mov	r4, r0
 800f1b8:	a801      	add	r0, sp, #4
 800f1ba:	f000 ff23 	bl	8010004 <_ZNSsD1Ev>
 800f1be:	4620      	mov	r0, r4
 800f1c0:	b002      	add	sp, #8
 800f1c2:	bd10      	pop	{r4, pc}

0800f1c4 <_ZNSt13__facet_shims16__messages_closeIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEi>:
 800f1c4:	4608      	mov	r0, r1
 800f1c6:	4611      	mov	r1, r2
 800f1c8:	f009 b9df 	b.w	801858a <_ZNKSt8messagesIcE5closeEi>

0800f1cc <_ZNSt13__facet_shims16__messages_closeIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEi>:
 800f1cc:	4608      	mov	r0, r1
 800f1ce:	4611      	mov	r1, r2
 800f1d0:	f00f bc35 	b.w	801ea3e <_ZNKSt8messagesIwE5closeEi>

0800f1d4 <_ZNSt13__facet_shims20__time_get_dateorderIcEENSt9time_base9dateorderESt17integral_constantIbLb0EEPKNSt6locale5facetE>:
 800f1d4:	4608      	mov	r0, r1
 800f1d6:	f009 b92a 	b.w	801842e <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10date_orderEv>

0800f1da <_ZNSt13__facet_shims20__time_get_dateorderIwEENSt9time_base9dateorderESt17integral_constantIbLb0EEPKNSt6locale5facetE>:
 800f1da:	4608      	mov	r0, r1
 800f1dc:	f00f bb81 	b.w	801e8e2 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10date_orderEv>

0800f1e0 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>:
 800f1e0:	b082      	sub	sp, #8
 800f1e2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f1e4:	b087      	sub	sp, #28
 800f1e6:	4605      	mov	r5, r0
 800f1e8:	f89d 7050 	ldrb.w	r7, [sp, #80]	; 0x50
 800f1ec:	930d      	str	r3, [sp, #52]	; 0x34
 800f1ee:	2f74      	cmp	r7, #116	; 0x74
 800f1f0:	4616      	mov	r6, r2
 800f1f2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f1f4:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
 800f1f8:	ac0f      	add	r4, sp, #60	; 0x3c
 800f1fa:	ab0d      	add	r3, sp, #52	; 0x34
 800f1fc:	d01e      	beq.n	800f23c <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x5c>
 800f1fe:	d80e      	bhi.n	800f21e <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x3e>
 800f200:	2f64      	cmp	r7, #100	; 0x64
 800f202:	d02d      	beq.n	800f260 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x80>
 800f204:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800f208:	9202      	str	r2, [sp, #8]
 800f20a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800f20e:	e88d 0003 	stmia.w	sp, {r0, r1}
 800f212:	4631      	mov	r1, r6
 800f214:	cb0c      	ldmia	r3, {r2, r3}
 800f216:	4628      	mov	r0, r5
 800f218:	f009 f960 	bl	80184dc <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE13get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>
 800f21c:	e01a      	b.n	800f254 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
 800f21e:	2f77      	cmp	r7, #119	; 0x77
 800f220:	d02b      	beq.n	800f27a <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x9a>
 800f222:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800f226:	9202      	str	r2, [sp, #8]
 800f228:	e894 0003 	ldmia.w	r4, {r0, r1}
 800f22c:	e88d 0003 	stmia.w	sp, {r0, r1}
 800f230:	4631      	mov	r1, r6
 800f232:	cb0c      	ldmia	r3, {r2, r3}
 800f234:	4628      	mov	r0, r5
 800f236:	f009 f96d 	bl	8018514 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8get_yearES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>
 800f23a:	e00b      	b.n	800f254 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
 800f23c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800f240:	9202      	str	r2, [sp, #8]
 800f242:	e894 0003 	ldmia.w	r4, {r0, r1}
 800f246:	e88d 0003 	stmia.w	sp, {r0, r1}
 800f24a:	4631      	mov	r1, r6
 800f24c:	cb0c      	ldmia	r3, {r2, r3}
 800f24e:	4628      	mov	r0, r5
 800f250:	f009 f8f0 	bl	8018434 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8get_timeES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>
 800f254:	4628      	mov	r0, r5
 800f256:	b007      	add	sp, #28
 800f258:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f25c:	b002      	add	sp, #8
 800f25e:	4770      	bx	lr
 800f260:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800f264:	9202      	str	r2, [sp, #8]
 800f266:	e894 0003 	ldmia.w	r4, {r0, r1}
 800f26a:	e88d 0003 	stmia.w	sp, {r0, r1}
 800f26e:	4631      	mov	r1, r6
 800f270:	cb0c      	ldmia	r3, {r2, r3}
 800f272:	4628      	mov	r0, r5
 800f274:	f009 f8fa 	bl	801846c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8get_dateES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>
 800f278:	e7ec      	b.n	800f254 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
 800f27a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800f27e:	9202      	str	r2, [sp, #8]
 800f280:	e894 0003 	ldmia.w	r4, {r0, r1}
 800f284:	e88d 0003 	stmia.w	sp, {r0, r1}
 800f288:	4631      	mov	r1, r6
 800f28a:	cb0c      	ldmia	r3, {r2, r3}
 800f28c:	4628      	mov	r0, r5
 800f28e:	f009 f909 	bl	80184a4 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11get_weekdayES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>
 800f292:	e7df      	b.n	800f254 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>

0800f294 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>:
 800f294:	b082      	sub	sp, #8
 800f296:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f298:	b087      	sub	sp, #28
 800f29a:	4605      	mov	r5, r0
 800f29c:	f89d 7050 	ldrb.w	r7, [sp, #80]	; 0x50
 800f2a0:	930d      	str	r3, [sp, #52]	; 0x34
 800f2a2:	2f74      	cmp	r7, #116	; 0x74
 800f2a4:	4616      	mov	r6, r2
 800f2a6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f2a8:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
 800f2ac:	ac0f      	add	r4, sp, #60	; 0x3c
 800f2ae:	ab0d      	add	r3, sp, #52	; 0x34
 800f2b0:	d01e      	beq.n	800f2f0 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x5c>
 800f2b2:	d80e      	bhi.n	800f2d2 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x3e>
 800f2b4:	2f64      	cmp	r7, #100	; 0x64
 800f2b6:	d02d      	beq.n	800f314 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x80>
 800f2b8:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800f2bc:	9202      	str	r2, [sp, #8]
 800f2be:	e894 0003 	ldmia.w	r4, {r0, r1}
 800f2c2:	e88d 0003 	stmia.w	sp, {r0, r1}
 800f2c6:	4631      	mov	r1, r6
 800f2c8:	cb0c      	ldmia	r3, {r2, r3}
 800f2ca:	4628      	mov	r0, r5
 800f2cc:	f00f fb60 	bl	801e990 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE13get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>
 800f2d0:	e01a      	b.n	800f308 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
 800f2d2:	2f77      	cmp	r7, #119	; 0x77
 800f2d4:	d02b      	beq.n	800f32e <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x9a>
 800f2d6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800f2da:	9202      	str	r2, [sp, #8]
 800f2dc:	e894 0003 	ldmia.w	r4, {r0, r1}
 800f2e0:	e88d 0003 	stmia.w	sp, {r0, r1}
 800f2e4:	4631      	mov	r1, r6
 800f2e6:	cb0c      	ldmia	r3, {r2, r3}
 800f2e8:	4628      	mov	r0, r5
 800f2ea:	f00f fb6d 	bl	801e9c8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE8get_yearES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>
 800f2ee:	e00b      	b.n	800f308 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
 800f2f0:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800f2f4:	9202      	str	r2, [sp, #8]
 800f2f6:	e894 0003 	ldmia.w	r4, {r0, r1}
 800f2fa:	e88d 0003 	stmia.w	sp, {r0, r1}
 800f2fe:	4631      	mov	r1, r6
 800f300:	cb0c      	ldmia	r3, {r2, r3}
 800f302:	4628      	mov	r0, r5
 800f304:	f00f faf0 	bl	801e8e8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE8get_timeES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>
 800f308:	4628      	mov	r0, r5
 800f30a:	b007      	add	sp, #28
 800f30c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f310:	b002      	add	sp, #8
 800f312:	4770      	bx	lr
 800f314:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800f318:	9202      	str	r2, [sp, #8]
 800f31a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800f31e:	e88d 0003 	stmia.w	sp, {r0, r1}
 800f322:	4631      	mov	r1, r6
 800f324:	cb0c      	ldmia	r3, {r2, r3}
 800f326:	4628      	mov	r0, r5
 800f328:	f00f fafa 	bl	801e920 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE8get_dateES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>
 800f32c:	e7ec      	b.n	800f308 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
 800f32e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 800f332:	9202      	str	r2, [sp, #8]
 800f334:	e894 0003 	ldmia.w	r4, {r0, r1}
 800f338:	e88d 0003 	stmia.w	sp, {r0, r1}
 800f33c:	4631      	mov	r1, r6
 800f33e:	cb0c      	ldmia	r3, {r2, r3}
 800f340:	4628      	mov	r0, r5
 800f342:	f00f fb09 	bl	801e958 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11get_weekdayES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>
 800f346:	e7df      	b.n	800f308 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>

0800f348 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE>:
 800f348:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f34a:	4aaf      	ldr	r2, [pc, #700]	; (800f608 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2c0>)
 800f34c:	460c      	mov	r4, r1
 800f34e:	f06f 0301 	mvn.w	r3, #1
 800f352:	49ae      	ldr	r1, [pc, #696]	; (800f60c <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2c4>)
 800f354:	4605      	mov	r5, r0
 800f356:	f014 fdbd 	bl	8023ed4 <__dynamic_cast>
 800f35a:	4606      	mov	r6, r0
 800f35c:	b110      	cbz	r0, 800f364 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x1c>
 800f35e:	6804      	ldr	r4, [r0, #0]
 800f360:	4620      	mov	r0, r4
 800f362:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f364:	4baa      	ldr	r3, [pc, #680]	; (800f610 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2c8>)
 800f366:	429c      	cmp	r4, r3
 800f368:	d129      	bne.n	800f3be <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x76>
 800f36a:	2068      	movs	r0, #104	; 0x68
 800f36c:	f7fc fde8 	bl	800bf40 <_Znwj>
 800f370:	4ba8      	ldr	r3, [pc, #672]	; (800f614 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2cc>)
 800f372:	6046      	str	r6, [r0, #4]
 800f374:	4607      	mov	r7, r0
 800f376:	e9c0 6602 	strd	r6, r6, [r0, #8]
 800f37a:	e9c0 6605 	strd	r6, r6, [r0, #20]
 800f37e:	e9c0 6607 	strd	r6, r6, [r0, #28]
 800f382:	6003      	str	r3, [r0, #0]
 800f384:	7406      	strb	r6, [r0, #16]
 800f386:	8486      	strh	r6, [r0, #36]	; 0x24
 800f388:	f880 6064 	strb.w	r6, [r0, #100]	; 0x64
 800f38c:	2014      	movs	r0, #20
 800f38e:	f7fc fdd7 	bl	800bf40 <_Znwj>
 800f392:	4ba1      	ldr	r3, [pc, #644]	; (800f618 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2d0>)
 800f394:	6046      	str	r6, [r0, #4]
 800f396:	6003      	str	r3, [r0, #0]
 800f398:	6087      	str	r7, [r0, #8]
 800f39a:	4631      	mov	r1, r6
 800f39c:	4604      	mov	r4, r0
 800f39e:	f7fe f9bf 	bl	800d720 <_ZNSt8numpunctIcE22_M_initialize_numpunctEPi>
 800f3a2:	686b      	ldr	r3, [r5, #4]
 800f3a4:	60e5      	str	r5, [r4, #12]
 800f3a6:	3301      	adds	r3, #1
 800f3a8:	606b      	str	r3, [r5, #4]
 800f3aa:	4b9c      	ldr	r3, [pc, #624]	; (800f61c <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2d4>)
 800f3ac:	6023      	str	r3, [r4, #0]
 800f3ae:	6127      	str	r7, [r4, #16]
 800f3b0:	463a      	mov	r2, r7
 800f3b2:	4629      	mov	r1, r5
 800f3b4:	f04f 0000 	mov.w	r0, #0
 800f3b8:	f004 fde5 	bl	8013f86 <_ZNSt13__facet_shims21__numpunct_fill_cacheIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt16__numpunct_cacheIT_E>
 800f3bc:	e7d0      	b.n	800f360 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x18>
 800f3be:	4b98      	ldr	r3, [pc, #608]	; (800f620 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2d8>)
 800f3c0:	429c      	cmp	r4, r3
 800f3c2:	d110      	bne.n	800f3e6 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x9e>
 800f3c4:	2010      	movs	r0, #16
 800f3c6:	f7fc fdbb 	bl	800bf40 <_Znwj>
 800f3ca:	4b96      	ldr	r3, [pc, #600]	; (800f624 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2dc>)
 800f3cc:	6003      	str	r3, [r0, #0]
 800f3ce:	6046      	str	r6, [r0, #4]
 800f3d0:	4604      	mov	r4, r0
 800f3d2:	f7fc ff83 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 800f3d6:	686b      	ldr	r3, [r5, #4]
 800f3d8:	e9c4 0502 	strd	r0, r5, [r4, #8]
 800f3dc:	3301      	adds	r3, #1
 800f3de:	606b      	str	r3, [r5, #4]
 800f3e0:	4b91      	ldr	r3, [pc, #580]	; (800f628 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2e0>)
 800f3e2:	6023      	str	r3, [r4, #0]
 800f3e4:	e7bc      	b.n	800f360 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x18>
 800f3e6:	4b91      	ldr	r3, [pc, #580]	; (800f62c <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2e4>)
 800f3e8:	429c      	cmp	r4, r3
 800f3ea:	d10a      	bne.n	800f402 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0xba>
 800f3ec:	200c      	movs	r0, #12
 800f3ee:	f7fc fda7 	bl	800bf40 <_Znwj>
 800f3f2:	686b      	ldr	r3, [r5, #4]
 800f3f4:	3301      	adds	r3, #1
 800f3f6:	606b      	str	r3, [r5, #4]
 800f3f8:	e9c0 6501 	strd	r6, r5, [r0, #4]
 800f3fc:	4b8c      	ldr	r3, [pc, #560]	; (800f630 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2e8>)
 800f3fe:	4604      	mov	r4, r0
 800f400:	e7ef      	b.n	800f3e2 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x9a>
 800f402:	4b8c      	ldr	r3, [pc, #560]	; (800f634 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2ec>)
 800f404:	429c      	cmp	r4, r3
 800f406:	d10a      	bne.n	800f41e <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0xd6>
 800f408:	200c      	movs	r0, #12
 800f40a:	f7fc fd99 	bl	800bf40 <_Znwj>
 800f40e:	686b      	ldr	r3, [r5, #4]
 800f410:	3301      	adds	r3, #1
 800f412:	606b      	str	r3, [r5, #4]
 800f414:	e9c0 6501 	strd	r6, r5, [r0, #4]
 800f418:	4b87      	ldr	r3, [pc, #540]	; (800f638 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2f0>)
 800f41a:	4604      	mov	r4, r0
 800f41c:	e7e1      	b.n	800f3e2 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x9a>
 800f41e:	4b87      	ldr	r3, [pc, #540]	; (800f63c <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2f4>)
 800f420:	429c      	cmp	r4, r3
 800f422:	d10a      	bne.n	800f43a <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0xf2>
 800f424:	200c      	movs	r0, #12
 800f426:	f7fc fd8b 	bl	800bf40 <_Znwj>
 800f42a:	686b      	ldr	r3, [r5, #4]
 800f42c:	3301      	adds	r3, #1
 800f42e:	606b      	str	r3, [r5, #4]
 800f430:	e9c0 6501 	strd	r6, r5, [r0, #4]
 800f434:	4b82      	ldr	r3, [pc, #520]	; (800f640 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2f8>)
 800f436:	4604      	mov	r4, r0
 800f438:	e7d3      	b.n	800f3e2 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x9a>
 800f43a:	4b82      	ldr	r3, [pc, #520]	; (800f644 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2fc>)
 800f43c:	429c      	cmp	r4, r3
 800f43e:	d12f      	bne.n	800f4a0 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x158>
 800f440:	2044      	movs	r0, #68	; 0x44
 800f442:	f7fc fd7d 	bl	800bf40 <_Znwj>
 800f446:	4b80      	ldr	r3, [pc, #512]	; (800f648 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x300>)
 800f448:	8206      	strh	r6, [r0, #16]
 800f44a:	4607      	mov	r7, r0
 800f44c:	e9c0 3600 	strd	r3, r6, [r0]
 800f450:	e9c0 6602 	strd	r6, r6, [r0, #8]
 800f454:	e9c0 6605 	strd	r6, r6, [r0, #20]
 800f458:	e9c0 6607 	strd	r6, r6, [r0, #28]
 800f45c:	e9c0 6609 	strd	r6, r6, [r0, #36]	; 0x24
 800f460:	e9c0 660b 	strd	r6, r6, [r0, #44]	; 0x2c
 800f464:	7486      	strb	r6, [r0, #18]
 800f466:	6346      	str	r6, [r0, #52]	; 0x34
 800f468:	f880 6043 	strb.w	r6, [r0, #67]	; 0x43
 800f46c:	2014      	movs	r0, #20
 800f46e:	f7fc fd67 	bl	800bf40 <_Znwj>
 800f472:	4b76      	ldr	r3, [pc, #472]	; (800f64c <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x304>)
 800f474:	6046      	str	r6, [r0, #4]
 800f476:	6003      	str	r3, [r0, #0]
 800f478:	6087      	str	r7, [r0, #8]
 800f47a:	4632      	mov	r2, r6
 800f47c:	4631      	mov	r1, r6
 800f47e:	4604      	mov	r4, r0
 800f480:	f7fd feb6 	bl	800d1f0 <_ZNSt10moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc>
 800f484:	686b      	ldr	r3, [r5, #4]
 800f486:	60e5      	str	r5, [r4, #12]
 800f488:	3301      	adds	r3, #1
 800f48a:	606b      	str	r3, [r5, #4]
 800f48c:	4b70      	ldr	r3, [pc, #448]	; (800f650 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x308>)
 800f48e:	6023      	str	r3, [r4, #0]
 800f490:	6127      	str	r7, [r4, #16]
 800f492:	463a      	mov	r2, r7
 800f494:	4629      	mov	r1, r5
 800f496:	f04f 0000 	mov.w	r0, #0
 800f49a:	f004 fe04 	bl	80140a6 <_ZNSt13__facet_shims23__moneypunct_fill_cacheIcLb1EEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>
 800f49e:	e75f      	b.n	800f360 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x18>
 800f4a0:	4b6c      	ldr	r3, [pc, #432]	; (800f654 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x30c>)
 800f4a2:	429c      	cmp	r4, r3
 800f4a4:	d12f      	bne.n	800f506 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x1be>
 800f4a6:	2044      	movs	r0, #68	; 0x44
 800f4a8:	f7fc fd4a 	bl	800bf40 <_Znwj>
 800f4ac:	4b6a      	ldr	r3, [pc, #424]	; (800f658 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x310>)
 800f4ae:	8206      	strh	r6, [r0, #16]
 800f4b0:	4607      	mov	r7, r0
 800f4b2:	e9c0 3600 	strd	r3, r6, [r0]
 800f4b6:	e9c0 6602 	strd	r6, r6, [r0, #8]
 800f4ba:	e9c0 6605 	strd	r6, r6, [r0, #20]
 800f4be:	e9c0 6607 	strd	r6, r6, [r0, #28]
 800f4c2:	e9c0 6609 	strd	r6, r6, [r0, #36]	; 0x24
 800f4c6:	e9c0 660b 	strd	r6, r6, [r0, #44]	; 0x2c
 800f4ca:	7486      	strb	r6, [r0, #18]
 800f4cc:	6346      	str	r6, [r0, #52]	; 0x34
 800f4ce:	f880 6043 	strb.w	r6, [r0, #67]	; 0x43
 800f4d2:	2014      	movs	r0, #20
 800f4d4:	f7fc fd34 	bl	800bf40 <_Znwj>
 800f4d8:	4b60      	ldr	r3, [pc, #384]	; (800f65c <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x314>)
 800f4da:	6046      	str	r6, [r0, #4]
 800f4dc:	6003      	str	r3, [r0, #0]
 800f4de:	6087      	str	r7, [r0, #8]
 800f4e0:	4632      	mov	r2, r6
 800f4e2:	4631      	mov	r1, r6
 800f4e4:	4604      	mov	r4, r0
 800f4e6:	f7fd fec7 	bl	800d278 <_ZNSt10moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc>
 800f4ea:	686b      	ldr	r3, [r5, #4]
 800f4ec:	60e5      	str	r5, [r4, #12]
 800f4ee:	3301      	adds	r3, #1
 800f4f0:	606b      	str	r3, [r5, #4]
 800f4f2:	4b5b      	ldr	r3, [pc, #364]	; (800f660 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x318>)
 800f4f4:	6023      	str	r3, [r4, #0]
 800f4f6:	6127      	str	r7, [r4, #16]
 800f4f8:	463a      	mov	r2, r7
 800f4fa:	4629      	mov	r1, r5
 800f4fc:	f04f 0000 	mov.w	r0, #0
 800f500:	f004 fe27 	bl	8014152 <_ZNSt13__facet_shims23__moneypunct_fill_cacheIcLb0EEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>
 800f504:	e72c      	b.n	800f360 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x18>
 800f506:	4b57      	ldr	r3, [pc, #348]	; (800f664 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x31c>)
 800f508:	429c      	cmp	r4, r3
 800f50a:	d10c      	bne.n	800f526 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x1de>
 800f50c:	2014      	movs	r0, #20
 800f50e:	f7fc fd17 	bl	800bf40 <_Znwj>
 800f512:	4631      	mov	r1, r6
 800f514:	4604      	mov	r4, r0
 800f516:	f009 f819 	bl	801854c <_ZNSt8messagesIcEC1Ej>
 800f51a:	686b      	ldr	r3, [r5, #4]
 800f51c:	6125      	str	r5, [r4, #16]
 800f51e:	3301      	adds	r3, #1
 800f520:	606b      	str	r3, [r5, #4]
 800f522:	4b51      	ldr	r3, [pc, #324]	; (800f668 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x320>)
 800f524:	e75d      	b.n	800f3e2 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x9a>
 800f526:	4b51      	ldr	r3, [pc, #324]	; (800f66c <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x324>)
 800f528:	429c      	cmp	r4, r3
 800f52a:	d12c      	bne.n	800f586 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x23e>
 800f52c:	f44f 7094 	mov.w	r0, #296	; 0x128
 800f530:	f7fc fd06 	bl	800bf40 <_Znwj>
 800f534:	2700      	movs	r7, #0
 800f536:	4b4e      	ldr	r3, [pc, #312]	; (800f670 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x328>)
 800f538:	6047      	str	r7, [r0, #4]
 800f53a:	4606      	mov	r6, r0
 800f53c:	e9c0 7702 	strd	r7, r7, [r0, #8]
 800f540:	e9c0 7705 	strd	r7, r7, [r0, #20]
 800f544:	e9c0 7707 	strd	r7, r7, [r0, #28]
 800f548:	e9c0 7709 	strd	r7, r7, [r0, #36]	; 0x24
 800f54c:	6003      	str	r3, [r0, #0]
 800f54e:	7407      	strb	r7, [r0, #16]
 800f550:	f880 7124 	strb.w	r7, [r0, #292]	; 0x124
 800f554:	2014      	movs	r0, #20
 800f556:	f7fc fcf3 	bl	800bf40 <_Znwj>
 800f55a:	4b46      	ldr	r3, [pc, #280]	; (800f674 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x32c>)
 800f55c:	6047      	str	r7, [r0, #4]
 800f55e:	6003      	str	r3, [r0, #0]
 800f560:	6086      	str	r6, [r0, #8]
 800f562:	4639      	mov	r1, r7
 800f564:	4604      	mov	r4, r0
 800f566:	f7fe f943 	bl	800d7f0 <_ZNSt8numpunctIwE22_M_initialize_numpunctEPi>
 800f56a:	686b      	ldr	r3, [r5, #4]
 800f56c:	60e5      	str	r5, [r4, #12]
 800f56e:	3301      	adds	r3, #1
 800f570:	606b      	str	r3, [r5, #4]
 800f572:	4b41      	ldr	r3, [pc, #260]	; (800f678 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x330>)
 800f574:	6023      	str	r3, [r4, #0]
 800f576:	6126      	str	r6, [r4, #16]
 800f578:	4632      	mov	r2, r6
 800f57a:	4629      	mov	r1, r5
 800f57c:	f04f 0000 	mov.w	r0, #0
 800f580:	f004 fd3f 	bl	8014002 <_ZNSt13__facet_shims21__numpunct_fill_cacheIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt16__numpunct_cacheIT_E>
 800f584:	e6ec      	b.n	800f360 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x18>
 800f586:	4b3d      	ldr	r3, [pc, #244]	; (800f67c <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x334>)
 800f588:	429c      	cmp	r4, r3
 800f58a:	d110      	bne.n	800f5ae <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x266>
 800f58c:	2010      	movs	r0, #16
 800f58e:	f7fc fcd7 	bl	800bf40 <_Znwj>
 800f592:	2300      	movs	r3, #0
 800f594:	6043      	str	r3, [r0, #4]
 800f596:	4b3a      	ldr	r3, [pc, #232]	; (800f680 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x338>)
 800f598:	6003      	str	r3, [r0, #0]
 800f59a:	4604      	mov	r4, r0
 800f59c:	f7fc fe9e 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 800f5a0:	686b      	ldr	r3, [r5, #4]
 800f5a2:	3301      	adds	r3, #1
 800f5a4:	606b      	str	r3, [r5, #4]
 800f5a6:	e9c4 0502 	strd	r0, r5, [r4, #8]
 800f5aa:	4b36      	ldr	r3, [pc, #216]	; (800f684 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x33c>)
 800f5ac:	e719      	b.n	800f3e2 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x9a>
 800f5ae:	4b36      	ldr	r3, [pc, #216]	; (800f688 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x340>)
 800f5b0:	429c      	cmp	r4, r3
 800f5b2:	d10b      	bne.n	800f5cc <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x284>
 800f5b4:	200c      	movs	r0, #12
 800f5b6:	f7fc fcc3 	bl	800bf40 <_Znwj>
 800f5ba:	2300      	movs	r3, #0
 800f5bc:	e9c0 3501 	strd	r3, r5, [r0, #4]
 800f5c0:	686b      	ldr	r3, [r5, #4]
 800f5c2:	3301      	adds	r3, #1
 800f5c4:	606b      	str	r3, [r5, #4]
 800f5c6:	4604      	mov	r4, r0
 800f5c8:	4b30      	ldr	r3, [pc, #192]	; (800f68c <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x344>)
 800f5ca:	e70a      	b.n	800f3e2 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x9a>
 800f5cc:	4b30      	ldr	r3, [pc, #192]	; (800f690 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x348>)
 800f5ce:	429c      	cmp	r4, r3
 800f5d0:	d10b      	bne.n	800f5ea <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x2a2>
 800f5d2:	200c      	movs	r0, #12
 800f5d4:	f7fc fcb4 	bl	800bf40 <_Znwj>
 800f5d8:	2300      	movs	r3, #0
 800f5da:	e9c0 3501 	strd	r3, r5, [r0, #4]
 800f5de:	686b      	ldr	r3, [r5, #4]
 800f5e0:	3301      	adds	r3, #1
 800f5e2:	606b      	str	r3, [r5, #4]
 800f5e4:	4604      	mov	r4, r0
 800f5e6:	4b2b      	ldr	r3, [pc, #172]	; (800f694 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x34c>)
 800f5e8:	e6fb      	b.n	800f3e2 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x9a>
 800f5ea:	4b2b      	ldr	r3, [pc, #172]	; (800f698 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x350>)
 800f5ec:	429c      	cmp	r4, r3
 800f5ee:	d157      	bne.n	800f6a0 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x358>
 800f5f0:	200c      	movs	r0, #12
 800f5f2:	f7fc fca5 	bl	800bf40 <_Znwj>
 800f5f6:	2300      	movs	r3, #0
 800f5f8:	e9c0 3501 	strd	r3, r5, [r0, #4]
 800f5fc:	686b      	ldr	r3, [r5, #4]
 800f5fe:	3301      	adds	r3, #1
 800f600:	606b      	str	r3, [r5, #4]
 800f602:	4604      	mov	r4, r0
 800f604:	4b25      	ldr	r3, [pc, #148]	; (800f69c <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x354>)
 800f606:	e6ec      	b.n	800f3e2 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x9a>
 800f608:	0802ee30 	.word	0x0802ee30
 800f60c:	0802e934 	.word	0x0802e934
 800f610:	20003cdc 	.word	0x20003cdc
 800f614:	0802ea58 	.word	0x0802ea58
 800f618:	08030924 	.word	0x08030924
 800f61c:	0802f41c 	.word	0x0802f41c
 800f620:	20003cc0 	.word	0x20003cc0
 800f624:	08030908 	.word	0x08030908
 800f628:	0802f3ac 	.word	0x0802f3ac
 800f62c:	20003cc8 	.word	0x20003cc8
 800f630:	0802f464 	.word	0x0802f464
 800f634:	20003ce4 	.word	0x20003ce4
 800f638:	0802f4b4 	.word	0x0802f4b4
 800f63c:	20003ce0 	.word	0x20003ce0
 800f640:	0802f4e4 	.word	0x0802f4e4
 800f644:	20003ce8 	.word	0x20003ce8
 800f648:	0802e9e0 	.word	0x0802e9e0
 800f64c:	080309d4 	.word	0x080309d4
 800f650:	0802f548 	.word	0x0802f548
 800f654:	20003cec 	.word	0x20003cec
 800f658:	0802e9f0 	.word	0x0802e9f0
 800f65c:	08030a08 	.word	0x08030a08
 800f660:	0802f514 	.word	0x0802f514
 800f664:	20003cc4 	.word	0x20003cc4
 800f668:	0802f3e4 	.word	0x0802f3e4
 800f66c:	20003d3c 	.word	0x20003d3c
 800f670:	0802ea68 	.word	0x0802ea68
 800f674:	0803111c 	.word	0x0803111c
 800f678:	0802f440 	.word	0x0802f440
 800f67c:	20003d20 	.word	0x20003d20
 800f680:	080310c0 	.word	0x080310c0
 800f684:	0802f3c8 	.word	0x0802f3c8
 800f688:	20003d28 	.word	0x20003d28
 800f68c:	0802f48c 	.word	0x0802f48c
 800f690:	20003d44 	.word	0x20003d44
 800f694:	0802f4cc 	.word	0x0802f4cc
 800f698:	20003d40 	.word	0x20003d40
 800f69c:	0802f4fc 	.word	0x0802f4fc
 800f6a0:	4b3e      	ldr	r3, [pc, #248]	; (800f79c <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x454>)
 800f6a2:	429c      	cmp	r4, r3
 800f6a4:	d131      	bne.n	800f70a <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x3c2>
 800f6a6:	2070      	movs	r0, #112	; 0x70
 800f6a8:	f7fc fc4a 	bl	800bf40 <_Znwj>
 800f6ac:	2700      	movs	r7, #0
 800f6ae:	4b3c      	ldr	r3, [pc, #240]	; (800f7a0 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x458>)
 800f6b0:	6047      	str	r7, [r0, #4]
 800f6b2:	4606      	mov	r6, r0
 800f6b4:	e9c0 7702 	strd	r7, r7, [r0, #8]
 800f6b8:	e9c0 7705 	strd	r7, r7, [r0, #20]
 800f6bc:	e9c0 7707 	strd	r7, r7, [r0, #28]
 800f6c0:	e9c0 7709 	strd	r7, r7, [r0, #36]	; 0x24
 800f6c4:	e9c0 770b 	strd	r7, r7, [r0, #44]	; 0x2c
 800f6c8:	e9c0 770d 	strd	r7, r7, [r0, #52]	; 0x34
 800f6cc:	6003      	str	r3, [r0, #0]
 800f6ce:	7407      	strb	r7, [r0, #16]
 800f6d0:	63c7      	str	r7, [r0, #60]	; 0x3c
 800f6d2:	f880 706c 	strb.w	r7, [r0, #108]	; 0x6c
 800f6d6:	2014      	movs	r0, #20
 800f6d8:	f7fc fc32 	bl	800bf40 <_Znwj>
 800f6dc:	4b31      	ldr	r3, [pc, #196]	; (800f7a4 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x45c>)
 800f6de:	6047      	str	r7, [r0, #4]
 800f6e0:	6003      	str	r3, [r0, #0]
 800f6e2:	6086      	str	r6, [r0, #8]
 800f6e4:	463a      	mov	r2, r7
 800f6e6:	4639      	mov	r1, r7
 800f6e8:	4604      	mov	r4, r0
 800f6ea:	f7fd fe3d 	bl	800d368 <_ZNSt10moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc>
 800f6ee:	686b      	ldr	r3, [r5, #4]
 800f6f0:	60e5      	str	r5, [r4, #12]
 800f6f2:	3301      	adds	r3, #1
 800f6f4:	606b      	str	r3, [r5, #4]
 800f6f6:	4b2c      	ldr	r3, [pc, #176]	; (800f7a8 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x460>)
 800f6f8:	6023      	str	r3, [r4, #0]
 800f6fa:	6126      	str	r6, [r4, #16]
 800f6fc:	4632      	mov	r2, r6
 800f6fe:	4629      	mov	r1, r5
 800f700:	f04f 0000 	mov.w	r0, #0
 800f704:	f004 fd7b 	bl	80141fe <_ZNSt13__facet_shims23__moneypunct_fill_cacheIwLb1EEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>
 800f708:	e62a      	b.n	800f360 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x18>
 800f70a:	4b28      	ldr	r3, [pc, #160]	; (800f7ac <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x464>)
 800f70c:	429c      	cmp	r4, r3
 800f70e:	d131      	bne.n	800f774 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x42c>
 800f710:	2070      	movs	r0, #112	; 0x70
 800f712:	f7fc fc15 	bl	800bf40 <_Znwj>
 800f716:	2700      	movs	r7, #0
 800f718:	4b25      	ldr	r3, [pc, #148]	; (800f7b0 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x468>)
 800f71a:	6047      	str	r7, [r0, #4]
 800f71c:	4606      	mov	r6, r0
 800f71e:	e9c0 7702 	strd	r7, r7, [r0, #8]
 800f722:	e9c0 7705 	strd	r7, r7, [r0, #20]
 800f726:	e9c0 7707 	strd	r7, r7, [r0, #28]
 800f72a:	e9c0 7709 	strd	r7, r7, [r0, #36]	; 0x24
 800f72e:	e9c0 770b 	strd	r7, r7, [r0, #44]	; 0x2c
 800f732:	e9c0 770d 	strd	r7, r7, [r0, #52]	; 0x34
 800f736:	6003      	str	r3, [r0, #0]
 800f738:	7407      	strb	r7, [r0, #16]
 800f73a:	63c7      	str	r7, [r0, #60]	; 0x3c
 800f73c:	f880 706c 	strb.w	r7, [r0, #108]	; 0x6c
 800f740:	2014      	movs	r0, #20
 800f742:	f7fc fbfd 	bl	800bf40 <_Znwj>
 800f746:	4b1b      	ldr	r3, [pc, #108]	; (800f7b4 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x46c>)
 800f748:	6047      	str	r7, [r0, #4]
 800f74a:	6003      	str	r3, [r0, #0]
 800f74c:	6086      	str	r6, [r0, #8]
 800f74e:	463a      	mov	r2, r7
 800f750:	4639      	mov	r1, r7
 800f752:	4604      	mov	r4, r0
 800f754:	f7fd fe50 	bl	800d3f8 <_ZNSt10moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc>
 800f758:	686b      	ldr	r3, [r5, #4]
 800f75a:	60e5      	str	r5, [r4, #12]
 800f75c:	3301      	adds	r3, #1
 800f75e:	606b      	str	r3, [r5, #4]
 800f760:	4b15      	ldr	r3, [pc, #84]	; (800f7b8 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x470>)
 800f762:	6023      	str	r3, [r4, #0]
 800f764:	6126      	str	r6, [r4, #16]
 800f766:	4632      	mov	r2, r6
 800f768:	4629      	mov	r1, r5
 800f76a:	f04f 0000 	mov.w	r0, #0
 800f76e:	f004 fd9c 	bl	80142aa <_ZNSt13__facet_shims23__moneypunct_fill_cacheIwLb0EEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>
 800f772:	e5f5      	b.n	800f360 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x18>
 800f774:	4b11      	ldr	r3, [pc, #68]	; (800f7bc <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x474>)
 800f776:	429c      	cmp	r4, r3
 800f778:	d10c      	bne.n	800f794 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x44c>
 800f77a:	2014      	movs	r0, #20
 800f77c:	f7fc fbe0 	bl	800bf40 <_Znwj>
 800f780:	2100      	movs	r1, #0
 800f782:	4604      	mov	r4, r0
 800f784:	f00f f93c 	bl	801ea00 <_ZNSt8messagesIwEC1Ej>
 800f788:	686b      	ldr	r3, [r5, #4]
 800f78a:	6125      	str	r5, [r4, #16]
 800f78c:	3301      	adds	r3, #1
 800f78e:	606b      	str	r3, [r5, #4]
 800f790:	4b0b      	ldr	r3, [pc, #44]	; (800f7c0 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x478>)
 800f792:	e626      	b.n	800f3e2 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x9a>
 800f794:	480b      	ldr	r0, [pc, #44]	; (800f7c4 <_ZNKSt6locale5facet11_M_cow_shimEPKNS_2idE+0x47c>)
 800f796:	f008 f849 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 800f79a:	bf00      	nop
 800f79c:	20003d48 	.word	0x20003d48
 800f7a0:	0802ea00 	.word	0x0802ea00
 800f7a4:	080311cc 	.word	0x080311cc
 800f7a8:	0802f5b0 	.word	0x0802f5b0
 800f7ac:	20003d4c 	.word	0x20003d4c
 800f7b0:	0802ea10 	.word	0x0802ea10
 800f7b4:	08031200 	.word	0x08031200
 800f7b8:	0802f57c 	.word	0x0802f57c
 800f7bc:	20003d24 	.word	0x20003d24
 800f7c0:	0802f400 	.word	0x0802f400
 800f7c4:	0802edcc 	.word	0x0802edcc

0800f7c8 <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIcEEv>:
 800f7c8:	698b      	ldr	r3, [r1, #24]
 800f7ca:	b513      	push	{r0, r1, r4, lr}
 800f7cc:	4604      	mov	r4, r0
 800f7ce:	b913      	cbnz	r3, 800f7d6 <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIcEEv+0xe>
 800f7d0:	4805      	ldr	r0, [pc, #20]	; (800f7e8 <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIcEEv+0x20>)
 800f7d2:	f008 f82b 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 800f7d6:	e9d1 1200 	ldrd	r1, r2, [r1]
 800f7da:	ab01      	add	r3, sp, #4
 800f7dc:	f000 fe6e 	bl	80104bc <_ZNSsC1EPKcjRKSaIcE>
 800f7e0:	4620      	mov	r0, r4
 800f7e2:	b002      	add	sp, #8
 800f7e4:	bd10      	pop	{r4, pc}
 800f7e6:	bf00      	nop
 800f7e8:	0802edf9 	.word	0x0802edf9

0800f7ec <_ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIcE12do_transformEPKcS4_>:
 800f7ec:	b510      	push	{r4, lr}
 800f7ee:	b08a      	sub	sp, #40	; 0x28
 800f7f0:	4604      	mov	r4, r0
 800f7f2:	9300      	str	r3, [sp, #0]
 800f7f4:	2000      	movs	r0, #0
 800f7f6:	4613      	mov	r3, r2
 800f7f8:	68c9      	ldr	r1, [r1, #12]
 800f7fa:	9009      	str	r0, [sp, #36]	; 0x24
 800f7fc:	aa03      	add	r2, sp, #12
 800f7fe:	f005 f9c5 	bl	8014b8c <_ZNSt13__facet_shims19__collate_transformIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEPKT_SB_>
 800f802:	a903      	add	r1, sp, #12
 800f804:	4620      	mov	r0, r4
 800f806:	f7ff ffdf 	bl	800f7c8 <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIcEEv>
 800f80a:	a803      	add	r0, sp, #12
 800f80c:	f7ff fac9 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 800f810:	4620      	mov	r0, r4
 800f812:	b00a      	add	sp, #40	; 0x28
 800f814:	bd10      	pop	{r4, pc}

0800f816 <_ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIcE6do_getEiiiRKSs>:
 800f816:	b530      	push	{r4, r5, lr}
 800f818:	b08d      	sub	sp, #52	; 0x34
 800f81a:	4604      	mov	r4, r0
 800f81c:	2000      	movs	r0, #0
 800f81e:	900b      	str	r0, [sp, #44]	; 0x2c
 800f820:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f822:	6800      	ldr	r0, [r0, #0]
 800f824:	f850 5c0c 	ldr.w	r5, [r0, #-12]
 800f828:	e9cd 0502 	strd	r0, r5, [sp, #8]
 800f82c:	9810      	ldr	r0, [sp, #64]	; 0x40
 800f82e:	e9cd 3000 	strd	r3, r0, [sp]
 800f832:	4613      	mov	r3, r2
 800f834:	6909      	ldr	r1, [r1, #16]
 800f836:	aa05      	add	r2, sp, #20
 800f838:	f04f 0000 	mov.w	r0, #0
 800f83c:	f005 fa30 	bl	8014ca0 <_ZNSt13__facet_shims14__messages_getIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_j>
 800f840:	a905      	add	r1, sp, #20
 800f842:	4620      	mov	r0, r4
 800f844:	f7ff ffc0 	bl	800f7c8 <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIcEEv>
 800f848:	a805      	add	r0, sp, #20
 800f84a:	f7ff faaa 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 800f84e:	4620      	mov	r0, r4
 800f850:	b00d      	add	sp, #52	; 0x34
 800f852:	bd30      	pop	{r4, r5, pc}

0800f854 <_ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE>:
 800f854:	b082      	sub	sp, #8
 800f856:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f85a:	b086      	sub	sp, #24
 800f85c:	4604      	mov	r4, r0
 800f85e:	9914      	ldr	r1, [sp, #80]	; 0x50
 800f860:	f89d 8044 	ldrb.w	r8, [sp, #68]	; 0x44
 800f864:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
 800f868:	f89d a04c 	ldrb.w	sl, [sp, #76]	; 0x4c
 800f86c:	930f      	str	r3, [sp, #60]	; 0x3c
 800f86e:	4615      	mov	r5, r2
 800f870:	ae0f      	add	r6, sp, #60	; 0x3c
 800f872:	b1b1      	cbz	r1, 800f8a2 <_ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE+0x4e>
 800f874:	af05      	add	r7, sp, #20
 800f876:	4638      	mov	r0, r7
 800f878:	f7ff ffa6 	bl	800f7c8 <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIcEEv>
 800f87c:	e9cd a702 	strd	sl, r7, [sp, #8]
 800f880:	e9cd 8900 	strd	r8, r9, [sp]
 800f884:	4620      	mov	r0, r4
 800f886:	e896 000c 	ldmia.w	r6, {r2, r3}
 800f88a:	4629      	mov	r1, r5
 800f88c:	f008 fcfc 	bl	8018288 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE3putES3_bRSt8ios_basecRKSs>
 800f890:	4638      	mov	r0, r7
 800f892:	f000 fbb7 	bl	8010004 <_ZNSsD1Ev>
 800f896:	4620      	mov	r0, r4
 800f898:	b006      	add	sp, #24
 800f89a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f89e:	b002      	add	sp, #8
 800f8a0:	4770      	bx	lr
 800f8a2:	e9cd 9a01 	strd	r9, sl, [sp, #4]
 800f8a6:	f8cd 8000 	str.w	r8, [sp]
 800f8aa:	e896 000c 	ldmia.w	r6, {r2, r3}
 800f8ae:	4629      	mov	r1, r5
 800f8b0:	f008 fcd4 	bl	801825c <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE3putES3_bRSt8ios_basece>
 800f8b4:	e7ef      	b.n	800f896 <_ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE+0x42>

0800f8b6 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRSs>:
 800f8b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f8b8:	b097      	sub	sp, #92	; 0x5c
 800f8ba:	ac0a      	add	r4, sp, #40	; 0x28
 800f8bc:	e884 000c 	stmia.w	r4, {r2, r3}
 800f8c0:	ae0f      	add	r6, sp, #60	; 0x3c
 800f8c2:	2300      	movs	r3, #0
 800f8c4:	e9cd 3606 	strd	r3, r6, [sp, #24]
 800f8c8:	9315      	str	r3, [sp, #84]	; 0x54
 800f8ca:	930d      	str	r3, [sp, #52]	; 0x34
 800f8cc:	ab0d      	add	r3, sp, #52	; 0x34
 800f8ce:	9305      	str	r3, [sp, #20]
 800f8d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800f8d2:	9304      	str	r3, [sp, #16]
 800f8d4:	f89d 3078 	ldrb.w	r3, [sp, #120]	; 0x78
 800f8d8:	9303      	str	r3, [sp, #12]
 800f8da:	aa1c      	add	r2, sp, #112	; 0x70
 800f8dc:	468c      	mov	ip, r1
 800f8de:	4605      	mov	r5, r0
 800f8e0:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f8e4:	ab01      	add	r3, sp, #4
 800f8e6:	e883 0003 	stmia.w	r3, {r0, r1}
 800f8ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f8ec:	9300      	str	r3, [sp, #0]
 800f8ee:	af08      	add	r7, sp, #32
 800f8f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f8f2:	f8dc 2008 	ldr.w	r2, [ip, #8]
 800f8f6:	f04f 0100 	mov.w	r1, #0
 800f8fa:	4638      	mov	r0, r7
 800f8fc:	f005 f957 	bl	8014bae <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE>
 800f900:	e897 0003 	ldmia.w	r7, {r0, r1}
 800f904:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f906:	e884 0003 	stmia.w	r4, {r0, r1}
 800f90a:	b9a3      	cbnz	r3, 800f936 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRSs+0x80>
 800f90c:	4631      	mov	r1, r6
 800f90e:	a80e      	add	r0, sp, #56	; 0x38
 800f910:	f7ff ff5a 	bl	800f7c8 <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIcEEv>
 800f914:	9821      	ldr	r0, [sp, #132]	; 0x84
 800f916:	a90e      	add	r1, sp, #56	; 0x38
 800f918:	f000 fac6 	bl	800fea8 <_ZNSs4swapERSs>
 800f91c:	a80e      	add	r0, sp, #56	; 0x38
 800f91e:	f000 fb71 	bl	8010004 <_ZNSsD1Ev>
 800f922:	e894 0003 	ldmia.w	r4, {r0, r1}
 800f926:	e885 0003 	stmia.w	r5, {r0, r1}
 800f92a:	4630      	mov	r0, r6
 800f92c:	f7ff fa39 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 800f930:	4628      	mov	r0, r5
 800f932:	b017      	add	sp, #92	; 0x5c
 800f934:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f936:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f938:	6013      	str	r3, [r2, #0]
 800f93a:	e7f2      	b.n	800f922 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRSs+0x6c>

0800f93c <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE>:
 800f93c:	b538      	push	{r3, r4, r5, lr}
 800f93e:	6983      	ldr	r3, [r0, #24]
 800f940:	4604      	mov	r4, r0
 800f942:	460d      	mov	r5, r1
 800f944:	b103      	cbz	r3, 800f948 <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE+0xc>
 800f946:	4798      	blx	r3
 800f948:	4629      	mov	r1, r5
 800f94a:	4620      	mov	r0, r4
 800f94c:	f000 fd98 	bl	8010480 <_ZNSsC1ERKSs>
 800f950:	682b      	ldr	r3, [r5, #0]
 800f952:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 800f956:	6063      	str	r3, [r4, #4]
 800f958:	4b01      	ldr	r3, [pc, #4]	; (800f960 <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE+0x24>)
 800f95a:	61a3      	str	r3, [r4, #24]
 800f95c:	4620      	mov	r0, r4
 800f95e:	bd38      	pop	{r3, r4, r5, pc}
 800f960:	0800e565 	.word	0x0800e565
 800f964:	00000000 	.word	0x00000000

0800f968 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIcE6do_putESt19ostreambuf_iteratorIcSt11char_traitsIcEEbRSt8ios_basecRKSs>:
 800f968:	b570      	push	{r4, r5, r6, lr}
 800f96a:	b090      	sub	sp, #64	; 0x40
 800f96c:	ad09      	add	r5, sp, #36	; 0x24
 800f96e:	460e      	mov	r6, r1
 800f970:	a906      	add	r1, sp, #24
 800f972:	e881 000c 	stmia.w	r1, {r2, r3}
 800f976:	4604      	mov	r4, r0
 800f978:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800f97a:	2300      	movs	r3, #0
 800f97c:	4628      	mov	r0, r5
 800f97e:	930f      	str	r3, [sp, #60]	; 0x3c
 800f980:	f7ff ffdc 	bl	800f93c <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE>
 800f984:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800f988:	9303      	str	r3, [sp, #12]
 800f98a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800f98c:	9302      	str	r3, [sp, #8]
 800f98e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800f992:	9301      	str	r3, [sp, #4]
 800f994:	9b07      	ldr	r3, [sp, #28]
 800f996:	68b2      	ldr	r2, [r6, #8]
 800f998:	9300      	str	r3, [sp, #0]
 800f99a:	ed9f 0b07 	vldr	d0, [pc, #28]	; 800f9b8 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIcE6do_putESt19ostreambuf_iteratorIcSt11char_traitsIcEEbRSt8ios_basecRKSs+0x50>
 800f99e:	9b06      	ldr	r3, [sp, #24]
 800f9a0:	9504      	str	r5, [sp, #16]
 800f9a2:	f04f 0100 	mov.w	r1, #0
 800f9a6:	4620      	mov	r0, r4
 800f9a8:	f005 f818 	bl	80149dc <_ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE>
 800f9ac:	4628      	mov	r0, r5
 800f9ae:	f7ff f9f8 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 800f9b2:	4620      	mov	r0, r4
 800f9b4:	b010      	add	sp, #64	; 0x40
 800f9b6:	bd70      	pop	{r4, r5, r6, pc}
	...

0800f9c0 <_ZNSt13__facet_shims19__collate_transformIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEPKT_SB_>:
 800f9c0:	b513      	push	{r0, r1, r4, lr}
 800f9c2:	4614      	mov	r4, r2
 800f9c4:	a801      	add	r0, sp, #4
 800f9c6:	461a      	mov	r2, r3
 800f9c8:	9b04      	ldr	r3, [sp, #16]
 800f9ca:	f008 fde8 	bl	801859e <_ZNKSt7collateIcE9transformEPKcS2_>
 800f9ce:	a901      	add	r1, sp, #4
 800f9d0:	4620      	mov	r0, r4
 800f9d2:	f7ff ffb3 	bl	800f93c <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE>
 800f9d6:	a801      	add	r0, sp, #4
 800f9d8:	f000 fb14 	bl	8010004 <_ZNSsD1Ev>
 800f9dc:	b002      	add	sp, #8
 800f9de:	bd10      	pop	{r4, pc}

0800f9e0 <_ZNSt13__facet_shims14__messages_getIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_j>:
 800f9e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f9e2:	b087      	sub	sp, #28
 800f9e4:	ac04      	add	r4, sp, #16
 800f9e6:	460e      	mov	r6, r1
 800f9e8:	4615      	mov	r5, r2
 800f9ea:	461f      	mov	r7, r3
 800f9ec:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
 800f9f0:	ab03      	add	r3, sp, #12
 800f9f2:	4620      	mov	r0, r4
 800f9f4:	f000 fd62 	bl	80104bc <_ZNSsC1EPKcjRKSaIcE>
 800f9f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f9fa:	9300      	str	r3, [sp, #0]
 800f9fc:	463a      	mov	r2, r7
 800f9fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fa00:	9401      	str	r4, [sp, #4]
 800fa02:	4631      	mov	r1, r6
 800fa04:	a805      	add	r0, sp, #20
 800fa06:	f008 fdb4 	bl	8018572 <_ZNKSt8messagesIcE3getEiiiRKSs>
 800fa0a:	a905      	add	r1, sp, #20
 800fa0c:	4628      	mov	r0, r5
 800fa0e:	f7ff ff95 	bl	800f93c <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE>
 800fa12:	a805      	add	r0, sp, #20
 800fa14:	f000 faf6 	bl	8010004 <_ZNSsD1Ev>
 800fa18:	4620      	mov	r0, r4
 800fa1a:	f000 faf3 	bl	8010004 <_ZNSsD1Ev>
 800fa1e:	b007      	add	sp, #28
 800fa20:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800fa24 <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE>:
 800fa24:	b082      	sub	sp, #8
 800fa26:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fa2a:	b08b      	sub	sp, #44	; 0x2c
 800fa2c:	4605      	mov	r5, r0
 800fa2e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800fa30:	9313      	str	r3, [sp, #76]	; 0x4c
 800fa32:	4616      	mov	r6, r2
 800fa34:	e9dd 1818 	ldrd	r1, r8, [sp, #96]	; 0x60
 800fa38:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 800fa3c:	ab15      	add	r3, sp, #84	; 0x54
 800fa3e:	ac13      	add	r4, sp, #76	; 0x4c
 800fa40:	b198      	cbz	r0, 800fa6a <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x46>
 800fa42:	e9cd 8004 	strd	r8, r0, [sp, #16]
 800fa46:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800fa4a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fa4e:	e88d 0003 	stmia.w	sp, {r0, r1}
 800fa52:	4631      	mov	r1, r6
 800fa54:	e894 000c 	ldmia.w	r4, {r2, r3}
 800fa58:	4628      	mov	r0, r5
 800fa5a:	f008 fbc1 	bl	80181e0 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRe>
 800fa5e:	4628      	mov	r0, r5
 800fa60:	b00b      	add	sp, #44	; 0x2c
 800fa62:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fa66:	b002      	add	sp, #8
 800fa68:	4770      	bx	lr
 800fa6a:	af09      	add	r7, sp, #36	; 0x24
 800fa6c:	e9cd 8704 	strd	r8, r7, [sp, #16]
 800fa70:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800fa74:	4810      	ldr	r0, [pc, #64]	; (800fab8 <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x94>)
 800fa76:	9009      	str	r0, [sp, #36]	; 0x24
 800fa78:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fa7c:	e88d 0003 	stmia.w	sp, {r0, r1}
 800fa80:	f10d 0918 	add.w	r9, sp, #24
 800fa84:	e894 000c 	ldmia.w	r4, {r2, r3}
 800fa88:	4631      	mov	r1, r6
 800fa8a:	4648      	mov	r0, r9
 800fa8c:	f008 fbc7 	bl	801821e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSs>
 800fa90:	e899 0003 	ldmia.w	r9, {r0, r1}
 800fa94:	f8d8 3000 	ldr.w	r3, [r8]
 800fa98:	e884 0003 	stmia.w	r4, {r0, r1}
 800fa9c:	b91b      	cbnz	r3, 800faa6 <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x82>
 800fa9e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800faa0:	4639      	mov	r1, r7
 800faa2:	f7ff ff4b 	bl	800f93c <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE>
 800faa6:	e894 0003 	ldmia.w	r4, {r0, r1}
 800faaa:	e885 0003 	stmia.w	r5, {r0, r1}
 800faae:	4638      	mov	r0, r7
 800fab0:	f000 faa8 	bl	8010004 <_ZNSsD1Ev>
 800fab4:	e7d3      	b.n	800fa5e <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x3a>
 800fab6:	bf00      	nop
 800fab8:	20003bf0 	.word	0x20003bf0

0800fabc <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIwEEv>:
 800fabc:	698b      	ldr	r3, [r1, #24]
 800fabe:	b513      	push	{r0, r1, r4, lr}
 800fac0:	4604      	mov	r4, r0
 800fac2:	b913      	cbnz	r3, 800faca <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIwEEv+0xe>
 800fac4:	4805      	ldr	r0, [pc, #20]	; (800fadc <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIwEEv+0x20>)
 800fac6:	f007 feb1 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 800faca:	e9d1 1200 	ldrd	r1, r2, [r1]
 800face:	ab01      	add	r3, sp, #4
 800fad0:	f001 f878 	bl	8010bc4 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwjRKS1_>
 800fad4:	4620      	mov	r0, r4
 800fad6:	b002      	add	sp, #8
 800fad8:	bd10      	pop	{r4, pc}
 800fada:	bf00      	nop
 800fadc:	0802edf9 	.word	0x0802edf9

0800fae0 <_ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIwE12do_transformEPKwS4_>:
 800fae0:	b510      	push	{r4, lr}
 800fae2:	b08a      	sub	sp, #40	; 0x28
 800fae4:	4604      	mov	r4, r0
 800fae6:	9300      	str	r3, [sp, #0]
 800fae8:	2000      	movs	r0, #0
 800faea:	4613      	mov	r3, r2
 800faec:	68c9      	ldr	r1, [r1, #12]
 800faee:	9009      	str	r0, [sp, #36]	; 0x24
 800faf0:	aa03      	add	r2, sp, #12
 800faf2:	f005 f9e7 	bl	8014ec4 <_ZNSt13__facet_shims19__collate_transformIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEPKT_SB_>
 800faf6:	a903      	add	r1, sp, #12
 800faf8:	4620      	mov	r0, r4
 800fafa:	f7ff ffdf 	bl	800fabc <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIwEEv>
 800fafe:	a803      	add	r0, sp, #12
 800fb00:	f7ff f94f 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 800fb04:	4620      	mov	r0, r4
 800fb06:	b00a      	add	sp, #40	; 0x28
 800fb08:	bd10      	pop	{r4, pc}

0800fb0a <_ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIwE6do_getEiiiRKSbIwSt11char_traitsIwESaIwEE>:
 800fb0a:	b530      	push	{r4, r5, lr}
 800fb0c:	b08d      	sub	sp, #52	; 0x34
 800fb0e:	4604      	mov	r4, r0
 800fb10:	2000      	movs	r0, #0
 800fb12:	900b      	str	r0, [sp, #44]	; 0x2c
 800fb14:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fb16:	6800      	ldr	r0, [r0, #0]
 800fb18:	f850 5c0c 	ldr.w	r5, [r0, #-12]
 800fb1c:	e9cd 0502 	strd	r0, r5, [sp, #8]
 800fb20:	9810      	ldr	r0, [sp, #64]	; 0x40
 800fb22:	e9cd 3000 	strd	r3, r0, [sp]
 800fb26:	4613      	mov	r3, r2
 800fb28:	6909      	ldr	r1, [r1, #16]
 800fb2a:	aa05      	add	r2, sp, #20
 800fb2c:	f04f 0000 	mov.w	r0, #0
 800fb30:	f005 fa52 	bl	8014fd8 <_ZNSt13__facet_shims14__messages_getIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_j>
 800fb34:	a905      	add	r1, sp, #20
 800fb36:	4620      	mov	r0, r4
 800fb38:	f7ff ffc0 	bl	800fabc <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIwEEv>
 800fb3c:	a805      	add	r0, sp, #20
 800fb3e:	f7ff f930 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 800fb42:	4620      	mov	r0, r4
 800fb44:	b00d      	add	sp, #52	; 0x34
 800fb46:	bd30      	pop	{r4, r5, pc}

0800fb48 <_ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE>:
 800fb48:	b082      	sub	sp, #8
 800fb4a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fb4e:	b086      	sub	sp, #24
 800fb50:	e9dd 9a12 	ldrd	r9, sl, [sp, #72]	; 0x48
 800fb54:	9914      	ldr	r1, [sp, #80]	; 0x50
 800fb56:	f89d 8044 	ldrb.w	r8, [sp, #68]	; 0x44
 800fb5a:	930f      	str	r3, [sp, #60]	; 0x3c
 800fb5c:	4604      	mov	r4, r0
 800fb5e:	4615      	mov	r5, r2
 800fb60:	ae0f      	add	r6, sp, #60	; 0x3c
 800fb62:	b1b1      	cbz	r1, 800fb92 <_ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE+0x4a>
 800fb64:	af05      	add	r7, sp, #20
 800fb66:	4638      	mov	r0, r7
 800fb68:	f7ff ffa8 	bl	800fabc <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIwEEv>
 800fb6c:	e9cd a702 	strd	sl, r7, [sp, #8]
 800fb70:	e9cd 8900 	strd	r8, r9, [sp]
 800fb74:	4620      	mov	r0, r4
 800fb76:	e896 000c 	ldmia.w	r6, {r2, r3}
 800fb7a:	4629      	mov	r1, r5
 800fb7c:	f00e fddd 	bl	801e73a <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE3putES3_bRSt8ios_basewRKSbIwS2_SaIwEE>
 800fb80:	4638      	mov	r0, r7
 800fb82:	f000 fdeb 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800fb86:	4620      	mov	r0, r4
 800fb88:	b006      	add	sp, #24
 800fb8a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fb8e:	b002      	add	sp, #8
 800fb90:	4770      	bx	lr
 800fb92:	e9cd 9a01 	strd	r9, sl, [sp, #4]
 800fb96:	f8cd 8000 	str.w	r8, [sp]
 800fb9a:	e896 000c 	ldmia.w	r6, {r2, r3}
 800fb9e:	4629      	mov	r1, r5
 800fba0:	f00e fdb6 	bl	801e710 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE3putES3_bRSt8ios_basewe>
 800fba4:	e7ef      	b.n	800fb86 <_ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE+0x3e>

0800fba6 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRSbIwS5_SaIwEE>:
 800fba6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fba8:	b097      	sub	sp, #92	; 0x5c
 800fbaa:	ac0a      	add	r4, sp, #40	; 0x28
 800fbac:	e884 000c 	stmia.w	r4, {r2, r3}
 800fbb0:	ae0f      	add	r6, sp, #60	; 0x3c
 800fbb2:	2300      	movs	r3, #0
 800fbb4:	e9cd 3606 	strd	r3, r6, [sp, #24]
 800fbb8:	9315      	str	r3, [sp, #84]	; 0x54
 800fbba:	930d      	str	r3, [sp, #52]	; 0x34
 800fbbc:	ab0d      	add	r3, sp, #52	; 0x34
 800fbbe:	9305      	str	r3, [sp, #20]
 800fbc0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800fbc2:	9304      	str	r3, [sp, #16]
 800fbc4:	f89d 3078 	ldrb.w	r3, [sp, #120]	; 0x78
 800fbc8:	9303      	str	r3, [sp, #12]
 800fbca:	aa1c      	add	r2, sp, #112	; 0x70
 800fbcc:	468c      	mov	ip, r1
 800fbce:	4605      	mov	r5, r0
 800fbd0:	e892 0003 	ldmia.w	r2, {r0, r1}
 800fbd4:	ab01      	add	r3, sp, #4
 800fbd6:	e883 0003 	stmia.w	r3, {r0, r1}
 800fbda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fbdc:	9300      	str	r3, [sp, #0]
 800fbde:	af08      	add	r7, sp, #32
 800fbe0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fbe2:	f8dc 2008 	ldr.w	r2, [ip, #8]
 800fbe6:	f04f 0100 	mov.w	r1, #0
 800fbea:	4638      	mov	r0, r7
 800fbec:	f005 f97b 	bl	8014ee6 <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE>
 800fbf0:	e897 0003 	ldmia.w	r7, {r0, r1}
 800fbf4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fbf6:	e884 0003 	stmia.w	r4, {r0, r1}
 800fbfa:	b9a3      	cbnz	r3, 800fc26 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRSbIwS5_SaIwEE+0x80>
 800fbfc:	4631      	mov	r1, r6
 800fbfe:	a80e      	add	r0, sp, #56	; 0x38
 800fc00:	f7ff ff5c 	bl	800fabc <_ZNKSt13__facet_shims12__any_stringcvSbIT_St11char_traitsIS1_ESaIS1_EEIwEEv>
 800fc04:	9821      	ldr	r0, [sp, #132]	; 0x84
 800fc06:	a90e      	add	r1, sp, #56	; 0x38
 800fc08:	f000 fd0a 	bl	8010620 <_ZNSbIwSt11char_traitsIwESaIwEE4swapERS2_>
 800fc0c:	a80e      	add	r0, sp, #56	; 0x38
 800fc0e:	f000 fda5 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800fc12:	e894 0003 	ldmia.w	r4, {r0, r1}
 800fc16:	e885 0003 	stmia.w	r5, {r0, r1}
 800fc1a:	4630      	mov	r0, r6
 800fc1c:	f7ff f8c1 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 800fc20:	4628      	mov	r0, r5
 800fc22:	b017      	add	sp, #92	; 0x5c
 800fc24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fc26:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800fc28:	6013      	str	r3, [r2, #0]
 800fc2a:	e7f2      	b.n	800fc12 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRSbIwS5_SaIwEE+0x6c>

0800fc2c <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE>:
 800fc2c:	b538      	push	{r3, r4, r5, lr}
 800fc2e:	6983      	ldr	r3, [r0, #24]
 800fc30:	4604      	mov	r4, r0
 800fc32:	460d      	mov	r5, r1
 800fc34:	b103      	cbz	r3, 800fc38 <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE+0xc>
 800fc36:	4798      	blx	r3
 800fc38:	4629      	mov	r1, r5
 800fc3a:	4620      	mov	r0, r4
 800fc3c:	f000 ffa4 	bl	8010b88 <_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS2_>
 800fc40:	682b      	ldr	r3, [r5, #0]
 800fc42:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 800fc46:	6063      	str	r3, [r4, #4]
 800fc48:	4b01      	ldr	r3, [pc, #4]	; (800fc50 <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE+0x24>)
 800fc4a:	61a3      	str	r3, [r4, #24]
 800fc4c:	4620      	mov	r0, r4
 800fc4e:	bd38      	pop	{r3, r4, r5, pc}
 800fc50:	0800e569 	.word	0x0800e569
 800fc54:	00000000 	.word	0x00000000

0800fc58 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIwE6do_putESt19ostreambuf_iteratorIwSt11char_traitsIwEEbRSt8ios_basewRKSbIwS5_SaIwEE>:
 800fc58:	b570      	push	{r4, r5, r6, lr}
 800fc5a:	b090      	sub	sp, #64	; 0x40
 800fc5c:	ad09      	add	r5, sp, #36	; 0x24
 800fc5e:	460e      	mov	r6, r1
 800fc60:	a906      	add	r1, sp, #24
 800fc62:	e881 000c 	stmia.w	r1, {r2, r3}
 800fc66:	4604      	mov	r4, r0
 800fc68:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800fc6a:	2300      	movs	r3, #0
 800fc6c:	4628      	mov	r0, r5
 800fc6e:	930f      	str	r3, [sp, #60]	; 0x3c
 800fc70:	f7ff ffdc 	bl	800fc2c <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE>
 800fc74:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800fc76:	9303      	str	r3, [sp, #12]
 800fc78:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fc7a:	9302      	str	r3, [sp, #8]
 800fc7c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800fc80:	9301      	str	r3, [sp, #4]
 800fc82:	9b07      	ldr	r3, [sp, #28]
 800fc84:	68b2      	ldr	r2, [r6, #8]
 800fc86:	9300      	str	r3, [sp, #0]
 800fc88:	ed9f 0b07 	vldr	d0, [pc, #28]	; 800fca8 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIwE6do_putESt19ostreambuf_iteratorIwSt11char_traitsIwEEbRSt8ios_basewRKSbIwS5_SaIwEE+0x50>
 800fc8c:	9b06      	ldr	r3, [sp, #24]
 800fc8e:	9504      	str	r5, [sp, #16]
 800fc90:	f04f 0100 	mov.w	r1, #0
 800fc94:	4620      	mov	r0, r4
 800fc96:	f005 f83d 	bl	8014d14 <_ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE>
 800fc9a:	4628      	mov	r0, r5
 800fc9c:	f7ff f881 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 800fca0:	4620      	mov	r0, r4
 800fca2:	b010      	add	sp, #64	; 0x40
 800fca4:	bd70      	pop	{r4, r5, r6, pc}
 800fca6:	bf00      	nop
	...

0800fcb0 <_ZNSt13__facet_shims19__collate_transformIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEPKT_SB_>:
 800fcb0:	b513      	push	{r0, r1, r4, lr}
 800fcb2:	4614      	mov	r4, r2
 800fcb4:	a801      	add	r0, sp, #4
 800fcb6:	461a      	mov	r2, r3
 800fcb8:	9b04      	ldr	r3, [sp, #16]
 800fcba:	f00e feca 	bl	801ea52 <_ZNKSt7collateIwE9transformEPKwS2_>
 800fcbe:	a901      	add	r1, sp, #4
 800fcc0:	4620      	mov	r0, r4
 800fcc2:	f7ff ffb3 	bl	800fc2c <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE>
 800fcc6:	a801      	add	r0, sp, #4
 800fcc8:	f000 fd48 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800fccc:	b002      	add	sp, #8
 800fcce:	bd10      	pop	{r4, pc}

0800fcd0 <_ZNSt13__facet_shims14__messages_getIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_j>:
 800fcd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fcd2:	b087      	sub	sp, #28
 800fcd4:	ac04      	add	r4, sp, #16
 800fcd6:	460e      	mov	r6, r1
 800fcd8:	4615      	mov	r5, r2
 800fcda:	461f      	mov	r7, r3
 800fcdc:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
 800fce0:	ab03      	add	r3, sp, #12
 800fce2:	4620      	mov	r0, r4
 800fce4:	f000 ff6e 	bl	8010bc4 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwjRKS1_>
 800fce8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fcea:	9300      	str	r3, [sp, #0]
 800fcec:	463a      	mov	r2, r7
 800fcee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fcf0:	9401      	str	r4, [sp, #4]
 800fcf2:	4631      	mov	r1, r6
 800fcf4:	a805      	add	r0, sp, #20
 800fcf6:	f00e fe96 	bl	801ea26 <_ZNKSt8messagesIwE3getEiiiRKSbIwSt11char_traitsIwESaIwEE>
 800fcfa:	a905      	add	r1, sp, #20
 800fcfc:	4628      	mov	r0, r5
 800fcfe:	f7ff ff95 	bl	800fc2c <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE>
 800fd02:	a805      	add	r0, sp, #20
 800fd04:	f000 fd2a 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800fd08:	4620      	mov	r0, r4
 800fd0a:	f000 fd27 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800fd0e:	b007      	add	sp, #28
 800fd10:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800fd14 <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE>:
 800fd14:	b082      	sub	sp, #8
 800fd16:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd1a:	b08b      	sub	sp, #44	; 0x2c
 800fd1c:	4605      	mov	r5, r0
 800fd1e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800fd20:	9313      	str	r3, [sp, #76]	; 0x4c
 800fd22:	4616      	mov	r6, r2
 800fd24:	e9dd 1818 	ldrd	r1, r8, [sp, #96]	; 0x60
 800fd28:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 800fd2c:	ab15      	add	r3, sp, #84	; 0x54
 800fd2e:	ac13      	add	r4, sp, #76	; 0x4c
 800fd30:	b198      	cbz	r0, 800fd5a <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x46>
 800fd32:	e9cd 8004 	strd	r8, r0, [sp, #16]
 800fd36:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800fd3a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fd3e:	e88d 0003 	stmia.w	sp, {r0, r1}
 800fd42:	4631      	mov	r1, r6
 800fd44:	e894 000c 	ldmia.w	r4, {r2, r3}
 800fd48:	4628      	mov	r0, r5
 800fd4a:	f00e fca3 	bl	801e694 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRe>
 800fd4e:	4628      	mov	r0, r5
 800fd50:	b00b      	add	sp, #44	; 0x2c
 800fd52:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd56:	b002      	add	sp, #8
 800fd58:	4770      	bx	lr
 800fd5a:	af09      	add	r7, sp, #36	; 0x24
 800fd5c:	e9cd 8704 	strd	r8, r7, [sp, #16]
 800fd60:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800fd64:	4810      	ldr	r0, [pc, #64]	; (800fda8 <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x94>)
 800fd66:	9009      	str	r0, [sp, #36]	; 0x24
 800fd68:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fd6c:	e88d 0003 	stmia.w	sp, {r0, r1}
 800fd70:	f10d 0918 	add.w	r9, sp, #24
 800fd74:	e894 000c 	ldmia.w	r4, {r2, r3}
 800fd78:	4631      	mov	r1, r6
 800fd7a:	4648      	mov	r0, r9
 800fd7c:	f00e fca9 	bl	801e6d2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSbIwS2_SaIwEE>
 800fd80:	e899 0003 	ldmia.w	r9, {r0, r1}
 800fd84:	f8d8 3000 	ldr.w	r3, [r8]
 800fd88:	e884 0003 	stmia.w	r4, {r0, r1}
 800fd8c:	b91b      	cbnz	r3, 800fd96 <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x82>
 800fd8e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800fd90:	4639      	mov	r1, r7
 800fd92:	f7ff ff4b 	bl	800fc2c <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKSbIT_St11char_traitsIS3_ESaIS3_EE>
 800fd96:	e894 0003 	ldmia.w	r4, {r0, r1}
 800fd9a:	e885 0003 	stmia.w	r5, {r0, r1}
 800fd9e:	4638      	mov	r0, r7
 800fda0:	f000 fcdc 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 800fda4:	e7d3      	b.n	800fd4e <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x3a>
 800fda6:	bf00      	nop
 800fda8:	20003c00 	.word	0x20003c00

0800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>:
 800fdac:	4613      	mov	r3, r2
 800fdae:	460a      	mov	r2, r1
 800fdb0:	b111      	cbz	r1, 800fdb8 <_ZNSt11char_traitsIcE4findEPKcjRS1_+0xc>
 800fdb2:	7819      	ldrb	r1, [r3, #0]
 800fdb4:	f7f0 ba0c 	b.w	80001d0 <memchr>
 800fdb8:	4608      	mov	r0, r1
 800fdba:	4770      	bx	lr

0800fdbc <_ZNKSs8_M_checkEjPKc>:
 800fdbc:	b508      	push	{r3, lr}
 800fdbe:	4603      	mov	r3, r0
 800fdc0:	4608      	mov	r0, r1
 800fdc2:	681b      	ldr	r3, [r3, #0]
 800fdc4:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 800fdc8:	4283      	cmp	r3, r0
 800fdca:	4611      	mov	r1, r2
 800fdcc:	d203      	bcs.n	800fdd6 <_ZNKSs8_M_checkEjPKc+0x1a>
 800fdce:	4602      	mov	r2, r0
 800fdd0:	4801      	ldr	r0, [pc, #4]	; (800fdd8 <_ZNKSs8_M_checkEjPKc+0x1c>)
 800fdd2:	f007 fd31 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 800fdd6:	bd08      	pop	{r3, pc}
 800fdd8:	0802f5dc 	.word	0x0802f5dc

0800fddc <_ZNKSs15_M_check_lengthEjjPKc>:
 800fddc:	6800      	ldr	r0, [r0, #0]
 800fdde:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800fde2:	f850 0c0c 	ldr.w	r0, [r0, #-12]
 800fde6:	3904      	subs	r1, #4
 800fde8:	1a09      	subs	r1, r1, r0
 800fdea:	4291      	cmp	r1, r2
 800fdec:	b508      	push	{r3, lr}
 800fdee:	d202      	bcs.n	800fdf6 <_ZNKSs15_M_check_lengthEjjPKc+0x1a>
 800fdf0:	4618      	mov	r0, r3
 800fdf2:	f007 fd1e 	bl	8017832 <_ZSt20__throw_length_errorPKc>
 800fdf6:	bd08      	pop	{r3, pc}

0800fdf8 <_ZNKSs11_M_disjunctEPKc>:
 800fdf8:	6800      	ldr	r0, [r0, #0]
 800fdfa:	4288      	cmp	r0, r1
 800fdfc:	d807      	bhi.n	800fe0e <_ZNKSs11_M_disjunctEPKc+0x16>
 800fdfe:	f850 3c0c 	ldr.w	r3, [r0, #-12]
 800fe02:	4418      	add	r0, r3
 800fe04:	4281      	cmp	r1, r0
 800fe06:	bf94      	ite	ls
 800fe08:	2000      	movls	r0, #0
 800fe0a:	2001      	movhi	r0, #1
 800fe0c:	4770      	bx	lr
 800fe0e:	2001      	movs	r0, #1
 800fe10:	4770      	bx	lr

0800fe12 <_ZNSs7_M_copyEPcPKcj>:
 800fe12:	2a01      	cmp	r2, #1
 800fe14:	b430      	push	{r4, r5}
 800fe16:	d103      	bne.n	800fe20 <_ZNSs7_M_copyEPcPKcj+0xe>
 800fe18:	780b      	ldrb	r3, [r1, #0]
 800fe1a:	7003      	strb	r3, [r0, #0]
 800fe1c:	bc30      	pop	{r4, r5}
 800fe1e:	4770      	bx	lr
 800fe20:	2a00      	cmp	r2, #0
 800fe22:	d0fb      	beq.n	800fe1c <_ZNSs7_M_copyEPcPKcj+0xa>
 800fe24:	bc30      	pop	{r4, r5}
 800fe26:	f016 b86b 	b.w	8025f00 <memcpy>

0800fe2a <_ZNSs7_M_moveEPcPKcj>:
 800fe2a:	2a01      	cmp	r2, #1
 800fe2c:	b430      	push	{r4, r5}
 800fe2e:	d103      	bne.n	800fe38 <_ZNSs7_M_moveEPcPKcj+0xe>
 800fe30:	780b      	ldrb	r3, [r1, #0]
 800fe32:	7003      	strb	r3, [r0, #0]
 800fe34:	bc30      	pop	{r4, r5}
 800fe36:	4770      	bx	lr
 800fe38:	2a00      	cmp	r2, #0
 800fe3a:	d0fb      	beq.n	800fe34 <_ZNSs7_M_moveEPcPKcj+0xa>
 800fe3c:	bc30      	pop	{r4, r5}
 800fe3e:	f016 b86d 	b.w	8025f1c <memmove>

0800fe42 <_ZNSs9_M_assignEPcjc>:
 800fe42:	460b      	mov	r3, r1
 800fe44:	2b01      	cmp	r3, #1
 800fe46:	b410      	push	{r4}
 800fe48:	4611      	mov	r1, r2
 800fe4a:	4604      	mov	r4, r0
 800fe4c:	d103      	bne.n	800fe56 <_ZNSs9_M_assignEPcjc+0x14>
 800fe4e:	7022      	strb	r2, [r4, #0]
 800fe50:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fe54:	4770      	bx	lr
 800fe56:	2b00      	cmp	r3, #0
 800fe58:	d0fa      	beq.n	800fe50 <_ZNSs9_M_assignEPcjc+0xe>
 800fe5a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fe5e:	461a      	mov	r2, r3
 800fe60:	f016 b876 	b.w	8025f50 <memset>

0800fe64 <_ZNSs13_S_copy_charsEPcS_S_>:
 800fe64:	b508      	push	{r3, lr}
 800fe66:	1a52      	subs	r2, r2, r1
 800fe68:	f7ff ffd3 	bl	800fe12 <_ZNSs7_M_copyEPcPKcj>
 800fe6c:	bd08      	pop	{r3, pc}
	...

0800fe70 <_ZNKSs4copyEPcjj>:
 800fe70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe74:	4604      	mov	r4, r0
 800fe76:	4690      	mov	r8, r2
 800fe78:	460f      	mov	r7, r1
 800fe7a:	4a0a      	ldr	r2, [pc, #40]	; (800fea4 <_ZNKSs4copyEPcjj+0x34>)
 800fe7c:	4619      	mov	r1, r3
 800fe7e:	461e      	mov	r6, r3
 800fe80:	f7ff ff9c 	bl	800fdbc <_ZNKSs8_M_checkEjPKc>
 800fe84:	6821      	ldr	r1, [r4, #0]
 800fe86:	f851 5c0c 	ldr.w	r5, [r1, #-12]
 800fe8a:	1bac      	subs	r4, r5, r6
 800fe8c:	4544      	cmp	r4, r8
 800fe8e:	bf28      	it	cs
 800fe90:	4644      	movcs	r4, r8
 800fe92:	b124      	cbz	r4, 800fe9e <_ZNKSs4copyEPcjj+0x2e>
 800fe94:	4622      	mov	r2, r4
 800fe96:	4431      	add	r1, r6
 800fe98:	4638      	mov	r0, r7
 800fe9a:	f7ff ffba 	bl	800fe12 <_ZNSs7_M_copyEPcPKcj>
 800fe9e:	4620      	mov	r0, r4
 800fea0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fea4:	0802f613 	.word	0x0802f613

0800fea8 <_ZNSs4swapERSs>:
 800fea8:	6803      	ldr	r3, [r0, #0]
 800feaa:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800feae:	2a00      	cmp	r2, #0
 800feb0:	bfb8      	it	lt
 800feb2:	2200      	movlt	r2, #0
 800feb4:	b510      	push	{r4, lr}
 800feb6:	bfb8      	it	lt
 800feb8:	f843 2c04 	strlt.w	r2, [r3, #-4]
 800febc:	680a      	ldr	r2, [r1, #0]
 800febe:	f852 4c04 	ldr.w	r4, [r2, #-4]
 800fec2:	2c00      	cmp	r4, #0
 800fec4:	bfbc      	itt	lt
 800fec6:	2400      	movlt	r4, #0
 800fec8:	f842 4c04 	strlt.w	r4, [r2, #-4]
 800fecc:	6002      	str	r2, [r0, #0]
 800fece:	600b      	str	r3, [r1, #0]
 800fed0:	bd10      	pop	{r4, pc}

0800fed2 <_ZNKSs17find_first_not_ofEcj>:
 800fed2:	b510      	push	{r4, lr}
 800fed4:	6803      	ldr	r3, [r0, #0]
 800fed6:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 800feda:	4282      	cmp	r2, r0
 800fedc:	d204      	bcs.n	800fee8 <_ZNKSs17find_first_not_ofEcj+0x16>
 800fede:	5c9c      	ldrb	r4, [r3, r2]
 800fee0:	428c      	cmp	r4, r1
 800fee2:	d103      	bne.n	800feec <_ZNKSs17find_first_not_ofEcj+0x1a>
 800fee4:	3201      	adds	r2, #1
 800fee6:	e7f8      	b.n	800feda <_ZNKSs17find_first_not_ofEcj+0x8>
 800fee8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800feec:	4610      	mov	r0, r2
 800feee:	bd10      	pop	{r4, pc}

0800fef0 <_ZNSs4_Rep26_M_set_length_and_sharableEj>:
 800fef0:	4b04      	ldr	r3, [pc, #16]	; (800ff04 <_ZNSs4_Rep26_M_set_length_and_sharableEj+0x14>)
 800fef2:	4298      	cmp	r0, r3
 800fef4:	d004      	beq.n	800ff00 <_ZNSs4_Rep26_M_set_length_and_sharableEj+0x10>
 800fef6:	2300      	movs	r3, #0
 800fef8:	6083      	str	r3, [r0, #8]
 800fefa:	6001      	str	r1, [r0, #0]
 800fefc:	4408      	add	r0, r1
 800fefe:	7303      	strb	r3, [r0, #12]
 800ff00:	4770      	bx	lr
 800ff02:	bf00      	nop
 800ff04:	20003be4 	.word	0x20003be4

0800ff08 <_ZNSs4_Rep9_S_createEjjRKSaIcE>:
 800ff08:	4b15      	ldr	r3, [pc, #84]	; (800ff60 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x58>)
 800ff0a:	4298      	cmp	r0, r3
 800ff0c:	b510      	push	{r4, lr}
 800ff0e:	4604      	mov	r4, r0
 800ff10:	d902      	bls.n	800ff18 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x10>
 800ff12:	4814      	ldr	r0, [pc, #80]	; (800ff64 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x5c>)
 800ff14:	f007 fc8d 	bl	8017832 <_ZSt20__throw_length_errorPKc>
 800ff18:	4288      	cmp	r0, r1
 800ff1a:	d903      	bls.n	800ff24 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x1c>
 800ff1c:	004b      	lsls	r3, r1, #1
 800ff1e:	4298      	cmp	r0, r3
 800ff20:	bf38      	it	cc
 800ff22:	461c      	movcc	r4, r3
 800ff24:	f104 031d 	add.w	r3, r4, #29
 800ff28:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ff2c:	f104 000d 	add.w	r0, r4, #13
 800ff30:	d90c      	bls.n	800ff4c <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x44>
 800ff32:	428c      	cmp	r4, r1
 800ff34:	d90a      	bls.n	800ff4c <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x44>
 800ff36:	480a      	ldr	r0, [pc, #40]	; (800ff60 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x58>)
 800ff38:	f504 5480 	add.w	r4, r4, #4096	; 0x1000
 800ff3c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800ff40:	1ae4      	subs	r4, r4, r3
 800ff42:	4284      	cmp	r4, r0
 800ff44:	bf28      	it	cs
 800ff46:	4604      	movcs	r4, r0
 800ff48:	f104 000d 	add.w	r0, r4, #13
 800ff4c:	2800      	cmp	r0, #0
 800ff4e:	da01      	bge.n	800ff54 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x4c>
 800ff50:	f007 fc66 	bl	8017820 <_ZSt17__throw_bad_allocv>
 800ff54:	f7fb fff4 	bl	800bf40 <_Znwj>
 800ff58:	2200      	movs	r2, #0
 800ff5a:	6044      	str	r4, [r0, #4]
 800ff5c:	6082      	str	r2, [r0, #8]
 800ff5e:	bd10      	pop	{r4, pc}
 800ff60:	3ffffffc 	.word	0x3ffffffc
 800ff64:	0802f626 	.word	0x0802f626

0800ff68 <_ZNSs12_S_constructEjcRKSaIcE>:
 800ff68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ff6a:	460f      	mov	r7, r1
 800ff6c:	4604      	mov	r4, r0
 800ff6e:	b180      	cbz	r0, 800ff92 <_ZNSs12_S_constructEjcRKSaIcE+0x2a>
 800ff70:	2100      	movs	r1, #0
 800ff72:	f7ff ffc9 	bl	800ff08 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
 800ff76:	f100 060c 	add.w	r6, r0, #12
 800ff7a:	4605      	mov	r5, r0
 800ff7c:	4621      	mov	r1, r4
 800ff7e:	4630      	mov	r0, r6
 800ff80:	463a      	mov	r2, r7
 800ff82:	f7ff ff5e 	bl	800fe42 <_ZNSs9_M_assignEPcjc>
 800ff86:	4621      	mov	r1, r4
 800ff88:	4628      	mov	r0, r5
 800ff8a:	f7ff ffb1 	bl	800fef0 <_ZNSs4_Rep26_M_set_length_and_sharableEj>
 800ff8e:	4630      	mov	r0, r6
 800ff90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ff92:	4e01      	ldr	r6, [pc, #4]	; (800ff98 <_ZNSs12_S_constructEjcRKSaIcE+0x30>)
 800ff94:	e7fb      	b.n	800ff8e <_ZNSs12_S_constructEjcRKSaIcE+0x26>
 800ff96:	bf00      	nop
 800ff98:	20003bf0 	.word	0x20003bf0

0800ff9c <_ZNSsC1EjcRKSaIcE>:
 800ff9c:	b510      	push	{r4, lr}
 800ff9e:	4604      	mov	r4, r0
 800ffa0:	4608      	mov	r0, r1
 800ffa2:	4611      	mov	r1, r2
 800ffa4:	461a      	mov	r2, r3
 800ffa6:	f7ff ffdf 	bl	800ff68 <_ZNSs12_S_constructEjcRKSaIcE>
 800ffaa:	6020      	str	r0, [r4, #0]
 800ffac:	4620      	mov	r0, r4
 800ffae:	bd10      	pop	{r4, pc}

0800ffb0 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.0>:
 800ffb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ffb4:	eba1 0800 	sub.w	r8, r1, r0
 800ffb8:	4605      	mov	r5, r0
 800ffba:	460e      	mov	r6, r1
 800ffbc:	4640      	mov	r0, r8
 800ffbe:	2100      	movs	r1, #0
 800ffc0:	f7ff ffa2 	bl	800ff08 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
 800ffc4:	f100 070c 	add.w	r7, r0, #12
 800ffc8:	4604      	mov	r4, r0
 800ffca:	4632      	mov	r2, r6
 800ffcc:	4629      	mov	r1, r5
 800ffce:	4638      	mov	r0, r7
 800ffd0:	f7ff ff48 	bl	800fe64 <_ZNSs13_S_copy_charsEPcS_S_>
 800ffd4:	4620      	mov	r0, r4
 800ffd6:	4641      	mov	r1, r8
 800ffd8:	f7ff ff8a 	bl	800fef0 <_ZNSs4_Rep26_M_set_length_and_sharableEj>
 800ffdc:	4638      	mov	r0, r7
 800ffde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ffe2 <_ZNSs4_Rep10_M_destroyERKSaIcE>:
 800ffe2:	f013 bf73 	b.w	8023ecc <_ZdlPv>
	...

0800ffe8 <_ZNSs4_Rep10_M_disposeERKSaIcE>:
 800ffe8:	4a05      	ldr	r2, [pc, #20]	; (8010000 <_ZNSs4_Rep10_M_disposeERKSaIcE+0x18>)
 800ffea:	4290      	cmp	r0, r2
 800ffec:	b510      	push	{r4, lr}
 800ffee:	d006      	beq.n	800fffe <_ZNSs4_Rep10_M_disposeERKSaIcE+0x16>
 800fff0:	6882      	ldr	r2, [r0, #8]
 800fff2:	1e54      	subs	r4, r2, #1
 800fff4:	2a00      	cmp	r2, #0
 800fff6:	6084      	str	r4, [r0, #8]
 800fff8:	dc01      	bgt.n	800fffe <_ZNSs4_Rep10_M_disposeERKSaIcE+0x16>
 800fffa:	f7ff fff2 	bl	800ffe2 <_ZNSs4_Rep10_M_destroyERKSaIcE>
 800fffe:	bd10      	pop	{r4, pc}
 8010000:	20003be4 	.word	0x20003be4

08010004 <_ZNSsD1Ev>:
 8010004:	b513      	push	{r0, r1, r4, lr}
 8010006:	4604      	mov	r4, r0
 8010008:	6800      	ldr	r0, [r0, #0]
 801000a:	a901      	add	r1, sp, #4
 801000c:	380c      	subs	r0, #12
 801000e:	f7ff ffeb 	bl	800ffe8 <_ZNSs4_Rep10_M_disposeERKSaIcE>
 8010012:	4620      	mov	r0, r4
 8010014:	b002      	add	sp, #8
 8010016:	bd10      	pop	{r4, pc}

08010018 <_ZNSs5clearEv>:
 8010018:	6803      	ldr	r3, [r0, #0]
 801001a:	b513      	push	{r0, r1, r4, lr}
 801001c:	4604      	mov	r4, r0
 801001e:	f1a3 000c 	sub.w	r0, r3, #12
 8010022:	f853 3c04 	ldr.w	r3, [r3, #-4]
 8010026:	2b00      	cmp	r3, #0
 8010028:	dd06      	ble.n	8010038 <_ZNSs5clearEv+0x20>
 801002a:	a901      	add	r1, sp, #4
 801002c:	f7ff ffdc 	bl	800ffe8 <_ZNSs4_Rep10_M_disposeERKSaIcE>
 8010030:	4b03      	ldr	r3, [pc, #12]	; (8010040 <_ZNSs5clearEv+0x28>)
 8010032:	6023      	str	r3, [r4, #0]
 8010034:	b002      	add	sp, #8
 8010036:	bd10      	pop	{r4, pc}
 8010038:	2100      	movs	r1, #0
 801003a:	f7ff ff59 	bl	800fef0 <_ZNSs4_Rep26_M_set_length_and_sharableEj>
 801003e:	e7f9      	b.n	8010034 <_ZNSs5clearEv+0x1c>
 8010040:	20003bf0 	.word	0x20003bf0

08010044 <_ZNSs9_M_mutateEjjj>:
 8010044:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010048:	4605      	mov	r5, r0
 801004a:	6800      	ldr	r0, [r0, #0]
 801004c:	f850 7c0c 	ldr.w	r7, [r0, #-12]
 8010050:	eb02 0901 	add.w	r9, r2, r1
 8010054:	460c      	mov	r4, r1
 8010056:	eba3 0802 	sub.w	r8, r3, r2
 801005a:	f850 1c08 	ldr.w	r1, [r0, #-8]
 801005e:	44b8      	add	r8, r7
 8010060:	4588      	cmp	r8, r1
 8010062:	461e      	mov	r6, r3
 8010064:	eba7 0709 	sub.w	r7, r7, r9
 8010068:	d803      	bhi.n	8010072 <_ZNSs9_M_mutateEjjj+0x2e>
 801006a:	f850 3c04 	ldr.w	r3, [r0, #-4]
 801006e:	2b00      	cmp	r3, #0
 8010070:	dd1e      	ble.n	80100b0 <_ZNSs9_M_mutateEjjj+0x6c>
 8010072:	aa01      	add	r2, sp, #4
 8010074:	4640      	mov	r0, r8
 8010076:	f7ff ff47 	bl	800ff08 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
 801007a:	4682      	mov	sl, r0
 801007c:	f100 0b0c 	add.w	fp, r0, #12
 8010080:	b124      	cbz	r4, 801008c <_ZNSs9_M_mutateEjjj+0x48>
 8010082:	6829      	ldr	r1, [r5, #0]
 8010084:	4622      	mov	r2, r4
 8010086:	4658      	mov	r0, fp
 8010088:	f7ff fec3 	bl	800fe12 <_ZNSs7_M_copyEPcPKcj>
 801008c:	b147      	cbz	r7, 80100a0 <_ZNSs9_M_mutateEjjj+0x5c>
 801008e:	6829      	ldr	r1, [r5, #0]
 8010090:	f104 000c 	add.w	r0, r4, #12
 8010094:	4430      	add	r0, r6
 8010096:	463a      	mov	r2, r7
 8010098:	4449      	add	r1, r9
 801009a:	4450      	add	r0, sl
 801009c:	f7ff feb9 	bl	800fe12 <_ZNSs7_M_copyEPcPKcj>
 80100a0:	6828      	ldr	r0, [r5, #0]
 80100a2:	a901      	add	r1, sp, #4
 80100a4:	380c      	subs	r0, #12
 80100a6:	f7ff ff9f 	bl	800ffe8 <_ZNSs4_Rep10_M_disposeERKSaIcE>
 80100aa:	f8c5 b000 	str.w	fp, [r5]
 80100ae:	e000      	b.n	80100b2 <_ZNSs9_M_mutateEjjj+0x6e>
 80100b0:	b93f      	cbnz	r7, 80100c2 <_ZNSs9_M_mutateEjjj+0x7e>
 80100b2:	6828      	ldr	r0, [r5, #0]
 80100b4:	4641      	mov	r1, r8
 80100b6:	380c      	subs	r0, #12
 80100b8:	f7ff ff1a 	bl	800fef0 <_ZNSs4_Rep26_M_set_length_and_sharableEj>
 80100bc:	b003      	add	sp, #12
 80100be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100c2:	4296      	cmp	r6, r2
 80100c4:	d0f5      	beq.n	80100b2 <_ZNSs9_M_mutateEjjj+0x6e>
 80100c6:	4434      	add	r4, r6
 80100c8:	eb00 0109 	add.w	r1, r0, r9
 80100cc:	463a      	mov	r2, r7
 80100ce:	4420      	add	r0, r4
 80100d0:	f7ff feab 	bl	800fe2a <_ZNSs7_M_moveEPcPKcj>
 80100d4:	e7ed      	b.n	80100b2 <_ZNSs9_M_mutateEjjj+0x6e>
	...

080100d8 <_ZNSs12_M_leak_hardEv>:
 80100d8:	6803      	ldr	r3, [r0, #0]
 80100da:	4a0a      	ldr	r2, [pc, #40]	; (8010104 <_ZNSs12_M_leak_hardEv+0x2c>)
 80100dc:	4293      	cmp	r3, r2
 80100de:	b510      	push	{r4, lr}
 80100e0:	4604      	mov	r4, r0
 80100e2:	d00d      	beq.n	8010100 <_ZNSs12_M_leak_hardEv+0x28>
 80100e4:	f853 3c04 	ldr.w	r3, [r3, #-4]
 80100e8:	2b00      	cmp	r3, #0
 80100ea:	dd04      	ble.n	80100f6 <_ZNSs12_M_leak_hardEv+0x1e>
 80100ec:	2300      	movs	r3, #0
 80100ee:	461a      	mov	r2, r3
 80100f0:	4619      	mov	r1, r3
 80100f2:	f7ff ffa7 	bl	8010044 <_ZNSs9_M_mutateEjjj>
 80100f6:	6823      	ldr	r3, [r4, #0]
 80100f8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80100fc:	f843 2c04 	str.w	r2, [r3, #-4]
 8010100:	bd10      	pop	{r4, pc}
 8010102:	bf00      	nop
 8010104:	20003bf0 	.word	0x20003bf0

08010108 <_ZNSs7_M_leakEv>:
 8010108:	b508      	push	{r3, lr}
 801010a:	6803      	ldr	r3, [r0, #0]
 801010c:	f853 3c04 	ldr.w	r3, [r3, #-4]
 8010110:	2b00      	cmp	r3, #0
 8010112:	db01      	blt.n	8010118 <_ZNSs7_M_leakEv+0x10>
 8010114:	f7ff ffe0 	bl	80100d8 <_ZNSs12_M_leak_hardEv>
 8010118:	bd08      	pop	{r3, pc}

0801011a <_ZNSs5beginEv>:
 801011a:	b510      	push	{r4, lr}
 801011c:	4604      	mov	r4, r0
 801011e:	f7ff fff3 	bl	8010108 <_ZNSs7_M_leakEv>
 8010122:	6820      	ldr	r0, [r4, #0]
 8010124:	bd10      	pop	{r4, pc}
	...

08010128 <_ZNSs5eraseEjj>:
 8010128:	b570      	push	{r4, r5, r6, lr}
 801012a:	4604      	mov	r4, r0
 801012c:	4615      	mov	r5, r2
 801012e:	4a09      	ldr	r2, [pc, #36]	; (8010154 <_ZNSs5eraseEjj+0x2c>)
 8010130:	460e      	mov	r6, r1
 8010132:	f7ff fe43 	bl	800fdbc <_ZNKSs8_M_checkEjPKc>
 8010136:	6823      	ldr	r3, [r4, #0]
 8010138:	f853 2c0c 	ldr.w	r2, [r3, #-12]
 801013c:	1b92      	subs	r2, r2, r6
 801013e:	42aa      	cmp	r2, r5
 8010140:	4601      	mov	r1, r0
 8010142:	f04f 0300 	mov.w	r3, #0
 8010146:	4620      	mov	r0, r4
 8010148:	bf28      	it	cs
 801014a:	462a      	movcs	r2, r5
 801014c:	f7ff ff7a 	bl	8010044 <_ZNSs9_M_mutateEjjj>
 8010150:	4620      	mov	r0, r4
 8010152:	bd70      	pop	{r4, r5, r6, pc}
 8010154:	0802f63e 	.word	0x0802f63e

08010158 <_ZNSs14_M_replace_auxEjjjc>:
 8010158:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801015a:	461c      	mov	r4, r3
 801015c:	4617      	mov	r7, r2
 801015e:	4b0b      	ldr	r3, [pc, #44]	; (801018c <_ZNSs14_M_replace_auxEjjjc+0x34>)
 8010160:	4605      	mov	r5, r0
 8010162:	460e      	mov	r6, r1
 8010164:	4622      	mov	r2, r4
 8010166:	4639      	mov	r1, r7
 8010168:	f7ff fe38 	bl	800fddc <_ZNKSs15_M_check_lengthEjjPKc>
 801016c:	4623      	mov	r3, r4
 801016e:	463a      	mov	r2, r7
 8010170:	4631      	mov	r1, r6
 8010172:	4628      	mov	r0, r5
 8010174:	f7ff ff66 	bl	8010044 <_ZNSs9_M_mutateEjjj>
 8010178:	b134      	cbz	r4, 8010188 <_ZNSs14_M_replace_auxEjjjc+0x30>
 801017a:	6828      	ldr	r0, [r5, #0]
 801017c:	f89d 2018 	ldrb.w	r2, [sp, #24]
 8010180:	4621      	mov	r1, r4
 8010182:	4430      	add	r0, r6
 8010184:	f7ff fe5d 	bl	800fe42 <_ZNSs9_M_assignEPcjc>
 8010188:	4628      	mov	r0, r5
 801018a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801018c:	0802f652 	.word	0x0802f652

08010190 <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc>:
 8010190:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010192:	6804      	ldr	r4, [r0, #0]
 8010194:	9200      	str	r2, [sp, #0]
 8010196:	4605      	mov	r5, r0
 8010198:	1b0c      	subs	r4, r1, r4
 801019a:	2301      	movs	r3, #1
 801019c:	2200      	movs	r2, #0
 801019e:	4621      	mov	r1, r4
 80101a0:	f7ff ffda 	bl	8010158 <_ZNSs14_M_replace_auxEjjjc>
 80101a4:	6828      	ldr	r0, [r5, #0]
 80101a6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80101aa:	f840 3c04 	str.w	r3, [r0, #-4]
 80101ae:	4420      	add	r0, r4
 80101b0:	b003      	add	sp, #12
 80101b2:	bd30      	pop	{r4, r5, pc}

080101b4 <_ZNSs15_M_replace_safeEjjPKcj>:
 80101b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80101b6:	9f06      	ldr	r7, [sp, #24]
 80101b8:	461e      	mov	r6, r3
 80101ba:	463b      	mov	r3, r7
 80101bc:	4604      	mov	r4, r0
 80101be:	460d      	mov	r5, r1
 80101c0:	f7ff ff40 	bl	8010044 <_ZNSs9_M_mutateEjjj>
 80101c4:	b12f      	cbz	r7, 80101d2 <_ZNSs15_M_replace_safeEjjPKcj+0x1e>
 80101c6:	6820      	ldr	r0, [r4, #0]
 80101c8:	463a      	mov	r2, r7
 80101ca:	4631      	mov	r1, r6
 80101cc:	4428      	add	r0, r5
 80101ce:	f7ff fe20 	bl	800fe12 <_ZNSs7_M_copyEPcPKcj>
 80101d2:	4620      	mov	r0, r4
 80101d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080101d8 <_ZNSs6assignEPKcj>:
 80101d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80101dc:	6807      	ldr	r7, [r0, #0]
 80101de:	4b1a      	ldr	r3, [pc, #104]	; (8010248 <_ZNSs6assignEPKcj+0x70>)
 80101e0:	f857 8c0c 	ldr.w	r8, [r7, #-12]
 80101e4:	4604      	mov	r4, r0
 80101e6:	460e      	mov	r6, r1
 80101e8:	4641      	mov	r1, r8
 80101ea:	4615      	mov	r5, r2
 80101ec:	f7ff fdf6 	bl	800fddc <_ZNKSs15_M_check_lengthEjjPKc>
 80101f0:	4631      	mov	r1, r6
 80101f2:	4620      	mov	r0, r4
 80101f4:	f7ff fe00 	bl	800fdf8 <_ZNKSs11_M_disjunctEPKc>
 80101f8:	b918      	cbnz	r0, 8010202 <_ZNSs6assignEPKcj+0x2a>
 80101fa:	f857 3c04 	ldr.w	r3, [r7, #-4]
 80101fe:	2b00      	cmp	r3, #0
 8010200:	dd0b      	ble.n	801021a <_ZNSs6assignEPKcj+0x42>
 8010202:	4620      	mov	r0, r4
 8010204:	9500      	str	r5, [sp, #0]
 8010206:	4633      	mov	r3, r6
 8010208:	4642      	mov	r2, r8
 801020a:	2100      	movs	r1, #0
 801020c:	f7ff ffd2 	bl	80101b4 <_ZNSs15_M_replace_safeEjjPKcj>
 8010210:	4604      	mov	r4, r0
 8010212:	4620      	mov	r0, r4
 8010214:	b002      	add	sp, #8
 8010216:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801021a:	1bf3      	subs	r3, r6, r7
 801021c:	429d      	cmp	r5, r3
 801021e:	d80a      	bhi.n	8010236 <_ZNSs6assignEPKcj+0x5e>
 8010220:	462a      	mov	r2, r5
 8010222:	4631      	mov	r1, r6
 8010224:	4638      	mov	r0, r7
 8010226:	f7ff fdf4 	bl	800fe12 <_ZNSs7_M_copyEPcPKcj>
 801022a:	6820      	ldr	r0, [r4, #0]
 801022c:	4629      	mov	r1, r5
 801022e:	380c      	subs	r0, #12
 8010230:	f7ff fe5e 	bl	800fef0 <_ZNSs4_Rep26_M_set_length_and_sharableEj>
 8010234:	e7ed      	b.n	8010212 <_ZNSs6assignEPKcj+0x3a>
 8010236:	2b00      	cmp	r3, #0
 8010238:	d0f7      	beq.n	801022a <_ZNSs6assignEPKcj+0x52>
 801023a:	462a      	mov	r2, r5
 801023c:	4631      	mov	r1, r6
 801023e:	4638      	mov	r0, r7
 8010240:	f7ff fdf3 	bl	800fe2a <_ZNSs7_M_moveEPcPKcj>
 8010244:	e7f1      	b.n	801022a <_ZNSs6assignEPKcj+0x52>
 8010246:	bf00      	nop
 8010248:	0802f66f 	.word	0x0802f66f

0801024c <_ZNSs4_Rep10_M_refcopyEv>:
 801024c:	4b03      	ldr	r3, [pc, #12]	; (801025c <_ZNSs4_Rep10_M_refcopyEv+0x10>)
 801024e:	4298      	cmp	r0, r3
 8010250:	bf1e      	ittt	ne
 8010252:	6883      	ldrne	r3, [r0, #8]
 8010254:	3301      	addne	r3, #1
 8010256:	6083      	strne	r3, [r0, #8]
 8010258:	300c      	adds	r0, #12
 801025a:	4770      	bx	lr
 801025c:	20003be4 	.word	0x20003be4

08010260 <_ZNSs4_Rep8_M_cloneERKSaIcEj>:
 8010260:	b570      	push	{r4, r5, r6, lr}
 8010262:	4604      	mov	r4, r0
 8010264:	4610      	mov	r0, r2
 8010266:	6823      	ldr	r3, [r4, #0]
 8010268:	460a      	mov	r2, r1
 801026a:	4418      	add	r0, r3
 801026c:	6861      	ldr	r1, [r4, #4]
 801026e:	f7ff fe4b 	bl	800ff08 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
 8010272:	6822      	ldr	r2, [r4, #0]
 8010274:	4605      	mov	r5, r0
 8010276:	f100 060c 	add.w	r6, r0, #12
 801027a:	b122      	cbz	r2, 8010286 <_ZNSs4_Rep8_M_cloneERKSaIcEj+0x26>
 801027c:	f104 010c 	add.w	r1, r4, #12
 8010280:	4630      	mov	r0, r6
 8010282:	f7ff fdc6 	bl	800fe12 <_ZNSs7_M_copyEPcPKcj>
 8010286:	4628      	mov	r0, r5
 8010288:	6821      	ldr	r1, [r4, #0]
 801028a:	f7ff fe31 	bl	800fef0 <_ZNSs4_Rep26_M_set_length_and_sharableEj>
 801028e:	4630      	mov	r0, r6
 8010290:	bd70      	pop	{r4, r5, r6, pc}

08010292 <_ZNSs7reserveEj>:
 8010292:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010294:	4604      	mov	r4, r0
 8010296:	6800      	ldr	r0, [r0, #0]
 8010298:	f850 2c08 	ldr.w	r2, [r0, #-8]
 801029c:	4291      	cmp	r1, r2
 801029e:	d103      	bne.n	80102a8 <_ZNSs7reserveEj+0x16>
 80102a0:	f850 2c04 	ldr.w	r2, [r0, #-4]
 80102a4:	2a00      	cmp	r2, #0
 80102a6:	dd11      	ble.n	80102cc <_ZNSs7reserveEj+0x3a>
 80102a8:	f850 2d0c 	ldr.w	r2, [r0, #-12]!
 80102ac:	4291      	cmp	r1, r2
 80102ae:	bf2c      	ite	cs
 80102b0:	ebc2 0201 	rsbcs	r2, r2, r1
 80102b4:	ebc2 0202 	rsbcc	r2, r2, r2
 80102b8:	a901      	add	r1, sp, #4
 80102ba:	f7ff ffd1 	bl	8010260 <_ZNSs4_Rep8_M_cloneERKSaIcEj>
 80102be:	4605      	mov	r5, r0
 80102c0:	6820      	ldr	r0, [r4, #0]
 80102c2:	a901      	add	r1, sp, #4
 80102c4:	380c      	subs	r0, #12
 80102c6:	f7ff fe8f 	bl	800ffe8 <_ZNSs4_Rep10_M_disposeERKSaIcE>
 80102ca:	6025      	str	r5, [r4, #0]
 80102cc:	b003      	add	sp, #12
 80102ce:	bd30      	pop	{r4, r5, pc}

080102d0 <_ZNSs6appendERKSs>:
 80102d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80102d2:	680b      	ldr	r3, [r1, #0]
 80102d4:	f853 7c0c 	ldr.w	r7, [r3, #-12]
 80102d8:	4604      	mov	r4, r0
 80102da:	460e      	mov	r6, r1
 80102dc:	b1e7      	cbz	r7, 8010318 <_ZNSs6appendERKSs+0x48>
 80102de:	6803      	ldr	r3, [r0, #0]
 80102e0:	f853 5c0c 	ldr.w	r5, [r3, #-12]
 80102e4:	f853 2c08 	ldr.w	r2, [r3, #-8]
 80102e8:	443d      	add	r5, r7
 80102ea:	4295      	cmp	r5, r2
 80102ec:	d803      	bhi.n	80102f6 <_ZNSs6appendERKSs+0x26>
 80102ee:	f853 3c04 	ldr.w	r3, [r3, #-4]
 80102f2:	2b00      	cmp	r3, #0
 80102f4:	dd03      	ble.n	80102fe <_ZNSs6appendERKSs+0x2e>
 80102f6:	4629      	mov	r1, r5
 80102f8:	4620      	mov	r0, r4
 80102fa:	f7ff ffca 	bl	8010292 <_ZNSs7reserveEj>
 80102fe:	6823      	ldr	r3, [r4, #0]
 8010300:	6831      	ldr	r1, [r6, #0]
 8010302:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 8010306:	463a      	mov	r2, r7
 8010308:	4418      	add	r0, r3
 801030a:	f7ff fd82 	bl	800fe12 <_ZNSs7_M_copyEPcPKcj>
 801030e:	6820      	ldr	r0, [r4, #0]
 8010310:	4629      	mov	r1, r5
 8010312:	380c      	subs	r0, #12
 8010314:	f7ff fdec 	bl	800fef0 <_ZNSs4_Rep26_M_set_length_and_sharableEj>
 8010318:	4620      	mov	r0, r4
 801031a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801031c <_ZNSs6appendEPKcj>:
 801031c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010320:	4604      	mov	r4, r0
 8010322:	460d      	mov	r5, r1
 8010324:	4690      	mov	r8, r2
 8010326:	b32a      	cbz	r2, 8010374 <_ZNSs6appendEPKcj+0x58>
 8010328:	4b18      	ldr	r3, [pc, #96]	; (801038c <_ZNSs6appendEPKcj+0x70>)
 801032a:	2100      	movs	r1, #0
 801032c:	f7ff fd56 	bl	800fddc <_ZNKSs15_M_check_lengthEjjPKc>
 8010330:	6827      	ldr	r7, [r4, #0]
 8010332:	f857 6c0c 	ldr.w	r6, [r7, #-12]
 8010336:	f857 3c08 	ldr.w	r3, [r7, #-8]
 801033a:	4446      	add	r6, r8
 801033c:	429e      	cmp	r6, r3
 801033e:	d803      	bhi.n	8010348 <_ZNSs6appendEPKcj+0x2c>
 8010340:	f857 3c04 	ldr.w	r3, [r7, #-4]
 8010344:	2b00      	cmp	r3, #0
 8010346:	dd08      	ble.n	801035a <_ZNSs6appendEPKcj+0x3e>
 8010348:	4629      	mov	r1, r5
 801034a:	4620      	mov	r0, r4
 801034c:	f7ff fd54 	bl	800fdf8 <_ZNKSs11_M_disjunctEPKc>
 8010350:	b198      	cbz	r0, 801037a <_ZNSs6appendEPKcj+0x5e>
 8010352:	4631      	mov	r1, r6
 8010354:	4620      	mov	r0, r4
 8010356:	f7ff ff9c 	bl	8010292 <_ZNSs7reserveEj>
 801035a:	6823      	ldr	r3, [r4, #0]
 801035c:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 8010360:	4629      	mov	r1, r5
 8010362:	4418      	add	r0, r3
 8010364:	4642      	mov	r2, r8
 8010366:	f7ff fd54 	bl	800fe12 <_ZNSs7_M_copyEPcPKcj>
 801036a:	6820      	ldr	r0, [r4, #0]
 801036c:	4631      	mov	r1, r6
 801036e:	380c      	subs	r0, #12
 8010370:	f7ff fdbe 	bl	800fef0 <_ZNSs4_Rep26_M_set_length_and_sharableEj>
 8010374:	4620      	mov	r0, r4
 8010376:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801037a:	4631      	mov	r1, r6
 801037c:	4620      	mov	r0, r4
 801037e:	f7ff ff88 	bl	8010292 <_ZNSs7reserveEj>
 8010382:	6821      	ldr	r1, [r4, #0]
 8010384:	1bed      	subs	r5, r5, r7
 8010386:	440d      	add	r5, r1
 8010388:	e7e7      	b.n	801035a <_ZNSs6appendEPKcj+0x3e>
 801038a:	bf00      	nop
 801038c:	0802f684 	.word	0x0802f684

08010390 <_ZNSs6appendEjc>:
 8010390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010392:	4604      	mov	r4, r0
 8010394:	4617      	mov	r7, r2
 8010396:	460d      	mov	r5, r1
 8010398:	b309      	cbz	r1, 80103de <_ZNSs6appendEjc+0x4e>
 801039a:	460a      	mov	r2, r1
 801039c:	4b11      	ldr	r3, [pc, #68]	; (80103e4 <_ZNSs6appendEjc+0x54>)
 801039e:	2100      	movs	r1, #0
 80103a0:	f7ff fd1c 	bl	800fddc <_ZNKSs15_M_check_lengthEjjPKc>
 80103a4:	6823      	ldr	r3, [r4, #0]
 80103a6:	f853 6c0c 	ldr.w	r6, [r3, #-12]
 80103aa:	f853 2c08 	ldr.w	r2, [r3, #-8]
 80103ae:	442e      	add	r6, r5
 80103b0:	4296      	cmp	r6, r2
 80103b2:	d803      	bhi.n	80103bc <_ZNSs6appendEjc+0x2c>
 80103b4:	f853 3c04 	ldr.w	r3, [r3, #-4]
 80103b8:	2b00      	cmp	r3, #0
 80103ba:	dd03      	ble.n	80103c4 <_ZNSs6appendEjc+0x34>
 80103bc:	4631      	mov	r1, r6
 80103be:	4620      	mov	r0, r4
 80103c0:	f7ff ff67 	bl	8010292 <_ZNSs7reserveEj>
 80103c4:	6823      	ldr	r3, [r4, #0]
 80103c6:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 80103ca:	4629      	mov	r1, r5
 80103cc:	4418      	add	r0, r3
 80103ce:	463a      	mov	r2, r7
 80103d0:	f7ff fd37 	bl	800fe42 <_ZNSs9_M_assignEPcjc>
 80103d4:	6820      	ldr	r0, [r4, #0]
 80103d6:	4631      	mov	r1, r6
 80103d8:	380c      	subs	r0, #12
 80103da:	f7ff fd89 	bl	800fef0 <_ZNSs4_Rep26_M_set_length_and_sharableEj>
 80103de:	4620      	mov	r0, r4
 80103e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80103e2:	bf00      	nop
 80103e4:	0802f684 	.word	0x0802f684

080103e8 <_ZNSs6resizeEjc>:
 80103e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80103ea:	6803      	ldr	r3, [r0, #0]
 80103ec:	f853 6c0c 	ldr.w	r6, [r3, #-12]
 80103f0:	4b0b      	ldr	r3, [pc, #44]	; (8010420 <_ZNSs6resizeEjc+0x38>)
 80103f2:	460c      	mov	r4, r1
 80103f4:	4617      	mov	r7, r2
 80103f6:	460a      	mov	r2, r1
 80103f8:	4631      	mov	r1, r6
 80103fa:	4605      	mov	r5, r0
 80103fc:	f7ff fcee 	bl	800fddc <_ZNKSs15_M_check_lengthEjjPKc>
 8010400:	42a6      	cmp	r6, r4
 8010402:	d205      	bcs.n	8010410 <_ZNSs6resizeEjc+0x28>
 8010404:	463a      	mov	r2, r7
 8010406:	1ba1      	subs	r1, r4, r6
 8010408:	4628      	mov	r0, r5
 801040a:	f7ff ffc1 	bl	8010390 <_ZNSs6appendEjc>
 801040e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010410:	d9fd      	bls.n	801040e <_ZNSs6resizeEjc+0x26>
 8010412:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8010416:	4621      	mov	r1, r4
 8010418:	4628      	mov	r0, r5
 801041a:	f7ff fe85 	bl	8010128 <_ZNSs5eraseEjj>
 801041e:	e7f6      	b.n	801040e <_ZNSs6resizeEjc+0x26>
 8010420:	0802f699 	.word	0x0802f699

08010424 <_ZNSs6resizeEj>:
 8010424:	b508      	push	{r3, lr}
 8010426:	2200      	movs	r2, #0
 8010428:	f7ff ffde 	bl	80103e8 <_ZNSs6resizeEjc>
 801042c:	bd08      	pop	{r3, pc}

0801042e <_ZNSs9push_backEc>:
 801042e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010430:	6802      	ldr	r2, [r0, #0]
 8010432:	f852 3c0c 	ldr.w	r3, [r2, #-12]
 8010436:	460d      	mov	r5, r1
 8010438:	1c59      	adds	r1, r3, #1
 801043a:	f852 3c08 	ldr.w	r3, [r2, #-8]
 801043e:	4299      	cmp	r1, r3
 8010440:	4604      	mov	r4, r0
 8010442:	d803      	bhi.n	801044c <_ZNSs9push_backEc+0x1e>
 8010444:	f852 3c04 	ldr.w	r3, [r2, #-4]
 8010448:	2b00      	cmp	r3, #0
 801044a:	dd04      	ble.n	8010456 <_ZNSs9push_backEc+0x28>
 801044c:	4620      	mov	r0, r4
 801044e:	9101      	str	r1, [sp, #4]
 8010450:	f7ff ff1f 	bl	8010292 <_ZNSs7reserveEj>
 8010454:	9901      	ldr	r1, [sp, #4]
 8010456:	6823      	ldr	r3, [r4, #0]
 8010458:	f853 2c0c 	ldr.w	r2, [r3, #-12]
 801045c:	549d      	strb	r5, [r3, r2]
 801045e:	6820      	ldr	r0, [r4, #0]
 8010460:	380c      	subs	r0, #12
 8010462:	f7ff fd45 	bl	800fef0 <_ZNSs4_Rep26_M_set_length_and_sharableEj>
 8010466:	b003      	add	sp, #12
 8010468:	bd30      	pop	{r4, r5, pc}

0801046a <_ZNSs4_Rep7_M_grabERKSaIcES2_>:
 801046a:	b508      	push	{r3, lr}
 801046c:	6883      	ldr	r3, [r0, #8]
 801046e:	2b00      	cmp	r3, #0
 8010470:	db02      	blt.n	8010478 <_ZNSs4_Rep7_M_grabERKSaIcES2_+0xe>
 8010472:	f7ff feeb 	bl	801024c <_ZNSs4_Rep10_M_refcopyEv>
 8010476:	bd08      	pop	{r3, pc}
 8010478:	2200      	movs	r2, #0
 801047a:	f7ff fef1 	bl	8010260 <_ZNSs4_Rep8_M_cloneERKSaIcEj>
 801047e:	e7fa      	b.n	8010476 <_ZNSs4_Rep7_M_grabERKSaIcES2_+0xc>

08010480 <_ZNSsC1ERKSs>:
 8010480:	b513      	push	{r0, r1, r4, lr}
 8010482:	4604      	mov	r4, r0
 8010484:	6808      	ldr	r0, [r1, #0]
 8010486:	aa01      	add	r2, sp, #4
 8010488:	4669      	mov	r1, sp
 801048a:	380c      	subs	r0, #12
 801048c:	f7ff ffed 	bl	801046a <_ZNSs4_Rep7_M_grabERKSaIcES2_>
 8010490:	6020      	str	r0, [r4, #0]
 8010492:	4620      	mov	r0, r4
 8010494:	b002      	add	sp, #8
 8010496:	bd10      	pop	{r4, pc}

08010498 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>:
 8010498:	4288      	cmp	r0, r1
 801049a:	b508      	push	{r3, lr}
 801049c:	d007      	beq.n	80104ae <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0x16>
 801049e:	b118      	cbz	r0, 80104a8 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0x10>
 80104a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80104a4:	f7ff bd84 	b.w	800ffb0 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag.part.0>
 80104a8:	4802      	ldr	r0, [pc, #8]	; (80104b4 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0x1c>)
 80104aa:	f007 f9bf 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 80104ae:	4802      	ldr	r0, [pc, #8]	; (80104b8 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag+0x20>)
 80104b0:	bd08      	pop	{r3, pc}
 80104b2:	bf00      	nop
 80104b4:	0802f6ae 	.word	0x0802f6ae
 80104b8:	20003bf0 	.word	0x20003bf0

080104bc <_ZNSsC1EPKcjRKSaIcE>:
 80104bc:	b510      	push	{r4, lr}
 80104be:	4604      	mov	r4, r0
 80104c0:	4608      	mov	r0, r1
 80104c2:	4611      	mov	r1, r2
 80104c4:	4401      	add	r1, r0
 80104c6:	461a      	mov	r2, r3
 80104c8:	f04f 0300 	mov.w	r3, #0
 80104cc:	f7ff ffe4 	bl	8010498 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
 80104d0:	6020      	str	r0, [r4, #0]
 80104d2:	4620      	mov	r0, r4
 80104d4:	bd10      	pop	{r4, pc}

080104d6 <_ZNSsC1IPKcEET_S2_RKSaIcE>:
 80104d6:	b510      	push	{r4, lr}
 80104d8:	4604      	mov	r4, r0
 80104da:	4608      	mov	r0, r1
 80104dc:	4611      	mov	r1, r2
 80104de:	461a      	mov	r2, r3
 80104e0:	f04f 0300 	mov.w	r3, #0
 80104e4:	f7ff ffd8 	bl	8010498 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
 80104e8:	6020      	str	r0, [r4, #0]
 80104ea:	4620      	mov	r0, r4
 80104ec:	bd10      	pop	{r4, pc}

080104ee <_ZNSsC1EPKcRKSaIcE>:
 80104ee:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80104f0:	4605      	mov	r5, r0
 80104f2:	460c      	mov	r4, r1
 80104f4:	b171      	cbz	r1, 8010514 <_ZNSsC1EPKcRKSaIcE+0x26>
 80104f6:	4608      	mov	r0, r1
 80104f8:	9201      	str	r2, [sp, #4]
 80104fa:	f7ef fec3 	bl	8000284 <strlen>
 80104fe:	9a01      	ldr	r2, [sp, #4]
 8010500:	1821      	adds	r1, r4, r0
 8010502:	f04f 0300 	mov.w	r3, #0
 8010506:	4620      	mov	r0, r4
 8010508:	f7ff ffc6 	bl	8010498 <_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag>
 801050c:	6028      	str	r0, [r5, #0]
 801050e:	4628      	mov	r0, r5
 8010510:	b003      	add	sp, #12
 8010512:	bd30      	pop	{r4, r5, pc}
 8010514:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8010518:	e7f3      	b.n	8010502 <_ZNSsC1EPKcRKSaIcE+0x14>

0801051a <_ZNSt11char_traitsIwE4findEPKwjRS1_>:
 801051a:	4613      	mov	r3, r2
 801051c:	460a      	mov	r2, r1
 801051e:	b111      	cbz	r1, 8010526 <_ZNSt11char_traitsIwE4findEPKwjRS1_+0xc>
 8010520:	6819      	ldr	r1, [r3, #0]
 8010522:	f01a b909 	b.w	802a738 <wmemchr>
 8010526:	4608      	mov	r0, r1
 8010528:	4770      	bx	lr
	...

0801052c <_ZNKSbIwSt11char_traitsIwESaIwEE8_M_checkEjPKc>:
 801052c:	b508      	push	{r3, lr}
 801052e:	4603      	mov	r3, r0
 8010530:	4608      	mov	r0, r1
 8010532:	681b      	ldr	r3, [r3, #0]
 8010534:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 8010538:	4283      	cmp	r3, r0
 801053a:	4611      	mov	r1, r2
 801053c:	d203      	bcs.n	8010546 <_ZNKSbIwSt11char_traitsIwESaIwEE8_M_checkEjPKc+0x1a>
 801053e:	4602      	mov	r2, r0
 8010540:	4801      	ldr	r0, [pc, #4]	; (8010548 <_ZNKSbIwSt11char_traitsIwESaIwEE8_M_checkEjPKc+0x1c>)
 8010542:	f007 f979 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 8010546:	bd08      	pop	{r3, pc}
 8010548:	0802f5dc 	.word	0x0802f5dc

0801054c <_ZNKSbIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc>:
 801054c:	6800      	ldr	r0, [r0, #0]
 801054e:	f101 5180 	add.w	r1, r1, #268435456	; 0x10000000
 8010552:	f850 0c0c 	ldr.w	r0, [r0, #-12]
 8010556:	3902      	subs	r1, #2
 8010558:	1a09      	subs	r1, r1, r0
 801055a:	4291      	cmp	r1, r2
 801055c:	b508      	push	{r3, lr}
 801055e:	d202      	bcs.n	8010566 <_ZNKSbIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc+0x1a>
 8010560:	4618      	mov	r0, r3
 8010562:	f007 f966 	bl	8017832 <_ZSt20__throw_length_errorPKc>
 8010566:	bd08      	pop	{r3, pc}

08010568 <_ZNKSbIwSt11char_traitsIwESaIwEE11_M_disjunctEPKw>:
 8010568:	6800      	ldr	r0, [r0, #0]
 801056a:	4288      	cmp	r0, r1
 801056c:	d808      	bhi.n	8010580 <_ZNKSbIwSt11char_traitsIwESaIwEE11_M_disjunctEPKw+0x18>
 801056e:	f850 3c0c 	ldr.w	r3, [r0, #-12]
 8010572:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8010576:	4281      	cmp	r1, r0
 8010578:	bf94      	ite	ls
 801057a:	2000      	movls	r0, #0
 801057c:	2001      	movhi	r0, #1
 801057e:	4770      	bx	lr
 8010580:	2001      	movs	r0, #1
 8010582:	4770      	bx	lr

08010584 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj>:
 8010584:	2a01      	cmp	r2, #1
 8010586:	b430      	push	{r4, r5}
 8010588:	d103      	bne.n	8010592 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj+0xe>
 801058a:	680b      	ldr	r3, [r1, #0]
 801058c:	6003      	str	r3, [r0, #0]
 801058e:	bc30      	pop	{r4, r5}
 8010590:	4770      	bx	lr
 8010592:	2a00      	cmp	r2, #0
 8010594:	d0fb      	beq.n	801058e <_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj+0xa>
 8010596:	bc30      	pop	{r4, r5}
 8010598:	f01a b8dd 	b.w	802a756 <wmemcpy>

0801059c <_ZNSbIwSt11char_traitsIwESaIwEE7_M_moveEPwPKwj>:
 801059c:	2a01      	cmp	r2, #1
 801059e:	b430      	push	{r4, r5}
 80105a0:	d103      	bne.n	80105aa <_ZNSbIwSt11char_traitsIwESaIwEE7_M_moveEPwPKwj+0xe>
 80105a2:	680b      	ldr	r3, [r1, #0]
 80105a4:	6003      	str	r3, [r0, #0]
 80105a6:	bc30      	pop	{r4, r5}
 80105a8:	4770      	bx	lr
 80105aa:	2a00      	cmp	r2, #0
 80105ac:	d0fb      	beq.n	80105a6 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_moveEPwPKwj+0xa>
 80105ae:	bc30      	pop	{r4, r5}
 80105b0:	f01a b8d4 	b.w	802a75c <wmemmove>

080105b4 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_assignEPwjw>:
 80105b4:	460b      	mov	r3, r1
 80105b6:	2b01      	cmp	r3, #1
 80105b8:	b410      	push	{r4}
 80105ba:	4611      	mov	r1, r2
 80105bc:	4604      	mov	r4, r0
 80105be:	d103      	bne.n	80105c8 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_assignEPwjw+0x14>
 80105c0:	6022      	str	r2, [r4, #0]
 80105c2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80105c6:	4770      	bx	lr
 80105c8:	2b00      	cmp	r3, #0
 80105ca:	d0fa      	beq.n	80105c2 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_assignEPwjw+0xe>
 80105cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80105d0:	461a      	mov	r2, r3
 80105d2:	f01a b8c6 	b.w	802a762 <wmemset>

080105d6 <_ZNSbIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwS3_S3_>:
 80105d6:	b508      	push	{r3, lr}
 80105d8:	1a52      	subs	r2, r2, r1
 80105da:	1092      	asrs	r2, r2, #2
 80105dc:	f7ff ffd2 	bl	8010584 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj>
 80105e0:	bd08      	pop	{r3, pc}
	...

080105e4 <_ZNKSbIwSt11char_traitsIwESaIwEE4copyEPwjj>:
 80105e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80105e8:	4604      	mov	r4, r0
 80105ea:	4690      	mov	r8, r2
 80105ec:	460f      	mov	r7, r1
 80105ee:	4a0b      	ldr	r2, [pc, #44]	; (801061c <_ZNKSbIwSt11char_traitsIwESaIwEE4copyEPwjj+0x38>)
 80105f0:	4619      	mov	r1, r3
 80105f2:	461e      	mov	r6, r3
 80105f4:	f7ff ff9a 	bl	801052c <_ZNKSbIwSt11char_traitsIwESaIwEE8_M_checkEjPKc>
 80105f8:	6821      	ldr	r1, [r4, #0]
 80105fa:	f851 5c0c 	ldr.w	r5, [r1, #-12]
 80105fe:	1bac      	subs	r4, r5, r6
 8010600:	4544      	cmp	r4, r8
 8010602:	bf28      	it	cs
 8010604:	4644      	movcs	r4, r8
 8010606:	b12c      	cbz	r4, 8010614 <_ZNKSbIwSt11char_traitsIwESaIwEE4copyEPwjj+0x30>
 8010608:	4622      	mov	r2, r4
 801060a:	eb01 0186 	add.w	r1, r1, r6, lsl #2
 801060e:	4638      	mov	r0, r7
 8010610:	f7ff ffb8 	bl	8010584 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj>
 8010614:	4620      	mov	r0, r4
 8010616:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801061a:	bf00      	nop
 801061c:	0802f613 	.word	0x0802f613

08010620 <_ZNSbIwSt11char_traitsIwESaIwEE4swapERS2_>:
 8010620:	6803      	ldr	r3, [r0, #0]
 8010622:	f853 2c04 	ldr.w	r2, [r3, #-4]
 8010626:	2a00      	cmp	r2, #0
 8010628:	bfb8      	it	lt
 801062a:	2200      	movlt	r2, #0
 801062c:	b510      	push	{r4, lr}
 801062e:	bfb8      	it	lt
 8010630:	f843 2c04 	strlt.w	r2, [r3, #-4]
 8010634:	680a      	ldr	r2, [r1, #0]
 8010636:	f852 4c04 	ldr.w	r4, [r2, #-4]
 801063a:	2c00      	cmp	r4, #0
 801063c:	bfbc      	itt	lt
 801063e:	2400      	movlt	r4, #0
 8010640:	f842 4c04 	strlt.w	r4, [r2, #-4]
 8010644:	6002      	str	r2, [r0, #0]
 8010646:	600b      	str	r3, [r1, #0]
 8010648:	bd10      	pop	{r4, pc}
	...

0801064c <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj>:
 801064c:	4b04      	ldr	r3, [pc, #16]	; (8010660 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj+0x14>)
 801064e:	4298      	cmp	r0, r3
 8010650:	d005      	beq.n	801065e <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj+0x12>
 8010652:	2300      	movs	r3, #0
 8010654:	6083      	str	r3, [r0, #8]
 8010656:	6001      	str	r1, [r0, #0]
 8010658:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 801065c:	60c3      	str	r3, [r0, #12]
 801065e:	4770      	bx	lr
 8010660:	20003bf4 	.word	0x20003bf4

08010664 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEjjRKS1_>:
 8010664:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8010668:	4298      	cmp	r0, r3
 801066a:	b510      	push	{r4, lr}
 801066c:	4604      	mov	r4, r0
 801066e:	d302      	bcc.n	8010676 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEjjRKS1_+0x12>
 8010670:	4811      	ldr	r0, [pc, #68]	; (80106b8 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEjjRKS1_+0x54>)
 8010672:	f007 f8de 	bl	8017832 <_ZSt20__throw_length_errorPKc>
 8010676:	4288      	cmp	r0, r1
 8010678:	d903      	bls.n	8010682 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEjjRKS1_+0x1e>
 801067a:	004b      	lsls	r3, r1, #1
 801067c:	4298      	cmp	r0, r3
 801067e:	bf38      	it	cc
 8010680:	461c      	movcc	r4, r3
 8010682:	1d20      	adds	r0, r4, #4
 8010684:	0080      	lsls	r0, r0, #2
 8010686:	f100 0310 	add.w	r3, r0, #16
 801068a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801068e:	d90d      	bls.n	80106ac <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEjjRKS1_+0x48>
 8010690:	428c      	cmp	r4, r1
 8010692:	d90b      	bls.n	80106ac <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEjjRKS1_+0x48>
 8010694:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8010698:	4808      	ldr	r0, [pc, #32]	; (80106bc <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEjjRKS1_+0x58>)
 801069a:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
 801069e:	eb04 0493 	add.w	r4, r4, r3, lsr #2
 80106a2:	4284      	cmp	r4, r0
 80106a4:	bf28      	it	cs
 80106a6:	4604      	movcs	r4, r0
 80106a8:	1d20      	adds	r0, r4, #4
 80106aa:	0080      	lsls	r0, r0, #2
 80106ac:	f7fb fc48 	bl	800bf40 <_Znwj>
 80106b0:	2200      	movs	r2, #0
 80106b2:	6044      	str	r4, [r0, #4]
 80106b4:	6082      	str	r2, [r0, #8]
 80106b6:	bd10      	pop	{r4, pc}
 80106b8:	0802f626 	.word	0x0802f626
 80106bc:	0ffffffe 	.word	0x0ffffffe

080106c0 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructEjwRKS1_>:
 80106c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80106c2:	460f      	mov	r7, r1
 80106c4:	4604      	mov	r4, r0
 80106c6:	b180      	cbz	r0, 80106ea <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructEjwRKS1_+0x2a>
 80106c8:	2100      	movs	r1, #0
 80106ca:	f7ff ffcb 	bl	8010664 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEjjRKS1_>
 80106ce:	f100 060c 	add.w	r6, r0, #12
 80106d2:	4605      	mov	r5, r0
 80106d4:	4621      	mov	r1, r4
 80106d6:	4630      	mov	r0, r6
 80106d8:	463a      	mov	r2, r7
 80106da:	f7ff ff6b 	bl	80105b4 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_assignEPwjw>
 80106de:	4621      	mov	r1, r4
 80106e0:	4628      	mov	r0, r5
 80106e2:	f7ff ffb3 	bl	801064c <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj>
 80106e6:	4630      	mov	r0, r6
 80106e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80106ea:	4e01      	ldr	r6, [pc, #4]	; (80106f0 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructEjwRKS1_+0x30>)
 80106ec:	e7fb      	b.n	80106e6 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructEjwRKS1_+0x26>
 80106ee:	bf00      	nop
 80106f0:	20003c00 	.word	0x20003c00

080106f4 <_ZNSbIwSt11char_traitsIwESaIwEEC1EjwRKS1_>:
 80106f4:	b510      	push	{r4, lr}
 80106f6:	4604      	mov	r4, r0
 80106f8:	4608      	mov	r0, r1
 80106fa:	4611      	mov	r1, r2
 80106fc:	461a      	mov	r2, r3
 80106fe:	f7ff ffdf 	bl	80106c0 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructEjwRKS1_>
 8010702:	6020      	str	r0, [r4, #0]
 8010704:	4620      	mov	r0, r4
 8010706:	bd10      	pop	{r4, pc}

08010708 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructIPKwEEPwT_S7_RKS1_St20forward_iterator_tag.part.0>:
 8010708:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801070c:	1a0d      	subs	r5, r1, r0
 801070e:	10ad      	asrs	r5, r5, #2
 8010710:	4606      	mov	r6, r0
 8010712:	460f      	mov	r7, r1
 8010714:	4628      	mov	r0, r5
 8010716:	2100      	movs	r1, #0
 8010718:	f7ff ffa4 	bl	8010664 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEjjRKS1_>
 801071c:	f100 080c 	add.w	r8, r0, #12
 8010720:	4604      	mov	r4, r0
 8010722:	463a      	mov	r2, r7
 8010724:	4631      	mov	r1, r6
 8010726:	4640      	mov	r0, r8
 8010728:	f7ff ff55 	bl	80105d6 <_ZNSbIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwS3_S3_>
 801072c:	4620      	mov	r0, r4
 801072e:	4629      	mov	r1, r5
 8010730:	f7ff ff8c 	bl	801064c <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj>
 8010734:	4640      	mov	r0, r8
 8010736:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801073a <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_destroyERKS1_>:
 801073a:	f013 bbc7 	b.w	8023ecc <_ZdlPv>
	...

08010740 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_disposeERKS1_>:
 8010740:	4a05      	ldr	r2, [pc, #20]	; (8010758 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_disposeERKS1_+0x18>)
 8010742:	4290      	cmp	r0, r2
 8010744:	b510      	push	{r4, lr}
 8010746:	d006      	beq.n	8010756 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_disposeERKS1_+0x16>
 8010748:	6882      	ldr	r2, [r0, #8]
 801074a:	1e54      	subs	r4, r2, #1
 801074c:	2a00      	cmp	r2, #0
 801074e:	6084      	str	r4, [r0, #8]
 8010750:	dc01      	bgt.n	8010756 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_disposeERKS1_+0x16>
 8010752:	f7ff fff2 	bl	801073a <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_destroyERKS1_>
 8010756:	bd10      	pop	{r4, pc}
 8010758:	20003bf4 	.word	0x20003bf4

0801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>:
 801075c:	b513      	push	{r0, r1, r4, lr}
 801075e:	4604      	mov	r4, r0
 8010760:	6800      	ldr	r0, [r0, #0]
 8010762:	a901      	add	r1, sp, #4
 8010764:	380c      	subs	r0, #12
 8010766:	f7ff ffeb 	bl	8010740 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_disposeERKS1_>
 801076a:	4620      	mov	r0, r4
 801076c:	b002      	add	sp, #8
 801076e:	bd10      	pop	{r4, pc}

08010770 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj>:
 8010770:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010774:	4605      	mov	r5, r0
 8010776:	6800      	ldr	r0, [r0, #0]
 8010778:	f850 6c0c 	ldr.w	r6, [r0, #-12]
 801077c:	eb02 0a01 	add.w	sl, r2, r1
 8010780:	460f      	mov	r7, r1
 8010782:	eba3 0902 	sub.w	r9, r3, r2
 8010786:	f850 1c08 	ldr.w	r1, [r0, #-8]
 801078a:	44b1      	add	r9, r6
 801078c:	4589      	cmp	r9, r1
 801078e:	461c      	mov	r4, r3
 8010790:	eba6 060a 	sub.w	r6, r6, sl
 8010794:	d803      	bhi.n	801079e <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj+0x2e>
 8010796:	f850 3c04 	ldr.w	r3, [r0, #-4]
 801079a:	2b00      	cmp	r3, #0
 801079c:	dd1f      	ble.n	80107de <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj+0x6e>
 801079e:	aa01      	add	r2, sp, #4
 80107a0:	4648      	mov	r0, r9
 80107a2:	f7ff ff5f 	bl	8010664 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEjjRKS1_>
 80107a6:	4680      	mov	r8, r0
 80107a8:	f100 0b0c 	add.w	fp, r0, #12
 80107ac:	b127      	cbz	r7, 80107b8 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj+0x48>
 80107ae:	6829      	ldr	r1, [r5, #0]
 80107b0:	463a      	mov	r2, r7
 80107b2:	4658      	mov	r0, fp
 80107b4:	f7ff fee6 	bl	8010584 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj>
 80107b8:	b14e      	cbz	r6, 80107ce <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj+0x5e>
 80107ba:	6829      	ldr	r1, [r5, #0]
 80107bc:	443c      	add	r4, r7
 80107be:	eb08 0084 	add.w	r0, r8, r4, lsl #2
 80107c2:	4632      	mov	r2, r6
 80107c4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80107c8:	300c      	adds	r0, #12
 80107ca:	f7ff fedb 	bl	8010584 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj>
 80107ce:	6828      	ldr	r0, [r5, #0]
 80107d0:	a901      	add	r1, sp, #4
 80107d2:	380c      	subs	r0, #12
 80107d4:	f7ff ffb4 	bl	8010740 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_disposeERKS1_>
 80107d8:	f8c5 b000 	str.w	fp, [r5]
 80107dc:	e000      	b.n	80107e0 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj+0x70>
 80107de:	b93e      	cbnz	r6, 80107f0 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj+0x80>
 80107e0:	6828      	ldr	r0, [r5, #0]
 80107e2:	4649      	mov	r1, r9
 80107e4:	380c      	subs	r0, #12
 80107e6:	f7ff ff31 	bl	801064c <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj>
 80107ea:	b003      	add	sp, #12
 80107ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107f0:	4294      	cmp	r4, r2
 80107f2:	d0f5      	beq.n	80107e0 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj+0x70>
 80107f4:	443c      	add	r4, r7
 80107f6:	eb00 018a 	add.w	r1, r0, sl, lsl #2
 80107fa:	4632      	mov	r2, r6
 80107fc:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 8010800:	f7ff fecc 	bl	801059c <_ZNSbIwSt11char_traitsIwESaIwEE7_M_moveEPwPKwj>
 8010804:	e7ec      	b.n	80107e0 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj+0x70>
	...

08010808 <_ZNSbIwSt11char_traitsIwESaIwEE12_M_leak_hardEv>:
 8010808:	6803      	ldr	r3, [r0, #0]
 801080a:	4a0a      	ldr	r2, [pc, #40]	; (8010834 <_ZNSbIwSt11char_traitsIwESaIwEE12_M_leak_hardEv+0x2c>)
 801080c:	4293      	cmp	r3, r2
 801080e:	b510      	push	{r4, lr}
 8010810:	4604      	mov	r4, r0
 8010812:	d00d      	beq.n	8010830 <_ZNSbIwSt11char_traitsIwESaIwEE12_M_leak_hardEv+0x28>
 8010814:	f853 3c04 	ldr.w	r3, [r3, #-4]
 8010818:	2b00      	cmp	r3, #0
 801081a:	dd04      	ble.n	8010826 <_ZNSbIwSt11char_traitsIwESaIwEE12_M_leak_hardEv+0x1e>
 801081c:	2300      	movs	r3, #0
 801081e:	461a      	mov	r2, r3
 8010820:	4619      	mov	r1, r3
 8010822:	f7ff ffa5 	bl	8010770 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj>
 8010826:	6823      	ldr	r3, [r4, #0]
 8010828:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801082c:	f843 2c04 	str.w	r2, [r3, #-4]
 8010830:	bd10      	pop	{r4, pc}
 8010832:	bf00      	nop
 8010834:	20003c00 	.word	0x20003c00

08010838 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_leakEv>:
 8010838:	b508      	push	{r3, lr}
 801083a:	6803      	ldr	r3, [r0, #0]
 801083c:	f853 3c04 	ldr.w	r3, [r3, #-4]
 8010840:	2b00      	cmp	r3, #0
 8010842:	db01      	blt.n	8010848 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_leakEv+0x10>
 8010844:	f7ff ffe0 	bl	8010808 <_ZNSbIwSt11char_traitsIwESaIwEE12_M_leak_hardEv>
 8010848:	bd08      	pop	{r3, pc}
	...

0801084c <_ZNSbIwSt11char_traitsIwESaIwEE5eraseEjj>:
 801084c:	b570      	push	{r4, r5, r6, lr}
 801084e:	4604      	mov	r4, r0
 8010850:	4615      	mov	r5, r2
 8010852:	4a09      	ldr	r2, [pc, #36]	; (8010878 <_ZNSbIwSt11char_traitsIwESaIwEE5eraseEjj+0x2c>)
 8010854:	460e      	mov	r6, r1
 8010856:	f7ff fe69 	bl	801052c <_ZNKSbIwSt11char_traitsIwESaIwEE8_M_checkEjPKc>
 801085a:	6823      	ldr	r3, [r4, #0]
 801085c:	f853 2c0c 	ldr.w	r2, [r3, #-12]
 8010860:	1b92      	subs	r2, r2, r6
 8010862:	42aa      	cmp	r2, r5
 8010864:	4601      	mov	r1, r0
 8010866:	f04f 0300 	mov.w	r3, #0
 801086a:	4620      	mov	r0, r4
 801086c:	bf28      	it	cs
 801086e:	462a      	movcs	r2, r5
 8010870:	f7ff ff7e 	bl	8010770 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj>
 8010874:	4620      	mov	r0, r4
 8010876:	bd70      	pop	{r4, r5, r6, pc}
 8010878:	0802f63e 	.word	0x0802f63e

0801087c <_ZNSbIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw>:
 801087c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801087e:	461c      	mov	r4, r3
 8010880:	4617      	mov	r7, r2
 8010882:	4b0b      	ldr	r3, [pc, #44]	; (80108b0 <_ZNSbIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw+0x34>)
 8010884:	4605      	mov	r5, r0
 8010886:	460e      	mov	r6, r1
 8010888:	4622      	mov	r2, r4
 801088a:	4639      	mov	r1, r7
 801088c:	f7ff fe5e 	bl	801054c <_ZNKSbIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc>
 8010890:	4623      	mov	r3, r4
 8010892:	463a      	mov	r2, r7
 8010894:	4631      	mov	r1, r6
 8010896:	4628      	mov	r0, r5
 8010898:	f7ff ff6a 	bl	8010770 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj>
 801089c:	b134      	cbz	r4, 80108ac <_ZNSbIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw+0x30>
 801089e:	6828      	ldr	r0, [r5, #0]
 80108a0:	9a06      	ldr	r2, [sp, #24]
 80108a2:	4621      	mov	r1, r4
 80108a4:	eb00 0086 	add.w	r0, r0, r6, lsl #2
 80108a8:	f7ff fe84 	bl	80105b4 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_assignEPwjw>
 80108ac:	4628      	mov	r0, r5
 80108ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80108b0:	0802f652 	.word	0x0802f652

080108b4 <_ZNSbIwSt11char_traitsIwESaIwEE15_M_replace_safeEjjPKwj>:
 80108b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80108b6:	9f06      	ldr	r7, [sp, #24]
 80108b8:	461e      	mov	r6, r3
 80108ba:	463b      	mov	r3, r7
 80108bc:	4604      	mov	r4, r0
 80108be:	460d      	mov	r5, r1
 80108c0:	f7ff ff56 	bl	8010770 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj>
 80108c4:	b137      	cbz	r7, 80108d4 <_ZNSbIwSt11char_traitsIwESaIwEE15_M_replace_safeEjjPKwj+0x20>
 80108c6:	6820      	ldr	r0, [r4, #0]
 80108c8:	463a      	mov	r2, r7
 80108ca:	4631      	mov	r1, r6
 80108cc:	eb00 0085 	add.w	r0, r0, r5, lsl #2
 80108d0:	f7ff fe58 	bl	8010584 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj>
 80108d4:	4620      	mov	r0, r4
 80108d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080108d8 <_ZNSbIwSt11char_traitsIwESaIwEE6assignEPKwj>:
 80108d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80108dc:	6807      	ldr	r7, [r0, #0]
 80108de:	4b1b      	ldr	r3, [pc, #108]	; (801094c <_ZNSbIwSt11char_traitsIwESaIwEE6assignEPKwj+0x74>)
 80108e0:	f857 8c0c 	ldr.w	r8, [r7, #-12]
 80108e4:	4604      	mov	r4, r0
 80108e6:	460e      	mov	r6, r1
 80108e8:	4641      	mov	r1, r8
 80108ea:	4615      	mov	r5, r2
 80108ec:	f7ff fe2e 	bl	801054c <_ZNKSbIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc>
 80108f0:	4631      	mov	r1, r6
 80108f2:	4620      	mov	r0, r4
 80108f4:	f7ff fe38 	bl	8010568 <_ZNKSbIwSt11char_traitsIwESaIwEE11_M_disjunctEPKw>
 80108f8:	b918      	cbnz	r0, 8010902 <_ZNSbIwSt11char_traitsIwESaIwEE6assignEPKwj+0x2a>
 80108fa:	f857 3c04 	ldr.w	r3, [r7, #-4]
 80108fe:	2b00      	cmp	r3, #0
 8010900:	dd0b      	ble.n	801091a <_ZNSbIwSt11char_traitsIwESaIwEE6assignEPKwj+0x42>
 8010902:	4620      	mov	r0, r4
 8010904:	9500      	str	r5, [sp, #0]
 8010906:	4633      	mov	r3, r6
 8010908:	4642      	mov	r2, r8
 801090a:	2100      	movs	r1, #0
 801090c:	f7ff ffd2 	bl	80108b4 <_ZNSbIwSt11char_traitsIwESaIwEE15_M_replace_safeEjjPKwj>
 8010910:	4604      	mov	r4, r0
 8010912:	4620      	mov	r0, r4
 8010914:	b002      	add	sp, #8
 8010916:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801091a:	1bf3      	subs	r3, r6, r7
 801091c:	ebb5 0fa3 	cmp.w	r5, r3, asr #2
 8010920:	ea4f 02a3 	mov.w	r2, r3, asr #2
 8010924:	d80a      	bhi.n	801093c <_ZNSbIwSt11char_traitsIwESaIwEE6assignEPKwj+0x64>
 8010926:	462a      	mov	r2, r5
 8010928:	4631      	mov	r1, r6
 801092a:	4638      	mov	r0, r7
 801092c:	f7ff fe2a 	bl	8010584 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj>
 8010930:	6820      	ldr	r0, [r4, #0]
 8010932:	4629      	mov	r1, r5
 8010934:	380c      	subs	r0, #12
 8010936:	f7ff fe89 	bl	801064c <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj>
 801093a:	e7ea      	b.n	8010912 <_ZNSbIwSt11char_traitsIwESaIwEE6assignEPKwj+0x3a>
 801093c:	2a00      	cmp	r2, #0
 801093e:	d0f7      	beq.n	8010930 <_ZNSbIwSt11char_traitsIwESaIwEE6assignEPKwj+0x58>
 8010940:	462a      	mov	r2, r5
 8010942:	4631      	mov	r1, r6
 8010944:	4638      	mov	r0, r7
 8010946:	f7ff fe29 	bl	801059c <_ZNSbIwSt11char_traitsIwESaIwEE7_M_moveEPwPKwj>
 801094a:	e7f1      	b.n	8010930 <_ZNSbIwSt11char_traitsIwESaIwEE6assignEPKwj+0x58>
 801094c:	0802f66f 	.word	0x0802f66f

08010950 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_refcopyEv>:
 8010950:	4b03      	ldr	r3, [pc, #12]	; (8010960 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_refcopyEv+0x10>)
 8010952:	4298      	cmp	r0, r3
 8010954:	bf1e      	ittt	ne
 8010956:	6883      	ldrne	r3, [r0, #8]
 8010958:	3301      	addne	r3, #1
 801095a:	6083      	strne	r3, [r0, #8]
 801095c:	300c      	adds	r0, #12
 801095e:	4770      	bx	lr
 8010960:	20003bf4 	.word	0x20003bf4

08010964 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep8_M_cloneERKS1_j>:
 8010964:	b570      	push	{r4, r5, r6, lr}
 8010966:	4604      	mov	r4, r0
 8010968:	4610      	mov	r0, r2
 801096a:	6823      	ldr	r3, [r4, #0]
 801096c:	460a      	mov	r2, r1
 801096e:	4418      	add	r0, r3
 8010970:	6861      	ldr	r1, [r4, #4]
 8010972:	f7ff fe77 	bl	8010664 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEjjRKS1_>
 8010976:	6822      	ldr	r2, [r4, #0]
 8010978:	4605      	mov	r5, r0
 801097a:	f100 060c 	add.w	r6, r0, #12
 801097e:	b122      	cbz	r2, 801098a <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep8_M_cloneERKS1_j+0x26>
 8010980:	f104 010c 	add.w	r1, r4, #12
 8010984:	4630      	mov	r0, r6
 8010986:	f7ff fdfd 	bl	8010584 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj>
 801098a:	4628      	mov	r0, r5
 801098c:	6821      	ldr	r1, [r4, #0]
 801098e:	f7ff fe5d 	bl	801064c <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj>
 8010992:	4630      	mov	r0, r6
 8010994:	bd70      	pop	{r4, r5, r6, pc}

08010996 <_ZNSbIwSt11char_traitsIwESaIwEE7reserveEj>:
 8010996:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010998:	4604      	mov	r4, r0
 801099a:	6800      	ldr	r0, [r0, #0]
 801099c:	f850 2c08 	ldr.w	r2, [r0, #-8]
 80109a0:	4291      	cmp	r1, r2
 80109a2:	d103      	bne.n	80109ac <_ZNSbIwSt11char_traitsIwESaIwEE7reserveEj+0x16>
 80109a4:	f850 2c04 	ldr.w	r2, [r0, #-4]
 80109a8:	2a00      	cmp	r2, #0
 80109aa:	dd11      	ble.n	80109d0 <_ZNSbIwSt11char_traitsIwESaIwEE7reserveEj+0x3a>
 80109ac:	f850 2d0c 	ldr.w	r2, [r0, #-12]!
 80109b0:	4291      	cmp	r1, r2
 80109b2:	bf2c      	ite	cs
 80109b4:	ebc2 0201 	rsbcs	r2, r2, r1
 80109b8:	ebc2 0202 	rsbcc	r2, r2, r2
 80109bc:	a901      	add	r1, sp, #4
 80109be:	f7ff ffd1 	bl	8010964 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep8_M_cloneERKS1_j>
 80109c2:	4605      	mov	r5, r0
 80109c4:	6820      	ldr	r0, [r4, #0]
 80109c6:	a901      	add	r1, sp, #4
 80109c8:	380c      	subs	r0, #12
 80109ca:	f7ff feb9 	bl	8010740 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_disposeERKS1_>
 80109ce:	6025      	str	r5, [r4, #0]
 80109d0:	b003      	add	sp, #12
 80109d2:	bd30      	pop	{r4, r5, pc}

080109d4 <_ZNSbIwSt11char_traitsIwESaIwEE6appendERKS2_>:
 80109d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80109d6:	680b      	ldr	r3, [r1, #0]
 80109d8:	f853 7c0c 	ldr.w	r7, [r3, #-12]
 80109dc:	4604      	mov	r4, r0
 80109de:	460e      	mov	r6, r1
 80109e0:	b1ef      	cbz	r7, 8010a1e <_ZNSbIwSt11char_traitsIwESaIwEE6appendERKS2_+0x4a>
 80109e2:	6803      	ldr	r3, [r0, #0]
 80109e4:	f853 5c0c 	ldr.w	r5, [r3, #-12]
 80109e8:	f853 2c08 	ldr.w	r2, [r3, #-8]
 80109ec:	443d      	add	r5, r7
 80109ee:	4295      	cmp	r5, r2
 80109f0:	d803      	bhi.n	80109fa <_ZNSbIwSt11char_traitsIwESaIwEE6appendERKS2_+0x26>
 80109f2:	f853 3c04 	ldr.w	r3, [r3, #-4]
 80109f6:	2b00      	cmp	r3, #0
 80109f8:	dd03      	ble.n	8010a02 <_ZNSbIwSt11char_traitsIwESaIwEE6appendERKS2_+0x2e>
 80109fa:	4629      	mov	r1, r5
 80109fc:	4620      	mov	r0, r4
 80109fe:	f7ff ffca 	bl	8010996 <_ZNSbIwSt11char_traitsIwESaIwEE7reserveEj>
 8010a02:	6823      	ldr	r3, [r4, #0]
 8010a04:	6831      	ldr	r1, [r6, #0]
 8010a06:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 8010a0a:	463a      	mov	r2, r7
 8010a0c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8010a10:	f7ff fdb8 	bl	8010584 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj>
 8010a14:	6820      	ldr	r0, [r4, #0]
 8010a16:	4629      	mov	r1, r5
 8010a18:	380c      	subs	r0, #12
 8010a1a:	f7ff fe17 	bl	801064c <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj>
 8010a1e:	4620      	mov	r0, r4
 8010a20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08010a24 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj>:
 8010a24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a28:	4604      	mov	r4, r0
 8010a2a:	460d      	mov	r5, r1
 8010a2c:	4690      	mov	r8, r2
 8010a2e:	b332      	cbz	r2, 8010a7e <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj+0x5a>
 8010a30:	4b18      	ldr	r3, [pc, #96]	; (8010a94 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj+0x70>)
 8010a32:	2100      	movs	r1, #0
 8010a34:	f7ff fd8a 	bl	801054c <_ZNKSbIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc>
 8010a38:	6827      	ldr	r7, [r4, #0]
 8010a3a:	f857 6c0c 	ldr.w	r6, [r7, #-12]
 8010a3e:	f857 3c08 	ldr.w	r3, [r7, #-8]
 8010a42:	4446      	add	r6, r8
 8010a44:	429e      	cmp	r6, r3
 8010a46:	d803      	bhi.n	8010a50 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj+0x2c>
 8010a48:	f857 3c04 	ldr.w	r3, [r7, #-4]
 8010a4c:	2b00      	cmp	r3, #0
 8010a4e:	dd08      	ble.n	8010a62 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj+0x3e>
 8010a50:	4629      	mov	r1, r5
 8010a52:	4620      	mov	r0, r4
 8010a54:	f7ff fd88 	bl	8010568 <_ZNKSbIwSt11char_traitsIwESaIwEE11_M_disjunctEPKw>
 8010a58:	b1a0      	cbz	r0, 8010a84 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj+0x60>
 8010a5a:	4631      	mov	r1, r6
 8010a5c:	4620      	mov	r0, r4
 8010a5e:	f7ff ff9a 	bl	8010996 <_ZNSbIwSt11char_traitsIwESaIwEE7reserveEj>
 8010a62:	6823      	ldr	r3, [r4, #0]
 8010a64:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 8010a68:	4629      	mov	r1, r5
 8010a6a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8010a6e:	4642      	mov	r2, r8
 8010a70:	f7ff fd88 	bl	8010584 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj>
 8010a74:	6820      	ldr	r0, [r4, #0]
 8010a76:	4631      	mov	r1, r6
 8010a78:	380c      	subs	r0, #12
 8010a7a:	f7ff fde7 	bl	801064c <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj>
 8010a7e:	4620      	mov	r0, r4
 8010a80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010a84:	4631      	mov	r1, r6
 8010a86:	4620      	mov	r0, r4
 8010a88:	f7ff ff85 	bl	8010996 <_ZNSbIwSt11char_traitsIwESaIwEE7reserveEj>
 8010a8c:	6821      	ldr	r1, [r4, #0]
 8010a8e:	1bed      	subs	r5, r5, r7
 8010a90:	440d      	add	r5, r1
 8010a92:	e7e6      	b.n	8010a62 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj+0x3e>
 8010a94:	0802f684 	.word	0x0802f684

08010a98 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEjw>:
 8010a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010a9a:	4604      	mov	r4, r0
 8010a9c:	4617      	mov	r7, r2
 8010a9e:	460d      	mov	r5, r1
 8010aa0:	b311      	cbz	r1, 8010ae8 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEjw+0x50>
 8010aa2:	460a      	mov	r2, r1
 8010aa4:	4b11      	ldr	r3, [pc, #68]	; (8010aec <_ZNSbIwSt11char_traitsIwESaIwEE6appendEjw+0x54>)
 8010aa6:	2100      	movs	r1, #0
 8010aa8:	f7ff fd50 	bl	801054c <_ZNKSbIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc>
 8010aac:	6823      	ldr	r3, [r4, #0]
 8010aae:	f853 6c0c 	ldr.w	r6, [r3, #-12]
 8010ab2:	f853 2c08 	ldr.w	r2, [r3, #-8]
 8010ab6:	442e      	add	r6, r5
 8010ab8:	4296      	cmp	r6, r2
 8010aba:	d803      	bhi.n	8010ac4 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEjw+0x2c>
 8010abc:	f853 3c04 	ldr.w	r3, [r3, #-4]
 8010ac0:	2b00      	cmp	r3, #0
 8010ac2:	dd03      	ble.n	8010acc <_ZNSbIwSt11char_traitsIwESaIwEE6appendEjw+0x34>
 8010ac4:	4631      	mov	r1, r6
 8010ac6:	4620      	mov	r0, r4
 8010ac8:	f7ff ff65 	bl	8010996 <_ZNSbIwSt11char_traitsIwESaIwEE7reserveEj>
 8010acc:	6823      	ldr	r3, [r4, #0]
 8010ace:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 8010ad2:	4629      	mov	r1, r5
 8010ad4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8010ad8:	463a      	mov	r2, r7
 8010ada:	f7ff fd6b 	bl	80105b4 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_assignEPwjw>
 8010ade:	6820      	ldr	r0, [r4, #0]
 8010ae0:	4631      	mov	r1, r6
 8010ae2:	380c      	subs	r0, #12
 8010ae4:	f7ff fdb2 	bl	801064c <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj>
 8010ae8:	4620      	mov	r0, r4
 8010aea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010aec:	0802f684 	.word	0x0802f684

08010af0 <_ZNSbIwSt11char_traitsIwESaIwEE6resizeEjw>:
 8010af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010af2:	6803      	ldr	r3, [r0, #0]
 8010af4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
 8010af8:	4b0b      	ldr	r3, [pc, #44]	; (8010b28 <_ZNSbIwSt11char_traitsIwESaIwEE6resizeEjw+0x38>)
 8010afa:	460c      	mov	r4, r1
 8010afc:	4617      	mov	r7, r2
 8010afe:	460a      	mov	r2, r1
 8010b00:	4631      	mov	r1, r6
 8010b02:	4605      	mov	r5, r0
 8010b04:	f7ff fd22 	bl	801054c <_ZNKSbIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc>
 8010b08:	42a6      	cmp	r6, r4
 8010b0a:	d205      	bcs.n	8010b18 <_ZNSbIwSt11char_traitsIwESaIwEE6resizeEjw+0x28>
 8010b0c:	463a      	mov	r2, r7
 8010b0e:	1ba1      	subs	r1, r4, r6
 8010b10:	4628      	mov	r0, r5
 8010b12:	f7ff ffc1 	bl	8010a98 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEjw>
 8010b16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010b18:	d9fd      	bls.n	8010b16 <_ZNSbIwSt11char_traitsIwESaIwEE6resizeEjw+0x26>
 8010b1a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8010b1e:	4621      	mov	r1, r4
 8010b20:	4628      	mov	r0, r5
 8010b22:	f7ff fe93 	bl	801084c <_ZNSbIwSt11char_traitsIwESaIwEE5eraseEjj>
 8010b26:	e7f6      	b.n	8010b16 <_ZNSbIwSt11char_traitsIwESaIwEE6resizeEjw+0x26>
 8010b28:	0802f699 	.word	0x0802f699

08010b2c <_ZNSbIwSt11char_traitsIwESaIwEE6resizeEj>:
 8010b2c:	b508      	push	{r3, lr}
 8010b2e:	2200      	movs	r2, #0
 8010b30:	f7ff ffde 	bl	8010af0 <_ZNSbIwSt11char_traitsIwESaIwEE6resizeEjw>
 8010b34:	bd08      	pop	{r3, pc}

08010b36 <_ZNSbIwSt11char_traitsIwESaIwEE9push_backEw>:
 8010b36:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010b38:	6802      	ldr	r2, [r0, #0]
 8010b3a:	f852 3c0c 	ldr.w	r3, [r2, #-12]
 8010b3e:	460d      	mov	r5, r1
 8010b40:	1c59      	adds	r1, r3, #1
 8010b42:	f852 3c08 	ldr.w	r3, [r2, #-8]
 8010b46:	4299      	cmp	r1, r3
 8010b48:	4604      	mov	r4, r0
 8010b4a:	d803      	bhi.n	8010b54 <_ZNSbIwSt11char_traitsIwESaIwEE9push_backEw+0x1e>
 8010b4c:	f852 3c04 	ldr.w	r3, [r2, #-4]
 8010b50:	2b00      	cmp	r3, #0
 8010b52:	dd04      	ble.n	8010b5e <_ZNSbIwSt11char_traitsIwESaIwEE9push_backEw+0x28>
 8010b54:	4620      	mov	r0, r4
 8010b56:	9101      	str	r1, [sp, #4]
 8010b58:	f7ff ff1d 	bl	8010996 <_ZNSbIwSt11char_traitsIwESaIwEE7reserveEj>
 8010b5c:	9901      	ldr	r1, [sp, #4]
 8010b5e:	6820      	ldr	r0, [r4, #0]
 8010b60:	f850 3c0c 	ldr.w	r3, [r0, #-12]
 8010b64:	f840 5023 	str.w	r5, [r0, r3, lsl #2]
 8010b68:	380c      	subs	r0, #12
 8010b6a:	f7ff fd6f 	bl	801064c <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj>
 8010b6e:	b003      	add	sp, #12
 8010b70:	bd30      	pop	{r4, r5, pc}

08010b72 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep7_M_grabERKS1_S5_>:
 8010b72:	b508      	push	{r3, lr}
 8010b74:	6883      	ldr	r3, [r0, #8]
 8010b76:	2b00      	cmp	r3, #0
 8010b78:	db02      	blt.n	8010b80 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep7_M_grabERKS1_S5_+0xe>
 8010b7a:	f7ff fee9 	bl	8010950 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_refcopyEv>
 8010b7e:	bd08      	pop	{r3, pc}
 8010b80:	2200      	movs	r2, #0
 8010b82:	f7ff feef 	bl	8010964 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep8_M_cloneERKS1_j>
 8010b86:	e7fa      	b.n	8010b7e <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep7_M_grabERKS1_S5_+0xc>

08010b88 <_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS2_>:
 8010b88:	b513      	push	{r0, r1, r4, lr}
 8010b8a:	4604      	mov	r4, r0
 8010b8c:	6808      	ldr	r0, [r1, #0]
 8010b8e:	aa01      	add	r2, sp, #4
 8010b90:	4669      	mov	r1, sp
 8010b92:	380c      	subs	r0, #12
 8010b94:	f7ff ffed 	bl	8010b72 <_ZNSbIwSt11char_traitsIwESaIwEE4_Rep7_M_grabERKS1_S5_>
 8010b98:	6020      	str	r0, [r4, #0]
 8010b9a:	4620      	mov	r0, r4
 8010b9c:	b002      	add	sp, #8
 8010b9e:	bd10      	pop	{r4, pc}

08010ba0 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructIPKwEEPwT_S7_RKS1_St20forward_iterator_tag>:
 8010ba0:	4288      	cmp	r0, r1
 8010ba2:	b508      	push	{r3, lr}
 8010ba4:	d007      	beq.n	8010bb6 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructIPKwEEPwT_S7_RKS1_St20forward_iterator_tag+0x16>
 8010ba6:	b118      	cbz	r0, 8010bb0 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructIPKwEEPwT_S7_RKS1_St20forward_iterator_tag+0x10>
 8010ba8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010bac:	f7ff bdac 	b.w	8010708 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructIPKwEEPwT_S7_RKS1_St20forward_iterator_tag.part.0>
 8010bb0:	4802      	ldr	r0, [pc, #8]	; (8010bbc <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructIPKwEEPwT_S7_RKS1_St20forward_iterator_tag+0x1c>)
 8010bb2:	f006 fe3b 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 8010bb6:	4802      	ldr	r0, [pc, #8]	; (8010bc0 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructIPKwEEPwT_S7_RKS1_St20forward_iterator_tag+0x20>)
 8010bb8:	bd08      	pop	{r3, pc}
 8010bba:	bf00      	nop
 8010bbc:	0802f6ae 	.word	0x0802f6ae
 8010bc0:	20003c00 	.word	0x20003c00

08010bc4 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwjRKS1_>:
 8010bc4:	b510      	push	{r4, lr}
 8010bc6:	4604      	mov	r4, r0
 8010bc8:	4608      	mov	r0, r1
 8010bca:	4611      	mov	r1, r2
 8010bcc:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8010bd0:	461a      	mov	r2, r3
 8010bd2:	f04f 0300 	mov.w	r3, #0
 8010bd6:	f7ff ffe3 	bl	8010ba0 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructIPKwEEPwT_S7_RKS1_St20forward_iterator_tag>
 8010bda:	6020      	str	r0, [r4, #0]
 8010bdc:	4620      	mov	r0, r4
 8010bde:	bd10      	pop	{r4, pc}

08010be0 <_ZNSbIwSt11char_traitsIwESaIwEEC1IPKwEET_S6_RKS1_>:
 8010be0:	b510      	push	{r4, lr}
 8010be2:	4604      	mov	r4, r0
 8010be4:	4608      	mov	r0, r1
 8010be6:	4611      	mov	r1, r2
 8010be8:	461a      	mov	r2, r3
 8010bea:	f04f 0300 	mov.w	r3, #0
 8010bee:	f7ff ffd7 	bl	8010ba0 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructIPKwEEPwT_S7_RKS1_St20forward_iterator_tag>
 8010bf2:	6020      	str	r0, [r4, #0]
 8010bf4:	4620      	mov	r0, r4
 8010bf6:	bd10      	pop	{r4, pc}

08010bf8 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_>:
 8010bf8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010bfa:	4605      	mov	r5, r0
 8010bfc:	460c      	mov	r4, r1
 8010bfe:	b179      	cbz	r1, 8010c20 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_+0x28>
 8010c00:	4608      	mov	r0, r1
 8010c02:	9201      	str	r2, [sp, #4]
 8010c04:	f019 fc1e 	bl	802a444 <wcslen>
 8010c08:	9a01      	ldr	r2, [sp, #4]
 8010c0a:	eb04 0180 	add.w	r1, r4, r0, lsl #2
 8010c0e:	f04f 0300 	mov.w	r3, #0
 8010c12:	4620      	mov	r0, r4
 8010c14:	f7ff ffc4 	bl	8010ba0 <_ZNSbIwSt11char_traitsIwESaIwEE12_S_constructIPKwEEPwT_S7_RKS1_St20forward_iterator_tag>
 8010c18:	6028      	str	r0, [r5, #0]
 8010c1a:	4628      	mov	r0, r5
 8010c1c:	b003      	add	sp, #12
 8010c1e:	bd30      	pop	{r4, r5, pc}
 8010c20:	f06f 0103 	mvn.w	r1, #3
 8010c24:	e7f3      	b.n	8010c0e <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_+0x16>

08010c26 <_ZNKSt5ctypeIcE8do_widenEc>:
 8010c26:	4608      	mov	r0, r1
 8010c28:	4770      	bx	lr

08010c2a <_ZNKSt5ctypeIcE9do_narrowEcc>:
 8010c2a:	4608      	mov	r0, r1
 8010c2c:	4770      	bx	lr
	...

08010c30 <_ZNSt5ctypeIcED1Ev>:
 8010c30:	b510      	push	{r4, lr}
 8010c32:	4b08      	ldr	r3, [pc, #32]	; (8010c54 <_ZNSt5ctypeIcED1Ev+0x24>)
 8010c34:	4604      	mov	r4, r0
 8010c36:	f840 3b08 	str.w	r3, [r0], #8
 8010c3a:	f013 fdad 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 8010c3e:	7b23      	ldrb	r3, [r4, #12]
 8010c40:	b11b      	cbz	r3, 8010c4a <_ZNSt5ctypeIcED1Ev+0x1a>
 8010c42:	69a0      	ldr	r0, [r4, #24]
 8010c44:	b108      	cbz	r0, 8010c4a <_ZNSt5ctypeIcED1Ev+0x1a>
 8010c46:	f013 f943 	bl	8023ed0 <_ZdaPv>
 8010c4a:	4620      	mov	r0, r4
 8010c4c:	f7fb fb24 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8010c50:	4620      	mov	r0, r4
 8010c52:	bd10      	pop	{r4, pc}
 8010c54:	0802f73c 	.word	0x0802f73c

08010c58 <_ZNSt5ctypeIcED0Ev>:
 8010c58:	b510      	push	{r4, lr}
 8010c5a:	4604      	mov	r4, r0
 8010c5c:	f7ff ffe8 	bl	8010c30 <_ZNSt5ctypeIcED1Ev>
 8010c60:	4620      	mov	r0, r4
 8010c62:	f013 f933 	bl	8023ecc <_ZdlPv>
 8010c66:	4620      	mov	r0, r4
 8010c68:	bd10      	pop	{r4, pc}

08010c6a <_ZNKSt5ctypeIcE9do_narrowEPKcS2_cPc>:
 8010c6a:	428a      	cmp	r2, r1
 8010c6c:	b510      	push	{r4, lr}
 8010c6e:	4614      	mov	r4, r2
 8010c70:	d003      	beq.n	8010c7a <_ZNKSt5ctypeIcE9do_narrowEPKcS2_cPc+0x10>
 8010c72:	9802      	ldr	r0, [sp, #8]
 8010c74:	1a52      	subs	r2, r2, r1
 8010c76:	f015 f943 	bl	8025f00 <memcpy>
 8010c7a:	4620      	mov	r0, r4
 8010c7c:	bd10      	pop	{r4, pc}

08010c7e <_ZNKSt5ctypeIcE8do_widenEPKcS2_Pc>:
 8010c7e:	428a      	cmp	r2, r1
 8010c80:	b538      	push	{r3, r4, r5, lr}
 8010c82:	4618      	mov	r0, r3
 8010c84:	4614      	mov	r4, r2
 8010c86:	d002      	beq.n	8010c8e <_ZNKSt5ctypeIcE8do_widenEPKcS2_Pc+0x10>
 8010c88:	1a52      	subs	r2, r2, r1
 8010c8a:	f015 f939 	bl	8025f00 <memcpy>
 8010c8e:	4620      	mov	r0, r4
 8010c90:	bd38      	pop	{r3, r4, r5, pc}
	...

08010c94 <_ZNSt5ctypeIwED1Ev>:
 8010c94:	b510      	push	{r4, lr}
 8010c96:	4b06      	ldr	r3, [pc, #24]	; (8010cb0 <_ZNSt5ctypeIwED1Ev+0x1c>)
 8010c98:	4604      	mov	r4, r0
 8010c9a:	f840 3b08 	str.w	r3, [r0], #8
 8010c9e:	f013 fd7b 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 8010ca2:	4b04      	ldr	r3, [pc, #16]	; (8010cb4 <_ZNSt5ctypeIwED1Ev+0x20>)
 8010ca4:	6023      	str	r3, [r4, #0]
 8010ca6:	4620      	mov	r0, r4
 8010ca8:	f7fb faf6 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8010cac:	4620      	mov	r0, r4
 8010cae:	bd10      	pop	{r4, pc}
 8010cb0:	0802f76c 	.word	0x0802f76c
 8010cb4:	080310dc 	.word	0x080310dc

08010cb8 <_ZNSt5ctypeIwED0Ev>:
 8010cb8:	b510      	push	{r4, lr}
 8010cba:	4604      	mov	r4, r0
 8010cbc:	f7ff ffea 	bl	8010c94 <_ZNSt5ctypeIwED1Ev>
 8010cc0:	4620      	mov	r0, r4
 8010cc2:	f013 f903 	bl	8023ecc <_ZdlPv>
 8010cc6:	4620      	mov	r0, r4
 8010cc8:	bd10      	pop	{r4, pc}

08010cca <_ZNKSt5ctypeIcE13_M_widen_initEv>:
 8010cca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010cce:	b0c0      	sub	sp, #256	; 0x100
 8010cd0:	466b      	mov	r3, sp
 8010cd2:	4604      	mov	r4, r0
 8010cd4:	2500      	movs	r5, #0
 8010cd6:	461f      	mov	r7, r3
 8010cd8:	f803 5b01 	strb.w	r5, [r3], #1
 8010cdc:	3501      	adds	r5, #1
 8010cde:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8010ce2:	d1f9      	bne.n	8010cd8 <_ZNKSt5ctypeIcE13_M_widen_initEv+0xe>
 8010ce4:	4626      	mov	r6, r4
 8010ce6:	aa40      	add	r2, sp, #256	; 0x100
 8010ce8:	f856 3b1d 	ldr.w	r3, [r6], #29
 8010cec:	4639      	mov	r1, r7
 8010cee:	f8d3 801c 	ldr.w	r8, [r3, #28]
 8010cf2:	4620      	mov	r0, r4
 8010cf4:	4633      	mov	r3, r6
 8010cf6:	47c0      	blx	r8
 8010cf8:	2301      	movs	r3, #1
 8010cfa:	7723      	strb	r3, [r4, #28]
 8010cfc:	462a      	mov	r2, r5
 8010cfe:	4631      	mov	r1, r6
 8010d00:	4638      	mov	r0, r7
 8010d02:	f015 f8ed 	bl	8025ee0 <memcmp>
 8010d06:	b108      	cbz	r0, 8010d0c <_ZNKSt5ctypeIcE13_M_widen_initEv+0x42>
 8010d08:	2302      	movs	r3, #2
 8010d0a:	7723      	strb	r3, [r4, #28]
 8010d0c:	b040      	add	sp, #256	; 0x100
 8010d0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08010d14 <_ZNSt5ctypeIwEC1Ej>:
 8010d14:	3900      	subs	r1, #0
 8010d16:	bf18      	it	ne
 8010d18:	2101      	movne	r1, #1
 8010d1a:	4b07      	ldr	r3, [pc, #28]	; (8010d38 <_ZNSt5ctypeIwEC1Ej+0x24>)
 8010d1c:	b510      	push	{r4, lr}
 8010d1e:	6041      	str	r1, [r0, #4]
 8010d20:	6003      	str	r3, [r0, #0]
 8010d22:	4604      	mov	r4, r0
 8010d24:	f7fb fada 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8010d28:	2300      	movs	r3, #0
 8010d2a:	60a0      	str	r0, [r4, #8]
 8010d2c:	7323      	strb	r3, [r4, #12]
 8010d2e:	4620      	mov	r0, r4
 8010d30:	f000 f988 	bl	8011044 <_ZNSt5ctypeIwE19_M_initialize_ctypeEv>
 8010d34:	4620      	mov	r0, r4
 8010d36:	bd10      	pop	{r4, pc}
 8010d38:	0802f76c 	.word	0x0802f76c

08010d3c <_ZNSt5ctypeIcEC1EPKcbj>:
 8010d3c:	b538      	push	{r3, r4, r5, lr}
 8010d3e:	3b00      	subs	r3, #0
 8010d40:	bf18      	it	ne
 8010d42:	2301      	movne	r3, #1
 8010d44:	6043      	str	r3, [r0, #4]
 8010d46:	4b0f      	ldr	r3, [pc, #60]	; (8010d84 <_ZNSt5ctypeIcEC1EPKcbj+0x48>)
 8010d48:	6003      	str	r3, [r0, #0]
 8010d4a:	4b0f      	ldr	r3, [pc, #60]	; (8010d88 <_ZNSt5ctypeIcEC1EPKcbj+0x4c>)
 8010d4c:	2500      	movs	r5, #0
 8010d4e:	2900      	cmp	r1, #0
 8010d50:	4604      	mov	r4, r0
 8010d52:	bf04      	itt	eq
 8010d54:	462a      	moveq	r2, r5
 8010d56:	4619      	moveq	r1, r3
 8010d58:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8010d5c:	7302      	strb	r2, [r0, #12]
 8010d5e:	6181      	str	r1, [r0, #24]
 8010d60:	f44f 7280 	mov.w	r2, #256	; 0x100
 8010d64:	4629      	mov	r1, r5
 8010d66:	301d      	adds	r0, #29
 8010d68:	f015 f8f2 	bl	8025f50 <memset>
 8010d6c:	7725      	strb	r5, [r4, #28]
 8010d6e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8010d72:	4629      	mov	r1, r5
 8010d74:	f204 101d 	addw	r0, r4, #285	; 0x11d
 8010d78:	f015 f8ea 	bl	8025f50 <memset>
 8010d7c:	f884 521d 	strb.w	r5, [r4, #541]	; 0x21d
 8010d80:	4620      	mov	r0, r4
 8010d82:	bd38      	pop	{r3, r4, r5, pc}
 8010d84:	0802f73c 	.word	0x0802f73c
 8010d88:	08032018 	.word	0x08032018

08010d8c <_ZNKSt5ctypeIcE10do_toupperEc>:
 8010d8c:	6983      	ldr	r3, [r0, #24]
 8010d8e:	5c5b      	ldrb	r3, [r3, r1]
 8010d90:	079b      	lsls	r3, r3, #30
 8010d92:	bf44      	itt	mi
 8010d94:	3920      	submi	r1, #32
 8010d96:	b2c9      	uxtbmi	r1, r1
 8010d98:	4608      	mov	r0, r1
 8010d9a:	4770      	bx	lr

08010d9c <_ZNKSt5ctypeIcE10do_toupperEPcPKc>:
 8010d9c:	b570      	push	{r4, r5, r6, lr}
 8010d9e:	4606      	mov	r6, r0
 8010da0:	460c      	mov	r4, r1
 8010da2:	4615      	mov	r5, r2
 8010da4:	42ac      	cmp	r4, r5
 8010da6:	d207      	bcs.n	8010db8 <_ZNKSt5ctypeIcE10do_toupperEPcPKc+0x1c>
 8010da8:	6833      	ldr	r3, [r6, #0]
 8010daa:	7821      	ldrb	r1, [r4, #0]
 8010dac:	689b      	ldr	r3, [r3, #8]
 8010dae:	4630      	mov	r0, r6
 8010db0:	4798      	blx	r3
 8010db2:	f804 0b01 	strb.w	r0, [r4], #1
 8010db6:	e7f5      	b.n	8010da4 <_ZNKSt5ctypeIcE10do_toupperEPcPKc+0x8>
 8010db8:	4628      	mov	r0, r5
 8010dba:	bd70      	pop	{r4, r5, r6, pc}

08010dbc <_ZNKSt5ctypeIcE10do_tolowerEc>:
 8010dbc:	6983      	ldr	r3, [r0, #24]
 8010dbe:	5c5b      	ldrb	r3, [r3, r1]
 8010dc0:	07db      	lsls	r3, r3, #31
 8010dc2:	bf44      	itt	mi
 8010dc4:	3120      	addmi	r1, #32
 8010dc6:	b2c9      	uxtbmi	r1, r1
 8010dc8:	4608      	mov	r0, r1
 8010dca:	4770      	bx	lr

08010dcc <_ZNKSt5ctypeIcE10do_tolowerEPcPKc>:
 8010dcc:	b570      	push	{r4, r5, r6, lr}
 8010dce:	4606      	mov	r6, r0
 8010dd0:	460c      	mov	r4, r1
 8010dd2:	4615      	mov	r5, r2
 8010dd4:	42ac      	cmp	r4, r5
 8010dd6:	d207      	bcs.n	8010de8 <_ZNKSt5ctypeIcE10do_tolowerEPcPKc+0x1c>
 8010dd8:	6833      	ldr	r3, [r6, #0]
 8010dda:	7821      	ldrb	r1, [r4, #0]
 8010ddc:	691b      	ldr	r3, [r3, #16]
 8010dde:	4630      	mov	r0, r6
 8010de0:	4798      	blx	r3
 8010de2:	f804 0b01 	strb.w	r0, [r4], #1
 8010de6:	e7f5      	b.n	8010dd4 <_ZNKSt5ctypeIcE10do_tolowerEPcPKc+0x8>
 8010de8:	4628      	mov	r0, r5
 8010dea:	bd70      	pop	{r4, r5, r6, pc}

08010dec <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc>:
 8010dec:	2917      	cmp	r1, #23
 8010dee:	d811      	bhi.n	8010e14 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x28>
 8010df0:	b1b1      	cbz	r1, 8010e20 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x34>
 8010df2:	1e4b      	subs	r3, r1, #1
 8010df4:	2b16      	cmp	r3, #22
 8010df6:	d813      	bhi.n	8010e20 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x34>
 8010df8:	e8df f003 	tbb	[pc, r3]
 8010dfc:	22201e1c 	.word	0x22201e1c
 8010e00:	17261212 	.word	0x17261212
 8010e04:	12121212 	.word	0x12121212
 8010e08:	24121212 	.word	0x24121212
 8010e0c:	12121212 	.word	0x12121212
 8010e10:	1212      	.short	0x1212
 8010e12:	28          	.byte	0x28
 8010e13:	00          	.byte	0x00
 8010e14:	2944      	cmp	r1, #68	; 0x44
 8010e16:	d006      	beq.n	8010e26 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x3a>
 8010e18:	2997      	cmp	r1, #151	; 0x97
 8010e1a:	d01c      	beq.n	8010e56 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x6a>
 8010e1c:	2920      	cmp	r1, #32
 8010e1e:	d007      	beq.n	8010e30 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x44>
 8010e20:	f011 0f44 	tst.w	r1, #68	; 0x44
 8010e24:	d014      	beq.n	8010e50 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x64>
 8010e26:	480d      	ldr	r0, [pc, #52]	; (8010e5c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x70>)
 8010e28:	e000      	b.n	8010e2c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x40>
 8010e2a:	480d      	ldr	r0, [pc, #52]	; (8010e60 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x74>)
 8010e2c:	f019 bc7c 	b.w	802a728 <wctype>
 8010e30:	480c      	ldr	r0, [pc, #48]	; (8010e64 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x78>)
 8010e32:	e7fb      	b.n	8010e2c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x40>
 8010e34:	480c      	ldr	r0, [pc, #48]	; (8010e68 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x7c>)
 8010e36:	e7f9      	b.n	8010e2c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x40>
 8010e38:	480c      	ldr	r0, [pc, #48]	; (8010e6c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x80>)
 8010e3a:	e7f7      	b.n	8010e2c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x40>
 8010e3c:	480c      	ldr	r0, [pc, #48]	; (8010e70 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x84>)
 8010e3e:	e7f5      	b.n	8010e2c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x40>
 8010e40:	480c      	ldr	r0, [pc, #48]	; (8010e74 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x88>)
 8010e42:	e7f3      	b.n	8010e2c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x40>
 8010e44:	480c      	ldr	r0, [pc, #48]	; (8010e78 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x8c>)
 8010e46:	e7f1      	b.n	8010e2c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x40>
 8010e48:	480c      	ldr	r0, [pc, #48]	; (8010e7c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x90>)
 8010e4a:	e7ef      	b.n	8010e2c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x40>
 8010e4c:	480c      	ldr	r0, [pc, #48]	; (8010e80 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x94>)
 8010e4e:	e7ed      	b.n	8010e2c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x40>
 8010e50:	f011 0097 	ands.w	r0, r1, #151	; 0x97
 8010e54:	d001      	beq.n	8010e5a <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x6e>
 8010e56:	480b      	ldr	r0, [pc, #44]	; (8010e84 <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x98>)
 8010e58:	e7e8      	b.n	8010e2c <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc+0x40>
 8010e5a:	4770      	bx	lr
 8010e5c:	0802f7c8 	.word	0x0802f7c8
 8010e60:	080322ad 	.word	0x080322ad
 8010e64:	0802f7aa 	.word	0x0802f7aa
 8010e68:	0802f7b0 	.word	0x0802f7b0
 8010e6c:	0802f7b6 	.word	0x0802f7b6
 8010e70:	0802f7bc 	.word	0x0802f7bc
 8010e74:	0802f7c9 	.word	0x0802f7c9
 8010e78:	0802f7c2 	.word	0x0802f7c2
 8010e7c:	0802f7cf 	.word	0x0802f7cf
 8010e80:	0802f7d5 	.word	0x0802f7d5
 8010e84:	0802f7a4 	.word	0x0802f7a4

08010e88 <_ZNKSt5ctypeIwE10do_toupperEw>:
 8010e88:	4608      	mov	r0, r1
 8010e8a:	f018 ba07 	b.w	802929c <towupper>

08010e8e <_ZNKSt5ctypeIwE10do_toupperEPwPKw>:
 8010e8e:	b538      	push	{r3, r4, r5, lr}
 8010e90:	460c      	mov	r4, r1
 8010e92:	4615      	mov	r5, r2
 8010e94:	42ac      	cmp	r4, r5
 8010e96:	d205      	bcs.n	8010ea4 <_ZNKSt5ctypeIwE10do_toupperEPwPKw+0x16>
 8010e98:	6820      	ldr	r0, [r4, #0]
 8010e9a:	f018 f9ff 	bl	802929c <towupper>
 8010e9e:	f844 0b04 	str.w	r0, [r4], #4
 8010ea2:	e7f7      	b.n	8010e94 <_ZNKSt5ctypeIwE10do_toupperEPwPKw+0x6>
 8010ea4:	4628      	mov	r0, r5
 8010ea6:	bd38      	pop	{r3, r4, r5, pc}

08010ea8 <_ZNKSt5ctypeIwE10do_tolowerEw>:
 8010ea8:	4608      	mov	r0, r1
 8010eaa:	f018 b9eb 	b.w	8029284 <towlower>

08010eae <_ZNKSt5ctypeIwE10do_tolowerEPwPKw>:
 8010eae:	b538      	push	{r3, r4, r5, lr}
 8010eb0:	460c      	mov	r4, r1
 8010eb2:	4615      	mov	r5, r2
 8010eb4:	42ac      	cmp	r4, r5
 8010eb6:	d205      	bcs.n	8010ec4 <_ZNKSt5ctypeIwE10do_tolowerEPwPKw+0x16>
 8010eb8:	6820      	ldr	r0, [r4, #0]
 8010eba:	f018 f9e3 	bl	8029284 <towlower>
 8010ebe:	f844 0b04 	str.w	r0, [r4], #4
 8010ec2:	e7f7      	b.n	8010eb4 <_ZNKSt5ctypeIwE10do_tolowerEPwPKw+0x6>
 8010ec4:	4628      	mov	r0, r5
 8010ec6:	bd38      	pop	{r3, r4, r5, pc}

08010ec8 <_ZNKSt5ctypeIwE5do_isEcw>:
 8010ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ecc:	4688      	mov	r8, r1
 8010ece:	4615      	mov	r5, r2
 8010ed0:	f500 6792 	add.w	r7, r0, #1168	; 0x490
 8010ed4:	f500 6694 	add.w	r6, r0, #1184	; 0x4a0
 8010ed8:	f500 6493 	add.w	r4, r0, #1176	; 0x498
 8010edc:	f817 3b01 	ldrb.w	r3, [r7], #1
 8010ee0:	ea13 0f08 	tst.w	r3, r8
 8010ee4:	d105      	bne.n	8010ef2 <_ZNKSt5ctypeIwE5do_isEcw+0x2a>
 8010ee6:	42a7      	cmp	r7, r4
 8010ee8:	f106 0604 	add.w	r6, r6, #4
 8010eec:	d1f6      	bne.n	8010edc <_ZNKSt5ctypeIwE5do_isEcw+0x14>
 8010eee:	2000      	movs	r0, #0
 8010ef0:	e006      	b.n	8010f00 <_ZNKSt5ctypeIwE5do_isEcw+0x38>
 8010ef2:	6831      	ldr	r1, [r6, #0]
 8010ef4:	4628      	mov	r0, r5
 8010ef6:	f014 fe79 	bl	8025bec <iswctype>
 8010efa:	2800      	cmp	r0, #0
 8010efc:	d0f3      	beq.n	8010ee6 <_ZNKSt5ctypeIwE5do_isEcw+0x1e>
 8010efe:	2001      	movs	r0, #1
 8010f00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010f04 <_ZNKSt5ctypeIwE5do_isEPKwS2_Pc>:
 8010f04:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f08:	4605      	mov	r5, r0
 8010f0a:	460c      	mov	r4, r1
 8010f0c:	4616      	mov	r6, r2
 8010f0e:	461f      	mov	r7, r3
 8010f10:	f500 6b98 	add.w	fp, r0, #1216	; 0x4c0
 8010f14:	42b4      	cmp	r4, r6
 8010f16:	d217      	bcs.n	8010f48 <_ZNKSt5ctypeIwE5do_isEPKwS2_Pc+0x44>
 8010f18:	f505 6994 	add.w	r9, r5, #1184	; 0x4a0
 8010f1c:	f505 6a92 	add.w	sl, r5, #1168	; 0x490
 8010f20:	f04f 0800 	mov.w	r8, #0
 8010f24:	f859 1b04 	ldr.w	r1, [r9], #4
 8010f28:	6820      	ldr	r0, [r4, #0]
 8010f2a:	f014 fe5f 	bl	8025bec <iswctype>
 8010f2e:	b118      	cbz	r0, 8010f38 <_ZNKSt5ctypeIwE5do_isEPKwS2_Pc+0x34>
 8010f30:	f89a 3000 	ldrb.w	r3, [sl]
 8010f34:	ea48 0803 	orr.w	r8, r8, r3
 8010f38:	45d9      	cmp	r9, fp
 8010f3a:	f10a 0a01 	add.w	sl, sl, #1
 8010f3e:	d1f1      	bne.n	8010f24 <_ZNKSt5ctypeIwE5do_isEPKwS2_Pc+0x20>
 8010f40:	f807 8b01 	strb.w	r8, [r7], #1
 8010f44:	3404      	adds	r4, #4
 8010f46:	e7e5      	b.n	8010f14 <_ZNKSt5ctypeIwE5do_isEPKwS2_Pc+0x10>
 8010f48:	4630      	mov	r0, r6
 8010f4a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010f4e <_ZNKSt5ctypeIwE10do_scan_isEcPKwS2_>:
 8010f4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010f52:	4605      	mov	r5, r0
 8010f54:	4688      	mov	r8, r1
 8010f56:	461e      	mov	r6, r3
 8010f58:	4614      	mov	r4, r2
 8010f5a:	42b4      	cmp	r4, r6
 8010f5c:	4627      	mov	r7, r4
 8010f5e:	d208      	bcs.n	8010f72 <_ZNKSt5ctypeIwE10do_scan_isEcPKwS2_+0x24>
 8010f60:	682b      	ldr	r3, [r5, #0]
 8010f62:	683a      	ldr	r2, [r7, #0]
 8010f64:	689b      	ldr	r3, [r3, #8]
 8010f66:	4641      	mov	r1, r8
 8010f68:	4628      	mov	r0, r5
 8010f6a:	3404      	adds	r4, #4
 8010f6c:	4798      	blx	r3
 8010f6e:	2800      	cmp	r0, #0
 8010f70:	d0f3      	beq.n	8010f5a <_ZNKSt5ctypeIwE10do_scan_isEcPKwS2_+0xc>
 8010f72:	4638      	mov	r0, r7
 8010f74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010f78 <_ZNKSt5ctypeIwE11do_scan_notEcPKwS2_>:
 8010f78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010f7c:	4605      	mov	r5, r0
 8010f7e:	4688      	mov	r8, r1
 8010f80:	461e      	mov	r6, r3
 8010f82:	4614      	mov	r4, r2
 8010f84:	42b4      	cmp	r4, r6
 8010f86:	4627      	mov	r7, r4
 8010f88:	d208      	bcs.n	8010f9c <_ZNKSt5ctypeIwE11do_scan_notEcPKwS2_+0x24>
 8010f8a:	682b      	ldr	r3, [r5, #0]
 8010f8c:	683a      	ldr	r2, [r7, #0]
 8010f8e:	689b      	ldr	r3, [r3, #8]
 8010f90:	4641      	mov	r1, r8
 8010f92:	4628      	mov	r0, r5
 8010f94:	3404      	adds	r4, #4
 8010f96:	4798      	blx	r3
 8010f98:	2800      	cmp	r0, #0
 8010f9a:	d1f3      	bne.n	8010f84 <_ZNKSt5ctypeIwE11do_scan_notEcPKwS2_+0xc>
 8010f9c:	4638      	mov	r0, r7
 8010f9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010fa2 <_ZNKSt5ctypeIwE8do_widenEc>:
 8010fa2:	3124      	adds	r1, #36	; 0x24
 8010fa4:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 8010fa8:	4770      	bx	lr

08010faa <_ZNKSt5ctypeIwE8do_widenEPKcS2_Pw>:
 8010faa:	b510      	push	{r4, lr}
 8010fac:	428a      	cmp	r2, r1
 8010fae:	460c      	mov	r4, r1
 8010fb0:	d907      	bls.n	8010fc2 <_ZNKSt5ctypeIwE8do_widenEPKcS2_Pw+0x18>
 8010fb2:	7824      	ldrb	r4, [r4, #0]
 8010fb4:	3424      	adds	r4, #36	; 0x24
 8010fb6:	3101      	adds	r1, #1
 8010fb8:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 8010fbc:	f843 4b04 	str.w	r4, [r3], #4
 8010fc0:	e7f4      	b.n	8010fac <_ZNKSt5ctypeIwE8do_widenEPKcS2_Pw+0x2>
 8010fc2:	4610      	mov	r0, r2
 8010fc4:	bd10      	pop	{r4, pc}

08010fc6 <_ZNKSt5ctypeIwE9do_narrowEwc>:
 8010fc6:	297f      	cmp	r1, #127	; 0x7f
 8010fc8:	b510      	push	{r4, lr}
 8010fca:	4603      	mov	r3, r0
 8010fcc:	4614      	mov	r4, r2
 8010fce:	4608      	mov	r0, r1
 8010fd0:	d805      	bhi.n	8010fde <_ZNKSt5ctypeIwE9do_narrowEwc+0x18>
 8010fd2:	7b1a      	ldrb	r2, [r3, #12]
 8010fd4:	b11a      	cbz	r2, 8010fde <_ZNKSt5ctypeIwE9do_narrowEwc+0x18>
 8010fd6:	1859      	adds	r1, r3, r1
 8010fd8:	7b4c      	ldrb	r4, [r1, #13]
 8010fda:	4620      	mov	r0, r4
 8010fdc:	bd10      	pop	{r4, pc}
 8010fde:	f019 fac7 	bl	802a570 <wctob>
 8010fe2:	1c43      	adds	r3, r0, #1
 8010fe4:	bf18      	it	ne
 8010fe6:	b2c4      	uxtbne	r4, r0
 8010fe8:	e7f7      	b.n	8010fda <_ZNKSt5ctypeIwE9do_narrowEwc+0x14>

08010fea <_ZNKSt5ctypeIwE9do_narrowEPKwS2_cPc>:
 8010fea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010fee:	461d      	mov	r5, r3
 8010ff0:	7b03      	ldrb	r3, [r0, #12]
 8010ff2:	9e06      	ldr	r6, [sp, #24]
 8010ff4:	4680      	mov	r8, r0
 8010ff6:	460c      	mov	r4, r1
 8010ff8:	4617      	mov	r7, r2
 8010ffa:	b193      	cbz	r3, 8011022 <_ZNKSt5ctypeIwE9do_narrowEPKwS2_cPc+0x38>
 8010ffc:	42a7      	cmp	r7, r4
 8010ffe:	d91e      	bls.n	801103e <_ZNKSt5ctypeIwE9do_narrowEPKwS2_cPc+0x54>
 8011000:	f854 0b04 	ldr.w	r0, [r4], #4
 8011004:	287f      	cmp	r0, #127	; 0x7f
 8011006:	d804      	bhi.n	8011012 <_ZNKSt5ctypeIwE9do_narrowEPKwS2_cPc+0x28>
 8011008:	4440      	add	r0, r8
 801100a:	7b43      	ldrb	r3, [r0, #13]
 801100c:	7033      	strb	r3, [r6, #0]
 801100e:	3601      	adds	r6, #1
 8011010:	e7f4      	b.n	8010ffc <_ZNKSt5ctypeIwE9do_narrowEPKwS2_cPc+0x12>
 8011012:	f019 faad 	bl	802a570 <wctob>
 8011016:	1c42      	adds	r2, r0, #1
 8011018:	bf14      	ite	ne
 801101a:	b2c1      	uxtbne	r1, r0
 801101c:	4629      	moveq	r1, r5
 801101e:	7031      	strb	r1, [r6, #0]
 8011020:	e7f5      	b.n	801100e <_ZNKSt5ctypeIwE9do_narrowEPKwS2_cPc+0x24>
 8011022:	42a7      	cmp	r7, r4
 8011024:	4623      	mov	r3, r4
 8011026:	d90a      	bls.n	801103e <_ZNKSt5ctypeIwE9do_narrowEPKwS2_cPc+0x54>
 8011028:	6818      	ldr	r0, [r3, #0]
 801102a:	f019 faa1 	bl	802a570 <wctob>
 801102e:	1c43      	adds	r3, r0, #1
 8011030:	bf14      	ite	ne
 8011032:	b2c1      	uxtbne	r1, r0
 8011034:	4629      	moveq	r1, r5
 8011036:	f806 1b01 	strb.w	r1, [r6], #1
 801103a:	3404      	adds	r4, #4
 801103c:	e7f1      	b.n	8011022 <_ZNKSt5ctypeIwE9do_narrowEPKwS2_cPc+0x38>
 801103e:	4638      	mov	r0, r7
 8011040:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011044 <_ZNSt5ctypeIwE19_M_initialize_ctypeEv>:
 8011044:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011048:	4604      	mov	r4, r0
 801104a:	f100 060d 	add.w	r6, r0, #13
 801104e:	2500      	movs	r5, #0
 8011050:	4628      	mov	r0, r5
 8011052:	f019 fa8d 	bl	802a570 <wctob>
 8011056:	1c43      	adds	r3, r0, #1
 8011058:	d028      	beq.n	80110ac <_ZNSt5ctypeIwE19_M_initialize_ctypeEv+0x68>
 801105a:	3501      	adds	r5, #1
 801105c:	2d80      	cmp	r5, #128	; 0x80
 801105e:	f806 0b01 	strb.w	r0, [r6], #1
 8011062:	d1f5      	bne.n	8011050 <_ZNSt5ctypeIwE19_M_initialize_ctypeEv+0xc>
 8011064:	2301      	movs	r3, #1
 8011066:	7323      	strb	r3, [r4, #12]
 8011068:	f104 0690 	add.w	r6, r4, #144	; 0x90
 801106c:	2500      	movs	r5, #0
 801106e:	4628      	mov	r0, r5
 8011070:	f014 f8e4 	bl	802523c <btowc>
 8011074:	3501      	adds	r5, #1
 8011076:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 801107a:	f846 0b04 	str.w	r0, [r6], #4
 801107e:	d1f6      	bne.n	801106e <_ZNSt5ctypeIwE19_M_initialize_ctypeEv+0x2a>
 8011080:	f504 6792 	add.w	r7, r4, #1168	; 0x490
 8011084:	f504 6694 	add.w	r6, r4, #1184	; 0x4a0
 8011088:	2500      	movs	r5, #0
 801108a:	f04f 0801 	mov.w	r8, #1
 801108e:	fa08 f105 	lsl.w	r1, r8, r5
 8011092:	b2c9      	uxtb	r1, r1
 8011094:	f807 1b01 	strb.w	r1, [r7], #1
 8011098:	4620      	mov	r0, r4
 801109a:	f7ff fea7 	bl	8010dec <_ZNKSt5ctypeIwE19_M_convert_to_wmaskEc>
 801109e:	3501      	adds	r5, #1
 80110a0:	2d08      	cmp	r5, #8
 80110a2:	f846 0b04 	str.w	r0, [r6], #4
 80110a6:	d1f2      	bne.n	801108e <_ZNSt5ctypeIwE19_M_initialize_ctypeEv+0x4a>
 80110a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80110ac:	2300      	movs	r3, #0
 80110ae:	e7da      	b.n	8011066 <_ZNSt5ctypeIwE19_M_initialize_ctypeEv+0x22>

080110b0 <_ZNKSt7__cxx1110moneypunctIcLb0EE16do_decimal_pointEv>:
 80110b0:	6883      	ldr	r3, [r0, #8]
 80110b2:	7c58      	ldrb	r0, [r3, #17]
 80110b4:	4770      	bx	lr

080110b6 <_ZNKSt7__cxx1110moneypunctIcLb0EE16do_thousands_sepEv>:
 80110b6:	6883      	ldr	r3, [r0, #8]
 80110b8:	7c98      	ldrb	r0, [r3, #18]
 80110ba:	4770      	bx	lr

080110bc <_ZNKSt7__cxx1110moneypunctIcLb0EE14do_frac_digitsEv>:
 80110bc:	6883      	ldr	r3, [r0, #8]
 80110be:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80110c0:	4770      	bx	lr

080110c2 <_ZNKSt7__cxx1110moneypunctIcLb0EE13do_pos_formatEv>:
 80110c2:	6883      	ldr	r3, [r0, #8]
 80110c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80110c6:	2000      	movs	r0, #0
 80110c8:	b2da      	uxtb	r2, r3
 80110ca:	f362 0007 	bfi	r0, r2, #0, #8
 80110ce:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80110d2:	f362 200f 	bfi	r0, r2, #8, #8
 80110d6:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80110da:	f362 4017 	bfi	r0, r2, #16, #8
 80110de:	0e1b      	lsrs	r3, r3, #24
 80110e0:	b082      	sub	sp, #8
 80110e2:	f363 601f 	bfi	r0, r3, #24, #8
 80110e6:	b002      	add	sp, #8
 80110e8:	4770      	bx	lr

080110ea <_ZNKSt7__cxx1110moneypunctIcLb0EE13do_neg_formatEv>:
 80110ea:	6883      	ldr	r3, [r0, #8]
 80110ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80110ee:	2000      	movs	r0, #0
 80110f0:	b2da      	uxtb	r2, r3
 80110f2:	f362 0007 	bfi	r0, r2, #0, #8
 80110f6:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80110fa:	f362 200f 	bfi	r0, r2, #8, #8
 80110fe:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8011102:	f362 4017 	bfi	r0, r2, #16, #8
 8011106:	0e1b      	lsrs	r3, r3, #24
 8011108:	b082      	sub	sp, #8
 801110a:	f363 601f 	bfi	r0, r3, #24, #8
 801110e:	b002      	add	sp, #8
 8011110:	4770      	bx	lr

08011112 <_ZNKSt7__cxx1110moneypunctIcLb1EE16do_decimal_pointEv>:
 8011112:	6883      	ldr	r3, [r0, #8]
 8011114:	7c58      	ldrb	r0, [r3, #17]
 8011116:	4770      	bx	lr

08011118 <_ZNKSt7__cxx1110moneypunctIcLb1EE16do_thousands_sepEv>:
 8011118:	6883      	ldr	r3, [r0, #8]
 801111a:	7c98      	ldrb	r0, [r3, #18]
 801111c:	4770      	bx	lr

0801111e <_ZNKSt7__cxx1110moneypunctIcLb1EE14do_frac_digitsEv>:
 801111e:	6883      	ldr	r3, [r0, #8]
 8011120:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8011122:	4770      	bx	lr

08011124 <_ZNKSt7__cxx1110moneypunctIcLb1EE13do_pos_formatEv>:
 8011124:	6883      	ldr	r3, [r0, #8]
 8011126:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011128:	2000      	movs	r0, #0
 801112a:	b2da      	uxtb	r2, r3
 801112c:	f362 0007 	bfi	r0, r2, #0, #8
 8011130:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8011134:	f362 200f 	bfi	r0, r2, #8, #8
 8011138:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801113c:	f362 4017 	bfi	r0, r2, #16, #8
 8011140:	0e1b      	lsrs	r3, r3, #24
 8011142:	b082      	sub	sp, #8
 8011144:	f363 601f 	bfi	r0, r3, #24, #8
 8011148:	b002      	add	sp, #8
 801114a:	4770      	bx	lr

0801114c <_ZNKSt7__cxx1110moneypunctIcLb1EE13do_neg_formatEv>:
 801114c:	6883      	ldr	r3, [r0, #8]
 801114e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011150:	2000      	movs	r0, #0
 8011152:	b2da      	uxtb	r2, r3
 8011154:	f362 0007 	bfi	r0, r2, #0, #8
 8011158:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801115c:	f362 200f 	bfi	r0, r2, #8, #8
 8011160:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8011164:	f362 4017 	bfi	r0, r2, #16, #8
 8011168:	0e1b      	lsrs	r3, r3, #24
 801116a:	b082      	sub	sp, #8
 801116c:	f363 601f 	bfi	r0, r3, #24, #8
 8011170:	b002      	add	sp, #8
 8011172:	4770      	bx	lr

08011174 <_ZNKSt7__cxx118numpunctIcE16do_decimal_pointEv>:
 8011174:	6883      	ldr	r3, [r0, #8]
 8011176:	f893 0024 	ldrb.w	r0, [r3, #36]	; 0x24
 801117a:	4770      	bx	lr

0801117c <_ZNKSt7__cxx118numpunctIcE16do_thousands_sepEv>:
 801117c:	6883      	ldr	r3, [r0, #8]
 801117e:	f893 0025 	ldrb.w	r0, [r3, #37]	; 0x25
 8011182:	4770      	bx	lr

08011184 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE13do_date_orderEv>:
 8011184:	2000      	movs	r0, #0
 8011186:	4770      	bx	lr

08011188 <_ZNKSt7__cxx118messagesIcE7do_openERKNS_12basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale>:
 8011188:	2000      	movs	r0, #0
 801118a:	4770      	bx	lr

0801118c <_ZNKSt7__cxx118messagesIcE8do_closeEi>:
 801118c:	4770      	bx	lr

0801118e <_ZNKSt7__cxx117collateIcE7do_hashEPKcS3_>:
 801118e:	2000      	movs	r0, #0
 8011190:	4291      	cmp	r1, r2
 8011192:	d204      	bcs.n	801119e <_ZNKSt7__cxx117collateIcE7do_hashEPKcS3_+0x10>
 8011194:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011198:	eb03 6070 	add.w	r0, r3, r0, ror #25
 801119c:	e7f8      	b.n	8011190 <_ZNKSt7__cxx117collateIcE7do_hashEPKcS3_+0x2>
 801119e:	4770      	bx	lr

080111a0 <_ZNKSt7__cxx1110moneypunctIcLb0EE11do_groupingEv>:
 80111a0:	b513      	push	{r0, r1, r4, lr}
 80111a2:	688b      	ldr	r3, [r1, #8]
 80111a4:	aa01      	add	r2, sp, #4
 80111a6:	6899      	ldr	r1, [r3, #8]
 80111a8:	4604      	mov	r4, r0
 80111aa:	f00c ff09 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80111ae:	4620      	mov	r0, r4
 80111b0:	b002      	add	sp, #8
 80111b2:	bd10      	pop	{r4, pc}

080111b4 <_ZNKSt7__cxx1110moneypunctIcLb0EE14do_curr_symbolEv>:
 80111b4:	b513      	push	{r0, r1, r4, lr}
 80111b6:	688b      	ldr	r3, [r1, #8]
 80111b8:	aa01      	add	r2, sp, #4
 80111ba:	6959      	ldr	r1, [r3, #20]
 80111bc:	4604      	mov	r4, r0
 80111be:	f00c feff 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80111c2:	4620      	mov	r0, r4
 80111c4:	b002      	add	sp, #8
 80111c6:	bd10      	pop	{r4, pc}

080111c8 <_ZNKSt7__cxx1110moneypunctIcLb0EE16do_positive_signEv>:
 80111c8:	b513      	push	{r0, r1, r4, lr}
 80111ca:	688b      	ldr	r3, [r1, #8]
 80111cc:	aa01      	add	r2, sp, #4
 80111ce:	69d9      	ldr	r1, [r3, #28]
 80111d0:	4604      	mov	r4, r0
 80111d2:	f00c fef5 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80111d6:	4620      	mov	r0, r4
 80111d8:	b002      	add	sp, #8
 80111da:	bd10      	pop	{r4, pc}

080111dc <_ZNKSt7__cxx1110moneypunctIcLb0EE16do_negative_signEv>:
 80111dc:	b513      	push	{r0, r1, r4, lr}
 80111de:	688b      	ldr	r3, [r1, #8]
 80111e0:	aa01      	add	r2, sp, #4
 80111e2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80111e4:	4604      	mov	r4, r0
 80111e6:	f00c feeb 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80111ea:	4620      	mov	r0, r4
 80111ec:	b002      	add	sp, #8
 80111ee:	bd10      	pop	{r4, pc}

080111f0 <_ZNKSt7__cxx1110moneypunctIcLb1EE11do_groupingEv>:
 80111f0:	b513      	push	{r0, r1, r4, lr}
 80111f2:	688b      	ldr	r3, [r1, #8]
 80111f4:	aa01      	add	r2, sp, #4
 80111f6:	6899      	ldr	r1, [r3, #8]
 80111f8:	4604      	mov	r4, r0
 80111fa:	f00c fee1 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80111fe:	4620      	mov	r0, r4
 8011200:	b002      	add	sp, #8
 8011202:	bd10      	pop	{r4, pc}

08011204 <_ZNKSt7__cxx1110moneypunctIcLb1EE14do_curr_symbolEv>:
 8011204:	b513      	push	{r0, r1, r4, lr}
 8011206:	688b      	ldr	r3, [r1, #8]
 8011208:	aa01      	add	r2, sp, #4
 801120a:	6959      	ldr	r1, [r3, #20]
 801120c:	4604      	mov	r4, r0
 801120e:	f00c fed7 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8011212:	4620      	mov	r0, r4
 8011214:	b002      	add	sp, #8
 8011216:	bd10      	pop	{r4, pc}

08011218 <_ZNKSt7__cxx1110moneypunctIcLb1EE16do_positive_signEv>:
 8011218:	b513      	push	{r0, r1, r4, lr}
 801121a:	688b      	ldr	r3, [r1, #8]
 801121c:	aa01      	add	r2, sp, #4
 801121e:	69d9      	ldr	r1, [r3, #28]
 8011220:	4604      	mov	r4, r0
 8011222:	f00c fecd 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8011226:	4620      	mov	r0, r4
 8011228:	b002      	add	sp, #8
 801122a:	bd10      	pop	{r4, pc}

0801122c <_ZNKSt7__cxx1110moneypunctIcLb1EE16do_negative_signEv>:
 801122c:	b513      	push	{r0, r1, r4, lr}
 801122e:	688b      	ldr	r3, [r1, #8]
 8011230:	aa01      	add	r2, sp, #4
 8011232:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8011234:	4604      	mov	r4, r0
 8011236:	f00c fec3 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 801123a:	4620      	mov	r0, r4
 801123c:	b002      	add	sp, #8
 801123e:	bd10      	pop	{r4, pc}

08011240 <_ZNKSt7__cxx118numpunctIcE11do_groupingEv>:
 8011240:	b513      	push	{r0, r1, r4, lr}
 8011242:	688b      	ldr	r3, [r1, #8]
 8011244:	aa01      	add	r2, sp, #4
 8011246:	6899      	ldr	r1, [r3, #8]
 8011248:	4604      	mov	r4, r0
 801124a:	f00c feb9 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 801124e:	4620      	mov	r0, r4
 8011250:	b002      	add	sp, #8
 8011252:	bd10      	pop	{r4, pc}

08011254 <_ZNKSt7__cxx118numpunctIcE11do_truenameEv>:
 8011254:	b513      	push	{r0, r1, r4, lr}
 8011256:	688b      	ldr	r3, [r1, #8]
 8011258:	aa01      	add	r2, sp, #4
 801125a:	6959      	ldr	r1, [r3, #20]
 801125c:	4604      	mov	r4, r0
 801125e:	f00c feaf 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8011262:	4620      	mov	r0, r4
 8011264:	b002      	add	sp, #8
 8011266:	bd10      	pop	{r4, pc}

08011268 <_ZNKSt7__cxx118numpunctIcE12do_falsenameEv>:
 8011268:	b513      	push	{r0, r1, r4, lr}
 801126a:	688b      	ldr	r3, [r1, #8]
 801126c:	aa01      	add	r2, sp, #4
 801126e:	69d9      	ldr	r1, [r3, #28]
 8011270:	4604      	mov	r4, r0
 8011272:	f00c fea5 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8011276:	4620      	mov	r0, r4
 8011278:	b002      	add	sp, #8
 801127a:	bd10      	pop	{r4, pc}

0801127c <_ZNSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>:
 801127c:	b510      	push	{r4, lr}
 801127e:	4b03      	ldr	r3, [pc, #12]	; (801128c <_ZNSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev+0x10>)
 8011280:	6003      	str	r3, [r0, #0]
 8011282:	4604      	mov	r4, r0
 8011284:	f7fb f808 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8011288:	4620      	mov	r0, r4
 801128a:	bd10      	pop	{r4, pc}
 801128c:	0802f954 	.word	0x0802f954

08011290 <_ZNSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED0Ev>:
 8011290:	b510      	push	{r4, lr}
 8011292:	4604      	mov	r4, r0
 8011294:	f7ff fff2 	bl	801127c <_ZNSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 8011298:	4620      	mov	r0, r4
 801129a:	f012 fe17 	bl	8023ecc <_ZdlPv>
 801129e:	4620      	mov	r0, r4
 80112a0:	bd10      	pop	{r4, pc}
	...

080112a4 <_ZNSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev>:
 80112a4:	b510      	push	{r4, lr}
 80112a6:	4b03      	ldr	r3, [pc, #12]	; (80112b4 <_ZNSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev+0x10>)
 80112a8:	6003      	str	r3, [r0, #0]
 80112aa:	4604      	mov	r4, r0
 80112ac:	f7fa fff4 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 80112b0:	4620      	mov	r0, r4
 80112b2:	bd10      	pop	{r4, pc}
 80112b4:	0802f96c 	.word	0x0802f96c

080112b8 <_ZNSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED0Ev>:
 80112b8:	b510      	push	{r4, lr}
 80112ba:	4604      	mov	r4, r0
 80112bc:	f7ff fff2 	bl	80112a4 <_ZNSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 80112c0:	4620      	mov	r0, r4
 80112c2:	f012 fe03 	bl	8023ecc <_ZdlPv>
 80112c6:	4620      	mov	r0, r4
 80112c8:	bd10      	pop	{r4, pc}
	...

080112cc <_ZNSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>:
 80112cc:	b510      	push	{r4, lr}
 80112ce:	4b03      	ldr	r3, [pc, #12]	; (80112dc <_ZNSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev+0x10>)
 80112d0:	6003      	str	r3, [r0, #0]
 80112d2:	4604      	mov	r4, r0
 80112d4:	f7fa ffe0 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 80112d8:	4620      	mov	r0, r4
 80112da:	bd10      	pop	{r4, pc}
 80112dc:	0802f984 	.word	0x0802f984

080112e0 <_ZNSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED0Ev>:
 80112e0:	b510      	push	{r4, lr}
 80112e2:	4604      	mov	r4, r0
 80112e4:	f7ff fff2 	bl	80112cc <_ZNSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 80112e8:	4620      	mov	r0, r4
 80112ea:	f012 fdef 	bl	8023ecc <_ZdlPv>
 80112ee:	4620      	mov	r0, r4
 80112f0:	bd10      	pop	{r4, pc}
	...

080112f4 <_ZNSt7__cxx118messagesIcED1Ev>:
 80112f4:	b510      	push	{r4, lr}
 80112f6:	4b05      	ldr	r3, [pc, #20]	; (801130c <_ZNSt7__cxx118messagesIcED1Ev+0x18>)
 80112f8:	4604      	mov	r4, r0
 80112fa:	f840 3b08 	str.w	r3, [r0], #8
 80112fe:	f013 fa4b 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 8011302:	4620      	mov	r0, r4
 8011304:	f7fa ffc8 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8011308:	4620      	mov	r0, r4
 801130a:	bd10      	pop	{r4, pc}
 801130c:	0802f938 	.word	0x0802f938

08011310 <_ZNSt7__cxx118messagesIcED0Ev>:
 8011310:	b510      	push	{r4, lr}
 8011312:	4604      	mov	r4, r0
 8011314:	f7ff ffee 	bl	80112f4 <_ZNSt7__cxx118messagesIcED1Ev>
 8011318:	4620      	mov	r0, r4
 801131a:	f012 fdd7 	bl	8023ecc <_ZdlPv>
 801131e:	4620      	mov	r0, r4
 8011320:	bd10      	pop	{r4, pc}
	...

08011324 <_ZNSt7__cxx117collateIcED1Ev>:
 8011324:	b510      	push	{r4, lr}
 8011326:	4b05      	ldr	r3, [pc, #20]	; (801133c <_ZNSt7__cxx117collateIcED1Ev+0x18>)
 8011328:	4604      	mov	r4, r0
 801132a:	f840 3b08 	str.w	r3, [r0], #8
 801132e:	f013 fa33 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 8011332:	4620      	mov	r0, r4
 8011334:	f7fa ffb0 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8011338:	4620      	mov	r0, r4
 801133a:	bd10      	pop	{r4, pc}
 801133c:	0802f890 	.word	0x0802f890

08011340 <_ZNSt7__cxx117collateIcED0Ev>:
 8011340:	b510      	push	{r4, lr}
 8011342:	4604      	mov	r4, r0
 8011344:	f7ff ffee 	bl	8011324 <_ZNSt7__cxx117collateIcED1Ev>
 8011348:	4620      	mov	r0, r4
 801134a:	f012 fdbf 	bl	8023ecc <_ZdlPv>
 801134e:	4620      	mov	r0, r4
 8011350:	bd10      	pop	{r4, pc}

08011352 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>:
 8011352:	e9d0 2102 	ldrd	r2, r1, [r0, #8]
 8011356:	428a      	cmp	r2, r1
 8011358:	d202      	bcs.n	8011360 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0+0xe>
 801135a:	3201      	adds	r2, #1
 801135c:	6082      	str	r2, [r0, #8]
 801135e:	4770      	bx	lr
 8011360:	6803      	ldr	r3, [r0, #0]
 8011362:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011364:	4718      	bx	r3

08011366 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc.isra.0>:
 8011366:	b507      	push	{r0, r1, r2, lr}
 8011368:	9200      	str	r2, [sp, #0]
 801136a:	460b      	mov	r3, r1
 801136c:	2200      	movs	r2, #0
 801136e:	6841      	ldr	r1, [r0, #4]
 8011370:	f00c fc1a 	bl	801dba8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
 8011374:	b003      	add	sp, #12
 8011376:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801137c <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb0EEEclERKSt6locale.isra.0>:
 801137c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011380:	4607      	mov	r7, r0
 8011382:	4816      	ldr	r0, [pc, #88]	; (80113dc <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb0EEEclERKSt6locale.isra.0+0x60>)
 8011384:	f7fb f826 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 8011388:	683b      	ldr	r3, [r7, #0]
 801138a:	f8d3 800c 	ldr.w	r8, [r3, #12]
 801138e:	f858 5020 	ldr.w	r5, [r8, r0, lsl #2]
 8011392:	4606      	mov	r6, r0
 8011394:	b9ed      	cbnz	r5, 80113d2 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb0EEEclERKSt6locale.isra.0+0x56>
 8011396:	2044      	movs	r0, #68	; 0x44
 8011398:	f7fa fdd2 	bl	800bf40 <_Znwj>
 801139c:	4b10      	ldr	r3, [pc, #64]	; (80113e0 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb0EEEclERKSt6locale.isra.0+0x64>)
 801139e:	8205      	strh	r5, [r0, #16]
 80113a0:	4604      	mov	r4, r0
 80113a2:	e9c0 3500 	strd	r3, r5, [r0]
 80113a6:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80113aa:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80113ae:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80113b2:	e9c0 5509 	strd	r5, r5, [r0, #36]	; 0x24
 80113b6:	e9c0 550b 	strd	r5, r5, [r0, #44]	; 0x2c
 80113ba:	7485      	strb	r5, [r0, #18]
 80113bc:	6345      	str	r5, [r0, #52]	; 0x34
 80113be:	f880 5043 	strb.w	r5, [r0, #67]	; 0x43
 80113c2:	4639      	mov	r1, r7
 80113c4:	f007 fad4 	bl	8018970 <_ZNSt18__moneypunct_cacheIcLb0EE8_M_cacheERKSt6locale>
 80113c8:	6838      	ldr	r0, [r7, #0]
 80113ca:	4632      	mov	r2, r6
 80113cc:	4621      	mov	r1, r4
 80113ce:	f7fb f8c7 	bl	800c560 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj>
 80113d2:	f858 0026 	ldr.w	r0, [r8, r6, lsl #2]
 80113d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113da:	bf00      	nop
 80113dc:	20003c48 	.word	0x20003c48
 80113e0:	0802e9f0 	.word	0x0802e9f0

080113e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0>:
 80113e4:	b538      	push	{r3, r4, r5, lr}
 80113e6:	6843      	ldr	r3, [r0, #4]
 80113e8:	4299      	cmp	r1, r3
 80113ea:	4605      	mov	r5, r0
 80113ec:	d904      	bls.n	80113f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0+0x14>
 80113ee:	460a      	mov	r2, r1
 80113f0:	480a      	ldr	r0, [pc, #40]	; (801141c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0+0x38>)
 80113f2:	490b      	ldr	r1, [pc, #44]	; (8011420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0+0x3c>)
 80113f4:	f006 fa20 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 80113f8:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 80113fc:	d104      	bne.n	8011408 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0+0x24>
 80113fe:	6803      	ldr	r3, [r0, #0]
 8011400:	6069      	str	r1, [r5, #4]
 8011402:	2200      	movs	r2, #0
 8011404:	545a      	strb	r2, [r3, r1]
 8011406:	bd38      	pop	{r3, r4, r5, pc}
 8011408:	2a00      	cmp	r2, #0
 801140a:	d0fc      	beq.n	8011406 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0+0x22>
 801140c:	1a5b      	subs	r3, r3, r1
 801140e:	429a      	cmp	r2, r3
 8011410:	bf28      	it	cs
 8011412:	461a      	movcs	r2, r3
 8011414:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011418:	f00c bb37 	b.w	801da8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
 801141c:	0802f5dc 	.word	0x0802f5dc
 8011420:	0802f63e 	.word	0x0802f63e

08011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>:
 8011424:	b510      	push	{r4, lr}
 8011426:	4604      	mov	r4, r0
 8011428:	6800      	ldr	r0, [r0, #0]
 801142a:	f7ff ff92 	bl	8011352 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801142e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011432:	6063      	str	r3, [r4, #4]
 8011434:	bd10      	pop	{r4, pc}
	...

08011438 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb1EEEclERKSt6locale.isra.0>:
 8011438:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801143c:	4607      	mov	r7, r0
 801143e:	4816      	ldr	r0, [pc, #88]	; (8011498 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb1EEEclERKSt6locale.isra.0+0x60>)
 8011440:	f7fa ffc8 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 8011444:	683b      	ldr	r3, [r7, #0]
 8011446:	f8d3 800c 	ldr.w	r8, [r3, #12]
 801144a:	f858 5020 	ldr.w	r5, [r8, r0, lsl #2]
 801144e:	4606      	mov	r6, r0
 8011450:	b9ed      	cbnz	r5, 801148e <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb1EEEclERKSt6locale.isra.0+0x56>
 8011452:	2044      	movs	r0, #68	; 0x44
 8011454:	f7fa fd74 	bl	800bf40 <_Znwj>
 8011458:	4b10      	ldr	r3, [pc, #64]	; (801149c <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb1EEEclERKSt6locale.isra.0+0x64>)
 801145a:	8205      	strh	r5, [r0, #16]
 801145c:	4604      	mov	r4, r0
 801145e:	e9c0 3500 	strd	r3, r5, [r0]
 8011462:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8011466:	e9c0 5505 	strd	r5, r5, [r0, #20]
 801146a:	e9c0 5507 	strd	r5, r5, [r0, #28]
 801146e:	e9c0 5509 	strd	r5, r5, [r0, #36]	; 0x24
 8011472:	e9c0 550b 	strd	r5, r5, [r0, #44]	; 0x2c
 8011476:	7485      	strb	r5, [r0, #18]
 8011478:	6345      	str	r5, [r0, #52]	; 0x34
 801147a:	f880 5043 	strb.w	r5, [r0, #67]	; 0x43
 801147e:	4639      	mov	r1, r7
 8011480:	f007 f9a6 	bl	80187d0 <_ZNSt18__moneypunct_cacheIcLb1EE8_M_cacheERKSt6locale>
 8011484:	6838      	ldr	r0, [r7, #0]
 8011486:	4632      	mov	r2, r6
 8011488:	4621      	mov	r1, r4
 801148a:	f7fb f869 	bl	800c560 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj>
 801148e:	f858 0026 	ldr.w	r0, [r8, r6, lsl #2]
 8011492:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011496:	bf00      	nop
 8011498:	20003c44 	.word	0x20003c44
 801149c:	0802e9e0 	.word	0x0802e9e0

080114a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc.isra.0>:
 80114a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80114a2:	6845      	ldr	r5, [r0, #4]
 80114a4:	42a9      	cmp	r1, r5
 80114a6:	d905      	bls.n	80114b4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc.isra.0+0x14>
 80114a8:	460a      	mov	r2, r1
 80114aa:	4806      	ldr	r0, [pc, #24]	; (80114c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc.isra.0+0x24>)
 80114ac:	4906      	ldr	r1, [pc, #24]	; (80114c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc.isra.0+0x28>)
 80114ae:	462b      	mov	r3, r5
 80114b0:	f006 f9c2 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 80114b4:	9300      	str	r3, [sp, #0]
 80114b6:	4613      	mov	r3, r2
 80114b8:	2200      	movs	r2, #0
 80114ba:	f00c fb75 	bl	801dba8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
 80114be:	b003      	add	sp, #12
 80114c0:	bd30      	pop	{r4, r5, pc}
 80114c2:	bf00      	nop
 80114c4:	0802f5dc 	.word	0x0802f5dc
 80114c8:	0802f7db 	.word	0x0802f7db

080114cc <_ZSt16__convert_from_vRKPiPciPKcz>:
 80114cc:	b408      	push	{r3}
 80114ce:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
 80114d0:	460e      	mov	r6, r1
 80114d2:	2004      	movs	r0, #4
 80114d4:	2100      	movs	r1, #0
 80114d6:	4617      	mov	r7, r2
 80114d8:	f014 fc46 	bl	8025d68 <setlocale>
 80114dc:	4916      	ldr	r1, [pc, #88]	; (8011538 <_ZSt16__convert_from_vRKPiPciPKcz+0x6c>)
 80114de:	4605      	mov	r5, r0
 80114e0:	f7ee fec6 	bl	8000270 <strcmp>
 80114e4:	4604      	mov	r4, r0
 80114e6:	b180      	cbz	r0, 801150a <_ZSt16__convert_from_vRKPiPciPKcz+0x3e>
 80114e8:	4628      	mov	r0, r5
 80114ea:	f7ee fecb 	bl	8000284 <strlen>
 80114ee:	1c42      	adds	r2, r0, #1
 80114f0:	4610      	mov	r0, r2
 80114f2:	9201      	str	r2, [sp, #4]
 80114f4:	f012 fd72 	bl	8023fdc <_Znaj>
 80114f8:	4629      	mov	r1, r5
 80114fa:	9a01      	ldr	r2, [sp, #4]
 80114fc:	4604      	mov	r4, r0
 80114fe:	f014 fcff 	bl	8025f00 <memcpy>
 8011502:	490d      	ldr	r1, [pc, #52]	; (8011538 <_ZSt16__convert_from_vRKPiPciPKcz+0x6c>)
 8011504:	2004      	movs	r0, #4
 8011506:	f014 fc2f 	bl	8025d68 <setlocale>
 801150a:	ab0a      	add	r3, sp, #40	; 0x28
 801150c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801150e:	9303      	str	r3, [sp, #12]
 8011510:	4639      	mov	r1, r7
 8011512:	4630      	mov	r0, r6
 8011514:	f018 f9cc 	bl	80298b0 <vsniprintf>
 8011518:	4605      	mov	r5, r0
 801151a:	b134      	cbz	r4, 801152a <_ZSt16__convert_from_vRKPiPciPKcz+0x5e>
 801151c:	4621      	mov	r1, r4
 801151e:	2004      	movs	r0, #4
 8011520:	f014 fc22 	bl	8025d68 <setlocale>
 8011524:	4620      	mov	r0, r4
 8011526:	f012 fcd3 	bl	8023ed0 <_ZdaPv>
 801152a:	4628      	mov	r0, r5
 801152c:	b004      	add	sp, #16
 801152e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011532:	b001      	add	sp, #4
 8011534:	4770      	bx	lr
 8011536:	bf00      	nop
 8011538:	0802f7f0 	.word	0x0802f7f0

0801153c <_ZNKSt5ctypeIcE7toupperEc>:
 801153c:	6803      	ldr	r3, [r0, #0]
 801153e:	689b      	ldr	r3, [r3, #8]
 8011540:	4718      	bx	r3

08011542 <_ZNKSt5ctypeIcE5widenEc>:
 8011542:	b570      	push	{r4, r5, r6, lr}
 8011544:	7f03      	ldrb	r3, [r0, #28]
 8011546:	4604      	mov	r4, r0
 8011548:	460d      	mov	r5, r1
 801154a:	b943      	cbnz	r3, 801155e <_ZNKSt5ctypeIcE5widenEc+0x1c>
 801154c:	f7ff fbbd 	bl	8010cca <_ZNKSt5ctypeIcE13_M_widen_initEv>
 8011550:	6823      	ldr	r3, [r4, #0]
 8011552:	4629      	mov	r1, r5
 8011554:	4620      	mov	r0, r4
 8011556:	699b      	ldr	r3, [r3, #24]
 8011558:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801155c:	4718      	bx	r3
 801155e:	1841      	adds	r1, r0, r1
 8011560:	7f48      	ldrb	r0, [r1, #29]
 8011562:	bd70      	pop	{r4, r5, r6, pc}

08011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>:
 8011564:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011566:	4614      	mov	r4, r2
 8011568:	7f02      	ldrb	r2, [r0, #28]
 801156a:	2a01      	cmp	r2, #1
 801156c:	4605      	mov	r5, r0
 801156e:	460e      	mov	r6, r1
 8011570:	d108      	bne.n	8011584 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc+0x20>
 8011572:	42a1      	cmp	r1, r4
 8011574:	d003      	beq.n	801157e <_ZNKSt5ctypeIcE5widenEPKcS2_Pc+0x1a>
 8011576:	1a62      	subs	r2, r4, r1
 8011578:	4618      	mov	r0, r3
 801157a:	f014 fcc1 	bl	8025f00 <memcpy>
 801157e:	4620      	mov	r0, r4
 8011580:	b003      	add	sp, #12
 8011582:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011584:	b91a      	cbnz	r2, 801158e <_ZNKSt5ctypeIcE5widenEPKcS2_Pc+0x2a>
 8011586:	9301      	str	r3, [sp, #4]
 8011588:	f7ff fb9f 	bl	8010cca <_ZNKSt5ctypeIcE13_M_widen_initEv>
 801158c:	9b01      	ldr	r3, [sp, #4]
 801158e:	682a      	ldr	r2, [r5, #0]
 8011590:	69d7      	ldr	r7, [r2, #28]
 8011592:	4631      	mov	r1, r6
 8011594:	4622      	mov	r2, r4
 8011596:	4628      	mov	r0, r5
 8011598:	46bc      	mov	ip, r7
 801159a:	b003      	add	sp, #12
 801159c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80115a0:	4760      	bx	ip

080115a2 <_ZNKSt5ctypeIcE6narrowEcc>:
 80115a2:	b570      	push	{r4, r5, r6, lr}
 80115a4:	1844      	adds	r4, r0, r1
 80115a6:	4616      	mov	r6, r2
 80115a8:	f894 311d 	ldrb.w	r3, [r4, #285]	; 0x11d
 80115ac:	b93b      	cbnz	r3, 80115be <_ZNKSt5ctypeIcE6narrowEcc+0x1c>
 80115ae:	6803      	ldr	r3, [r0, #0]
 80115b0:	6a1b      	ldr	r3, [r3, #32]
 80115b2:	4798      	blx	r3
 80115b4:	4286      	cmp	r6, r0
 80115b6:	4603      	mov	r3, r0
 80115b8:	bf18      	it	ne
 80115ba:	f884 011d 	strbne.w	r0, [r4, #285]	; 0x11d
 80115be:	4618      	mov	r0, r3
 80115c0:	bd70      	pop	{r4, r5, r6, pc}

080115c2 <_ZNKSt7__cxx1110moneypunctIcLb0EE13decimal_pointEv>:
 80115c2:	6803      	ldr	r3, [r0, #0]
 80115c4:	689b      	ldr	r3, [r3, #8]
 80115c6:	4718      	bx	r3

080115c8 <_ZNKSt7__cxx1110moneypunctIcLb0EE13thousands_sepEv>:
 80115c8:	6803      	ldr	r3, [r0, #0]
 80115ca:	68db      	ldr	r3, [r3, #12]
 80115cc:	4718      	bx	r3

080115ce <_ZNKSt7__cxx1110moneypunctIcLb0EE8groupingEv>:
 80115ce:	b510      	push	{r4, lr}
 80115d0:	680b      	ldr	r3, [r1, #0]
 80115d2:	4604      	mov	r4, r0
 80115d4:	691b      	ldr	r3, [r3, #16]
 80115d6:	4798      	blx	r3
 80115d8:	4620      	mov	r0, r4
 80115da:	bd10      	pop	{r4, pc}

080115dc <_ZNKSt7__cxx1110moneypunctIcLb0EE11curr_symbolEv>:
 80115dc:	b510      	push	{r4, lr}
 80115de:	680b      	ldr	r3, [r1, #0]
 80115e0:	4604      	mov	r4, r0
 80115e2:	695b      	ldr	r3, [r3, #20]
 80115e4:	4798      	blx	r3
 80115e6:	4620      	mov	r0, r4
 80115e8:	bd10      	pop	{r4, pc}

080115ea <_ZNKSt7__cxx1110moneypunctIcLb0EE13positive_signEv>:
 80115ea:	b510      	push	{r4, lr}
 80115ec:	680b      	ldr	r3, [r1, #0]
 80115ee:	4604      	mov	r4, r0
 80115f0:	699b      	ldr	r3, [r3, #24]
 80115f2:	4798      	blx	r3
 80115f4:	4620      	mov	r0, r4
 80115f6:	bd10      	pop	{r4, pc}

080115f8 <_ZNKSt7__cxx1110moneypunctIcLb0EE13negative_signEv>:
 80115f8:	b510      	push	{r4, lr}
 80115fa:	680b      	ldr	r3, [r1, #0]
 80115fc:	4604      	mov	r4, r0
 80115fe:	69db      	ldr	r3, [r3, #28]
 8011600:	4798      	blx	r3
 8011602:	4620      	mov	r0, r4
 8011604:	bd10      	pop	{r4, pc}

08011606 <_ZNKSt7__cxx1110moneypunctIcLb0EE11frac_digitsEv>:
 8011606:	6803      	ldr	r3, [r0, #0]
 8011608:	6a1b      	ldr	r3, [r3, #32]
 801160a:	4718      	bx	r3

0801160c <_ZNKSt7__cxx1110moneypunctIcLb0EE10pos_formatEv>:
 801160c:	6803      	ldr	r3, [r0, #0]
 801160e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011610:	b082      	sub	sp, #8
 8011612:	b002      	add	sp, #8
 8011614:	4718      	bx	r3

08011616 <_ZNKSt7__cxx1110moneypunctIcLb0EE10neg_formatEv>:
 8011616:	6803      	ldr	r3, [r0, #0]
 8011618:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801161a:	b082      	sub	sp, #8
 801161c:	b002      	add	sp, #8
 801161e:	4718      	bx	r3

08011620 <_ZNKSt7__cxx1110moneypunctIcLb1EE13decimal_pointEv>:
 8011620:	6803      	ldr	r3, [r0, #0]
 8011622:	689b      	ldr	r3, [r3, #8]
 8011624:	4718      	bx	r3

08011626 <_ZNKSt7__cxx1110moneypunctIcLb1EE13thousands_sepEv>:
 8011626:	6803      	ldr	r3, [r0, #0]
 8011628:	68db      	ldr	r3, [r3, #12]
 801162a:	4718      	bx	r3

0801162c <_ZNKSt7__cxx1110moneypunctIcLb1EE8groupingEv>:
 801162c:	b510      	push	{r4, lr}
 801162e:	680b      	ldr	r3, [r1, #0]
 8011630:	4604      	mov	r4, r0
 8011632:	691b      	ldr	r3, [r3, #16]
 8011634:	4798      	blx	r3
 8011636:	4620      	mov	r0, r4
 8011638:	bd10      	pop	{r4, pc}

0801163a <_ZNKSt7__cxx1110moneypunctIcLb1EE11curr_symbolEv>:
 801163a:	b510      	push	{r4, lr}
 801163c:	680b      	ldr	r3, [r1, #0]
 801163e:	4604      	mov	r4, r0
 8011640:	695b      	ldr	r3, [r3, #20]
 8011642:	4798      	blx	r3
 8011644:	4620      	mov	r0, r4
 8011646:	bd10      	pop	{r4, pc}

08011648 <_ZNKSt7__cxx1110moneypunctIcLb1EE13positive_signEv>:
 8011648:	b510      	push	{r4, lr}
 801164a:	680b      	ldr	r3, [r1, #0]
 801164c:	4604      	mov	r4, r0
 801164e:	699b      	ldr	r3, [r3, #24]
 8011650:	4798      	blx	r3
 8011652:	4620      	mov	r0, r4
 8011654:	bd10      	pop	{r4, pc}

08011656 <_ZNKSt7__cxx1110moneypunctIcLb1EE13negative_signEv>:
 8011656:	b510      	push	{r4, lr}
 8011658:	680b      	ldr	r3, [r1, #0]
 801165a:	4604      	mov	r4, r0
 801165c:	69db      	ldr	r3, [r3, #28]
 801165e:	4798      	blx	r3
 8011660:	4620      	mov	r0, r4
 8011662:	bd10      	pop	{r4, pc}

08011664 <_ZNKSt7__cxx1110moneypunctIcLb1EE11frac_digitsEv>:
 8011664:	6803      	ldr	r3, [r0, #0]
 8011666:	6a1b      	ldr	r3, [r3, #32]
 8011668:	4718      	bx	r3

0801166a <_ZNKSt7__cxx1110moneypunctIcLb1EE10pos_formatEv>:
 801166a:	6803      	ldr	r3, [r0, #0]
 801166c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801166e:	b082      	sub	sp, #8
 8011670:	b002      	add	sp, #8
 8011672:	4718      	bx	r3

08011674 <_ZNKSt7__cxx1110moneypunctIcLb1EE10neg_formatEv>:
 8011674:	6803      	ldr	r3, [r0, #0]
 8011676:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011678:	b082      	sub	sp, #8
 801167a:	b002      	add	sp, #8
 801167c:	4718      	bx	r3

0801167e <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRe>:
 801167e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011680:	b089      	sub	sp, #36	; 0x24
 8011682:	ae06      	add	r6, sp, #24
 8011684:	e886 000c 	stmia.w	r6, {r2, r3}
 8011688:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801168a:	680b      	ldr	r3, [r1, #0]
 801168c:	9205      	str	r2, [sp, #20]
 801168e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011690:	9204      	str	r2, [sp, #16]
 8011692:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011694:	9203      	str	r2, [sp, #12]
 8011696:	f89d 2040 	ldrb.w	r2, [sp, #64]	; 0x40
 801169a:	9202      	str	r2, [sp, #8]
 801169c:	aa0e      	add	r2, sp, #56	; 0x38
 801169e:	4604      	mov	r4, r0
 80116a0:	460d      	mov	r5, r1
 80116a2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80116a6:	e88d 0003 	stmia.w	sp, {r0, r1}
 80116aa:	4620      	mov	r0, r4
 80116ac:	689f      	ldr	r7, [r3, #8]
 80116ae:	4629      	mov	r1, r5
 80116b0:	e896 000c 	ldmia.w	r6, {r2, r3}
 80116b4:	47b8      	blx	r7
 80116b6:	4620      	mov	r0, r4
 80116b8:	b009      	add	sp, #36	; 0x24
 80116ba:	bdf0      	pop	{r4, r5, r6, r7, pc}

080116bc <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE>:
 80116bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80116be:	b089      	sub	sp, #36	; 0x24
 80116c0:	ae06      	add	r6, sp, #24
 80116c2:	e886 000c 	stmia.w	r6, {r2, r3}
 80116c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80116c8:	680b      	ldr	r3, [r1, #0]
 80116ca:	9205      	str	r2, [sp, #20]
 80116cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80116ce:	9204      	str	r2, [sp, #16]
 80116d0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80116d2:	9203      	str	r2, [sp, #12]
 80116d4:	f89d 2040 	ldrb.w	r2, [sp, #64]	; 0x40
 80116d8:	9202      	str	r2, [sp, #8]
 80116da:	aa0e      	add	r2, sp, #56	; 0x38
 80116dc:	4604      	mov	r4, r0
 80116de:	460d      	mov	r5, r1
 80116e0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80116e4:	e88d 0003 	stmia.w	sp, {r0, r1}
 80116e8:	4620      	mov	r0, r4
 80116ea:	68df      	ldr	r7, [r3, #12]
 80116ec:	4629      	mov	r1, r5
 80116ee:	e896 000c 	ldmia.w	r6, {r2, r3}
 80116f2:	47b8      	blx	r7
 80116f4:	4620      	mov	r0, r4
 80116f6:	b009      	add	sp, #36	; 0x24
 80116f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080116fa <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE3putES4_bRSt8ios_basece>:
 80116fa:	b570      	push	{r4, r5, r6, lr}
 80116fc:	b086      	sub	sp, #24
 80116fe:	ac04      	add	r4, sp, #16
 8011700:	e884 000c 	stmia.w	r4, {r2, r3}
 8011704:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 8011708:	9202      	str	r2, [sp, #8]
 801170a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801170c:	9201      	str	r2, [sp, #4]
 801170e:	680b      	ldr	r3, [r1, #0]
 8011710:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 8011714:	9200      	str	r2, [sp, #0]
 8011716:	689e      	ldr	r6, [r3, #8]
 8011718:	e894 000c 	ldmia.w	r4, {r2, r3}
 801171c:	4605      	mov	r5, r0
 801171e:	47b0      	blx	r6
 8011720:	4628      	mov	r0, r5
 8011722:	b006      	add	sp, #24
 8011724:	bd70      	pop	{r4, r5, r6, pc}

08011726 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE3putES4_bRSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE>:
 8011726:	b570      	push	{r4, r5, r6, lr}
 8011728:	b086      	sub	sp, #24
 801172a:	ac04      	add	r4, sp, #16
 801172c:	e884 000c 	stmia.w	r4, {r2, r3}
 8011730:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011732:	9203      	str	r2, [sp, #12]
 8011734:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 8011738:	9202      	str	r2, [sp, #8]
 801173a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801173c:	9201      	str	r2, [sp, #4]
 801173e:	680b      	ldr	r3, [r1, #0]
 8011740:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 8011744:	9200      	str	r2, [sp, #0]
 8011746:	68de      	ldr	r6, [r3, #12]
 8011748:	e894 000c 	ldmia.w	r4, {r2, r3}
 801174c:	4605      	mov	r5, r0
 801174e:	47b0      	blx	r6
 8011750:	4628      	mov	r0, r5
 8011752:	b006      	add	sp, #24
 8011754:	bd70      	pop	{r4, r5, r6, pc}

08011756 <_ZNKSt7__cxx118numpunctIcE13decimal_pointEv>:
 8011756:	6803      	ldr	r3, [r0, #0]
 8011758:	689b      	ldr	r3, [r3, #8]
 801175a:	4718      	bx	r3

0801175c <_ZNKSt7__cxx118numpunctIcE13thousands_sepEv>:
 801175c:	6803      	ldr	r3, [r0, #0]
 801175e:	68db      	ldr	r3, [r3, #12]
 8011760:	4718      	bx	r3

08011762 <_ZNKSt7__cxx118numpunctIcE8groupingEv>:
 8011762:	b510      	push	{r4, lr}
 8011764:	680b      	ldr	r3, [r1, #0]
 8011766:	4604      	mov	r4, r0
 8011768:	691b      	ldr	r3, [r3, #16]
 801176a:	4798      	blx	r3
 801176c:	4620      	mov	r0, r4
 801176e:	bd10      	pop	{r4, pc}

08011770 <_ZNKSt7__cxx118numpunctIcE8truenameEv>:
 8011770:	b510      	push	{r4, lr}
 8011772:	680b      	ldr	r3, [r1, #0]
 8011774:	4604      	mov	r4, r0
 8011776:	695b      	ldr	r3, [r3, #20]
 8011778:	4798      	blx	r3
 801177a:	4620      	mov	r0, r4
 801177c:	bd10      	pop	{r4, pc}

0801177e <_ZNKSt7__cxx118numpunctIcE9falsenameEv>:
 801177e:	b510      	push	{r4, lr}
 8011780:	680b      	ldr	r3, [r1, #0]
 8011782:	4604      	mov	r4, r0
 8011784:	699b      	ldr	r3, [r3, #24]
 8011786:	4798      	blx	r3
 8011788:	4620      	mov	r0, r4
 801178a:	bd10      	pop	{r4, pc}

0801178c <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10date_orderEv>:
 801178c:	6803      	ldr	r3, [r0, #0]
 801178e:	689b      	ldr	r3, [r3, #8]
 8011790:	4718      	bx	r3

08011792 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8get_timeES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8011792:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011794:	b089      	sub	sp, #36	; 0x24
 8011796:	ae06      	add	r6, sp, #24
 8011798:	e886 000c 	stmia.w	r6, {r2, r3}
 801179c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801179e:	680b      	ldr	r3, [r1, #0]
 80117a0:	9204      	str	r2, [sp, #16]
 80117a2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80117a4:	9203      	str	r2, [sp, #12]
 80117a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80117a8:	9202      	str	r2, [sp, #8]
 80117aa:	aa0e      	add	r2, sp, #56	; 0x38
 80117ac:	4604      	mov	r4, r0
 80117ae:	460d      	mov	r5, r1
 80117b0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80117b4:	e88d 0003 	stmia.w	sp, {r0, r1}
 80117b8:	4620      	mov	r0, r4
 80117ba:	68df      	ldr	r7, [r3, #12]
 80117bc:	4629      	mov	r1, r5
 80117be:	e896 000c 	ldmia.w	r6, {r2, r3}
 80117c2:	47b8      	blx	r7
 80117c4:	4620      	mov	r0, r4
 80117c6:	b009      	add	sp, #36	; 0x24
 80117c8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080117ca <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8get_dateES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 80117ca:	b5f0      	push	{r4, r5, r6, r7, lr}
 80117cc:	b089      	sub	sp, #36	; 0x24
 80117ce:	ae06      	add	r6, sp, #24
 80117d0:	e886 000c 	stmia.w	r6, {r2, r3}
 80117d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80117d6:	680b      	ldr	r3, [r1, #0]
 80117d8:	9204      	str	r2, [sp, #16]
 80117da:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80117dc:	9203      	str	r2, [sp, #12]
 80117de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80117e0:	9202      	str	r2, [sp, #8]
 80117e2:	aa0e      	add	r2, sp, #56	; 0x38
 80117e4:	4604      	mov	r4, r0
 80117e6:	460d      	mov	r5, r1
 80117e8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80117ec:	e88d 0003 	stmia.w	sp, {r0, r1}
 80117f0:	4620      	mov	r0, r4
 80117f2:	691f      	ldr	r7, [r3, #16]
 80117f4:	4629      	mov	r1, r5
 80117f6:	e896 000c 	ldmia.w	r6, {r2, r3}
 80117fa:	47b8      	blx	r7
 80117fc:	4620      	mov	r0, r4
 80117fe:	b009      	add	sp, #36	; 0x24
 8011800:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011802 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11get_weekdayES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8011802:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011804:	b089      	sub	sp, #36	; 0x24
 8011806:	ae06      	add	r6, sp, #24
 8011808:	e886 000c 	stmia.w	r6, {r2, r3}
 801180c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801180e:	680b      	ldr	r3, [r1, #0]
 8011810:	9204      	str	r2, [sp, #16]
 8011812:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011814:	9203      	str	r2, [sp, #12]
 8011816:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011818:	9202      	str	r2, [sp, #8]
 801181a:	aa0e      	add	r2, sp, #56	; 0x38
 801181c:	4604      	mov	r4, r0
 801181e:	460d      	mov	r5, r1
 8011820:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011824:	e88d 0003 	stmia.w	sp, {r0, r1}
 8011828:	4620      	mov	r0, r4
 801182a:	695f      	ldr	r7, [r3, #20]
 801182c:	4629      	mov	r1, r5
 801182e:	e896 000c 	ldmia.w	r6, {r2, r3}
 8011832:	47b8      	blx	r7
 8011834:	4620      	mov	r0, r4
 8011836:	b009      	add	sp, #36	; 0x24
 8011838:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801183a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE13get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801183a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801183c:	b089      	sub	sp, #36	; 0x24
 801183e:	ae06      	add	r6, sp, #24
 8011840:	e886 000c 	stmia.w	r6, {r2, r3}
 8011844:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011846:	680b      	ldr	r3, [r1, #0]
 8011848:	9204      	str	r2, [sp, #16]
 801184a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801184c:	9203      	str	r2, [sp, #12]
 801184e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011850:	9202      	str	r2, [sp, #8]
 8011852:	aa0e      	add	r2, sp, #56	; 0x38
 8011854:	4604      	mov	r4, r0
 8011856:	460d      	mov	r5, r1
 8011858:	e892 0003 	ldmia.w	r2, {r0, r1}
 801185c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8011860:	4620      	mov	r0, r4
 8011862:	699f      	ldr	r7, [r3, #24]
 8011864:	4629      	mov	r1, r5
 8011866:	e896 000c 	ldmia.w	r6, {r2, r3}
 801186a:	47b8      	blx	r7
 801186c:	4620      	mov	r0, r4
 801186e:	b009      	add	sp, #36	; 0x24
 8011870:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011872 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8get_yearES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8011872:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011874:	b089      	sub	sp, #36	; 0x24
 8011876:	ae06      	add	r6, sp, #24
 8011878:	e886 000c 	stmia.w	r6, {r2, r3}
 801187c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801187e:	680b      	ldr	r3, [r1, #0]
 8011880:	9204      	str	r2, [sp, #16]
 8011882:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011884:	9203      	str	r2, [sp, #12]
 8011886:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011888:	9202      	str	r2, [sp, #8]
 801188a:	aa0e      	add	r2, sp, #56	; 0x38
 801188c:	4604      	mov	r4, r0
 801188e:	460d      	mov	r5, r1
 8011890:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011894:	e88d 0003 	stmia.w	sp, {r0, r1}
 8011898:	4620      	mov	r0, r4
 801189a:	69df      	ldr	r7, [r3, #28]
 801189c:	4629      	mov	r1, r5
 801189e:	e896 000c 	ldmia.w	r6, {r2, r3}
 80118a2:	47b8      	blx	r7
 80118a4:	4620      	mov	r0, r4
 80118a6:	b009      	add	sp, #36	; 0x24
 80118a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080118ac <_ZNSt7__cxx118messagesIcEC1Ej>:
 80118ac:	3900      	subs	r1, #0
 80118ae:	b510      	push	{r4, lr}
 80118b0:	4b05      	ldr	r3, [pc, #20]	; (80118c8 <_ZNSt7__cxx118messagesIcEC1Ej+0x1c>)
 80118b2:	6003      	str	r3, [r0, #0]
 80118b4:	bf18      	it	ne
 80118b6:	2101      	movne	r1, #1
 80118b8:	6041      	str	r1, [r0, #4]
 80118ba:	4604      	mov	r4, r0
 80118bc:	f7fa fd0e 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 80118c0:	60a0      	str	r0, [r4, #8]
 80118c2:	4620      	mov	r0, r4
 80118c4:	bd10      	pop	{r4, pc}
 80118c6:	bf00      	nop
 80118c8:	0802f938 	.word	0x0802f938

080118cc <_ZNKSt7__cxx118messagesIcE4openERKNS_12basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale>:
 80118cc:	6803      	ldr	r3, [r0, #0]
 80118ce:	689b      	ldr	r3, [r3, #8]
 80118d0:	4718      	bx	r3

080118d2 <_ZNKSt7__cxx118messagesIcE3getEiiiRKNS_12basic_stringIcSt11char_traitsIcESaIcEEE>:
 80118d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80118d4:	9e07      	ldr	r6, [sp, #28]
 80118d6:	9601      	str	r6, [sp, #4]
 80118d8:	680d      	ldr	r5, [r1, #0]
 80118da:	9e06      	ldr	r6, [sp, #24]
 80118dc:	9600      	str	r6, [sp, #0]
 80118de:	68ed      	ldr	r5, [r5, #12]
 80118e0:	4604      	mov	r4, r0
 80118e2:	47a8      	blx	r5
 80118e4:	4620      	mov	r0, r4
 80118e6:	b002      	add	sp, #8
 80118e8:	bd70      	pop	{r4, r5, r6, pc}

080118ea <_ZNKSt7__cxx118messagesIcE5closeEi>:
 80118ea:	6803      	ldr	r3, [r0, #0]
 80118ec:	691b      	ldr	r3, [r3, #16]
 80118ee:	4718      	bx	r3

080118f0 <_ZNKSt7__cxx117collateIcE7compareEPKcS3_S3_S3_>:
 80118f0:	b410      	push	{r4}
 80118f2:	6804      	ldr	r4, [r0, #0]
 80118f4:	68a4      	ldr	r4, [r4, #8]
 80118f6:	46a4      	mov	ip, r4
 80118f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80118fc:	4760      	bx	ip

080118fe <_ZNKSt7__cxx117collateIcE9transformEPKcS3_>:
 80118fe:	b538      	push	{r3, r4, r5, lr}
 8011900:	680d      	ldr	r5, [r1, #0]
 8011902:	4604      	mov	r4, r0
 8011904:	68ed      	ldr	r5, [r5, #12]
 8011906:	47a8      	blx	r5
 8011908:	4620      	mov	r0, r4
 801190a:	bd38      	pop	{r3, r4, r5, pc}

0801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>:
 801190c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801190e:	466d      	mov	r5, sp
 8011910:	e885 0006 	stmia.w	r5, {r1, r2}
 8011914:	f89d 6004 	ldrb.w	r6, [sp, #4]
 8011918:	9f08      	ldr	r7, [sp, #32]
 801191a:	4604      	mov	r4, r0
 801191c:	4619      	mov	r1, r3
 801191e:	b936      	cbnz	r6, 801192e <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i+0x22>
 8011920:	9800      	ldr	r0, [sp, #0]
 8011922:	463a      	mov	r2, r7
 8011924:	f00b ffc2 	bl	801d8ac <_ZNSt15basic_streambufIcSt11char_traitsIcEE5sputnEPKci>
 8011928:	4287      	cmp	r7, r0
 801192a:	bf18      	it	ne
 801192c:	2601      	movne	r6, #1
 801192e:	f88d 6004 	strb.w	r6, [sp, #4]
 8011932:	e895 0003 	ldmia.w	r5, {r0, r1}
 8011936:	e884 0003 	stmia.w	r4, {r0, r1}
 801193a:	4620      	mov	r0, r4
 801193c:	b003      	add	sp, #12
 801193e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011940 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE>:
 8011940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011944:	b099      	sub	sp, #100	; 0x64
 8011946:	a906      	add	r1, sp, #24
 8011948:	f8dd 8088 	ldr.w	r8, [sp, #136]	; 0x88
 801194c:	9005      	str	r0, [sp, #20]
 801194e:	f108 046c 	add.w	r4, r8, #108	; 0x6c
 8011952:	4620      	mov	r0, r4
 8011954:	e881 000c 	stmia.w	r1, {r2, r3}
 8011958:	9f24      	ldr	r7, [sp, #144]	; 0x90
 801195a:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 801195e:	f006 fe25 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8011962:	4606      	mov	r6, r0
 8011964:	4620      	mov	r0, r4
 8011966:	f7ff fd67 	bl	8011438 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb1EEEclERKSt6locale.isra.0>
 801196a:	683d      	ldr	r5, [r7, #0]
 801196c:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8011970:	782a      	ldrb	r2, [r5, #0]
 8011972:	429a      	cmp	r2, r3
 8011974:	4604      	mov	r4, r0
 8011976:	687a      	ldr	r2, [r7, #4]
 8011978:	d07d      	beq.n	8011a76 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x136>
 801197a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801197c:	9309      	str	r3, [sp, #36]	; 0x24
 801197e:	f8d0 a020 	ldr.w	sl, [r0, #32]
 8011982:	69c3      	ldr	r3, [r0, #28]
 8011984:	9303      	str	r3, [sp, #12]
 8011986:	442a      	add	r2, r5
 8011988:	462b      	mov	r3, r5
 801198a:	429a      	cmp	r2, r3
 801198c:	461f      	mov	r7, r3
 801198e:	d906      	bls.n	801199e <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x5e>
 8011990:	7838      	ldrb	r0, [r7, #0]
 8011992:	69b1      	ldr	r1, [r6, #24]
 8011994:	5c09      	ldrb	r1, [r1, r0]
 8011996:	0749      	lsls	r1, r1, #29
 8011998:	f103 0301 	add.w	r3, r3, #1
 801199c:	d4f5      	bmi.n	801198a <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x4a>
 801199e:	1b7f      	subs	r7, r7, r5
 80119a0:	f000 80ba 	beq.w	8011b18 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x1d8>
 80119a4:	ab0e      	add	r3, sp, #56	; 0x38
 80119a6:	f04f 0b00 	mov.w	fp, #0
 80119aa:	0079      	lsls	r1, r7, #1
 80119ac:	a80c      	add	r0, sp, #48	; 0x30
 80119ae:	930c      	str	r3, [sp, #48]	; 0x30
 80119b0:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
 80119b4:	f88d b038 	strb.w	fp, [sp, #56]	; 0x38
 80119b8:	f00c f8a4 	bl	801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
 80119bc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80119be:	1afe      	subs	r6, r7, r3
 80119c0:	455e      	cmp	r6, fp
 80119c2:	dd1d      	ble.n	8011a00 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0xc0>
 80119c4:	68e1      	ldr	r1, [r4, #12]
 80119c6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80119c8:	455b      	cmp	r3, fp
 80119ca:	bfb8      	it	lt
 80119cc:	463e      	movlt	r6, r7
 80119ce:	2900      	cmp	r1, #0
 80119d0:	d05c      	beq.n	8011a8c <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x14c>
 80119d2:	0073      	lsls	r3, r6, #1
 80119d4:	4659      	mov	r1, fp
 80119d6:	f8cd b000 	str.w	fp, [sp]
 80119da:	a80c      	add	r0, sp, #48	; 0x30
 80119dc:	f00c f8e4 	bl	801dba8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
 80119e0:	19ab      	adds	r3, r5, r6
 80119e2:	7ca1      	ldrb	r1, [r4, #18]
 80119e4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80119e6:	e9cd 5300 	strd	r5, r3, [sp]
 80119ea:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
 80119ee:	f007 f8e9 	bl	8018bc4 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_>
 80119f2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80119f4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80119f8:	1a41      	subs	r1, r0, r1
 80119fa:	a80c      	add	r0, sp, #48	; 0x30
 80119fc:	f7ff fcf2 	bl	80113e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0>
 8011a00:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011a02:	2b00      	cmp	r3, #0
 8011a04:	dd0a      	ble.n	8011a1c <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0xdc>
 8011a06:	7c61      	ldrb	r1, [r4, #17]
 8011a08:	a80c      	add	r0, sp, #48	; 0x30
 8011a0a:	f00c f8ad 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8011a0e:	2e00      	cmp	r6, #0
 8011a10:	db42      	blt.n	8011a98 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x158>
 8011a12:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011a14:	19a9      	adds	r1, r5, r6
 8011a16:	a80c      	add	r0, sp, #48	; 0x30
 8011a18:	f00c f9d2 	bl	801ddc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
 8011a1c:	f8d8 500c 	ldr.w	r5, [r8, #12]
 8011a20:	f005 03b0 	and.w	r3, r5, #176	; 0xb0
 8011a24:	9304      	str	r3, [sp, #16]
 8011a26:	f415 7500 	ands.w	r5, r5, #512	; 0x200
 8011a2a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011a2c:	bf18      	it	ne
 8011a2e:	69a5      	ldrne	r5, [r4, #24]
 8011a30:	eb0a 0203 	add.w	r2, sl, r3
 8011a34:	4415      	add	r5, r2
 8011a36:	ab14      	add	r3, sp, #80	; 0x50
 8011a38:	2600      	movs	r6, #0
 8011a3a:	0069      	lsls	r1, r5, #1
 8011a3c:	a812      	add	r0, sp, #72	; 0x48
 8011a3e:	9312      	str	r3, [sp, #72]	; 0x48
 8011a40:	9613      	str	r6, [sp, #76]	; 0x4c
 8011a42:	f88d 6050 	strb.w	r6, [sp, #80]	; 0x50
 8011a46:	f00c f85d 	bl	801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
 8011a4a:	9b04      	ldr	r3, [sp, #16]
 8011a4c:	f8d8 7008 	ldr.w	r7, [r8, #8]
 8011a50:	2b10      	cmp	r3, #16
 8011a52:	d103      	bne.n	8011a5c <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x11c>
 8011a54:	42bd      	cmp	r5, r7
 8011a56:	bf2c      	ite	cs
 8011a58:	2600      	movcs	r6, #0
 8011a5a:	2601      	movcc	r6, #1
 8011a5c:	f04f 0b00 	mov.w	fp, #0
 8011a60:	1b7d      	subs	r5, r7, r5
 8011a62:	ab09      	add	r3, sp, #36	; 0x24
 8011a64:	f813 300b 	ldrb.w	r3, [r3, fp]
 8011a68:	2b04      	cmp	r3, #4
 8011a6a:	d827      	bhi.n	8011abc <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011a6c:	e8df f003 	tbb	[pc, r3]
 8011a70:	601d6f78 	.word	0x601d6f78
 8011a74:	69          	.byte	0x69
 8011a75:	00          	.byte	0x00
 8011a76:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011a78:	9309      	str	r3, [sp, #36]	; 0x24
 8011a7a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8011a7c:	f8d0 a028 	ldr.w	sl, [r0, #40]	; 0x28
 8011a80:	9303      	str	r3, [sp, #12]
 8011a82:	2a00      	cmp	r2, #0
 8011a84:	f43f af7f 	beq.w	8011986 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x46>
 8011a88:	3501      	adds	r5, #1
 8011a8a:	e77c      	b.n	8011986 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x46>
 8011a8c:	9600      	str	r6, [sp, #0]
 8011a8e:	462b      	mov	r3, r5
 8011a90:	a80c      	add	r0, sp, #48	; 0x30
 8011a92:	f00c f8f5 	bl	801dc80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
 8011a96:	e7b3      	b.n	8011a00 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0xc0>
 8011a98:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011a9c:	4271      	negs	r1, r6
 8011a9e:	a80c      	add	r0, sp, #48	; 0x30
 8011aa0:	f7ff fc61 	bl	8011366 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc.isra.0>
 8011aa4:	463a      	mov	r2, r7
 8011aa6:	4629      	mov	r1, r5
 8011aa8:	e7b5      	b.n	8011a16 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0xd6>
 8011aaa:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8011aae:	059b      	lsls	r3, r3, #22
 8011ab0:	d504      	bpl.n	8011abc <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011ab2:	e9d4 1205 	ldrd	r1, r2, [r4, #20]
 8011ab6:	a812      	add	r0, sp, #72	; 0x48
 8011ab8:	f00c f982 	bl	801ddc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
 8011abc:	f10b 0b01 	add.w	fp, fp, #1
 8011ac0:	f1bb 0f04 	cmp.w	fp, #4
 8011ac4:	d1cd      	bne.n	8011a62 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x122>
 8011ac6:	f1ba 0f01 	cmp.w	sl, #1
 8011aca:	d906      	bls.n	8011ada <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x19a>
 8011acc:	9903      	ldr	r1, [sp, #12]
 8011ace:	f10a 32ff 	add.w	r2, sl, #4294967295	; 0xffffffff
 8011ad2:	3101      	adds	r1, #1
 8011ad4:	a812      	add	r0, sp, #72	; 0x48
 8011ad6:	f00c f973 	bl	801ddc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
 8011ada:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8011adc:	428f      	cmp	r7, r1
 8011ade:	d949      	bls.n	8011b74 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x234>
 8011ae0:	9b04      	ldr	r3, [sp, #16]
 8011ae2:	2b20      	cmp	r3, #32
 8011ae4:	eba7 0101 	sub.w	r1, r7, r1
 8011ae8:	d13d      	bne.n	8011b66 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x226>
 8011aea:	464a      	mov	r2, r9
 8011aec:	a812      	add	r0, sp, #72	; 0x48
 8011aee:	f7ff fc3a 	bl	8011366 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc.isra.0>
 8011af2:	ac0a      	add	r4, sp, #40	; 0x28
 8011af4:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8011af8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011afa:	9700      	str	r7, [sp, #0]
 8011afc:	4620      	mov	r0, r4
 8011afe:	f7ff ff05 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 8011b02:	e894 0003 	ldmia.w	r4, {r0, r1}
 8011b06:	9006      	str	r0, [sp, #24]
 8011b08:	a812      	add	r0, sp, #72	; 0x48
 8011b0a:	f88d 101c 	strb.w	r1, [sp, #28]
 8011b0e:	f00b ff05 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8011b12:	a80c      	add	r0, sp, #48	; 0x30
 8011b14:	f00b ff02 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8011b18:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8011b1c:	2300      	movs	r3, #0
 8011b1e:	f8c8 3008 	str.w	r3, [r8, #8]
 8011b22:	9b05      	ldr	r3, [sp, #20]
 8011b24:	e883 0003 	stmia.w	r3, {r0, r1}
 8011b28:	4618      	mov	r0, r3
 8011b2a:	b019      	add	sp, #100	; 0x64
 8011b2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b30:	f1ba 0f00 	cmp.w	sl, #0
 8011b34:	d0c2      	beq.n	8011abc <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011b36:	9b03      	ldr	r3, [sp, #12]
 8011b38:	7819      	ldrb	r1, [r3, #0]
 8011b3a:	a812      	add	r0, sp, #72	; 0x48
 8011b3c:	f00c f814 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8011b40:	e7bc      	b.n	8011abc <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011b42:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8011b46:	a812      	add	r0, sp, #72	; 0x48
 8011b48:	f00c f918 	bl	801dd7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8011b4c:	e7b6      	b.n	8011abc <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011b4e:	b12e      	cbz	r6, 8011b5c <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x21c>
 8011b50:	464a      	mov	r2, r9
 8011b52:	4629      	mov	r1, r5
 8011b54:	a812      	add	r0, sp, #72	; 0x48
 8011b56:	f7ff fc06 	bl	8011366 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc.isra.0>
 8011b5a:	e7af      	b.n	8011abc <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011b5c:	4649      	mov	r1, r9
 8011b5e:	e7ec      	b.n	8011b3a <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x1fa>
 8011b60:	2e00      	cmp	r6, #0
 8011b62:	d0ab      	beq.n	8011abc <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011b64:	e7f4      	b.n	8011b50 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x210>
 8011b66:	460a      	mov	r2, r1
 8011b68:	464b      	mov	r3, r9
 8011b6a:	2100      	movs	r1, #0
 8011b6c:	a812      	add	r0, sp, #72	; 0x48
 8011b6e:	f7ff fc97 	bl	80114a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc.isra.0>
 8011b72:	e7be      	b.n	8011af2 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x1b2>
 8011b74:	460f      	mov	r7, r1
 8011b76:	e7bc      	b.n	8011af2 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x1b2>

08011b78 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE>:
 8011b78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b7c:	b099      	sub	sp, #100	; 0x64
 8011b7e:	a906      	add	r1, sp, #24
 8011b80:	f8dd 8088 	ldr.w	r8, [sp, #136]	; 0x88
 8011b84:	9005      	str	r0, [sp, #20]
 8011b86:	f108 046c 	add.w	r4, r8, #108	; 0x6c
 8011b8a:	4620      	mov	r0, r4
 8011b8c:	e881 000c 	stmia.w	r1, {r2, r3}
 8011b90:	9f24      	ldr	r7, [sp, #144]	; 0x90
 8011b92:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8011b96:	f006 fd09 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8011b9a:	4606      	mov	r6, r0
 8011b9c:	4620      	mov	r0, r4
 8011b9e:	f7ff fbed 	bl	801137c <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb0EEEclERKSt6locale.isra.0>
 8011ba2:	683d      	ldr	r5, [r7, #0]
 8011ba4:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8011ba8:	782a      	ldrb	r2, [r5, #0]
 8011baa:	429a      	cmp	r2, r3
 8011bac:	4604      	mov	r4, r0
 8011bae:	687a      	ldr	r2, [r7, #4]
 8011bb0:	d07d      	beq.n	8011cae <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x136>
 8011bb2:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011bb4:	9309      	str	r3, [sp, #36]	; 0x24
 8011bb6:	f8d0 a020 	ldr.w	sl, [r0, #32]
 8011bba:	69c3      	ldr	r3, [r0, #28]
 8011bbc:	9303      	str	r3, [sp, #12]
 8011bbe:	442a      	add	r2, r5
 8011bc0:	462b      	mov	r3, r5
 8011bc2:	429a      	cmp	r2, r3
 8011bc4:	461f      	mov	r7, r3
 8011bc6:	d906      	bls.n	8011bd6 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x5e>
 8011bc8:	7838      	ldrb	r0, [r7, #0]
 8011bca:	69b1      	ldr	r1, [r6, #24]
 8011bcc:	5c09      	ldrb	r1, [r1, r0]
 8011bce:	0749      	lsls	r1, r1, #29
 8011bd0:	f103 0301 	add.w	r3, r3, #1
 8011bd4:	d4f5      	bmi.n	8011bc2 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x4a>
 8011bd6:	1b7f      	subs	r7, r7, r5
 8011bd8:	f000 80ba 	beq.w	8011d50 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x1d8>
 8011bdc:	ab0e      	add	r3, sp, #56	; 0x38
 8011bde:	f04f 0b00 	mov.w	fp, #0
 8011be2:	0079      	lsls	r1, r7, #1
 8011be4:	a80c      	add	r0, sp, #48	; 0x30
 8011be6:	930c      	str	r3, [sp, #48]	; 0x30
 8011be8:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
 8011bec:	f88d b038 	strb.w	fp, [sp, #56]	; 0x38
 8011bf0:	f00b ff88 	bl	801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
 8011bf4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011bf6:	1afe      	subs	r6, r7, r3
 8011bf8:	455e      	cmp	r6, fp
 8011bfa:	dd1d      	ble.n	8011c38 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0xc0>
 8011bfc:	68e1      	ldr	r1, [r4, #12]
 8011bfe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011c00:	455b      	cmp	r3, fp
 8011c02:	bfb8      	it	lt
 8011c04:	463e      	movlt	r6, r7
 8011c06:	2900      	cmp	r1, #0
 8011c08:	d05c      	beq.n	8011cc4 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x14c>
 8011c0a:	0073      	lsls	r3, r6, #1
 8011c0c:	4659      	mov	r1, fp
 8011c0e:	f8cd b000 	str.w	fp, [sp]
 8011c12:	a80c      	add	r0, sp, #48	; 0x30
 8011c14:	f00b ffc8 	bl	801dba8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
 8011c18:	19ab      	adds	r3, r5, r6
 8011c1a:	7ca1      	ldrb	r1, [r4, #18]
 8011c1c:	980c      	ldr	r0, [sp, #48]	; 0x30
 8011c1e:	e9cd 5300 	strd	r5, r3, [sp]
 8011c22:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
 8011c26:	f006 ffcd 	bl	8018bc4 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_>
 8011c2a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011c2c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8011c30:	1a41      	subs	r1, r0, r1
 8011c32:	a80c      	add	r0, sp, #48	; 0x30
 8011c34:	f7ff fbd6 	bl	80113e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0>
 8011c38:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011c3a:	2b00      	cmp	r3, #0
 8011c3c:	dd0a      	ble.n	8011c54 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0xdc>
 8011c3e:	7c61      	ldrb	r1, [r4, #17]
 8011c40:	a80c      	add	r0, sp, #48	; 0x30
 8011c42:	f00b ff91 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8011c46:	2e00      	cmp	r6, #0
 8011c48:	db42      	blt.n	8011cd0 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x158>
 8011c4a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011c4c:	19a9      	adds	r1, r5, r6
 8011c4e:	a80c      	add	r0, sp, #48	; 0x30
 8011c50:	f00c f8b6 	bl	801ddc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
 8011c54:	f8d8 500c 	ldr.w	r5, [r8, #12]
 8011c58:	f005 03b0 	and.w	r3, r5, #176	; 0xb0
 8011c5c:	9304      	str	r3, [sp, #16]
 8011c5e:	f415 7500 	ands.w	r5, r5, #512	; 0x200
 8011c62:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011c64:	bf18      	it	ne
 8011c66:	69a5      	ldrne	r5, [r4, #24]
 8011c68:	eb0a 0203 	add.w	r2, sl, r3
 8011c6c:	4415      	add	r5, r2
 8011c6e:	ab14      	add	r3, sp, #80	; 0x50
 8011c70:	2600      	movs	r6, #0
 8011c72:	0069      	lsls	r1, r5, #1
 8011c74:	a812      	add	r0, sp, #72	; 0x48
 8011c76:	9312      	str	r3, [sp, #72]	; 0x48
 8011c78:	9613      	str	r6, [sp, #76]	; 0x4c
 8011c7a:	f88d 6050 	strb.w	r6, [sp, #80]	; 0x50
 8011c7e:	f00b ff41 	bl	801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
 8011c82:	9b04      	ldr	r3, [sp, #16]
 8011c84:	f8d8 7008 	ldr.w	r7, [r8, #8]
 8011c88:	2b10      	cmp	r3, #16
 8011c8a:	d103      	bne.n	8011c94 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x11c>
 8011c8c:	42bd      	cmp	r5, r7
 8011c8e:	bf2c      	ite	cs
 8011c90:	2600      	movcs	r6, #0
 8011c92:	2601      	movcc	r6, #1
 8011c94:	f04f 0b00 	mov.w	fp, #0
 8011c98:	1b7d      	subs	r5, r7, r5
 8011c9a:	ab09      	add	r3, sp, #36	; 0x24
 8011c9c:	f813 300b 	ldrb.w	r3, [r3, fp]
 8011ca0:	2b04      	cmp	r3, #4
 8011ca2:	d827      	bhi.n	8011cf4 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011ca4:	e8df f003 	tbb	[pc, r3]
 8011ca8:	601d6f78 	.word	0x601d6f78
 8011cac:	69          	.byte	0x69
 8011cad:	00          	.byte	0x00
 8011cae:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011cb0:	9309      	str	r3, [sp, #36]	; 0x24
 8011cb2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8011cb4:	f8d0 a028 	ldr.w	sl, [r0, #40]	; 0x28
 8011cb8:	9303      	str	r3, [sp, #12]
 8011cba:	2a00      	cmp	r2, #0
 8011cbc:	f43f af7f 	beq.w	8011bbe <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x46>
 8011cc0:	3501      	adds	r5, #1
 8011cc2:	e77c      	b.n	8011bbe <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x46>
 8011cc4:	9600      	str	r6, [sp, #0]
 8011cc6:	462b      	mov	r3, r5
 8011cc8:	a80c      	add	r0, sp, #48	; 0x30
 8011cca:	f00b ffd9 	bl	801dc80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
 8011cce:	e7b3      	b.n	8011c38 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0xc0>
 8011cd0:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011cd4:	4271      	negs	r1, r6
 8011cd6:	a80c      	add	r0, sp, #48	; 0x30
 8011cd8:	f7ff fb45 	bl	8011366 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc.isra.0>
 8011cdc:	463a      	mov	r2, r7
 8011cde:	4629      	mov	r1, r5
 8011ce0:	e7b5      	b.n	8011c4e <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0xd6>
 8011ce2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8011ce6:	059b      	lsls	r3, r3, #22
 8011ce8:	d504      	bpl.n	8011cf4 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011cea:	e9d4 1205 	ldrd	r1, r2, [r4, #20]
 8011cee:	a812      	add	r0, sp, #72	; 0x48
 8011cf0:	f00c f866 	bl	801ddc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
 8011cf4:	f10b 0b01 	add.w	fp, fp, #1
 8011cf8:	f1bb 0f04 	cmp.w	fp, #4
 8011cfc:	d1cd      	bne.n	8011c9a <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x122>
 8011cfe:	f1ba 0f01 	cmp.w	sl, #1
 8011d02:	d906      	bls.n	8011d12 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x19a>
 8011d04:	9903      	ldr	r1, [sp, #12]
 8011d06:	f10a 32ff 	add.w	r2, sl, #4294967295	; 0xffffffff
 8011d0a:	3101      	adds	r1, #1
 8011d0c:	a812      	add	r0, sp, #72	; 0x48
 8011d0e:	f00c f857 	bl	801ddc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
 8011d12:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8011d14:	428f      	cmp	r7, r1
 8011d16:	d949      	bls.n	8011dac <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x234>
 8011d18:	9b04      	ldr	r3, [sp, #16]
 8011d1a:	2b20      	cmp	r3, #32
 8011d1c:	eba7 0101 	sub.w	r1, r7, r1
 8011d20:	d13d      	bne.n	8011d9e <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x226>
 8011d22:	464a      	mov	r2, r9
 8011d24:	a812      	add	r0, sp, #72	; 0x48
 8011d26:	f7ff fb1e 	bl	8011366 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc.isra.0>
 8011d2a:	ac0a      	add	r4, sp, #40	; 0x28
 8011d2c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8011d30:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011d32:	9700      	str	r7, [sp, #0]
 8011d34:	4620      	mov	r0, r4
 8011d36:	f7ff fde9 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 8011d3a:	e894 0003 	ldmia.w	r4, {r0, r1}
 8011d3e:	9006      	str	r0, [sp, #24]
 8011d40:	a812      	add	r0, sp, #72	; 0x48
 8011d42:	f88d 101c 	strb.w	r1, [sp, #28]
 8011d46:	f00b fde9 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8011d4a:	a80c      	add	r0, sp, #48	; 0x30
 8011d4c:	f00b fde6 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8011d50:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8011d54:	2300      	movs	r3, #0
 8011d56:	f8c8 3008 	str.w	r3, [r8, #8]
 8011d5a:	9b05      	ldr	r3, [sp, #20]
 8011d5c:	e883 0003 	stmia.w	r3, {r0, r1}
 8011d60:	4618      	mov	r0, r3
 8011d62:	b019      	add	sp, #100	; 0x64
 8011d64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d68:	f1ba 0f00 	cmp.w	sl, #0
 8011d6c:	d0c2      	beq.n	8011cf4 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011d6e:	9b03      	ldr	r3, [sp, #12]
 8011d70:	7819      	ldrb	r1, [r3, #0]
 8011d72:	a812      	add	r0, sp, #72	; 0x48
 8011d74:	f00b fef8 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8011d78:	e7bc      	b.n	8011cf4 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011d7a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8011d7e:	a812      	add	r0, sp, #72	; 0x48
 8011d80:	f00b fffc 	bl	801dd7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8011d84:	e7b6      	b.n	8011cf4 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011d86:	b12e      	cbz	r6, 8011d94 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x21c>
 8011d88:	464a      	mov	r2, r9
 8011d8a:	4629      	mov	r1, r5
 8011d8c:	a812      	add	r0, sp, #72	; 0x48
 8011d8e:	f7ff faea 	bl	8011366 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc.isra.0>
 8011d92:	e7af      	b.n	8011cf4 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011d94:	4649      	mov	r1, r9
 8011d96:	e7ec      	b.n	8011d72 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x1fa>
 8011d98:	2e00      	cmp	r6, #0
 8011d9a:	d0ab      	beq.n	8011cf4 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x17c>
 8011d9c:	e7f4      	b.n	8011d88 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x210>
 8011d9e:	460a      	mov	r2, r1
 8011da0:	464b      	mov	r3, r9
 8011da2:	2100      	movs	r1, #0
 8011da4:	a812      	add	r0, sp, #72	; 0x48
 8011da6:	f7ff fb7b 	bl	80114a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc.isra.0>
 8011daa:	e7be      	b.n	8011d2a <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x1b2>
 8011dac:	460f      	mov	r7, r1
 8011dae:	e7bc      	b.n	8011d2a <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x1b2>

08011db0 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES4_bRSt8ios_basece>:
 8011db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011db4:	ed2d 8b02 	vpush	{d8}
 8011db8:	eeb0 8a40 	vmov.f32	s16, s0
 8011dbc:	eef0 8a60 	vmov.f32	s17, s1
 8011dc0:	b091      	sub	sp, #68	; 0x44
 8011dc2:	af04      	add	r7, sp, #16
 8011dc4:	f107 0408 	add.w	r4, r7, #8
 8011dc8:	e884 000c 	stmia.w	r4, {r2, r3}
 8011dcc:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8011dd0:	607b      	str	r3, [r7, #4]
 8011dd2:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8011dd4:	f897 a068 	ldrb.w	sl, [r7, #104]	; 0x68
 8011dd8:	4605      	mov	r5, r0
 8011dda:	4688      	mov	r8, r1
 8011ddc:	f107 0014 	add.w	r0, r7, #20
 8011de0:	f103 016c 	add.w	r1, r3, #108	; 0x6c
 8011de4:	f7fa fa62 	bl	800c2ac <_ZNSt6localeC1ERKS_>
 8011de8:	f107 0014 	add.w	r0, r7, #20
 8011dec:	f006 fbde 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8011df0:	b090      	sub	sp, #64	; 0x40
 8011df2:	4681      	mov	r9, r0
 8011df4:	f7fa fa72 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8011df8:	ae04      	add	r6, sp, #16
 8011dfa:	f04f 0b00 	mov.w	fp, #0
 8011dfe:	61b8      	str	r0, [r7, #24]
 8011e00:	4631      	mov	r1, r6
 8011e02:	ed8d 8b02 	vstr	d8, [sp, #8]
 8011e06:	4b2e      	ldr	r3, [pc, #184]	; (8011ec0 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES4_bRSt8ios_basece+0x110>)
 8011e08:	f8cd b000 	str.w	fp, [sp]
 8011e0c:	2240      	movs	r2, #64	; 0x40
 8011e0e:	f107 0018 	add.w	r0, r7, #24
 8011e12:	f7ff fb5b 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 8011e16:	283f      	cmp	r0, #63	; 0x3f
 8011e18:	4601      	mov	r1, r0
 8011e1a:	dd16      	ble.n	8011e4a <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES4_bRSt8ios_basece+0x9a>
 8011e1c:	3108      	adds	r1, #8
 8011e1e:	f021 0107 	bic.w	r1, r1, #7
 8011e22:	ebad 0d01 	sub.w	sp, sp, r1
 8011e26:	1c42      	adds	r2, r0, #1
 8011e28:	603a      	str	r2, [r7, #0]
 8011e2a:	f7fa fa57 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8011e2e:	ae04      	add	r6, sp, #16
 8011e30:	61b8      	str	r0, [r7, #24]
 8011e32:	4631      	mov	r1, r6
 8011e34:	ed8d 8b02 	vstr	d8, [sp, #8]
 8011e38:	4b21      	ldr	r3, [pc, #132]	; (8011ec0 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES4_bRSt8ios_basece+0x110>)
 8011e3a:	683a      	ldr	r2, [r7, #0]
 8011e3c:	f8cd b000 	str.w	fp, [sp]
 8011e40:	f107 0018 	add.w	r0, r7, #24
 8011e44:	f7ff fb42 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 8011e48:	4601      	mov	r1, r0
 8011e4a:	f107 0320 	add.w	r3, r7, #32
 8011e4e:	2200      	movs	r2, #0
 8011e50:	f107 0018 	add.w	r0, r7, #24
 8011e54:	61bb      	str	r3, [r7, #24]
 8011e56:	6039      	str	r1, [r7, #0]
 8011e58:	f00b fdb7 	bl	801d9ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>
 8011e5c:	6839      	ldr	r1, [r7, #0]
 8011e5e:	69bb      	ldr	r3, [r7, #24]
 8011e60:	1872      	adds	r2, r6, r1
 8011e62:	4648      	mov	r0, r9
 8011e64:	4631      	mov	r1, r6
 8011e66:	f7ff fb7d 	bl	8011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>
 8011e6a:	687b      	ldr	r3, [r7, #4]
 8011e6c:	b1d3      	cbz	r3, 8011ea4 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES4_bRSt8ios_basece+0xf4>
 8011e6e:	f107 0318 	add.w	r3, r7, #24
 8011e72:	e9cd a301 	strd	sl, r3, [sp, #4]
 8011e76:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8011e78:	9300      	str	r3, [sp, #0]
 8011e7a:	4641      	mov	r1, r8
 8011e7c:	e894 000c 	ldmia.w	r4, {r2, r3}
 8011e80:	4628      	mov	r0, r5
 8011e82:	f7ff fd5d 	bl	8011940 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE>
 8011e86:	f107 0018 	add.w	r0, r7, #24
 8011e8a:	f00b fd47 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8011e8e:	f107 0014 	add.w	r0, r7, #20
 8011e92:	f7fa fa79 	bl	800c388 <_ZNSt6localeD1Ev>
 8011e96:	4628      	mov	r0, r5
 8011e98:	3734      	adds	r7, #52	; 0x34
 8011e9a:	46bd      	mov	sp, r7
 8011e9c:	ecbd 8b02 	vpop	{d8}
 8011ea0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ea4:	f107 0318 	add.w	r3, r7, #24
 8011ea8:	e9cd a301 	strd	sl, r3, [sp, #4]
 8011eac:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8011eae:	9300      	str	r3, [sp, #0]
 8011eb0:	4641      	mov	r1, r8
 8011eb2:	e894 000c 	ldmia.w	r4, {r2, r3}
 8011eb6:	4628      	mov	r0, r5
 8011eb8:	f7ff fe5e 	bl	8011b78 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE>
 8011ebc:	e7e3      	b.n	8011e86 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES4_bRSt8ios_basece+0xd6>
 8011ebe:	bf00      	nop
 8011ec0:	0802f7f2 	.word	0x0802f7f2

08011ec4 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES4_bRSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE>:
 8011ec4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011ec6:	b087      	sub	sp, #28
 8011ec8:	ac04      	add	r4, sp, #16
 8011eca:	e884 000c 	stmia.w	r4, {r2, r3}
 8011ece:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8011ed0:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8011ed4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011ed6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8011eda:	9300      	str	r3, [sp, #0]
 8011edc:	e9cd 2601 	strd	r2, r6, [sp, #4]
 8011ee0:	4605      	mov	r5, r0
 8011ee2:	e894 000c 	ldmia.w	r4, {r2, r3}
 8011ee6:	b127      	cbz	r7, 8011ef2 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES4_bRSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x2e>
 8011ee8:	f7ff fd2a 	bl	8011940 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE>
 8011eec:	4628      	mov	r0, r5
 8011eee:	b007      	add	sp, #28
 8011ef0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011ef2:	f7ff fe41 	bl	8011b78 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES4_S4_RSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE>
 8011ef6:	e7f9      	b.n	8011eec <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES4_bRSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE+0x28>

08011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>:
 8011ef8:	b510      	push	{r4, lr}
 8011efa:	4604      	mov	r4, r0
 8011efc:	e9d0 3000 	ldrd	r3, r0, [r0]
 8011f00:	b143      	cbz	r3, 8011f14 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv+0x1c>
 8011f02:	1c42      	adds	r2, r0, #1
 8011f04:	d106      	bne.n	8011f14 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv+0x1c>
 8011f06:	4618      	mov	r0, r3
 8011f08:	f00b fcc7 	bl	801d89a <_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv>
 8011f0c:	1c43      	adds	r3, r0, #1
 8011f0e:	bf04      	itt	eq
 8011f10:	2300      	moveq	r3, #0
 8011f12:	6023      	streq	r3, [r4, #0]
 8011f14:	bd10      	pop	{r4, pc}

08011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>:
 8011f16:	b538      	push	{r3, r4, r5, lr}
 8011f18:	460d      	mov	r5, r1
 8011f1a:	f7ff ffed 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8011f1e:	4604      	mov	r4, r0
 8011f20:	4628      	mov	r0, r5
 8011f22:	f7ff ffe9 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8011f26:	1c43      	adds	r3, r0, #1
 8011f28:	4258      	negs	r0, r3
 8011f2a:	f104 0201 	add.w	r2, r4, #1
 8011f2e:	4158      	adcs	r0, r3
 8011f30:	4254      	negs	r4, r2
 8011f32:	4154      	adcs	r4, r2
 8011f34:	1b01      	subs	r1, r0, r4
 8011f36:	4248      	negs	r0, r1
 8011f38:	4148      	adcs	r0, r1
 8011f3a:	bd38      	pop	{r3, r4, r5, pc}

08011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>:
 8011f3c:	b508      	push	{r3, lr}
 8011f3e:	f7ff ffea 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 8011f42:	f080 0001 	eor.w	r0, r0, #1
 8011f46:	b2c0      	uxtb	r0, r0
 8011f48:	bd08      	pop	{r3, pc}

08011f4a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>:
 8011f4a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f4e:	4605      	mov	r5, r0
 8011f50:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8011f54:	a902      	add	r1, sp, #8
 8011f56:	306c      	adds	r0, #108	; 0x6c
 8011f58:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 8011f5c:	e901 000c 	stmdb	r1, {r2, r3}
 8011f60:	f006 fb24 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8011f64:	f1b9 0f02 	cmp.w	r9, #2
 8011f68:	4682      	mov	sl, r0
 8011f6a:	d02f      	beq.n	8011fcc <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x82>
 8011f6c:	f1b9 0f04 	cmp.w	r9, #4
 8011f70:	bf0c      	ite	eq
 8011f72:	f44f 777a 	moveq.w	r7, #1000	; 0x3e8
 8011f76:	2701      	movne	r7, #1
 8011f78:	2400      	movs	r4, #0
 8011f7a:	46a0      	mov	r8, r4
 8011f7c:	f04f 0b0a 	mov.w	fp, #10
 8011f80:	a90c      	add	r1, sp, #48	; 0x30
 8011f82:	4668      	mov	r0, sp
 8011f84:	f7ff ffda 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8011f88:	b310      	cbz	r0, 8011fd0 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x86>
 8011f8a:	45c8      	cmp	r8, r9
 8011f8c:	d022      	beq.n	8011fd4 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x8a>
 8011f8e:	4668      	mov	r0, sp
 8011f90:	f7ff ffb2 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8011f94:	222a      	movs	r2, #42	; 0x2a
 8011f96:	b2c1      	uxtb	r1, r0
 8011f98:	4650      	mov	r0, sl
 8011f9a:	f7ff fb02 	bl	80115a2 <_ZNKSt5ctypeIcE6narrowEcc>
 8011f9e:	3830      	subs	r0, #48	; 0x30
 8011fa0:	b2c2      	uxtb	r2, r0
 8011fa2:	2a09      	cmp	r2, #9
 8011fa4:	d821      	bhi.n	8011fea <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 8011fa6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011fa8:	fb0b 0404 	mla	r4, fp, r4, r0
 8011fac:	fb04 f207 	mul.w	r2, r4, r7
 8011fb0:	429a      	cmp	r2, r3
 8011fb2:	dc1a      	bgt.n	8011fea <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 8011fb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011fb6:	443a      	add	r2, r7
 8011fb8:	429a      	cmp	r2, r3
 8011fba:	dd16      	ble.n	8011fea <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 8011fbc:	fbb7 f7fb 	udiv	r7, r7, fp
 8011fc0:	4668      	mov	r0, sp
 8011fc2:	f7ff fa2f 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8011fc6:	f108 0801 	add.w	r8, r8, #1
 8011fca:	e7d9      	b.n	8011f80 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x36>
 8011fcc:	270a      	movs	r7, #10
 8011fce:	e7d3      	b.n	8011f78 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x2e>
 8011fd0:	45c8      	cmp	r8, r9
 8011fd2:	d10a      	bne.n	8011fea <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 8011fd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011fd6:	601c      	str	r4, [r3, #0]
 8011fd8:	ab02      	add	r3, sp, #8
 8011fda:	e913 0003 	ldmdb	r3, {r0, r1}
 8011fde:	e885 0003 	stmia.w	r5, {r0, r1}
 8011fe2:	4628      	mov	r0, r5
 8011fe4:	b003      	add	sp, #12
 8011fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011fea:	f1b9 0f04 	cmp.w	r9, #4
 8011fee:	d104      	bne.n	8011ffa <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xb0>
 8011ff0:	f1b8 0f02 	cmp.w	r8, #2
 8011ff4:	d101      	bne.n	8011ffa <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xb0>
 8011ff6:	3c64      	subs	r4, #100	; 0x64
 8011ff8:	e7ec      	b.n	8011fd4 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x8a>
 8011ffa:	6833      	ldr	r3, [r6, #0]
 8011ffc:	f043 0304 	orr.w	r3, r3, #4
 8012000:	6033      	str	r3, [r6, #0]
 8012002:	e7e9      	b.n	8011fd8 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x8e>

08012004 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>:
 8012004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012008:	b085      	sub	sp, #20
 801200a:	af00      	add	r7, sp, #0
 801200c:	f107 0408 	add.w	r4, r7, #8
 8012010:	6078      	str	r0, [r7, #4]
 8012012:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8012014:	f8d7 9044 	ldr.w	r9, [r7, #68]	; 0x44
 8012018:	306c      	adds	r0, #108	; 0x6c
 801201a:	e884 000c 	stmia.w	r4, {r2, r3}
 801201e:	f006 fac5 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8012022:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8012024:	009b      	lsls	r3, r3, #2
 8012026:	3307      	adds	r3, #7
 8012028:	f023 0307 	bic.w	r3, r3, #7
 801202c:	4682      	mov	sl, r0
 801202e:	ebad 0d03 	sub.w	sp, sp, r3
 8012032:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8012036:	4620      	mov	r0, r4
 8012038:	466e      	mov	r6, sp
 801203a:	f7ff ff7f 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801203e:	2800      	cmp	r0, #0
 8012040:	d043      	beq.n	80120ca <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xc6>
 8012042:	4620      	mov	r0, r4
 8012044:	f7ff ff58 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012048:	f04f 0800 	mov.w	r8, #0
 801204c:	fa5f fb80 	uxtb.w	fp, r0
 8012050:	4645      	mov	r5, r8
 8012052:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8012054:	4598      	cmp	r8, r3
 8012056:	d010      	beq.n	801207a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x76>
 8012058:	f859 1028 	ldr.w	r1, [r9, r8, lsl #2]
 801205c:	7809      	ldrb	r1, [r1, #0]
 801205e:	4559      	cmp	r1, fp
 8012060:	d105      	bne.n	801206e <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x6a>
 8012062:	f846 8025 	str.w	r8, [r6, r5, lsl #2]
 8012066:	3501      	adds	r5, #1
 8012068:	f108 0801 	add.w	r8, r8, #1
 801206c:	e7f1      	b.n	8012052 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x4e>
 801206e:	4650      	mov	r0, sl
 8012070:	f7ff fa64 	bl	801153c <_ZNKSt5ctypeIcE7toupperEc>
 8012074:	4558      	cmp	r0, fp
 8012076:	d1f7      	bne.n	8012068 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x64>
 8012078:	e7f3      	b.n	8012062 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x5e>
 801207a:	f04f 0a00 	mov.w	sl, #0
 801207e:	2d01      	cmp	r5, #1
 8012080:	d94e      	bls.n	8012120 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x11c>
 8012082:	46b0      	mov	r8, r6
 8012084:	f858 3b04 	ldr.w	r3, [r8], #4
 8012088:	f859 0023 	ldr.w	r0, [r9, r3, lsl #2]
 801208c:	f7ee f8fa 	bl	8000284 <strlen>
 8012090:	eb06 0185 	add.w	r1, r6, r5, lsl #2
 8012094:	4683      	mov	fp, r0
 8012096:	f858 0b04 	ldr.w	r0, [r8], #4
 801209a:	6039      	str	r1, [r7, #0]
 801209c:	f859 0020 	ldr.w	r0, [r9, r0, lsl #2]
 80120a0:	f7ee f8f0 	bl	8000284 <strlen>
 80120a4:	6839      	ldr	r1, [r7, #0]
 80120a6:	4583      	cmp	fp, r0
 80120a8:	bf28      	it	cs
 80120aa:	4683      	movcs	fp, r0
 80120ac:	4541      	cmp	r1, r8
 80120ae:	d1f2      	bne.n	8012096 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x92>
 80120b0:	4620      	mov	r0, r4
 80120b2:	f10a 0a01 	add.w	sl, sl, #1
 80120b6:	f7ff f9b5 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 80120ba:	45da      	cmp	sl, fp
 80120bc:	d205      	bcs.n	80120ca <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xc6>
 80120be:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80120c2:	4620      	mov	r0, r4
 80120c4:	f7ff ff3a 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80120c8:	b978      	cbnz	r0, 80120ea <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xe6>
 80120ca:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80120cc:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 80120ce:	681b      	ldr	r3, [r3, #0]
 80120d0:	f043 0304 	orr.w	r3, r3, #4
 80120d4:	6013      	str	r3, [r2, #0]
 80120d6:	e894 0003 	ldmia.w	r4, {r0, r1}
 80120da:	687b      	ldr	r3, [r7, #4]
 80120dc:	3714      	adds	r7, #20
 80120de:	e883 0003 	stmia.w	r3, {r0, r1}
 80120e2:	4618      	mov	r0, r3
 80120e4:	46bd      	mov	sp, r7
 80120e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80120ea:	f04f 0b00 	mov.w	fp, #0
 80120ee:	f856 202b 	ldr.w	r2, [r6, fp, lsl #2]
 80120f2:	f859 2022 	ldr.w	r2, [r9, r2, lsl #2]
 80120f6:	4620      	mov	r0, r4
 80120f8:	f812 200a 	ldrb.w	r2, [r2, sl]
 80120fc:	603a      	str	r2, [r7, #0]
 80120fe:	f7ff fefb 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012102:	683a      	ldr	r2, [r7, #0]
 8012104:	b2c0      	uxtb	r0, r0
 8012106:	4282      	cmp	r2, r0
 8012108:	bf17      	itett	ne
 801210a:	f105 35ff 	addne.w	r5, r5, #4294967295	; 0xffffffff
 801210e:	f10b 0b01 	addeq.w	fp, fp, #1
 8012112:	f856 2025 	ldrne.w	r2, [r6, r5, lsl #2]
 8012116:	f846 202b 	strne.w	r2, [r6, fp, lsl #2]
 801211a:	455d      	cmp	r5, fp
 801211c:	d8e7      	bhi.n	80120ee <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xea>
 801211e:	e7ae      	b.n	801207e <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x7a>
 8012120:	d1d3      	bne.n	80120ca <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xc6>
 8012122:	4620      	mov	r0, r4
 8012124:	f7ff f97e 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8012128:	6836      	ldr	r6, [r6, #0]
 801212a:	f859 9026 	ldr.w	r9, [r9, r6, lsl #2]
 801212e:	4648      	mov	r0, r9
 8012130:	f7ee f8a8 	bl	8000284 <strlen>
 8012134:	f10a 0a01 	add.w	sl, sl, #1
 8012138:	4605      	mov	r5, r0
 801213a:	45aa      	cmp	sl, r5
 801213c:	d214      	bcs.n	8012168 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x164>
 801213e:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8012142:	4620      	mov	r0, r4
 8012144:	f7ff fefa 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8012148:	2800      	cmp	r0, #0
 801214a:	d0be      	beq.n	80120ca <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xc6>
 801214c:	4620      	mov	r0, r4
 801214e:	f819 b00a 	ldrb.w	fp, [r9, sl]
 8012152:	f7ff fed1 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012156:	b2c0      	uxtb	r0, r0
 8012158:	4583      	cmp	fp, r0
 801215a:	d1b6      	bne.n	80120ca <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xc6>
 801215c:	4620      	mov	r0, r4
 801215e:	f7ff f961 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8012162:	f10a 0a01 	add.w	sl, sl, #1
 8012166:	e7e8      	b.n	801213a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x136>
 8012168:	d1af      	bne.n	80120ca <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xc6>
 801216a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801216c:	601e      	str	r6, [r3, #0]
 801216e:	e7b2      	b.n	80120d6 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xd2>

08012170 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>:
 8012170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012174:	b087      	sub	sp, #28
 8012176:	af00      	add	r7, sp, #0
 8012178:	4681      	mov	r9, r0
 801217a:	6d78      	ldr	r0, [r7, #84]	; 0x54
 801217c:	e9d7 ab13 	ldrd	sl, fp, [r7, #76]	; 0x4c
 8012180:	f107 0410 	add.w	r4, r7, #16
 8012184:	306c      	adds	r0, #108	; 0x6c
 8012186:	e884 000c 	stmia.w	r4, {r2, r3}
 801218a:	f006 fa0f 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 801218e:	466b      	mov	r3, sp
 8012190:	eba3 03cb 	sub.w	r3, r3, fp, lsl #3
 8012194:	4606      	mov	r6, r0
 8012196:	469d      	mov	sp, r3
 8012198:	f107 0140 	add.w	r1, r7, #64	; 0x40
 801219c:	4620      	mov	r0, r4
 801219e:	46e8      	mov	r8, sp
 80121a0:	f7ff fecc 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80121a4:	b3c0      	cbz	r0, 8012218 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xa8>
 80121a6:	4620      	mov	r0, r4
 80121a8:	f7ff fea6 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 80121ac:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80121b0:	60fb      	str	r3, [r7, #12]
 80121b2:	2300      	movs	r3, #0
 80121b4:	b2c2      	uxtb	r2, r0
 80121b6:	461d      	mov	r5, r3
 80121b8:	68f9      	ldr	r1, [r7, #12]
 80121ba:	4299      	cmp	r1, r3
 80121bc:	d013      	beq.n	80121e6 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x76>
 80121be:	f85a 1023 	ldr.w	r1, [sl, r3, lsl #2]
 80121c2:	7809      	ldrb	r1, [r1, #0]
 80121c4:	4291      	cmp	r1, r2
 80121c6:	d104      	bne.n	80121d2 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x62>
 80121c8:	f848 3025 	str.w	r3, [r8, r5, lsl #2]
 80121cc:	3501      	adds	r5, #1
 80121ce:	3301      	adds	r3, #1
 80121d0:	e7f2      	b.n	80121b8 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x48>
 80121d2:	4630      	mov	r0, r6
 80121d4:	e9c7 2301 	strd	r2, r3, [r7, #4]
 80121d8:	f7ff f9b0 	bl	801153c <_ZNKSt5ctypeIcE7toupperEc>
 80121dc:	687a      	ldr	r2, [r7, #4]
 80121de:	68bb      	ldr	r3, [r7, #8]
 80121e0:	4290      	cmp	r0, r2
 80121e2:	d1f4      	bne.n	80121ce <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x5e>
 80121e4:	e7f0      	b.n	80121c8 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x58>
 80121e6:	b1bd      	cbz	r5, 8012218 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xa8>
 80121e8:	4620      	mov	r0, r4
 80121ea:	f7ff f91b 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 80121ee:	00ab      	lsls	r3, r5, #2
 80121f0:	3307      	adds	r3, #7
 80121f2:	f023 0307 	bic.w	r3, r3, #7
 80121f6:	ebad 0d03 	sub.w	sp, sp, r3
 80121fa:	466e      	mov	r6, sp
 80121fc:	2400      	movs	r4, #0
 80121fe:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8012202:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8012206:	f7ee f83d 	bl	8000284 <strlen>
 801220a:	f846 0024 	str.w	r0, [r6, r4, lsl #2]
 801220e:	3401      	adds	r4, #1
 8012210:	42a5      	cmp	r5, r4
 8012212:	d1f4      	bne.n	80121fe <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x8e>
 8012214:	2501      	movs	r5, #1
 8012216:	e002      	b.n	801221e <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xae>
 8012218:	2400      	movs	r4, #0
 801221a:	4625      	mov	r5, r4
 801221c:	4626      	mov	r6, r4
 801221e:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8012222:	f107 0010 	add.w	r0, r7, #16
 8012226:	f7ff fe89 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801222a:	b360      	cbz	r0, 8012286 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x116>
 801222c:	f107 0010 	add.w	r0, r7, #16
 8012230:	f7ff fe62 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012234:	2300      	movs	r3, #0
 8012236:	b2c0      	uxtb	r0, r0
 8012238:	4619      	mov	r1, r3
 801223a:	429c      	cmp	r4, r3
 801223c:	d91b      	bls.n	8012276 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x106>
 801223e:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
 8012242:	42aa      	cmp	r2, r5
 8012244:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 8012248:	eb06 0c83 	add.w	ip, r6, r3, lsl #2
 801224c:	d802      	bhi.n	8012254 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xe4>
 801224e:	3101      	adds	r1, #1
 8012250:	3301      	adds	r3, #1
 8012252:	e7f2      	b.n	801223a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xca>
 8012254:	f858 2023 	ldr.w	r2, [r8, r3, lsl #2]
 8012258:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 801225c:	5d52      	ldrb	r2, [r2, r5]
 801225e:	4282      	cmp	r2, r0
 8012260:	d0f6      	beq.n	8012250 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xe0>
 8012262:	3c01      	subs	r4, #1
 8012264:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
 8012268:	f848 200e 	str.w	r2, [r8, lr]
 801226c:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8012270:	f8cc 2000 	str.w	r2, [ip]
 8012274:	e7e1      	b.n	801223a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xca>
 8012276:	428c      	cmp	r4, r1
 8012278:	d005      	beq.n	8012286 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x116>
 801227a:	f107 0010 	add.w	r0, r7, #16
 801227e:	f7ff f8d1 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8012282:	3501      	adds	r5, #1
 8012284:	e7cb      	b.n	801221e <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xae>
 8012286:	2c01      	cmp	r4, #1
 8012288:	d115      	bne.n	80122b6 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x146>
 801228a:	6833      	ldr	r3, [r6, #0]
 801228c:	42ab      	cmp	r3, r5
 801228e:	d119      	bne.n	80122c4 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x154>
 8012290:	f8d8 3000 	ldr.w	r3, [r8]
 8012294:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8012296:	455b      	cmp	r3, fp
 8012298:	bfa8      	it	ge
 801229a:	eba3 030b 	subge.w	r3, r3, fp
 801229e:	6013      	str	r3, [r2, #0]
 80122a0:	f107 0318 	add.w	r3, r7, #24
 80122a4:	e913 0003 	ldmdb	r3, {r0, r1}
 80122a8:	371c      	adds	r7, #28
 80122aa:	e889 0003 	stmia.w	r9, {r0, r1}
 80122ae:	4648      	mov	r0, r9
 80122b0:	46bd      	mov	sp, r7
 80122b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122b6:	2c02      	cmp	r4, #2
 80122b8:	d104      	bne.n	80122c4 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x154>
 80122ba:	6833      	ldr	r3, [r6, #0]
 80122bc:	42ab      	cmp	r3, r5
 80122be:	d0e7      	beq.n	8012290 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x120>
 80122c0:	6873      	ldr	r3, [r6, #4]
 80122c2:	e7e3      	b.n	801228c <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x11c>
 80122c4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80122c6:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80122c8:	681b      	ldr	r3, [r3, #0]
 80122ca:	f043 0304 	orr.w	r3, r3, #4
 80122ce:	e7e6      	b.n	801229e <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x12e>

080122d0 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc>:
 80122d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122d4:	b09f      	sub	sp, #124	; 0x7c
 80122d6:	460c      	mov	r4, r1
 80122d8:	f8dd a0a8 	ldr.w	sl, [sp, #168]	; 0xa8
 80122dc:	900b      	str	r0, [sp, #44]	; 0x2c
 80122de:	f10a 056c 	add.w	r5, sl, #108	; 0x6c
 80122e2:	a90e      	add	r1, sp, #56	; 0x38
 80122e4:	4628      	mov	r0, r5
 80122e6:	e881 000c 	stmia.w	r1, {r2, r3}
 80122ea:	f8dd 90b0 	ldr.w	r9, [sp, #176]	; 0xb0
 80122ee:	f006 fbf1 	bl	8018ad4 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale>
 80122f2:	4683      	mov	fp, r0
 80122f4:	4628      	mov	r0, r5
 80122f6:	f006 f959 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 80122fa:	4605      	mov	r5, r0
 80122fc:	982d      	ldr	r0, [sp, #180]	; 0xb4
 80122fe:	f7ed ffc1 	bl	8000284 <strlen>
 8012302:	2600      	movs	r6, #0
 8012304:	900a      	str	r0, [sp, #40]	; 0x28
 8012306:	9610      	str	r6, [sp, #64]	; 0x40
 8012308:	af0e      	add	r7, sp, #56	; 0x38
 801230a:	a928      	add	r1, sp, #160	; 0xa0
 801230c:	4638      	mov	r0, r7
 801230e:	f7ff fe15 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8012312:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 8012316:	2800      	cmp	r0, #0
 8012318:	d066      	beq.n	80123e8 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x118>
 801231a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801231c:	429e      	cmp	r6, r3
 801231e:	d263      	bcs.n	80123e8 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x118>
 8012320:	f1b8 0f00 	cmp.w	r8, #0
 8012324:	d164      	bne.n	80123f0 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x120>
 8012326:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012328:	4642      	mov	r2, r8
 801232a:	5d99      	ldrb	r1, [r3, r6]
 801232c:	4628      	mov	r0, r5
 801232e:	f7ff f938 	bl	80115a2 <_ZNKSt5ctypeIcE6narrowEcc>
 8012332:	2825      	cmp	r0, #37	; 0x25
 8012334:	f040 82aa 	bne.w	801288c <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5bc>
 8012338:	1c73      	adds	r3, r6, #1
 801233a:	9309      	str	r3, [sp, #36]	; 0x24
 801233c:	1c71      	adds	r1, r6, #1
 801233e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012340:	4642      	mov	r2, r8
 8012342:	5c59      	ldrb	r1, [r3, r1]
 8012344:	4628      	mov	r0, r5
 8012346:	f7ff f92c 	bl	80115a2 <_ZNKSt5ctypeIcE6narrowEcc>
 801234a:	2845      	cmp	r0, #69	; 0x45
 801234c:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
 8012350:	d001      	beq.n	8012356 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x86>
 8012352:	284f      	cmp	r0, #79	; 0x4f
 8012354:	d108      	bne.n	8012368 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x98>
 8012356:	1cb3      	adds	r3, r6, #2
 8012358:	9309      	str	r3, [sp, #36]	; 0x24
 801235a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801235c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801235e:	2200      	movs	r2, #0
 8012360:	5c59      	ldrb	r1, [r3, r1]
 8012362:	4628      	mov	r0, r5
 8012364:	f7ff f91d 	bl	80115a2 <_ZNKSt5ctypeIcE6narrowEcc>
 8012368:	3841      	subs	r0, #65	; 0x41
 801236a:	ae0e      	add	r6, sp, #56	; 0x38
 801236c:	2838      	cmp	r0, #56	; 0x38
 801236e:	f200 8288 	bhi.w	8012882 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5b2>
 8012372:	e8df f010 	tbh	[pc, r0, lsl #1]
 8012376:	006a      	.short	0x006a
 8012378:	01d80095 	.word	0x01d80095
 801237c:	028600ee 	.word	0x028600ee
 8012380:	02860286 	.word	0x02860286
 8012384:	0132010e 	.word	0x0132010e
 8012388:	02860286 	.word	0x02860286
 801238c:	01600286 	.word	0x01600286
 8012390:	02860286 	.word	0x02860286
 8012394:	02860286 	.word	0x02860286
 8012398:	01990194 	.word	0x01990194
 801239c:	028601c8 	.word	0x028601c8
 80123a0:	02860286 	.word	0x02860286
 80123a4:	01d801d3 	.word	0x01d801d3
 80123a8:	02860202 	.word	0x02860202
 80123ac:	02860286 	.word	0x02860286
 80123b0:	02860286 	.word	0x02860286
 80123b4:	00440286 	.word	0x00440286
 80123b8:	009b0070 	.word	0x009b0070
 80123bc:	00c500a1 	.word	0x00c500a1
 80123c0:	02860286 	.word	0x02860286
 80123c4:	02860070 	.word	0x02860070
 80123c8:	02860286 	.word	0x02860286
 80123cc:	013c0286 	.word	0x013c0286
 80123d0:	02860185 	.word	0x02860185
 80123d4:	02860286 	.word	0x02860286
 80123d8:	02860286 	.word	0x02860286
 80123dc:	028601be 	.word	0x028601be
 80123e0:	02860286 	.word	0x02860286
 80123e4:	01d801cc 	.word	0x01d801cc
 80123e8:	f1b8 0f00 	cmp.w	r8, #0
 80123ec:	f000 8260 	beq.w	80128b0 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5e0>
 80123f0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80123f2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80123f4:	681b      	ldr	r3, [r3, #0]
 80123f6:	f043 0304 	orr.w	r3, r3, #4
 80123fa:	6013      	str	r3, [r2, #0]
 80123fc:	e25c      	b.n	80128b8 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5e8>
 80123fe:	ae12      	add	r6, sp, #72	; 0x48
 8012400:	4631      	mov	r1, r6
 8012402:	4658      	mov	r0, fp
 8012404:	f005 ffbe 	bl	8018384 <_ZNKSt11__timepunctIcE19_M_days_abbreviatedEPPKc>
 8012408:	ab10      	add	r3, sp, #64	; 0x40
 801240a:	e9cd a305 	strd	sl, r3, [sp, #20]
 801240e:	2307      	movs	r3, #7
 8012410:	e9cd 6303 	strd	r6, r3, [sp, #12]
 8012414:	ab11      	add	r3, sp, #68	; 0x44
 8012416:	9302      	str	r3, [sp, #8]
 8012418:	ab28      	add	r3, sp, #160	; 0xa0
 801241a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801241e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8012422:	af0c      	add	r7, sp, #48	; 0x30
 8012424:	ae0e      	add	r6, sp, #56	; 0x38
 8012426:	e896 000c 	ldmia.w	r6, {r2, r3}
 801242a:	4621      	mov	r1, r4
 801242c:	4638      	mov	r0, r7
 801242e:	f7ff fde9 	bl	8012004 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>
 8012432:	e897 0003 	ldmia.w	r7, {r0, r1}
 8012436:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012438:	e886 0003 	stmia.w	r6, {r0, r1}
 801243c:	b913      	cbnz	r3, 8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801243e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012440:	f8c9 3018 	str.w	r3, [r9, #24]
 8012444:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8012446:	3601      	adds	r6, #1
 8012448:	e75e      	b.n	8012308 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x38>
 801244a:	ae12      	add	r6, sp, #72	; 0x48
 801244c:	4631      	mov	r1, r6
 801244e:	4658      	mov	r0, fp
 8012450:	f005 ff88 	bl	8018364 <_ZNKSt11__timepunctIcE7_M_daysEPPKc>
 8012454:	e7d8      	b.n	8012408 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x138>
 8012456:	ae12      	add	r6, sp, #72	; 0x48
 8012458:	4631      	mov	r1, r6
 801245a:	4658      	mov	r0, fp
 801245c:	f005 ffc1 	bl	80183e2 <_ZNKSt11__timepunctIcE21_M_months_abbreviatedEPPKc>
 8012460:	ab10      	add	r3, sp, #64	; 0x40
 8012462:	e9cd a305 	strd	sl, r3, [sp, #20]
 8012466:	230c      	movs	r3, #12
 8012468:	e9cd 6303 	strd	r6, r3, [sp, #12]
 801246c:	ab11      	add	r3, sp, #68	; 0x44
 801246e:	9302      	str	r3, [sp, #8]
 8012470:	ab28      	add	r3, sp, #160	; 0xa0
 8012472:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012476:	e88d 0003 	stmia.w	sp, {r0, r1}
 801247a:	af0c      	add	r7, sp, #48	; 0x30
 801247c:	ae0e      	add	r6, sp, #56	; 0x38
 801247e:	e896 000c 	ldmia.w	r6, {r2, r3}
 8012482:	4621      	mov	r1, r4
 8012484:	4638      	mov	r0, r7
 8012486:	f7ff fdbd 	bl	8012004 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>
 801248a:	e897 0003 	ldmia.w	r7, {r0, r1}
 801248e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012490:	e886 0003 	stmia.w	r6, {r0, r1}
 8012494:	2b00      	cmp	r3, #0
 8012496:	d1d5      	bne.n	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 8012498:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801249a:	f8c9 3010 	str.w	r3, [r9, #16]
 801249e:	e7d1      	b.n	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 80124a0:	ae12      	add	r6, sp, #72	; 0x48
 80124a2:	4631      	mov	r1, r6
 80124a4:	4658      	mov	r0, fp
 80124a6:	f005 ff7d 	bl	80183a4 <_ZNKSt11__timepunctIcE9_M_monthsEPPKc>
 80124aa:	e7d9      	b.n	8012460 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x190>
 80124ac:	f8db 3008 	ldr.w	r3, [fp, #8]
 80124b0:	699b      	ldr	r3, [r3, #24]
 80124b2:	af0c      	add	r7, sp, #48	; 0x30
 80124b4:	9305      	str	r3, [sp, #20]
 80124b6:	e056      	b.n	8012566 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x296>
 80124b8:	ab10      	add	r3, sp, #64	; 0x40
 80124ba:	e9cd a306 	strd	sl, r3, [sp, #24]
 80124be:	f04f 0c02 	mov.w	ip, #2
 80124c2:	231f      	movs	r3, #31
 80124c4:	e9cd 3c04 	strd	r3, ip, [sp, #16]
 80124c8:	2301      	movs	r3, #1
 80124ca:	9303      	str	r3, [sp, #12]
 80124cc:	ab11      	add	r3, sp, #68	; 0x44
 80124ce:	9302      	str	r3, [sp, #8]
 80124d0:	ab28      	add	r3, sp, #160	; 0xa0
 80124d2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80124d6:	e88d 0003 	stmia.w	sp, {r0, r1}
 80124da:	af0c      	add	r7, sp, #48	; 0x30
 80124dc:	ae0e      	add	r6, sp, #56	; 0x38
 80124de:	e896 000c 	ldmia.w	r6, {r2, r3}
 80124e2:	4621      	mov	r1, r4
 80124e4:	4638      	mov	r0, r7
 80124e6:	f7ff fd30 	bl	8011f4a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 80124ea:	e897 0003 	ldmia.w	r7, {r0, r1}
 80124ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80124f0:	e886 0003 	stmia.w	r6, {r0, r1}
 80124f4:	2b00      	cmp	r3, #0
 80124f6:	d1a5      	bne.n	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 80124f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80124fa:	f8c9 300c 	str.w	r3, [r9, #12]
 80124fe:	e7a1      	b.n	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 8012500:	4630      	mov	r0, r6
 8012502:	f7ff fcf9 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012506:	69ab      	ldr	r3, [r5, #24]
 8012508:	b2c0      	uxtb	r0, r0
 801250a:	5c1b      	ldrb	r3, [r3, r0]
 801250c:	071f      	lsls	r7, r3, #28
 801250e:	d516      	bpl.n	801253e <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x26e>
 8012510:	980e      	ldr	r0, [sp, #56]	; 0x38
 8012512:	f7fe ff1e 	bl	8011352 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 8012516:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801251a:	930f      	str	r3, [sp, #60]	; 0x3c
 801251c:	ab10      	add	r3, sp, #64	; 0x40
 801251e:	e9cd a306 	strd	sl, r3, [sp, #24]
 8012522:	2209      	movs	r2, #9
 8012524:	2301      	movs	r3, #1
 8012526:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801252a:	af0c      	add	r7, sp, #48	; 0x30
 801252c:	9303      	str	r3, [sp, #12]
 801252e:	ab11      	add	r3, sp, #68	; 0x44
 8012530:	9302      	str	r3, [sp, #8]
 8012532:	ab28      	add	r3, sp, #160	; 0xa0
 8012534:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012538:	e88d 0003 	stmia.w	sp, {r0, r1}
 801253c:	e7cf      	b.n	80124de <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x20e>
 801253e:	ab10      	add	r3, sp, #64	; 0x40
 8012540:	e9cd a306 	strd	sl, r3, [sp, #24]
 8012544:	2002      	movs	r0, #2
 8012546:	231f      	movs	r3, #31
 8012548:	e9cd 3004 	strd	r3, r0, [sp, #16]
 801254c:	af0c      	add	r7, sp, #48	; 0x30
 801254e:	230a      	movs	r3, #10
 8012550:	e7ec      	b.n	801252c <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x25c>
 8012552:	ae12      	add	r6, sp, #72	; 0x48
 8012554:	4ac0      	ldr	r2, [pc, #768]	; (8012858 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x588>)
 8012556:	4633      	mov	r3, r6
 8012558:	f1a2 0109 	sub.w	r1, r2, #9
 801255c:	4628      	mov	r0, r5
 801255e:	f7ff f801 	bl	8011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>
 8012562:	af0c      	add	r7, sp, #48	; 0x30
 8012564:	9605      	str	r6, [sp, #20]
 8012566:	ab10      	add	r3, sp, #64	; 0x40
 8012568:	e9cd a302 	strd	sl, r3, [sp, #8]
 801256c:	f8cd 9010 	str.w	r9, [sp, #16]
 8012570:	ab28      	add	r3, sp, #160	; 0xa0
 8012572:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012576:	e88d 0003 	stmia.w	sp, {r0, r1}
 801257a:	ae0e      	add	r6, sp, #56	; 0x38
 801257c:	4621      	mov	r1, r4
 801257e:	4638      	mov	r0, r7
 8012580:	e896 000c 	ldmia.w	r6, {r2, r3}
 8012584:	f7ff fea4 	bl	80122d0 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc>
 8012588:	e897 0003 	ldmia.w	r7, {r0, r1}
 801258c:	e886 0003 	stmia.w	r6, {r0, r1}
 8012590:	e758      	b.n	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 8012592:	ab10      	add	r3, sp, #64	; 0x40
 8012594:	e9cd a306 	strd	sl, r3, [sp, #24]
 8012598:	2102      	movs	r1, #2
 801259a:	2317      	movs	r3, #23
 801259c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80125a0:	af0c      	add	r7, sp, #48	; 0x30
 80125a2:	2300      	movs	r3, #0
 80125a4:	9303      	str	r3, [sp, #12]
 80125a6:	ab11      	add	r3, sp, #68	; 0x44
 80125a8:	9302      	str	r3, [sp, #8]
 80125aa:	ab28      	add	r3, sp, #160	; 0xa0
 80125ac:	e893 0003 	ldmia.w	r3, {r0, r1}
 80125b0:	e88d 0003 	stmia.w	sp, {r0, r1}
 80125b4:	ae0e      	add	r6, sp, #56	; 0x38
 80125b6:	e896 000c 	ldmia.w	r6, {r2, r3}
 80125ba:	4621      	mov	r1, r4
 80125bc:	4638      	mov	r0, r7
 80125be:	f7ff fcc4 	bl	8011f4a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 80125c2:	e897 0003 	ldmia.w	r7, {r0, r1}
 80125c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80125c8:	e886 0003 	stmia.w	r6, {r0, r1}
 80125cc:	2b00      	cmp	r3, #0
 80125ce:	f47f af39 	bne.w	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 80125d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80125d4:	f8c9 3008 	str.w	r3, [r9, #8]
 80125d8:	e734      	b.n	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 80125da:	ab10      	add	r3, sp, #64	; 0x40
 80125dc:	e9cd a306 	strd	sl, r3, [sp, #24]
 80125e0:	2202      	movs	r2, #2
 80125e2:	230c      	movs	r3, #12
 80125e4:	e9cd 3204 	strd	r3, r2, [sp, #16]
 80125e8:	af0c      	add	r7, sp, #48	; 0x30
 80125ea:	2301      	movs	r3, #1
 80125ec:	e7da      	b.n	80125a4 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x2d4>
 80125ee:	ab10      	add	r3, sp, #64	; 0x40
 80125f0:	e9cd a306 	strd	sl, r3, [sp, #24]
 80125f4:	f04f 0802 	mov.w	r8, #2
 80125f8:	230c      	movs	r3, #12
 80125fa:	e9cd 3804 	strd	r3, r8, [sp, #16]
 80125fe:	2301      	movs	r3, #1
 8012600:	9303      	str	r3, [sp, #12]
 8012602:	ab11      	add	r3, sp, #68	; 0x44
 8012604:	9302      	str	r3, [sp, #8]
 8012606:	ab28      	add	r3, sp, #160	; 0xa0
 8012608:	e893 0003 	ldmia.w	r3, {r0, r1}
 801260c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8012610:	af0c      	add	r7, sp, #48	; 0x30
 8012612:	ae0e      	add	r6, sp, #56	; 0x38
 8012614:	e896 000c 	ldmia.w	r6, {r2, r3}
 8012618:	4621      	mov	r1, r4
 801261a:	4638      	mov	r0, r7
 801261c:	f7ff fc95 	bl	8011f4a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8012620:	e897 0003 	ldmia.w	r7, {r0, r1}
 8012624:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012626:	e886 0003 	stmia.w	r6, {r0, r1}
 801262a:	2b00      	cmp	r3, #0
 801262c:	f47f af0a 	bne.w	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 8012630:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012632:	3b01      	subs	r3, #1
 8012634:	e731      	b.n	801249a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x1ca>
 8012636:	ab10      	add	r3, sp, #64	; 0x40
 8012638:	e9cd a306 	strd	sl, r3, [sp, #24]
 801263c:	f04f 0e02 	mov.w	lr, #2
 8012640:	233b      	movs	r3, #59	; 0x3b
 8012642:	e9cd 3e04 	strd	r3, lr, [sp, #16]
 8012646:	2300      	movs	r3, #0
 8012648:	9303      	str	r3, [sp, #12]
 801264a:	ab11      	add	r3, sp, #68	; 0x44
 801264c:	9302      	str	r3, [sp, #8]
 801264e:	ab28      	add	r3, sp, #160	; 0xa0
 8012650:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012654:	e88d 0003 	stmia.w	sp, {r0, r1}
 8012658:	af0c      	add	r7, sp, #48	; 0x30
 801265a:	ae0e      	add	r6, sp, #56	; 0x38
 801265c:	e896 000c 	ldmia.w	r6, {r2, r3}
 8012660:	4621      	mov	r1, r4
 8012662:	4638      	mov	r0, r7
 8012664:	f7ff fc71 	bl	8011f4a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8012668:	e897 0003 	ldmia.w	r7, {r0, r1}
 801266c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801266e:	e886 0003 	stmia.w	r6, {r0, r1}
 8012672:	2b00      	cmp	r3, #0
 8012674:	f47f aee6 	bne.w	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 8012678:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801267a:	f8c9 3004 	str.w	r3, [r9, #4]
 801267e:	e6e1      	b.n	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 8012680:	4630      	mov	r0, r6
 8012682:	f7ff fc39 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012686:	2200      	movs	r2, #0
 8012688:	b2c1      	uxtb	r1, r0
 801268a:	4628      	mov	r0, r5
 801268c:	f7fe ff89 	bl	80115a2 <_ZNKSt5ctypeIcE6narrowEcc>
 8012690:	280a      	cmp	r0, #10
 8012692:	f040 80f6 	bne.w	8012882 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5b2>
 8012696:	4630      	mov	r0, r6
 8012698:	f7fe fec4 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 801269c:	e6d2      	b.n	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801269e:	4a6f      	ldr	r2, [pc, #444]	; (801285c <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x58c>)
 80126a0:	ae12      	add	r6, sp, #72	; 0x48
 80126a2:	4633      	mov	r3, r6
 80126a4:	1f91      	subs	r1, r2, #6
 80126a6:	e759      	b.n	801255c <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x28c>
 80126a8:	ab10      	add	r3, sp, #64	; 0x40
 80126aa:	e9cd a306 	strd	sl, r3, [sp, #24]
 80126ae:	f04f 0c02 	mov.w	ip, #2
 80126b2:	233d      	movs	r3, #61	; 0x3d
 80126b4:	e9cd 3c04 	strd	r3, ip, [sp, #16]
 80126b8:	2300      	movs	r3, #0
 80126ba:	9303      	str	r3, [sp, #12]
 80126bc:	ab11      	add	r3, sp, #68	; 0x44
 80126be:	9302      	str	r3, [sp, #8]
 80126c0:	ab28      	add	r3, sp, #160	; 0xa0
 80126c2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80126c6:	e88d 0003 	stmia.w	sp, {r0, r1}
 80126ca:	af0c      	add	r7, sp, #48	; 0x30
 80126cc:	ae0e      	add	r6, sp, #56	; 0x38
 80126ce:	e896 000c 	ldmia.w	r6, {r2, r3}
 80126d2:	4621      	mov	r1, r4
 80126d4:	4638      	mov	r0, r7
 80126d6:	f7ff fc38 	bl	8011f4a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 80126da:	e897 0003 	ldmia.w	r7, {r0, r1}
 80126de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80126e0:	e886 0003 	stmia.w	r6, {r0, r1}
 80126e4:	2b00      	cmp	r3, #0
 80126e6:	f47f aead 	bne.w	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 80126ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80126ec:	f8c9 3000 	str.w	r3, [r9]
 80126f0:	e6a8      	b.n	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 80126f2:	4630      	mov	r0, r6
 80126f4:	f7ff fc00 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 80126f8:	2200      	movs	r2, #0
 80126fa:	b2c1      	uxtb	r1, r0
 80126fc:	4628      	mov	r0, r5
 80126fe:	f7fe ff50 	bl	80115a2 <_ZNKSt5ctypeIcE6narrowEcc>
 8012702:	2809      	cmp	r0, #9
 8012704:	e7c5      	b.n	8012692 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x3c2>
 8012706:	ae12      	add	r6, sp, #72	; 0x48
 8012708:	4a55      	ldr	r2, [pc, #340]	; (8012860 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x590>)
 801270a:	4633      	mov	r3, r6
 801270c:	e724      	b.n	8012558 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x288>
 801270e:	a912      	add	r1, sp, #72	; 0x48
 8012710:	4658      	mov	r0, fp
 8012712:	f005 fe15 	bl	8018340 <_ZNKSt11__timepunctIcE15_M_date_formatsEPPKc>
 8012716:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012718:	af0c      	add	r7, sp, #48	; 0x30
 801271a:	e6cb      	b.n	80124b4 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x1e4>
 801271c:	a912      	add	r1, sp, #72	; 0x48
 801271e:	4658      	mov	r0, fp
 8012720:	f005 fe14 	bl	801834c <_ZNKSt11__timepunctIcE15_M_time_formatsEPPKc>
 8012724:	e7f7      	b.n	8012716 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x446>
 8012726:	ab10      	add	r3, sp, #64	; 0x40
 8012728:	e9cd a306 	strd	sl, r3, [sp, #24]
 801272c:	2604      	movs	r6, #4
 801272e:	f242 730f 	movw	r3, #9999	; 0x270f
 8012732:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8012736:	2300      	movs	r3, #0
 8012738:	9303      	str	r3, [sp, #12]
 801273a:	ab11      	add	r3, sp, #68	; 0x44
 801273c:	9302      	str	r3, [sp, #8]
 801273e:	ab28      	add	r3, sp, #160	; 0xa0
 8012740:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012744:	e88d 0003 	stmia.w	sp, {r0, r1}
 8012748:	af0c      	add	r7, sp, #48	; 0x30
 801274a:	ae0e      	add	r6, sp, #56	; 0x38
 801274c:	e896 000c 	ldmia.w	r6, {r2, r3}
 8012750:	4621      	mov	r1, r4
 8012752:	4638      	mov	r0, r7
 8012754:	f7ff fbf9 	bl	8011f4a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8012758:	e897 0003 	ldmia.w	r7, {r0, r1}
 801275c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801275e:	e886 0003 	stmia.w	r6, {r0, r1}
 8012762:	2b00      	cmp	r3, #0
 8012764:	f47f ae6e 	bne.w	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 8012768:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801276a:	2b00      	cmp	r3, #0
 801276c:	bfb4      	ite	lt
 801276e:	3364      	addlt	r3, #100	; 0x64
 8012770:	f2a3 736c 	subwge	r3, r3, #1900	; 0x76c
 8012774:	f8c9 3014 	str.w	r3, [r9, #20]
 8012778:	e664      	b.n	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801277a:	4630      	mov	r0, r6
 801277c:	f7ff fbbc 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012780:	69ab      	ldr	r3, [r5, #24]
 8012782:	b2c0      	uxtb	r0, r0
 8012784:	5c1b      	ldrb	r3, [r3, r0]
 8012786:	07d8      	lsls	r0, r3, #31
 8012788:	d57b      	bpl.n	8012882 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5b2>
 801278a:	ab10      	add	r3, sp, #64	; 0x40
 801278c:	e9cd a305 	strd	sl, r3, [sp, #20]
 8012790:	230e      	movs	r3, #14
 8012792:	9304      	str	r3, [sp, #16]
 8012794:	4b33      	ldr	r3, [pc, #204]	; (8012864 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x594>)
 8012796:	9303      	str	r3, [sp, #12]
 8012798:	ab12      	add	r3, sp, #72	; 0x48
 801279a:	9302      	str	r3, [sp, #8]
 801279c:	ab28      	add	r3, sp, #160	; 0xa0
 801279e:	e893 0003 	ldmia.w	r3, {r0, r1}
 80127a2:	e88d 0003 	stmia.w	sp, {r0, r1}
 80127a6:	af0c      	add	r7, sp, #48	; 0x30
 80127a8:	4621      	mov	r1, r4
 80127aa:	4638      	mov	r0, r7
 80127ac:	e896 000c 	ldmia.w	r6, {r2, r3}
 80127b0:	f7ff fc28 	bl	8012004 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>
 80127b4:	e897 0003 	ldmia.w	r7, {r0, r1}
 80127b8:	e886 0003 	stmia.w	r6, {r0, r1}
 80127bc:	a928      	add	r1, sp, #160	; 0xa0
 80127be:	4630      	mov	r0, r6
 80127c0:	f7ff fbbc 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80127c4:	2800      	cmp	r0, #0
 80127c6:	f43f ae3d 	beq.w	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 80127ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80127cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80127ce:	4313      	orrs	r3, r2
 80127d0:	f47f ae38 	bne.w	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 80127d4:	4630      	mov	r0, r6
 80127d6:	f7ff fb8f 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 80127da:	212d      	movs	r1, #45	; 0x2d
 80127dc:	4607      	mov	r7, r0
 80127de:	4628      	mov	r0, r5
 80127e0:	f7fe feaf 	bl	8011542 <_ZNKSt5ctypeIcE5widenEc>
 80127e4:	b2ff      	uxtb	r7, r7
 80127e6:	42b8      	cmp	r0, r7
 80127e8:	d13e      	bne.n	8012868 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x598>
 80127ea:	af10      	add	r7, sp, #64	; 0x40
 80127ec:	2317      	movs	r3, #23
 80127ee:	2202      	movs	r2, #2
 80127f0:	e9cd 3204 	strd	r3, r2, [sp, #16]
 80127f4:	e9cd a706 	strd	sl, r7, [sp, #24]
 80127f8:	2300      	movs	r3, #0
 80127fa:	9303      	str	r3, [sp, #12]
 80127fc:	ab12      	add	r3, sp, #72	; 0x48
 80127fe:	9302      	str	r3, [sp, #8]
 8012800:	ab28      	add	r3, sp, #160	; 0xa0
 8012802:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012806:	e88d 0003 	stmia.w	sp, {r0, r1}
 801280a:	ae0c      	add	r6, sp, #48	; 0x30
 801280c:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8012810:	e898 000c 	ldmia.w	r8, {r2, r3}
 8012814:	4621      	mov	r1, r4
 8012816:	4630      	mov	r0, r6
 8012818:	f7ff fb97 	bl	8011f4a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801281c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012820:	233b      	movs	r3, #59	; 0x3b
 8012822:	e888 0003 	stmia.w	r8, {r0, r1}
 8012826:	2102      	movs	r1, #2
 8012828:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801282c:	e9cd a706 	strd	sl, r7, [sp, #24]
 8012830:	2300      	movs	r3, #0
 8012832:	9303      	str	r3, [sp, #12]
 8012834:	ab12      	add	r3, sp, #72	; 0x48
 8012836:	9302      	str	r3, [sp, #8]
 8012838:	ab28      	add	r3, sp, #160	; 0xa0
 801283a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801283e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8012842:	4621      	mov	r1, r4
 8012844:	4630      	mov	r0, r6
 8012846:	e898 000c 	ldmia.w	r8, {r2, r3}
 801284a:	f7ff fb7e 	bl	8011f4a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801284e:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012852:	e888 0003 	stmia.w	r8, {r0, r1}
 8012856:	e5f5      	b.n	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 8012858:	0802f801 	.word	0x0802f801
 801285c:	0802f807 	.word	0x0802f807
 8012860:	0802f810 	.word	0x0802f810
 8012864:	20000040 	.word	0x20000040
 8012868:	4630      	mov	r0, r6
 801286a:	f7ff fb45 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801286e:	212b      	movs	r1, #43	; 0x2b
 8012870:	4606      	mov	r6, r0
 8012872:	4628      	mov	r0, r5
 8012874:	f7fe fe65 	bl	8011542 <_ZNKSt5ctypeIcE5widenEc>
 8012878:	b2f6      	uxtb	r6, r6
 801287a:	42b0      	cmp	r0, r6
 801287c:	f47f ade2 	bne.w	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 8012880:	e7b3      	b.n	80127ea <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x51a>
 8012882:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012884:	f043 0304 	orr.w	r3, r3, #4
 8012888:	9310      	str	r3, [sp, #64]	; 0x40
 801288a:	e5db      	b.n	8012444 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801288c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801288e:	4638      	mov	r0, r7
 8012890:	f813 8006 	ldrb.w	r8, [r3, r6]
 8012894:	f7ff fb30 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012898:	b2c0      	uxtb	r0, r0
 801289a:	4580      	cmp	r8, r0
 801289c:	d103      	bne.n	80128a6 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5d6>
 801289e:	4638      	mov	r0, r7
 80128a0:	f7fe fdc0 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 80128a4:	e5cf      	b.n	8012446 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x176>
 80128a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80128a8:	f043 0304 	orr.w	r3, r3, #4
 80128ac:	9310      	str	r3, [sp, #64]	; 0x40
 80128ae:	e5ca      	b.n	8012446 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x176>
 80128b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80128b2:	429e      	cmp	r6, r3
 80128b4:	f47f ad9c 	bne.w	80123f0 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x120>
 80128b8:	e897 0003 	ldmia.w	r7, {r0, r1}
 80128bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80128be:	e883 0003 	stmia.w	r3, {r0, r1}
 80128c2:	4618      	mov	r0, r3
 80128c4:	b01f      	add	sp, #124	; 0x7c
 80128c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128ca:	bf00      	nop

080128cc <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_yearES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 80128cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80128ce:	b08f      	sub	sp, #60	; 0x3c
 80128d0:	ac0a      	add	r4, sp, #40	; 0x28
 80128d2:	e884 000c 	stmia.w	r4, {r2, r3}
 80128d6:	aa0d      	add	r2, sp, #52	; 0x34
 80128d8:	9207      	str	r2, [sp, #28]
 80128da:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80128dc:	9206      	str	r2, [sp, #24]
 80128de:	468c      	mov	ip, r1
 80128e0:	f242 720f 	movw	r2, #9999	; 0x270f
 80128e4:	2104      	movs	r1, #4
 80128e6:	e9cd 2104 	strd	r2, r1, [sp, #16]
 80128ea:	2300      	movs	r3, #0
 80128ec:	9303      	str	r3, [sp, #12]
 80128ee:	930d      	str	r3, [sp, #52]	; 0x34
 80128f0:	ab0c      	add	r3, sp, #48	; 0x30
 80128f2:	9302      	str	r3, [sp, #8]
 80128f4:	ab14      	add	r3, sp, #80	; 0x50
 80128f6:	4605      	mov	r5, r0
 80128f8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80128fc:	e88d 0003 	stmia.w	sp, {r0, r1}
 8012900:	af08      	add	r7, sp, #32
 8012902:	e894 000c 	ldmia.w	r4, {r2, r3}
 8012906:	4661      	mov	r1, ip
 8012908:	4638      	mov	r0, r7
 801290a:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801290c:	f7ff fb1d 	bl	8011f4a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8012910:	e897 0003 	ldmia.w	r7, {r0, r1}
 8012914:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012916:	e884 0003 	stmia.w	r4, {r0, r1}
 801291a:	b9bb      	cbnz	r3, 801294c <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_yearES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x80>
 801291c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801291e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8012920:	2b00      	cmp	r3, #0
 8012922:	bfb4      	ite	lt
 8012924:	3364      	addlt	r3, #100	; 0x64
 8012926:	f2a3 736c 	subwge	r3, r3, #1900	; 0x76c
 801292a:	6153      	str	r3, [r2, #20]
 801292c:	a914      	add	r1, sp, #80	; 0x50
 801292e:	4620      	mov	r0, r4
 8012930:	f7ff faf1 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 8012934:	b118      	cbz	r0, 801293e <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_yearES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x72>
 8012936:	6833      	ldr	r3, [r6, #0]
 8012938:	f043 0302 	orr.w	r3, r3, #2
 801293c:	6033      	str	r3, [r6, #0]
 801293e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8012942:	e885 0003 	stmia.w	r5, {r0, r1}
 8012946:	4628      	mov	r0, r5
 8012948:	b00f      	add	sp, #60	; 0x3c
 801294a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801294c:	6833      	ldr	r3, [r6, #0]
 801294e:	f043 0304 	orr.w	r3, r3, #4
 8012952:	6033      	str	r3, [r6, #0]
 8012954:	e7ea      	b.n	801292c <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_yearES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x60>

08012956 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14do_get_weekdayES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8012956:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801295a:	b09c      	sub	sp, #112	; 0x70
 801295c:	e9dd 9626 	ldrd	r9, r6, [sp, #152]	; 0x98
 8012960:	ac0a      	add	r4, sp, #40	; 0x28
 8012962:	4605      	mov	r5, r0
 8012964:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 8012968:	e884 000c 	stmia.w	r4, {r2, r3}
 801296c:	4688      	mov	r8, r1
 801296e:	f006 f8b1 	bl	8018ad4 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale>
 8012972:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 8012976:	4607      	mov	r7, r0
 8012978:	4651      	mov	r1, sl
 801297a:	f005 fd03 	bl	8018384 <_ZNKSt11__timepunctIcE19_M_days_abbreviatedEPPKc>
 801297e:	4638      	mov	r0, r7
 8012980:	a915      	add	r1, sp, #84	; 0x54
 8012982:	f005 fcef 	bl	8018364 <_ZNKSt11__timepunctIcE7_M_daysEPPKc>
 8012986:	2300      	movs	r3, #0
 8012988:	930d      	str	r3, [sp, #52]	; 0x34
 801298a:	ab0d      	add	r3, sp, #52	; 0x34
 801298c:	e9cd 9305 	strd	r9, r3, [sp, #20]
 8012990:	2307      	movs	r3, #7
 8012992:	e9cd a303 	strd	sl, r3, [sp, #12]
 8012996:	ab0c      	add	r3, sp, #48	; 0x30
 8012998:	9302      	str	r3, [sp, #8]
 801299a:	ab24      	add	r3, sp, #144	; 0x90
 801299c:	e893 0003 	ldmia.w	r3, {r0, r1}
 80129a0:	e88d 0003 	stmia.w	sp, {r0, r1}
 80129a4:	af08      	add	r7, sp, #32
 80129a6:	e894 000c 	ldmia.w	r4, {r2, r3}
 80129aa:	4641      	mov	r1, r8
 80129ac:	4638      	mov	r0, r7
 80129ae:	f7ff fbdf 	bl	8012170 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>
 80129b2:	e897 0003 	ldmia.w	r7, {r0, r1}
 80129b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80129b8:	e884 0003 	stmia.w	r4, {r0, r1}
 80129bc:	b99b      	cbnz	r3, 80129e6 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14do_get_weekdayES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x90>
 80129be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80129c0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80129c2:	619a      	str	r2, [r3, #24]
 80129c4:	a924      	add	r1, sp, #144	; 0x90
 80129c6:	4620      	mov	r0, r4
 80129c8:	f7ff faa5 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 80129cc:	b118      	cbz	r0, 80129d6 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14do_get_weekdayES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x80>
 80129ce:	6833      	ldr	r3, [r6, #0]
 80129d0:	f043 0302 	orr.w	r3, r3, #2
 80129d4:	6033      	str	r3, [r6, #0]
 80129d6:	e894 0003 	ldmia.w	r4, {r0, r1}
 80129da:	e885 0003 	stmia.w	r5, {r0, r1}
 80129de:	4628      	mov	r0, r5
 80129e0:	b01c      	add	sp, #112	; 0x70
 80129e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80129e6:	6833      	ldr	r3, [r6, #0]
 80129e8:	f043 0304 	orr.w	r3, r3, #4
 80129ec:	6033      	str	r3, [r6, #0]
 80129ee:	e7e9      	b.n	80129c4 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14do_get_weekdayES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x6e>

080129f0 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16do_get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 80129f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80129f4:	b0a6      	sub	sp, #152	; 0x98
 80129f6:	e9dd 9630 	ldrd	r9, r6, [sp, #192]	; 0xc0
 80129fa:	ac0a      	add	r4, sp, #40	; 0x28
 80129fc:	4605      	mov	r5, r0
 80129fe:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 8012a02:	e884 000c 	stmia.w	r4, {r2, r3}
 8012a06:	4688      	mov	r8, r1
 8012a08:	f006 f864 	bl	8018ad4 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale>
 8012a0c:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 8012a10:	4607      	mov	r7, r0
 8012a12:	4651      	mov	r1, sl
 8012a14:	f005 fce5 	bl	80183e2 <_ZNKSt11__timepunctIcE21_M_months_abbreviatedEPPKc>
 8012a18:	4638      	mov	r0, r7
 8012a1a:	a91a      	add	r1, sp, #104	; 0x68
 8012a1c:	f005 fcc2 	bl	80183a4 <_ZNKSt11__timepunctIcE9_M_monthsEPPKc>
 8012a20:	2300      	movs	r3, #0
 8012a22:	930d      	str	r3, [sp, #52]	; 0x34
 8012a24:	ab0d      	add	r3, sp, #52	; 0x34
 8012a26:	e9cd 9305 	strd	r9, r3, [sp, #20]
 8012a2a:	230c      	movs	r3, #12
 8012a2c:	e9cd a303 	strd	sl, r3, [sp, #12]
 8012a30:	ab0c      	add	r3, sp, #48	; 0x30
 8012a32:	9302      	str	r3, [sp, #8]
 8012a34:	ab2e      	add	r3, sp, #184	; 0xb8
 8012a36:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012a3a:	e88d 0003 	stmia.w	sp, {r0, r1}
 8012a3e:	af08      	add	r7, sp, #32
 8012a40:	e894 000c 	ldmia.w	r4, {r2, r3}
 8012a44:	4641      	mov	r1, r8
 8012a46:	4638      	mov	r0, r7
 8012a48:	f7ff fb92 	bl	8012170 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>
 8012a4c:	e897 0003 	ldmia.w	r7, {r0, r1}
 8012a50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012a52:	e884 0003 	stmia.w	r4, {r0, r1}
 8012a56:	b99b      	cbnz	r3, 8012a80 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16do_get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x90>
 8012a58:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012a5a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012a5c:	611a      	str	r2, [r3, #16]
 8012a5e:	a92e      	add	r1, sp, #184	; 0xb8
 8012a60:	4620      	mov	r0, r4
 8012a62:	f7ff fa58 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 8012a66:	b118      	cbz	r0, 8012a70 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16do_get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x80>
 8012a68:	6833      	ldr	r3, [r6, #0]
 8012a6a:	f043 0302 	orr.w	r3, r3, #2
 8012a6e:	6033      	str	r3, [r6, #0]
 8012a70:	e894 0003 	ldmia.w	r4, {r0, r1}
 8012a74:	e885 0003 	stmia.w	r5, {r0, r1}
 8012a78:	4628      	mov	r0, r5
 8012a7a:	b026      	add	sp, #152	; 0x98
 8012a7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012a80:	6833      	ldr	r3, [r6, #0]
 8012a82:	f043 0304 	orr.w	r3, r3, #4
 8012a86:	6033      	str	r3, [r6, #0]
 8012a88:	e7e9      	b.n	8012a5e <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16do_get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x6e>

08012a8a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_timeES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8012a8a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012a8e:	b08d      	sub	sp, #52	; 0x34
 8012a90:	e9dd 9616 	ldrd	r9, r6, [sp, #88]	; 0x58
 8012a94:	ac08      	add	r4, sp, #32
 8012a96:	4605      	mov	r5, r0
 8012a98:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 8012a9c:	e884 000c 	stmia.w	r4, {r2, r3}
 8012aa0:	4688      	mov	r8, r1
 8012aa2:	f006 f817 	bl	8018ad4 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale>
 8012aa6:	a90a      	add	r1, sp, #40	; 0x28
 8012aa8:	f005 fc50 	bl	801834c <_ZNKSt11__timepunctIcE15_M_time_formatsEPPKc>
 8012aac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012aae:	9305      	str	r3, [sp, #20]
 8012ab0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8012ab2:	f8cd 9008 	str.w	r9, [sp, #8]
 8012ab6:	e9cd 6303 	strd	r6, r3, [sp, #12]
 8012aba:	ab14      	add	r3, sp, #80	; 0x50
 8012abc:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012ac0:	e88d 0003 	stmia.w	sp, {r0, r1}
 8012ac4:	af06      	add	r7, sp, #24
 8012ac6:	4641      	mov	r1, r8
 8012ac8:	4638      	mov	r0, r7
 8012aca:	e894 000c 	ldmia.w	r4, {r2, r3}
 8012ace:	f7ff fbff 	bl	80122d0 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc>
 8012ad2:	e897 0003 	ldmia.w	r7, {r0, r1}
 8012ad6:	e884 0003 	stmia.w	r4, {r0, r1}
 8012ada:	a914      	add	r1, sp, #80	; 0x50
 8012adc:	4620      	mov	r0, r4
 8012ade:	f7ff fa1a 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 8012ae2:	b118      	cbz	r0, 8012aec <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_timeES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x62>
 8012ae4:	6833      	ldr	r3, [r6, #0]
 8012ae6:	f043 0302 	orr.w	r3, r3, #2
 8012aea:	6033      	str	r3, [r6, #0]
 8012aec:	e894 0003 	ldmia.w	r4, {r0, r1}
 8012af0:	e885 0003 	stmia.w	r5, {r0, r1}
 8012af4:	4628      	mov	r0, r5
 8012af6:	b00d      	add	sp, #52	; 0x34
 8012af8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08012afc <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_dateES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8012afc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012b00:	b08d      	sub	sp, #52	; 0x34
 8012b02:	e9dd 9616 	ldrd	r9, r6, [sp, #88]	; 0x58
 8012b06:	ac08      	add	r4, sp, #32
 8012b08:	4605      	mov	r5, r0
 8012b0a:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 8012b0e:	e884 000c 	stmia.w	r4, {r2, r3}
 8012b12:	4688      	mov	r8, r1
 8012b14:	f005 ffde 	bl	8018ad4 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale>
 8012b18:	a90a      	add	r1, sp, #40	; 0x28
 8012b1a:	f005 fc11 	bl	8018340 <_ZNKSt11__timepunctIcE15_M_date_formatsEPPKc>
 8012b1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012b20:	9305      	str	r3, [sp, #20]
 8012b22:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8012b24:	f8cd 9008 	str.w	r9, [sp, #8]
 8012b28:	e9cd 6303 	strd	r6, r3, [sp, #12]
 8012b2c:	ab14      	add	r3, sp, #80	; 0x50
 8012b2e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012b32:	e88d 0003 	stmia.w	sp, {r0, r1}
 8012b36:	af06      	add	r7, sp, #24
 8012b38:	4641      	mov	r1, r8
 8012b3a:	4638      	mov	r0, r7
 8012b3c:	e894 000c 	ldmia.w	r4, {r2, r3}
 8012b40:	f7ff fbc6 	bl	80122d0 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc>
 8012b44:	e897 0003 	ldmia.w	r7, {r0, r1}
 8012b48:	e884 0003 	stmia.w	r4, {r0, r1}
 8012b4c:	a914      	add	r1, sp, #80	; 0x50
 8012b4e:	4620      	mov	r0, r4
 8012b50:	f7ff f9e1 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 8012b54:	b118      	cbz	r0, 8012b5e <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_dateES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x62>
 8012b56:	6833      	ldr	r3, [r6, #0]
 8012b58:	f043 0302 	orr.w	r3, r3, #2
 8012b5c:	6033      	str	r3, [r6, #0]
 8012b5e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8012b62:	e885 0003 	stmia.w	r5, {r0, r1}
 8012b66:	4628      	mov	r0, r5
 8012b68:	b00d      	add	sp, #52	; 0x34
 8012b6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08012b6e <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmcc>:
 8012b6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b72:	b08d      	sub	sp, #52	; 0x34
 8012b74:	e9dd 9618 	ldrd	r9, r6, [sp, #96]	; 0x60
 8012b78:	4605      	mov	r5, r0
 8012b7a:	ac08      	add	r4, sp, #32
 8012b7c:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 8012b80:	f04f 0a00 	mov.w	sl, #0
 8012b84:	e884 000c 	stmia.w	r4, {r2, r3}
 8012b88:	4688      	mov	r8, r1
 8012b8a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8012b8e:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 8012b92:	f005 fd0b 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8012b96:	f8c6 a000 	str.w	sl, [r6]
 8012b9a:	2125      	movs	r1, #37	; 0x25
 8012b9c:	f7fe fcd1 	bl	8011542 <_ZNKSt5ctypeIcE5widenEc>
 8012ba0:	f88d 002c 	strb.w	r0, [sp, #44]	; 0x2c
 8012ba4:	bb5f      	cbnz	r7, 8012bfe <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmcc+0x90>
 8012ba6:	f88d b02d 	strb.w	fp, [sp, #45]	; 0x2d
 8012baa:	f88d 702e 	strb.w	r7, [sp, #46]	; 0x2e
 8012bae:	ab0b      	add	r3, sp, #44	; 0x2c
 8012bb0:	9305      	str	r3, [sp, #20]
 8012bb2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8012bb4:	f8cd 9008 	str.w	r9, [sp, #8]
 8012bb8:	e9cd 6303 	strd	r6, r3, [sp, #12]
 8012bbc:	ab16      	add	r3, sp, #88	; 0x58
 8012bbe:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012bc2:	e88d 0003 	stmia.w	sp, {r0, r1}
 8012bc6:	af06      	add	r7, sp, #24
 8012bc8:	4641      	mov	r1, r8
 8012bca:	4638      	mov	r0, r7
 8012bcc:	e894 000c 	ldmia.w	r4, {r2, r3}
 8012bd0:	f7ff fb7e 	bl	80122d0 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc>
 8012bd4:	e897 0003 	ldmia.w	r7, {r0, r1}
 8012bd8:	e884 0003 	stmia.w	r4, {r0, r1}
 8012bdc:	a916      	add	r1, sp, #88	; 0x58
 8012bde:	4620      	mov	r0, r4
 8012be0:	f7ff f999 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 8012be4:	b118      	cbz	r0, 8012bee <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmcc+0x80>
 8012be6:	6833      	ldr	r3, [r6, #0]
 8012be8:	f043 0302 	orr.w	r3, r3, #2
 8012bec:	6033      	str	r3, [r6, #0]
 8012bee:	e894 0003 	ldmia.w	r4, {r0, r1}
 8012bf2:	e885 0003 	stmia.w	r5, {r0, r1}
 8012bf6:	4628      	mov	r0, r5
 8012bf8:	b00d      	add	sp, #52	; 0x34
 8012bfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012bfe:	f88d 702d 	strb.w	r7, [sp, #45]	; 0x2d
 8012c02:	f88d b02e 	strb.w	fp, [sp, #46]	; 0x2e
 8012c06:	f88d a02f 	strb.w	sl, [sp, #47]	; 0x2f
 8012c0a:	e7d0      	b.n	8012bae <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmcc+0x40>

08012c0c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE>:
 8012c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c10:	ed2d 8b02 	vpush	{d8}
 8012c14:	b099      	sub	sp, #100	; 0x64
 8012c16:	a908      	add	r1, sp, #32
 8012c18:	e881 000c 	stmia.w	r1, {r2, r3}
 8012c1c:	e9dd 3826 	ldrd	r3, r8, [sp, #152]	; 0x98
 8012c20:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 8012c24:	9006      	str	r0, [sp, #24]
 8012c26:	4620      	mov	r0, r4
 8012c28:	f005 fcc0 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8012c2c:	9004      	str	r0, [sp, #16]
 8012c2e:	4620      	mov	r0, r4
 8012c30:	f7fe fc02 	bl	8011438 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb1EEEclERKSt6locale.isra.0>
 8012c34:	f100 0338 	add.w	r3, r0, #56	; 0x38
 8012c38:	9307      	str	r3, [sp, #28]
 8012c3a:	6a03      	ldr	r3, [r0, #32]
 8012c3c:	4604      	mov	r4, r0
 8012c3e:	b11b      	cbz	r3, 8012c48 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3c>
 8012c40:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012c42:	3b00      	subs	r3, #0
 8012c44:	bf18      	it	ne
 8012c46:	2301      	movne	r3, #1
 8012c48:	9302      	str	r3, [sp, #8]
 8012c4a:	ab0e      	add	r3, sp, #56	; 0x38
 8012c4c:	930c      	str	r3, [sp, #48]	; 0x30
 8012c4e:	2300      	movs	r3, #0
 8012c50:	930d      	str	r3, [sp, #52]	; 0x34
 8012c52:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
 8012c56:	7c23      	ldrb	r3, [r4, #16]
 8012c58:	b11b      	cbz	r3, 8012c62 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x56>
 8012c5a:	2120      	movs	r1, #32
 8012c5c:	a80c      	add	r0, sp, #48	; 0x30
 8012c5e:	f00a ff51 	bl	801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
 8012c62:	2500      	movs	r5, #0
 8012c64:	ab14      	add	r3, sp, #80	; 0x50
 8012c66:	2120      	movs	r1, #32
 8012c68:	a812      	add	r0, sp, #72	; 0x48
 8012c6a:	9312      	str	r3, [sp, #72]	; 0x48
 8012c6c:	9513      	str	r5, [sp, #76]	; 0x4c
 8012c6e:	f88d 5050 	strb.w	r5, [sp, #80]	; 0x50
 8012c72:	f00a ff47 	bl	801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
 8012c76:	f104 0339 	add.w	r3, r4, #57	; 0x39
 8012c7a:	ee08 3a10 	vmov	s16, r3
 8012c7e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8012c80:	930b      	str	r3, [sp, #44]	; 0x2c
 8012c82:	462f      	mov	r7, r5
 8012c84:	462e      	mov	r6, r5
 8012c86:	9503      	str	r5, [sp, #12]
 8012c88:	46a9      	mov	r9, r5
 8012c8a:	9501      	str	r5, [sp, #4]
 8012c8c:	ab0b      	add	r3, sp, #44	; 0x2c
 8012c8e:	5d5b      	ldrb	r3, [r3, r5]
 8012c90:	2b04      	cmp	r3, #4
 8012c92:	d840      	bhi.n	8012d16 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x10a>
 8012c94:	e8df f013 	tbh	[pc, r3, lsl #1]
 8012c98:	012b0158 	.word	0x012b0158
 8012c9c:	00a2002b 	.word	0x00a2002b
 8012ca0:	00de      	.short	0x00de
 8012ca2:	f1ba 0f00 	cmp.w	sl, #0
 8012ca6:	d1f1      	bne.n	8012c8c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x80>
 8012ca8:	f8d8 3000 	ldr.w	r3, [r8]
 8012cac:	f043 0304 	orr.w	r3, r3, #4
 8012cb0:	f8c8 3000 	str.w	r3, [r8]
 8012cb4:	ac08      	add	r4, sp, #32
 8012cb6:	a924      	add	r1, sp, #144	; 0x90
 8012cb8:	4620      	mov	r0, r4
 8012cba:	f7ff f92c 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 8012cbe:	b128      	cbz	r0, 8012ccc <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0xc0>
 8012cc0:	f8d8 3000 	ldr.w	r3, [r8]
 8012cc4:	f043 0302 	orr.w	r3, r3, #2
 8012cc8:	f8c8 3000 	str.w	r3, [r8]
 8012ccc:	e894 0003 	ldmia.w	r4, {r0, r1}
 8012cd0:	9b06      	ldr	r3, [sp, #24]
 8012cd2:	e883 0003 	stmia.w	r3, {r0, r1}
 8012cd6:	a812      	add	r0, sp, #72	; 0x48
 8012cd8:	f00a fe20 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8012cdc:	a80c      	add	r0, sp, #48	; 0x30
 8012cde:	f00a fe1d 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8012ce2:	9806      	ldr	r0, [sp, #24]
 8012ce4:	b019      	add	sp, #100	; 0x64
 8012ce6:	ecbd 8b02 	vpop	{d8}
 8012cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012cee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012cf0:	68db      	ldr	r3, [r3, #12]
 8012cf2:	0598      	lsls	r0, r3, #22
 8012cf4:	d41e      	bmi.n	8012d34 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 8012cf6:	f1b9 0f01 	cmp.w	r9, #1
 8012cfa:	d81b      	bhi.n	8012d34 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 8012cfc:	b1d5      	cbz	r5, 8012d34 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 8012cfe:	2d01      	cmp	r5, #1
 8012d00:	d10c      	bne.n	8012d1c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x110>
 8012d02:	9b02      	ldr	r3, [sp, #8]
 8012d04:	b9b3      	cbnz	r3, 8012d34 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 8012d06:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8012d0a:	2b03      	cmp	r3, #3
 8012d0c:	d012      	beq.n	8012d34 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 8012d0e:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 8012d12:	2b01      	cmp	r3, #1
 8012d14:	d00e      	beq.n	8012d34 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 8012d16:	f04f 0a01 	mov.w	sl, #1
 8012d1a:	e02c      	b.n	8012d76 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8012d1c:	2d02      	cmp	r5, #2
 8012d1e:	d1fa      	bne.n	8012d16 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x10a>
 8012d20:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
 8012d24:	2b04      	cmp	r3, #4
 8012d26:	d005      	beq.n	8012d34 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 8012d28:	9a02      	ldr	r2, [sp, #8]
 8012d2a:	2a00      	cmp	r2, #0
 8012d2c:	d0f3      	beq.n	8012d16 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x10a>
 8012d2e:	2b03      	cmp	r3, #3
 8012d30:	f040 810d 	bne.w	8012f4e <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x342>
 8012d34:	69a3      	ldr	r3, [r4, #24]
 8012d36:	9305      	str	r3, [sp, #20]
 8012d38:	f04f 0b00 	mov.w	fp, #0
 8012d3c:	a924      	add	r1, sp, #144	; 0x90
 8012d3e:	a808      	add	r0, sp, #32
 8012d40:	f7ff f8fc 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8012d44:	9b05      	ldr	r3, [sp, #20]
 8012d46:	4682      	mov	sl, r0
 8012d48:	2800      	cmp	r0, #0
 8012d4a:	d03e      	beq.n	8012dca <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x1be>
 8012d4c:	459b      	cmp	fp, r3
 8012d4e:	d012      	beq.n	8012d76 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8012d50:	a808      	add	r0, sp, #32
 8012d52:	f7ff f8d1 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012d56:	6963      	ldr	r3, [r4, #20]
 8012d58:	f813 300b 	ldrb.w	r3, [r3, fp]
 8012d5c:	b2c0      	uxtb	r0, r0
 8012d5e:	4283      	cmp	r3, r0
 8012d60:	d036      	beq.n	8012dd0 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x1c4>
 8012d62:	f1bb 0f00 	cmp.w	fp, #0
 8012d66:	f040 80f5 	bne.w	8012f54 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x348>
 8012d6a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012d6c:	68db      	ldr	r3, [r3, #12]
 8012d6e:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 8012d72:	f3c3 2a40 	ubfx	sl, r3, #9, #1
 8012d76:	3501      	adds	r5, #1
 8012d78:	2d04      	cmp	r5, #4
 8012d7a:	d192      	bne.n	8012ca2 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x96>
 8012d7c:	f1b9 0f01 	cmp.w	r9, #1
 8012d80:	f240 812d 	bls.w	8012fde <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3d2>
 8012d84:	f1ba 0f00 	cmp.w	sl, #0
 8012d88:	d08e      	beq.n	8012ca8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x9c>
 8012d8a:	9b01      	ldr	r3, [sp, #4]
 8012d8c:	2b00      	cmp	r3, #0
 8012d8e:	f000 80e4 	beq.w	8012f5a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x34e>
 8012d92:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8012d94:	f04f 0b01 	mov.w	fp, #1
 8012d98:	a924      	add	r1, sp, #144	; 0x90
 8012d9a:	a808      	add	r0, sp, #32
 8012d9c:	f7ff f8ce 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8012da0:	2800      	cmp	r0, #0
 8012da2:	f000 80dc 	beq.w	8012f5e <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x352>
 8012da6:	45d9      	cmp	r9, fp
 8012da8:	f000 80dc 	beq.w	8012f64 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x358>
 8012dac:	a808      	add	r0, sp, #32
 8012dae:	f7ff f8a3 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012db2:	f815 300b 	ldrb.w	r3, [r5, fp]
 8012db6:	b2c0      	uxtb	r0, r0
 8012db8:	4283      	cmp	r3, r0
 8012dba:	f47f af75 	bne.w	8012ca8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x9c>
 8012dbe:	a808      	add	r0, sp, #32
 8012dc0:	f7fe fb30 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8012dc4:	f10b 0b01 	add.w	fp, fp, #1
 8012dc8:	e7e6      	b.n	8012d98 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x18c>
 8012dca:	459b      	cmp	fp, r3
 8012dcc:	d1c9      	bne.n	8012d62 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x156>
 8012dce:	e7a2      	b.n	8012d16 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x10a>
 8012dd0:	a808      	add	r0, sp, #32
 8012dd2:	f7fe fb27 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8012dd6:	f10b 0b01 	add.w	fp, fp, #1
 8012dda:	e7af      	b.n	8012d3c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x130>
 8012ddc:	6a23      	ldr	r3, [r4, #32]
 8012dde:	b9bb      	cbnz	r3, 8012e10 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x204>
 8012de0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8012de2:	b353      	cbz	r3, 8012e3a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x22e>
 8012de4:	a924      	add	r1, sp, #144	; 0x90
 8012de6:	a808      	add	r0, sp, #32
 8012de8:	f7ff f8a8 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8012dec:	4682      	mov	sl, r0
 8012dee:	b320      	cbz	r0, 8012e3a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x22e>
 8012df0:	a808      	add	r0, sp, #32
 8012df2:	f7ff f881 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012df6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8012df8:	7812      	ldrb	r2, [r2, #0]
 8012dfa:	b2c0      	uxtb	r0, r0
 8012dfc:	4282      	cmp	r2, r0
 8012dfe:	d11c      	bne.n	8012e3a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x22e>
 8012e00:	a808      	add	r0, sp, #32
 8012e02:	f8d4 9028 	ldr.w	r9, [r4, #40]	; 0x28
 8012e06:	f7fe fb0d 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8012e0a:	f8cd a004 	str.w	sl, [sp, #4]
 8012e0e:	e7b2      	b.n	8012d76 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8012e10:	a924      	add	r1, sp, #144	; 0x90
 8012e12:	a808      	add	r0, sp, #32
 8012e14:	f7ff f892 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8012e18:	4682      	mov	sl, r0
 8012e1a:	2800      	cmp	r0, #0
 8012e1c:	d0e0      	beq.n	8012de0 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x1d4>
 8012e1e:	a808      	add	r0, sp, #32
 8012e20:	f7ff f86a 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012e24:	69e2      	ldr	r2, [r4, #28]
 8012e26:	7812      	ldrb	r2, [r2, #0]
 8012e28:	b2c0      	uxtb	r0, r0
 8012e2a:	4282      	cmp	r2, r0
 8012e2c:	d1d8      	bne.n	8012de0 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x1d4>
 8012e2e:	a808      	add	r0, sp, #32
 8012e30:	f8d4 9020 	ldr.w	r9, [r4, #32]
 8012e34:	f7fe faf6 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8012e38:	e79d      	b.n	8012d76 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8012e3a:	6a23      	ldr	r3, [r4, #32]
 8012e3c:	b91b      	cbnz	r3, 8012e46 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x23a>
 8012e3e:	9b02      	ldr	r3, [sp, #8]
 8012e40:	f083 0a01 	eor.w	sl, r3, #1
 8012e44:	e797      	b.n	8012d76 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8012e46:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8012e48:	2b00      	cmp	r3, #0
 8012e4a:	d1f8      	bne.n	8012e3e <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x232>
 8012e4c:	2301      	movs	r3, #1
 8012e4e:	9301      	str	r3, [sp, #4]
 8012e50:	469a      	mov	sl, r3
 8012e52:	e790      	b.n	8012d76 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8012e54:	a924      	add	r1, sp, #144	; 0x90
 8012e56:	a808      	add	r0, sp, #32
 8012e58:	f7ff f870 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8012e5c:	4682      	mov	sl, r0
 8012e5e:	2800      	cmp	r0, #0
 8012e60:	d042      	beq.n	8012ee8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2dc>
 8012e62:	a808      	add	r0, sp, #32
 8012e64:	f7ff f848 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012e68:	f10d 022b 	add.w	r2, sp, #43	; 0x2b
 8012e6c:	fa5f fb80 	uxtb.w	fp, r0
 8012e70:	210a      	movs	r1, #10
 8012e72:	ee18 0a10 	vmov	r0, s16
 8012e76:	f88d b02b 	strb.w	fp, [sp, #43]	; 0x2b
 8012e7a:	f7fc ff97 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 8012e7e:	b180      	cbz	r0, 8012ea2 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x296>
 8012e80:	9b07      	ldr	r3, [sp, #28]
 8012e82:	1ac0      	subs	r0, r0, r3
 8012e84:	4b59      	ldr	r3, [pc, #356]	; (8012fec <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3e0>)
 8012e86:	681b      	ldr	r3, [r3, #0]
 8012e88:	5c19      	ldrb	r1, [r3, r0]
 8012e8a:	a812      	add	r0, sp, #72	; 0x48
 8012e8c:	f00a fe6c 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8012e90:	f106 0b01 	add.w	fp, r6, #1
 8012e94:	9e03      	ldr	r6, [sp, #12]
 8012e96:	a808      	add	r0, sp, #32
 8012e98:	f7fe fac4 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8012e9c:	9603      	str	r6, [sp, #12]
 8012e9e:	465e      	mov	r6, fp
 8012ea0:	e7d8      	b.n	8012e54 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x248>
 8012ea2:	7c62      	ldrb	r2, [r4, #17]
 8012ea4:	455a      	cmp	r2, fp
 8012ea6:	d106      	bne.n	8012eb6 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2aa>
 8012ea8:	b92f      	cbnz	r7, 8012eb6 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2aa>
 8012eaa:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012eac:	2a00      	cmp	r2, #0
 8012eae:	dd11      	ble.n	8012ed4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2c8>
 8012eb0:	4657      	mov	r7, sl
 8012eb2:	4683      	mov	fp, r0
 8012eb4:	e7ef      	b.n	8012e96 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x28a>
 8012eb6:	7c22      	ldrb	r2, [r4, #16]
 8012eb8:	b162      	cbz	r2, 8012ed4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2c8>
 8012eba:	7ca3      	ldrb	r3, [r4, #18]
 8012ebc:	455b      	cmp	r3, fp
 8012ebe:	d108      	bne.n	8012ed2 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2c6>
 8012ec0:	b977      	cbnz	r7, 8012ee0 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2d4>
 8012ec2:	b17e      	cbz	r6, 8012ee4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2d8>
 8012ec4:	b2f1      	uxtb	r1, r6
 8012ec6:	a80c      	add	r0, sp, #48	; 0x30
 8012ec8:	f00a fe4e 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8012ecc:	46bb      	mov	fp, r7
 8012ece:	9e03      	ldr	r6, [sp, #12]
 8012ed0:	e7e1      	b.n	8012e96 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x28a>
 8012ed2:	4692      	mov	sl, r2
 8012ed4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012ed6:	2a00      	cmp	r2, #0
 8012ed8:	bf08      	it	eq
 8012eda:	f04f 0a00 	moveq.w	sl, #0
 8012ede:	e74a      	b.n	8012d76 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8012ee0:	46ba      	mov	sl, r7
 8012ee2:	e7f7      	b.n	8012ed4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2c8>
 8012ee4:	46b2      	mov	sl, r6
 8012ee6:	e7f5      	b.n	8012ed4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2c8>
 8012ee8:	f04f 0a01 	mov.w	sl, #1
 8012eec:	e7f2      	b.n	8012ed4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2c8>
 8012eee:	a924      	add	r1, sp, #144	; 0x90
 8012ef0:	a808      	add	r0, sp, #32
 8012ef2:	f7ff f823 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8012ef6:	4682      	mov	sl, r0
 8012ef8:	b9c8      	cbnz	r0, 8012f2e <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x322>
 8012efa:	f04f 0a00 	mov.w	sl, #0
 8012efe:	2d03      	cmp	r5, #3
 8012f00:	f43f af39 	beq.w	8012d76 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8012f04:	a924      	add	r1, sp, #144	; 0x90
 8012f06:	a808      	add	r0, sp, #32
 8012f08:	f7ff f818 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8012f0c:	2800      	cmp	r0, #0
 8012f0e:	f43f af32 	beq.w	8012d76 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8012f12:	a808      	add	r0, sp, #32
 8012f14:	f7fe fff0 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012f18:	9b04      	ldr	r3, [sp, #16]
 8012f1a:	b2c0      	uxtb	r0, r0
 8012f1c:	699a      	ldr	r2, [r3, #24]
 8012f1e:	5c12      	ldrb	r2, [r2, r0]
 8012f20:	0712      	lsls	r2, r2, #28
 8012f22:	f57f af28 	bpl.w	8012d76 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8012f26:	a808      	add	r0, sp, #32
 8012f28:	f7fe fa7c 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8012f2c:	e7ea      	b.n	8012f04 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2f8>
 8012f2e:	a808      	add	r0, sp, #32
 8012f30:	f7fe ffe2 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8012f34:	9b04      	ldr	r3, [sp, #16]
 8012f36:	b2c0      	uxtb	r0, r0
 8012f38:	699a      	ldr	r2, [r3, #24]
 8012f3a:	5c12      	ldrb	r2, [r2, r0]
 8012f3c:	0711      	lsls	r1, r2, #28
 8012f3e:	d5dc      	bpl.n	8012efa <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2ee>
 8012f40:	a808      	add	r0, sp, #32
 8012f42:	f7fe fa6f 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8012f46:	e7da      	b.n	8012efe <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2f2>
 8012f48:	f04f 0a01 	mov.w	sl, #1
 8012f4c:	e7d7      	b.n	8012efe <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2f2>
 8012f4e:	f8dd a008 	ldr.w	sl, [sp, #8]
 8012f52:	e710      	b.n	8012d76 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8012f54:	f04f 0a00 	mov.w	sl, #0
 8012f58:	e70d      	b.n	8012d76 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8012f5a:	69e5      	ldr	r5, [r4, #28]
 8012f5c:	e71a      	b.n	8012d94 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x188>
 8012f5e:	45d9      	cmp	r9, fp
 8012f60:	f47f aea2 	bne.w	8012ca8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x9c>
 8012f64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8012f66:	2b01      	cmp	r3, #1
 8012f68:	d911      	bls.n	8012f8e <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x382>
 8012f6a:	2200      	movs	r2, #0
 8012f6c:	2130      	movs	r1, #48	; 0x30
 8012f6e:	a812      	add	r0, sp, #72	; 0x48
 8012f70:	f00a ffc0 	bl	801def4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj>
 8012f74:	4602      	mov	r2, r0
 8012f76:	b150      	cbz	r0, 8012f8e <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x382>
 8012f78:	1c43      	adds	r3, r0, #1
 8012f7a:	bf08      	it	eq
 8012f7c:	9813      	ldreq	r0, [sp, #76]	; 0x4c
 8012f7e:	f04f 0100 	mov.w	r1, #0
 8012f82:	bf08      	it	eq
 8012f84:	f100 32ff 	addeq.w	r2, r0, #4294967295	; 0xffffffff
 8012f88:	a812      	add	r0, sp, #72	; 0x48
 8012f8a:	f7fe fa2b 	bl	80113e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0>
 8012f8e:	9b01      	ldr	r3, [sp, #4]
 8012f90:	b13b      	cbz	r3, 8012fa2 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x396>
 8012f92:	9912      	ldr	r1, [sp, #72]	; 0x48
 8012f94:	780b      	ldrb	r3, [r1, #0]
 8012f96:	2b30      	cmp	r3, #48	; 0x30
 8012f98:	d003      	beq.n	8012fa2 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x396>
 8012f9a:	222d      	movs	r2, #45	; 0x2d
 8012f9c:	a812      	add	r0, sp, #72	; 0x48
 8012f9e:	f00a fe61 	bl	801dc64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEc>
 8012fa2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012fa4:	b18b      	cbz	r3, 8012fca <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3be>
 8012fa6:	b1f7      	cbz	r7, 8012fe6 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3da>
 8012fa8:	f89d 100c 	ldrb.w	r1, [sp, #12]
 8012fac:	a80c      	add	r0, sp, #48	; 0x30
 8012fae:	f00a fddb 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8012fb2:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 8012fb6:	aa0c      	add	r2, sp, #48	; 0x30
 8012fb8:	f011 fe19 	bl	8024bee <_ZSt17__verify_groupingPKcjRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8012fbc:	b928      	cbnz	r0, 8012fca <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3be>
 8012fbe:	f8d8 3000 	ldr.w	r3, [r8]
 8012fc2:	f043 0304 	orr.w	r3, r3, #4
 8012fc6:	f8c8 3000 	str.w	r3, [r8]
 8012fca:	b11f      	cbz	r7, 8012fd4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3c8>
 8012fcc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012fce:	42b3      	cmp	r3, r6
 8012fd0:	f47f ae6a 	bne.w	8012ca8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x9c>
 8012fd4:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8012fd6:	a912      	add	r1, sp, #72	; 0x48
 8012fd8:	f00a ff1e 	bl	801de18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_>
 8012fdc:	e66a      	b.n	8012cb4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0xa8>
 8012fde:	f1ba 0f00 	cmp.w	sl, #0
 8012fe2:	d1bf      	bne.n	8012f64 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x358>
 8012fe4:	e660      	b.n	8012ca8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x9c>
 8012fe6:	b2f1      	uxtb	r1, r6
 8012fe8:	e7e0      	b.n	8012fac <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3a0>
 8012fea:	bf00      	nop
 8012fec:	2000003c 	.word	0x2000003c

08012ff0 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE>:
 8012ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ff4:	ed2d 8b02 	vpush	{d8}
 8012ff8:	b099      	sub	sp, #100	; 0x64
 8012ffa:	a908      	add	r1, sp, #32
 8012ffc:	e881 000c 	stmia.w	r1, {r2, r3}
 8013000:	e9dd 3826 	ldrd	r3, r8, [sp, #152]	; 0x98
 8013004:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 8013008:	9006      	str	r0, [sp, #24]
 801300a:	4620      	mov	r0, r4
 801300c:	f005 face 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8013010:	9004      	str	r0, [sp, #16]
 8013012:	4620      	mov	r0, r4
 8013014:	f7fe f9b2 	bl	801137c <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb0EEEclERKSt6locale.isra.0>
 8013018:	f100 0338 	add.w	r3, r0, #56	; 0x38
 801301c:	9307      	str	r3, [sp, #28]
 801301e:	6a03      	ldr	r3, [r0, #32]
 8013020:	4604      	mov	r4, r0
 8013022:	b11b      	cbz	r3, 801302c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3c>
 8013024:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8013026:	3b00      	subs	r3, #0
 8013028:	bf18      	it	ne
 801302a:	2301      	movne	r3, #1
 801302c:	9302      	str	r3, [sp, #8]
 801302e:	ab0e      	add	r3, sp, #56	; 0x38
 8013030:	930c      	str	r3, [sp, #48]	; 0x30
 8013032:	2300      	movs	r3, #0
 8013034:	930d      	str	r3, [sp, #52]	; 0x34
 8013036:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
 801303a:	7c23      	ldrb	r3, [r4, #16]
 801303c:	b11b      	cbz	r3, 8013046 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x56>
 801303e:	2120      	movs	r1, #32
 8013040:	a80c      	add	r0, sp, #48	; 0x30
 8013042:	f00a fd5f 	bl	801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
 8013046:	2500      	movs	r5, #0
 8013048:	ab14      	add	r3, sp, #80	; 0x50
 801304a:	2120      	movs	r1, #32
 801304c:	a812      	add	r0, sp, #72	; 0x48
 801304e:	9312      	str	r3, [sp, #72]	; 0x48
 8013050:	9513      	str	r5, [sp, #76]	; 0x4c
 8013052:	f88d 5050 	strb.w	r5, [sp, #80]	; 0x50
 8013056:	f00a fd55 	bl	801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
 801305a:	f104 0339 	add.w	r3, r4, #57	; 0x39
 801305e:	ee08 3a10 	vmov	s16, r3
 8013062:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8013064:	930b      	str	r3, [sp, #44]	; 0x2c
 8013066:	462f      	mov	r7, r5
 8013068:	462e      	mov	r6, r5
 801306a:	9503      	str	r5, [sp, #12]
 801306c:	46a9      	mov	r9, r5
 801306e:	9501      	str	r5, [sp, #4]
 8013070:	ab0b      	add	r3, sp, #44	; 0x2c
 8013072:	5d5b      	ldrb	r3, [r3, r5]
 8013074:	2b04      	cmp	r3, #4
 8013076:	d840      	bhi.n	80130fa <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x10a>
 8013078:	e8df f013 	tbh	[pc, r3, lsl #1]
 801307c:	012b0158 	.word	0x012b0158
 8013080:	00a2002b 	.word	0x00a2002b
 8013084:	00de      	.short	0x00de
 8013086:	f1ba 0f00 	cmp.w	sl, #0
 801308a:	d1f1      	bne.n	8013070 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x80>
 801308c:	f8d8 3000 	ldr.w	r3, [r8]
 8013090:	f043 0304 	orr.w	r3, r3, #4
 8013094:	f8c8 3000 	str.w	r3, [r8]
 8013098:	ac08      	add	r4, sp, #32
 801309a:	a924      	add	r1, sp, #144	; 0x90
 801309c:	4620      	mov	r0, r4
 801309e:	f7fe ff3a 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 80130a2:	b128      	cbz	r0, 80130b0 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0xc0>
 80130a4:	f8d8 3000 	ldr.w	r3, [r8]
 80130a8:	f043 0302 	orr.w	r3, r3, #2
 80130ac:	f8c8 3000 	str.w	r3, [r8]
 80130b0:	e894 0003 	ldmia.w	r4, {r0, r1}
 80130b4:	9b06      	ldr	r3, [sp, #24]
 80130b6:	e883 0003 	stmia.w	r3, {r0, r1}
 80130ba:	a812      	add	r0, sp, #72	; 0x48
 80130bc:	f00a fc2e 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80130c0:	a80c      	add	r0, sp, #48	; 0x30
 80130c2:	f00a fc2b 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80130c6:	9806      	ldr	r0, [sp, #24]
 80130c8:	b019      	add	sp, #100	; 0x64
 80130ca:	ecbd 8b02 	vpop	{d8}
 80130ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80130d4:	68db      	ldr	r3, [r3, #12]
 80130d6:	0598      	lsls	r0, r3, #22
 80130d8:	d41e      	bmi.n	8013118 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 80130da:	f1b9 0f01 	cmp.w	r9, #1
 80130de:	d81b      	bhi.n	8013118 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 80130e0:	b1d5      	cbz	r5, 8013118 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 80130e2:	2d01      	cmp	r5, #1
 80130e4:	d10c      	bne.n	8013100 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x110>
 80130e6:	9b02      	ldr	r3, [sp, #8]
 80130e8:	b9b3      	cbnz	r3, 8013118 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 80130ea:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 80130ee:	2b03      	cmp	r3, #3
 80130f0:	d012      	beq.n	8013118 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 80130f2:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 80130f6:	2b01      	cmp	r3, #1
 80130f8:	d00e      	beq.n	8013118 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 80130fa:	f04f 0a01 	mov.w	sl, #1
 80130fe:	e02c      	b.n	801315a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8013100:	2d02      	cmp	r5, #2
 8013102:	d1fa      	bne.n	80130fa <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x10a>
 8013104:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
 8013108:	2b04      	cmp	r3, #4
 801310a:	d005      	beq.n	8013118 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x128>
 801310c:	9a02      	ldr	r2, [sp, #8]
 801310e:	2a00      	cmp	r2, #0
 8013110:	d0f3      	beq.n	80130fa <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x10a>
 8013112:	2b03      	cmp	r3, #3
 8013114:	f040 810d 	bne.w	8013332 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x342>
 8013118:	69a3      	ldr	r3, [r4, #24]
 801311a:	9305      	str	r3, [sp, #20]
 801311c:	f04f 0b00 	mov.w	fp, #0
 8013120:	a924      	add	r1, sp, #144	; 0x90
 8013122:	a808      	add	r0, sp, #32
 8013124:	f7fe ff0a 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8013128:	9b05      	ldr	r3, [sp, #20]
 801312a:	4682      	mov	sl, r0
 801312c:	2800      	cmp	r0, #0
 801312e:	d03e      	beq.n	80131ae <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x1be>
 8013130:	459b      	cmp	fp, r3
 8013132:	d012      	beq.n	801315a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8013134:	a808      	add	r0, sp, #32
 8013136:	f7fe fedf 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801313a:	6963      	ldr	r3, [r4, #20]
 801313c:	f813 300b 	ldrb.w	r3, [r3, fp]
 8013140:	b2c0      	uxtb	r0, r0
 8013142:	4283      	cmp	r3, r0
 8013144:	d036      	beq.n	80131b4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x1c4>
 8013146:	f1bb 0f00 	cmp.w	fp, #0
 801314a:	f040 80f5 	bne.w	8013338 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x348>
 801314e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013150:	68db      	ldr	r3, [r3, #12]
 8013152:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 8013156:	f3c3 2a40 	ubfx	sl, r3, #9, #1
 801315a:	3501      	adds	r5, #1
 801315c:	2d04      	cmp	r5, #4
 801315e:	d192      	bne.n	8013086 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x96>
 8013160:	f1b9 0f01 	cmp.w	r9, #1
 8013164:	f240 812d 	bls.w	80133c2 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3d2>
 8013168:	f1ba 0f00 	cmp.w	sl, #0
 801316c:	d08e      	beq.n	801308c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x9c>
 801316e:	9b01      	ldr	r3, [sp, #4]
 8013170:	2b00      	cmp	r3, #0
 8013172:	f000 80e4 	beq.w	801333e <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x34e>
 8013176:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8013178:	f04f 0b01 	mov.w	fp, #1
 801317c:	a924      	add	r1, sp, #144	; 0x90
 801317e:	a808      	add	r0, sp, #32
 8013180:	f7fe fedc 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8013184:	2800      	cmp	r0, #0
 8013186:	f000 80dc 	beq.w	8013342 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x352>
 801318a:	45d9      	cmp	r9, fp
 801318c:	f000 80dc 	beq.w	8013348 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x358>
 8013190:	a808      	add	r0, sp, #32
 8013192:	f7fe feb1 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8013196:	f815 300b 	ldrb.w	r3, [r5, fp]
 801319a:	b2c0      	uxtb	r0, r0
 801319c:	4283      	cmp	r3, r0
 801319e:	f47f af75 	bne.w	801308c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x9c>
 80131a2:	a808      	add	r0, sp, #32
 80131a4:	f7fe f93e 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 80131a8:	f10b 0b01 	add.w	fp, fp, #1
 80131ac:	e7e6      	b.n	801317c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x18c>
 80131ae:	459b      	cmp	fp, r3
 80131b0:	d1c9      	bne.n	8013146 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x156>
 80131b2:	e7a2      	b.n	80130fa <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x10a>
 80131b4:	a808      	add	r0, sp, #32
 80131b6:	f7fe f935 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 80131ba:	f10b 0b01 	add.w	fp, fp, #1
 80131be:	e7af      	b.n	8013120 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x130>
 80131c0:	6a23      	ldr	r3, [r4, #32]
 80131c2:	b9bb      	cbnz	r3, 80131f4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x204>
 80131c4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80131c6:	b353      	cbz	r3, 801321e <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x22e>
 80131c8:	a924      	add	r1, sp, #144	; 0x90
 80131ca:	a808      	add	r0, sp, #32
 80131cc:	f7fe feb6 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80131d0:	4682      	mov	sl, r0
 80131d2:	b320      	cbz	r0, 801321e <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x22e>
 80131d4:	a808      	add	r0, sp, #32
 80131d6:	f7fe fe8f 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 80131da:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80131dc:	7812      	ldrb	r2, [r2, #0]
 80131de:	b2c0      	uxtb	r0, r0
 80131e0:	4282      	cmp	r2, r0
 80131e2:	d11c      	bne.n	801321e <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x22e>
 80131e4:	a808      	add	r0, sp, #32
 80131e6:	f8d4 9028 	ldr.w	r9, [r4, #40]	; 0x28
 80131ea:	f7fe f91b 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 80131ee:	f8cd a004 	str.w	sl, [sp, #4]
 80131f2:	e7b2      	b.n	801315a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 80131f4:	a924      	add	r1, sp, #144	; 0x90
 80131f6:	a808      	add	r0, sp, #32
 80131f8:	f7fe fea0 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80131fc:	4682      	mov	sl, r0
 80131fe:	2800      	cmp	r0, #0
 8013200:	d0e0      	beq.n	80131c4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x1d4>
 8013202:	a808      	add	r0, sp, #32
 8013204:	f7fe fe78 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8013208:	69e2      	ldr	r2, [r4, #28]
 801320a:	7812      	ldrb	r2, [r2, #0]
 801320c:	b2c0      	uxtb	r0, r0
 801320e:	4282      	cmp	r2, r0
 8013210:	d1d8      	bne.n	80131c4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x1d4>
 8013212:	a808      	add	r0, sp, #32
 8013214:	f8d4 9020 	ldr.w	r9, [r4, #32]
 8013218:	f7fe f904 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 801321c:	e79d      	b.n	801315a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 801321e:	6a23      	ldr	r3, [r4, #32]
 8013220:	b91b      	cbnz	r3, 801322a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x23a>
 8013222:	9b02      	ldr	r3, [sp, #8]
 8013224:	f083 0a01 	eor.w	sl, r3, #1
 8013228:	e797      	b.n	801315a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 801322a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801322c:	2b00      	cmp	r3, #0
 801322e:	d1f8      	bne.n	8013222 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x232>
 8013230:	2301      	movs	r3, #1
 8013232:	9301      	str	r3, [sp, #4]
 8013234:	469a      	mov	sl, r3
 8013236:	e790      	b.n	801315a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8013238:	a924      	add	r1, sp, #144	; 0x90
 801323a:	a808      	add	r0, sp, #32
 801323c:	f7fe fe7e 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8013240:	4682      	mov	sl, r0
 8013242:	2800      	cmp	r0, #0
 8013244:	d042      	beq.n	80132cc <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2dc>
 8013246:	a808      	add	r0, sp, #32
 8013248:	f7fe fe56 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801324c:	f10d 022b 	add.w	r2, sp, #43	; 0x2b
 8013250:	fa5f fb80 	uxtb.w	fp, r0
 8013254:	210a      	movs	r1, #10
 8013256:	ee18 0a10 	vmov	r0, s16
 801325a:	f88d b02b 	strb.w	fp, [sp, #43]	; 0x2b
 801325e:	f7fc fda5 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 8013262:	b180      	cbz	r0, 8013286 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x296>
 8013264:	9b07      	ldr	r3, [sp, #28]
 8013266:	1ac0      	subs	r0, r0, r3
 8013268:	4b59      	ldr	r3, [pc, #356]	; (80133d0 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3e0>)
 801326a:	681b      	ldr	r3, [r3, #0]
 801326c:	5c19      	ldrb	r1, [r3, r0]
 801326e:	a812      	add	r0, sp, #72	; 0x48
 8013270:	f00a fc7a 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8013274:	f106 0b01 	add.w	fp, r6, #1
 8013278:	9e03      	ldr	r6, [sp, #12]
 801327a:	a808      	add	r0, sp, #32
 801327c:	f7fe f8d2 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8013280:	9603      	str	r6, [sp, #12]
 8013282:	465e      	mov	r6, fp
 8013284:	e7d8      	b.n	8013238 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x248>
 8013286:	7c62      	ldrb	r2, [r4, #17]
 8013288:	455a      	cmp	r2, fp
 801328a:	d106      	bne.n	801329a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2aa>
 801328c:	b92f      	cbnz	r7, 801329a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2aa>
 801328e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8013290:	2a00      	cmp	r2, #0
 8013292:	dd11      	ble.n	80132b8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2c8>
 8013294:	4657      	mov	r7, sl
 8013296:	4683      	mov	fp, r0
 8013298:	e7ef      	b.n	801327a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x28a>
 801329a:	7c22      	ldrb	r2, [r4, #16]
 801329c:	b162      	cbz	r2, 80132b8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2c8>
 801329e:	7ca3      	ldrb	r3, [r4, #18]
 80132a0:	455b      	cmp	r3, fp
 80132a2:	d108      	bne.n	80132b6 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2c6>
 80132a4:	b977      	cbnz	r7, 80132c4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2d4>
 80132a6:	b17e      	cbz	r6, 80132c8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2d8>
 80132a8:	b2f1      	uxtb	r1, r6
 80132aa:	a80c      	add	r0, sp, #48	; 0x30
 80132ac:	f00a fc5c 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 80132b0:	46bb      	mov	fp, r7
 80132b2:	9e03      	ldr	r6, [sp, #12]
 80132b4:	e7e1      	b.n	801327a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x28a>
 80132b6:	4692      	mov	sl, r2
 80132b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80132ba:	2a00      	cmp	r2, #0
 80132bc:	bf08      	it	eq
 80132be:	f04f 0a00 	moveq.w	sl, #0
 80132c2:	e74a      	b.n	801315a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 80132c4:	46ba      	mov	sl, r7
 80132c6:	e7f7      	b.n	80132b8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2c8>
 80132c8:	46b2      	mov	sl, r6
 80132ca:	e7f5      	b.n	80132b8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2c8>
 80132cc:	f04f 0a01 	mov.w	sl, #1
 80132d0:	e7f2      	b.n	80132b8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2c8>
 80132d2:	a924      	add	r1, sp, #144	; 0x90
 80132d4:	a808      	add	r0, sp, #32
 80132d6:	f7fe fe31 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80132da:	4682      	mov	sl, r0
 80132dc:	b9c8      	cbnz	r0, 8013312 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x322>
 80132de:	f04f 0a00 	mov.w	sl, #0
 80132e2:	2d03      	cmp	r5, #3
 80132e4:	f43f af39 	beq.w	801315a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 80132e8:	a924      	add	r1, sp, #144	; 0x90
 80132ea:	a808      	add	r0, sp, #32
 80132ec:	f7fe fe26 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80132f0:	2800      	cmp	r0, #0
 80132f2:	f43f af32 	beq.w	801315a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 80132f6:	a808      	add	r0, sp, #32
 80132f8:	f7fe fdfe 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 80132fc:	9b04      	ldr	r3, [sp, #16]
 80132fe:	b2c0      	uxtb	r0, r0
 8013300:	699a      	ldr	r2, [r3, #24]
 8013302:	5c12      	ldrb	r2, [r2, r0]
 8013304:	0712      	lsls	r2, r2, #28
 8013306:	f57f af28 	bpl.w	801315a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 801330a:	a808      	add	r0, sp, #32
 801330c:	f7fe f88a 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 8013310:	e7ea      	b.n	80132e8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2f8>
 8013312:	a808      	add	r0, sp, #32
 8013314:	f7fe fdf0 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 8013318:	9b04      	ldr	r3, [sp, #16]
 801331a:	b2c0      	uxtb	r0, r0
 801331c:	699a      	ldr	r2, [r3, #24]
 801331e:	5c12      	ldrb	r2, [r2, r0]
 8013320:	0711      	lsls	r1, r2, #28
 8013322:	d5dc      	bpl.n	80132de <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2ee>
 8013324:	a808      	add	r0, sp, #32
 8013326:	f7fe f87d 	bl	8011424 <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv.isra.0>
 801332a:	e7da      	b.n	80132e2 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2f2>
 801332c:	f04f 0a01 	mov.w	sl, #1
 8013330:	e7d7      	b.n	80132e2 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x2f2>
 8013332:	f8dd a008 	ldr.w	sl, [sp, #8]
 8013336:	e710      	b.n	801315a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 8013338:	f04f 0a00 	mov.w	sl, #0
 801333c:	e70d      	b.n	801315a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x16a>
 801333e:	69e5      	ldr	r5, [r4, #28]
 8013340:	e71a      	b.n	8013178 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x188>
 8013342:	45d9      	cmp	r9, fp
 8013344:	f47f aea2 	bne.w	801308c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x9c>
 8013348:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801334a:	2b01      	cmp	r3, #1
 801334c:	d911      	bls.n	8013372 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x382>
 801334e:	2200      	movs	r2, #0
 8013350:	2130      	movs	r1, #48	; 0x30
 8013352:	a812      	add	r0, sp, #72	; 0x48
 8013354:	f00a fdce 	bl	801def4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj>
 8013358:	4602      	mov	r2, r0
 801335a:	b150      	cbz	r0, 8013372 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x382>
 801335c:	1c43      	adds	r3, r0, #1
 801335e:	bf08      	it	eq
 8013360:	9813      	ldreq	r0, [sp, #76]	; 0x4c
 8013362:	f04f 0100 	mov.w	r1, #0
 8013366:	bf08      	it	eq
 8013368:	f100 32ff 	addeq.w	r2, r0, #4294967295	; 0xffffffff
 801336c:	a812      	add	r0, sp, #72	; 0x48
 801336e:	f7fe f839 	bl	80113e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0>
 8013372:	9b01      	ldr	r3, [sp, #4]
 8013374:	b13b      	cbz	r3, 8013386 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x396>
 8013376:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013378:	780b      	ldrb	r3, [r1, #0]
 801337a:	2b30      	cmp	r3, #48	; 0x30
 801337c:	d003      	beq.n	8013386 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x396>
 801337e:	222d      	movs	r2, #45	; 0x2d
 8013380:	a812      	add	r0, sp, #72	; 0x48
 8013382:	f00a fc6f 	bl	801dc64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEc>
 8013386:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013388:	b18b      	cbz	r3, 80133ae <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3be>
 801338a:	b1f7      	cbz	r7, 80133ca <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3da>
 801338c:	f89d 100c 	ldrb.w	r1, [sp, #12]
 8013390:	a80c      	add	r0, sp, #48	; 0x30
 8013392:	f00a fbe9 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8013396:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 801339a:	aa0c      	add	r2, sp, #48	; 0x30
 801339c:	f011 fc27 	bl	8024bee <_ZSt17__verify_groupingPKcjRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80133a0:	b928      	cbnz	r0, 80133ae <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3be>
 80133a2:	f8d8 3000 	ldr.w	r3, [r8]
 80133a6:	f043 0304 	orr.w	r3, r3, #4
 80133aa:	f8c8 3000 	str.w	r3, [r8]
 80133ae:	b11f      	cbz	r7, 80133b8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3c8>
 80133b0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80133b2:	42b3      	cmp	r3, r6
 80133b4:	f47f ae6a 	bne.w	801308c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x9c>
 80133b8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80133ba:	a912      	add	r1, sp, #72	; 0x48
 80133bc:	f00a fd2c 	bl	801de18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_>
 80133c0:	e66a      	b.n	8013098 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0xa8>
 80133c2:	f1ba 0f00 	cmp.w	sl, #0
 80133c6:	d1bf      	bne.n	8013348 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x358>
 80133c8:	e660      	b.n	801308c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x9c>
 80133ca:	b2f1      	uxtb	r1, r6
 80133cc:	e7e0      	b.n	8013390 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x3a0>
 80133ce:	bf00      	nop
 80133d0:	2000003c 	.word	0x2000003c

080133d4 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRe>:
 80133d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80133d8:	b092      	sub	sp, #72	; 0x48
 80133da:	ac08      	add	r4, sp, #32
 80133dc:	e884 000c 	stmia.w	r4, {r2, r3}
 80133e0:	e9dd 381b 	ldrd	r3, r8, [sp, #108]	; 0x6c
 80133e4:	aa0e      	add	r2, sp, #56	; 0x38
 80133e6:	468c      	mov	ip, r1
 80133e8:	f89d 1068 	ldrb.w	r1, [sp, #104]	; 0x68
 80133ec:	920c      	str	r2, [sp, #48]	; 0x30
 80133ee:	af0c      	add	r7, sp, #48	; 0x30
 80133f0:	2200      	movs	r2, #0
 80133f2:	9302      	str	r3, [sp, #8]
 80133f4:	e9cd 8703 	strd	r8, r7, [sp, #12]
 80133f8:	4606      	mov	r6, r0
 80133fa:	920d      	str	r2, [sp, #52]	; 0x34
 80133fc:	f88d 2038 	strb.w	r2, [sp, #56]	; 0x38
 8013400:	ad06      	add	r5, sp, #24
 8013402:	ab18      	add	r3, sp, #96	; 0x60
 8013404:	b311      	cbz	r1, 801344c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRe+0x78>
 8013406:	e893 0003 	ldmia.w	r3, {r0, r1}
 801340a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801340e:	4661      	mov	r1, ip
 8013410:	e894 000c 	ldmia.w	r4, {r2, r3}
 8013414:	4628      	mov	r0, r5
 8013416:	f7ff fbf9 	bl	8012c0c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE>
 801341a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801341e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8013420:	e884 0003 	stmia.w	r4, {r0, r1}
 8013424:	f7f8 ff5a 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8013428:	991d      	ldr	r1, [sp, #116]	; 0x74
 801342a:	900b      	str	r0, [sp, #44]	; 0x2c
 801342c:	ab0b      	add	r3, sp, #44	; 0x2c
 801342e:	4642      	mov	r2, r8
 8013430:	4628      	mov	r0, r5
 8013432:	f011 f949 	bl	80246c8 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi>
 8013436:	e894 0003 	ldmia.w	r4, {r0, r1}
 801343a:	e886 0003 	stmia.w	r6, {r0, r1}
 801343e:	4638      	mov	r0, r7
 8013440:	f00a fa6c 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8013444:	4630      	mov	r0, r6
 8013446:	b012      	add	sp, #72	; 0x48
 8013448:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801344c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013450:	e88d 0003 	stmia.w	sp, {r0, r1}
 8013454:	4661      	mov	r1, ip
 8013456:	e894 000c 	ldmia.w	r4, {r2, r3}
 801345a:	4628      	mov	r0, r5
 801345c:	f7ff fdc8 	bl	8012ff0 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE>
 8013460:	e7db      	b.n	801341a <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRe+0x46>

08013462 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE>:
 8013462:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013466:	b091      	sub	sp, #68	; 0x44
 8013468:	ac08      	add	r4, sp, #32
 801346a:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 801346e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8013472:	4606      	mov	r6, r0
 8013474:	f10b 006c 	add.w	r0, fp, #108	; 0x6c
 8013478:	e884 000c 	stmia.w	r4, {r2, r3}
 801347c:	4688      	mov	r8, r1
 801347e:	f005 f895 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8013482:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8013484:	e9cd b302 	strd	fp, r3, [sp, #8]
 8013488:	af0a      	add	r7, sp, #40	; 0x28
 801348a:	9704      	str	r7, [sp, #16]
 801348c:	ab1a      	add	r3, sp, #104	; 0x68
 801348e:	4681      	mov	r9, r0
 8013490:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013494:	e88d 0003 	stmia.w	sp, {r0, r1}
 8013498:	aa0c      	add	r2, sp, #48	; 0x30
 801349a:	920a      	str	r2, [sp, #40]	; 0x28
 801349c:	ad06      	add	r5, sp, #24
 801349e:	2200      	movs	r2, #0
 80134a0:	920b      	str	r2, [sp, #44]	; 0x2c
 80134a2:	f88d 2030 	strb.w	r2, [sp, #48]	; 0x30
 80134a6:	4641      	mov	r1, r8
 80134a8:	e894 000c 	ldmia.w	r4, {r2, r3}
 80134ac:	4628      	mov	r0, r5
 80134ae:	f1ba 0f00 	cmp.w	sl, #0
 80134b2:	d01d      	beq.n	80134f0 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x8e>
 80134b4:	f7ff fbaa 	bl	8012c0c <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE>
 80134b8:	e895 0003 	ldmia.w	r5, {r0, r1}
 80134bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80134be:	e884 0003 	stmia.w	r4, {r0, r1}
 80134c2:	b155      	cbz	r5, 80134da <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x78>
 80134c4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80134c6:	4629      	mov	r1, r5
 80134c8:	f00a fbc7 	bl	801dc5a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEj>
 80134cc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80134ce:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80134d0:	194a      	adds	r2, r1, r5
 80134d2:	681b      	ldr	r3, [r3, #0]
 80134d4:	4648      	mov	r0, r9
 80134d6:	f7fe f845 	bl	8011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>
 80134da:	e894 0003 	ldmia.w	r4, {r0, r1}
 80134de:	e886 0003 	stmia.w	r6, {r0, r1}
 80134e2:	4638      	mov	r0, r7
 80134e4:	f00a fa1a 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80134e8:	4630      	mov	r0, r6
 80134ea:	b011      	add	sp, #68	; 0x44
 80134ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134f0:	f7ff fd7e 	bl	8012ff0 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE>
 80134f4:	e7e0      	b.n	80134b8 <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE+0x56>
	...

080134f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>:
 80134f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80134fa:	4604      	mov	r4, r0
 80134fc:	4616      	mov	r6, r2
 80134fe:	460d      	mov	r5, r1
 8013500:	b919      	cbnz	r1, 801350a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_+0x12>
 8013502:	b112      	cbz	r2, 801350a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_+0x12>
 8013504:	480d      	ldr	r0, [pc, #52]	; (801353c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_+0x44>)
 8013506:	f004 f991 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 801350a:	1b73      	subs	r3, r6, r5
 801350c:	2b0f      	cmp	r3, #15
 801350e:	9301      	str	r3, [sp, #4]
 8013510:	d907      	bls.n	8013522 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_+0x2a>
 8013512:	2200      	movs	r2, #0
 8013514:	a901      	add	r1, sp, #4
 8013516:	4620      	mov	r0, r4
 8013518:	f00a f9de 	bl	801d8d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 801351c:	9b01      	ldr	r3, [sp, #4]
 801351e:	6020      	str	r0, [r4, #0]
 8013520:	60a3      	str	r3, [r4, #8]
 8013522:	4632      	mov	r2, r6
 8013524:	4629      	mov	r1, r5
 8013526:	6820      	ldr	r0, [r4, #0]
 8013528:	f00a fa6e 	bl	801da08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
 801352c:	9b01      	ldr	r3, [sp, #4]
 801352e:	6822      	ldr	r2, [r4, #0]
 8013530:	6063      	str	r3, [r4, #4]
 8013532:	2100      	movs	r1, #0
 8013534:	54d1      	strb	r1, [r2, r3]
 8013536:	b002      	add	sp, #8
 8013538:	bd70      	pop	{r4, r5, r6, pc}
 801353a:	bf00      	nop
 801353c:	0802f810 	.word	0x0802f810

08013540 <_ZNKSt7__cxx117collateIcE10do_compareEPKcS3_S3_S3_>:
 8013540:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013544:	b08d      	sub	sp, #52	; 0x34
 8013546:	461c      	mov	r4, r3
 8013548:	4680      	mov	r8, r0
 801354a:	ab02      	add	r3, sp, #8
 801354c:	4668      	mov	r0, sp
 801354e:	9300      	str	r3, [sp, #0]
 8013550:	f7ff ffd2 	bl	80134f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>
 8013554:	ab08      	add	r3, sp, #32
 8013556:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013558:	9306      	str	r3, [sp, #24]
 801355a:	4621      	mov	r1, r4
 801355c:	a806      	add	r0, sp, #24
 801355e:	f7ff ffcb 	bl	80134f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>
 8013562:	e9dd 9700 	ldrd	r9, r7, [sp]
 8013566:	e9dd 5606 	ldrd	r5, r6, [sp, #24]
 801356a:	444f      	add	r7, r9
 801356c:	442e      	add	r6, r5
 801356e:	462a      	mov	r2, r5
 8013570:	4649      	mov	r1, r9
 8013572:	4640      	mov	r0, r8
 8013574:	f011 fa53 	bl	8024a1e <_ZNKSt7__cxx117collateIcE10_M_compareEPKcS3_>
 8013578:	4604      	mov	r4, r0
 801357a:	b970      	cbnz	r0, 801359a <_ZNKSt7__cxx117collateIcE10do_compareEPKcS3_S3_S3_+0x5a>
 801357c:	4648      	mov	r0, r9
 801357e:	f7ec fe81 	bl	8000284 <strlen>
 8013582:	4481      	add	r9, r0
 8013584:	4628      	mov	r0, r5
 8013586:	f7ec fe7d 	bl	8000284 <strlen>
 801358a:	454f      	cmp	r7, r9
 801358c:	eb05 0400 	add.w	r4, r5, r0
 8013590:	d10d      	bne.n	80135ae <_ZNKSt7__cxx117collateIcE10do_compareEPKcS3_S3_S3_+0x6e>
 8013592:	1b34      	subs	r4, r6, r4
 8013594:	bf18      	it	ne
 8013596:	f04f 34ff 	movne.w	r4, #4294967295	; 0xffffffff
 801359a:	a806      	add	r0, sp, #24
 801359c:	f00a f9be 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80135a0:	4668      	mov	r0, sp
 80135a2:	f00a f9bb 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80135a6:	4620      	mov	r0, r4
 80135a8:	b00d      	add	sp, #52	; 0x34
 80135aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80135ae:	42a6      	cmp	r6, r4
 80135b0:	d003      	beq.n	80135ba <_ZNKSt7__cxx117collateIcE10do_compareEPKcS3_S3_S3_+0x7a>
 80135b2:	f109 0901 	add.w	r9, r9, #1
 80135b6:	1c65      	adds	r5, r4, #1
 80135b8:	e7d9      	b.n	801356e <_ZNKSt7__cxx117collateIcE10do_compareEPKcS3_S3_S3_+0x2e>
 80135ba:	2401      	movs	r4, #1
 80135bc:	e7ed      	b.n	801359a <_ZNKSt7__cxx117collateIcE10do_compareEPKcS3_S3_S3_+0x5a>

080135be <_ZNKSt7__cxx117collateIcE12do_transformEPKcS3_>:
 80135be:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80135c2:	461c      	mov	r4, r3
 80135c4:	f100 0308 	add.w	r3, r0, #8
 80135c8:	b087      	sub	sp, #28
 80135ca:	4615      	mov	r5, r2
 80135cc:	6003      	str	r3, [r0, #0]
 80135ce:	2300      	movs	r3, #0
 80135d0:	6043      	str	r3, [r0, #4]
 80135d2:	7203      	strb	r3, [r0, #8]
 80135d4:	4622      	mov	r2, r4
 80135d6:	ab02      	add	r3, sp, #8
 80135d8:	4606      	mov	r6, r0
 80135da:	4688      	mov	r8, r1
 80135dc:	4668      	mov	r0, sp
 80135de:	4629      	mov	r1, r5
 80135e0:	9300      	str	r3, [sp, #0]
 80135e2:	f7ff ff89 	bl	80134f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>
 80135e6:	1b62      	subs	r2, r4, r5
 80135e8:	e9dd 7300 	ldrd	r7, r3, [sp]
 80135ec:	0054      	lsls	r4, r2, #1
 80135ee:	4620      	mov	r0, r4
 80135f0:	eb07 0903 	add.w	r9, r7, r3
 80135f4:	f010 fcf2 	bl	8023fdc <_Znaj>
 80135f8:	4605      	mov	r5, r0
 80135fa:	4623      	mov	r3, r4
 80135fc:	463a      	mov	r2, r7
 80135fe:	4629      	mov	r1, r5
 8013600:	4640      	mov	r0, r8
 8013602:	f011 fa17 	bl	8024a34 <_ZNKSt7__cxx117collateIcE12_M_transformEPcPKcj>
 8013606:	4284      	cmp	r4, r0
 8013608:	d80d      	bhi.n	8013626 <_ZNKSt7__cxx117collateIcE12do_transformEPKcS3_+0x68>
 801360a:	1c44      	adds	r4, r0, #1
 801360c:	4628      	mov	r0, r5
 801360e:	f010 fc5f 	bl	8023ed0 <_ZdaPv>
 8013612:	4620      	mov	r0, r4
 8013614:	f010 fce2 	bl	8023fdc <_Znaj>
 8013618:	4623      	mov	r3, r4
 801361a:	4605      	mov	r5, r0
 801361c:	4601      	mov	r1, r0
 801361e:	463a      	mov	r2, r7
 8013620:	4640      	mov	r0, r8
 8013622:	f011 fa07 	bl	8024a34 <_ZNKSt7__cxx117collateIcE12_M_transformEPcPKcj>
 8013626:	4602      	mov	r2, r0
 8013628:	4629      	mov	r1, r5
 801362a:	4630      	mov	r0, r6
 801362c:	f00a fbc8 	bl	801ddc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
 8013630:	4638      	mov	r0, r7
 8013632:	f7ec fe27 	bl	8000284 <strlen>
 8013636:	4438      	add	r0, r7
 8013638:	4581      	cmp	r9, r0
 801363a:	d005      	beq.n	8013648 <_ZNKSt7__cxx117collateIcE12do_transformEPKcS3_+0x8a>
 801363c:	1c47      	adds	r7, r0, #1
 801363e:	2100      	movs	r1, #0
 8013640:	4630      	mov	r0, r6
 8013642:	f00a fa91 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8013646:	e7d8      	b.n	80135fa <_ZNKSt7__cxx117collateIcE12do_transformEPKcS3_+0x3c>
 8013648:	4628      	mov	r0, r5
 801364a:	f010 fc41 	bl	8023ed0 <_ZdaPv>
 801364e:	4668      	mov	r0, sp
 8013650:	f00a f964 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8013654:	4630      	mov	r0, r6
 8013656:	b007      	add	sp, #28
 8013658:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0801365c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
 801365c:	4b18      	ldr	r3, [pc, #96]	; (80136c0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x64>)
 801365e:	681a      	ldr	r2, [r3, #0]
 8013660:	07d1      	lsls	r1, r2, #31
 8013662:	bf5c      	itt	pl
 8013664:	2201      	movpl	r2, #1
 8013666:	601a      	strpl	r2, [r3, #0]
 8013668:	4b16      	ldr	r3, [pc, #88]	; (80136c4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x68>)
 801366a:	681a      	ldr	r2, [r3, #0]
 801366c:	07d2      	lsls	r2, r2, #31
 801366e:	bf5c      	itt	pl
 8013670:	2201      	movpl	r2, #1
 8013672:	601a      	strpl	r2, [r3, #0]
 8013674:	4b14      	ldr	r3, [pc, #80]	; (80136c8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>)
 8013676:	681a      	ldr	r2, [r3, #0]
 8013678:	07d0      	lsls	r0, r2, #31
 801367a:	bf5c      	itt	pl
 801367c:	2201      	movpl	r2, #1
 801367e:	601a      	strpl	r2, [r3, #0]
 8013680:	4b12      	ldr	r3, [pc, #72]	; (80136cc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x70>)
 8013682:	681a      	ldr	r2, [r3, #0]
 8013684:	07d1      	lsls	r1, r2, #31
 8013686:	bf5c      	itt	pl
 8013688:	2201      	movpl	r2, #1
 801368a:	601a      	strpl	r2, [r3, #0]
 801368c:	4b10      	ldr	r3, [pc, #64]	; (80136d0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x74>)
 801368e:	681a      	ldr	r2, [r3, #0]
 8013690:	07d2      	lsls	r2, r2, #31
 8013692:	bf5c      	itt	pl
 8013694:	2201      	movpl	r2, #1
 8013696:	601a      	strpl	r2, [r3, #0]
 8013698:	4b0e      	ldr	r3, [pc, #56]	; (80136d4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x78>)
 801369a:	681a      	ldr	r2, [r3, #0]
 801369c:	07d0      	lsls	r0, r2, #31
 801369e:	bf5c      	itt	pl
 80136a0:	2201      	movpl	r2, #1
 80136a2:	601a      	strpl	r2, [r3, #0]
 80136a4:	4b0c      	ldr	r3, [pc, #48]	; (80136d8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x7c>)
 80136a6:	681a      	ldr	r2, [r3, #0]
 80136a8:	07d1      	lsls	r1, r2, #31
 80136aa:	bf5c      	itt	pl
 80136ac:	2201      	movpl	r2, #1
 80136ae:	601a      	strpl	r2, [r3, #0]
 80136b0:	4b0a      	ldr	r3, [pc, #40]	; (80136dc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x80>)
 80136b2:	681a      	ldr	r2, [r3, #0]
 80136b4:	07d2      	lsls	r2, r2, #31
 80136b6:	bf5c      	itt	pl
 80136b8:	2201      	movpl	r2, #1
 80136ba:	601a      	strpl	r2, [r3, #0]
 80136bc:	4770      	bx	lr
 80136be:	bf00      	nop
 80136c0:	20003c28 	.word	0x20003c28
 80136c4:	20003c24 	.word	0x20003c24
 80136c8:	20003c20 	.word	0x20003c20
 80136cc:	20003c1c 	.word	0x20003c1c
 80136d0:	20003c18 	.word	0x20003c18
 80136d4:	20003c14 	.word	0x20003c14
 80136d8:	20003c10 	.word	0x20003c10
 80136dc:	20003c0c 	.word	0x20003c0c

080136e0 <_ZNSt13__facet_shims12_GLOBAL__N_116__destroy_stringIcEEvPv>:
 80136e0:	f00a b91c 	b.w	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>

080136e4 <_ZNSt13__facet_shims12_GLOBAL__N_116__destroy_stringIwEEvPv>:
 80136e4:	f010 b8a8 	b.w	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>

080136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>:
 80136e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80136ea:	684d      	ldr	r5, [r1, #4]
 80136ec:	4607      	mov	r7, r0
 80136ee:	1c68      	adds	r0, r5, #1
 80136f0:	460e      	mov	r6, r1
 80136f2:	f010 fc73 	bl	8023fdc <_Znaj>
 80136f6:	2300      	movs	r3, #0
 80136f8:	4604      	mov	r4, r0
 80136fa:	4601      	mov	r1, r0
 80136fc:	462a      	mov	r2, r5
 80136fe:	4630      	mov	r0, r6
 8013700:	f00a fb6e 	bl	801dde0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj>
 8013704:	2300      	movs	r3, #0
 8013706:	5563      	strb	r3, [r4, r5]
 8013708:	603c      	str	r4, [r7, #0]
 801370a:	4628      	mov	r0, r5
 801370c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801370e <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>:
 801370e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013710:	684d      	ldr	r5, [r1, #4]
 8013712:	f06f 4260 	mvn.w	r2, #3758096384	; 0xe0000000
 8013716:	1c6b      	adds	r3, r5, #1
 8013718:	4293      	cmp	r3, r2
 801371a:	4607      	mov	r7, r0
 801371c:	bf34      	ite	cc
 801371e:	0098      	lslcc	r0, r3, #2
 8013720:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 8013724:	460e      	mov	r6, r1
 8013726:	f010 fc59 	bl	8023fdc <_Znaj>
 801372a:	2300      	movs	r3, #0
 801372c:	4604      	mov	r4, r0
 801372e:	4601      	mov	r1, r0
 8013730:	462a      	mov	r2, r5
 8013732:	4630      	mov	r0, r6
 8013734:	f010 facc 	bl	8023cd0 <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE4copyEPwjj>
 8013738:	2300      	movs	r3, #0
 801373a:	f844 3025 	str.w	r3, [r4, r5, lsl #2]
 801373e:	603c      	str	r4, [r7, #0]
 8013740:	4628      	mov	r0, r5
 8013742:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013744 <_ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIcE10do_compareEPKcS4_S4_S4_>:
 8013744:	b513      	push	{r0, r1, r4, lr}
 8013746:	9c04      	ldr	r4, [sp, #16]
 8013748:	e9cd 3400 	strd	r3, r4, [sp]
 801374c:	4613      	mov	r3, r2
 801374e:	460a      	mov	r2, r1
 8013750:	68c1      	ldr	r1, [r0, #12]
 8013752:	f04f 0000 	mov.w	r0, #0
 8013756:	f7fb fba3 	bl	800eea0 <_ZNSt13__facet_shims17__collate_compareIcEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKT_S9_S9_S9_>
 801375a:	b002      	add	sp, #8
 801375c:	bd10      	pop	{r4, pc}

0801375e <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE11do_get_yearESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801375e:	b530      	push	{r4, r5, lr}
 8013760:	b08b      	sub	sp, #44	; 0x2c
 8013762:	460d      	mov	r5, r1
 8013764:	a90a      	add	r1, sp, #40	; 0x28
 8013766:	e901 000c 	stmdb	r1, {r2, r3}
 801376a:	2379      	movs	r3, #121	; 0x79
 801376c:	9306      	str	r3, [sp, #24]
 801376e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013770:	9305      	str	r3, [sp, #20]
 8013772:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013774:	9304      	str	r3, [sp, #16]
 8013776:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013778:	9303      	str	r3, [sp, #12]
 801377a:	aa0e      	add	r2, sp, #56	; 0x38
 801377c:	4604      	mov	r4, r0
 801377e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013782:	ab01      	add	r3, sp, #4
 8013784:	e883 0003 	stmia.w	r3, {r0, r1}
 8013788:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801378a:	9300      	str	r3, [sp, #0]
 801378c:	4620      	mov	r0, r4
 801378e:	9b08      	ldr	r3, [sp, #32]
 8013790:	68aa      	ldr	r2, [r5, #8]
 8013792:	f04f 0100 	mov.w	r1, #0
 8013796:	f7fb fd23 	bl	800f1e0 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 801379a:	4620      	mov	r0, r4
 801379c:	b00b      	add	sp, #44	; 0x2c
 801379e:	bd30      	pop	{r4, r5, pc}

080137a0 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE16do_get_monthnameESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 80137a0:	b530      	push	{r4, r5, lr}
 80137a2:	b08b      	sub	sp, #44	; 0x2c
 80137a4:	460d      	mov	r5, r1
 80137a6:	a90a      	add	r1, sp, #40	; 0x28
 80137a8:	e901 000c 	stmdb	r1, {r2, r3}
 80137ac:	236d      	movs	r3, #109	; 0x6d
 80137ae:	9306      	str	r3, [sp, #24]
 80137b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80137b2:	9305      	str	r3, [sp, #20]
 80137b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80137b6:	9304      	str	r3, [sp, #16]
 80137b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80137ba:	9303      	str	r3, [sp, #12]
 80137bc:	aa0e      	add	r2, sp, #56	; 0x38
 80137be:	4604      	mov	r4, r0
 80137c0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80137c4:	ab01      	add	r3, sp, #4
 80137c6:	e883 0003 	stmia.w	r3, {r0, r1}
 80137ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80137cc:	9300      	str	r3, [sp, #0]
 80137ce:	4620      	mov	r0, r4
 80137d0:	9b08      	ldr	r3, [sp, #32]
 80137d2:	68aa      	ldr	r2, [r5, #8]
 80137d4:	f04f 0100 	mov.w	r1, #0
 80137d8:	f7fb fd02 	bl	800f1e0 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 80137dc:	4620      	mov	r0, r4
 80137de:	b00b      	add	sp, #44	; 0x2c
 80137e0:	bd30      	pop	{r4, r5, pc}

080137e2 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE14do_get_weekdayESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 80137e2:	b530      	push	{r4, r5, lr}
 80137e4:	b08b      	sub	sp, #44	; 0x2c
 80137e6:	460d      	mov	r5, r1
 80137e8:	a90a      	add	r1, sp, #40	; 0x28
 80137ea:	e901 000c 	stmdb	r1, {r2, r3}
 80137ee:	2377      	movs	r3, #119	; 0x77
 80137f0:	9306      	str	r3, [sp, #24]
 80137f2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80137f4:	9305      	str	r3, [sp, #20]
 80137f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80137f8:	9304      	str	r3, [sp, #16]
 80137fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80137fc:	9303      	str	r3, [sp, #12]
 80137fe:	aa0e      	add	r2, sp, #56	; 0x38
 8013800:	4604      	mov	r4, r0
 8013802:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013806:	ab01      	add	r3, sp, #4
 8013808:	e883 0003 	stmia.w	r3, {r0, r1}
 801380c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801380e:	9300      	str	r3, [sp, #0]
 8013810:	4620      	mov	r0, r4
 8013812:	9b08      	ldr	r3, [sp, #32]
 8013814:	68aa      	ldr	r2, [r5, #8]
 8013816:	f04f 0100 	mov.w	r1, #0
 801381a:	f7fb fce1 	bl	800f1e0 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 801381e:	4620      	mov	r0, r4
 8013820:	b00b      	add	sp, #44	; 0x2c
 8013822:	bd30      	pop	{r4, r5, pc}

08013824 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE11do_get_dateESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8013824:	b530      	push	{r4, r5, lr}
 8013826:	b08b      	sub	sp, #44	; 0x2c
 8013828:	460d      	mov	r5, r1
 801382a:	a90a      	add	r1, sp, #40	; 0x28
 801382c:	e901 000c 	stmdb	r1, {r2, r3}
 8013830:	2364      	movs	r3, #100	; 0x64
 8013832:	9306      	str	r3, [sp, #24]
 8013834:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013836:	9305      	str	r3, [sp, #20]
 8013838:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801383a:	9304      	str	r3, [sp, #16]
 801383c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801383e:	9303      	str	r3, [sp, #12]
 8013840:	aa0e      	add	r2, sp, #56	; 0x38
 8013842:	4604      	mov	r4, r0
 8013844:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013848:	ab01      	add	r3, sp, #4
 801384a:	e883 0003 	stmia.w	r3, {r0, r1}
 801384e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013850:	9300      	str	r3, [sp, #0]
 8013852:	4620      	mov	r0, r4
 8013854:	9b08      	ldr	r3, [sp, #32]
 8013856:	68aa      	ldr	r2, [r5, #8]
 8013858:	f04f 0100 	mov.w	r1, #0
 801385c:	f7fb fcc0 	bl	800f1e0 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 8013860:	4620      	mov	r0, r4
 8013862:	b00b      	add	sp, #44	; 0x2c
 8013864:	bd30      	pop	{r4, r5, pc}

08013866 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE11do_get_timeESt19istreambuf_iteratorIcSt11char_traitsIcEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8013866:	b530      	push	{r4, r5, lr}
 8013868:	b08b      	sub	sp, #44	; 0x2c
 801386a:	460d      	mov	r5, r1
 801386c:	a90a      	add	r1, sp, #40	; 0x28
 801386e:	e901 000c 	stmdb	r1, {r2, r3}
 8013872:	2374      	movs	r3, #116	; 0x74
 8013874:	9306      	str	r3, [sp, #24]
 8013876:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013878:	9305      	str	r3, [sp, #20]
 801387a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801387c:	9304      	str	r3, [sp, #16]
 801387e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013880:	9303      	str	r3, [sp, #12]
 8013882:	aa0e      	add	r2, sp, #56	; 0x38
 8013884:	4604      	mov	r4, r0
 8013886:	e892 0003 	ldmia.w	r2, {r0, r1}
 801388a:	ab01      	add	r3, sp, #4
 801388c:	e883 0003 	stmia.w	r3, {r0, r1}
 8013890:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013892:	9300      	str	r3, [sp, #0]
 8013894:	4620      	mov	r0, r4
 8013896:	9b08      	ldr	r3, [sp, #32]
 8013898:	68aa      	ldr	r2, [r5, #8]
 801389a:	f04f 0100 	mov.w	r1, #0
 801389e:	f7fb fc9f 	bl	800f1e0 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 80138a2:	4620      	mov	r0, r4
 80138a4:	b00b      	add	sp, #44	; 0x2c
 80138a6:	bd30      	pop	{r4, r5, pc}

080138a8 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIcE13do_date_orderEv>:
 80138a8:	6881      	ldr	r1, [r0, #8]
 80138aa:	f04f 0000 	mov.w	r0, #0
 80138ae:	f7fb bc91 	b.w	800f1d4 <_ZNSt13__facet_shims20__time_get_dateorderIcEENSt9time_base9dateorderESt17integral_constantIbLb0EEPKNSt6locale5facetE>

080138b2 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRe>:
 80138b2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80138b4:	b091      	sub	sp, #68	; 0x44
 80138b6:	ac0a      	add	r4, sp, #40	; 0x28
 80138b8:	e884 000c 	stmia.w	r4, {r2, r3}
 80138bc:	2300      	movs	r3, #0
 80138be:	9307      	str	r3, [sp, #28]
 80138c0:	930d      	str	r3, [sp, #52]	; 0x34
 80138c2:	ab0e      	add	r3, sp, #56	; 0x38
 80138c4:	9306      	str	r3, [sp, #24]
 80138c6:	ab0d      	add	r3, sp, #52	; 0x34
 80138c8:	9305      	str	r3, [sp, #20]
 80138ca:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80138cc:	9304      	str	r3, [sp, #16]
 80138ce:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 80138d2:	9303      	str	r3, [sp, #12]
 80138d4:	aa16      	add	r2, sp, #88	; 0x58
 80138d6:	460f      	mov	r7, r1
 80138d8:	4605      	mov	r5, r0
 80138da:	e892 0003 	ldmia.w	r2, {r0, r1}
 80138de:	ab01      	add	r3, sp, #4
 80138e0:	e883 0003 	stmia.w	r3, {r0, r1}
 80138e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80138e6:	9300      	str	r3, [sp, #0]
 80138e8:	ae08      	add	r6, sp, #32
 80138ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80138ec:	68ba      	ldr	r2, [r7, #8]
 80138ee:	f04f 0100 	mov.w	r1, #0
 80138f2:	4630      	mov	r0, r6
 80138f4:	f7fc f896 	bl	800fa24 <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE>
 80138f8:	e896 0003 	ldmia.w	r6, {r0, r1}
 80138fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80138fe:	e884 0003 	stmia.w	r4, {r0, r1}
 8013902:	b95b      	cbnz	r3, 801391c <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRe+0x6a>
 8013904:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8013908:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801390a:	e9c3 0100 	strd	r0, r1, [r3]
 801390e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8013912:	e885 0003 	stmia.w	r5, {r0, r1}
 8013916:	4628      	mov	r0, r5
 8013918:	b011      	add	sp, #68	; 0x44
 801391a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801391c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801391e:	6013      	str	r3, [r2, #0]
 8013920:	e7f5      	b.n	801390e <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRe+0x5c>

08013922 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIcE6do_putESt19ostreambuf_iteratorIcSt11char_traitsIcEEbRSt8ios_basece>:
 8013922:	b510      	push	{r4, lr}
 8013924:	b088      	sub	sp, #32
 8013926:	f10d 0c20 	add.w	ip, sp, #32
 801392a:	e90c 000c 	stmdb	ip, {r2, r3}
 801392e:	2300      	movs	r3, #0
 8013930:	9304      	str	r3, [sp, #16]
 8013932:	f89d 3030 	ldrb.w	r3, [sp, #48]	; 0x30
 8013936:	9303      	str	r3, [sp, #12]
 8013938:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801393a:	9302      	str	r3, [sp, #8]
 801393c:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8013940:	9301      	str	r3, [sp, #4]
 8013942:	9b07      	ldr	r3, [sp, #28]
 8013944:	9300      	str	r3, [sp, #0]
 8013946:	4613      	mov	r3, r2
 8013948:	688a      	ldr	r2, [r1, #8]
 801394a:	f04f 0100 	mov.w	r1, #0
 801394e:	4604      	mov	r4, r0
 8013950:	f7fb ff80 	bl	800f854 <_ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE>
 8013954:	4620      	mov	r0, r4
 8013956:	b008      	add	sp, #32
 8013958:	bd10      	pop	{r4, pc}

0801395a <_ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIcE8do_closeEi>:
 801395a:	460a      	mov	r2, r1
 801395c:	6901      	ldr	r1, [r0, #16]
 801395e:	f04f 0000 	mov.w	r0, #0
 8013962:	f7fb bc2f 	b.w	800f1c4 <_ZNSt13__facet_shims16__messages_closeIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEi>

08013966 <_ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIcE7do_openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale>:
 8013966:	b507      	push	{r0, r1, r2, lr}
 8013968:	9200      	str	r2, [sp, #0]
 801396a:	e9d1 2300 	ldrd	r2, r3, [r1]
 801396e:	6901      	ldr	r1, [r0, #16]
 8013970:	f04f 0000 	mov.w	r0, #0
 8013974:	f7fb fbfe 	bl	800f174 <_ZNSt13__facet_shims15__messages_openIcEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKcjRKS3_>
 8013978:	b003      	add	sp, #12
 801397a:	f85d fb04 	ldr.w	pc, [sp], #4

0801397e <_ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIwE10do_compareEPKwS4_S4_S4_>:
 801397e:	b513      	push	{r0, r1, r4, lr}
 8013980:	9c04      	ldr	r4, [sp, #16]
 8013982:	e9cd 3400 	strd	r3, r4, [sp]
 8013986:	4613      	mov	r3, r2
 8013988:	460a      	mov	r2, r1
 801398a:	68c1      	ldr	r1, [r0, #12]
 801398c:	f04f 0000 	mov.w	r0, #0
 8013990:	f7fb fa91 	bl	800eeb6 <_ZNSt13__facet_shims17__collate_compareIwEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKT_S9_S9_S9_>
 8013994:	b002      	add	sp, #8
 8013996:	bd10      	pop	{r4, pc}

08013998 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE11do_get_yearESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8013998:	b530      	push	{r4, r5, lr}
 801399a:	b08b      	sub	sp, #44	; 0x2c
 801399c:	460d      	mov	r5, r1
 801399e:	a90a      	add	r1, sp, #40	; 0x28
 80139a0:	e901 000c 	stmdb	r1, {r2, r3}
 80139a4:	2379      	movs	r3, #121	; 0x79
 80139a6:	9306      	str	r3, [sp, #24]
 80139a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80139aa:	9305      	str	r3, [sp, #20]
 80139ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80139ae:	9304      	str	r3, [sp, #16]
 80139b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80139b2:	9303      	str	r3, [sp, #12]
 80139b4:	aa0e      	add	r2, sp, #56	; 0x38
 80139b6:	4604      	mov	r4, r0
 80139b8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80139bc:	ab01      	add	r3, sp, #4
 80139be:	e883 0003 	stmia.w	r3, {r0, r1}
 80139c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80139c4:	9300      	str	r3, [sp, #0]
 80139c6:	4620      	mov	r0, r4
 80139c8:	9b08      	ldr	r3, [sp, #32]
 80139ca:	68aa      	ldr	r2, [r5, #8]
 80139cc:	f04f 0100 	mov.w	r1, #0
 80139d0:	f7fb fc60 	bl	800f294 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 80139d4:	4620      	mov	r0, r4
 80139d6:	b00b      	add	sp, #44	; 0x2c
 80139d8:	bd30      	pop	{r4, r5, pc}

080139da <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE16do_get_monthnameESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 80139da:	b530      	push	{r4, r5, lr}
 80139dc:	b08b      	sub	sp, #44	; 0x2c
 80139de:	460d      	mov	r5, r1
 80139e0:	a90a      	add	r1, sp, #40	; 0x28
 80139e2:	e901 000c 	stmdb	r1, {r2, r3}
 80139e6:	236d      	movs	r3, #109	; 0x6d
 80139e8:	9306      	str	r3, [sp, #24]
 80139ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80139ec:	9305      	str	r3, [sp, #20]
 80139ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80139f0:	9304      	str	r3, [sp, #16]
 80139f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80139f4:	9303      	str	r3, [sp, #12]
 80139f6:	aa0e      	add	r2, sp, #56	; 0x38
 80139f8:	4604      	mov	r4, r0
 80139fa:	e892 0003 	ldmia.w	r2, {r0, r1}
 80139fe:	ab01      	add	r3, sp, #4
 8013a00:	e883 0003 	stmia.w	r3, {r0, r1}
 8013a04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a06:	9300      	str	r3, [sp, #0]
 8013a08:	4620      	mov	r0, r4
 8013a0a:	9b08      	ldr	r3, [sp, #32]
 8013a0c:	68aa      	ldr	r2, [r5, #8]
 8013a0e:	f04f 0100 	mov.w	r1, #0
 8013a12:	f7fb fc3f 	bl	800f294 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 8013a16:	4620      	mov	r0, r4
 8013a18:	b00b      	add	sp, #44	; 0x2c
 8013a1a:	bd30      	pop	{r4, r5, pc}

08013a1c <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE14do_get_weekdayESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8013a1c:	b530      	push	{r4, r5, lr}
 8013a1e:	b08b      	sub	sp, #44	; 0x2c
 8013a20:	460d      	mov	r5, r1
 8013a22:	a90a      	add	r1, sp, #40	; 0x28
 8013a24:	e901 000c 	stmdb	r1, {r2, r3}
 8013a28:	2377      	movs	r3, #119	; 0x77
 8013a2a:	9306      	str	r3, [sp, #24]
 8013a2c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013a2e:	9305      	str	r3, [sp, #20]
 8013a30:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013a32:	9304      	str	r3, [sp, #16]
 8013a34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013a36:	9303      	str	r3, [sp, #12]
 8013a38:	aa0e      	add	r2, sp, #56	; 0x38
 8013a3a:	4604      	mov	r4, r0
 8013a3c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013a40:	ab01      	add	r3, sp, #4
 8013a42:	e883 0003 	stmia.w	r3, {r0, r1}
 8013a46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a48:	9300      	str	r3, [sp, #0]
 8013a4a:	4620      	mov	r0, r4
 8013a4c:	9b08      	ldr	r3, [sp, #32]
 8013a4e:	68aa      	ldr	r2, [r5, #8]
 8013a50:	f04f 0100 	mov.w	r1, #0
 8013a54:	f7fb fc1e 	bl	800f294 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 8013a58:	4620      	mov	r0, r4
 8013a5a:	b00b      	add	sp, #44	; 0x2c
 8013a5c:	bd30      	pop	{r4, r5, pc}

08013a5e <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE11do_get_dateESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8013a5e:	b530      	push	{r4, r5, lr}
 8013a60:	b08b      	sub	sp, #44	; 0x2c
 8013a62:	460d      	mov	r5, r1
 8013a64:	a90a      	add	r1, sp, #40	; 0x28
 8013a66:	e901 000c 	stmdb	r1, {r2, r3}
 8013a6a:	2364      	movs	r3, #100	; 0x64
 8013a6c:	9306      	str	r3, [sp, #24]
 8013a6e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013a70:	9305      	str	r3, [sp, #20]
 8013a72:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013a74:	9304      	str	r3, [sp, #16]
 8013a76:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013a78:	9303      	str	r3, [sp, #12]
 8013a7a:	aa0e      	add	r2, sp, #56	; 0x38
 8013a7c:	4604      	mov	r4, r0
 8013a7e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013a82:	ab01      	add	r3, sp, #4
 8013a84:	e883 0003 	stmia.w	r3, {r0, r1}
 8013a88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a8a:	9300      	str	r3, [sp, #0]
 8013a8c:	4620      	mov	r0, r4
 8013a8e:	9b08      	ldr	r3, [sp, #32]
 8013a90:	68aa      	ldr	r2, [r5, #8]
 8013a92:	f04f 0100 	mov.w	r1, #0
 8013a96:	f7fb fbfd 	bl	800f294 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 8013a9a:	4620      	mov	r0, r4
 8013a9c:	b00b      	add	sp, #44	; 0x2c
 8013a9e:	bd30      	pop	{r4, r5, pc}

08013aa0 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE11do_get_timeESt19istreambuf_iteratorIwSt11char_traitsIwEES6_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8013aa0:	b530      	push	{r4, r5, lr}
 8013aa2:	b08b      	sub	sp, #44	; 0x2c
 8013aa4:	460d      	mov	r5, r1
 8013aa6:	a90a      	add	r1, sp, #40	; 0x28
 8013aa8:	e901 000c 	stmdb	r1, {r2, r3}
 8013aac:	2374      	movs	r3, #116	; 0x74
 8013aae:	9306      	str	r3, [sp, #24]
 8013ab0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013ab2:	9305      	str	r3, [sp, #20]
 8013ab4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013ab6:	9304      	str	r3, [sp, #16]
 8013ab8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013aba:	9303      	str	r3, [sp, #12]
 8013abc:	aa0e      	add	r2, sp, #56	; 0x38
 8013abe:	4604      	mov	r4, r0
 8013ac0:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013ac4:	ab01      	add	r3, sp, #4
 8013ac6:	e883 0003 	stmia.w	r3, {r0, r1}
 8013aca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013acc:	9300      	str	r3, [sp, #0]
 8013ace:	4620      	mov	r0, r4
 8013ad0:	9b08      	ldr	r3, [sp, #32]
 8013ad2:	68aa      	ldr	r2, [r5, #8]
 8013ad4:	f04f 0100 	mov.w	r1, #0
 8013ad8:	f7fb fbdc 	bl	800f294 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>
 8013adc:	4620      	mov	r0, r4
 8013ade:	b00b      	add	sp, #44	; 0x2c
 8013ae0:	bd30      	pop	{r4, r5, pc}

08013ae2 <_ZNKSt13__facet_shims12_GLOBAL__N_113time_get_shimIwE13do_date_orderEv>:
 8013ae2:	6881      	ldr	r1, [r0, #8]
 8013ae4:	f04f 0000 	mov.w	r0, #0
 8013ae8:	f7fb bb77 	b.w	800f1da <_ZNSt13__facet_shims20__time_get_dateorderIwEENSt9time_base9dateorderESt17integral_constantIbLb0EEPKNSt6locale5facetE>

08013aec <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRe>:
 8013aec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013aee:	b091      	sub	sp, #68	; 0x44
 8013af0:	ac0a      	add	r4, sp, #40	; 0x28
 8013af2:	e884 000c 	stmia.w	r4, {r2, r3}
 8013af6:	2300      	movs	r3, #0
 8013af8:	9307      	str	r3, [sp, #28]
 8013afa:	930d      	str	r3, [sp, #52]	; 0x34
 8013afc:	ab0e      	add	r3, sp, #56	; 0x38
 8013afe:	9306      	str	r3, [sp, #24]
 8013b00:	ab0d      	add	r3, sp, #52	; 0x34
 8013b02:	9305      	str	r3, [sp, #20]
 8013b04:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8013b06:	9304      	str	r3, [sp, #16]
 8013b08:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8013b0c:	9303      	str	r3, [sp, #12]
 8013b0e:	aa16      	add	r2, sp, #88	; 0x58
 8013b10:	460f      	mov	r7, r1
 8013b12:	4605      	mov	r5, r0
 8013b14:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013b18:	ab01      	add	r3, sp, #4
 8013b1a:	e883 0003 	stmia.w	r3, {r0, r1}
 8013b1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013b20:	9300      	str	r3, [sp, #0]
 8013b22:	ae08      	add	r6, sp, #32
 8013b24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013b26:	68ba      	ldr	r2, [r7, #8]
 8013b28:	f04f 0100 	mov.w	r1, #0
 8013b2c:	4630      	mov	r0, r6
 8013b2e:	f7fc f8f1 	bl	800fd14 <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE>
 8013b32:	e896 0003 	ldmia.w	r6, {r0, r1}
 8013b36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013b38:	e884 0003 	stmia.w	r4, {r0, r1}
 8013b3c:	b95b      	cbnz	r3, 8013b56 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRe+0x6a>
 8013b3e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8013b42:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8013b44:	e9c3 0100 	strd	r0, r1, [r3]
 8013b48:	e894 0003 	ldmia.w	r4, {r0, r1}
 8013b4c:	e885 0003 	stmia.w	r5, {r0, r1}
 8013b50:	4628      	mov	r0, r5
 8013b52:	b011      	add	sp, #68	; 0x44
 8013b54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013b56:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8013b58:	6013      	str	r3, [r2, #0]
 8013b5a:	e7f5      	b.n	8013b48 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRe+0x5c>

08013b5c <_ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIwE6do_putESt19ostreambuf_iteratorIwSt11char_traitsIwEEbRSt8ios_basewe>:
 8013b5c:	b510      	push	{r4, lr}
 8013b5e:	b088      	sub	sp, #32
 8013b60:	f10d 0c20 	add.w	ip, sp, #32
 8013b64:	e90c 000c 	stmdb	ip, {r2, r3}
 8013b68:	2300      	movs	r3, #0
 8013b6a:	9304      	str	r3, [sp, #16]
 8013b6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013b6e:	9303      	str	r3, [sp, #12]
 8013b70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013b72:	9302      	str	r3, [sp, #8]
 8013b74:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8013b78:	9301      	str	r3, [sp, #4]
 8013b7a:	9b07      	ldr	r3, [sp, #28]
 8013b7c:	9300      	str	r3, [sp, #0]
 8013b7e:	4613      	mov	r3, r2
 8013b80:	688a      	ldr	r2, [r1, #8]
 8013b82:	f04f 0100 	mov.w	r1, #0
 8013b86:	4604      	mov	r4, r0
 8013b88:	f7fb ffde 	bl	800fb48 <_ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE>
 8013b8c:	4620      	mov	r0, r4
 8013b8e:	b008      	add	sp, #32
 8013b90:	bd10      	pop	{r4, pc}

08013b92 <_ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIwE8do_closeEi>:
 8013b92:	460a      	mov	r2, r1
 8013b94:	6901      	ldr	r1, [r0, #16]
 8013b96:	f04f 0000 	mov.w	r0, #0
 8013b9a:	f7fb bb17 	b.w	800f1cc <_ZNSt13__facet_shims16__messages_closeIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEi>

08013b9e <_ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIwE7do_openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale>:
 8013b9e:	b507      	push	{r0, r1, r2, lr}
 8013ba0:	9200      	str	r2, [sp, #0]
 8013ba2:	e9d1 2300 	ldrd	r2, r3, [r1]
 8013ba6:	6901      	ldr	r1, [r0, #16]
 8013ba8:	f04f 0000 	mov.w	r0, #0
 8013bac:	f7fb faf6 	bl	800f19c <_ZNSt13__facet_shims15__messages_openIwEEiSt17integral_constantIbLb0EEPKNSt6locale5facetEPKcjRKS3_>
 8013bb0:	b003      	add	sp, #12
 8013bb2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08013bb8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag.isra.0>:
 8013bb8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013bba:	4604      	mov	r4, r0
 8013bbc:	4616      	mov	r6, r2
 8013bbe:	460d      	mov	r5, r1
 8013bc0:	b919      	cbnz	r1, 8013bca <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag.isra.0+0x12>
 8013bc2:	b112      	cbz	r2, 8013bca <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag.isra.0+0x12>
 8013bc4:	480d      	ldr	r0, [pc, #52]	; (8013bfc <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag.isra.0+0x44>)
 8013bc6:	f003 fe31 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 8013bca:	1b73      	subs	r3, r6, r5
 8013bcc:	109a      	asrs	r2, r3, #2
 8013bce:	2b0c      	cmp	r3, #12
 8013bd0:	9201      	str	r2, [sp, #4]
 8013bd2:	d907      	bls.n	8013be4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag.isra.0+0x2c>
 8013bd4:	2200      	movs	r2, #0
 8013bd6:	a901      	add	r1, sp, #4
 8013bd8:	4620      	mov	r0, r4
 8013bda:	f00f fe09 	bl	80237f0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj>
 8013bde:	9b01      	ldr	r3, [sp, #4]
 8013be0:	6020      	str	r0, [r4, #0]
 8013be2:	60a3      	str	r3, [r4, #8]
 8013be4:	6820      	ldr	r0, [r4, #0]
 8013be6:	4632      	mov	r2, r6
 8013be8:	4629      	mov	r1, r5
 8013bea:	f00f fe9c 	bl	8023926 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwPKwS7_>
 8013bee:	9901      	ldr	r1, [sp, #4]
 8013bf0:	4620      	mov	r0, r4
 8013bf2:	f00f fdf7 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 8013bf6:	b002      	add	sp, #8
 8013bf8:	bd70      	pop	{r4, r5, r6, pc}
 8013bfa:	bf00      	nop
 8013bfc:	0802f810 	.word	0x0802f810

08013c00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0>:
 8013c00:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013c02:	4604      	mov	r4, r0
 8013c04:	4616      	mov	r6, r2
 8013c06:	460d      	mov	r5, r1
 8013c08:	b919      	cbnz	r1, 8013c12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0+0x12>
 8013c0a:	b112      	cbz	r2, 8013c12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0+0x12>
 8013c0c:	480d      	ldr	r0, [pc, #52]	; (8013c44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0+0x44>)
 8013c0e:	f003 fe0d 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 8013c12:	1b73      	subs	r3, r6, r5
 8013c14:	2b0f      	cmp	r3, #15
 8013c16:	9301      	str	r3, [sp, #4]
 8013c18:	d907      	bls.n	8013c2a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0+0x2a>
 8013c1a:	2200      	movs	r2, #0
 8013c1c:	a901      	add	r1, sp, #4
 8013c1e:	4620      	mov	r0, r4
 8013c20:	f009 fe5a 	bl	801d8d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8013c24:	9b01      	ldr	r3, [sp, #4]
 8013c26:	6020      	str	r0, [r4, #0]
 8013c28:	60a3      	str	r3, [r4, #8]
 8013c2a:	4632      	mov	r2, r6
 8013c2c:	4629      	mov	r1, r5
 8013c2e:	6820      	ldr	r0, [r4, #0]
 8013c30:	f009 feea 	bl	801da08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
 8013c34:	9b01      	ldr	r3, [sp, #4]
 8013c36:	6822      	ldr	r2, [r4, #0]
 8013c38:	6063      	str	r3, [r4, #4]
 8013c3a:	2100      	movs	r1, #0
 8013c3c:	54d1      	strb	r1, [r2, r3]
 8013c3e:	b002      	add	sp, #8
 8013c40:	bd70      	pop	{r4, r5, r6, pc}
 8013c42:	bf00      	nop
 8013c44:	0802f810 	.word	0x0802f810

08013c48 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED1Ev>:
 8013c48:	b510      	push	{r4, lr}
 8013c4a:	4b07      	ldr	r3, [pc, #28]	; (8013c68 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED1Ev+0x20>)
 8013c4c:	6003      	str	r3, [r0, #0]
 8013c4e:	6903      	ldr	r3, [r0, #16]
 8013c50:	2200      	movs	r2, #0
 8013c52:	4604      	mov	r4, r0
 8013c54:	60da      	str	r2, [r3, #12]
 8013c56:	300c      	adds	r0, #12
 8013c58:	f7fa fef7 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013c5c:	4620      	mov	r0, r4
 8013c5e:	f7f9 fc95 	bl	800d58c <_ZNSt7__cxx118numpunctIcED1Ev>
 8013c62:	4620      	mov	r0, r4
 8013c64:	bd10      	pop	{r4, pc}
 8013c66:	bf00      	nop
 8013c68:	08030198 	.word	0x08030198

08013c6c <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED0Ev>:
 8013c6c:	b510      	push	{r4, lr}
 8013c6e:	4604      	mov	r4, r0
 8013c70:	f7ff ffea 	bl	8013c48 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIcED1Ev>
 8013c74:	4620      	mov	r0, r4
 8013c76:	f010 f929 	bl	8023ecc <_ZdlPv>
 8013c7a:	4620      	mov	r0, r4
 8013c7c:	bd10      	pop	{r4, pc}
	...

08013c80 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED1Ev>:
 8013c80:	b510      	push	{r4, lr}
 8013c82:	4b08      	ldr	r3, [pc, #32]	; (8013ca4 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED1Ev+0x24>)
 8013c84:	6003      	str	r3, [r0, #0]
 8013c86:	6903      	ldr	r3, [r0, #16]
 8013c88:	2200      	movs	r2, #0
 8013c8a:	4604      	mov	r4, r0
 8013c8c:	60da      	str	r2, [r3, #12]
 8013c8e:	619a      	str	r2, [r3, #24]
 8013c90:	621a      	str	r2, [r3, #32]
 8013c92:	629a      	str	r2, [r3, #40]	; 0x28
 8013c94:	300c      	adds	r0, #12
 8013c96:	f7fa fed8 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013c9a:	4620      	mov	r0, r4
 8013c9c:	f7f9 f910 	bl	800cec0 <_ZNSt7__cxx1110moneypunctIcLb1EED1Ev>
 8013ca0:	4620      	mov	r0, r4
 8013ca2:	bd10      	pop	{r4, pc}
 8013ca4:	080302cc 	.word	0x080302cc

08013ca8 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED0Ev>:
 8013ca8:	b510      	push	{r4, lr}
 8013caa:	4604      	mov	r4, r0
 8013cac:	f7ff ffe8 	bl	8013c80 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb1EED1Ev>
 8013cb0:	4620      	mov	r0, r4
 8013cb2:	f010 f90b 	bl	8023ecc <_ZdlPv>
 8013cb6:	4620      	mov	r0, r4
 8013cb8:	bd10      	pop	{r4, pc}
	...

08013cbc <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED1Ev>:
 8013cbc:	b510      	push	{r4, lr}
 8013cbe:	4b08      	ldr	r3, [pc, #32]	; (8013ce0 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED1Ev+0x24>)
 8013cc0:	6003      	str	r3, [r0, #0]
 8013cc2:	6903      	ldr	r3, [r0, #16]
 8013cc4:	2200      	movs	r2, #0
 8013cc6:	4604      	mov	r4, r0
 8013cc8:	60da      	str	r2, [r3, #12]
 8013cca:	619a      	str	r2, [r3, #24]
 8013ccc:	621a      	str	r2, [r3, #32]
 8013cce:	629a      	str	r2, [r3, #40]	; 0x28
 8013cd0:	300c      	adds	r0, #12
 8013cd2:	f7fa feba 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013cd6:	4620      	mov	r0, r4
 8013cd8:	f7f9 f90c 	bl	800cef4 <_ZNSt7__cxx1110moneypunctIcLb0EED1Ev>
 8013cdc:	4620      	mov	r0, r4
 8013cde:	bd10      	pop	{r4, pc}
 8013ce0:	08030298 	.word	0x08030298

08013ce4 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED0Ev>:
 8013ce4:	b510      	push	{r4, lr}
 8013ce6:	4604      	mov	r4, r0
 8013ce8:	f7ff ffe8 	bl	8013cbc <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIcLb0EED1Ev>
 8013cec:	4620      	mov	r0, r4
 8013cee:	f010 f8ed 	bl	8023ecc <_ZdlPv>
 8013cf2:	4620      	mov	r0, r4
 8013cf4:	bd10      	pop	{r4, pc}
	...

08013cf8 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED1Ev>:
 8013cf8:	b510      	push	{r4, lr}
 8013cfa:	4b05      	ldr	r3, [pc, #20]	; (8013d10 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED1Ev+0x18>)
 8013cfc:	4604      	mov	r4, r0
 8013cfe:	f840 3b10 	str.w	r3, [r0], #16
 8013d02:	f7fa fea2 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013d06:	4620      	mov	r0, r4
 8013d08:	f7fd faf4 	bl	80112f4 <_ZNSt7__cxx118messagesIcED1Ev>
 8013d0c:	4620      	mov	r0, r4
 8013d0e:	bd10      	pop	{r4, pc}
 8013d10:	08030160 	.word	0x08030160

08013d14 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED0Ev>:
 8013d14:	b510      	push	{r4, lr}
 8013d16:	4604      	mov	r4, r0
 8013d18:	f7ff ffee 	bl	8013cf8 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIcED1Ev>
 8013d1c:	4620      	mov	r0, r4
 8013d1e:	f010 f8d5 	bl	8023ecc <_ZdlPv>
 8013d22:	4620      	mov	r0, r4
 8013d24:	bd10      	pop	{r4, pc}
	...

08013d28 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED1Ev>:
 8013d28:	b510      	push	{r4, lr}
 8013d2a:	4b07      	ldr	r3, [pc, #28]	; (8013d48 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED1Ev+0x20>)
 8013d2c:	6003      	str	r3, [r0, #0]
 8013d2e:	6903      	ldr	r3, [r0, #16]
 8013d30:	2200      	movs	r2, #0
 8013d32:	4604      	mov	r4, r0
 8013d34:	60da      	str	r2, [r3, #12]
 8013d36:	300c      	adds	r0, #12
 8013d38:	f7fa fe87 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013d3c:	4620      	mov	r0, r4
 8013d3e:	f7f9 fc8d 	bl	800d65c <_ZNSt7__cxx118numpunctIwED1Ev>
 8013d42:	4620      	mov	r0, r4
 8013d44:	bd10      	pop	{r4, pc}
 8013d46:	bf00      	nop
 8013d48:	080301bc 	.word	0x080301bc

08013d4c <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED0Ev>:
 8013d4c:	b510      	push	{r4, lr}
 8013d4e:	4604      	mov	r4, r0
 8013d50:	f7ff ffea 	bl	8013d28 <_ZNSt13__facet_shims12_GLOBAL__N_113numpunct_shimIwED1Ev>
 8013d54:	4620      	mov	r0, r4
 8013d56:	f010 f8b9 	bl	8023ecc <_ZdlPv>
 8013d5a:	4620      	mov	r0, r4
 8013d5c:	bd10      	pop	{r4, pc}
	...

08013d60 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED1Ev>:
 8013d60:	b510      	push	{r4, lr}
 8013d62:	4b08      	ldr	r3, [pc, #32]	; (8013d84 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED1Ev+0x24>)
 8013d64:	6003      	str	r3, [r0, #0]
 8013d66:	6903      	ldr	r3, [r0, #16]
 8013d68:	2200      	movs	r2, #0
 8013d6a:	4604      	mov	r4, r0
 8013d6c:	60da      	str	r2, [r3, #12]
 8013d6e:	621a      	str	r2, [r3, #32]
 8013d70:	629a      	str	r2, [r3, #40]	; 0x28
 8013d72:	631a      	str	r2, [r3, #48]	; 0x30
 8013d74:	300c      	adds	r0, #12
 8013d76:	f7fa fe68 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013d7a:	4620      	mov	r0, r4
 8013d7c:	f7f9 f964 	bl	800d048 <_ZNSt7__cxx1110moneypunctIwLb1EED1Ev>
 8013d80:	4620      	mov	r0, r4
 8013d82:	bd10      	pop	{r4, pc}
 8013d84:	08030334 	.word	0x08030334

08013d88 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED0Ev>:
 8013d88:	b510      	push	{r4, lr}
 8013d8a:	4604      	mov	r4, r0
 8013d8c:	f7ff ffe8 	bl	8013d60 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb1EED1Ev>
 8013d90:	4620      	mov	r0, r4
 8013d92:	f010 f89b 	bl	8023ecc <_ZdlPv>
 8013d96:	4620      	mov	r0, r4
 8013d98:	bd10      	pop	{r4, pc}
	...

08013d9c <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED1Ev>:
 8013d9c:	b510      	push	{r4, lr}
 8013d9e:	4b08      	ldr	r3, [pc, #32]	; (8013dc0 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED1Ev+0x24>)
 8013da0:	6003      	str	r3, [r0, #0]
 8013da2:	6903      	ldr	r3, [r0, #16]
 8013da4:	2200      	movs	r2, #0
 8013da6:	4604      	mov	r4, r0
 8013da8:	60da      	str	r2, [r3, #12]
 8013daa:	621a      	str	r2, [r3, #32]
 8013dac:	629a      	str	r2, [r3, #40]	; 0x28
 8013dae:	631a      	str	r2, [r3, #48]	; 0x30
 8013db0:	300c      	adds	r0, #12
 8013db2:	f7fa fe4a 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013db6:	4620      	mov	r0, r4
 8013db8:	f7f9 f960 	bl	800d07c <_ZNSt7__cxx1110moneypunctIwLb0EED1Ev>
 8013dbc:	4620      	mov	r0, r4
 8013dbe:	bd10      	pop	{r4, pc}
 8013dc0:	08030300 	.word	0x08030300

08013dc4 <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED0Ev>:
 8013dc4:	b510      	push	{r4, lr}
 8013dc6:	4604      	mov	r4, r0
 8013dc8:	f7ff ffe8 	bl	8013d9c <_ZNSt13__facet_shims12_GLOBAL__N_115moneypunct_shimIwLb0EED1Ev>
 8013dcc:	4620      	mov	r0, r4
 8013dce:	f010 f87d 	bl	8023ecc <_ZdlPv>
 8013dd2:	4620      	mov	r0, r4
 8013dd4:	bd10      	pop	{r4, pc}
	...

08013dd8 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED1Ev>:
 8013dd8:	b510      	push	{r4, lr}
 8013dda:	4b05      	ldr	r3, [pc, #20]	; (8013df0 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED1Ev+0x18>)
 8013ddc:	4604      	mov	r4, r0
 8013dde:	f840 3b10 	str.w	r3, [r0], #16
 8013de2:	f7fa fe32 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013de6:	4620      	mov	r0, r4
 8013de8:	f001 fa3a 	bl	8015260 <_ZNSt7__cxx118messagesIwED1Ev>
 8013dec:	4620      	mov	r0, r4
 8013dee:	bd10      	pop	{r4, pc}
 8013df0:	0803017c 	.word	0x0803017c

08013df4 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED0Ev>:
 8013df4:	b510      	push	{r4, lr}
 8013df6:	4604      	mov	r4, r0
 8013df8:	f7ff ffee 	bl	8013dd8 <_ZNSt13__facet_shims12_GLOBAL__N_113messages_shimIwED1Ev>
 8013dfc:	4620      	mov	r0, r4
 8013dfe:	f010 f865 	bl	8023ecc <_ZdlPv>
 8013e02:	4620      	mov	r0, r4
 8013e04:	bd10      	pop	{r4, pc}
	...

08013e08 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED1Ev>:
 8013e08:	b510      	push	{r4, lr}
 8013e0a:	4b05      	ldr	r3, [pc, #20]	; (8013e20 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED1Ev+0x18>)
 8013e0c:	4604      	mov	r4, r0
 8013e0e:	f840 3b0c 	str.w	r3, [r0], #12
 8013e12:	f7fa fe1a 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013e16:	4620      	mov	r0, r4
 8013e18:	f7fd fa84 	bl	8011324 <_ZNSt7__cxx117collateIcED1Ev>
 8013e1c:	4620      	mov	r0, r4
 8013e1e:	bd10      	pop	{r4, pc}
 8013e20:	08030128 	.word	0x08030128

08013e24 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED0Ev>:
 8013e24:	b510      	push	{r4, lr}
 8013e26:	4604      	mov	r4, r0
 8013e28:	f7ff ffee 	bl	8013e08 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIcED1Ev>
 8013e2c:	4620      	mov	r0, r4
 8013e2e:	f010 f84d 	bl	8023ecc <_ZdlPv>
 8013e32:	4620      	mov	r0, r4
 8013e34:	bd10      	pop	{r4, pc}
	...

08013e38 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED1Ev>:
 8013e38:	b510      	push	{r4, lr}
 8013e3a:	4b05      	ldr	r3, [pc, #20]	; (8013e50 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED1Ev+0x18>)
 8013e3c:	4604      	mov	r4, r0
 8013e3e:	f840 3b08 	str.w	r3, [r0], #8
 8013e42:	f7fa fe02 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013e46:	4620      	mov	r0, r4
 8013e48:	f7fd fa18 	bl	801127c <_ZNSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 8013e4c:	4620      	mov	r0, r4
 8013e4e:	bd10      	pop	{r4, pc}
 8013e50:	08030238 	.word	0x08030238

08013e54 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED0Ev>:
 8013e54:	b510      	push	{r4, lr}
 8013e56:	4604      	mov	r4, r0
 8013e58:	f7ff ffee 	bl	8013e38 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIcED1Ev>
 8013e5c:	4620      	mov	r0, r4
 8013e5e:	f010 f835 	bl	8023ecc <_ZdlPv>
 8013e62:	4620      	mov	r0, r4
 8013e64:	bd10      	pop	{r4, pc}
	...

08013e68 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED1Ev>:
 8013e68:	b510      	push	{r4, lr}
 8013e6a:	4b05      	ldr	r3, [pc, #20]	; (8013e80 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED1Ev+0x18>)
 8013e6c:	4604      	mov	r4, r0
 8013e6e:	f840 3b08 	str.w	r3, [r0], #8
 8013e72:	f7fa fdea 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013e76:	4620      	mov	r0, r4
 8013e78:	f7fd fa14 	bl	80112a4 <_ZNSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 8013e7c:	4620      	mov	r0, r4
 8013e7e:	bd10      	pop	{r4, pc}
 8013e80:	08030268 	.word	0x08030268

08013e84 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED0Ev>:
 8013e84:	b510      	push	{r4, lr}
 8013e86:	4604      	mov	r4, r0
 8013e88:	f7ff ffee 	bl	8013e68 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIcED1Ev>
 8013e8c:	4620      	mov	r0, r4
 8013e8e:	f010 f81d 	bl	8023ecc <_ZdlPv>
 8013e92:	4620      	mov	r0, r4
 8013e94:	bd10      	pop	{r4, pc}
	...

08013e98 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED1Ev>:
 8013e98:	b510      	push	{r4, lr}
 8013e9a:	4b05      	ldr	r3, [pc, #20]	; (8013eb0 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED1Ev+0x18>)
 8013e9c:	4604      	mov	r4, r0
 8013e9e:	f840 3b0c 	str.w	r3, [r0], #12
 8013ea2:	f7fa fdd2 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013ea6:	4620      	mov	r0, r4
 8013ea8:	f001 f9f2 	bl	8015290 <_ZNSt7__cxx117collateIwED1Ev>
 8013eac:	4620      	mov	r0, r4
 8013eae:	bd10      	pop	{r4, pc}
 8013eb0:	08030144 	.word	0x08030144

08013eb4 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED0Ev>:
 8013eb4:	b510      	push	{r4, lr}
 8013eb6:	4604      	mov	r4, r0
 8013eb8:	f7ff ffee 	bl	8013e98 <_ZNSt13__facet_shims12_GLOBAL__N_112collate_shimIwED1Ev>
 8013ebc:	4620      	mov	r0, r4
 8013ebe:	f010 f805 	bl	8023ecc <_ZdlPv>
 8013ec2:	4620      	mov	r0, r4
 8013ec4:	bd10      	pop	{r4, pc}
	...

08013ec8 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED1Ev>:
 8013ec8:	b510      	push	{r4, lr}
 8013eca:	4b05      	ldr	r3, [pc, #20]	; (8013ee0 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED1Ev+0x18>)
 8013ecc:	4604      	mov	r4, r0
 8013ece:	f840 3b08 	str.w	r3, [r0], #8
 8013ed2:	f7fa fdba 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013ed6:	4620      	mov	r0, r4
 8013ed8:	f001 f986 	bl	80151e8 <_ZNSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 8013edc:	4620      	mov	r0, r4
 8013ede:	bd10      	pop	{r4, pc}
 8013ee0:	08030250 	.word	0x08030250

08013ee4 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED0Ev>:
 8013ee4:	b510      	push	{r4, lr}
 8013ee6:	4604      	mov	r4, r0
 8013ee8:	f7ff ffee 	bl	8013ec8 <_ZNSt13__facet_shims12_GLOBAL__N_114money_get_shimIwED1Ev>
 8013eec:	4620      	mov	r0, r4
 8013eee:	f00f ffed 	bl	8023ecc <_ZdlPv>
 8013ef2:	4620      	mov	r0, r4
 8013ef4:	bd10      	pop	{r4, pc}
	...

08013ef8 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED1Ev>:
 8013ef8:	b510      	push	{r4, lr}
 8013efa:	4b05      	ldr	r3, [pc, #20]	; (8013f10 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED1Ev+0x18>)
 8013efc:	4604      	mov	r4, r0
 8013efe:	f840 3b08 	str.w	r3, [r0], #8
 8013f02:	f7fa fda2 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013f06:	4620      	mov	r0, r4
 8013f08:	f001 f982 	bl	8015210 <_ZNSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 8013f0c:	4620      	mov	r0, r4
 8013f0e:	bd10      	pop	{r4, pc}
 8013f10:	08030280 	.word	0x08030280

08013f14 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED0Ev>:
 8013f14:	b510      	push	{r4, lr}
 8013f16:	4604      	mov	r4, r0
 8013f18:	f7ff ffee 	bl	8013ef8 <_ZNSt13__facet_shims12_GLOBAL__N_114money_put_shimIwED1Ev>
 8013f1c:	4620      	mov	r0, r4
 8013f1e:	f00f ffd5 	bl	8023ecc <_ZdlPv>
 8013f22:	4620      	mov	r0, r4
 8013f24:	bd10      	pop	{r4, pc}
	...

08013f28 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED1Ev>:
 8013f28:	b510      	push	{r4, lr}
 8013f2a:	4b05      	ldr	r3, [pc, #20]	; (8013f40 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED1Ev+0x18>)
 8013f2c:	4604      	mov	r4, r0
 8013f2e:	f840 3b08 	str.w	r3, [r0], #8
 8013f32:	f7fa fd8a 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013f36:	4620      	mov	r0, r4
 8013f38:	f7fd f9c8 	bl	80112cc <_ZNSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 8013f3c:	4620      	mov	r0, r4
 8013f3e:	bd10      	pop	{r4, pc}
 8013f40:	080301e0 	.word	0x080301e0

08013f44 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED0Ev>:
 8013f44:	b510      	push	{r4, lr}
 8013f46:	4604      	mov	r4, r0
 8013f48:	f7ff ffee 	bl	8013f28 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIcED1Ev>
 8013f4c:	4620      	mov	r0, r4
 8013f4e:	f00f ffbd 	bl	8023ecc <_ZdlPv>
 8013f52:	4620      	mov	r0, r4
 8013f54:	bd10      	pop	{r4, pc}
	...

08013f58 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED1Ev>:
 8013f58:	b510      	push	{r4, lr}
 8013f5a:	4b05      	ldr	r3, [pc, #20]	; (8013f70 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED1Ev+0x18>)
 8013f5c:	4604      	mov	r4, r0
 8013f5e:	f840 3b08 	str.w	r3, [r0], #8
 8013f62:	f7fa fd72 	bl	800ea4a <_ZNSt6locale5facet6__shimD1Ev>
 8013f66:	4620      	mov	r0, r4
 8013f68:	f001 f966 	bl	8015238 <_ZNSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 8013f6c:	4620      	mov	r0, r4
 8013f6e:	bd10      	pop	{r4, pc}
 8013f70:	0803020c 	.word	0x0803020c

08013f74 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED0Ev>:
 8013f74:	b510      	push	{r4, lr}
 8013f76:	4604      	mov	r4, r0
 8013f78:	f7ff ffee 	bl	8013f58 <_ZNSt13__facet_shims12_GLOBAL__N_113time_get_shimIwED1Ev>
 8013f7c:	4620      	mov	r0, r4
 8013f7e:	f00f ffa5 	bl	8023ecc <_ZdlPv>
 8013f82:	4620      	mov	r0, r4
 8013f84:	bd10      	pop	{r4, pc}

08013f86 <_ZNSt13__facet_shims21__numpunct_fill_cacheIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt16__numpunct_cacheIT_E>:
 8013f86:	b530      	push	{r4, r5, lr}
 8013f88:	4608      	mov	r0, r1
 8013f8a:	b087      	sub	sp, #28
 8013f8c:	4614      	mov	r4, r2
 8013f8e:	460d      	mov	r5, r1
 8013f90:	f7fd fbe1 	bl	8011756 <_ZNKSt7__cxx118numpunctIcE13decimal_pointEv>
 8013f94:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 8013f98:	4628      	mov	r0, r5
 8013f9a:	f7fd fbdf 	bl	801175c <_ZNKSt7__cxx118numpunctIcE13thousands_sepEv>
 8013f9e:	2300      	movs	r3, #0
 8013fa0:	60a3      	str	r3, [r4, #8]
 8013fa2:	6163      	str	r3, [r4, #20]
 8013fa4:	61e3      	str	r3, [r4, #28]
 8013fa6:	2301      	movs	r3, #1
 8013fa8:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8013fac:	f884 0025 	strb.w	r0, [r4, #37]	; 0x25
 8013fb0:	4629      	mov	r1, r5
 8013fb2:	4668      	mov	r0, sp
 8013fb4:	f7fd fbd5 	bl	8011762 <_ZNKSt7__cxx118numpunctIcE8groupingEv>
 8013fb8:	4669      	mov	r1, sp
 8013fba:	f104 0008 	add.w	r0, r4, #8
 8013fbe:	f7ff fb93 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 8013fc2:	60e0      	str	r0, [r4, #12]
 8013fc4:	4668      	mov	r0, sp
 8013fc6:	f009 fca9 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8013fca:	4629      	mov	r1, r5
 8013fcc:	4668      	mov	r0, sp
 8013fce:	f7fd fbcf 	bl	8011770 <_ZNKSt7__cxx118numpunctIcE8truenameEv>
 8013fd2:	4669      	mov	r1, sp
 8013fd4:	f104 0014 	add.w	r0, r4, #20
 8013fd8:	f7ff fb86 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 8013fdc:	61a0      	str	r0, [r4, #24]
 8013fde:	4668      	mov	r0, sp
 8013fe0:	f009 fc9c 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8013fe4:	4629      	mov	r1, r5
 8013fe6:	4668      	mov	r0, sp
 8013fe8:	f7fd fbc9 	bl	801177e <_ZNKSt7__cxx118numpunctIcE9falsenameEv>
 8013fec:	4669      	mov	r1, sp
 8013fee:	f104 001c 	add.w	r0, r4, #28
 8013ff2:	f7ff fb79 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 8013ff6:	6220      	str	r0, [r4, #32]
 8013ff8:	4668      	mov	r0, sp
 8013ffa:	f009 fc8f 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8013ffe:	b007      	add	sp, #28
 8014000:	bd30      	pop	{r4, r5, pc}

08014002 <_ZNSt13__facet_shims21__numpunct_fill_cacheIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt16__numpunct_cacheIT_E>:
 8014002:	b530      	push	{r4, r5, lr}
 8014004:	4608      	mov	r0, r1
 8014006:	b087      	sub	sp, #28
 8014008:	4614      	mov	r4, r2
 801400a:	460d      	mov	r5, r1
 801400c:	f001 fadc 	bl	80155c8 <_ZNKSt7__cxx118numpunctIwE13decimal_pointEv>
 8014010:	6260      	str	r0, [r4, #36]	; 0x24
 8014012:	4628      	mov	r0, r5
 8014014:	f001 fadb 	bl	80155ce <_ZNKSt7__cxx118numpunctIwE13thousands_sepEv>
 8014018:	2300      	movs	r3, #0
 801401a:	60a3      	str	r3, [r4, #8]
 801401c:	6163      	str	r3, [r4, #20]
 801401e:	61e3      	str	r3, [r4, #28]
 8014020:	2301      	movs	r3, #1
 8014022:	f884 3124 	strb.w	r3, [r4, #292]	; 0x124
 8014026:	62a0      	str	r0, [r4, #40]	; 0x28
 8014028:	4629      	mov	r1, r5
 801402a:	4668      	mov	r0, sp
 801402c:	f001 fad2 	bl	80155d4 <_ZNKSt7__cxx118numpunctIwE8groupingEv>
 8014030:	4669      	mov	r1, sp
 8014032:	f104 0008 	add.w	r0, r4, #8
 8014036:	f7ff fb57 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 801403a:	60e0      	str	r0, [r4, #12]
 801403c:	4668      	mov	r0, sp
 801403e:	f009 fc6d 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8014042:	4629      	mov	r1, r5
 8014044:	4668      	mov	r0, sp
 8014046:	f001 facc 	bl	80155e2 <_ZNKSt7__cxx118numpunctIwE8truenameEv>
 801404a:	4669      	mov	r1, sp
 801404c:	f104 0014 	add.w	r0, r4, #20
 8014050:	f7ff fb5d 	bl	801370e <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 8014054:	61a0      	str	r0, [r4, #24]
 8014056:	4668      	mov	r0, sp
 8014058:	f00f fbee 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 801405c:	4629      	mov	r1, r5
 801405e:	4668      	mov	r0, sp
 8014060:	f001 fac6 	bl	80155f0 <_ZNKSt7__cxx118numpunctIwE9falsenameEv>
 8014064:	4669      	mov	r1, sp
 8014066:	f104 001c 	add.w	r0, r4, #28
 801406a:	f7ff fb50 	bl	801370e <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 801406e:	6220      	str	r0, [r4, #32]
 8014070:	4668      	mov	r0, sp
 8014072:	f00f fbe1 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8014076:	b007      	add	sp, #28
 8014078:	bd30      	pop	{r4, r5, pc}

0801407a <_ZNSt13__facet_shims17__collate_compareIcEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKT_S9_S9_S9_>:
 801407a:	b410      	push	{r4}
 801407c:	4608      	mov	r0, r1
 801407e:	4611      	mov	r1, r2
 8014080:	461a      	mov	r2, r3
 8014082:	e9dd 3401 	ldrd	r3, r4, [sp, #4]
 8014086:	9401      	str	r4, [sp, #4]
 8014088:	f85d 4b04 	ldr.w	r4, [sp], #4
 801408c:	f7fd bc30 	b.w	80118f0 <_ZNKSt7__cxx117collateIcE7compareEPKcS3_S3_S3_>

08014090 <_ZNSt13__facet_shims17__collate_compareIwEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKT_S9_S9_S9_>:
 8014090:	b410      	push	{r4}
 8014092:	4608      	mov	r0, r1
 8014094:	4611      	mov	r1, r2
 8014096:	461a      	mov	r2, r3
 8014098:	e9dd 3401 	ldrd	r3, r4, [sp, #4]
 801409c:	9401      	str	r4, [sp, #4]
 801409e:	f85d 4b04 	ldr.w	r4, [sp], #4
 80140a2:	f001 bb5d 	b.w	8015760 <_ZNKSt7__cxx117collateIwE7compareEPKwS3_S3_S3_>

080140a6 <_ZNSt13__facet_shims23__moneypunct_fill_cacheIcLb1EEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>:
 80140a6:	b530      	push	{r4, r5, lr}
 80140a8:	4608      	mov	r0, r1
 80140aa:	b087      	sub	sp, #28
 80140ac:	4614      	mov	r4, r2
 80140ae:	460d      	mov	r5, r1
 80140b0:	f7fd fab6 	bl	8011620 <_ZNKSt7__cxx1110moneypunctIcLb1EE13decimal_pointEv>
 80140b4:	7460      	strb	r0, [r4, #17]
 80140b6:	4628      	mov	r0, r5
 80140b8:	f7fd fab5 	bl	8011626 <_ZNKSt7__cxx1110moneypunctIcLb1EE13thousands_sepEv>
 80140bc:	74a0      	strb	r0, [r4, #18]
 80140be:	4628      	mov	r0, r5
 80140c0:	f7fd fad0 	bl	8011664 <_ZNKSt7__cxx1110moneypunctIcLb1EE11frac_digitsEv>
 80140c4:	2300      	movs	r3, #0
 80140c6:	60a3      	str	r3, [r4, #8]
 80140c8:	6163      	str	r3, [r4, #20]
 80140ca:	61e3      	str	r3, [r4, #28]
 80140cc:	6263      	str	r3, [r4, #36]	; 0x24
 80140ce:	2301      	movs	r3, #1
 80140d0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80140d4:	62e0      	str	r0, [r4, #44]	; 0x2c
 80140d6:	4629      	mov	r1, r5
 80140d8:	4668      	mov	r0, sp
 80140da:	f7fd faa7 	bl	801162c <_ZNKSt7__cxx1110moneypunctIcLb1EE8groupingEv>
 80140de:	4669      	mov	r1, sp
 80140e0:	f104 0008 	add.w	r0, r4, #8
 80140e4:	f7ff fb00 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 80140e8:	60e0      	str	r0, [r4, #12]
 80140ea:	4668      	mov	r0, sp
 80140ec:	f009 fc16 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80140f0:	4629      	mov	r1, r5
 80140f2:	4668      	mov	r0, sp
 80140f4:	f7fd faa1 	bl	801163a <_ZNKSt7__cxx1110moneypunctIcLb1EE11curr_symbolEv>
 80140f8:	4669      	mov	r1, sp
 80140fa:	f104 0014 	add.w	r0, r4, #20
 80140fe:	f7ff faf3 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 8014102:	61a0      	str	r0, [r4, #24]
 8014104:	4668      	mov	r0, sp
 8014106:	f009 fc09 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 801410a:	4629      	mov	r1, r5
 801410c:	4668      	mov	r0, sp
 801410e:	f7fd fa9b 	bl	8011648 <_ZNKSt7__cxx1110moneypunctIcLb1EE13positive_signEv>
 8014112:	4669      	mov	r1, sp
 8014114:	f104 001c 	add.w	r0, r4, #28
 8014118:	f7ff fae6 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 801411c:	6220      	str	r0, [r4, #32]
 801411e:	4668      	mov	r0, sp
 8014120:	f009 fbfc 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8014124:	4629      	mov	r1, r5
 8014126:	4668      	mov	r0, sp
 8014128:	f7fd fa95 	bl	8011656 <_ZNKSt7__cxx1110moneypunctIcLb1EE13negative_signEv>
 801412c:	4669      	mov	r1, sp
 801412e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8014132:	f7ff fad9 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 8014136:	62a0      	str	r0, [r4, #40]	; 0x28
 8014138:	4668      	mov	r0, sp
 801413a:	f009 fbef 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 801413e:	4628      	mov	r0, r5
 8014140:	f7fd fa93 	bl	801166a <_ZNKSt7__cxx1110moneypunctIcLb1EE10pos_formatEv>
 8014144:	6320      	str	r0, [r4, #48]	; 0x30
 8014146:	4628      	mov	r0, r5
 8014148:	f7fd fa94 	bl	8011674 <_ZNKSt7__cxx1110moneypunctIcLb1EE10neg_formatEv>
 801414c:	6360      	str	r0, [r4, #52]	; 0x34
 801414e:	b007      	add	sp, #28
 8014150:	bd30      	pop	{r4, r5, pc}

08014152 <_ZNSt13__facet_shims23__moneypunct_fill_cacheIcLb0EEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>:
 8014152:	b530      	push	{r4, r5, lr}
 8014154:	4608      	mov	r0, r1
 8014156:	b087      	sub	sp, #28
 8014158:	4614      	mov	r4, r2
 801415a:	460d      	mov	r5, r1
 801415c:	f7fd fa31 	bl	80115c2 <_ZNKSt7__cxx1110moneypunctIcLb0EE13decimal_pointEv>
 8014160:	7460      	strb	r0, [r4, #17]
 8014162:	4628      	mov	r0, r5
 8014164:	f7fd fa30 	bl	80115c8 <_ZNKSt7__cxx1110moneypunctIcLb0EE13thousands_sepEv>
 8014168:	74a0      	strb	r0, [r4, #18]
 801416a:	4628      	mov	r0, r5
 801416c:	f7fd fa4b 	bl	8011606 <_ZNKSt7__cxx1110moneypunctIcLb0EE11frac_digitsEv>
 8014170:	2300      	movs	r3, #0
 8014172:	60a3      	str	r3, [r4, #8]
 8014174:	6163      	str	r3, [r4, #20]
 8014176:	61e3      	str	r3, [r4, #28]
 8014178:	6263      	str	r3, [r4, #36]	; 0x24
 801417a:	2301      	movs	r3, #1
 801417c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8014180:	62e0      	str	r0, [r4, #44]	; 0x2c
 8014182:	4629      	mov	r1, r5
 8014184:	4668      	mov	r0, sp
 8014186:	f7fd fa22 	bl	80115ce <_ZNKSt7__cxx1110moneypunctIcLb0EE8groupingEv>
 801418a:	4669      	mov	r1, sp
 801418c:	f104 0008 	add.w	r0, r4, #8
 8014190:	f7ff faaa 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 8014194:	60e0      	str	r0, [r4, #12]
 8014196:	4668      	mov	r0, sp
 8014198:	f009 fbc0 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 801419c:	4629      	mov	r1, r5
 801419e:	4668      	mov	r0, sp
 80141a0:	f7fd fa1c 	bl	80115dc <_ZNKSt7__cxx1110moneypunctIcLb0EE11curr_symbolEv>
 80141a4:	4669      	mov	r1, sp
 80141a6:	f104 0014 	add.w	r0, r4, #20
 80141aa:	f7ff fa9d 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 80141ae:	61a0      	str	r0, [r4, #24]
 80141b0:	4668      	mov	r0, sp
 80141b2:	f009 fbb3 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80141b6:	4629      	mov	r1, r5
 80141b8:	4668      	mov	r0, sp
 80141ba:	f7fd fa16 	bl	80115ea <_ZNKSt7__cxx1110moneypunctIcLb0EE13positive_signEv>
 80141be:	4669      	mov	r1, sp
 80141c0:	f104 001c 	add.w	r0, r4, #28
 80141c4:	f7ff fa90 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 80141c8:	6220      	str	r0, [r4, #32]
 80141ca:	4668      	mov	r0, sp
 80141cc:	f009 fba6 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80141d0:	4629      	mov	r1, r5
 80141d2:	4668      	mov	r0, sp
 80141d4:	f7fd fa10 	bl	80115f8 <_ZNKSt7__cxx1110moneypunctIcLb0EE13negative_signEv>
 80141d8:	4669      	mov	r1, sp
 80141da:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80141de:	f7ff fa83 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 80141e2:	62a0      	str	r0, [r4, #40]	; 0x28
 80141e4:	4668      	mov	r0, sp
 80141e6:	f009 fb99 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80141ea:	4628      	mov	r0, r5
 80141ec:	f7fd fa0e 	bl	801160c <_ZNKSt7__cxx1110moneypunctIcLb0EE10pos_formatEv>
 80141f0:	6320      	str	r0, [r4, #48]	; 0x30
 80141f2:	4628      	mov	r0, r5
 80141f4:	f7fd fa0f 	bl	8011616 <_ZNKSt7__cxx1110moneypunctIcLb0EE10neg_formatEv>
 80141f8:	6360      	str	r0, [r4, #52]	; 0x34
 80141fa:	b007      	add	sp, #28
 80141fc:	bd30      	pop	{r4, r5, pc}

080141fe <_ZNSt13__facet_shims23__moneypunct_fill_cacheIwLb1EEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>:
 80141fe:	b530      	push	{r4, r5, lr}
 8014200:	4608      	mov	r0, r1
 8014202:	b087      	sub	sp, #28
 8014204:	4614      	mov	r4, r2
 8014206:	460d      	mov	r5, r1
 8014208:	f001 f945 	bl	8015496 <_ZNKSt7__cxx1110moneypunctIwLb1EE13decimal_pointEv>
 801420c:	6160      	str	r0, [r4, #20]
 801420e:	4628      	mov	r0, r5
 8014210:	f001 f944 	bl	801549c <_ZNKSt7__cxx1110moneypunctIwLb1EE13thousands_sepEv>
 8014214:	61a0      	str	r0, [r4, #24]
 8014216:	4628      	mov	r0, r5
 8014218:	f001 f95f 	bl	80154da <_ZNKSt7__cxx1110moneypunctIwLb1EE11frac_digitsEv>
 801421c:	2300      	movs	r3, #0
 801421e:	60a3      	str	r3, [r4, #8]
 8014220:	61e3      	str	r3, [r4, #28]
 8014222:	6263      	str	r3, [r4, #36]	; 0x24
 8014224:	62e3      	str	r3, [r4, #44]	; 0x2c
 8014226:	2301      	movs	r3, #1
 8014228:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 801422c:	6360      	str	r0, [r4, #52]	; 0x34
 801422e:	4629      	mov	r1, r5
 8014230:	4668      	mov	r0, sp
 8014232:	f001 f936 	bl	80154a2 <_ZNKSt7__cxx1110moneypunctIwLb1EE8groupingEv>
 8014236:	4669      	mov	r1, sp
 8014238:	f104 0008 	add.w	r0, r4, #8
 801423c:	f7ff fa54 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 8014240:	60e0      	str	r0, [r4, #12]
 8014242:	4668      	mov	r0, sp
 8014244:	f009 fb6a 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8014248:	4629      	mov	r1, r5
 801424a:	4668      	mov	r0, sp
 801424c:	f001 f930 	bl	80154b0 <_ZNKSt7__cxx1110moneypunctIwLb1EE11curr_symbolEv>
 8014250:	4669      	mov	r1, sp
 8014252:	f104 001c 	add.w	r0, r4, #28
 8014256:	f7ff fa5a 	bl	801370e <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 801425a:	6220      	str	r0, [r4, #32]
 801425c:	4668      	mov	r0, sp
 801425e:	f00f faeb 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8014262:	4629      	mov	r1, r5
 8014264:	4668      	mov	r0, sp
 8014266:	f001 f92a 	bl	80154be <_ZNKSt7__cxx1110moneypunctIwLb1EE13positive_signEv>
 801426a:	4669      	mov	r1, sp
 801426c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8014270:	f7ff fa4d 	bl	801370e <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 8014274:	62a0      	str	r0, [r4, #40]	; 0x28
 8014276:	4668      	mov	r0, sp
 8014278:	f00f fade 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 801427c:	4629      	mov	r1, r5
 801427e:	4668      	mov	r0, sp
 8014280:	f001 f924 	bl	80154cc <_ZNKSt7__cxx1110moneypunctIwLb1EE13negative_signEv>
 8014284:	4669      	mov	r1, sp
 8014286:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 801428a:	f7ff fa40 	bl	801370e <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 801428e:	6320      	str	r0, [r4, #48]	; 0x30
 8014290:	4668      	mov	r0, sp
 8014292:	f00f fad1 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8014296:	4628      	mov	r0, r5
 8014298:	f001 f922 	bl	80154e0 <_ZNKSt7__cxx1110moneypunctIwLb1EE10pos_formatEv>
 801429c:	63a0      	str	r0, [r4, #56]	; 0x38
 801429e:	4628      	mov	r0, r5
 80142a0:	f001 f923 	bl	80154ea <_ZNKSt7__cxx1110moneypunctIwLb1EE10neg_formatEv>
 80142a4:	63e0      	str	r0, [r4, #60]	; 0x3c
 80142a6:	b007      	add	sp, #28
 80142a8:	bd30      	pop	{r4, r5, pc}

080142aa <_ZNSt13__facet_shims23__moneypunct_fill_cacheIwLb0EEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>:
 80142aa:	b530      	push	{r4, r5, lr}
 80142ac:	4608      	mov	r0, r1
 80142ae:	b087      	sub	sp, #28
 80142b0:	4614      	mov	r4, r2
 80142b2:	460d      	mov	r5, r1
 80142b4:	f001 f8c0 	bl	8015438 <_ZNKSt7__cxx1110moneypunctIwLb0EE13decimal_pointEv>
 80142b8:	6160      	str	r0, [r4, #20]
 80142ba:	4628      	mov	r0, r5
 80142bc:	f001 f8bf 	bl	801543e <_ZNKSt7__cxx1110moneypunctIwLb0EE13thousands_sepEv>
 80142c0:	61a0      	str	r0, [r4, #24]
 80142c2:	4628      	mov	r0, r5
 80142c4:	f001 f8da 	bl	801547c <_ZNKSt7__cxx1110moneypunctIwLb0EE11frac_digitsEv>
 80142c8:	2300      	movs	r3, #0
 80142ca:	60a3      	str	r3, [r4, #8]
 80142cc:	61e3      	str	r3, [r4, #28]
 80142ce:	6263      	str	r3, [r4, #36]	; 0x24
 80142d0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80142d2:	2301      	movs	r3, #1
 80142d4:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 80142d8:	6360      	str	r0, [r4, #52]	; 0x34
 80142da:	4629      	mov	r1, r5
 80142dc:	4668      	mov	r0, sp
 80142de:	f001 f8b1 	bl	8015444 <_ZNKSt7__cxx1110moneypunctIwLb0EE8groupingEv>
 80142e2:	4669      	mov	r1, sp
 80142e4:	f104 0008 	add.w	r0, r4, #8
 80142e8:	f7ff f9fe 	bl	80136e8 <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIcEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 80142ec:	60e0      	str	r0, [r4, #12]
 80142ee:	4668      	mov	r0, sp
 80142f0:	f009 fb14 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80142f4:	4629      	mov	r1, r5
 80142f6:	4668      	mov	r0, sp
 80142f8:	f001 f8ab 	bl	8015452 <_ZNKSt7__cxx1110moneypunctIwLb0EE11curr_symbolEv>
 80142fc:	4669      	mov	r1, sp
 80142fe:	f104 001c 	add.w	r0, r4, #28
 8014302:	f7ff fa04 	bl	801370e <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 8014306:	6220      	str	r0, [r4, #32]
 8014308:	4668      	mov	r0, sp
 801430a:	f00f fa95 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 801430e:	4629      	mov	r1, r5
 8014310:	4668      	mov	r0, sp
 8014312:	f001 f8a5 	bl	8015460 <_ZNKSt7__cxx1110moneypunctIwLb0EE13positive_signEv>
 8014316:	4669      	mov	r1, sp
 8014318:	f104 0024 	add.w	r0, r4, #36	; 0x24
 801431c:	f7ff f9f7 	bl	801370e <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 8014320:	62a0      	str	r0, [r4, #40]	; 0x28
 8014322:	4668      	mov	r0, sp
 8014324:	f00f fa88 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8014328:	4629      	mov	r1, r5
 801432a:	4668      	mov	r0, sp
 801432c:	f001 f89f 	bl	801546e <_ZNKSt7__cxx1110moneypunctIwLb0EE13negative_signEv>
 8014330:	4669      	mov	r1, sp
 8014332:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8014336:	f7ff f9ea 	bl	801370e <_ZNSt13__facet_shims12_GLOBAL__N_16__copyIwEEjRPKT_RKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEE>
 801433a:	6320      	str	r0, [r4, #48]	; 0x30
 801433c:	4668      	mov	r0, sp
 801433e:	f00f fa7b 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8014342:	4628      	mov	r0, r5
 8014344:	f001 f89d 	bl	8015482 <_ZNKSt7__cxx1110moneypunctIwLb0EE10pos_formatEv>
 8014348:	63a0      	str	r0, [r4, #56]	; 0x38
 801434a:	4628      	mov	r0, r5
 801434c:	f001 f89e 	bl	801548c <_ZNKSt7__cxx1110moneypunctIwLb0EE10neg_formatEv>
 8014350:	63e0      	str	r0, [r4, #60]	; 0x3c
 8014352:	b007      	add	sp, #28
 8014354:	bd30      	pop	{r4, r5, pc}

08014356 <_ZNSt13__facet_shims15__messages_openIcEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKcjRKS3_>:
 8014356:	b510      	push	{r4, lr}
 8014358:	b086      	sub	sp, #24
 801435a:	460c      	mov	r4, r1
 801435c:	4611      	mov	r1, r2
 801435e:	aa02      	add	r2, sp, #8
 8014360:	9200      	str	r2, [sp, #0]
 8014362:	4668      	mov	r0, sp
 8014364:	18ca      	adds	r2, r1, r3
 8014366:	f7ff fc4b 	bl	8013c00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0>
 801436a:	9a08      	ldr	r2, [sp, #32]
 801436c:	4669      	mov	r1, sp
 801436e:	4620      	mov	r0, r4
 8014370:	f7fd faac 	bl	80118cc <_ZNKSt7__cxx118messagesIcE4openERKNS_12basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale>
 8014374:	4604      	mov	r4, r0
 8014376:	4668      	mov	r0, sp
 8014378:	f009 fad0 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 801437c:	4620      	mov	r0, r4
 801437e:	b006      	add	sp, #24
 8014380:	bd10      	pop	{r4, pc}

08014382 <_ZNSt13__facet_shims15__messages_openIwEEiSt17integral_constantIbLb1EEPKNSt6locale5facetEPKcjRKS3_>:
 8014382:	b510      	push	{r4, lr}
 8014384:	b086      	sub	sp, #24
 8014386:	460c      	mov	r4, r1
 8014388:	4611      	mov	r1, r2
 801438a:	aa02      	add	r2, sp, #8
 801438c:	9200      	str	r2, [sp, #0]
 801438e:	4668      	mov	r0, sp
 8014390:	18ca      	adds	r2, r1, r3
 8014392:	f7ff fc35 	bl	8013c00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0>
 8014396:	9a08      	ldr	r2, [sp, #32]
 8014398:	4669      	mov	r1, sp
 801439a:	4620      	mov	r0, r4
 801439c:	f001 f9ce 	bl	801573c <_ZNKSt7__cxx118messagesIwE4openERKNS_12basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale>
 80143a0:	4604      	mov	r4, r0
 80143a2:	4668      	mov	r0, sp
 80143a4:	f009 faba 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80143a8:	4620      	mov	r0, r4
 80143aa:	b006      	add	sp, #24
 80143ac:	bd10      	pop	{r4, pc}

080143ae <_ZNSt13__facet_shims16__messages_closeIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEi>:
 80143ae:	4608      	mov	r0, r1
 80143b0:	4611      	mov	r1, r2
 80143b2:	f7fd ba9a 	b.w	80118ea <_ZNKSt7__cxx118messagesIcE5closeEi>

080143b6 <_ZNSt13__facet_shims16__messages_closeIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetEi>:
 80143b6:	4608      	mov	r0, r1
 80143b8:	4611      	mov	r1, r2
 80143ba:	f001 b9ce 	b.w	801575a <_ZNKSt7__cxx118messagesIwE5closeEi>

080143be <_ZNSt13__facet_shims20__time_get_dateorderIcEENSt9time_base9dateorderESt17integral_constantIbLb1EEPKNSt6locale5facetE>:
 80143be:	4608      	mov	r0, r1
 80143c0:	f7fd b9e4 	b.w	801178c <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10date_orderEv>

080143c4 <_ZNSt13__facet_shims20__time_get_dateorderIwEENSt9time_base9dateorderESt17integral_constantIbLb1EEPKNSt6locale5facetE>:
 80143c4:	4608      	mov	r0, r1
 80143c6:	f001 b91a 	b.w	80155fe <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10date_orderEv>

080143ca <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>:
 80143ca:	b082      	sub	sp, #8
 80143cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80143ce:	b087      	sub	sp, #28
 80143d0:	4605      	mov	r5, r0
 80143d2:	f89d 7050 	ldrb.w	r7, [sp, #80]	; 0x50
 80143d6:	930d      	str	r3, [sp, #52]	; 0x34
 80143d8:	2f74      	cmp	r7, #116	; 0x74
 80143da:	4616      	mov	r6, r2
 80143dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80143de:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
 80143e2:	ac0f      	add	r4, sp, #60	; 0x3c
 80143e4:	ab0d      	add	r3, sp, #52	; 0x34
 80143e6:	d01e      	beq.n	8014426 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x5c>
 80143e8:	d80e      	bhi.n	8014408 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x3e>
 80143ea:	2f64      	cmp	r7, #100	; 0x64
 80143ec:	d02d      	beq.n	801444a <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x80>
 80143ee:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80143f2:	9202      	str	r2, [sp, #8]
 80143f4:	e894 0003 	ldmia.w	r4, {r0, r1}
 80143f8:	e88d 0003 	stmia.w	sp, {r0, r1}
 80143fc:	4631      	mov	r1, r6
 80143fe:	cb0c      	ldmia	r3, {r2, r3}
 8014400:	4628      	mov	r0, r5
 8014402:	f7fd fa1a 	bl	801183a <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE13get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>
 8014406:	e01a      	b.n	801443e <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
 8014408:	2f77      	cmp	r7, #119	; 0x77
 801440a:	d02b      	beq.n	8014464 <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x9a>
 801440c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8014410:	9202      	str	r2, [sp, #8]
 8014412:	e894 0003 	ldmia.w	r4, {r0, r1}
 8014416:	e88d 0003 	stmia.w	sp, {r0, r1}
 801441a:	4631      	mov	r1, r6
 801441c:	cb0c      	ldmia	r3, {r2, r3}
 801441e:	4628      	mov	r0, r5
 8014420:	f7fd fa27 	bl	8011872 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8get_yearES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>
 8014424:	e00b      	b.n	801443e <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
 8014426:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801442a:	9202      	str	r2, [sp, #8]
 801442c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8014430:	e88d 0003 	stmia.w	sp, {r0, r1}
 8014434:	4631      	mov	r1, r6
 8014436:	cb0c      	ldmia	r3, {r2, r3}
 8014438:	4628      	mov	r0, r5
 801443a:	f7fd f9aa 	bl	8011792 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8get_timeES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>
 801443e:	4628      	mov	r0, r5
 8014440:	b007      	add	sp, #28
 8014442:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014446:	b002      	add	sp, #8
 8014448:	4770      	bx	lr
 801444a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801444e:	9202      	str	r2, [sp, #8]
 8014450:	e894 0003 	ldmia.w	r4, {r0, r1}
 8014454:	e88d 0003 	stmia.w	sp, {r0, r1}
 8014458:	4631      	mov	r1, r6
 801445a:	cb0c      	ldmia	r3, {r2, r3}
 801445c:	4628      	mov	r0, r5
 801445e:	f7fd f9b4 	bl	80117ca <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8get_dateES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>
 8014462:	e7ec      	b.n	801443e <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
 8014464:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8014468:	9202      	str	r2, [sp, #8]
 801446a:	e894 0003 	ldmia.w	r4, {r0, r1}
 801446e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8014472:	4631      	mov	r1, r6
 8014474:	cb0c      	ldmia	r3, {r2, r3}
 8014476:	4628      	mov	r0, r5
 8014478:	f7fd f9c3 	bl	8011802 <_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11get_weekdayES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>
 801447c:	e7df      	b.n	801443e <_ZNSt13__facet_shims10__time_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>

0801447e <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc>:
 801447e:	b082      	sub	sp, #8
 8014480:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014482:	b087      	sub	sp, #28
 8014484:	4605      	mov	r5, r0
 8014486:	f89d 7050 	ldrb.w	r7, [sp, #80]	; 0x50
 801448a:	930d      	str	r3, [sp, #52]	; 0x34
 801448c:	2f74      	cmp	r7, #116	; 0x74
 801448e:	4616      	mov	r6, r2
 8014490:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014492:	e9dd 2111 	ldrd	r2, r1, [sp, #68]	; 0x44
 8014496:	ac0f      	add	r4, sp, #60	; 0x3c
 8014498:	ab0d      	add	r3, sp, #52	; 0x34
 801449a:	d01e      	beq.n	80144da <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x5c>
 801449c:	d80e      	bhi.n	80144bc <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x3e>
 801449e:	2f64      	cmp	r7, #100	; 0x64
 80144a0:	d02d      	beq.n	80144fe <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x80>
 80144a2:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80144a6:	9202      	str	r2, [sp, #8]
 80144a8:	e894 0003 	ldmia.w	r4, {r0, r1}
 80144ac:	e88d 0003 	stmia.w	sp, {r0, r1}
 80144b0:	4631      	mov	r1, r6
 80144b2:	cb0c      	ldmia	r3, {r2, r3}
 80144b4:	4628      	mov	r0, r5
 80144b6:	f001 f8f9 	bl	80156ac <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE13get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>
 80144ba:	e01a      	b.n	80144f2 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
 80144bc:	2f77      	cmp	r7, #119	; 0x77
 80144be:	d02b      	beq.n	8014518 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x9a>
 80144c0:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80144c4:	9202      	str	r2, [sp, #8]
 80144c6:	e894 0003 	ldmia.w	r4, {r0, r1}
 80144ca:	e88d 0003 	stmia.w	sp, {r0, r1}
 80144ce:	4631      	mov	r1, r6
 80144d0:	cb0c      	ldmia	r3, {r2, r3}
 80144d2:	4628      	mov	r0, r5
 80144d4:	f001 f906 	bl	80156e4 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE8get_yearES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>
 80144d8:	e00b      	b.n	80144f2 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
 80144da:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80144de:	9202      	str	r2, [sp, #8]
 80144e0:	e894 0003 	ldmia.w	r4, {r0, r1}
 80144e4:	e88d 0003 	stmia.w	sp, {r0, r1}
 80144e8:	4631      	mov	r1, r6
 80144ea:	cb0c      	ldmia	r3, {r2, r3}
 80144ec:	4628      	mov	r0, r5
 80144ee:	f001 f889 	bl	8015604 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE8get_timeES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>
 80144f2:	4628      	mov	r0, r5
 80144f4:	b007      	add	sp, #28
 80144f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80144fa:	b002      	add	sp, #8
 80144fc:	4770      	bx	lr
 80144fe:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8014502:	9202      	str	r2, [sp, #8]
 8014504:	e894 0003 	ldmia.w	r4, {r0, r1}
 8014508:	e88d 0003 	stmia.w	sp, {r0, r1}
 801450c:	4631      	mov	r1, r6
 801450e:	cb0c      	ldmia	r3, {r2, r3}
 8014510:	4628      	mov	r0, r5
 8014512:	f001 f893 	bl	801563c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE8get_dateES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>
 8014516:	e7ec      	b.n	80144f2 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
 8014518:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801451c:	9202      	str	r2, [sp, #8]
 801451e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8014522:	e88d 0003 	stmia.w	sp, {r0, r1}
 8014526:	4631      	mov	r1, r6
 8014528:	cb0c      	ldmia	r3, {r2, r3}
 801452a:	4628      	mov	r0, r5
 801452c:	f001 f8a2 	bl	8015674 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11get_weekdayES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>
 8014530:	e7df      	b.n	80144f2 <_ZNSt13__facet_shims10__time_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_RSt8ios_baseRSt12_Ios_IostateP2tmc+0x74>
	...

08014534 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE>:
 8014534:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014536:	4aaf      	ldr	r2, [pc, #700]	; (80147f4 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2c0>)
 8014538:	460c      	mov	r4, r1
 801453a:	f06f 0301 	mvn.w	r3, #1
 801453e:	49ae      	ldr	r1, [pc, #696]	; (80147f8 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2c4>)
 8014540:	4605      	mov	r5, r0
 8014542:	f00f fcc7 	bl	8023ed4 <__dynamic_cast>
 8014546:	4606      	mov	r6, r0
 8014548:	b110      	cbz	r0, 8014550 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x1c>
 801454a:	6804      	ldr	r4, [r0, #0]
 801454c:	4620      	mov	r0, r4
 801454e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014550:	4baa      	ldr	r3, [pc, #680]	; (80147fc <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2c8>)
 8014552:	429c      	cmp	r4, r3
 8014554:	d129      	bne.n	80145aa <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x76>
 8014556:	2068      	movs	r0, #104	; 0x68
 8014558:	f7f7 fcf2 	bl	800bf40 <_Znwj>
 801455c:	4ba8      	ldr	r3, [pc, #672]	; (8014800 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2cc>)
 801455e:	6046      	str	r6, [r0, #4]
 8014560:	4607      	mov	r7, r0
 8014562:	e9c0 6602 	strd	r6, r6, [r0, #8]
 8014566:	e9c0 6605 	strd	r6, r6, [r0, #20]
 801456a:	e9c0 6607 	strd	r6, r6, [r0, #28]
 801456e:	6003      	str	r3, [r0, #0]
 8014570:	7406      	strb	r6, [r0, #16]
 8014572:	8486      	strh	r6, [r0, #36]	; 0x24
 8014574:	f880 6064 	strb.w	r6, [r0, #100]	; 0x64
 8014578:	2014      	movs	r0, #20
 801457a:	f7f7 fce1 	bl	800bf40 <_Znwj>
 801457e:	4ba1      	ldr	r3, [pc, #644]	; (8014804 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2d0>)
 8014580:	6046      	str	r6, [r0, #4]
 8014582:	6003      	str	r3, [r0, #0]
 8014584:	6087      	str	r7, [r0, #8]
 8014586:	4631      	mov	r1, r6
 8014588:	4604      	mov	r4, r0
 801458a:	f7f8 ffb1 	bl	800d4f0 <_ZNSt7__cxx118numpunctIcE22_M_initialize_numpunctEPi>
 801458e:	686b      	ldr	r3, [r5, #4]
 8014590:	60e5      	str	r5, [r4, #12]
 8014592:	3301      	adds	r3, #1
 8014594:	606b      	str	r3, [r5, #4]
 8014596:	4b9c      	ldr	r3, [pc, #624]	; (8014808 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2d4>)
 8014598:	6023      	str	r3, [r4, #0]
 801459a:	6127      	str	r7, [r4, #16]
 801459c:	463a      	mov	r2, r7
 801459e:	4629      	mov	r1, r5
 80145a0:	f04f 0000 	mov.w	r0, #0
 80145a4:	f7fa fc04 	bl	800edb0 <_ZNSt13__facet_shims21__numpunct_fill_cacheIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt16__numpunct_cacheIT_E>
 80145a8:	e7d0      	b.n	801454c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x18>
 80145aa:	4b98      	ldr	r3, [pc, #608]	; (801480c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2d8>)
 80145ac:	429c      	cmp	r4, r3
 80145ae:	d110      	bne.n	80145d2 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x9e>
 80145b0:	2010      	movs	r0, #16
 80145b2:	f7f7 fcc5 	bl	800bf40 <_Znwj>
 80145b6:	4b96      	ldr	r3, [pc, #600]	; (8014810 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2dc>)
 80145b8:	6003      	str	r3, [r0, #0]
 80145ba:	6046      	str	r6, [r0, #4]
 80145bc:	4604      	mov	r4, r0
 80145be:	f7f7 fe8d 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 80145c2:	686b      	ldr	r3, [r5, #4]
 80145c4:	e9c4 0502 	strd	r0, r5, [r4, #8]
 80145c8:	3301      	adds	r3, #1
 80145ca:	606b      	str	r3, [r5, #4]
 80145cc:	4b91      	ldr	r3, [pc, #580]	; (8014814 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2e0>)
 80145ce:	6023      	str	r3, [r4, #0]
 80145d0:	e7bc      	b.n	801454c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x18>
 80145d2:	4b91      	ldr	r3, [pc, #580]	; (8014818 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2e4>)
 80145d4:	429c      	cmp	r4, r3
 80145d6:	d10a      	bne.n	80145ee <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0xba>
 80145d8:	200c      	movs	r0, #12
 80145da:	f7f7 fcb1 	bl	800bf40 <_Znwj>
 80145de:	686b      	ldr	r3, [r5, #4]
 80145e0:	3301      	adds	r3, #1
 80145e2:	606b      	str	r3, [r5, #4]
 80145e4:	e9c0 6501 	strd	r6, r5, [r0, #4]
 80145e8:	4b8c      	ldr	r3, [pc, #560]	; (801481c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2e8>)
 80145ea:	4604      	mov	r4, r0
 80145ec:	e7ef      	b.n	80145ce <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x9a>
 80145ee:	4b8c      	ldr	r3, [pc, #560]	; (8014820 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2ec>)
 80145f0:	429c      	cmp	r4, r3
 80145f2:	d10a      	bne.n	801460a <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0xd6>
 80145f4:	200c      	movs	r0, #12
 80145f6:	f7f7 fca3 	bl	800bf40 <_Znwj>
 80145fa:	686b      	ldr	r3, [r5, #4]
 80145fc:	3301      	adds	r3, #1
 80145fe:	606b      	str	r3, [r5, #4]
 8014600:	e9c0 6501 	strd	r6, r5, [r0, #4]
 8014604:	4b87      	ldr	r3, [pc, #540]	; (8014824 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2f0>)
 8014606:	4604      	mov	r4, r0
 8014608:	e7e1      	b.n	80145ce <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x9a>
 801460a:	4b87      	ldr	r3, [pc, #540]	; (8014828 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2f4>)
 801460c:	429c      	cmp	r4, r3
 801460e:	d10a      	bne.n	8014626 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0xf2>
 8014610:	200c      	movs	r0, #12
 8014612:	f7f7 fc95 	bl	800bf40 <_Znwj>
 8014616:	686b      	ldr	r3, [r5, #4]
 8014618:	3301      	adds	r3, #1
 801461a:	606b      	str	r3, [r5, #4]
 801461c:	e9c0 6501 	strd	r6, r5, [r0, #4]
 8014620:	4b82      	ldr	r3, [pc, #520]	; (801482c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2f8>)
 8014622:	4604      	mov	r4, r0
 8014624:	e7d3      	b.n	80145ce <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x9a>
 8014626:	4b82      	ldr	r3, [pc, #520]	; (8014830 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2fc>)
 8014628:	429c      	cmp	r4, r3
 801462a:	d12f      	bne.n	801468c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x158>
 801462c:	2044      	movs	r0, #68	; 0x44
 801462e:	f7f7 fc87 	bl	800bf40 <_Znwj>
 8014632:	4b80      	ldr	r3, [pc, #512]	; (8014834 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x300>)
 8014634:	8206      	strh	r6, [r0, #16]
 8014636:	4607      	mov	r7, r0
 8014638:	e9c0 3600 	strd	r3, r6, [r0]
 801463c:	e9c0 6602 	strd	r6, r6, [r0, #8]
 8014640:	e9c0 6605 	strd	r6, r6, [r0, #20]
 8014644:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8014648:	e9c0 6609 	strd	r6, r6, [r0, #36]	; 0x24
 801464c:	e9c0 660b 	strd	r6, r6, [r0, #44]	; 0x2c
 8014650:	7486      	strb	r6, [r0, #18]
 8014652:	6346      	str	r6, [r0, #52]	; 0x34
 8014654:	f880 6043 	strb.w	r6, [r0, #67]	; 0x43
 8014658:	2014      	movs	r0, #20
 801465a:	f7f7 fc71 	bl	800bf40 <_Znwj>
 801465e:	4b76      	ldr	r3, [pc, #472]	; (8014838 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x304>)
 8014660:	6046      	str	r6, [r0, #4]
 8014662:	6003      	str	r3, [r0, #0]
 8014664:	6087      	str	r7, [r0, #8]
 8014666:	4632      	mov	r2, r6
 8014668:	4631      	mov	r1, r6
 801466a:	4604      	mov	r4, r0
 801466c:	f7f8 fba0 	bl	800cdb0 <_ZNSt7__cxx1110moneypunctIcLb1EE24_M_initialize_moneypunctEPiPKc>
 8014670:	686b      	ldr	r3, [r5, #4]
 8014672:	60e5      	str	r5, [r4, #12]
 8014674:	3301      	adds	r3, #1
 8014676:	606b      	str	r3, [r5, #4]
 8014678:	4b70      	ldr	r3, [pc, #448]	; (801483c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x308>)
 801467a:	6023      	str	r3, [r4, #0]
 801467c:	6127      	str	r7, [r4, #16]
 801467e:	463a      	mov	r2, r7
 8014680:	4629      	mov	r1, r5
 8014682:	f04f 0000 	mov.w	r0, #0
 8014686:	f7fa fc21 	bl	800eecc <_ZNSt13__facet_shims23__moneypunct_fill_cacheIcLb1EEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>
 801468a:	e75f      	b.n	801454c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x18>
 801468c:	4b6c      	ldr	r3, [pc, #432]	; (8014840 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x30c>)
 801468e:	429c      	cmp	r4, r3
 8014690:	d12f      	bne.n	80146f2 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x1be>
 8014692:	2044      	movs	r0, #68	; 0x44
 8014694:	f7f7 fc54 	bl	800bf40 <_Znwj>
 8014698:	4b6a      	ldr	r3, [pc, #424]	; (8014844 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x310>)
 801469a:	8206      	strh	r6, [r0, #16]
 801469c:	4607      	mov	r7, r0
 801469e:	e9c0 3600 	strd	r3, r6, [r0]
 80146a2:	e9c0 6602 	strd	r6, r6, [r0, #8]
 80146a6:	e9c0 6605 	strd	r6, r6, [r0, #20]
 80146aa:	e9c0 6607 	strd	r6, r6, [r0, #28]
 80146ae:	e9c0 6609 	strd	r6, r6, [r0, #36]	; 0x24
 80146b2:	e9c0 660b 	strd	r6, r6, [r0, #44]	; 0x2c
 80146b6:	7486      	strb	r6, [r0, #18]
 80146b8:	6346      	str	r6, [r0, #52]	; 0x34
 80146ba:	f880 6043 	strb.w	r6, [r0, #67]	; 0x43
 80146be:	2014      	movs	r0, #20
 80146c0:	f7f7 fc3e 	bl	800bf40 <_Znwj>
 80146c4:	4b60      	ldr	r3, [pc, #384]	; (8014848 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x314>)
 80146c6:	6046      	str	r6, [r0, #4]
 80146c8:	6003      	str	r3, [r0, #0]
 80146ca:	6087      	str	r7, [r0, #8]
 80146cc:	4632      	mov	r2, r6
 80146ce:	4631      	mov	r1, r6
 80146d0:	4604      	mov	r4, r0
 80146d2:	f7f8 fbb1 	bl	800ce38 <_ZNSt7__cxx1110moneypunctIcLb0EE24_M_initialize_moneypunctEPiPKc>
 80146d6:	686b      	ldr	r3, [r5, #4]
 80146d8:	60e5      	str	r5, [r4, #12]
 80146da:	3301      	adds	r3, #1
 80146dc:	606b      	str	r3, [r5, #4]
 80146de:	4b5b      	ldr	r3, [pc, #364]	; (801484c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x318>)
 80146e0:	6023      	str	r3, [r4, #0]
 80146e2:	6127      	str	r7, [r4, #16]
 80146e4:	463a      	mov	r2, r7
 80146e6:	4629      	mov	r1, r5
 80146e8:	f04f 0000 	mov.w	r0, #0
 80146ec:	f7fa fc43 	bl	800ef76 <_ZNSt13__facet_shims23__moneypunct_fill_cacheIcLb0EEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>
 80146f0:	e72c      	b.n	801454c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x18>
 80146f2:	4b57      	ldr	r3, [pc, #348]	; (8014850 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x31c>)
 80146f4:	429c      	cmp	r4, r3
 80146f6:	d10c      	bne.n	8014712 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x1de>
 80146f8:	2014      	movs	r0, #20
 80146fa:	f7f7 fc21 	bl	800bf40 <_Znwj>
 80146fe:	4631      	mov	r1, r6
 8014700:	4604      	mov	r4, r0
 8014702:	f7fd f8d3 	bl	80118ac <_ZNSt7__cxx118messagesIcEC1Ej>
 8014706:	686b      	ldr	r3, [r5, #4]
 8014708:	6125      	str	r5, [r4, #16]
 801470a:	3301      	adds	r3, #1
 801470c:	606b      	str	r3, [r5, #4]
 801470e:	4b51      	ldr	r3, [pc, #324]	; (8014854 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x320>)
 8014710:	e75d      	b.n	80145ce <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x9a>
 8014712:	4b51      	ldr	r3, [pc, #324]	; (8014858 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x324>)
 8014714:	429c      	cmp	r4, r3
 8014716:	d12c      	bne.n	8014772 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x23e>
 8014718:	f44f 7094 	mov.w	r0, #296	; 0x128
 801471c:	f7f7 fc10 	bl	800bf40 <_Znwj>
 8014720:	2700      	movs	r7, #0
 8014722:	4b4e      	ldr	r3, [pc, #312]	; (801485c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x328>)
 8014724:	6047      	str	r7, [r0, #4]
 8014726:	4606      	mov	r6, r0
 8014728:	e9c0 7702 	strd	r7, r7, [r0, #8]
 801472c:	e9c0 7705 	strd	r7, r7, [r0, #20]
 8014730:	e9c0 7707 	strd	r7, r7, [r0, #28]
 8014734:	e9c0 7709 	strd	r7, r7, [r0, #36]	; 0x24
 8014738:	6003      	str	r3, [r0, #0]
 801473a:	7407      	strb	r7, [r0, #16]
 801473c:	f880 7124 	strb.w	r7, [r0, #292]	; 0x124
 8014740:	2014      	movs	r0, #20
 8014742:	f7f7 fbfd 	bl	800bf40 <_Znwj>
 8014746:	4b46      	ldr	r3, [pc, #280]	; (8014860 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x32c>)
 8014748:	6047      	str	r7, [r0, #4]
 801474a:	6003      	str	r3, [r0, #0]
 801474c:	6086      	str	r6, [r0, #8]
 801474e:	4639      	mov	r1, r7
 8014750:	4604      	mov	r4, r0
 8014752:	f7f8 ff35 	bl	800d5c0 <_ZNSt7__cxx118numpunctIwE22_M_initialize_numpunctEPi>
 8014756:	686b      	ldr	r3, [r5, #4]
 8014758:	60e5      	str	r5, [r4, #12]
 801475a:	3301      	adds	r3, #1
 801475c:	606b      	str	r3, [r5, #4]
 801475e:	4b41      	ldr	r3, [pc, #260]	; (8014864 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x330>)
 8014760:	6023      	str	r3, [r4, #0]
 8014762:	6126      	str	r6, [r4, #16]
 8014764:	4632      	mov	r2, r6
 8014766:	4629      	mov	r1, r5
 8014768:	f04f 0000 	mov.w	r0, #0
 801476c:	f7fa fb5d 	bl	800ee2a <_ZNSt13__facet_shims21__numpunct_fill_cacheIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt16__numpunct_cacheIT_E>
 8014770:	e6ec      	b.n	801454c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x18>
 8014772:	4b3d      	ldr	r3, [pc, #244]	; (8014868 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x334>)
 8014774:	429c      	cmp	r4, r3
 8014776:	d110      	bne.n	801479a <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x266>
 8014778:	2010      	movs	r0, #16
 801477a:	f7f7 fbe1 	bl	800bf40 <_Znwj>
 801477e:	2300      	movs	r3, #0
 8014780:	6043      	str	r3, [r0, #4]
 8014782:	4b3a      	ldr	r3, [pc, #232]	; (801486c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x338>)
 8014784:	6003      	str	r3, [r0, #0]
 8014786:	4604      	mov	r4, r0
 8014788:	f7f7 fda8 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 801478c:	686b      	ldr	r3, [r5, #4]
 801478e:	3301      	adds	r3, #1
 8014790:	606b      	str	r3, [r5, #4]
 8014792:	e9c4 0502 	strd	r0, r5, [r4, #8]
 8014796:	4b36      	ldr	r3, [pc, #216]	; (8014870 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x33c>)
 8014798:	e719      	b.n	80145ce <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x9a>
 801479a:	4b36      	ldr	r3, [pc, #216]	; (8014874 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x340>)
 801479c:	429c      	cmp	r4, r3
 801479e:	d10b      	bne.n	80147b8 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x284>
 80147a0:	200c      	movs	r0, #12
 80147a2:	f7f7 fbcd 	bl	800bf40 <_Znwj>
 80147a6:	2300      	movs	r3, #0
 80147a8:	e9c0 3501 	strd	r3, r5, [r0, #4]
 80147ac:	686b      	ldr	r3, [r5, #4]
 80147ae:	3301      	adds	r3, #1
 80147b0:	606b      	str	r3, [r5, #4]
 80147b2:	4604      	mov	r4, r0
 80147b4:	4b30      	ldr	r3, [pc, #192]	; (8014878 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x344>)
 80147b6:	e70a      	b.n	80145ce <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x9a>
 80147b8:	4b30      	ldr	r3, [pc, #192]	; (801487c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x348>)
 80147ba:	429c      	cmp	r4, r3
 80147bc:	d10b      	bne.n	80147d6 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x2a2>
 80147be:	200c      	movs	r0, #12
 80147c0:	f7f7 fbbe 	bl	800bf40 <_Znwj>
 80147c4:	2300      	movs	r3, #0
 80147c6:	e9c0 3501 	strd	r3, r5, [r0, #4]
 80147ca:	686b      	ldr	r3, [r5, #4]
 80147cc:	3301      	adds	r3, #1
 80147ce:	606b      	str	r3, [r5, #4]
 80147d0:	4604      	mov	r4, r0
 80147d2:	4b2b      	ldr	r3, [pc, #172]	; (8014880 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x34c>)
 80147d4:	e6fb      	b.n	80145ce <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x9a>
 80147d6:	4b2b      	ldr	r3, [pc, #172]	; (8014884 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x350>)
 80147d8:	429c      	cmp	r4, r3
 80147da:	d157      	bne.n	801488c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x358>
 80147dc:	200c      	movs	r0, #12
 80147de:	f7f7 fbaf 	bl	800bf40 <_Znwj>
 80147e2:	2300      	movs	r3, #0
 80147e4:	e9c0 3501 	strd	r3, r5, [r0, #4]
 80147e8:	686b      	ldr	r3, [r5, #4]
 80147ea:	3301      	adds	r3, #1
 80147ec:	606b      	str	r3, [r5, #4]
 80147ee:	4604      	mov	r4, r0
 80147f0:	4b25      	ldr	r3, [pc, #148]	; (8014888 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x354>)
 80147f2:	e6ec      	b.n	80145ce <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x9a>
 80147f4:	0802ee30 	.word	0x0802ee30
 80147f8:	0802e934 	.word	0x0802e934
 80147fc:	20003c38 	.word	0x20003c38
 8014800:	0802ea58 	.word	0x0802ea58
 8014804:	0802f8ac 	.word	0x0802f8ac
 8014808:	08030198 	.word	0x08030198
 801480c:	20003c2c 	.word	0x20003c2c
 8014810:	0802f890 	.word	0x0802f890
 8014814:	08030128 	.word	0x08030128
 8014818:	20003c34 	.word	0x20003c34
 801481c:	080301e0 	.word	0x080301e0
 8014820:	20003c40 	.word	0x20003c40
 8014824:	08030238 	.word	0x08030238
 8014828:	20003c3c 	.word	0x20003c3c
 801482c:	08030268 	.word	0x08030268
 8014830:	20003c44 	.word	0x20003c44
 8014834:	0802e9e0 	.word	0x0802e9e0
 8014838:	0802f8d0 	.word	0x0802f8d0
 801483c:	080302cc 	.word	0x080302cc
 8014840:	20003c48 	.word	0x20003c48
 8014844:	0802e9f0 	.word	0x0802e9f0
 8014848:	0802f904 	.word	0x0802f904
 801484c:	08030298 	.word	0x08030298
 8014850:	20003c30 	.word	0x20003c30
 8014854:	08030160 	.word	0x08030160
 8014858:	20003c78 	.word	0x20003c78
 801485c:	0802ea68 	.word	0x0802ea68
 8014860:	08030384 	.word	0x08030384
 8014864:	080301bc 	.word	0x080301bc
 8014868:	20003c6c 	.word	0x20003c6c
 801486c:	08030368 	.word	0x08030368
 8014870:	08030144 	.word	0x08030144
 8014874:	20003c74 	.word	0x20003c74
 8014878:	0803020c 	.word	0x0803020c
 801487c:	20003c80 	.word	0x20003c80
 8014880:	08030250 	.word	0x08030250
 8014884:	20003c7c 	.word	0x20003c7c
 8014888:	08030280 	.word	0x08030280
 801488c:	4b3e      	ldr	r3, [pc, #248]	; (8014988 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x454>)
 801488e:	429c      	cmp	r4, r3
 8014890:	d131      	bne.n	80148f6 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x3c2>
 8014892:	2070      	movs	r0, #112	; 0x70
 8014894:	f7f7 fb54 	bl	800bf40 <_Znwj>
 8014898:	2700      	movs	r7, #0
 801489a:	4b3c      	ldr	r3, [pc, #240]	; (801498c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x458>)
 801489c:	6047      	str	r7, [r0, #4]
 801489e:	4606      	mov	r6, r0
 80148a0:	e9c0 7702 	strd	r7, r7, [r0, #8]
 80148a4:	e9c0 7705 	strd	r7, r7, [r0, #20]
 80148a8:	e9c0 7707 	strd	r7, r7, [r0, #28]
 80148ac:	e9c0 7709 	strd	r7, r7, [r0, #36]	; 0x24
 80148b0:	e9c0 770b 	strd	r7, r7, [r0, #44]	; 0x2c
 80148b4:	e9c0 770d 	strd	r7, r7, [r0, #52]	; 0x34
 80148b8:	6003      	str	r3, [r0, #0]
 80148ba:	7407      	strb	r7, [r0, #16]
 80148bc:	63c7      	str	r7, [r0, #60]	; 0x3c
 80148be:	f880 706c 	strb.w	r7, [r0, #108]	; 0x6c
 80148c2:	2014      	movs	r0, #20
 80148c4:	f7f7 fb3c 	bl	800bf40 <_Znwj>
 80148c8:	4b31      	ldr	r3, [pc, #196]	; (8014990 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x45c>)
 80148ca:	6047      	str	r7, [r0, #4]
 80148cc:	6003      	str	r3, [r0, #0]
 80148ce:	6086      	str	r6, [r0, #8]
 80148d0:	463a      	mov	r2, r7
 80148d2:	4639      	mov	r1, r7
 80148d4:	4604      	mov	r4, r0
 80148d6:	f7f8 fb27 	bl	800cf28 <_ZNSt7__cxx1110moneypunctIwLb1EE24_M_initialize_moneypunctEPiPKc>
 80148da:	686b      	ldr	r3, [r5, #4]
 80148dc:	60e5      	str	r5, [r4, #12]
 80148de:	3301      	adds	r3, #1
 80148e0:	606b      	str	r3, [r5, #4]
 80148e2:	4b2c      	ldr	r3, [pc, #176]	; (8014994 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x460>)
 80148e4:	6023      	str	r3, [r4, #0]
 80148e6:	6126      	str	r6, [r4, #16]
 80148e8:	4632      	mov	r2, r6
 80148ea:	4629      	mov	r1, r5
 80148ec:	f04f 0000 	mov.w	r0, #0
 80148f0:	f7fa fb96 	bl	800f020 <_ZNSt13__facet_shims23__moneypunct_fill_cacheIwLb1EEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>
 80148f4:	e62a      	b.n	801454c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x18>
 80148f6:	4b28      	ldr	r3, [pc, #160]	; (8014998 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x464>)
 80148f8:	429c      	cmp	r4, r3
 80148fa:	d131      	bne.n	8014960 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x42c>
 80148fc:	2070      	movs	r0, #112	; 0x70
 80148fe:	f7f7 fb1f 	bl	800bf40 <_Znwj>
 8014902:	2700      	movs	r7, #0
 8014904:	4b25      	ldr	r3, [pc, #148]	; (801499c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x468>)
 8014906:	6047      	str	r7, [r0, #4]
 8014908:	4606      	mov	r6, r0
 801490a:	e9c0 7702 	strd	r7, r7, [r0, #8]
 801490e:	e9c0 7705 	strd	r7, r7, [r0, #20]
 8014912:	e9c0 7707 	strd	r7, r7, [r0, #28]
 8014916:	e9c0 7709 	strd	r7, r7, [r0, #36]	; 0x24
 801491a:	e9c0 770b 	strd	r7, r7, [r0, #44]	; 0x2c
 801491e:	e9c0 770d 	strd	r7, r7, [r0, #52]	; 0x34
 8014922:	6003      	str	r3, [r0, #0]
 8014924:	7407      	strb	r7, [r0, #16]
 8014926:	63c7      	str	r7, [r0, #60]	; 0x3c
 8014928:	f880 706c 	strb.w	r7, [r0, #108]	; 0x6c
 801492c:	2014      	movs	r0, #20
 801492e:	f7f7 fb07 	bl	800bf40 <_Znwj>
 8014932:	4b1b      	ldr	r3, [pc, #108]	; (80149a0 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x46c>)
 8014934:	6047      	str	r7, [r0, #4]
 8014936:	6003      	str	r3, [r0, #0]
 8014938:	6086      	str	r6, [r0, #8]
 801493a:	463a      	mov	r2, r7
 801493c:	4639      	mov	r1, r7
 801493e:	4604      	mov	r4, r0
 8014940:	f7f8 fb3a 	bl	800cfb8 <_ZNSt7__cxx1110moneypunctIwLb0EE24_M_initialize_moneypunctEPiPKc>
 8014944:	686b      	ldr	r3, [r5, #4]
 8014946:	60e5      	str	r5, [r4, #12]
 8014948:	3301      	adds	r3, #1
 801494a:	606b      	str	r3, [r5, #4]
 801494c:	4b15      	ldr	r3, [pc, #84]	; (80149a4 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x470>)
 801494e:	6023      	str	r3, [r4, #0]
 8014950:	6126      	str	r6, [r4, #16]
 8014952:	4632      	mov	r2, r6
 8014954:	4629      	mov	r1, r5
 8014956:	f04f 0000 	mov.w	r0, #0
 801495a:	f7fa fbb6 	bl	800f0ca <_ZNSt13__facet_shims23__moneypunct_fill_cacheIwLb0EEEvSt17integral_constantIbLb0EEPKNSt6locale5facetEPSt18__moneypunct_cacheIT_XT0_EE>
 801495e:	e5f5      	b.n	801454c <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x18>
 8014960:	4b11      	ldr	r3, [pc, #68]	; (80149a8 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x474>)
 8014962:	429c      	cmp	r4, r3
 8014964:	d10c      	bne.n	8014980 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x44c>
 8014966:	2014      	movs	r0, #20
 8014968:	f7f7 faea 	bl	800bf40 <_Znwj>
 801496c:	2100      	movs	r1, #0
 801496e:	4604      	mov	r4, r0
 8014970:	f000 fed4 	bl	801571c <_ZNSt7__cxx118messagesIwEC1Ej>
 8014974:	686b      	ldr	r3, [r5, #4]
 8014976:	6125      	str	r5, [r4, #16]
 8014978:	3301      	adds	r3, #1
 801497a:	606b      	str	r3, [r5, #4]
 801497c:	4b0b      	ldr	r3, [pc, #44]	; (80149ac <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x478>)
 801497e:	e626      	b.n	80145ce <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x9a>
 8014980:	480b      	ldr	r0, [pc, #44]	; (80149b0 <_ZNKSt6locale5facet11_M_sso_shimEPKNS_2idE+0x47c>)
 8014982:	f002 ff53 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 8014986:	bf00      	nop
 8014988:	20003c84 	.word	0x20003c84
 801498c:	0802ea00 	.word	0x0802ea00
 8014990:	080303a8 	.word	0x080303a8
 8014994:	08030334 	.word	0x08030334
 8014998:	20003c88 	.word	0x20003c88
 801499c:	0802ea10 	.word	0x0802ea10
 80149a0:	080303dc 	.word	0x080303dc
 80149a4:	08030300 	.word	0x08030300
 80149a8:	20003c70 	.word	0x20003c70
 80149ac:	0803017c 	.word	0x0803017c
 80149b0:	0802edcc 	.word	0x0802edcc

080149b4 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IcEEv>:
 80149b4:	698b      	ldr	r3, [r1, #24]
 80149b6:	b510      	push	{r4, lr}
 80149b8:	4604      	mov	r4, r0
 80149ba:	b913      	cbnz	r3, 80149c2 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IcEEv+0xe>
 80149bc:	4806      	ldr	r0, [pc, #24]	; (80149d8 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IcEEv+0x24>)
 80149be:	f002 ff35 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 80149c2:	e9d1 3200 	ldrd	r3, r2, [r1]
 80149c6:	f100 0108 	add.w	r1, r0, #8
 80149ca:	6001      	str	r1, [r0, #0]
 80149cc:	441a      	add	r2, r3
 80149ce:	4619      	mov	r1, r3
 80149d0:	f7ff f916 	bl	8013c00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0>
 80149d4:	4620      	mov	r0, r4
 80149d6:	bd10      	pop	{r4, pc}
 80149d8:	0802edf9 	.word	0x0802edf9

080149dc <_ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE>:
 80149dc:	b082      	sub	sp, #8
 80149de:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80149e2:	b08a      	sub	sp, #40	; 0x28
 80149e4:	4604      	mov	r4, r0
 80149e6:	9918      	ldr	r1, [sp, #96]	; 0x60
 80149e8:	f89d 8054 	ldrb.w	r8, [sp, #84]	; 0x54
 80149ec:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 80149f0:	f89d a05c 	ldrb.w	sl, [sp, #92]	; 0x5c
 80149f4:	9313      	str	r3, [sp, #76]	; 0x4c
 80149f6:	4615      	mov	r5, r2
 80149f8:	ae13      	add	r6, sp, #76	; 0x4c
 80149fa:	b1b1      	cbz	r1, 8014a2a <_ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE+0x4e>
 80149fc:	af04      	add	r7, sp, #16
 80149fe:	4638      	mov	r0, r7
 8014a00:	f7ff ffd8 	bl	80149b4 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IcEEv>
 8014a04:	e9cd a702 	strd	sl, r7, [sp, #8]
 8014a08:	e9cd 8900 	strd	r8, r9, [sp]
 8014a0c:	4620      	mov	r0, r4
 8014a0e:	e896 000c 	ldmia.w	r6, {r2, r3}
 8014a12:	4629      	mov	r1, r5
 8014a14:	f7fc fe87 	bl	8011726 <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE3putES4_bRSt8ios_basecRKNS_12basic_stringIcS3_SaIcEEE>
 8014a18:	4638      	mov	r0, r7
 8014a1a:	f008 ff7f 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8014a1e:	4620      	mov	r0, r4
 8014a20:	b00a      	add	sp, #40	; 0x28
 8014a22:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014a26:	b002      	add	sp, #8
 8014a28:	4770      	bx	lr
 8014a2a:	e9cd 9a01 	strd	r9, sl, [sp, #4]
 8014a2e:	f8cd 8000 	str.w	r8, [sp]
 8014a32:	e896 000c 	ldmia.w	r6, {r2, r3}
 8014a36:	4629      	mov	r1, r5
 8014a38:	f7fc fe5f 	bl	80116fa <_ZNKSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE3putES4_bRSt8ios_basece>
 8014a3c:	e7ef      	b.n	8014a1e <_ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE+0x42>

08014a3e <_ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIcE12do_transformEPKcS4_>:
 8014a3e:	b510      	push	{r4, lr}
 8014a40:	b08a      	sub	sp, #40	; 0x28
 8014a42:	4604      	mov	r4, r0
 8014a44:	9300      	str	r3, [sp, #0]
 8014a46:	2000      	movs	r0, #0
 8014a48:	4613      	mov	r3, r2
 8014a4a:	68c9      	ldr	r1, [r1, #12]
 8014a4c:	9009      	str	r0, [sp, #36]	; 0x24
 8014a4e:	aa03      	add	r2, sp, #12
 8014a50:	f7fa ffb6 	bl	800f9c0 <_ZNSt13__facet_shims19__collate_transformIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEPKT_SB_>
 8014a54:	a903      	add	r1, sp, #12
 8014a56:	4620      	mov	r0, r4
 8014a58:	f7ff ffac 	bl	80149b4 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IcEEv>
 8014a5c:	a803      	add	r0, sp, #12
 8014a5e:	f7fa f9a0 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 8014a62:	4620      	mov	r0, r4
 8014a64:	b00a      	add	sp, #40	; 0x28
 8014a66:	bd10      	pop	{r4, pc}

08014a68 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRNSt7__cxx1112basic_stringIcS5_SaIcEEE>:
 8014a68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014a6a:	b09b      	sub	sp, #108	; 0x6c
 8014a6c:	ac0a      	add	r4, sp, #40	; 0x28
 8014a6e:	e884 000c 	stmia.w	r4, {r2, r3}
 8014a72:	ae13      	add	r6, sp, #76	; 0x4c
 8014a74:	2300      	movs	r3, #0
 8014a76:	e9cd 3606 	strd	r3, r6, [sp, #24]
 8014a7a:	9319      	str	r3, [sp, #100]	; 0x64
 8014a7c:	930c      	str	r3, [sp, #48]	; 0x30
 8014a7e:	ab0c      	add	r3, sp, #48	; 0x30
 8014a80:	9305      	str	r3, [sp, #20]
 8014a82:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014a84:	9304      	str	r3, [sp, #16]
 8014a86:	f89d 3088 	ldrb.w	r3, [sp, #136]	; 0x88
 8014a8a:	9303      	str	r3, [sp, #12]
 8014a8c:	aa20      	add	r2, sp, #128	; 0x80
 8014a8e:	468c      	mov	ip, r1
 8014a90:	4605      	mov	r5, r0
 8014a92:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014a96:	ab01      	add	r3, sp, #4
 8014a98:	e883 0003 	stmia.w	r3, {r0, r1}
 8014a9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014a9e:	9300      	str	r3, [sp, #0]
 8014aa0:	af08      	add	r7, sp, #32
 8014aa2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014aa4:	f8dc 2008 	ldr.w	r2, [ip, #8]
 8014aa8:	f04f 0100 	mov.w	r1, #0
 8014aac:	4638      	mov	r0, r7
 8014aae:	f7fa ffb9 	bl	800fa24 <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE>
 8014ab2:	e897 0003 	ldmia.w	r7, {r0, r1}
 8014ab6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014ab8:	e884 0003 	stmia.w	r4, {r0, r1}
 8014abc:	b9a3      	cbnz	r3, 8014ae8 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRNSt7__cxx1112basic_stringIcS5_SaIcEEE+0x80>
 8014abe:	4631      	mov	r1, r6
 8014ac0:	a80d      	add	r0, sp, #52	; 0x34
 8014ac2:	f7ff ff77 	bl	80149b4 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IcEEv>
 8014ac6:	9825      	ldr	r0, [sp, #148]	; 0x94
 8014ac8:	a90d      	add	r1, sp, #52	; 0x34
 8014aca:	f008 fff3 	bl	801dab4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8014ace:	a80d      	add	r0, sp, #52	; 0x34
 8014ad0:	f008 ff24 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8014ad4:	e894 0003 	ldmia.w	r4, {r0, r1}
 8014ad8:	e885 0003 	stmia.w	r5, {r0, r1}
 8014adc:	4630      	mov	r0, r6
 8014ade:	f7fa f960 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 8014ae2:	4628      	mov	r0, r5
 8014ae4:	b01b      	add	sp, #108	; 0x6c
 8014ae6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014ae8:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8014aea:	6013      	str	r3, [r2, #0]
 8014aec:	e7f2      	b.n	8014ad4 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIcE6do_getESt19istreambuf_iteratorIcSt11char_traitsIcEES6_bRSt8ios_baseRSt12_Ios_IostateRNSt7__cxx1112basic_stringIcS5_SaIcEEE+0x6c>

08014aee <_ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIcE6do_getEiiiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 8014aee:	b530      	push	{r4, r5, lr}
 8014af0:	b08d      	sub	sp, #52	; 0x34
 8014af2:	4604      	mov	r4, r0
 8014af4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014af6:	2500      	movs	r5, #0
 8014af8:	950b      	str	r5, [sp, #44]	; 0x2c
 8014afa:	6845      	ldr	r5, [r0, #4]
 8014afc:	9503      	str	r5, [sp, #12]
 8014afe:	6800      	ldr	r0, [r0, #0]
 8014b00:	9002      	str	r0, [sp, #8]
 8014b02:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014b04:	e9cd 3000 	strd	r3, r0, [sp]
 8014b08:	4613      	mov	r3, r2
 8014b0a:	6909      	ldr	r1, [r1, #16]
 8014b0c:	aa05      	add	r2, sp, #20
 8014b0e:	f04f 0000 	mov.w	r0, #0
 8014b12:	f7fa ff65 	bl	800f9e0 <_ZNSt13__facet_shims14__messages_getIcEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_j>
 8014b16:	a905      	add	r1, sp, #20
 8014b18:	4620      	mov	r0, r4
 8014b1a:	f7ff ff4b 	bl	80149b4 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IcEEv>
 8014b1e:	a805      	add	r0, sp, #20
 8014b20:	f7fa f93f 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 8014b24:	4620      	mov	r0, r4
 8014b26:	b00d      	add	sp, #52	; 0x34
 8014b28:	bd30      	pop	{r4, r5, pc}
	...

08014b2c <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE>:
 8014b2c:	6983      	ldr	r3, [r0, #24]
 8014b2e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014b30:	4604      	mov	r4, r0
 8014b32:	460d      	mov	r5, r1
 8014b34:	b103      	cbz	r3, 8014b38 <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE+0xc>
 8014b36:	4798      	blx	r3
 8014b38:	f104 0308 	add.w	r3, r4, #8
 8014b3c:	6023      	str	r3, [r4, #0]
 8014b3e:	e9d5 6300 	ldrd	r6, r3, [r5]
 8014b42:	18f5      	adds	r5, r6, r3
 8014b44:	b91e      	cbnz	r6, 8014b4e <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE+0x22>
 8014b46:	b115      	cbz	r5, 8014b4e <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE+0x22>
 8014b48:	480e      	ldr	r0, [pc, #56]	; (8014b84 <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE+0x58>)
 8014b4a:	f002 fe6f 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 8014b4e:	2b0f      	cmp	r3, #15
 8014b50:	9301      	str	r3, [sp, #4]
 8014b52:	d907      	bls.n	8014b64 <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE+0x38>
 8014b54:	2200      	movs	r2, #0
 8014b56:	a901      	add	r1, sp, #4
 8014b58:	4620      	mov	r0, r4
 8014b5a:	f008 febd 	bl	801d8d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8014b5e:	9b01      	ldr	r3, [sp, #4]
 8014b60:	6020      	str	r0, [r4, #0]
 8014b62:	60a3      	str	r3, [r4, #8]
 8014b64:	6820      	ldr	r0, [r4, #0]
 8014b66:	462a      	mov	r2, r5
 8014b68:	4631      	mov	r1, r6
 8014b6a:	f008 ff48 	bl	801d9fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>
 8014b6e:	9b01      	ldr	r3, [sp, #4]
 8014b70:	6822      	ldr	r2, [r4, #0]
 8014b72:	6063      	str	r3, [r4, #4]
 8014b74:	2100      	movs	r1, #0
 8014b76:	54d1      	strb	r1, [r2, r3]
 8014b78:	4b03      	ldr	r3, [pc, #12]	; (8014b88 <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE+0x5c>)
 8014b7a:	61a3      	str	r3, [r4, #24]
 8014b7c:	4620      	mov	r0, r4
 8014b7e:	b002      	add	sp, #8
 8014b80:	bd70      	pop	{r4, r5, r6, pc}
 8014b82:	bf00      	nop
 8014b84:	0802f810 	.word	0x0802f810
 8014b88:	080136e1 	.word	0x080136e1

08014b8c <_ZNSt13__facet_shims19__collate_transformIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEPKT_SB_>:
 8014b8c:	b510      	push	{r4, lr}
 8014b8e:	b086      	sub	sp, #24
 8014b90:	4614      	mov	r4, r2
 8014b92:	4668      	mov	r0, sp
 8014b94:	461a      	mov	r2, r3
 8014b96:	9b08      	ldr	r3, [sp, #32]
 8014b98:	f7fc feb1 	bl	80118fe <_ZNKSt7__cxx117collateIcE9transformEPKcS3_>
 8014b9c:	4669      	mov	r1, sp
 8014b9e:	4620      	mov	r0, r4
 8014ba0:	f7ff ffc4 	bl	8014b2c <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE>
 8014ba4:	4668      	mov	r0, sp
 8014ba6:	f008 feb9 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8014baa:	b006      	add	sp, #24
 8014bac:	bd10      	pop	{r4, pc}

08014bae <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE>:
 8014bae:	b082      	sub	sp, #8
 8014bb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014bb4:	b08f      	sub	sp, #60	; 0x3c
 8014bb6:	4616      	mov	r6, r2
 8014bb8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8014bba:	9317      	str	r3, [sp, #92]	; 0x5c
 8014bbc:	4605      	mov	r5, r0
 8014bbe:	f89d 106c 	ldrb.w	r1, [sp, #108]	; 0x6c
 8014bc2:	e9dd 081c 	ldrd	r0, r8, [sp, #112]	; 0x70
 8014bc6:	ab19      	add	r3, sp, #100	; 0x64
 8014bc8:	ac17      	add	r4, sp, #92	; 0x5c
 8014bca:	b19a      	cbz	r2, 8014bf4 <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x46>
 8014bcc:	e9cd 8204 	strd	r8, r2, [sp, #16]
 8014bd0:	e9cd 1002 	strd	r1, r0, [sp, #8]
 8014bd4:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014bd8:	e88d 0003 	stmia.w	sp, {r0, r1}
 8014bdc:	4631      	mov	r1, r6
 8014bde:	e894 000c 	ldmia.w	r4, {r2, r3}
 8014be2:	4628      	mov	r0, r5
 8014be4:	f7fc fd4b 	bl	801167e <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRe>
 8014be8:	4628      	mov	r0, r5
 8014bea:	b00f      	add	sp, #60	; 0x3c
 8014bec:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014bf0:	b002      	add	sp, #8
 8014bf2:	4770      	bx	lr
 8014bf4:	af08      	add	r7, sp, #32
 8014bf6:	e9cd 8704 	strd	r8, r7, [sp, #16]
 8014bfa:	e9cd 1002 	strd	r1, r0, [sp, #8]
 8014bfe:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014c02:	e88d 0003 	stmia.w	sp, {r0, r1}
 8014c06:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8014c0a:	f10d 0918 	add.w	r9, sp, #24
 8014c0e:	e9cd c208 	strd	ip, r2, [sp, #32]
 8014c12:	f88d 2028 	strb.w	r2, [sp, #40]	; 0x28
 8014c16:	4631      	mov	r1, r6
 8014c18:	e894 000c 	ldmia.w	r4, {r2, r3}
 8014c1c:	4648      	mov	r0, r9
 8014c1e:	f7fc fd4d 	bl	80116bc <_ZNKSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS3_SaIcEEE>
 8014c22:	e899 0003 	ldmia.w	r9, {r0, r1}
 8014c26:	f8d8 3000 	ldr.w	r3, [r8]
 8014c2a:	e884 0003 	stmia.w	r4, {r0, r1}
 8014c2e:	b91b      	cbnz	r3, 8014c38 <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x8a>
 8014c30:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8014c32:	4639      	mov	r1, r7
 8014c34:	f7ff ff7a 	bl	8014b2c <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE>
 8014c38:	e894 0003 	ldmia.w	r4, {r0, r1}
 8014c3c:	e885 0003 	stmia.w	r5, {r0, r1}
 8014c40:	4638      	mov	r0, r7
 8014c42:	f008 fe6b 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8014c46:	e7cf      	b.n	8014be8 <_ZNSt13__facet_shims11__money_getIcEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x3a>

08014c48 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIcE6do_putESt19ostreambuf_iteratorIcSt11char_traitsIcEEbRSt8ios_basecRKNSt7__cxx1112basic_stringIcS5_SaIcEEE>:
 8014c48:	b570      	push	{r4, r5, r6, lr}
 8014c4a:	b090      	sub	sp, #64	; 0x40
 8014c4c:	ad09      	add	r5, sp, #36	; 0x24
 8014c4e:	460e      	mov	r6, r1
 8014c50:	a906      	add	r1, sp, #24
 8014c52:	e881 000c 	stmia.w	r1, {r2, r3}
 8014c56:	4604      	mov	r4, r0
 8014c58:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8014c5a:	2300      	movs	r3, #0
 8014c5c:	4628      	mov	r0, r5
 8014c5e:	930f      	str	r3, [sp, #60]	; 0x3c
 8014c60:	f7ff ff64 	bl	8014b2c <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE>
 8014c64:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8014c68:	9303      	str	r3, [sp, #12]
 8014c6a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014c6c:	9302      	str	r3, [sp, #8]
 8014c6e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8014c72:	9301      	str	r3, [sp, #4]
 8014c74:	9b07      	ldr	r3, [sp, #28]
 8014c76:	68b2      	ldr	r2, [r6, #8]
 8014c78:	9300      	str	r3, [sp, #0]
 8014c7a:	ed9f 0b07 	vldr	d0, [pc, #28]	; 8014c98 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIcE6do_putESt19ostreambuf_iteratorIcSt11char_traitsIcEEbRSt8ios_basecRKNSt7__cxx1112basic_stringIcS5_SaIcEEE+0x50>
 8014c7e:	9b06      	ldr	r3, [sp, #24]
 8014c80:	9504      	str	r5, [sp, #16]
 8014c82:	f04f 0100 	mov.w	r1, #0
 8014c86:	4620      	mov	r0, r4
 8014c88:	f7fa fde4 	bl	800f854 <_ZNSt13__facet_shims11__money_putIcEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE>
 8014c8c:	4628      	mov	r0, r5
 8014c8e:	f7fa f888 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 8014c92:	4620      	mov	r0, r4
 8014c94:	b010      	add	sp, #64	; 0x40
 8014c96:	bd70      	pop	{r4, r5, r6, pc}
	...

08014ca0 <_ZNSt13__facet_shims14__messages_getIcEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_j>:
 8014ca0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014ca2:	b08f      	sub	sp, #60	; 0x3c
 8014ca4:	460e      	mov	r6, r1
 8014ca6:	4615      	mov	r5, r2
 8014ca8:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014caa:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8014cac:	ac02      	add	r4, sp, #8
 8014cae:	461f      	mov	r7, r3
 8014cb0:	440a      	add	r2, r1
 8014cb2:	ab04      	add	r3, sp, #16
 8014cb4:	4620      	mov	r0, r4
 8014cb6:	9302      	str	r3, [sp, #8]
 8014cb8:	f7fe ffa2 	bl	8013c00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0>
 8014cbc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014cbe:	9300      	str	r3, [sp, #0]
 8014cc0:	463a      	mov	r2, r7
 8014cc2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014cc4:	9401      	str	r4, [sp, #4]
 8014cc6:	4631      	mov	r1, r6
 8014cc8:	a808      	add	r0, sp, #32
 8014cca:	f7fc fe02 	bl	80118d2 <_ZNKSt7__cxx118messagesIcE3getEiiiRKNS_12basic_stringIcSt11char_traitsIcESaIcEEE>
 8014cce:	a908      	add	r1, sp, #32
 8014cd0:	4628      	mov	r0, r5
 8014cd2:	f7ff ff2b 	bl	8014b2c <_ZNSt13__facet_shims12__any_stringaSIcEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE>
 8014cd6:	a808      	add	r0, sp, #32
 8014cd8:	f008 fe20 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8014cdc:	4620      	mov	r0, r4
 8014cde:	f008 fe1d 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8014ce2:	b00f      	add	sp, #60	; 0x3c
 8014ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08014ce8 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IwEEv>:
 8014ce8:	698b      	ldr	r3, [r1, #24]
 8014cea:	b510      	push	{r4, lr}
 8014cec:	4604      	mov	r4, r0
 8014cee:	b913      	cbnz	r3, 8014cf6 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IwEEv+0xe>
 8014cf0:	4807      	ldr	r0, [pc, #28]	; (8014d10 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IwEEv+0x28>)
 8014cf2:	f002 fd9b 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 8014cf6:	e9d1 3200 	ldrd	r3, r2, [r1]
 8014cfa:	f100 0108 	add.w	r1, r0, #8
 8014cfe:	6001      	str	r1, [r0, #0]
 8014d00:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8014d04:	4619      	mov	r1, r3
 8014d06:	f7fe ff57 	bl	8013bb8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag.isra.0>
 8014d0a:	4620      	mov	r0, r4
 8014d0c:	bd10      	pop	{r4, pc}
 8014d0e:	bf00      	nop
 8014d10:	0802edf9 	.word	0x0802edf9

08014d14 <_ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE>:
 8014d14:	b082      	sub	sp, #8
 8014d16:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014d1a:	b08a      	sub	sp, #40	; 0x28
 8014d1c:	e9dd 9a16 	ldrd	r9, sl, [sp, #88]	; 0x58
 8014d20:	9918      	ldr	r1, [sp, #96]	; 0x60
 8014d22:	f89d 8054 	ldrb.w	r8, [sp, #84]	; 0x54
 8014d26:	9313      	str	r3, [sp, #76]	; 0x4c
 8014d28:	4604      	mov	r4, r0
 8014d2a:	4615      	mov	r5, r2
 8014d2c:	ae13      	add	r6, sp, #76	; 0x4c
 8014d2e:	b1b1      	cbz	r1, 8014d5e <_ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE+0x4a>
 8014d30:	af04      	add	r7, sp, #16
 8014d32:	4638      	mov	r0, r7
 8014d34:	f7ff ffd8 	bl	8014ce8 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IwEEv>
 8014d38:	e9cd a702 	strd	sl, r7, [sp, #8]
 8014d3c:	e9cd 8900 	strd	r8, r9, [sp]
 8014d40:	4620      	mov	r0, r4
 8014d42:	e896 000c 	ldmia.w	r6, {r2, r3}
 8014d46:	4629      	mov	r1, r5
 8014d48:	f000 fc27 	bl	801559a <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE3putES4_bRSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE>
 8014d4c:	4638      	mov	r0, r7
 8014d4e:	f00e fd73 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8014d52:	4620      	mov	r0, r4
 8014d54:	b00a      	add	sp, #40	; 0x28
 8014d56:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014d5a:	b002      	add	sp, #8
 8014d5c:	4770      	bx	lr
 8014d5e:	e9cd 9a01 	strd	r9, sl, [sp, #4]
 8014d62:	f8cd 8000 	str.w	r8, [sp]
 8014d66:	e896 000c 	ldmia.w	r6, {r2, r3}
 8014d6a:	4629      	mov	r1, r5
 8014d6c:	f000 fc00 	bl	8015570 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE3putES4_bRSt8ios_basewe>
 8014d70:	e7ef      	b.n	8014d52 <_ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE+0x3e>

08014d72 <_ZNKSt13__facet_shims12_GLOBAL__N_112collate_shimIwE12do_transformEPKwS4_>:
 8014d72:	b510      	push	{r4, lr}
 8014d74:	b08a      	sub	sp, #40	; 0x28
 8014d76:	4604      	mov	r4, r0
 8014d78:	9300      	str	r3, [sp, #0]
 8014d7a:	2000      	movs	r0, #0
 8014d7c:	4613      	mov	r3, r2
 8014d7e:	68c9      	ldr	r1, [r1, #12]
 8014d80:	9009      	str	r0, [sp, #36]	; 0x24
 8014d82:	aa03      	add	r2, sp, #12
 8014d84:	f7fa ff94 	bl	800fcb0 <_ZNSt13__facet_shims19__collate_transformIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEPKT_SB_>
 8014d88:	a903      	add	r1, sp, #12
 8014d8a:	4620      	mov	r0, r4
 8014d8c:	f7ff ffac 	bl	8014ce8 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IwEEv>
 8014d90:	a803      	add	r0, sp, #12
 8014d92:	f7fa f806 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 8014d96:	4620      	mov	r0, r4
 8014d98:	b00a      	add	sp, #40	; 0x28
 8014d9a:	bd10      	pop	{r4, pc}

08014d9c <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRNSt7__cxx1112basic_stringIwS5_SaIwEEE>:
 8014d9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014d9e:	b09b      	sub	sp, #108	; 0x6c
 8014da0:	ac0a      	add	r4, sp, #40	; 0x28
 8014da2:	e884 000c 	stmia.w	r4, {r2, r3}
 8014da6:	ae13      	add	r6, sp, #76	; 0x4c
 8014da8:	2300      	movs	r3, #0
 8014daa:	e9cd 3606 	strd	r3, r6, [sp, #24]
 8014dae:	9319      	str	r3, [sp, #100]	; 0x64
 8014db0:	930c      	str	r3, [sp, #48]	; 0x30
 8014db2:	ab0c      	add	r3, sp, #48	; 0x30
 8014db4:	9305      	str	r3, [sp, #20]
 8014db6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014db8:	9304      	str	r3, [sp, #16]
 8014dba:	f89d 3088 	ldrb.w	r3, [sp, #136]	; 0x88
 8014dbe:	9303      	str	r3, [sp, #12]
 8014dc0:	aa20      	add	r2, sp, #128	; 0x80
 8014dc2:	468c      	mov	ip, r1
 8014dc4:	4605      	mov	r5, r0
 8014dc6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014dca:	ab01      	add	r3, sp, #4
 8014dcc:	e883 0003 	stmia.w	r3, {r0, r1}
 8014dd0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014dd2:	9300      	str	r3, [sp, #0]
 8014dd4:	af08      	add	r7, sp, #32
 8014dd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014dd8:	f8dc 2008 	ldr.w	r2, [ip, #8]
 8014ddc:	f04f 0100 	mov.w	r1, #0
 8014de0:	4638      	mov	r0, r7
 8014de2:	f7fa ff97 	bl	800fd14 <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE>
 8014de6:	e897 0003 	ldmia.w	r7, {r0, r1}
 8014dea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014dec:	e884 0003 	stmia.w	r4, {r0, r1}
 8014df0:	b9a3      	cbnz	r3, 8014e1c <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRNSt7__cxx1112basic_stringIwS5_SaIwEEE+0x80>
 8014df2:	4631      	mov	r1, r6
 8014df4:	a80d      	add	r0, sp, #52	; 0x34
 8014df6:	f7ff ff77 	bl	8014ce8 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IwEEv>
 8014dfa:	9825      	ldr	r0, [sp, #148]	; 0x94
 8014dfc:	a90d      	add	r1, sp, #52	; 0x34
 8014dfe:	f00e fdd5 	bl	80239ac <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEaSEOS4_>
 8014e02:	a80d      	add	r0, sp, #52	; 0x34
 8014e04:	f00e fd18 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8014e08:	e894 0003 	ldmia.w	r4, {r0, r1}
 8014e0c:	e885 0003 	stmia.w	r5, {r0, r1}
 8014e10:	4630      	mov	r0, r6
 8014e12:	f7f9 ffc6 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 8014e16:	4628      	mov	r0, r5
 8014e18:	b01b      	add	sp, #108	; 0x6c
 8014e1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014e1c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8014e1e:	6013      	str	r3, [r2, #0]
 8014e20:	e7f2      	b.n	8014e08 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_get_shimIwE6do_getESt19istreambuf_iteratorIwSt11char_traitsIwEES6_bRSt8ios_baseRSt12_Ios_IostateRNSt7__cxx1112basic_stringIwS5_SaIwEEE+0x6c>

08014e22 <_ZNKSt13__facet_shims12_GLOBAL__N_113messages_shimIwE6do_getEiiiRKNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEE>:
 8014e22:	b530      	push	{r4, r5, lr}
 8014e24:	b08d      	sub	sp, #52	; 0x34
 8014e26:	4604      	mov	r4, r0
 8014e28:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014e2a:	2500      	movs	r5, #0
 8014e2c:	950b      	str	r5, [sp, #44]	; 0x2c
 8014e2e:	6845      	ldr	r5, [r0, #4]
 8014e30:	9503      	str	r5, [sp, #12]
 8014e32:	6800      	ldr	r0, [r0, #0]
 8014e34:	9002      	str	r0, [sp, #8]
 8014e36:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014e38:	e9cd 3000 	strd	r3, r0, [sp]
 8014e3c:	4613      	mov	r3, r2
 8014e3e:	6909      	ldr	r1, [r1, #16]
 8014e40:	aa05      	add	r2, sp, #20
 8014e42:	f04f 0000 	mov.w	r0, #0
 8014e46:	f7fa ff43 	bl	800fcd0 <_ZNSt13__facet_shims14__messages_getIwEEvSt17integral_constantIbLb0EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_j>
 8014e4a:	a905      	add	r1, sp, #20
 8014e4c:	4620      	mov	r0, r4
 8014e4e:	f7ff ff4b 	bl	8014ce8 <_ZNKSt13__facet_shims12__any_stringcvNSt7__cxx1112basic_stringIT_St11char_traitsIS3_ESaIS3_EEEB5cxx11IwEEv>
 8014e52:	a805      	add	r0, sp, #20
 8014e54:	f7f9 ffa5 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 8014e58:	4620      	mov	r0, r4
 8014e5a:	b00d      	add	sp, #52	; 0x34
 8014e5c:	bd30      	pop	{r4, r5, pc}
	...

08014e60 <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE>:
 8014e60:	6983      	ldr	r3, [r0, #24]
 8014e62:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014e64:	4604      	mov	r4, r0
 8014e66:	460d      	mov	r5, r1
 8014e68:	b103      	cbz	r3, 8014e6c <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE+0xc>
 8014e6a:	4798      	blx	r3
 8014e6c:	f104 0308 	add.w	r3, r4, #8
 8014e70:	6023      	str	r3, [r4, #0]
 8014e72:	e9d5 6500 	ldrd	r6, r5, [r5]
 8014e76:	00ab      	lsls	r3, r5, #2
 8014e78:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 8014e7c:	b91e      	cbnz	r6, 8014e86 <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE+0x26>
 8014e7e:	b115      	cbz	r5, 8014e86 <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE+0x26>
 8014e80:	480e      	ldr	r0, [pc, #56]	; (8014ebc <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE+0x5c>)
 8014e82:	f002 fcd3 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 8014e86:	109a      	asrs	r2, r3, #2
 8014e88:	2b0c      	cmp	r3, #12
 8014e8a:	9201      	str	r2, [sp, #4]
 8014e8c:	d907      	bls.n	8014e9e <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE+0x3e>
 8014e8e:	2200      	movs	r2, #0
 8014e90:	a901      	add	r1, sp, #4
 8014e92:	4620      	mov	r0, r4
 8014e94:	f00e fcac 	bl	80237f0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj>
 8014e98:	9b01      	ldr	r3, [sp, #4]
 8014e9a:	6020      	str	r0, [r4, #0]
 8014e9c:	60a3      	str	r3, [r4, #8]
 8014e9e:	6820      	ldr	r0, [r4, #0]
 8014ea0:	462a      	mov	r2, r5
 8014ea2:	4631      	mov	r1, r6
 8014ea4:	f00e fd39 	bl	802391a <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwS5_S5_>
 8014ea8:	4620      	mov	r0, r4
 8014eaa:	9901      	ldr	r1, [sp, #4]
 8014eac:	f00e fc9a 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 8014eb0:	4b03      	ldr	r3, [pc, #12]	; (8014ec0 <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE+0x60>)
 8014eb2:	61a3      	str	r3, [r4, #24]
 8014eb4:	4620      	mov	r0, r4
 8014eb6:	b002      	add	sp, #8
 8014eb8:	bd70      	pop	{r4, r5, r6, pc}
 8014eba:	bf00      	nop
 8014ebc:	0802f810 	.word	0x0802f810
 8014ec0:	080136e5 	.word	0x080136e5

08014ec4 <_ZNSt13__facet_shims19__collate_transformIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEPKT_SB_>:
 8014ec4:	b510      	push	{r4, lr}
 8014ec6:	b086      	sub	sp, #24
 8014ec8:	4614      	mov	r4, r2
 8014eca:	4668      	mov	r0, sp
 8014ecc:	461a      	mov	r2, r3
 8014ece:	9b08      	ldr	r3, [sp, #32]
 8014ed0:	f000 fc4d 	bl	801576e <_ZNKSt7__cxx117collateIwE9transformEPKwS3_>
 8014ed4:	4669      	mov	r1, sp
 8014ed6:	4620      	mov	r0, r4
 8014ed8:	f7ff ffc2 	bl	8014e60 <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE>
 8014edc:	4668      	mov	r0, sp
 8014ede:	f00e fcab 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8014ee2:	b006      	add	sp, #24
 8014ee4:	bd10      	pop	{r4, pc}

08014ee6 <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE>:
 8014ee6:	b082      	sub	sp, #8
 8014ee8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014eec:	b08f      	sub	sp, #60	; 0x3c
 8014eee:	4616      	mov	r6, r2
 8014ef0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8014ef2:	9317      	str	r3, [sp, #92]	; 0x5c
 8014ef4:	4605      	mov	r5, r0
 8014ef6:	f89d 106c 	ldrb.w	r1, [sp, #108]	; 0x6c
 8014efa:	e9dd 081c 	ldrd	r0, r8, [sp, #112]	; 0x70
 8014efe:	ab19      	add	r3, sp, #100	; 0x64
 8014f00:	ac17      	add	r4, sp, #92	; 0x5c
 8014f02:	b19a      	cbz	r2, 8014f2c <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x46>
 8014f04:	e9cd 8204 	strd	r8, r2, [sp, #16]
 8014f08:	e9cd 1002 	strd	r1, r0, [sp, #8]
 8014f0c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014f10:	e88d 0003 	stmia.w	sp, {r0, r1}
 8014f14:	4631      	mov	r1, r6
 8014f16:	e894 000c 	ldmia.w	r4, {r2, r3}
 8014f1a:	4628      	mov	r0, r5
 8014f1c:	f000 faea 	bl	80154f4 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRe>
 8014f20:	4628      	mov	r0, r5
 8014f22:	b00f      	add	sp, #60	; 0x3c
 8014f24:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014f28:	b002      	add	sp, #8
 8014f2a:	4770      	bx	lr
 8014f2c:	af08      	add	r7, sp, #32
 8014f2e:	e9cd 8704 	strd	r8, r7, [sp, #16]
 8014f32:	e9cd 1002 	strd	r1, r0, [sp, #8]
 8014f36:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014f3a:	e88d 0003 	stmia.w	sp, {r0, r1}
 8014f3e:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8014f42:	f10d 0918 	add.w	r9, sp, #24
 8014f46:	e9cd c208 	strd	ip, r2, [sp, #32]
 8014f4a:	920a      	str	r2, [sp, #40]	; 0x28
 8014f4c:	4631      	mov	r1, r6
 8014f4e:	e894 000c 	ldmia.w	r4, {r2, r3}
 8014f52:	4648      	mov	r0, r9
 8014f54:	f000 faed 	bl	8015532 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIwS3_SaIwEEE>
 8014f58:	e899 0003 	ldmia.w	r9, {r0, r1}
 8014f5c:	f8d8 3000 	ldr.w	r3, [r8]
 8014f60:	e884 0003 	stmia.w	r4, {r0, r1}
 8014f64:	b91b      	cbnz	r3, 8014f6e <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x88>
 8014f66:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8014f68:	4639      	mov	r1, r7
 8014f6a:	f7ff ff79 	bl	8014e60 <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE>
 8014f6e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8014f72:	e885 0003 	stmia.w	r5, {r0, r1}
 8014f76:	4638      	mov	r0, r7
 8014f78:	f00e fc5e 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8014f7c:	e7d0      	b.n	8014f20 <_ZNSt13__facet_shims11__money_getIwEESt19istreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb1EEPKNSt6locale5facetES5_S5_bRSt8ios_baseRSt12_Ios_IostatePePNS_12__any_stringE+0x3a>
	...

08014f80 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIwE6do_putESt19ostreambuf_iteratorIwSt11char_traitsIwEEbRSt8ios_basewRKNSt7__cxx1112basic_stringIwS5_SaIwEEE>:
 8014f80:	b570      	push	{r4, r5, r6, lr}
 8014f82:	b090      	sub	sp, #64	; 0x40
 8014f84:	ad09      	add	r5, sp, #36	; 0x24
 8014f86:	460e      	mov	r6, r1
 8014f88:	a906      	add	r1, sp, #24
 8014f8a:	e881 000c 	stmia.w	r1, {r2, r3}
 8014f8e:	4604      	mov	r4, r0
 8014f90:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8014f92:	2300      	movs	r3, #0
 8014f94:	4628      	mov	r0, r5
 8014f96:	930f      	str	r3, [sp, #60]	; 0x3c
 8014f98:	f7ff ff62 	bl	8014e60 <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE>
 8014f9c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014f9e:	9303      	str	r3, [sp, #12]
 8014fa0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014fa2:	9302      	str	r3, [sp, #8]
 8014fa4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8014fa8:	9301      	str	r3, [sp, #4]
 8014faa:	9b07      	ldr	r3, [sp, #28]
 8014fac:	68b2      	ldr	r2, [r6, #8]
 8014fae:	9300      	str	r3, [sp, #0]
 8014fb0:	ed9f 0b07 	vldr	d0, [pc, #28]	; 8014fd0 <_ZNKSt13__facet_shims12_GLOBAL__N_114money_put_shimIwE6do_putESt19ostreambuf_iteratorIwSt11char_traitsIwEEbRSt8ios_basewRKNSt7__cxx1112basic_stringIwS5_SaIwEEE+0x50>
 8014fb4:	9b06      	ldr	r3, [sp, #24]
 8014fb6:	9504      	str	r5, [sp, #16]
 8014fb8:	f04f 0100 	mov.w	r1, #0
 8014fbc:	4620      	mov	r0, r4
 8014fbe:	f7fa fdc3 	bl	800fb48 <_ZNSt13__facet_shims11__money_putIwEESt19ostreambuf_iteratorIT_St11char_traitsIS2_EESt17integral_constantIbLb0EEPKNSt6locale5facetES5_bRSt8ios_baseS2_ePKNS_12__any_stringE>
 8014fc2:	4628      	mov	r0, r5
 8014fc4:	f7f9 feed 	bl	800eda2 <_ZNSt13__facet_shims12__any_stringD1Ev>
 8014fc8:	4620      	mov	r0, r4
 8014fca:	b010      	add	sp, #64	; 0x40
 8014fcc:	bd70      	pop	{r4, r5, r6, pc}
 8014fce:	bf00      	nop
	...

08014fd8 <_ZNSt13__facet_shims14__messages_getIwEEvSt17integral_constantIbLb1EEPKNSt6locale5facetERNS_12__any_stringEiiiPKT_j>:
 8014fd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014fda:	b08f      	sub	sp, #60	; 0x3c
 8014fdc:	460e      	mov	r6, r1
 8014fde:	4615      	mov	r5, r2
 8014fe0:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014fe2:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8014fe4:	ac02      	add	r4, sp, #8
 8014fe6:	461f      	mov	r7, r3
 8014fe8:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8014fec:	ab04      	add	r3, sp, #16
 8014fee:	4620      	mov	r0, r4
 8014ff0:	9302      	str	r3, [sp, #8]
 8014ff2:	f7fe fde1 	bl	8013bb8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag.isra.0>
 8014ff6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014ff8:	9300      	str	r3, [sp, #0]
 8014ffa:	463a      	mov	r2, r7
 8014ffc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014ffe:	9401      	str	r4, [sp, #4]
 8015000:	4631      	mov	r1, r6
 8015002:	a808      	add	r0, sp, #32
 8015004:	f000 fb9d 	bl	8015742 <_ZNKSt7__cxx118messagesIwE3getEiiiRKNS_12basic_stringIwSt11char_traitsIwESaIwEEE>
 8015008:	a908      	add	r1, sp, #32
 801500a:	4628      	mov	r0, r5
 801500c:	f7ff ff28 	bl	8014e60 <_ZNSt13__facet_shims12__any_stringaSIwEERS0_RKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEE>
 8015010:	a808      	add	r0, sp, #32
 8015012:	f00e fc11 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8015016:	4620      	mov	r0, r4
 8015018:	f00e fc0e 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 801501c:	b00f      	add	sp, #60	; 0x3c
 801501e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015020 <_ZNKSt7__cxx1110moneypunctIwLb0EE16do_decimal_pointEv>:
 8015020:	6883      	ldr	r3, [r0, #8]
 8015022:	6958      	ldr	r0, [r3, #20]
 8015024:	4770      	bx	lr

08015026 <_ZNKSt7__cxx1110moneypunctIwLb0EE16do_thousands_sepEv>:
 8015026:	6883      	ldr	r3, [r0, #8]
 8015028:	6998      	ldr	r0, [r3, #24]
 801502a:	4770      	bx	lr

0801502c <_ZNKSt7__cxx1110moneypunctIwLb0EE14do_frac_digitsEv>:
 801502c:	6883      	ldr	r3, [r0, #8]
 801502e:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8015030:	4770      	bx	lr

08015032 <_ZNKSt7__cxx1110moneypunctIwLb0EE13do_pos_formatEv>:
 8015032:	6883      	ldr	r3, [r0, #8]
 8015034:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015036:	2000      	movs	r0, #0
 8015038:	b2da      	uxtb	r2, r3
 801503a:	f362 0007 	bfi	r0, r2, #0, #8
 801503e:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8015042:	f362 200f 	bfi	r0, r2, #8, #8
 8015046:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801504a:	f362 4017 	bfi	r0, r2, #16, #8
 801504e:	0e1b      	lsrs	r3, r3, #24
 8015050:	b082      	sub	sp, #8
 8015052:	f363 601f 	bfi	r0, r3, #24, #8
 8015056:	b002      	add	sp, #8
 8015058:	4770      	bx	lr

0801505a <_ZNKSt7__cxx1110moneypunctIwLb0EE13do_neg_formatEv>:
 801505a:	6883      	ldr	r3, [r0, #8]
 801505c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801505e:	2000      	movs	r0, #0
 8015060:	b2da      	uxtb	r2, r3
 8015062:	f362 0007 	bfi	r0, r2, #0, #8
 8015066:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801506a:	f362 200f 	bfi	r0, r2, #8, #8
 801506e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8015072:	f362 4017 	bfi	r0, r2, #16, #8
 8015076:	0e1b      	lsrs	r3, r3, #24
 8015078:	b082      	sub	sp, #8
 801507a:	f363 601f 	bfi	r0, r3, #24, #8
 801507e:	b002      	add	sp, #8
 8015080:	4770      	bx	lr

08015082 <_ZNKSt7__cxx1110moneypunctIwLb1EE16do_decimal_pointEv>:
 8015082:	6883      	ldr	r3, [r0, #8]
 8015084:	6958      	ldr	r0, [r3, #20]
 8015086:	4770      	bx	lr

08015088 <_ZNKSt7__cxx1110moneypunctIwLb1EE16do_thousands_sepEv>:
 8015088:	6883      	ldr	r3, [r0, #8]
 801508a:	6998      	ldr	r0, [r3, #24]
 801508c:	4770      	bx	lr

0801508e <_ZNKSt7__cxx1110moneypunctIwLb1EE14do_frac_digitsEv>:
 801508e:	6883      	ldr	r3, [r0, #8]
 8015090:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8015092:	4770      	bx	lr

08015094 <_ZNKSt7__cxx1110moneypunctIwLb1EE13do_pos_formatEv>:
 8015094:	6883      	ldr	r3, [r0, #8]
 8015096:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015098:	2000      	movs	r0, #0
 801509a:	b2da      	uxtb	r2, r3
 801509c:	f362 0007 	bfi	r0, r2, #0, #8
 80150a0:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80150a4:	f362 200f 	bfi	r0, r2, #8, #8
 80150a8:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80150ac:	f362 4017 	bfi	r0, r2, #16, #8
 80150b0:	0e1b      	lsrs	r3, r3, #24
 80150b2:	b082      	sub	sp, #8
 80150b4:	f363 601f 	bfi	r0, r3, #24, #8
 80150b8:	b002      	add	sp, #8
 80150ba:	4770      	bx	lr

080150bc <_ZNKSt7__cxx1110moneypunctIwLb1EE13do_neg_formatEv>:
 80150bc:	6883      	ldr	r3, [r0, #8]
 80150be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80150c0:	2000      	movs	r0, #0
 80150c2:	b2da      	uxtb	r2, r3
 80150c4:	f362 0007 	bfi	r0, r2, #0, #8
 80150c8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80150cc:	f362 200f 	bfi	r0, r2, #8, #8
 80150d0:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80150d4:	f362 4017 	bfi	r0, r2, #16, #8
 80150d8:	0e1b      	lsrs	r3, r3, #24
 80150da:	b082      	sub	sp, #8
 80150dc:	f363 601f 	bfi	r0, r3, #24, #8
 80150e0:	b002      	add	sp, #8
 80150e2:	4770      	bx	lr

080150e4 <_ZNKSt7__cxx118numpunctIwE16do_decimal_pointEv>:
 80150e4:	6883      	ldr	r3, [r0, #8]
 80150e6:	6a58      	ldr	r0, [r3, #36]	; 0x24
 80150e8:	4770      	bx	lr

080150ea <_ZNKSt7__cxx118numpunctIwE16do_thousands_sepEv>:
 80150ea:	6883      	ldr	r3, [r0, #8]
 80150ec:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80150ee:	4770      	bx	lr

080150f0 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE13do_date_orderEv>:
 80150f0:	2000      	movs	r0, #0
 80150f2:	4770      	bx	lr

080150f4 <_ZNKSt7__cxx118messagesIwE7do_openERKNS_12basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale>:
 80150f4:	2000      	movs	r0, #0
 80150f6:	4770      	bx	lr

080150f8 <_ZNKSt7__cxx118messagesIwE8do_closeEi>:
 80150f8:	4770      	bx	lr

080150fa <_ZNKSt7__cxx117collateIwE7do_hashEPKwS3_>:
 80150fa:	2000      	movs	r0, #0
 80150fc:	4291      	cmp	r1, r2
 80150fe:	d204      	bcs.n	801510a <_ZNKSt7__cxx117collateIwE7do_hashEPKwS3_+0x10>
 8015100:	f851 3b04 	ldr.w	r3, [r1], #4
 8015104:	eb03 6070 	add.w	r0, r3, r0, ror #25
 8015108:	e7f8      	b.n	80150fc <_ZNKSt7__cxx117collateIwE7do_hashEPKwS3_+0x2>
 801510a:	4770      	bx	lr

0801510c <_ZNKSt7__cxx1110moneypunctIwLb0EE11do_groupingEv>:
 801510c:	b513      	push	{r0, r1, r4, lr}
 801510e:	688b      	ldr	r3, [r1, #8]
 8015110:	aa01      	add	r2, sp, #4
 8015112:	6899      	ldr	r1, [r3, #8]
 8015114:	4604      	mov	r4, r0
 8015116:	f008 ff53 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 801511a:	4620      	mov	r0, r4
 801511c:	b002      	add	sp, #8
 801511e:	bd10      	pop	{r4, pc}

08015120 <_ZNKSt7__cxx1110moneypunctIwLb1EE11do_groupingEv>:
 8015120:	b513      	push	{r0, r1, r4, lr}
 8015122:	688b      	ldr	r3, [r1, #8]
 8015124:	aa01      	add	r2, sp, #4
 8015126:	6899      	ldr	r1, [r3, #8]
 8015128:	4604      	mov	r4, r0
 801512a:	f008 ff49 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 801512e:	4620      	mov	r0, r4
 8015130:	b002      	add	sp, #8
 8015132:	bd10      	pop	{r4, pc}

08015134 <_ZNKSt7__cxx118numpunctIwE11do_groupingEv>:
 8015134:	b513      	push	{r0, r1, r4, lr}
 8015136:	688b      	ldr	r3, [r1, #8]
 8015138:	aa01      	add	r2, sp, #4
 801513a:	6899      	ldr	r1, [r3, #8]
 801513c:	4604      	mov	r4, r0
 801513e:	f008 ff3f 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8015142:	4620      	mov	r0, r4
 8015144:	b002      	add	sp, #8
 8015146:	bd10      	pop	{r4, pc}

08015148 <_ZNKSt7__cxx1110moneypunctIwLb0EE14do_curr_symbolEv>:
 8015148:	b513      	push	{r0, r1, r4, lr}
 801514a:	688b      	ldr	r3, [r1, #8]
 801514c:	aa01      	add	r2, sp, #4
 801514e:	69d9      	ldr	r1, [r3, #28]
 8015150:	4604      	mov	r4, r0
 8015152:	f00e fe31 	bl	8023db8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EPKwRKS3_>
 8015156:	4620      	mov	r0, r4
 8015158:	b002      	add	sp, #8
 801515a:	bd10      	pop	{r4, pc}

0801515c <_ZNKSt7__cxx1110moneypunctIwLb0EE16do_positive_signEv>:
 801515c:	b513      	push	{r0, r1, r4, lr}
 801515e:	688b      	ldr	r3, [r1, #8]
 8015160:	aa01      	add	r2, sp, #4
 8015162:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8015164:	4604      	mov	r4, r0
 8015166:	f00e fe27 	bl	8023db8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EPKwRKS3_>
 801516a:	4620      	mov	r0, r4
 801516c:	b002      	add	sp, #8
 801516e:	bd10      	pop	{r4, pc}

08015170 <_ZNKSt7__cxx1110moneypunctIwLb0EE16do_negative_signEv>:
 8015170:	b513      	push	{r0, r1, r4, lr}
 8015172:	688b      	ldr	r3, [r1, #8]
 8015174:	aa01      	add	r2, sp, #4
 8015176:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8015178:	4604      	mov	r4, r0
 801517a:	f00e fe1d 	bl	8023db8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EPKwRKS3_>
 801517e:	4620      	mov	r0, r4
 8015180:	b002      	add	sp, #8
 8015182:	bd10      	pop	{r4, pc}

08015184 <_ZNKSt7__cxx1110moneypunctIwLb1EE14do_curr_symbolEv>:
 8015184:	b513      	push	{r0, r1, r4, lr}
 8015186:	688b      	ldr	r3, [r1, #8]
 8015188:	aa01      	add	r2, sp, #4
 801518a:	69d9      	ldr	r1, [r3, #28]
 801518c:	4604      	mov	r4, r0
 801518e:	f00e fe13 	bl	8023db8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EPKwRKS3_>
 8015192:	4620      	mov	r0, r4
 8015194:	b002      	add	sp, #8
 8015196:	bd10      	pop	{r4, pc}

08015198 <_ZNKSt7__cxx1110moneypunctIwLb1EE16do_positive_signEv>:
 8015198:	b513      	push	{r0, r1, r4, lr}
 801519a:	688b      	ldr	r3, [r1, #8]
 801519c:	aa01      	add	r2, sp, #4
 801519e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80151a0:	4604      	mov	r4, r0
 80151a2:	f00e fe09 	bl	8023db8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EPKwRKS3_>
 80151a6:	4620      	mov	r0, r4
 80151a8:	b002      	add	sp, #8
 80151aa:	bd10      	pop	{r4, pc}

080151ac <_ZNKSt7__cxx1110moneypunctIwLb1EE16do_negative_signEv>:
 80151ac:	b513      	push	{r0, r1, r4, lr}
 80151ae:	688b      	ldr	r3, [r1, #8]
 80151b0:	aa01      	add	r2, sp, #4
 80151b2:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80151b4:	4604      	mov	r4, r0
 80151b6:	f00e fdff 	bl	8023db8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EPKwRKS3_>
 80151ba:	4620      	mov	r0, r4
 80151bc:	b002      	add	sp, #8
 80151be:	bd10      	pop	{r4, pc}

080151c0 <_ZNKSt7__cxx118numpunctIwE11do_truenameEv>:
 80151c0:	b513      	push	{r0, r1, r4, lr}
 80151c2:	688b      	ldr	r3, [r1, #8]
 80151c4:	aa01      	add	r2, sp, #4
 80151c6:	6959      	ldr	r1, [r3, #20]
 80151c8:	4604      	mov	r4, r0
 80151ca:	f00e fdf5 	bl	8023db8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EPKwRKS3_>
 80151ce:	4620      	mov	r0, r4
 80151d0:	b002      	add	sp, #8
 80151d2:	bd10      	pop	{r4, pc}

080151d4 <_ZNKSt7__cxx118numpunctIwE12do_falsenameEv>:
 80151d4:	b513      	push	{r0, r1, r4, lr}
 80151d6:	688b      	ldr	r3, [r1, #8]
 80151d8:	aa01      	add	r2, sp, #4
 80151da:	69d9      	ldr	r1, [r3, #28]
 80151dc:	4604      	mov	r4, r0
 80151de:	f00e fdeb 	bl	8023db8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EPKwRKS3_>
 80151e2:	4620      	mov	r0, r4
 80151e4:	b002      	add	sp, #8
 80151e6:	bd10      	pop	{r4, pc}

080151e8 <_ZNSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>:
 80151e8:	b510      	push	{r4, lr}
 80151ea:	4b03      	ldr	r3, [pc, #12]	; (80151f8 <_ZNSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev+0x10>)
 80151ec:	6003      	str	r3, [r0, #0]
 80151ee:	4604      	mov	r4, r0
 80151f0:	f7f7 f852 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 80151f4:	4620      	mov	r0, r4
 80151f6:	bd10      	pop	{r4, pc}
 80151f8:	0803042c 	.word	0x0803042c

080151fc <_ZNSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED0Ev>:
 80151fc:	b510      	push	{r4, lr}
 80151fe:	4604      	mov	r4, r0
 8015200:	f7ff fff2 	bl	80151e8 <_ZNSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 8015204:	4620      	mov	r0, r4
 8015206:	f00e fe61 	bl	8023ecc <_ZdlPv>
 801520a:	4620      	mov	r0, r4
 801520c:	bd10      	pop	{r4, pc}
	...

08015210 <_ZNSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev>:
 8015210:	b510      	push	{r4, lr}
 8015212:	4b03      	ldr	r3, [pc, #12]	; (8015220 <_ZNSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev+0x10>)
 8015214:	6003      	str	r3, [r0, #0]
 8015216:	4604      	mov	r4, r0
 8015218:	f7f7 f83e 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 801521c:	4620      	mov	r0, r4
 801521e:	bd10      	pop	{r4, pc}
 8015220:	08030444 	.word	0x08030444

08015224 <_ZNSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED0Ev>:
 8015224:	b510      	push	{r4, lr}
 8015226:	4604      	mov	r4, r0
 8015228:	f7ff fff2 	bl	8015210 <_ZNSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 801522c:	4620      	mov	r0, r4
 801522e:	f00e fe4d 	bl	8023ecc <_ZdlPv>
 8015232:	4620      	mov	r0, r4
 8015234:	bd10      	pop	{r4, pc}
	...

08015238 <_ZNSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>:
 8015238:	b510      	push	{r4, lr}
 801523a:	4b03      	ldr	r3, [pc, #12]	; (8015248 <_ZNSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev+0x10>)
 801523c:	6003      	str	r3, [r0, #0]
 801523e:	4604      	mov	r4, r0
 8015240:	f7f7 f82a 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8015244:	4620      	mov	r0, r4
 8015246:	bd10      	pop	{r4, pc}
 8015248:	0803045c 	.word	0x0803045c

0801524c <_ZNSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED0Ev>:
 801524c:	b510      	push	{r4, lr}
 801524e:	4604      	mov	r4, r0
 8015250:	f7ff fff2 	bl	8015238 <_ZNSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 8015254:	4620      	mov	r0, r4
 8015256:	f00e fe39 	bl	8023ecc <_ZdlPv>
 801525a:	4620      	mov	r0, r4
 801525c:	bd10      	pop	{r4, pc}
	...

08015260 <_ZNSt7__cxx118messagesIwED1Ev>:
 8015260:	b510      	push	{r4, lr}
 8015262:	4b05      	ldr	r3, [pc, #20]	; (8015278 <_ZNSt7__cxx118messagesIwED1Ev+0x18>)
 8015264:	4604      	mov	r4, r0
 8015266:	f840 3b08 	str.w	r3, [r0], #8
 801526a:	f00f fa95 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 801526e:	4620      	mov	r0, r4
 8015270:	f7f7 f812 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8015274:	4620      	mov	r0, r4
 8015276:	bd10      	pop	{r4, pc}
 8015278:	08030410 	.word	0x08030410

0801527c <_ZNSt7__cxx118messagesIwED0Ev>:
 801527c:	b510      	push	{r4, lr}
 801527e:	4604      	mov	r4, r0
 8015280:	f7ff ffee 	bl	8015260 <_ZNSt7__cxx118messagesIwED1Ev>
 8015284:	4620      	mov	r0, r4
 8015286:	f00e fe21 	bl	8023ecc <_ZdlPv>
 801528a:	4620      	mov	r0, r4
 801528c:	bd10      	pop	{r4, pc}
	...

08015290 <_ZNSt7__cxx117collateIwED1Ev>:
 8015290:	b510      	push	{r4, lr}
 8015292:	4b05      	ldr	r3, [pc, #20]	; (80152a8 <_ZNSt7__cxx117collateIwED1Ev+0x18>)
 8015294:	4604      	mov	r4, r0
 8015296:	f840 3b08 	str.w	r3, [r0], #8
 801529a:	f00f fa7d 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 801529e:	4620      	mov	r0, r4
 80152a0:	f7f6 fffa 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 80152a4:	4620      	mov	r0, r4
 80152a6:	bd10      	pop	{r4, pc}
 80152a8:	08030368 	.word	0x08030368

080152ac <_ZNSt7__cxx117collateIwED0Ev>:
 80152ac:	b510      	push	{r4, lr}
 80152ae:	4604      	mov	r4, r0
 80152b0:	f7ff ffee 	bl	8015290 <_ZNSt7__cxx117collateIwED1Ev>
 80152b4:	4620      	mov	r0, r4
 80152b6:	f00e fe09 	bl	8023ecc <_ZdlPv>
 80152ba:	4620      	mov	r0, r4
 80152bc:	bd10      	pop	{r4, pc}

080152be <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>:
 80152be:	e9d0 2102 	ldrd	r2, r1, [r0, #8]
 80152c2:	428a      	cmp	r2, r1
 80152c4:	d202      	bcs.n	80152cc <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0+0xe>
 80152c6:	3204      	adds	r2, #4
 80152c8:	6082      	str	r2, [r0, #8]
 80152ca:	4770      	bx	lr
 80152cc:	6803      	ldr	r3, [r0, #0]
 80152ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80152d0:	4718      	bx	r3

080152d2 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEjw.isra.0>:
 80152d2:	b507      	push	{r0, r1, r2, lr}
 80152d4:	9200      	str	r2, [sp, #0]
 80152d6:	460b      	mov	r3, r1
 80152d8:	2200      	movs	r2, #0
 80152da:	6841      	ldr	r1, [r0, #4]
 80152dc:	f00e fbe0 	bl	8023aa0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw>
 80152e0:	b003      	add	sp, #12
 80152e2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080152e8 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb0EEEclERKSt6locale.isra.0>:
 80152e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80152ec:	4607      	mov	r7, r0
 80152ee:	4816      	ldr	r0, [pc, #88]	; (8015348 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb0EEEclERKSt6locale.isra.0+0x60>)
 80152f0:	f7f7 f870 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 80152f4:	683b      	ldr	r3, [r7, #0]
 80152f6:	f8d3 800c 	ldr.w	r8, [r3, #12]
 80152fa:	f858 5020 	ldr.w	r5, [r8, r0, lsl #2]
 80152fe:	4606      	mov	r6, r0
 8015300:	b9f5      	cbnz	r5, 8015340 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb0EEEclERKSt6locale.isra.0+0x58>
 8015302:	2070      	movs	r0, #112	; 0x70
 8015304:	f7f6 fe1c 	bl	800bf40 <_Znwj>
 8015308:	4b10      	ldr	r3, [pc, #64]	; (801534c <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb0EEEclERKSt6locale.isra.0+0x64>)
 801530a:	6045      	str	r5, [r0, #4]
 801530c:	4604      	mov	r4, r0
 801530e:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8015312:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8015316:	e9c0 5507 	strd	r5, r5, [r0, #28]
 801531a:	e9c0 5509 	strd	r5, r5, [r0, #36]	; 0x24
 801531e:	e9c0 550b 	strd	r5, r5, [r0, #44]	; 0x2c
 8015322:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 8015326:	6003      	str	r3, [r0, #0]
 8015328:	7405      	strb	r5, [r0, #16]
 801532a:	63c5      	str	r5, [r0, #60]	; 0x3c
 801532c:	f880 506c 	strb.w	r5, [r0, #108]	; 0x6c
 8015330:	4639      	mov	r1, r7
 8015332:	f009 fdcf 	bl	801eed4 <_ZNSt18__moneypunct_cacheIwLb0EE8_M_cacheERKSt6locale>
 8015336:	6838      	ldr	r0, [r7, #0]
 8015338:	4632      	mov	r2, r6
 801533a:	4621      	mov	r1, r4
 801533c:	f7f7 f910 	bl	800c560 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj>
 8015340:	f858 0026 	ldr.w	r0, [r8, r6, lsl #2]
 8015344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015348:	20003c88 	.word	0x20003c88
 801534c:	0802ea10 	.word	0x0802ea10

08015350 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0>:
 8015350:	b538      	push	{r3, r4, r5, lr}
 8015352:	6843      	ldr	r3, [r0, #4]
 8015354:	4299      	cmp	r1, r3
 8015356:	4605      	mov	r5, r0
 8015358:	d904      	bls.n	8015364 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0+0x14>
 801535a:	460a      	mov	r2, r1
 801535c:	480a      	ldr	r0, [pc, #40]	; (8015388 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0+0x38>)
 801535e:	490b      	ldr	r1, [pc, #44]	; (801538c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0+0x3c>)
 8015360:	f002 fa6a 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 8015364:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 8015368:	d104      	bne.n	8015374 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0+0x24>
 801536a:	6803      	ldr	r3, [r0, #0]
 801536c:	6069      	str	r1, [r5, #4]
 801536e:	2200      	movs	r2, #0
 8015370:	545a      	strb	r2, [r3, r1]
 8015372:	bd38      	pop	{r3, r4, r5, pc}
 8015374:	2a00      	cmp	r2, #0
 8015376:	d0fc      	beq.n	8015372 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0+0x22>
 8015378:	1a5b      	subs	r3, r3, r1
 801537a:	429a      	cmp	r2, r3
 801537c:	bf28      	it	cs
 801537e:	461a      	movcs	r2, r3
 8015380:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8015384:	f008 bb81 	b.w	801da8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
 8015388:	0802f5dc 	.word	0x0802f5dc
 801538c:	0802f63e 	.word	0x0802f63e

08015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>:
 8015390:	b510      	push	{r4, lr}
 8015392:	4604      	mov	r4, r0
 8015394:	6800      	ldr	r0, [r0, #0]
 8015396:	f7ff ff92 	bl	80152be <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 801539a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801539e:	6063      	str	r3, [r4, #4]
 80153a0:	bd10      	pop	{r4, pc}
	...

080153a4 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb1EEEclERKSt6locale.isra.0>:
 80153a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80153a8:	4607      	mov	r7, r0
 80153aa:	4816      	ldr	r0, [pc, #88]	; (8015404 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb1EEEclERKSt6locale.isra.0+0x60>)
 80153ac:	f7f7 f812 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 80153b0:	683b      	ldr	r3, [r7, #0]
 80153b2:	f8d3 800c 	ldr.w	r8, [r3, #12]
 80153b6:	f858 5020 	ldr.w	r5, [r8, r0, lsl #2]
 80153ba:	4606      	mov	r6, r0
 80153bc:	b9f5      	cbnz	r5, 80153fc <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb1EEEclERKSt6locale.isra.0+0x58>
 80153be:	2070      	movs	r0, #112	; 0x70
 80153c0:	f7f6 fdbe 	bl	800bf40 <_Znwj>
 80153c4:	4b10      	ldr	r3, [pc, #64]	; (8015408 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb1EEEclERKSt6locale.isra.0+0x64>)
 80153c6:	6045      	str	r5, [r0, #4]
 80153c8:	4604      	mov	r4, r0
 80153ca:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80153ce:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80153d2:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80153d6:	e9c0 5509 	strd	r5, r5, [r0, #36]	; 0x24
 80153da:	e9c0 550b 	strd	r5, r5, [r0, #44]	; 0x2c
 80153de:	e9c0 550d 	strd	r5, r5, [r0, #52]	; 0x34
 80153e2:	6003      	str	r3, [r0, #0]
 80153e4:	7405      	strb	r5, [r0, #16]
 80153e6:	63c5      	str	r5, [r0, #60]	; 0x3c
 80153e8:	f880 506c 	strb.w	r5, [r0, #108]	; 0x6c
 80153ec:	4639      	mov	r1, r7
 80153ee:	f009 fe39 	bl	801f064 <_ZNSt18__moneypunct_cacheIwLb1EE8_M_cacheERKSt6locale>
 80153f2:	6838      	ldr	r0, [r7, #0]
 80153f4:	4632      	mov	r2, r6
 80153f6:	4621      	mov	r1, r4
 80153f8:	f7f7 f8b2 	bl	800c560 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj>
 80153fc:	f858 0026 	ldr.w	r0, [r8, r6, lsl #2]
 8015400:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015404:	20003c84 	.word	0x20003c84
 8015408:	0802ea00 	.word	0x0802ea00

0801540c <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6insertEjjw.isra.0>:
 801540c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801540e:	6845      	ldr	r5, [r0, #4]
 8015410:	42a9      	cmp	r1, r5
 8015412:	d905      	bls.n	8015420 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6insertEjjw.isra.0+0x14>
 8015414:	460a      	mov	r2, r1
 8015416:	4806      	ldr	r0, [pc, #24]	; (8015430 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6insertEjjw.isra.0+0x24>)
 8015418:	4906      	ldr	r1, [pc, #24]	; (8015434 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6insertEjjw.isra.0+0x28>)
 801541a:	462b      	mov	r3, r5
 801541c:	f002 fa0c 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 8015420:	9300      	str	r3, [sp, #0]
 8015422:	4613      	mov	r3, r2
 8015424:	2200      	movs	r2, #0
 8015426:	f00e fb3b 	bl	8023aa0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw>
 801542a:	b003      	add	sp, #12
 801542c:	bd30      	pop	{r4, r5, pc}
 801542e:	bf00      	nop
 8015430:	0802f5dc 	.word	0x0802f5dc
 8015434:	0802f7db 	.word	0x0802f7db

08015438 <_ZNKSt7__cxx1110moneypunctIwLb0EE13decimal_pointEv>:
 8015438:	6803      	ldr	r3, [r0, #0]
 801543a:	689b      	ldr	r3, [r3, #8]
 801543c:	4718      	bx	r3

0801543e <_ZNKSt7__cxx1110moneypunctIwLb0EE13thousands_sepEv>:
 801543e:	6803      	ldr	r3, [r0, #0]
 8015440:	68db      	ldr	r3, [r3, #12]
 8015442:	4718      	bx	r3

08015444 <_ZNKSt7__cxx1110moneypunctIwLb0EE8groupingEv>:
 8015444:	b510      	push	{r4, lr}
 8015446:	680b      	ldr	r3, [r1, #0]
 8015448:	4604      	mov	r4, r0
 801544a:	691b      	ldr	r3, [r3, #16]
 801544c:	4798      	blx	r3
 801544e:	4620      	mov	r0, r4
 8015450:	bd10      	pop	{r4, pc}

08015452 <_ZNKSt7__cxx1110moneypunctIwLb0EE11curr_symbolEv>:
 8015452:	b510      	push	{r4, lr}
 8015454:	680b      	ldr	r3, [r1, #0]
 8015456:	4604      	mov	r4, r0
 8015458:	695b      	ldr	r3, [r3, #20]
 801545a:	4798      	blx	r3
 801545c:	4620      	mov	r0, r4
 801545e:	bd10      	pop	{r4, pc}

08015460 <_ZNKSt7__cxx1110moneypunctIwLb0EE13positive_signEv>:
 8015460:	b510      	push	{r4, lr}
 8015462:	680b      	ldr	r3, [r1, #0]
 8015464:	4604      	mov	r4, r0
 8015466:	699b      	ldr	r3, [r3, #24]
 8015468:	4798      	blx	r3
 801546a:	4620      	mov	r0, r4
 801546c:	bd10      	pop	{r4, pc}

0801546e <_ZNKSt7__cxx1110moneypunctIwLb0EE13negative_signEv>:
 801546e:	b510      	push	{r4, lr}
 8015470:	680b      	ldr	r3, [r1, #0]
 8015472:	4604      	mov	r4, r0
 8015474:	69db      	ldr	r3, [r3, #28]
 8015476:	4798      	blx	r3
 8015478:	4620      	mov	r0, r4
 801547a:	bd10      	pop	{r4, pc}

0801547c <_ZNKSt7__cxx1110moneypunctIwLb0EE11frac_digitsEv>:
 801547c:	6803      	ldr	r3, [r0, #0]
 801547e:	6a1b      	ldr	r3, [r3, #32]
 8015480:	4718      	bx	r3

08015482 <_ZNKSt7__cxx1110moneypunctIwLb0EE10pos_formatEv>:
 8015482:	6803      	ldr	r3, [r0, #0]
 8015484:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015486:	b082      	sub	sp, #8
 8015488:	b002      	add	sp, #8
 801548a:	4718      	bx	r3

0801548c <_ZNKSt7__cxx1110moneypunctIwLb0EE10neg_formatEv>:
 801548c:	6803      	ldr	r3, [r0, #0]
 801548e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015490:	b082      	sub	sp, #8
 8015492:	b002      	add	sp, #8
 8015494:	4718      	bx	r3

08015496 <_ZNKSt7__cxx1110moneypunctIwLb1EE13decimal_pointEv>:
 8015496:	6803      	ldr	r3, [r0, #0]
 8015498:	689b      	ldr	r3, [r3, #8]
 801549a:	4718      	bx	r3

0801549c <_ZNKSt7__cxx1110moneypunctIwLb1EE13thousands_sepEv>:
 801549c:	6803      	ldr	r3, [r0, #0]
 801549e:	68db      	ldr	r3, [r3, #12]
 80154a0:	4718      	bx	r3

080154a2 <_ZNKSt7__cxx1110moneypunctIwLb1EE8groupingEv>:
 80154a2:	b510      	push	{r4, lr}
 80154a4:	680b      	ldr	r3, [r1, #0]
 80154a6:	4604      	mov	r4, r0
 80154a8:	691b      	ldr	r3, [r3, #16]
 80154aa:	4798      	blx	r3
 80154ac:	4620      	mov	r0, r4
 80154ae:	bd10      	pop	{r4, pc}

080154b0 <_ZNKSt7__cxx1110moneypunctIwLb1EE11curr_symbolEv>:
 80154b0:	b510      	push	{r4, lr}
 80154b2:	680b      	ldr	r3, [r1, #0]
 80154b4:	4604      	mov	r4, r0
 80154b6:	695b      	ldr	r3, [r3, #20]
 80154b8:	4798      	blx	r3
 80154ba:	4620      	mov	r0, r4
 80154bc:	bd10      	pop	{r4, pc}

080154be <_ZNKSt7__cxx1110moneypunctIwLb1EE13positive_signEv>:
 80154be:	b510      	push	{r4, lr}
 80154c0:	680b      	ldr	r3, [r1, #0]
 80154c2:	4604      	mov	r4, r0
 80154c4:	699b      	ldr	r3, [r3, #24]
 80154c6:	4798      	blx	r3
 80154c8:	4620      	mov	r0, r4
 80154ca:	bd10      	pop	{r4, pc}

080154cc <_ZNKSt7__cxx1110moneypunctIwLb1EE13negative_signEv>:
 80154cc:	b510      	push	{r4, lr}
 80154ce:	680b      	ldr	r3, [r1, #0]
 80154d0:	4604      	mov	r4, r0
 80154d2:	69db      	ldr	r3, [r3, #28]
 80154d4:	4798      	blx	r3
 80154d6:	4620      	mov	r0, r4
 80154d8:	bd10      	pop	{r4, pc}

080154da <_ZNKSt7__cxx1110moneypunctIwLb1EE11frac_digitsEv>:
 80154da:	6803      	ldr	r3, [r0, #0]
 80154dc:	6a1b      	ldr	r3, [r3, #32]
 80154de:	4718      	bx	r3

080154e0 <_ZNKSt7__cxx1110moneypunctIwLb1EE10pos_formatEv>:
 80154e0:	6803      	ldr	r3, [r0, #0]
 80154e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80154e4:	b082      	sub	sp, #8
 80154e6:	b002      	add	sp, #8
 80154e8:	4718      	bx	r3

080154ea <_ZNKSt7__cxx1110moneypunctIwLb1EE10neg_formatEv>:
 80154ea:	6803      	ldr	r3, [r0, #0]
 80154ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80154ee:	b082      	sub	sp, #8
 80154f0:	b002      	add	sp, #8
 80154f2:	4718      	bx	r3

080154f4 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRe>:
 80154f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80154f6:	b089      	sub	sp, #36	; 0x24
 80154f8:	ae06      	add	r6, sp, #24
 80154fa:	e886 000c 	stmia.w	r6, {r2, r3}
 80154fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015500:	680b      	ldr	r3, [r1, #0]
 8015502:	9205      	str	r2, [sp, #20]
 8015504:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015506:	9204      	str	r2, [sp, #16]
 8015508:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801550a:	9203      	str	r2, [sp, #12]
 801550c:	f89d 2040 	ldrb.w	r2, [sp, #64]	; 0x40
 8015510:	9202      	str	r2, [sp, #8]
 8015512:	aa0e      	add	r2, sp, #56	; 0x38
 8015514:	4604      	mov	r4, r0
 8015516:	460d      	mov	r5, r1
 8015518:	e892 0003 	ldmia.w	r2, {r0, r1}
 801551c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8015520:	4620      	mov	r0, r4
 8015522:	689f      	ldr	r7, [r3, #8]
 8015524:	4629      	mov	r1, r5
 8015526:	e896 000c 	ldmia.w	r6, {r2, r3}
 801552a:	47b8      	blx	r7
 801552c:	4620      	mov	r0, r4
 801552e:	b009      	add	sp, #36	; 0x24
 8015530:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015532 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIwS3_SaIwEEE>:
 8015532:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015534:	b089      	sub	sp, #36	; 0x24
 8015536:	ae06      	add	r6, sp, #24
 8015538:	e886 000c 	stmia.w	r6, {r2, r3}
 801553c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801553e:	680b      	ldr	r3, [r1, #0]
 8015540:	9205      	str	r2, [sp, #20]
 8015542:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015544:	9204      	str	r2, [sp, #16]
 8015546:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015548:	9203      	str	r2, [sp, #12]
 801554a:	f89d 2040 	ldrb.w	r2, [sp, #64]	; 0x40
 801554e:	9202      	str	r2, [sp, #8]
 8015550:	aa0e      	add	r2, sp, #56	; 0x38
 8015552:	4604      	mov	r4, r0
 8015554:	460d      	mov	r5, r1
 8015556:	e892 0003 	ldmia.w	r2, {r0, r1}
 801555a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801555e:	4620      	mov	r0, r4
 8015560:	68df      	ldr	r7, [r3, #12]
 8015562:	4629      	mov	r1, r5
 8015564:	e896 000c 	ldmia.w	r6, {r2, r3}
 8015568:	47b8      	blx	r7
 801556a:	4620      	mov	r0, r4
 801556c:	b009      	add	sp, #36	; 0x24
 801556e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015570 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE3putES4_bRSt8ios_basewe>:
 8015570:	b570      	push	{r4, r5, r6, lr}
 8015572:	b086      	sub	sp, #24
 8015574:	ac04      	add	r4, sp, #16
 8015576:	e884 000c 	stmia.w	r4, {r2, r3}
 801557a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801557c:	9202      	str	r2, [sp, #8]
 801557e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015580:	9201      	str	r2, [sp, #4]
 8015582:	680b      	ldr	r3, [r1, #0]
 8015584:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 8015588:	9200      	str	r2, [sp, #0]
 801558a:	689e      	ldr	r6, [r3, #8]
 801558c:	e894 000c 	ldmia.w	r4, {r2, r3}
 8015590:	4605      	mov	r5, r0
 8015592:	47b0      	blx	r6
 8015594:	4628      	mov	r0, r5
 8015596:	b006      	add	sp, #24
 8015598:	bd70      	pop	{r4, r5, r6, pc}

0801559a <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE3putES4_bRSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE>:
 801559a:	b570      	push	{r4, r5, r6, lr}
 801559c:	b086      	sub	sp, #24
 801559e:	ac04      	add	r4, sp, #16
 80155a0:	e884 000c 	stmia.w	r4, {r2, r3}
 80155a4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80155a6:	9203      	str	r2, [sp, #12]
 80155a8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80155aa:	9202      	str	r2, [sp, #8]
 80155ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80155ae:	9201      	str	r2, [sp, #4]
 80155b0:	680b      	ldr	r3, [r1, #0]
 80155b2:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 80155b6:	9200      	str	r2, [sp, #0]
 80155b8:	68de      	ldr	r6, [r3, #12]
 80155ba:	e894 000c 	ldmia.w	r4, {r2, r3}
 80155be:	4605      	mov	r5, r0
 80155c0:	47b0      	blx	r6
 80155c2:	4628      	mov	r0, r5
 80155c4:	b006      	add	sp, #24
 80155c6:	bd70      	pop	{r4, r5, r6, pc}

080155c8 <_ZNKSt7__cxx118numpunctIwE13decimal_pointEv>:
 80155c8:	6803      	ldr	r3, [r0, #0]
 80155ca:	689b      	ldr	r3, [r3, #8]
 80155cc:	4718      	bx	r3

080155ce <_ZNKSt7__cxx118numpunctIwE13thousands_sepEv>:
 80155ce:	6803      	ldr	r3, [r0, #0]
 80155d0:	68db      	ldr	r3, [r3, #12]
 80155d2:	4718      	bx	r3

080155d4 <_ZNKSt7__cxx118numpunctIwE8groupingEv>:
 80155d4:	b510      	push	{r4, lr}
 80155d6:	680b      	ldr	r3, [r1, #0]
 80155d8:	4604      	mov	r4, r0
 80155da:	691b      	ldr	r3, [r3, #16]
 80155dc:	4798      	blx	r3
 80155de:	4620      	mov	r0, r4
 80155e0:	bd10      	pop	{r4, pc}

080155e2 <_ZNKSt7__cxx118numpunctIwE8truenameEv>:
 80155e2:	b510      	push	{r4, lr}
 80155e4:	680b      	ldr	r3, [r1, #0]
 80155e6:	4604      	mov	r4, r0
 80155e8:	695b      	ldr	r3, [r3, #20]
 80155ea:	4798      	blx	r3
 80155ec:	4620      	mov	r0, r4
 80155ee:	bd10      	pop	{r4, pc}

080155f0 <_ZNKSt7__cxx118numpunctIwE9falsenameEv>:
 80155f0:	b510      	push	{r4, lr}
 80155f2:	680b      	ldr	r3, [r1, #0]
 80155f4:	4604      	mov	r4, r0
 80155f6:	699b      	ldr	r3, [r3, #24]
 80155f8:	4798      	blx	r3
 80155fa:	4620      	mov	r0, r4
 80155fc:	bd10      	pop	{r4, pc}

080155fe <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10date_orderEv>:
 80155fe:	6803      	ldr	r3, [r0, #0]
 8015600:	689b      	ldr	r3, [r3, #8]
 8015602:	4718      	bx	r3

08015604 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE8get_timeES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8015604:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015606:	b089      	sub	sp, #36	; 0x24
 8015608:	ae06      	add	r6, sp, #24
 801560a:	e886 000c 	stmia.w	r6, {r2, r3}
 801560e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015610:	680b      	ldr	r3, [r1, #0]
 8015612:	9204      	str	r2, [sp, #16]
 8015614:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015616:	9203      	str	r2, [sp, #12]
 8015618:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801561a:	9202      	str	r2, [sp, #8]
 801561c:	aa0e      	add	r2, sp, #56	; 0x38
 801561e:	4604      	mov	r4, r0
 8015620:	460d      	mov	r5, r1
 8015622:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015626:	e88d 0003 	stmia.w	sp, {r0, r1}
 801562a:	4620      	mov	r0, r4
 801562c:	68df      	ldr	r7, [r3, #12]
 801562e:	4629      	mov	r1, r5
 8015630:	e896 000c 	ldmia.w	r6, {r2, r3}
 8015634:	47b8      	blx	r7
 8015636:	4620      	mov	r0, r4
 8015638:	b009      	add	sp, #36	; 0x24
 801563a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801563c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE8get_dateES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801563c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801563e:	b089      	sub	sp, #36	; 0x24
 8015640:	ae06      	add	r6, sp, #24
 8015642:	e886 000c 	stmia.w	r6, {r2, r3}
 8015646:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015648:	680b      	ldr	r3, [r1, #0]
 801564a:	9204      	str	r2, [sp, #16]
 801564c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801564e:	9203      	str	r2, [sp, #12]
 8015650:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015652:	9202      	str	r2, [sp, #8]
 8015654:	aa0e      	add	r2, sp, #56	; 0x38
 8015656:	4604      	mov	r4, r0
 8015658:	460d      	mov	r5, r1
 801565a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801565e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8015662:	4620      	mov	r0, r4
 8015664:	691f      	ldr	r7, [r3, #16]
 8015666:	4629      	mov	r1, r5
 8015668:	e896 000c 	ldmia.w	r6, {r2, r3}
 801566c:	47b8      	blx	r7
 801566e:	4620      	mov	r0, r4
 8015670:	b009      	add	sp, #36	; 0x24
 8015672:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015674 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11get_weekdayES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8015674:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015676:	b089      	sub	sp, #36	; 0x24
 8015678:	ae06      	add	r6, sp, #24
 801567a:	e886 000c 	stmia.w	r6, {r2, r3}
 801567e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015680:	680b      	ldr	r3, [r1, #0]
 8015682:	9204      	str	r2, [sp, #16]
 8015684:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015686:	9203      	str	r2, [sp, #12]
 8015688:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801568a:	9202      	str	r2, [sp, #8]
 801568c:	aa0e      	add	r2, sp, #56	; 0x38
 801568e:	4604      	mov	r4, r0
 8015690:	460d      	mov	r5, r1
 8015692:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015696:	e88d 0003 	stmia.w	sp, {r0, r1}
 801569a:	4620      	mov	r0, r4
 801569c:	695f      	ldr	r7, [r3, #20]
 801569e:	4629      	mov	r1, r5
 80156a0:	e896 000c 	ldmia.w	r6, {r2, r3}
 80156a4:	47b8      	blx	r7
 80156a6:	4620      	mov	r0, r4
 80156a8:	b009      	add	sp, #36	; 0x24
 80156aa:	bdf0      	pop	{r4, r5, r6, r7, pc}

080156ac <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE13get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 80156ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80156ae:	b089      	sub	sp, #36	; 0x24
 80156b0:	ae06      	add	r6, sp, #24
 80156b2:	e886 000c 	stmia.w	r6, {r2, r3}
 80156b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80156b8:	680b      	ldr	r3, [r1, #0]
 80156ba:	9204      	str	r2, [sp, #16]
 80156bc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80156be:	9203      	str	r2, [sp, #12]
 80156c0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80156c2:	9202      	str	r2, [sp, #8]
 80156c4:	aa0e      	add	r2, sp, #56	; 0x38
 80156c6:	4604      	mov	r4, r0
 80156c8:	460d      	mov	r5, r1
 80156ca:	e892 0003 	ldmia.w	r2, {r0, r1}
 80156ce:	e88d 0003 	stmia.w	sp, {r0, r1}
 80156d2:	4620      	mov	r0, r4
 80156d4:	699f      	ldr	r7, [r3, #24]
 80156d6:	4629      	mov	r1, r5
 80156d8:	e896 000c 	ldmia.w	r6, {r2, r3}
 80156dc:	47b8      	blx	r7
 80156de:	4620      	mov	r0, r4
 80156e0:	b009      	add	sp, #36	; 0x24
 80156e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080156e4 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE8get_yearES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 80156e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80156e6:	b089      	sub	sp, #36	; 0x24
 80156e8:	ae06      	add	r6, sp, #24
 80156ea:	e886 000c 	stmia.w	r6, {r2, r3}
 80156ee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80156f0:	680b      	ldr	r3, [r1, #0]
 80156f2:	9204      	str	r2, [sp, #16]
 80156f4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80156f6:	9203      	str	r2, [sp, #12]
 80156f8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80156fa:	9202      	str	r2, [sp, #8]
 80156fc:	aa0e      	add	r2, sp, #56	; 0x38
 80156fe:	4604      	mov	r4, r0
 8015700:	460d      	mov	r5, r1
 8015702:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015706:	e88d 0003 	stmia.w	sp, {r0, r1}
 801570a:	4620      	mov	r0, r4
 801570c:	69df      	ldr	r7, [r3, #28]
 801570e:	4629      	mov	r1, r5
 8015710:	e896 000c 	ldmia.w	r6, {r2, r3}
 8015714:	47b8      	blx	r7
 8015716:	4620      	mov	r0, r4
 8015718:	b009      	add	sp, #36	; 0x24
 801571a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801571c <_ZNSt7__cxx118messagesIwEC1Ej>:
 801571c:	3900      	subs	r1, #0
 801571e:	b510      	push	{r4, lr}
 8015720:	4b05      	ldr	r3, [pc, #20]	; (8015738 <_ZNSt7__cxx118messagesIwEC1Ej+0x1c>)
 8015722:	6003      	str	r3, [r0, #0]
 8015724:	bf18      	it	ne
 8015726:	2101      	movne	r1, #1
 8015728:	6041      	str	r1, [r0, #4]
 801572a:	4604      	mov	r4, r0
 801572c:	f7f6 fdd6 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8015730:	60a0      	str	r0, [r4, #8]
 8015732:	4620      	mov	r0, r4
 8015734:	bd10      	pop	{r4, pc}
 8015736:	bf00      	nop
 8015738:	08030410 	.word	0x08030410

0801573c <_ZNKSt7__cxx118messagesIwE4openERKNS_12basic_stringIcSt11char_traitsIcESaIcEEERKSt6locale>:
 801573c:	6803      	ldr	r3, [r0, #0]
 801573e:	689b      	ldr	r3, [r3, #8]
 8015740:	4718      	bx	r3

08015742 <_ZNKSt7__cxx118messagesIwE3getEiiiRKNS_12basic_stringIwSt11char_traitsIwESaIwEEE>:
 8015742:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015744:	9e07      	ldr	r6, [sp, #28]
 8015746:	9601      	str	r6, [sp, #4]
 8015748:	680d      	ldr	r5, [r1, #0]
 801574a:	9e06      	ldr	r6, [sp, #24]
 801574c:	9600      	str	r6, [sp, #0]
 801574e:	68ed      	ldr	r5, [r5, #12]
 8015750:	4604      	mov	r4, r0
 8015752:	47a8      	blx	r5
 8015754:	4620      	mov	r0, r4
 8015756:	b002      	add	sp, #8
 8015758:	bd70      	pop	{r4, r5, r6, pc}

0801575a <_ZNKSt7__cxx118messagesIwE5closeEi>:
 801575a:	6803      	ldr	r3, [r0, #0]
 801575c:	691b      	ldr	r3, [r3, #16]
 801575e:	4718      	bx	r3

08015760 <_ZNKSt7__cxx117collateIwE7compareEPKwS3_S3_S3_>:
 8015760:	b410      	push	{r4}
 8015762:	6804      	ldr	r4, [r0, #0]
 8015764:	68a4      	ldr	r4, [r4, #8]
 8015766:	46a4      	mov	ip, r4
 8015768:	f85d 4b04 	ldr.w	r4, [sp], #4
 801576c:	4760      	bx	ip

0801576e <_ZNKSt7__cxx117collateIwE9transformEPKwS3_>:
 801576e:	b538      	push	{r3, r4, r5, lr}
 8015770:	680d      	ldr	r5, [r1, #0]
 8015772:	4604      	mov	r4, r0
 8015774:	68ed      	ldr	r5, [r5, #12]
 8015776:	47a8      	blx	r5
 8015778:	4620      	mov	r0, r4
 801577a:	bd38      	pop	{r3, r4, r5, pc}

0801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>:
 801577c:	b410      	push	{r4}
 801577e:	6804      	ldr	r4, [r0, #0]
 8015780:	6ae4      	ldr	r4, [r4, #44]	; 0x2c
 8015782:	46a4      	mov	ip, r4
 8015784:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015788:	4760      	bx	ip

0801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>:
 801578a:	6803      	ldr	r3, [r0, #0]
 801578c:	689b      	ldr	r3, [r3, #8]
 801578e:	4718      	bx	r3

08015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>:
 8015790:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015792:	466d      	mov	r5, sp
 8015794:	e885 0006 	stmia.w	r5, {r1, r2}
 8015798:	f89d 6004 	ldrb.w	r6, [sp, #4]
 801579c:	9f08      	ldr	r7, [sp, #32]
 801579e:	4604      	mov	r4, r0
 80157a0:	4619      	mov	r1, r3
 80157a2:	b936      	cbnz	r6, 80157b2 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i+0x22>
 80157a4:	9800      	ldr	r0, [sp, #0]
 80157a6:	463a      	mov	r2, r7
 80157a8:	f008 f88f 	bl	801d8ca <_ZNSt15basic_streambufIwSt11char_traitsIwEE5sputnEPKwi>
 80157ac:	4287      	cmp	r7, r0
 80157ae:	bf18      	it	ne
 80157b0:	2601      	movne	r6, #1
 80157b2:	f88d 6004 	strb.w	r6, [sp, #4]
 80157b6:	e895 0003 	ldmia.w	r5, {r0, r1}
 80157ba:	e884 0003 	stmia.w	r4, {r0, r1}
 80157be:	4620      	mov	r0, r4
 80157c0:	b003      	add	sp, #12
 80157c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080157c4 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE>:
 80157c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157c8:	b099      	sub	sp, #100	; 0x64
 80157ca:	e9dd 8922 	ldrd	r8, r9, [sp, #136]	; 0x88
 80157ce:	f108 046c 	add.w	r4, r8, #108	; 0x6c
 80157d2:	a906      	add	r1, sp, #24
 80157d4:	9005      	str	r0, [sp, #20]
 80157d6:	4620      	mov	r0, r4
 80157d8:	e881 000c 	stmia.w	r1, {r2, r3}
 80157dc:	9f24      	ldr	r7, [sp, #144]	; 0x90
 80157de:	f009 f93f 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 80157e2:	4606      	mov	r6, r0
 80157e4:	4620      	mov	r0, r4
 80157e6:	f7ff fddd 	bl	80153a4 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb1EEEclERKSt6locale.isra.0>
 80157ea:	683d      	ldr	r5, [r7, #0]
 80157ec:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80157ee:	682a      	ldr	r2, [r5, #0]
 80157f0:	429a      	cmp	r2, r3
 80157f2:	4604      	mov	r4, r0
 80157f4:	687b      	ldr	r3, [r7, #4]
 80157f6:	d043      	beq.n	8015880 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0xbc>
 80157f8:	6b82      	ldr	r2, [r0, #56]	; 0x38
 80157fa:	9209      	str	r2, [sp, #36]	; 0x24
 80157fc:	f8d0 a028 	ldr.w	sl, [r0, #40]	; 0x28
 8015800:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8015802:	9203      	str	r2, [sp, #12]
 8015804:	6832      	ldr	r2, [r6, #0]
 8015806:	4630      	mov	r0, r6
 8015808:	6957      	ldr	r7, [r2, #20]
 801580a:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 801580e:	462a      	mov	r2, r5
 8015810:	2104      	movs	r1, #4
 8015812:	47b8      	blx	r7
 8015814:	1b40      	subs	r0, r0, r5
 8015816:	1086      	asrs	r6, r0, #2
 8015818:	f000 80c0 	beq.w	801599c <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x1d8>
 801581c:	ab0e      	add	r3, sp, #56	; 0x38
 801581e:	f04f 0b00 	mov.w	fp, #0
 8015822:	0071      	lsls	r1, r6, #1
 8015824:	a80c      	add	r0, sp, #48	; 0x30
 8015826:	930c      	str	r3, [sp, #48]	; 0x30
 8015828:	e9cd bb0d 	strd	fp, fp, [sp, #52]	; 0x34
 801582c:	f00e f8e5 	bl	80239fa <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7reserveEj>
 8015830:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8015832:	1af7      	subs	r7, r6, r3
 8015834:	455f      	cmp	r7, fp
 8015836:	dd31      	ble.n	801589c <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0xd8>
 8015838:	68e1      	ldr	r1, [r4, #12]
 801583a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801583c:	455b      	cmp	r3, fp
 801583e:	bfb8      	it	lt
 8015840:	4637      	movlt	r7, r6
 8015842:	2900      	cmp	r1, #0
 8015844:	d065      	beq.n	8015912 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x14e>
 8015846:	007b      	lsls	r3, r7, #1
 8015848:	4659      	mov	r1, fp
 801584a:	f8cd b000 	str.w	fp, [sp]
 801584e:	a80c      	add	r0, sp, #48	; 0x30
 8015850:	f00e f926 	bl	8023aa0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw>
 8015854:	eb05 0387 	add.w	r3, r5, r7, lsl #2
 8015858:	e9cd 5300 	strd	r5, r3, [sp]
 801585c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801585e:	69a1      	ldr	r1, [r4, #24]
 8015860:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
 8015864:	f009 fa28 	bl	801ecb8 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_>
 8015868:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801586a:	1ac0      	subs	r0, r0, r3
 801586c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801586e:	ebb3 0fa0 	cmp.w	r3, r0, asr #2
 8015872:	ea4f 02a0 	mov.w	r2, r0, asr #2
 8015876:	d20d      	bcs.n	8015894 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0xd0>
 8015878:	4960      	ldr	r1, [pc, #384]	; (80159fc <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x238>)
 801587a:	4861      	ldr	r0, [pc, #388]	; (8015a00 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x23c>)
 801587c:	f001 ffdc 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 8015880:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8015882:	9209      	str	r2, [sp, #36]	; 0x24
 8015884:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8015886:	f8d0 a030 	ldr.w	sl, [r0, #48]	; 0x30
 801588a:	9203      	str	r2, [sp, #12]
 801588c:	2b00      	cmp	r3, #0
 801588e:	d0b9      	beq.n	8015804 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x40>
 8015890:	3504      	adds	r5, #4
 8015892:	e7b7      	b.n	8015804 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x40>
 8015894:	4611      	mov	r1, r2
 8015896:	a80c      	add	r0, sp, #48	; 0x30
 8015898:	f00d ffa4 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 801589c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801589e:	2b00      	cmp	r3, #0
 80158a0:	dd0b      	ble.n	80158ba <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0xf6>
 80158a2:	6961      	ldr	r1, [r4, #20]
 80158a4:	a80c      	add	r0, sp, #48	; 0x30
 80158a6:	f00e f8da 	bl	8023a5e <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9push_backEw>
 80158aa:	2f00      	cmp	r7, #0
 80158ac:	db37      	blt.n	801591e <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x15a>
 80158ae:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80158b0:	eb05 0187 	add.w	r1, r5, r7, lsl #2
 80158b4:	a80c      	add	r0, sp, #48	; 0x30
 80158b6:	f00e f9fb 	bl	8023cb0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEPKwj>
 80158ba:	f8d8 500c 	ldr.w	r5, [r8, #12]
 80158be:	f005 03b0 	and.w	r3, r5, #176	; 0xb0
 80158c2:	9304      	str	r3, [sp, #16]
 80158c4:	f415 7500 	ands.w	r5, r5, #512	; 0x200
 80158c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80158ca:	bf18      	it	ne
 80158cc:	6a25      	ldrne	r5, [r4, #32]
 80158ce:	eb0a 0203 	add.w	r2, sl, r3
 80158d2:	4415      	add	r5, r2
 80158d4:	ab14      	add	r3, sp, #80	; 0x50
 80158d6:	2600      	movs	r6, #0
 80158d8:	0069      	lsls	r1, r5, #1
 80158da:	a812      	add	r0, sp, #72	; 0x48
 80158dc:	9312      	str	r3, [sp, #72]	; 0x48
 80158de:	e9cd 6613 	strd	r6, r6, [sp, #76]	; 0x4c
 80158e2:	f00e f88a 	bl	80239fa <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7reserveEj>
 80158e6:	9b04      	ldr	r3, [sp, #16]
 80158e8:	f8d8 7008 	ldr.w	r7, [r8, #8]
 80158ec:	2b10      	cmp	r3, #16
 80158ee:	d103      	bne.n	80158f8 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x134>
 80158f0:	42bd      	cmp	r5, r7
 80158f2:	bf2c      	ite	cs
 80158f4:	2600      	movcs	r6, #0
 80158f6:	2601      	movcc	r6, #1
 80158f8:	f04f 0b00 	mov.w	fp, #0
 80158fc:	1b7d      	subs	r5, r7, r5
 80158fe:	ab09      	add	r3, sp, #36	; 0x24
 8015900:	f813 300b 	ldrb.w	r3, [r3, fp]
 8015904:	2b04      	cmp	r3, #4
 8015906:	d81b      	bhi.n	8015940 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 8015908:	e8df f003 	tbb	[pc, r3]
 801590c:	5411636c 	.word	0x5411636c
 8015910:	5d          	.byte	0x5d
 8015911:	00          	.byte	0x00
 8015912:	9700      	str	r7, [sp, #0]
 8015914:	462b      	mov	r3, r5
 8015916:	a80c      	add	r0, sp, #48	; 0x30
 8015918:	f00e f91e 	bl	8023b58 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj>
 801591c:	e7be      	b.n	801589c <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0xd8>
 801591e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8015920:	4279      	negs	r1, r7
 8015922:	a80c      	add	r0, sp, #48	; 0x30
 8015924:	f7ff fcd5 	bl	80152d2 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEjw.isra.0>
 8015928:	4632      	mov	r2, r6
 801592a:	4629      	mov	r1, r5
 801592c:	e7c2      	b.n	80158b4 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0xf0>
 801592e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8015932:	059b      	lsls	r3, r3, #22
 8015934:	d504      	bpl.n	8015940 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 8015936:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 801593a:	a812      	add	r0, sp, #72	; 0x48
 801593c:	f00e f9b8 	bl	8023cb0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEPKwj>
 8015940:	f10b 0b01 	add.w	fp, fp, #1
 8015944:	f1bb 0f04 	cmp.w	fp, #4
 8015948:	d1d9      	bne.n	80158fe <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x13a>
 801594a:	f1ba 0f01 	cmp.w	sl, #1
 801594e:	d906      	bls.n	801595e <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x19a>
 8015950:	9903      	ldr	r1, [sp, #12]
 8015952:	f10a 32ff 	add.w	r2, sl, #4294967295	; 0xffffffff
 8015956:	3104      	adds	r1, #4
 8015958:	a812      	add	r0, sp, #72	; 0x48
 801595a:	f00e f9a9 	bl	8023cb0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEPKwj>
 801595e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8015960:	428f      	cmp	r7, r1
 8015962:	d949      	bls.n	80159f8 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x234>
 8015964:	9b04      	ldr	r3, [sp, #16]
 8015966:	2b20      	cmp	r3, #32
 8015968:	eba7 0101 	sub.w	r1, r7, r1
 801596c:	d13d      	bne.n	80159ea <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x226>
 801596e:	464a      	mov	r2, r9
 8015970:	a812      	add	r0, sp, #72	; 0x48
 8015972:	f7ff fcae 	bl	80152d2 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEjw.isra.0>
 8015976:	ac0a      	add	r4, sp, #40	; 0x28
 8015978:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801597c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801597e:	9700      	str	r7, [sp, #0]
 8015980:	4620      	mov	r0, r4
 8015982:	f7ff ff05 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 8015986:	e894 0003 	ldmia.w	r4, {r0, r1}
 801598a:	9006      	str	r0, [sp, #24]
 801598c:	a812      	add	r0, sp, #72	; 0x48
 801598e:	f88d 101c 	strb.w	r1, [sp, #28]
 8015992:	f00d ff51 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8015996:	a80c      	add	r0, sp, #48	; 0x30
 8015998:	f00d ff4e 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 801599c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80159a0:	2300      	movs	r3, #0
 80159a2:	f8c8 3008 	str.w	r3, [r8, #8]
 80159a6:	9b05      	ldr	r3, [sp, #20]
 80159a8:	e883 0003 	stmia.w	r3, {r0, r1}
 80159ac:	4618      	mov	r0, r3
 80159ae:	b019      	add	sp, #100	; 0x64
 80159b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80159b4:	f1ba 0f00 	cmp.w	sl, #0
 80159b8:	d0c2      	beq.n	8015940 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 80159ba:	9b03      	ldr	r3, [sp, #12]
 80159bc:	6819      	ldr	r1, [r3, #0]
 80159be:	a812      	add	r0, sp, #72	; 0x48
 80159c0:	f00e f84d 	bl	8023a5e <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9push_backEw>
 80159c4:	e7bc      	b.n	8015940 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 80159c6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80159ca:	a812      	add	r0, sp, #72	; 0x48
 80159cc:	f00e f94c 	bl	8023c68 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwj>
 80159d0:	e7b6      	b.n	8015940 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 80159d2:	b12e      	cbz	r6, 80159e0 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x21c>
 80159d4:	464a      	mov	r2, r9
 80159d6:	4629      	mov	r1, r5
 80159d8:	a812      	add	r0, sp, #72	; 0x48
 80159da:	f7ff fc7a 	bl	80152d2 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEjw.isra.0>
 80159de:	e7af      	b.n	8015940 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 80159e0:	4649      	mov	r1, r9
 80159e2:	e7ec      	b.n	80159be <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x1fa>
 80159e4:	2e00      	cmp	r6, #0
 80159e6:	d0ab      	beq.n	8015940 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 80159e8:	e7f4      	b.n	80159d4 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x210>
 80159ea:	460a      	mov	r2, r1
 80159ec:	464b      	mov	r3, r9
 80159ee:	2100      	movs	r1, #0
 80159f0:	a812      	add	r0, sp, #72	; 0x48
 80159f2:	f7ff fd0b 	bl	801540c <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6insertEjjw.isra.0>
 80159f6:	e7be      	b.n	8015976 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x1b2>
 80159f8:	460f      	mov	r7, r1
 80159fa:	e7bc      	b.n	8015976 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x1b2>
 80159fc:	0802f63e 	.word	0x0802f63e
 8015a00:	0802f5dc 	.word	0x0802f5dc

08015a04 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE>:
 8015a04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a08:	b099      	sub	sp, #100	; 0x64
 8015a0a:	e9dd 8922 	ldrd	r8, r9, [sp, #136]	; 0x88
 8015a0e:	f108 046c 	add.w	r4, r8, #108	; 0x6c
 8015a12:	a906      	add	r1, sp, #24
 8015a14:	9005      	str	r0, [sp, #20]
 8015a16:	4620      	mov	r0, r4
 8015a18:	e881 000c 	stmia.w	r1, {r2, r3}
 8015a1c:	9f24      	ldr	r7, [sp, #144]	; 0x90
 8015a1e:	f009 f81f 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8015a22:	4606      	mov	r6, r0
 8015a24:	4620      	mov	r0, r4
 8015a26:	f7ff fc5f 	bl	80152e8 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb0EEEclERKSt6locale.isra.0>
 8015a2a:	683d      	ldr	r5, [r7, #0]
 8015a2c:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8015a2e:	682a      	ldr	r2, [r5, #0]
 8015a30:	429a      	cmp	r2, r3
 8015a32:	4604      	mov	r4, r0
 8015a34:	687b      	ldr	r3, [r7, #4]
 8015a36:	d043      	beq.n	8015ac0 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0xbc>
 8015a38:	6b82      	ldr	r2, [r0, #56]	; 0x38
 8015a3a:	9209      	str	r2, [sp, #36]	; 0x24
 8015a3c:	f8d0 a028 	ldr.w	sl, [r0, #40]	; 0x28
 8015a40:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8015a42:	9203      	str	r2, [sp, #12]
 8015a44:	6832      	ldr	r2, [r6, #0]
 8015a46:	4630      	mov	r0, r6
 8015a48:	6957      	ldr	r7, [r2, #20]
 8015a4a:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8015a4e:	462a      	mov	r2, r5
 8015a50:	2104      	movs	r1, #4
 8015a52:	47b8      	blx	r7
 8015a54:	1b40      	subs	r0, r0, r5
 8015a56:	1086      	asrs	r6, r0, #2
 8015a58:	f000 80c0 	beq.w	8015bdc <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x1d8>
 8015a5c:	ab0e      	add	r3, sp, #56	; 0x38
 8015a5e:	f04f 0b00 	mov.w	fp, #0
 8015a62:	0071      	lsls	r1, r6, #1
 8015a64:	a80c      	add	r0, sp, #48	; 0x30
 8015a66:	930c      	str	r3, [sp, #48]	; 0x30
 8015a68:	e9cd bb0d 	strd	fp, fp, [sp, #52]	; 0x34
 8015a6c:	f00d ffc5 	bl	80239fa <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7reserveEj>
 8015a70:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8015a72:	1af7      	subs	r7, r6, r3
 8015a74:	455f      	cmp	r7, fp
 8015a76:	dd31      	ble.n	8015adc <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0xd8>
 8015a78:	68e1      	ldr	r1, [r4, #12]
 8015a7a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015a7c:	455b      	cmp	r3, fp
 8015a7e:	bfb8      	it	lt
 8015a80:	4637      	movlt	r7, r6
 8015a82:	2900      	cmp	r1, #0
 8015a84:	d065      	beq.n	8015b52 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x14e>
 8015a86:	007b      	lsls	r3, r7, #1
 8015a88:	4659      	mov	r1, fp
 8015a8a:	f8cd b000 	str.w	fp, [sp]
 8015a8e:	a80c      	add	r0, sp, #48	; 0x30
 8015a90:	f00e f806 	bl	8023aa0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw>
 8015a94:	eb05 0387 	add.w	r3, r5, r7, lsl #2
 8015a98:	e9cd 5300 	strd	r5, r3, [sp]
 8015a9c:	980c      	ldr	r0, [sp, #48]	; 0x30
 8015a9e:	69a1      	ldr	r1, [r4, #24]
 8015aa0:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
 8015aa4:	f009 f908 	bl	801ecb8 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_>
 8015aa8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015aaa:	1ac0      	subs	r0, r0, r3
 8015aac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015aae:	ebb3 0fa0 	cmp.w	r3, r0, asr #2
 8015ab2:	ea4f 02a0 	mov.w	r2, r0, asr #2
 8015ab6:	d20d      	bcs.n	8015ad4 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0xd0>
 8015ab8:	4960      	ldr	r1, [pc, #384]	; (8015c3c <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x238>)
 8015aba:	4861      	ldr	r0, [pc, #388]	; (8015c40 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x23c>)
 8015abc:	f001 febc 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 8015ac0:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8015ac2:	9209      	str	r2, [sp, #36]	; 0x24
 8015ac4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8015ac6:	f8d0 a030 	ldr.w	sl, [r0, #48]	; 0x30
 8015aca:	9203      	str	r2, [sp, #12]
 8015acc:	2b00      	cmp	r3, #0
 8015ace:	d0b9      	beq.n	8015a44 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x40>
 8015ad0:	3504      	adds	r5, #4
 8015ad2:	e7b7      	b.n	8015a44 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x40>
 8015ad4:	4611      	mov	r1, r2
 8015ad6:	a80c      	add	r0, sp, #48	; 0x30
 8015ad8:	f00d fe84 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 8015adc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8015ade:	2b00      	cmp	r3, #0
 8015ae0:	dd0b      	ble.n	8015afa <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0xf6>
 8015ae2:	6961      	ldr	r1, [r4, #20]
 8015ae4:	a80c      	add	r0, sp, #48	; 0x30
 8015ae6:	f00d ffba 	bl	8023a5e <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9push_backEw>
 8015aea:	2f00      	cmp	r7, #0
 8015aec:	db37      	blt.n	8015b5e <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x15a>
 8015aee:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8015af0:	eb05 0187 	add.w	r1, r5, r7, lsl #2
 8015af4:	a80c      	add	r0, sp, #48	; 0x30
 8015af6:	f00e f8db 	bl	8023cb0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEPKwj>
 8015afa:	f8d8 500c 	ldr.w	r5, [r8, #12]
 8015afe:	f005 03b0 	and.w	r3, r5, #176	; 0xb0
 8015b02:	9304      	str	r3, [sp, #16]
 8015b04:	f415 7500 	ands.w	r5, r5, #512	; 0x200
 8015b08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015b0a:	bf18      	it	ne
 8015b0c:	6a25      	ldrne	r5, [r4, #32]
 8015b0e:	eb0a 0203 	add.w	r2, sl, r3
 8015b12:	4415      	add	r5, r2
 8015b14:	ab14      	add	r3, sp, #80	; 0x50
 8015b16:	2600      	movs	r6, #0
 8015b18:	0069      	lsls	r1, r5, #1
 8015b1a:	a812      	add	r0, sp, #72	; 0x48
 8015b1c:	9312      	str	r3, [sp, #72]	; 0x48
 8015b1e:	e9cd 6613 	strd	r6, r6, [sp, #76]	; 0x4c
 8015b22:	f00d ff6a 	bl	80239fa <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7reserveEj>
 8015b26:	9b04      	ldr	r3, [sp, #16]
 8015b28:	f8d8 7008 	ldr.w	r7, [r8, #8]
 8015b2c:	2b10      	cmp	r3, #16
 8015b2e:	d103      	bne.n	8015b38 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x134>
 8015b30:	42bd      	cmp	r5, r7
 8015b32:	bf2c      	ite	cs
 8015b34:	2600      	movcs	r6, #0
 8015b36:	2601      	movcc	r6, #1
 8015b38:	f04f 0b00 	mov.w	fp, #0
 8015b3c:	1b7d      	subs	r5, r7, r5
 8015b3e:	ab09      	add	r3, sp, #36	; 0x24
 8015b40:	f813 300b 	ldrb.w	r3, [r3, fp]
 8015b44:	2b04      	cmp	r3, #4
 8015b46:	d81b      	bhi.n	8015b80 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 8015b48:	e8df f003 	tbb	[pc, r3]
 8015b4c:	5411636c 	.word	0x5411636c
 8015b50:	5d          	.byte	0x5d
 8015b51:	00          	.byte	0x00
 8015b52:	9700      	str	r7, [sp, #0]
 8015b54:	462b      	mov	r3, r5
 8015b56:	a80c      	add	r0, sp, #48	; 0x30
 8015b58:	f00d fffe 	bl	8023b58 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj>
 8015b5c:	e7be      	b.n	8015adc <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0xd8>
 8015b5e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8015b60:	4279      	negs	r1, r7
 8015b62:	a80c      	add	r0, sp, #48	; 0x30
 8015b64:	f7ff fbb5 	bl	80152d2 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEjw.isra.0>
 8015b68:	4632      	mov	r2, r6
 8015b6a:	4629      	mov	r1, r5
 8015b6c:	e7c2      	b.n	8015af4 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0xf0>
 8015b6e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8015b72:	059b      	lsls	r3, r3, #22
 8015b74:	d504      	bpl.n	8015b80 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 8015b76:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8015b7a:	a812      	add	r0, sp, #72	; 0x48
 8015b7c:	f00e f898 	bl	8023cb0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEPKwj>
 8015b80:	f10b 0b01 	add.w	fp, fp, #1
 8015b84:	f1bb 0f04 	cmp.w	fp, #4
 8015b88:	d1d9      	bne.n	8015b3e <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x13a>
 8015b8a:	f1ba 0f01 	cmp.w	sl, #1
 8015b8e:	d906      	bls.n	8015b9e <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x19a>
 8015b90:	9903      	ldr	r1, [sp, #12]
 8015b92:	f10a 32ff 	add.w	r2, sl, #4294967295	; 0xffffffff
 8015b96:	3104      	adds	r1, #4
 8015b98:	a812      	add	r0, sp, #72	; 0x48
 8015b9a:	f00e f889 	bl	8023cb0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEPKwj>
 8015b9e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8015ba0:	428f      	cmp	r7, r1
 8015ba2:	d949      	bls.n	8015c38 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x234>
 8015ba4:	9b04      	ldr	r3, [sp, #16]
 8015ba6:	2b20      	cmp	r3, #32
 8015ba8:	eba7 0101 	sub.w	r1, r7, r1
 8015bac:	d13d      	bne.n	8015c2a <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x226>
 8015bae:	464a      	mov	r2, r9
 8015bb0:	a812      	add	r0, sp, #72	; 0x48
 8015bb2:	f7ff fb8e 	bl	80152d2 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEjw.isra.0>
 8015bb6:	ac0a      	add	r4, sp, #40	; 0x28
 8015bb8:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8015bbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015bbe:	9700      	str	r7, [sp, #0]
 8015bc0:	4620      	mov	r0, r4
 8015bc2:	f7ff fde5 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 8015bc6:	e894 0003 	ldmia.w	r4, {r0, r1}
 8015bca:	9006      	str	r0, [sp, #24]
 8015bcc:	a812      	add	r0, sp, #72	; 0x48
 8015bce:	f88d 101c 	strb.w	r1, [sp, #28]
 8015bd2:	f00d fe31 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8015bd6:	a80c      	add	r0, sp, #48	; 0x30
 8015bd8:	f00d fe2e 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8015bdc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8015be0:	2300      	movs	r3, #0
 8015be2:	f8c8 3008 	str.w	r3, [r8, #8]
 8015be6:	9b05      	ldr	r3, [sp, #20]
 8015be8:	e883 0003 	stmia.w	r3, {r0, r1}
 8015bec:	4618      	mov	r0, r3
 8015bee:	b019      	add	sp, #100	; 0x64
 8015bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015bf4:	f1ba 0f00 	cmp.w	sl, #0
 8015bf8:	d0c2      	beq.n	8015b80 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 8015bfa:	9b03      	ldr	r3, [sp, #12]
 8015bfc:	6819      	ldr	r1, [r3, #0]
 8015bfe:	a812      	add	r0, sp, #72	; 0x48
 8015c00:	f00d ff2d 	bl	8023a5e <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9push_backEw>
 8015c04:	e7bc      	b.n	8015b80 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 8015c06:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8015c0a:	a812      	add	r0, sp, #72	; 0x48
 8015c0c:	f00e f82c 	bl	8023c68 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwj>
 8015c10:	e7b6      	b.n	8015b80 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 8015c12:	b12e      	cbz	r6, 8015c20 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x21c>
 8015c14:	464a      	mov	r2, r9
 8015c16:	4629      	mov	r1, r5
 8015c18:	a812      	add	r0, sp, #72	; 0x48
 8015c1a:	f7ff fb5a 	bl	80152d2 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEjw.isra.0>
 8015c1e:	e7af      	b.n	8015b80 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 8015c20:	4649      	mov	r1, r9
 8015c22:	e7ec      	b.n	8015bfe <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x1fa>
 8015c24:	2e00      	cmp	r6, #0
 8015c26:	d0ab      	beq.n	8015b80 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x17c>
 8015c28:	e7f4      	b.n	8015c14 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x210>
 8015c2a:	460a      	mov	r2, r1
 8015c2c:	464b      	mov	r3, r9
 8015c2e:	2100      	movs	r1, #0
 8015c30:	a812      	add	r0, sp, #72	; 0x48
 8015c32:	f7ff fbeb 	bl	801540c <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6insertEjjw.isra.0>
 8015c36:	e7be      	b.n	8015bb6 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x1b2>
 8015c38:	460f      	mov	r7, r1
 8015c3a:	e7bc      	b.n	8015bb6 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x1b2>
 8015c3c:	0802f63e 	.word	0x0802f63e
 8015c40:	0802f5dc 	.word	0x0802f5dc

08015c44 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES4_bRSt8ios_basewe>:
 8015c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c48:	ed2d 8b02 	vpush	{d8}
 8015c4c:	eeb0 8a40 	vmov.f32	s16, s0
 8015c50:	eef0 8a60 	vmov.f32	s17, s1
 8015c54:	b091      	sub	sp, #68	; 0x44
 8015c56:	af04      	add	r7, sp, #16
 8015c58:	f107 0408 	add.w	r4, r7, #8
 8015c5c:	e884 000c 	stmia.w	r4, {r2, r3}
 8015c60:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8015c62:	f897 b060 	ldrb.w	fp, [r7, #96]	; 0x60
 8015c66:	4605      	mov	r5, r0
 8015c68:	4688      	mov	r8, r1
 8015c6a:	f107 0014 	add.w	r0, r7, #20
 8015c6e:	f103 016c 	add.w	r1, r3, #108	; 0x6c
 8015c72:	f7f6 fb1b 	bl	800c2ac <_ZNSt6localeC1ERKS_>
 8015c76:	f107 0014 	add.w	r0, r7, #20
 8015c7a:	f008 fef1 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8015c7e:	b090      	sub	sp, #64	; 0x40
 8015c80:	4681      	mov	r9, r0
 8015c82:	f7f6 fb2b 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8015c86:	ae04      	add	r6, sp, #16
 8015c88:	f04f 0a00 	mov.w	sl, #0
 8015c8c:	61b8      	str	r0, [r7, #24]
 8015c8e:	4631      	mov	r1, r6
 8015c90:	ed8d 8b02 	vstr	d8, [sp, #8]
 8015c94:	4b29      	ldr	r3, [pc, #164]	; (8015d3c <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES4_bRSt8ios_basewe+0xf8>)
 8015c96:	f8cd a000 	str.w	sl, [sp]
 8015c9a:	2240      	movs	r2, #64	; 0x40
 8015c9c:	f107 0018 	add.w	r0, r7, #24
 8015ca0:	f7fb fc14 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 8015ca4:	283f      	cmp	r0, #63	; 0x3f
 8015ca6:	4601      	mov	r1, r0
 8015ca8:	dd16      	ble.n	8015cd8 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES4_bRSt8ios_basewe+0x94>
 8015caa:	3108      	adds	r1, #8
 8015cac:	f021 0107 	bic.w	r1, r1, #7
 8015cb0:	ebad 0d01 	sub.w	sp, sp, r1
 8015cb4:	1c42      	adds	r2, r0, #1
 8015cb6:	607a      	str	r2, [r7, #4]
 8015cb8:	f7f6 fb10 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8015cbc:	ae04      	add	r6, sp, #16
 8015cbe:	61b8      	str	r0, [r7, #24]
 8015cc0:	4631      	mov	r1, r6
 8015cc2:	ed8d 8b02 	vstr	d8, [sp, #8]
 8015cc6:	4b1d      	ldr	r3, [pc, #116]	; (8015d3c <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES4_bRSt8ios_basewe+0xf8>)
 8015cc8:	687a      	ldr	r2, [r7, #4]
 8015cca:	f8cd a000 	str.w	sl, [sp]
 8015cce:	f107 0018 	add.w	r0, r7, #24
 8015cd2:	f7fb fbfb 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 8015cd6:	4601      	mov	r1, r0
 8015cd8:	f107 0320 	add.w	r3, r7, #32
 8015cdc:	2200      	movs	r2, #0
 8015cde:	f107 0018 	add.w	r0, r7, #24
 8015ce2:	61bb      	str	r3, [r7, #24]
 8015ce4:	6079      	str	r1, [r7, #4]
 8015ce6:	f00d fdff 	bl	80238e8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructEjw>
 8015cea:	6879      	ldr	r1, [r7, #4]
 8015cec:	69bb      	ldr	r3, [r7, #24]
 8015cee:	1872      	adds	r2, r6, r1
 8015cf0:	4648      	mov	r0, r9
 8015cf2:	4631      	mov	r1, r6
 8015cf4:	f7ff fd42 	bl	801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>
 8015cf8:	f107 0318 	add.w	r3, r7, #24
 8015cfc:	9302      	str	r3, [sp, #8]
 8015cfe:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8015d00:	9301      	str	r3, [sp, #4]
 8015d02:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8015d04:	9300      	str	r3, [sp, #0]
 8015d06:	4641      	mov	r1, r8
 8015d08:	e894 000c 	ldmia.w	r4, {r2, r3}
 8015d0c:	4628      	mov	r0, r5
 8015d0e:	f1bb 0f00 	cmp.w	fp, #0
 8015d12:	d010      	beq.n	8015d36 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES4_bRSt8ios_basewe+0xf2>
 8015d14:	f7ff fd56 	bl	80157c4 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE>
 8015d18:	f107 0018 	add.w	r0, r7, #24
 8015d1c:	f00d fd8c 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8015d20:	f107 0014 	add.w	r0, r7, #20
 8015d24:	f7f6 fb30 	bl	800c388 <_ZNSt6localeD1Ev>
 8015d28:	4628      	mov	r0, r5
 8015d2a:	3734      	adds	r7, #52	; 0x34
 8015d2c:	46bd      	mov	sp, r7
 8015d2e:	ecbd 8b02 	vpop	{d8}
 8015d32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d36:	f7ff fe65 	bl	8015a04 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE>
 8015d3a:	e7ed      	b.n	8015d18 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES4_bRSt8ios_basewe+0xd4>
 8015d3c:	0802f7f2 	.word	0x0802f7f2

08015d40 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES4_bRSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE>:
 8015d40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015d42:	b087      	sub	sp, #28
 8015d44:	ac04      	add	r4, sp, #16
 8015d46:	e884 000c 	stmia.w	r4, {r2, r3}
 8015d4a:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8015d4e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015d50:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8015d54:	9300      	str	r3, [sp, #0]
 8015d56:	e9cd 2601 	strd	r2, r6, [sp, #4]
 8015d5a:	4605      	mov	r5, r0
 8015d5c:	e894 000c 	ldmia.w	r4, {r2, r3}
 8015d60:	b127      	cbz	r7, 8015d6c <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES4_bRSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x2c>
 8015d62:	f7ff fd2f 	bl	80157c4 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE>
 8015d66:	4628      	mov	r0, r5
 8015d68:	b007      	add	sp, #28
 8015d6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015d6c:	f7ff fe4a 	bl	8015a04 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES4_S4_RSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE>
 8015d70:	e7f9      	b.n	8015d66 <_ZNKSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES4_bRSt8ios_basewRKNS_12basic_stringIwS3_SaIwEEE+0x26>

08015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>:
 8015d72:	6803      	ldr	r3, [r0, #0]
 8015d74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015d76:	4718      	bx	r3

08015d78 <_ZNKSt21__ctype_abstract_baseIwE7toupperEw>:
 8015d78:	6803      	ldr	r3, [r0, #0]
 8015d7a:	699b      	ldr	r3, [r3, #24]
 8015d7c:	4718      	bx	r3

08015d7e <_ZNKSt21__ctype_abstract_baseIwE5widenEc>:
 8015d7e:	6803      	ldr	r3, [r0, #0]
 8015d80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015d82:	4718      	bx	r3

08015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>:
 8015d84:	b510      	push	{r4, lr}
 8015d86:	4604      	mov	r4, r0
 8015d88:	e9d0 3000 	ldrd	r3, r0, [r0]
 8015d8c:	b143      	cbz	r3, 8015da0 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv+0x1c>
 8015d8e:	1c42      	adds	r2, r0, #1
 8015d90:	d106      	bne.n	8015da0 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv+0x1c>
 8015d92:	4618      	mov	r0, r3
 8015d94:	f007 fd90 	bl	801d8b8 <_ZNSt15basic_streambufIwSt11char_traitsIwEE5sgetcEv>
 8015d98:	1c43      	adds	r3, r0, #1
 8015d9a:	bf04      	itt	eq
 8015d9c:	2300      	moveq	r3, #0
 8015d9e:	6023      	streq	r3, [r4, #0]
 8015da0:	bd10      	pop	{r4, pc}

08015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>:
 8015da2:	b538      	push	{r3, r4, r5, lr}
 8015da4:	460d      	mov	r5, r1
 8015da6:	f7ff ffed 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8015daa:	4604      	mov	r4, r0
 8015dac:	4628      	mov	r0, r5
 8015dae:	f7ff ffe9 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8015db2:	1c43      	adds	r3, r0, #1
 8015db4:	4258      	negs	r0, r3
 8015db6:	f104 0201 	add.w	r2, r4, #1
 8015dba:	4158      	adcs	r0, r3
 8015dbc:	4254      	negs	r4, r2
 8015dbe:	4154      	adcs	r4, r2
 8015dc0:	1b01      	subs	r1, r0, r4
 8015dc2:	4248      	negs	r0, r1
 8015dc4:	4148      	adcs	r0, r1
 8015dc6:	bd38      	pop	{r3, r4, r5, pc}

08015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>:
 8015dc8:	b508      	push	{r3, lr}
 8015dca:	f7ff ffea 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8015dce:	f080 0001 	eor.w	r0, r0, #1
 8015dd2:	b2c0      	uxtb	r0, r0
 8015dd4:	bd08      	pop	{r3, pc}

08015dd6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>:
 8015dd6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dda:	4605      	mov	r5, r0
 8015ddc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8015de0:	a902      	add	r1, sp, #8
 8015de2:	306c      	adds	r0, #108	; 0x6c
 8015de4:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 8015de8:	e901 000c 	stmdb	r1, {r2, r3}
 8015dec:	f008 fe38 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8015df0:	f1b9 0f02 	cmp.w	r9, #2
 8015df4:	4682      	mov	sl, r0
 8015df6:	d02f      	beq.n	8015e58 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x82>
 8015df8:	f1b9 0f04 	cmp.w	r9, #4
 8015dfc:	bf0c      	ite	eq
 8015dfe:	f44f 777a 	moveq.w	r7, #1000	; 0x3e8
 8015e02:	2701      	movne	r7, #1
 8015e04:	2400      	movs	r4, #0
 8015e06:	46a0      	mov	r8, r4
 8015e08:	f04f 0b0a 	mov.w	fp, #10
 8015e0c:	a90c      	add	r1, sp, #48	; 0x30
 8015e0e:	4668      	mov	r0, sp
 8015e10:	f7ff ffda 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8015e14:	b310      	cbz	r0, 8015e5c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x86>
 8015e16:	45c8      	cmp	r8, r9
 8015e18:	d022      	beq.n	8015e60 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x8a>
 8015e1a:	4668      	mov	r0, sp
 8015e1c:	f7ff ffb2 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8015e20:	222a      	movs	r2, #42	; 0x2a
 8015e22:	4601      	mov	r1, r0
 8015e24:	4650      	mov	r0, sl
 8015e26:	f7ff ffa4 	bl	8015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>
 8015e2a:	3830      	subs	r0, #48	; 0x30
 8015e2c:	b2c2      	uxtb	r2, r0
 8015e2e:	2a09      	cmp	r2, #9
 8015e30:	d821      	bhi.n	8015e76 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 8015e32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e34:	fb0b 0404 	mla	r4, fp, r4, r0
 8015e38:	fb04 f207 	mul.w	r2, r4, r7
 8015e3c:	429a      	cmp	r2, r3
 8015e3e:	dc1a      	bgt.n	8015e76 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 8015e40:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015e42:	443a      	add	r2, r7
 8015e44:	429a      	cmp	r2, r3
 8015e46:	dd16      	ble.n	8015e76 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 8015e48:	fbb7 f7fb 	udiv	r7, r7, fp
 8015e4c:	4668      	mov	r0, sp
 8015e4e:	f7ff fa9f 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8015e52:	f108 0801 	add.w	r8, r8, #1
 8015e56:	e7d9      	b.n	8015e0c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x36>
 8015e58:	270a      	movs	r7, #10
 8015e5a:	e7d3      	b.n	8015e04 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x2e>
 8015e5c:	45c8      	cmp	r8, r9
 8015e5e:	d10a      	bne.n	8015e76 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 8015e60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015e62:	601c      	str	r4, [r3, #0]
 8015e64:	ab02      	add	r3, sp, #8
 8015e66:	e913 0003 	ldmdb	r3, {r0, r1}
 8015e6a:	e885 0003 	stmia.w	r5, {r0, r1}
 8015e6e:	4628      	mov	r0, r5
 8015e70:	b003      	add	sp, #12
 8015e72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e76:	f1b9 0f04 	cmp.w	r9, #4
 8015e7a:	d104      	bne.n	8015e86 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xb0>
 8015e7c:	f1b8 0f02 	cmp.w	r8, #2
 8015e80:	d101      	bne.n	8015e86 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xb0>
 8015e82:	3c64      	subs	r4, #100	; 0x64
 8015e84:	e7ec      	b.n	8015e60 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x8a>
 8015e86:	6833      	ldr	r3, [r6, #0]
 8015e88:	f043 0304 	orr.w	r3, r3, #4
 8015e8c:	6033      	str	r3, [r6, #0]
 8015e8e:	e7e9      	b.n	8015e64 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x8e>

08015e90 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>:
 8015e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e94:	b085      	sub	sp, #20
 8015e96:	af00      	add	r7, sp, #0
 8015e98:	4680      	mov	r8, r0
 8015e9a:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8015e9c:	f8d7 9044 	ldr.w	r9, [r7, #68]	; 0x44
 8015ea0:	f107 0408 	add.w	r4, r7, #8
 8015ea4:	306c      	adds	r0, #108	; 0x6c
 8015ea6:	e884 000c 	stmia.w	r4, {r2, r3}
 8015eaa:	f008 fdd9 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8015eae:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8015eb0:	009b      	lsls	r3, r3, #2
 8015eb2:	3307      	adds	r3, #7
 8015eb4:	f023 0307 	bic.w	r3, r3, #7
 8015eb8:	4682      	mov	sl, r0
 8015eba:	ebad 0d03 	sub.w	sp, sp, r3
 8015ebe:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8015ec2:	4620      	mov	r0, r4
 8015ec4:	466e      	mov	r6, sp
 8015ec6:	f7ff ff7f 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8015eca:	2800      	cmp	r0, #0
 8015ecc:	d07f      	beq.n	8015fce <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x13e>
 8015ece:	4620      	mov	r0, r4
 8015ed0:	f7ff ff58 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8015ed4:	f04f 0b00 	mov.w	fp, #0
 8015ed8:	4602      	mov	r2, r0
 8015eda:	465d      	mov	r5, fp
 8015edc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8015ede:	459b      	cmp	fp, r3
 8015ee0:	d012      	beq.n	8015f08 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x78>
 8015ee2:	f859 102b 	ldr.w	r1, [r9, fp, lsl #2]
 8015ee6:	6809      	ldr	r1, [r1, #0]
 8015ee8:	4291      	cmp	r1, r2
 8015eea:	d105      	bne.n	8015ef8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x68>
 8015eec:	f846 b025 	str.w	fp, [r6, r5, lsl #2]
 8015ef0:	3501      	adds	r5, #1
 8015ef2:	f10b 0b01 	add.w	fp, fp, #1
 8015ef6:	e7f1      	b.n	8015edc <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x4c>
 8015ef8:	4650      	mov	r0, sl
 8015efa:	607a      	str	r2, [r7, #4]
 8015efc:	f7ff ff3c 	bl	8015d78 <_ZNKSt21__ctype_abstract_baseIwE7toupperEw>
 8015f00:	687a      	ldr	r2, [r7, #4]
 8015f02:	4290      	cmp	r0, r2
 8015f04:	d1f5      	bne.n	8015ef2 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x62>
 8015f06:	e7f1      	b.n	8015eec <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x5c>
 8015f08:	f04f 0a00 	mov.w	sl, #0
 8015f0c:	2d01      	cmp	r5, #1
 8015f0e:	d940      	bls.n	8015f92 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x102>
 8015f10:	6833      	ldr	r3, [r6, #0]
 8015f12:	f859 0023 	ldr.w	r0, [r9, r3, lsl #2]
 8015f16:	f014 fa95 	bl	802a444 <wcslen>
 8015f1a:	2201      	movs	r2, #1
 8015f1c:	4683      	mov	fp, r0
 8015f1e:	f856 1022 	ldr.w	r1, [r6, r2, lsl #2]
 8015f22:	607a      	str	r2, [r7, #4]
 8015f24:	f859 0021 	ldr.w	r0, [r9, r1, lsl #2]
 8015f28:	f014 fa8c 	bl	802a444 <wcslen>
 8015f2c:	687a      	ldr	r2, [r7, #4]
 8015f2e:	4583      	cmp	fp, r0
 8015f30:	f102 0201 	add.w	r2, r2, #1
 8015f34:	bf28      	it	cs
 8015f36:	4683      	movcs	fp, r0
 8015f38:	4295      	cmp	r5, r2
 8015f3a:	d1f0      	bne.n	8015f1e <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x8e>
 8015f3c:	4620      	mov	r0, r4
 8015f3e:	f10a 0a01 	add.w	sl, sl, #1
 8015f42:	f7ff fa25 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8015f46:	45da      	cmp	sl, fp
 8015f48:	d241      	bcs.n	8015fce <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x13e>
 8015f4a:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8015f4e:	4620      	mov	r0, r4
 8015f50:	f7ff ff3a 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8015f54:	2800      	cmp	r0, #0
 8015f56:	d03a      	beq.n	8015fce <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x13e>
 8015f58:	ea4f 028a 	mov.w	r2, sl, lsl #2
 8015f5c:	f04f 0b00 	mov.w	fp, #0
 8015f60:	f856 102b 	ldr.w	r1, [r6, fp, lsl #2]
 8015f64:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8015f68:	5889      	ldr	r1, [r1, r2]
 8015f6a:	4620      	mov	r0, r4
 8015f6c:	e9c7 2100 	strd	r2, r1, [r7]
 8015f70:	f7ff ff08 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8015f74:	6879      	ldr	r1, [r7, #4]
 8015f76:	683a      	ldr	r2, [r7, #0]
 8015f78:	4281      	cmp	r1, r0
 8015f7a:	bf17      	itett	ne
 8015f7c:	f105 35ff 	addne.w	r5, r5, #4294967295	; 0xffffffff
 8015f80:	f10b 0b01 	addeq.w	fp, fp, #1
 8015f84:	f856 1025 	ldrne.w	r1, [r6, r5, lsl #2]
 8015f88:	f846 102b 	strne.w	r1, [r6, fp, lsl #2]
 8015f8c:	455d      	cmp	r5, fp
 8015f8e:	d8e7      	bhi.n	8015f60 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xd0>
 8015f90:	e7bc      	b.n	8015f0c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x7c>
 8015f92:	d11c      	bne.n	8015fce <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x13e>
 8015f94:	4620      	mov	r0, r4
 8015f96:	f7ff f9fb 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8015f9a:	6836      	ldr	r6, [r6, #0]
 8015f9c:	f859 9026 	ldr.w	r9, [r9, r6, lsl #2]
 8015fa0:	4648      	mov	r0, r9
 8015fa2:	f014 fa4f 	bl	802a444 <wcslen>
 8015fa6:	f10a 0a01 	add.w	sl, sl, #1
 8015faa:	4605      	mov	r5, r0
 8015fac:	45aa      	cmp	sl, r5
 8015fae:	d21d      	bcs.n	8015fec <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x15c>
 8015fb0:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8015fb4:	4620      	mov	r0, r4
 8015fb6:	f7ff ff07 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8015fba:	b140      	cbz	r0, 8015fce <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x13e>
 8015fbc:	f859 302a 	ldr.w	r3, [r9, sl, lsl #2]
 8015fc0:	607b      	str	r3, [r7, #4]
 8015fc2:	4620      	mov	r0, r4
 8015fc4:	f7ff fede 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8015fc8:	687b      	ldr	r3, [r7, #4]
 8015fca:	4283      	cmp	r3, r0
 8015fcc:	d012      	beq.n	8015ff4 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x164>
 8015fce:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8015fd0:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8015fd2:	681b      	ldr	r3, [r3, #0]
 8015fd4:	f043 0304 	orr.w	r3, r3, #4
 8015fd8:	6013      	str	r3, [r2, #0]
 8015fda:	e894 0003 	ldmia.w	r4, {r0, r1}
 8015fde:	3714      	adds	r7, #20
 8015fe0:	e888 0003 	stmia.w	r8, {r0, r1}
 8015fe4:	4640      	mov	r0, r8
 8015fe6:	46bd      	mov	sp, r7
 8015fe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015fec:	d1ef      	bne.n	8015fce <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x13e>
 8015fee:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8015ff0:	601e      	str	r6, [r3, #0]
 8015ff2:	e7f2      	b.n	8015fda <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x14a>
 8015ff4:	4620      	mov	r0, r4
 8015ff6:	f7ff f9cb 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8015ffa:	f10a 0a01 	add.w	sl, sl, #1
 8015ffe:	e7d5      	b.n	8015fac <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x11c>

08016000 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>:
 8016000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016004:	b085      	sub	sp, #20
 8016006:	af00      	add	r7, sp, #0
 8016008:	4680      	mov	r8, r0
 801600a:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 801600c:	f8d7 a044 	ldr.w	sl, [r7, #68]	; 0x44
 8016010:	f107 0908 	add.w	r9, r7, #8
 8016014:	306c      	adds	r0, #108	; 0x6c
 8016016:	e889 000c 	stmia.w	r9, {r2, r3}
 801601a:	f008 fd21 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 801601e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8016020:	466a      	mov	r2, sp
 8016022:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 8016026:	4683      	mov	fp, r0
 8016028:	469d      	mov	sp, r3
 801602a:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801602e:	4648      	mov	r0, r9
 8016030:	466c      	mov	r4, sp
 8016032:	f7ff fec9 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8016036:	b3b0      	cbz	r0, 80160a6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xa6>
 8016038:	4648      	mov	r0, r9
 801603a:	f7ff fea3 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 801603e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8016040:	2600      	movs	r6, #0
 8016042:	4603      	mov	r3, r0
 8016044:	0052      	lsls	r2, r2, #1
 8016046:	4635      	mov	r5, r6
 8016048:	42b2      	cmp	r2, r6
 801604a:	d013      	beq.n	8016074 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x74>
 801604c:	f85a 1026 	ldr.w	r1, [sl, r6, lsl #2]
 8016050:	6809      	ldr	r1, [r1, #0]
 8016052:	4299      	cmp	r1, r3
 8016054:	d104      	bne.n	8016060 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x60>
 8016056:	f844 6025 	str.w	r6, [r4, r5, lsl #2]
 801605a:	3501      	adds	r5, #1
 801605c:	3601      	adds	r6, #1
 801605e:	e7f3      	b.n	8016048 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x48>
 8016060:	4658      	mov	r0, fp
 8016062:	e9c7 3200 	strd	r3, r2, [r7]
 8016066:	f7ff fe87 	bl	8015d78 <_ZNKSt21__ctype_abstract_baseIwE7toupperEw>
 801606a:	683b      	ldr	r3, [r7, #0]
 801606c:	687a      	ldr	r2, [r7, #4]
 801606e:	4298      	cmp	r0, r3
 8016070:	d1f4      	bne.n	801605c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x5c>
 8016072:	e7f0      	b.n	8016056 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x56>
 8016074:	b1bd      	cbz	r5, 80160a6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xa6>
 8016076:	4648      	mov	r0, r9
 8016078:	f7ff f98a 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 801607c:	00ab      	lsls	r3, r5, #2
 801607e:	3307      	adds	r3, #7
 8016080:	f023 0307 	bic.w	r3, r3, #7
 8016084:	ebad 0d03 	sub.w	sp, sp, r3
 8016088:	46e9      	mov	r9, sp
 801608a:	2600      	movs	r6, #0
 801608c:	f854 3026 	ldr.w	r3, [r4, r6, lsl #2]
 8016090:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8016094:	f014 f9d6 	bl	802a444 <wcslen>
 8016098:	f849 0026 	str.w	r0, [r9, r6, lsl #2]
 801609c:	3601      	adds	r6, #1
 801609e:	42b5      	cmp	r5, r6
 80160a0:	d1f4      	bne.n	801608c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x8c>
 80160a2:	2501      	movs	r5, #1
 80160a4:	e002      	b.n	80160ac <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xac>
 80160a6:	2600      	movs	r6, #0
 80160a8:	4635      	mov	r5, r6
 80160aa:	46b1      	mov	r9, r6
 80160ac:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80160b0:	f107 0008 	add.w	r0, r7, #8
 80160b4:	f7ff fe88 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80160b8:	b370      	cbz	r0, 8016118 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x118>
 80160ba:	f107 0008 	add.w	r0, r7, #8
 80160be:	f7ff fe61 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80160c2:	2300      	movs	r3, #0
 80160c4:	4683      	mov	fp, r0
 80160c6:	ea4f 0e85 	mov.w	lr, r5, lsl #2
 80160ca:	4619      	mov	r1, r3
 80160cc:	429e      	cmp	r6, r3
 80160ce:	d91b      	bls.n	8016108 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x108>
 80160d0:	f859 2023 	ldr.w	r2, [r9, r3, lsl #2]
 80160d4:	42aa      	cmp	r2, r5
 80160d6:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 80160da:	eb09 0083 	add.w	r0, r9, r3, lsl #2
 80160de:	d802      	bhi.n	80160e6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xe6>
 80160e0:	3101      	adds	r1, #1
 80160e2:	3301      	adds	r3, #1
 80160e4:	e7f2      	b.n	80160cc <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xcc>
 80160e6:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
 80160ea:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 80160ee:	f852 200e 	ldr.w	r2, [r2, lr]
 80160f2:	455a      	cmp	r2, fp
 80160f4:	d0f5      	beq.n	80160e2 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xe2>
 80160f6:	3e01      	subs	r6, #1
 80160f8:	f854 2026 	ldr.w	r2, [r4, r6, lsl #2]
 80160fc:	f844 200c 	str.w	r2, [r4, ip]
 8016100:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8016104:	6002      	str	r2, [r0, #0]
 8016106:	e7e1      	b.n	80160cc <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xcc>
 8016108:	428e      	cmp	r6, r1
 801610a:	d005      	beq.n	8016118 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x118>
 801610c:	f107 0008 	add.w	r0, r7, #8
 8016110:	f7ff f93e 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8016114:	3501      	adds	r5, #1
 8016116:	e7c9      	b.n	80160ac <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xac>
 8016118:	2e01      	cmp	r6, #1
 801611a:	d115      	bne.n	8016148 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x148>
 801611c:	f8d9 3000 	ldr.w	r3, [r9]
 8016120:	42ab      	cmp	r3, r5
 8016122:	d11a      	bne.n	801615a <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x15a>
 8016124:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8016126:	6823      	ldr	r3, [r4, #0]
 8016128:	4293      	cmp	r3, r2
 801612a:	bfa8      	it	ge
 801612c:	1a9b      	subge	r3, r3, r2
 801612e:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8016130:	6013      	str	r3, [r2, #0]
 8016132:	f107 0310 	add.w	r3, r7, #16
 8016136:	e913 0003 	ldmdb	r3, {r0, r1}
 801613a:	3714      	adds	r7, #20
 801613c:	e888 0003 	stmia.w	r8, {r0, r1}
 8016140:	4640      	mov	r0, r8
 8016142:	46bd      	mov	sp, r7
 8016144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016148:	2e02      	cmp	r6, #2
 801614a:	d106      	bne.n	801615a <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x15a>
 801614c:	f8d9 3000 	ldr.w	r3, [r9]
 8016150:	42ab      	cmp	r3, r5
 8016152:	d0e7      	beq.n	8016124 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x124>
 8016154:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8016158:	e7e2      	b.n	8016120 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x120>
 801615a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801615c:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 801615e:	681b      	ldr	r3, [r3, #0]
 8016160:	f043 0304 	orr.w	r3, r3, #4
 8016164:	e7e4      	b.n	8016130 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x130>
	...

08016168 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw>:
 8016168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801616c:	b09f      	sub	sp, #124	; 0x7c
 801616e:	460c      	mov	r4, r1
 8016170:	f8dd a0a8 	ldr.w	sl, [sp, #168]	; 0xa8
 8016174:	900b      	str	r0, [sp, #44]	; 0x2c
 8016176:	f10a 056c 	add.w	r5, sl, #108	; 0x6c
 801617a:	a90e      	add	r1, sp, #56	; 0x38
 801617c:	4628      	mov	r0, r5
 801617e:	e881 000c 	stmia.w	r1, {r2, r3}
 8016182:	f8dd 80b0 	ldr.w	r8, [sp, #176]	; 0xb0
 8016186:	f008 fd1f 	bl	801ebc8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale>
 801618a:	4683      	mov	fp, r0
 801618c:	4628      	mov	r0, r5
 801618e:	f008 fc67 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8016192:	4605      	mov	r5, r0
 8016194:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8016196:	f014 f955 	bl	802a444 <wcslen>
 801619a:	2600      	movs	r6, #0
 801619c:	900a      	str	r0, [sp, #40]	; 0x28
 801619e:	9610      	str	r6, [sp, #64]	; 0x40
 80161a0:	a928      	add	r1, sp, #160	; 0xa0
 80161a2:	a80e      	add	r0, sp, #56	; 0x38
 80161a4:	f7ff fe10 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80161a8:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
 80161ac:	2800      	cmp	r0, #0
 80161ae:	d065      	beq.n	801627c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x114>
 80161b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80161b2:	429e      	cmp	r6, r3
 80161b4:	d262      	bcs.n	801627c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x114>
 80161b6:	f1b9 0f00 	cmp.w	r9, #0
 80161ba:	d163      	bne.n	8016284 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x11c>
 80161bc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80161be:	464a      	mov	r2, r9
 80161c0:	f853 1026 	ldr.w	r1, [r3, r6, lsl #2]
 80161c4:	4628      	mov	r0, r5
 80161c6:	eb03 0786 	add.w	r7, r3, r6, lsl #2
 80161ca:	f7ff fdd2 	bl	8015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>
 80161ce:	2825      	cmp	r0, #37	; 0x25
 80161d0:	f040 82a5 	bne.w	801671e <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5b6>
 80161d4:	1c73      	adds	r3, r6, #1
 80161d6:	6879      	ldr	r1, [r7, #4]
 80161d8:	9309      	str	r3, [sp, #36]	; 0x24
 80161da:	464a      	mov	r2, r9
 80161dc:	4628      	mov	r0, r5
 80161de:	f7ff fdc8 	bl	8015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>
 80161e2:	2845      	cmp	r0, #69	; 0x45
 80161e4:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
 80161e8:	d001      	beq.n	80161ee <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x86>
 80161ea:	284f      	cmp	r0, #79	; 0x4f
 80161ec:	d106      	bne.n	80161fc <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x94>
 80161ee:	1cb3      	adds	r3, r6, #2
 80161f0:	68b9      	ldr	r1, [r7, #8]
 80161f2:	9309      	str	r3, [sp, #36]	; 0x24
 80161f4:	2200      	movs	r2, #0
 80161f6:	4628      	mov	r0, r5
 80161f8:	f7ff fdbb 	bl	8015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>
 80161fc:	3841      	subs	r0, #65	; 0x41
 80161fe:	ae0e      	add	r6, sp, #56	; 0x38
 8016200:	2838      	cmp	r0, #56	; 0x38
 8016202:	f200 8287 	bhi.w	8016714 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5ac>
 8016206:	e8df f010 	tbh	[pc, r0, lsl #1]
 801620a:	006a      	.short	0x006a
 801620c:	01d80095 	.word	0x01d80095
 8016210:	028500ee 	.word	0x028500ee
 8016214:	02850285 	.word	0x02850285
 8016218:	011800f4 	.word	0x011800f4
 801621c:	02850285 	.word	0x02850285
 8016220:	01470285 	.word	0x01470285
 8016224:	02850285 	.word	0x02850285
 8016228:	02850285 	.word	0x02850285
 801622c:	019a017b 	.word	0x019a017b
 8016230:	028501c8 	.word	0x028501c8
 8016234:	02850285 	.word	0x02850285
 8016238:	01d801d3 	.word	0x01d801d3
 801623c:	02850202 	.word	0x02850202
 8016240:	02850285 	.word	0x02850285
 8016244:	02850285 	.word	0x02850285
 8016248:	00440285 	.word	0x00440285
 801624c:	009b0070 	.word	0x009b0070
 8016250:	00c400a1 	.word	0x00c400a1
 8016254:	02850285 	.word	0x02850285
 8016258:	02850070 	.word	0x02850070
 801625c:	02850285 	.word	0x02850285
 8016260:	01230285 	.word	0x01230285
 8016264:	0285016c 	.word	0x0285016c
 8016268:	02850285 	.word	0x02850285
 801626c:	02850285 	.word	0x02850285
 8016270:	028501be 	.word	0x028501be
 8016274:	02850285 	.word	0x02850285
 8016278:	01d801cc 	.word	0x01d801cc
 801627c:	f1b9 0f00 	cmp.w	r9, #0
 8016280:	f000 825e 	beq.w	8016740 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5d8>
 8016284:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016286:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016288:	681b      	ldr	r3, [r3, #0]
 801628a:	f043 0304 	orr.w	r3, r3, #4
 801628e:	6013      	str	r3, [r2, #0]
 8016290:	e25a      	b.n	8016748 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5e0>
 8016292:	ae12      	add	r6, sp, #72	; 0x48
 8016294:	4631      	mov	r1, r6
 8016296:	4658      	mov	r0, fp
 8016298:	f008 face 	bl	801e838 <_ZNKSt11__timepunctIwE19_M_days_abbreviatedEPPKw>
 801629c:	ab10      	add	r3, sp, #64	; 0x40
 801629e:	e9cd a305 	strd	sl, r3, [sp, #20]
 80162a2:	2307      	movs	r3, #7
 80162a4:	e9cd 6303 	strd	r6, r3, [sp, #12]
 80162a8:	ab11      	add	r3, sp, #68	; 0x44
 80162aa:	9302      	str	r3, [sp, #8]
 80162ac:	ab28      	add	r3, sp, #160	; 0xa0
 80162ae:	e893 0003 	ldmia.w	r3, {r0, r1}
 80162b2:	e88d 0003 	stmia.w	sp, {r0, r1}
 80162b6:	af0c      	add	r7, sp, #48	; 0x30
 80162b8:	ae0e      	add	r6, sp, #56	; 0x38
 80162ba:	e896 000c 	ldmia.w	r6, {r2, r3}
 80162be:	4621      	mov	r1, r4
 80162c0:	4638      	mov	r0, r7
 80162c2:	f7ff fde5 	bl	8015e90 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>
 80162c6:	e897 0003 	ldmia.w	r7, {r0, r1}
 80162ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80162cc:	e886 0003 	stmia.w	r6, {r0, r1}
 80162d0:	b913      	cbnz	r3, 80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 80162d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80162d4:	f8c8 3018 	str.w	r3, [r8, #24]
 80162d8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80162da:	3601      	adds	r6, #1
 80162dc:	e760      	b.n	80161a0 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x38>
 80162de:	ae12      	add	r6, sp, #72	; 0x48
 80162e0:	4631      	mov	r1, r6
 80162e2:	4658      	mov	r0, fp
 80162e4:	f008 fa98 	bl	801e818 <_ZNKSt11__timepunctIwE7_M_daysEPPKw>
 80162e8:	e7d8      	b.n	801629c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x134>
 80162ea:	ae12      	add	r6, sp, #72	; 0x48
 80162ec:	4631      	mov	r1, r6
 80162ee:	4658      	mov	r0, fp
 80162f0:	f008 fad1 	bl	801e896 <_ZNKSt11__timepunctIwE21_M_months_abbreviatedEPPKw>
 80162f4:	ab10      	add	r3, sp, #64	; 0x40
 80162f6:	e9cd a305 	strd	sl, r3, [sp, #20]
 80162fa:	230c      	movs	r3, #12
 80162fc:	e9cd 6303 	strd	r6, r3, [sp, #12]
 8016300:	ab11      	add	r3, sp, #68	; 0x44
 8016302:	9302      	str	r3, [sp, #8]
 8016304:	ab28      	add	r3, sp, #160	; 0xa0
 8016306:	e893 0003 	ldmia.w	r3, {r0, r1}
 801630a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801630e:	af0c      	add	r7, sp, #48	; 0x30
 8016310:	ae0e      	add	r6, sp, #56	; 0x38
 8016312:	e896 000c 	ldmia.w	r6, {r2, r3}
 8016316:	4621      	mov	r1, r4
 8016318:	4638      	mov	r0, r7
 801631a:	f7ff fdb9 	bl	8015e90 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>
 801631e:	e897 0003 	ldmia.w	r7, {r0, r1}
 8016322:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016324:	e886 0003 	stmia.w	r6, {r0, r1}
 8016328:	2b00      	cmp	r3, #0
 801632a:	d1d5      	bne.n	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 801632c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801632e:	f8c8 3010 	str.w	r3, [r8, #16]
 8016332:	e7d1      	b.n	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8016334:	ae12      	add	r6, sp, #72	; 0x48
 8016336:	4631      	mov	r1, r6
 8016338:	4658      	mov	r0, fp
 801633a:	f008 fa8d 	bl	801e858 <_ZNKSt11__timepunctIwE9_M_monthsEPPKw>
 801633e:	e7d9      	b.n	80162f4 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x18c>
 8016340:	f8db 3008 	ldr.w	r3, [fp, #8]
 8016344:	699b      	ldr	r3, [r3, #24]
 8016346:	af0c      	add	r7, sp, #48	; 0x30
 8016348:	9305      	str	r3, [sp, #20]
 801634a:	e0e2      	b.n	8016512 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x3aa>
 801634c:	ab10      	add	r3, sp, #64	; 0x40
 801634e:	e9cd a306 	strd	sl, r3, [sp, #24]
 8016352:	2002      	movs	r0, #2
 8016354:	231f      	movs	r3, #31
 8016356:	e9cd 3004 	strd	r3, r0, [sp, #16]
 801635a:	2301      	movs	r3, #1
 801635c:	9303      	str	r3, [sp, #12]
 801635e:	ab11      	add	r3, sp, #68	; 0x44
 8016360:	9302      	str	r3, [sp, #8]
 8016362:	ab28      	add	r3, sp, #160	; 0xa0
 8016364:	e893 0003 	ldmia.w	r3, {r0, r1}
 8016368:	e88d 0003 	stmia.w	sp, {r0, r1}
 801636c:	af0c      	add	r7, sp, #48	; 0x30
 801636e:	ae0e      	add	r6, sp, #56	; 0x38
 8016370:	e896 000c 	ldmia.w	r6, {r2, r3}
 8016374:	4621      	mov	r1, r4
 8016376:	4638      	mov	r0, r7
 8016378:	f7ff fd2d 	bl	8015dd6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801637c:	e897 0003 	ldmia.w	r7, {r0, r1}
 8016380:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016382:	e886 0003 	stmia.w	r6, {r0, r1}
 8016386:	2b00      	cmp	r3, #0
 8016388:	d1a6      	bne.n	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 801638a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801638c:	f8c8 300c 	str.w	r3, [r8, #12]
 8016390:	e7a2      	b.n	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8016392:	4630      	mov	r0, r6
 8016394:	f7ff fcf6 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8016398:	2108      	movs	r1, #8
 801639a:	4602      	mov	r2, r0
 801639c:	4628      	mov	r0, r5
 801639e:	f7ff f9f4 	bl	801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>
 80163a2:	b1b0      	cbz	r0, 80163d2 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x26a>
 80163a4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80163a6:	f7fe ff8a 	bl	80152be <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 80163aa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80163ae:	930f      	str	r3, [sp, #60]	; 0x3c
 80163b0:	ab10      	add	r3, sp, #64	; 0x40
 80163b2:	e9cd a306 	strd	sl, r3, [sp, #24]
 80163b6:	2209      	movs	r2, #9
 80163b8:	2301      	movs	r3, #1
 80163ba:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80163be:	af0c      	add	r7, sp, #48	; 0x30
 80163c0:	9303      	str	r3, [sp, #12]
 80163c2:	ab11      	add	r3, sp, #68	; 0x44
 80163c4:	9302      	str	r3, [sp, #8]
 80163c6:	ab28      	add	r3, sp, #160	; 0xa0
 80163c8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80163cc:	e88d 0003 	stmia.w	sp, {r0, r1}
 80163d0:	e7ce      	b.n	8016370 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x208>
 80163d2:	ab10      	add	r3, sp, #64	; 0x40
 80163d4:	e9cd a306 	strd	sl, r3, [sp, #24]
 80163d8:	2102      	movs	r1, #2
 80163da:	231f      	movs	r3, #31
 80163dc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80163e0:	af0c      	add	r7, sp, #48	; 0x30
 80163e2:	230a      	movs	r3, #10
 80163e4:	e7ec      	b.n	80163c0 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x258>
 80163e6:	ae12      	add	r6, sp, #72	; 0x48
 80163e8:	4ac0      	ldr	r2, [pc, #768]	; (80166ec <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x584>)
 80163ea:	4633      	mov	r3, r6
 80163ec:	f1a2 0109 	sub.w	r1, r2, #9
 80163f0:	e08a      	b.n	8016508 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x3a0>
 80163f2:	ab10      	add	r3, sp, #64	; 0x40
 80163f4:	e9cd a306 	strd	sl, r3, [sp, #24]
 80163f8:	2202      	movs	r2, #2
 80163fa:	2317      	movs	r3, #23
 80163fc:	e9cd 3204 	strd	r3, r2, [sp, #16]
 8016400:	af0c      	add	r7, sp, #48	; 0x30
 8016402:	2300      	movs	r3, #0
 8016404:	9303      	str	r3, [sp, #12]
 8016406:	ab11      	add	r3, sp, #68	; 0x44
 8016408:	9302      	str	r3, [sp, #8]
 801640a:	ab28      	add	r3, sp, #160	; 0xa0
 801640c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8016410:	e88d 0003 	stmia.w	sp, {r0, r1}
 8016414:	ae0e      	add	r6, sp, #56	; 0x38
 8016416:	e896 000c 	ldmia.w	r6, {r2, r3}
 801641a:	4621      	mov	r1, r4
 801641c:	4638      	mov	r0, r7
 801641e:	f7ff fcda 	bl	8015dd6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8016422:	e897 0003 	ldmia.w	r7, {r0, r1}
 8016426:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016428:	e886 0003 	stmia.w	r6, {r0, r1}
 801642c:	2b00      	cmp	r3, #0
 801642e:	f47f af53 	bne.w	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8016432:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016434:	f8c8 3008 	str.w	r3, [r8, #8]
 8016438:	e74e      	b.n	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 801643a:	ab10      	add	r3, sp, #64	; 0x40
 801643c:	e9cd a306 	strd	sl, r3, [sp, #24]
 8016440:	f04f 0902 	mov.w	r9, #2
 8016444:	230c      	movs	r3, #12
 8016446:	e9cd 3904 	strd	r3, r9, [sp, #16]
 801644a:	af0c      	add	r7, sp, #48	; 0x30
 801644c:	2301      	movs	r3, #1
 801644e:	e7d9      	b.n	8016404 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x29c>
 8016450:	ab10      	add	r3, sp, #64	; 0x40
 8016452:	e9cd a306 	strd	sl, r3, [sp, #24]
 8016456:	f04f 0e02 	mov.w	lr, #2
 801645a:	230c      	movs	r3, #12
 801645c:	e9cd 3e04 	strd	r3, lr, [sp, #16]
 8016460:	2301      	movs	r3, #1
 8016462:	9303      	str	r3, [sp, #12]
 8016464:	ab11      	add	r3, sp, #68	; 0x44
 8016466:	9302      	str	r3, [sp, #8]
 8016468:	ab28      	add	r3, sp, #160	; 0xa0
 801646a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801646e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8016472:	af0c      	add	r7, sp, #48	; 0x30
 8016474:	ae0e      	add	r6, sp, #56	; 0x38
 8016476:	e896 000c 	ldmia.w	r6, {r2, r3}
 801647a:	4621      	mov	r1, r4
 801647c:	4638      	mov	r0, r7
 801647e:	f7ff fcaa 	bl	8015dd6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8016482:	e897 0003 	ldmia.w	r7, {r0, r1}
 8016486:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016488:	e886 0003 	stmia.w	r6, {r0, r1}
 801648c:	2b00      	cmp	r3, #0
 801648e:	f47f af23 	bne.w	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8016492:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016494:	3b01      	subs	r3, #1
 8016496:	e74a      	b.n	801632e <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x1c6>
 8016498:	ab10      	add	r3, sp, #64	; 0x40
 801649a:	e9cd a306 	strd	sl, r3, [sp, #24]
 801649e:	f04f 0c02 	mov.w	ip, #2
 80164a2:	233b      	movs	r3, #59	; 0x3b
 80164a4:	e9cd 3c04 	strd	r3, ip, [sp, #16]
 80164a8:	2300      	movs	r3, #0
 80164aa:	9303      	str	r3, [sp, #12]
 80164ac:	ab11      	add	r3, sp, #68	; 0x44
 80164ae:	9302      	str	r3, [sp, #8]
 80164b0:	ab28      	add	r3, sp, #160	; 0xa0
 80164b2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80164b6:	e88d 0003 	stmia.w	sp, {r0, r1}
 80164ba:	af0c      	add	r7, sp, #48	; 0x30
 80164bc:	ae0e      	add	r6, sp, #56	; 0x38
 80164be:	e896 000c 	ldmia.w	r6, {r2, r3}
 80164c2:	4621      	mov	r1, r4
 80164c4:	4638      	mov	r0, r7
 80164c6:	f7ff fc86 	bl	8015dd6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 80164ca:	e897 0003 	ldmia.w	r7, {r0, r1}
 80164ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80164d0:	e886 0003 	stmia.w	r6, {r0, r1}
 80164d4:	2b00      	cmp	r3, #0
 80164d6:	f47f aeff 	bne.w	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 80164da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80164dc:	f8c8 3004 	str.w	r3, [r8, #4]
 80164e0:	e6fa      	b.n	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 80164e2:	4630      	mov	r0, r6
 80164e4:	f7ff fc4e 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80164e8:	2200      	movs	r2, #0
 80164ea:	4601      	mov	r1, r0
 80164ec:	4628      	mov	r0, r5
 80164ee:	f7ff fc40 	bl	8015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>
 80164f2:	280a      	cmp	r0, #10
 80164f4:	f040 810e 	bne.w	8016714 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5ac>
 80164f8:	4630      	mov	r0, r6
 80164fa:	f7fe ff49 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 80164fe:	e6eb      	b.n	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8016500:	4a7b      	ldr	r2, [pc, #492]	; (80166f0 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x588>)
 8016502:	ae12      	add	r6, sp, #72	; 0x48
 8016504:	4633      	mov	r3, r6
 8016506:	1f91      	subs	r1, r2, #6
 8016508:	4628      	mov	r0, r5
 801650a:	f7ff f937 	bl	801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>
 801650e:	af0c      	add	r7, sp, #48	; 0x30
 8016510:	9605      	str	r6, [sp, #20]
 8016512:	ab10      	add	r3, sp, #64	; 0x40
 8016514:	e9cd a302 	strd	sl, r3, [sp, #8]
 8016518:	f8cd 8010 	str.w	r8, [sp, #16]
 801651c:	ab28      	add	r3, sp, #160	; 0xa0
 801651e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8016522:	e88d 0003 	stmia.w	sp, {r0, r1}
 8016526:	ae0e      	add	r6, sp, #56	; 0x38
 8016528:	4621      	mov	r1, r4
 801652a:	4638      	mov	r0, r7
 801652c:	e896 000c 	ldmia.w	r6, {r2, r3}
 8016530:	f7ff fe1a 	bl	8016168 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw>
 8016534:	e897 0003 	ldmia.w	r7, {r0, r1}
 8016538:	e886 0003 	stmia.w	r6, {r0, r1}
 801653c:	e6cc      	b.n	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 801653e:	ab10      	add	r3, sp, #64	; 0x40
 8016540:	e9cd a306 	strd	sl, r3, [sp, #24]
 8016544:	2602      	movs	r6, #2
 8016546:	233d      	movs	r3, #61	; 0x3d
 8016548:	e9cd 3604 	strd	r3, r6, [sp, #16]
 801654c:	2300      	movs	r3, #0
 801654e:	9303      	str	r3, [sp, #12]
 8016550:	ab11      	add	r3, sp, #68	; 0x44
 8016552:	9302      	str	r3, [sp, #8]
 8016554:	ab28      	add	r3, sp, #160	; 0xa0
 8016556:	e893 0003 	ldmia.w	r3, {r0, r1}
 801655a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801655e:	af0c      	add	r7, sp, #48	; 0x30
 8016560:	ae0e      	add	r6, sp, #56	; 0x38
 8016562:	e896 000c 	ldmia.w	r6, {r2, r3}
 8016566:	4621      	mov	r1, r4
 8016568:	4638      	mov	r0, r7
 801656a:	f7ff fc34 	bl	8015dd6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801656e:	e897 0003 	ldmia.w	r7, {r0, r1}
 8016572:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016574:	e886 0003 	stmia.w	r6, {r0, r1}
 8016578:	2b00      	cmp	r3, #0
 801657a:	f47f aead 	bne.w	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 801657e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016580:	f8c8 3000 	str.w	r3, [r8]
 8016584:	e6a8      	b.n	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8016586:	4630      	mov	r0, r6
 8016588:	f7ff fbfc 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 801658c:	2200      	movs	r2, #0
 801658e:	4601      	mov	r1, r0
 8016590:	4628      	mov	r0, r5
 8016592:	f7ff fbee 	bl	8015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>
 8016596:	2809      	cmp	r0, #9
 8016598:	e7ac      	b.n	80164f4 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x38c>
 801659a:	ae12      	add	r6, sp, #72	; 0x48
 801659c:	4a55      	ldr	r2, [pc, #340]	; (80166f4 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x58c>)
 801659e:	4633      	mov	r3, r6
 80165a0:	e724      	b.n	80163ec <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x284>
 80165a2:	a912      	add	r1, sp, #72	; 0x48
 80165a4:	4658      	mov	r0, fp
 80165a6:	f008 f925 	bl	801e7f4 <_ZNKSt11__timepunctIwE15_M_date_formatsEPPKw>
 80165aa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80165ac:	af0c      	add	r7, sp, #48	; 0x30
 80165ae:	e6cb      	b.n	8016348 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x1e0>
 80165b0:	a912      	add	r1, sp, #72	; 0x48
 80165b2:	4658      	mov	r0, fp
 80165b4:	f008 f924 	bl	801e800 <_ZNKSt11__timepunctIwE15_M_time_formatsEPPKw>
 80165b8:	e7f7      	b.n	80165aa <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x442>
 80165ba:	ab10      	add	r3, sp, #64	; 0x40
 80165bc:	e9cd a306 	strd	sl, r3, [sp, #24]
 80165c0:	2004      	movs	r0, #4
 80165c2:	f242 730f 	movw	r3, #9999	; 0x270f
 80165c6:	e9cd 3004 	strd	r3, r0, [sp, #16]
 80165ca:	2300      	movs	r3, #0
 80165cc:	9303      	str	r3, [sp, #12]
 80165ce:	ab11      	add	r3, sp, #68	; 0x44
 80165d0:	9302      	str	r3, [sp, #8]
 80165d2:	ab28      	add	r3, sp, #160	; 0xa0
 80165d4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80165d8:	e88d 0003 	stmia.w	sp, {r0, r1}
 80165dc:	af0c      	add	r7, sp, #48	; 0x30
 80165de:	ae0e      	add	r6, sp, #56	; 0x38
 80165e0:	e896 000c 	ldmia.w	r6, {r2, r3}
 80165e4:	4621      	mov	r1, r4
 80165e6:	4638      	mov	r0, r7
 80165e8:	f7ff fbf5 	bl	8015dd6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 80165ec:	e897 0003 	ldmia.w	r7, {r0, r1}
 80165f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80165f2:	e886 0003 	stmia.w	r6, {r0, r1}
 80165f6:	2b00      	cmp	r3, #0
 80165f8:	f47f ae6e 	bne.w	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 80165fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80165fe:	2b00      	cmp	r3, #0
 8016600:	bfb4      	ite	lt
 8016602:	3364      	addlt	r3, #100	; 0x64
 8016604:	f2a3 736c 	subwge	r3, r3, #1900	; 0x76c
 8016608:	f8c8 3014 	str.w	r3, [r8, #20]
 801660c:	e664      	b.n	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 801660e:	4630      	mov	r0, r6
 8016610:	f7ff fbb8 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8016614:	2101      	movs	r1, #1
 8016616:	4602      	mov	r2, r0
 8016618:	4628      	mov	r0, r5
 801661a:	f7ff f8b6 	bl	801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>
 801661e:	2800      	cmp	r0, #0
 8016620:	d078      	beq.n	8016714 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5ac>
 8016622:	ab10      	add	r3, sp, #64	; 0x40
 8016624:	e9cd a305 	strd	sl, r3, [sp, #20]
 8016628:	230e      	movs	r3, #14
 801662a:	9304      	str	r3, [sp, #16]
 801662c:	4b32      	ldr	r3, [pc, #200]	; (80166f8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x590>)
 801662e:	9303      	str	r3, [sp, #12]
 8016630:	ab12      	add	r3, sp, #72	; 0x48
 8016632:	9302      	str	r3, [sp, #8]
 8016634:	ab28      	add	r3, sp, #160	; 0xa0
 8016636:	e893 0003 	ldmia.w	r3, {r0, r1}
 801663a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801663e:	af0c      	add	r7, sp, #48	; 0x30
 8016640:	4621      	mov	r1, r4
 8016642:	4638      	mov	r0, r7
 8016644:	e896 000c 	ldmia.w	r6, {r2, r3}
 8016648:	f7ff fc22 	bl	8015e90 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>
 801664c:	e897 0003 	ldmia.w	r7, {r0, r1}
 8016650:	e886 0003 	stmia.w	r6, {r0, r1}
 8016654:	a928      	add	r1, sp, #160	; 0xa0
 8016656:	4630      	mov	r0, r6
 8016658:	f7ff fbb6 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801665c:	2800      	cmp	r0, #0
 801665e:	f43f ae3b 	beq.w	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8016662:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016664:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016666:	4313      	orrs	r3, r2
 8016668:	f47f ae36 	bne.w	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 801666c:	4630      	mov	r0, r6
 801666e:	f7ff fb89 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8016672:	212d      	movs	r1, #45	; 0x2d
 8016674:	4607      	mov	r7, r0
 8016676:	4628      	mov	r0, r5
 8016678:	f7ff fb81 	bl	8015d7e <_ZNKSt21__ctype_abstract_baseIwE5widenEc>
 801667c:	42b8      	cmp	r0, r7
 801667e:	d13d      	bne.n	80166fc <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x594>
 8016680:	af10      	add	r7, sp, #64	; 0x40
 8016682:	2317      	movs	r3, #23
 8016684:	2202      	movs	r2, #2
 8016686:	e9cd 3204 	strd	r3, r2, [sp, #16]
 801668a:	e9cd a706 	strd	sl, r7, [sp, #24]
 801668e:	2300      	movs	r3, #0
 8016690:	9303      	str	r3, [sp, #12]
 8016692:	ab12      	add	r3, sp, #72	; 0x48
 8016694:	9302      	str	r3, [sp, #8]
 8016696:	ab28      	add	r3, sp, #160	; 0xa0
 8016698:	e893 0003 	ldmia.w	r3, {r0, r1}
 801669c:	e88d 0003 	stmia.w	sp, {r0, r1}
 80166a0:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 80166a4:	ae0e      	add	r6, sp, #56	; 0x38
 80166a6:	e896 000c 	ldmia.w	r6, {r2, r3}
 80166aa:	4621      	mov	r1, r4
 80166ac:	4648      	mov	r0, r9
 80166ae:	f7ff fb92 	bl	8015dd6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 80166b2:	e899 0003 	ldmia.w	r9, {r0, r1}
 80166b6:	233b      	movs	r3, #59	; 0x3b
 80166b8:	e886 0003 	stmia.w	r6, {r0, r1}
 80166bc:	2102      	movs	r1, #2
 80166be:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80166c2:	e9cd a706 	strd	sl, r7, [sp, #24]
 80166c6:	2300      	movs	r3, #0
 80166c8:	9303      	str	r3, [sp, #12]
 80166ca:	ab12      	add	r3, sp, #72	; 0x48
 80166cc:	9302      	str	r3, [sp, #8]
 80166ce:	ab28      	add	r3, sp, #160	; 0xa0
 80166d0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80166d4:	e88d 0003 	stmia.w	sp, {r0, r1}
 80166d8:	4621      	mov	r1, r4
 80166da:	4648      	mov	r0, r9
 80166dc:	e896 000c 	ldmia.w	r6, {r2, r3}
 80166e0:	f7ff fb79 	bl	8015dd6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 80166e4:	e899 0003 	ldmia.w	r9, {r0, r1}
 80166e8:	e726      	b.n	8016538 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x3d0>
 80166ea:	bf00      	nop
 80166ec:	0802f801 	.word	0x0802f801
 80166f0:	0802f807 	.word	0x0802f807
 80166f4:	0802f810 	.word	0x0802f810
 80166f8:	20000078 	.word	0x20000078
 80166fc:	4630      	mov	r0, r6
 80166fe:	f7ff fb41 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8016702:	212b      	movs	r1, #43	; 0x2b
 8016704:	4606      	mov	r6, r0
 8016706:	4628      	mov	r0, r5
 8016708:	f7ff fb39 	bl	8015d7e <_ZNKSt21__ctype_abstract_baseIwE5widenEc>
 801670c:	42b0      	cmp	r0, r6
 801670e:	f47f ade3 	bne.w	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8016712:	e7b5      	b.n	8016680 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x518>
 8016714:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016716:	f043 0304 	orr.w	r3, r3, #4
 801671a:	9310      	str	r3, [sp, #64]	; 0x40
 801671c:	e5dc      	b.n	80162d8 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 801671e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016720:	a80e      	add	r0, sp, #56	; 0x38
 8016722:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
 8016726:	f7ff fb2d 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 801672a:	4287      	cmp	r7, r0
 801672c:	d103      	bne.n	8016736 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5ce>
 801672e:	a80e      	add	r0, sp, #56	; 0x38
 8016730:	f7fe fe2e 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8016734:	e5d1      	b.n	80162da <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x172>
 8016736:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016738:	f043 0304 	orr.w	r3, r3, #4
 801673c:	9310      	str	r3, [sp, #64]	; 0x40
 801673e:	e5cc      	b.n	80162da <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x172>
 8016740:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016742:	429e      	cmp	r6, r3
 8016744:	f47f ad9e 	bne.w	8016284 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x11c>
 8016748:	ab0e      	add	r3, sp, #56	; 0x38
 801674a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801674e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016750:	e883 0003 	stmia.w	r3, {r0, r1}
 8016754:	4618      	mov	r0, r3
 8016756:	b01f      	add	sp, #124	; 0x7c
 8016758:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801675c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_yearES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801675c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801675e:	b08f      	sub	sp, #60	; 0x3c
 8016760:	ac0a      	add	r4, sp, #40	; 0x28
 8016762:	e884 000c 	stmia.w	r4, {r2, r3}
 8016766:	aa0d      	add	r2, sp, #52	; 0x34
 8016768:	9207      	str	r2, [sp, #28]
 801676a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801676c:	9206      	str	r2, [sp, #24]
 801676e:	468c      	mov	ip, r1
 8016770:	f242 720f 	movw	r2, #9999	; 0x270f
 8016774:	2104      	movs	r1, #4
 8016776:	e9cd 2104 	strd	r2, r1, [sp, #16]
 801677a:	2300      	movs	r3, #0
 801677c:	9303      	str	r3, [sp, #12]
 801677e:	930d      	str	r3, [sp, #52]	; 0x34
 8016780:	ab0c      	add	r3, sp, #48	; 0x30
 8016782:	9302      	str	r3, [sp, #8]
 8016784:	ab14      	add	r3, sp, #80	; 0x50
 8016786:	4605      	mov	r5, r0
 8016788:	e893 0003 	ldmia.w	r3, {r0, r1}
 801678c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8016790:	af08      	add	r7, sp, #32
 8016792:	e894 000c 	ldmia.w	r4, {r2, r3}
 8016796:	4661      	mov	r1, ip
 8016798:	4638      	mov	r0, r7
 801679a:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801679c:	f7ff fb1b 	bl	8015dd6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES4_S4_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 80167a0:	e897 0003 	ldmia.w	r7, {r0, r1}
 80167a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80167a6:	e884 0003 	stmia.w	r4, {r0, r1}
 80167aa:	b9bb      	cbnz	r3, 80167dc <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_yearES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x80>
 80167ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80167ae:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80167b0:	2b00      	cmp	r3, #0
 80167b2:	bfb4      	ite	lt
 80167b4:	3364      	addlt	r3, #100	; 0x64
 80167b6:	f2a3 736c 	subwge	r3, r3, #1900	; 0x76c
 80167ba:	6153      	str	r3, [r2, #20]
 80167bc:	a914      	add	r1, sp, #80	; 0x50
 80167be:	4620      	mov	r0, r4
 80167c0:	f7ff faef 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 80167c4:	b118      	cbz	r0, 80167ce <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_yearES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x72>
 80167c6:	6833      	ldr	r3, [r6, #0]
 80167c8:	f043 0302 	orr.w	r3, r3, #2
 80167cc:	6033      	str	r3, [r6, #0]
 80167ce:	e894 0003 	ldmia.w	r4, {r0, r1}
 80167d2:	e885 0003 	stmia.w	r5, {r0, r1}
 80167d6:	4628      	mov	r0, r5
 80167d8:	b00f      	add	sp, #60	; 0x3c
 80167da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80167dc:	6833      	ldr	r3, [r6, #0]
 80167de:	f043 0304 	orr.w	r3, r3, #4
 80167e2:	6033      	str	r3, [r6, #0]
 80167e4:	e7ea      	b.n	80167bc <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_yearES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x60>

080167e6 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14do_get_weekdayES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 80167e6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80167ea:	b09c      	sub	sp, #112	; 0x70
 80167ec:	e9dd 9626 	ldrd	r9, r6, [sp, #152]	; 0x98
 80167f0:	ac0a      	add	r4, sp, #40	; 0x28
 80167f2:	4605      	mov	r5, r0
 80167f4:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 80167f8:	e884 000c 	stmia.w	r4, {r2, r3}
 80167fc:	4688      	mov	r8, r1
 80167fe:	f008 f9e3 	bl	801ebc8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale>
 8016802:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 8016806:	4607      	mov	r7, r0
 8016808:	4651      	mov	r1, sl
 801680a:	f008 f815 	bl	801e838 <_ZNKSt11__timepunctIwE19_M_days_abbreviatedEPPKw>
 801680e:	4638      	mov	r0, r7
 8016810:	a915      	add	r1, sp, #84	; 0x54
 8016812:	f008 f801 	bl	801e818 <_ZNKSt11__timepunctIwE7_M_daysEPPKw>
 8016816:	2300      	movs	r3, #0
 8016818:	930d      	str	r3, [sp, #52]	; 0x34
 801681a:	ab0d      	add	r3, sp, #52	; 0x34
 801681c:	e9cd 9305 	strd	r9, r3, [sp, #20]
 8016820:	2307      	movs	r3, #7
 8016822:	e9cd a303 	strd	sl, r3, [sp, #12]
 8016826:	ab0c      	add	r3, sp, #48	; 0x30
 8016828:	9302      	str	r3, [sp, #8]
 801682a:	ab24      	add	r3, sp, #144	; 0x90
 801682c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8016830:	e88d 0003 	stmia.w	sp, {r0, r1}
 8016834:	af08      	add	r7, sp, #32
 8016836:	e894 000c 	ldmia.w	r4, {r2, r3}
 801683a:	4641      	mov	r1, r8
 801683c:	4638      	mov	r0, r7
 801683e:	f7ff fbdf 	bl	8016000 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>
 8016842:	e897 0003 	ldmia.w	r7, {r0, r1}
 8016846:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016848:	e884 0003 	stmia.w	r4, {r0, r1}
 801684c:	b99b      	cbnz	r3, 8016876 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14do_get_weekdayES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x90>
 801684e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016850:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016852:	619a      	str	r2, [r3, #24]
 8016854:	a924      	add	r1, sp, #144	; 0x90
 8016856:	4620      	mov	r0, r4
 8016858:	f7ff faa3 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 801685c:	b118      	cbz	r0, 8016866 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14do_get_weekdayES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x80>
 801685e:	6833      	ldr	r3, [r6, #0]
 8016860:	f043 0302 	orr.w	r3, r3, #2
 8016864:	6033      	str	r3, [r6, #0]
 8016866:	e894 0003 	ldmia.w	r4, {r0, r1}
 801686a:	e885 0003 	stmia.w	r5, {r0, r1}
 801686e:	4628      	mov	r0, r5
 8016870:	b01c      	add	sp, #112	; 0x70
 8016872:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016876:	6833      	ldr	r3, [r6, #0]
 8016878:	f043 0304 	orr.w	r3, r3, #4
 801687c:	6033      	str	r3, [r6, #0]
 801687e:	e7e9      	b.n	8016854 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14do_get_weekdayES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x6e>

08016880 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16do_get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8016880:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016884:	b0a6      	sub	sp, #152	; 0x98
 8016886:	e9dd 9630 	ldrd	r9, r6, [sp, #192]	; 0xc0
 801688a:	ac0a      	add	r4, sp, #40	; 0x28
 801688c:	4605      	mov	r5, r0
 801688e:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 8016892:	e884 000c 	stmia.w	r4, {r2, r3}
 8016896:	4688      	mov	r8, r1
 8016898:	f008 f996 	bl	801ebc8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale>
 801689c:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 80168a0:	4607      	mov	r7, r0
 80168a2:	4651      	mov	r1, sl
 80168a4:	f007 fff7 	bl	801e896 <_ZNKSt11__timepunctIwE21_M_months_abbreviatedEPPKw>
 80168a8:	4638      	mov	r0, r7
 80168aa:	a91a      	add	r1, sp, #104	; 0x68
 80168ac:	f007 ffd4 	bl	801e858 <_ZNKSt11__timepunctIwE9_M_monthsEPPKw>
 80168b0:	2300      	movs	r3, #0
 80168b2:	930d      	str	r3, [sp, #52]	; 0x34
 80168b4:	ab0d      	add	r3, sp, #52	; 0x34
 80168b6:	e9cd 9305 	strd	r9, r3, [sp, #20]
 80168ba:	230c      	movs	r3, #12
 80168bc:	e9cd a303 	strd	sl, r3, [sp, #12]
 80168c0:	ab0c      	add	r3, sp, #48	; 0x30
 80168c2:	9302      	str	r3, [sp, #8]
 80168c4:	ab2e      	add	r3, sp, #184	; 0xb8
 80168c6:	e893 0003 	ldmia.w	r3, {r0, r1}
 80168ca:	e88d 0003 	stmia.w	sp, {r0, r1}
 80168ce:	af08      	add	r7, sp, #32
 80168d0:	e894 000c 	ldmia.w	r4, {r2, r3}
 80168d4:	4641      	mov	r1, r8
 80168d6:	4638      	mov	r0, r7
 80168d8:	f7ff fb92 	bl	8016000 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>
 80168dc:	e897 0003 	ldmia.w	r7, {r0, r1}
 80168e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80168e2:	e884 0003 	stmia.w	r4, {r0, r1}
 80168e6:	b99b      	cbnz	r3, 8016910 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16do_get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x90>
 80168e8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80168ea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80168ec:	611a      	str	r2, [r3, #16]
 80168ee:	a92e      	add	r1, sp, #184	; 0xb8
 80168f0:	4620      	mov	r0, r4
 80168f2:	f7ff fa56 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 80168f6:	b118      	cbz	r0, 8016900 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16do_get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x80>
 80168f8:	6833      	ldr	r3, [r6, #0]
 80168fa:	f043 0302 	orr.w	r3, r3, #2
 80168fe:	6033      	str	r3, [r6, #0]
 8016900:	e894 0003 	ldmia.w	r4, {r0, r1}
 8016904:	e885 0003 	stmia.w	r5, {r0, r1}
 8016908:	4628      	mov	r0, r5
 801690a:	b026      	add	sp, #152	; 0x98
 801690c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016910:	6833      	ldr	r3, [r6, #0]
 8016912:	f043 0304 	orr.w	r3, r3, #4
 8016916:	6033      	str	r3, [r6, #0]
 8016918:	e7e9      	b.n	80168ee <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16do_get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x6e>

0801691a <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_timeES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801691a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801691e:	b08d      	sub	sp, #52	; 0x34
 8016920:	e9dd 9616 	ldrd	r9, r6, [sp, #88]	; 0x58
 8016924:	ac08      	add	r4, sp, #32
 8016926:	4605      	mov	r5, r0
 8016928:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 801692c:	e884 000c 	stmia.w	r4, {r2, r3}
 8016930:	4688      	mov	r8, r1
 8016932:	f008 f949 	bl	801ebc8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale>
 8016936:	a90a      	add	r1, sp, #40	; 0x28
 8016938:	f007 ff62 	bl	801e800 <_ZNKSt11__timepunctIwE15_M_time_formatsEPPKw>
 801693c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801693e:	9305      	str	r3, [sp, #20]
 8016940:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016942:	f8cd 9008 	str.w	r9, [sp, #8]
 8016946:	e9cd 6303 	strd	r6, r3, [sp, #12]
 801694a:	ab14      	add	r3, sp, #80	; 0x50
 801694c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8016950:	e88d 0003 	stmia.w	sp, {r0, r1}
 8016954:	af06      	add	r7, sp, #24
 8016956:	4641      	mov	r1, r8
 8016958:	4638      	mov	r0, r7
 801695a:	e894 000c 	ldmia.w	r4, {r2, r3}
 801695e:	f7ff fc03 	bl	8016168 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw>
 8016962:	e897 0003 	ldmia.w	r7, {r0, r1}
 8016966:	e884 0003 	stmia.w	r4, {r0, r1}
 801696a:	a914      	add	r1, sp, #80	; 0x50
 801696c:	4620      	mov	r0, r4
 801696e:	f7ff fa18 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8016972:	b118      	cbz	r0, 801697c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_timeES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x62>
 8016974:	6833      	ldr	r3, [r6, #0]
 8016976:	f043 0302 	orr.w	r3, r3, #2
 801697a:	6033      	str	r3, [r6, #0]
 801697c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8016980:	e885 0003 	stmia.w	r5, {r0, r1}
 8016984:	4628      	mov	r0, r5
 8016986:	b00d      	add	sp, #52	; 0x34
 8016988:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0801698c <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_dateES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801698c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016990:	b08d      	sub	sp, #52	; 0x34
 8016992:	e9dd 9616 	ldrd	r9, r6, [sp, #88]	; 0x58
 8016996:	ac08      	add	r4, sp, #32
 8016998:	4605      	mov	r5, r0
 801699a:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 801699e:	e884 000c 	stmia.w	r4, {r2, r3}
 80169a2:	4688      	mov	r8, r1
 80169a4:	f008 f910 	bl	801ebc8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale>
 80169a8:	a90a      	add	r1, sp, #40	; 0x28
 80169aa:	f007 ff23 	bl	801e7f4 <_ZNKSt11__timepunctIwE15_M_date_formatsEPPKw>
 80169ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80169b0:	9305      	str	r3, [sp, #20]
 80169b2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80169b4:	f8cd 9008 	str.w	r9, [sp, #8]
 80169b8:	e9cd 6303 	strd	r6, r3, [sp, #12]
 80169bc:	ab14      	add	r3, sp, #80	; 0x50
 80169be:	e893 0003 	ldmia.w	r3, {r0, r1}
 80169c2:	e88d 0003 	stmia.w	sp, {r0, r1}
 80169c6:	af06      	add	r7, sp, #24
 80169c8:	4641      	mov	r1, r8
 80169ca:	4638      	mov	r0, r7
 80169cc:	e894 000c 	ldmia.w	r4, {r2, r3}
 80169d0:	f7ff fbca 	bl	8016168 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw>
 80169d4:	e897 0003 	ldmia.w	r7, {r0, r1}
 80169d8:	e884 0003 	stmia.w	r4, {r0, r1}
 80169dc:	a914      	add	r1, sp, #80	; 0x50
 80169de:	4620      	mov	r0, r4
 80169e0:	f7ff f9df 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 80169e4:	b118      	cbz	r0, 80169ee <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_dateES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm+0x62>
 80169e6:	6833      	ldr	r3, [r6, #0]
 80169e8:	f043 0302 	orr.w	r3, r3, #2
 80169ec:	6033      	str	r3, [r6, #0]
 80169ee:	e894 0003 	ldmia.w	r4, {r0, r1}
 80169f2:	e885 0003 	stmia.w	r5, {r0, r1}
 80169f6:	4628      	mov	r0, r5
 80169f8:	b00d      	add	sp, #52	; 0x34
 80169fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080169fe <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmcc>:
 80169fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a02:	b08f      	sub	sp, #60	; 0x3c
 8016a04:	e9dd 961a 	ldrd	r9, r6, [sp, #104]	; 0x68
 8016a08:	4605      	mov	r5, r0
 8016a0a:	ac08      	add	r4, sp, #32
 8016a0c:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 8016a10:	f04f 0a00 	mov.w	sl, #0
 8016a14:	e884 000c 	stmia.w	r4, {r2, r3}
 8016a18:	4688      	mov	r8, r1
 8016a1a:	f89d b074 	ldrb.w	fp, [sp, #116]	; 0x74
 8016a1e:	f89d 7078 	ldrb.w	r7, [sp, #120]	; 0x78
 8016a22:	f008 f81d 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8016a26:	f8c6 a000 	str.w	sl, [r6]
 8016a2a:	2125      	movs	r1, #37	; 0x25
 8016a2c:	f7ff f9a7 	bl	8015d7e <_ZNKSt21__ctype_abstract_baseIwE5widenEc>
 8016a30:	900a      	str	r0, [sp, #40]	; 0x28
 8016a32:	bb4f      	cbnz	r7, 8016a88 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmcc+0x8a>
 8016a34:	e9cd b70b 	strd	fp, r7, [sp, #44]	; 0x2c
 8016a38:	ab0a      	add	r3, sp, #40	; 0x28
 8016a3a:	9305      	str	r3, [sp, #20]
 8016a3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016a3e:	f8cd 9008 	str.w	r9, [sp, #8]
 8016a42:	e9cd 6303 	strd	r6, r3, [sp, #12]
 8016a46:	ab18      	add	r3, sp, #96	; 0x60
 8016a48:	e893 0003 	ldmia.w	r3, {r0, r1}
 8016a4c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8016a50:	af06      	add	r7, sp, #24
 8016a52:	4641      	mov	r1, r8
 8016a54:	4638      	mov	r0, r7
 8016a56:	e894 000c 	ldmia.w	r4, {r2, r3}
 8016a5a:	f7ff fb85 	bl	8016168 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw>
 8016a5e:	e897 0003 	ldmia.w	r7, {r0, r1}
 8016a62:	e884 0003 	stmia.w	r4, {r0, r1}
 8016a66:	a918      	add	r1, sp, #96	; 0x60
 8016a68:	4620      	mov	r0, r4
 8016a6a:	f7ff f99a 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8016a6e:	b118      	cbz	r0, 8016a78 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmcc+0x7a>
 8016a70:	6833      	ldr	r3, [r6, #0]
 8016a72:	f043 0302 	orr.w	r3, r3, #2
 8016a76:	6033      	str	r3, [r6, #0]
 8016a78:	e894 0003 	ldmia.w	r4, {r0, r1}
 8016a7c:	e885 0003 	stmia.w	r5, {r0, r1}
 8016a80:	4628      	mov	r0, r5
 8016a82:	b00f      	add	sp, #60	; 0x3c
 8016a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a88:	e9cd 7b0b 	strd	r7, fp, [sp, #44]	; 0x2c
 8016a8c:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8016a90:	e7d2      	b.n	8016a38 <_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmcc+0x3a>
	...

08016a94 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE>:
 8016a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a98:	ed2d 8b02 	vpush	{d8}
 8016a9c:	b097      	sub	sp, #92	; 0x5c
 8016a9e:	a906      	add	r1, sp, #24
 8016aa0:	e881 000c 	stmia.w	r1, {r2, r3}
 8016aa4:	e9dd 3824 	ldrd	r3, r8, [sp, #144]	; 0x90
 8016aa8:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 8016aac:	9004      	str	r0, [sp, #16]
 8016aae:	4620      	mov	r0, r4
 8016ab0:	f007 ffd6 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8016ab4:	ee08 0a10 	vmov	s16, r0
 8016ab8:	4620      	mov	r0, r4
 8016aba:	f7fe fc73 	bl	80153a4 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb1EEEclERKSt6locale.isra.0>
 8016abe:	f100 0340 	add.w	r3, r0, #64	; 0x40
 8016ac2:	9305      	str	r3, [sp, #20]
 8016ac4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8016ac6:	4604      	mov	r4, r0
 8016ac8:	b11b      	cbz	r3, 8016ad2 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3e>
 8016aca:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8016acc:	3b00      	subs	r3, #0
 8016ace:	bf18      	it	ne
 8016ad0:	2301      	movne	r3, #1
 8016ad2:	9301      	str	r3, [sp, #4]
 8016ad4:	ab0c      	add	r3, sp, #48	; 0x30
 8016ad6:	930a      	str	r3, [sp, #40]	; 0x28
 8016ad8:	2300      	movs	r3, #0
 8016ada:	930b      	str	r3, [sp, #44]	; 0x2c
 8016adc:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8016ae0:	7c23      	ldrb	r3, [r4, #16]
 8016ae2:	b11b      	cbz	r3, 8016aec <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x58>
 8016ae4:	2120      	movs	r1, #32
 8016ae6:	a80a      	add	r0, sp, #40	; 0x28
 8016ae8:	f007 f80c 	bl	801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
 8016aec:	2500      	movs	r5, #0
 8016aee:	ab12      	add	r3, sp, #72	; 0x48
 8016af0:	2120      	movs	r1, #32
 8016af2:	a810      	add	r0, sp, #64	; 0x40
 8016af4:	9310      	str	r3, [sp, #64]	; 0x40
 8016af6:	9511      	str	r5, [sp, #68]	; 0x44
 8016af8:	f88d 5048 	strb.w	r5, [sp, #72]	; 0x48
 8016afc:	f007 f802 	bl	801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
 8016b00:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8016b04:	ee08 3a90 	vmov	s17, r3
 8016b08:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8016b0a:	9308      	str	r3, [sp, #32]
 8016b0c:	462f      	mov	r7, r5
 8016b0e:	462e      	mov	r6, r5
 8016b10:	9502      	str	r5, [sp, #8]
 8016b12:	46a9      	mov	r9, r5
 8016b14:	9500      	str	r5, [sp, #0]
 8016b16:	ab08      	add	r3, sp, #32
 8016b18:	5d5b      	ldrb	r3, [r3, r5]
 8016b1a:	2b04      	cmp	r3, #4
 8016b1c:	d840      	bhi.n	8016ba0 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x10c>
 8016b1e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8016b22:	0159      	.short	0x0159
 8016b24:	002b0128 	.word	0x002b0128
 8016b28:	00da00a0 	.word	0x00da00a0
 8016b2c:	f1bb 0f00 	cmp.w	fp, #0
 8016b30:	d1f1      	bne.n	8016b16 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x82>
 8016b32:	f8d8 3000 	ldr.w	r3, [r8]
 8016b36:	f043 0304 	orr.w	r3, r3, #4
 8016b3a:	f8c8 3000 	str.w	r3, [r8]
 8016b3e:	ac06      	add	r4, sp, #24
 8016b40:	a922      	add	r1, sp, #136	; 0x88
 8016b42:	4620      	mov	r0, r4
 8016b44:	f7ff f92d 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8016b48:	b128      	cbz	r0, 8016b56 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0xc2>
 8016b4a:	f8d8 3000 	ldr.w	r3, [r8]
 8016b4e:	f043 0302 	orr.w	r3, r3, #2
 8016b52:	f8c8 3000 	str.w	r3, [r8]
 8016b56:	e894 0003 	ldmia.w	r4, {r0, r1}
 8016b5a:	9b04      	ldr	r3, [sp, #16]
 8016b5c:	e883 0003 	stmia.w	r3, {r0, r1}
 8016b60:	a810      	add	r0, sp, #64	; 0x40
 8016b62:	f006 fedb 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8016b66:	a80a      	add	r0, sp, #40	; 0x28
 8016b68:	f006 fed8 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8016b6c:	9804      	ldr	r0, [sp, #16]
 8016b6e:	b017      	add	sp, #92	; 0x5c
 8016b70:	ecbd 8b02 	vpop	{d8}
 8016b74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016b7a:	68db      	ldr	r3, [r3, #12]
 8016b7c:	059a      	lsls	r2, r3, #22
 8016b7e:	d41e      	bmi.n	8016bbe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016b80:	f1b9 0f01 	cmp.w	r9, #1
 8016b84:	d81b      	bhi.n	8016bbe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016b86:	b1d5      	cbz	r5, 8016bbe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016b88:	2d01      	cmp	r5, #1
 8016b8a:	d10c      	bne.n	8016ba6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x112>
 8016b8c:	9b01      	ldr	r3, [sp, #4]
 8016b8e:	b9b3      	cbnz	r3, 8016bbe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016b90:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8016b94:	2b03      	cmp	r3, #3
 8016b96:	d012      	beq.n	8016bbe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016b98:	f89d 3022 	ldrb.w	r3, [sp, #34]	; 0x22
 8016b9c:	2b01      	cmp	r3, #1
 8016b9e:	d00e      	beq.n	8016bbe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016ba0:	f04f 0b01 	mov.w	fp, #1
 8016ba4:	e02b      	b.n	8016bfe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016ba6:	2d02      	cmp	r5, #2
 8016ba8:	d1fa      	bne.n	8016ba0 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x10c>
 8016baa:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8016bae:	2b04      	cmp	r3, #4
 8016bb0:	d005      	beq.n	8016bbe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016bb2:	9a01      	ldr	r2, [sp, #4]
 8016bb4:	2a00      	cmp	r2, #0
 8016bb6:	d0f3      	beq.n	8016ba0 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x10c>
 8016bb8:	2b03      	cmp	r3, #3
 8016bba:	f040 810e 	bne.w	8016dda <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x346>
 8016bbe:	6a23      	ldr	r3, [r4, #32]
 8016bc0:	9303      	str	r3, [sp, #12]
 8016bc2:	f04f 0a00 	mov.w	sl, #0
 8016bc6:	a922      	add	r1, sp, #136	; 0x88
 8016bc8:	a806      	add	r0, sp, #24
 8016bca:	f7ff f8fd 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8016bce:	9b03      	ldr	r3, [sp, #12]
 8016bd0:	4683      	mov	fp, r0
 8016bd2:	2800      	cmp	r0, #0
 8016bd4:	d03c      	beq.n	8016c50 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x1bc>
 8016bd6:	459a      	cmp	sl, r3
 8016bd8:	d011      	beq.n	8016bfe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016bda:	a806      	add	r0, sp, #24
 8016bdc:	f7ff f8d2 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8016be0:	69e3      	ldr	r3, [r4, #28]
 8016be2:	f853 302a 	ldr.w	r3, [r3, sl, lsl #2]
 8016be6:	4283      	cmp	r3, r0
 8016be8:	d035      	beq.n	8016c56 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x1c2>
 8016bea:	f1ba 0f00 	cmp.w	sl, #0
 8016bee:	f040 80f7 	bne.w	8016de0 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x34c>
 8016bf2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016bf4:	68db      	ldr	r3, [r3, #12]
 8016bf6:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 8016bfa:	f3c3 2b40 	ubfx	fp, r3, #9, #1
 8016bfe:	3501      	adds	r5, #1
 8016c00:	2d04      	cmp	r5, #4
 8016c02:	d193      	bne.n	8016b2c <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x98>
 8016c04:	f1b9 0f01 	cmp.w	r9, #1
 8016c08:	f240 812f 	bls.w	8016e6a <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3d6>
 8016c0c:	f1bb 0f00 	cmp.w	fp, #0
 8016c10:	d08f      	beq.n	8016b32 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x9e>
 8016c12:	9b00      	ldr	r3, [sp, #0]
 8016c14:	2b00      	cmp	r3, #0
 8016c16:	f000 80e6 	beq.w	8016de6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x352>
 8016c1a:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 8016c1c:	f04f 0b01 	mov.w	fp, #1
 8016c20:	a922      	add	r1, sp, #136	; 0x88
 8016c22:	a806      	add	r0, sp, #24
 8016c24:	f7ff f8d0 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8016c28:	2800      	cmp	r0, #0
 8016c2a:	f000 80de 	beq.w	8016dea <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x356>
 8016c2e:	45d9      	cmp	r9, fp
 8016c30:	f000 80de 	beq.w	8016df0 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x35c>
 8016c34:	a806      	add	r0, sp, #24
 8016c36:	f7ff f8a5 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8016c3a:	f855 302b 	ldr.w	r3, [r5, fp, lsl #2]
 8016c3e:	4283      	cmp	r3, r0
 8016c40:	f47f af77 	bne.w	8016b32 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x9e>
 8016c44:	a806      	add	r0, sp, #24
 8016c46:	f7fe fba3 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8016c4a:	f10b 0b01 	add.w	fp, fp, #1
 8016c4e:	e7e7      	b.n	8016c20 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x18c>
 8016c50:	459a      	cmp	sl, r3
 8016c52:	d1ca      	bne.n	8016bea <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x156>
 8016c54:	e7a4      	b.n	8016ba0 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x10c>
 8016c56:	a806      	add	r0, sp, #24
 8016c58:	f7fe fb9a 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8016c5c:	f10a 0a01 	add.w	sl, sl, #1
 8016c60:	e7b1      	b.n	8016bc6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x132>
 8016c62:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8016c64:	b9b3      	cbnz	r3, 8016c94 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x200>
 8016c66:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8016c68:	b343      	cbz	r3, 8016cbc <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x228>
 8016c6a:	a922      	add	r1, sp, #136	; 0x88
 8016c6c:	a806      	add	r0, sp, #24
 8016c6e:	f7ff f8ab 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8016c72:	4683      	mov	fp, r0
 8016c74:	b310      	cbz	r0, 8016cbc <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x228>
 8016c76:	a806      	add	r0, sp, #24
 8016c78:	f7ff f884 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8016c7c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8016c7e:	6812      	ldr	r2, [r2, #0]
 8016c80:	4282      	cmp	r2, r0
 8016c82:	d11b      	bne.n	8016cbc <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x228>
 8016c84:	a806      	add	r0, sp, #24
 8016c86:	f8d4 9030 	ldr.w	r9, [r4, #48]	; 0x30
 8016c8a:	f7fe fb81 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8016c8e:	f8cd b000 	str.w	fp, [sp]
 8016c92:	e7b4      	b.n	8016bfe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016c94:	a922      	add	r1, sp, #136	; 0x88
 8016c96:	a806      	add	r0, sp, #24
 8016c98:	f7ff f896 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8016c9c:	4683      	mov	fp, r0
 8016c9e:	2800      	cmp	r0, #0
 8016ca0:	d0e1      	beq.n	8016c66 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x1d2>
 8016ca2:	a806      	add	r0, sp, #24
 8016ca4:	f7ff f86e 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8016ca8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8016caa:	6812      	ldr	r2, [r2, #0]
 8016cac:	4282      	cmp	r2, r0
 8016cae:	d1da      	bne.n	8016c66 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x1d2>
 8016cb0:	a806      	add	r0, sp, #24
 8016cb2:	f8d4 9028 	ldr.w	r9, [r4, #40]	; 0x28
 8016cb6:	f7fe fb6b 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8016cba:	e7a0      	b.n	8016bfe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016cbc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8016cbe:	b91b      	cbnz	r3, 8016cc8 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x234>
 8016cc0:	9b01      	ldr	r3, [sp, #4]
 8016cc2:	f083 0b01 	eor.w	fp, r3, #1
 8016cc6:	e79a      	b.n	8016bfe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016cc8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8016cca:	2b00      	cmp	r3, #0
 8016ccc:	d1f8      	bne.n	8016cc0 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x22c>
 8016cce:	2301      	movs	r3, #1
 8016cd0:	9300      	str	r3, [sp, #0]
 8016cd2:	469b      	mov	fp, r3
 8016cd4:	e793      	b.n	8016bfe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016cd6:	a922      	add	r1, sp, #136	; 0x88
 8016cd8:	a806      	add	r0, sp, #24
 8016cda:	f7ff f875 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8016cde:	4683      	mov	fp, r0
 8016ce0:	2800      	cmp	r0, #0
 8016ce2:	d043      	beq.n	8016d6c <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2d8>
 8016ce4:	a806      	add	r0, sp, #24
 8016ce6:	f7ff f84d 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8016cea:	aa09      	add	r2, sp, #36	; 0x24
 8016cec:	9009      	str	r0, [sp, #36]	; 0x24
 8016cee:	210a      	movs	r1, #10
 8016cf0:	ee18 0a90 	vmov	r0, s17
 8016cf4:	f7f9 fc11 	bl	801051a <_ZNSt11char_traitsIwE4findEPKwjRS1_>
 8016cf8:	b1a0      	cbz	r0, 8016d24 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x290>
 8016cfa:	9b05      	ldr	r3, [sp, #20]
 8016cfc:	eba0 0b03 	sub.w	fp, r0, r3
 8016d00:	4b5d      	ldr	r3, [pc, #372]	; (8016e78 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3e4>)
 8016d02:	ea4f 0bab 	mov.w	fp, fp, asr #2
 8016d06:	681b      	ldr	r3, [r3, #0]
 8016d08:	a810      	add	r0, sp, #64	; 0x40
 8016d0a:	f813 100b 	ldrb.w	r1, [r3, fp]
 8016d0e:	f006 ff2b 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8016d12:	f106 0b01 	add.w	fp, r6, #1
 8016d16:	9e02      	ldr	r6, [sp, #8]
 8016d18:	a806      	add	r0, sp, #24
 8016d1a:	f7fe fb39 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8016d1e:	9602      	str	r6, [sp, #8]
 8016d20:	465e      	mov	r6, fp
 8016d22:	e7d8      	b.n	8016cd6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x242>
 8016d24:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016d26:	6962      	ldr	r2, [r4, #20]
 8016d28:	428a      	cmp	r2, r1
 8016d2a:	d106      	bne.n	8016d3a <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2a6>
 8016d2c:	b92f      	cbnz	r7, 8016d3a <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2a6>
 8016d2e:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8016d30:	2a00      	cmp	r2, #0
 8016d32:	dd11      	ble.n	8016d58 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2c4>
 8016d34:	465f      	mov	r7, fp
 8016d36:	4683      	mov	fp, r0
 8016d38:	e7ee      	b.n	8016d18 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x284>
 8016d3a:	7c22      	ldrb	r2, [r4, #16]
 8016d3c:	b162      	cbz	r2, 8016d58 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2c4>
 8016d3e:	69a3      	ldr	r3, [r4, #24]
 8016d40:	4299      	cmp	r1, r3
 8016d42:	d108      	bne.n	8016d56 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2c2>
 8016d44:	b977      	cbnz	r7, 8016d64 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2d0>
 8016d46:	b17e      	cbz	r6, 8016d68 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2d4>
 8016d48:	b2f1      	uxtb	r1, r6
 8016d4a:	a80a      	add	r0, sp, #40	; 0x28
 8016d4c:	f006 ff0c 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8016d50:	46bb      	mov	fp, r7
 8016d52:	9e02      	ldr	r6, [sp, #8]
 8016d54:	e7e0      	b.n	8016d18 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x284>
 8016d56:	4693      	mov	fp, r2
 8016d58:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016d5a:	2a00      	cmp	r2, #0
 8016d5c:	bf08      	it	eq
 8016d5e:	f04f 0b00 	moveq.w	fp, #0
 8016d62:	e74c      	b.n	8016bfe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016d64:	46bb      	mov	fp, r7
 8016d66:	e7f7      	b.n	8016d58 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2c4>
 8016d68:	46b3      	mov	fp, r6
 8016d6a:	e7f5      	b.n	8016d58 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2c4>
 8016d6c:	f04f 0b01 	mov.w	fp, #1
 8016d70:	e7f2      	b.n	8016d58 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2c4>
 8016d72:	a922      	add	r1, sp, #136	; 0x88
 8016d74:	a806      	add	r0, sp, #24
 8016d76:	f7ff f827 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8016d7a:	b9d8      	cbnz	r0, 8016db4 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x320>
 8016d7c:	f04f 0b00 	mov.w	fp, #0
 8016d80:	2d03      	cmp	r5, #3
 8016d82:	f43f af3c 	beq.w	8016bfe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016d86:	a922      	add	r1, sp, #136	; 0x88
 8016d88:	a806      	add	r0, sp, #24
 8016d8a:	f7ff f81d 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8016d8e:	2800      	cmp	r0, #0
 8016d90:	f43f af35 	beq.w	8016bfe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016d94:	a806      	add	r0, sp, #24
 8016d96:	f7fe fff5 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8016d9a:	2108      	movs	r1, #8
 8016d9c:	4602      	mov	r2, r0
 8016d9e:	ee18 0a10 	vmov	r0, s16
 8016da2:	f7fe fcf2 	bl	801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>
 8016da6:	2800      	cmp	r0, #0
 8016da8:	f43f af29 	beq.w	8016bfe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016dac:	a806      	add	r0, sp, #24
 8016dae:	f7fe faef 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8016db2:	e7e8      	b.n	8016d86 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2f2>
 8016db4:	a806      	add	r0, sp, #24
 8016db6:	f7fe ffe5 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8016dba:	2108      	movs	r1, #8
 8016dbc:	4602      	mov	r2, r0
 8016dbe:	ee18 0a10 	vmov	r0, s16
 8016dc2:	f7fe fce2 	bl	801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>
 8016dc6:	4683      	mov	fp, r0
 8016dc8:	2800      	cmp	r0, #0
 8016dca:	d0d7      	beq.n	8016d7c <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2e8>
 8016dcc:	a806      	add	r0, sp, #24
 8016dce:	f7fe fadf 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8016dd2:	e7d5      	b.n	8016d80 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2ec>
 8016dd4:	f04f 0b01 	mov.w	fp, #1
 8016dd8:	e7d2      	b.n	8016d80 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2ec>
 8016dda:	f8dd b004 	ldr.w	fp, [sp, #4]
 8016dde:	e70e      	b.n	8016bfe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016de0:	f04f 0b00 	mov.w	fp, #0
 8016de4:	e70b      	b.n	8016bfe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016de6:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8016de8:	e718      	b.n	8016c1c <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x188>
 8016dea:	45d9      	cmp	r9, fp
 8016dec:	f47f aea1 	bne.w	8016b32 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x9e>
 8016df0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016df2:	2b01      	cmp	r3, #1
 8016df4:	d911      	bls.n	8016e1a <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x386>
 8016df6:	2200      	movs	r2, #0
 8016df8:	2130      	movs	r1, #48	; 0x30
 8016dfa:	a810      	add	r0, sp, #64	; 0x40
 8016dfc:	f007 f87a 	bl	801def4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj>
 8016e00:	4602      	mov	r2, r0
 8016e02:	b150      	cbz	r0, 8016e1a <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x386>
 8016e04:	1c43      	adds	r3, r0, #1
 8016e06:	bf08      	it	eq
 8016e08:	9811      	ldreq	r0, [sp, #68]	; 0x44
 8016e0a:	f04f 0100 	mov.w	r1, #0
 8016e0e:	bf08      	it	eq
 8016e10:	f100 32ff 	addeq.w	r2, r0, #4294967295	; 0xffffffff
 8016e14:	a810      	add	r0, sp, #64	; 0x40
 8016e16:	f7fe fa9b 	bl	8015350 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0>
 8016e1a:	9b00      	ldr	r3, [sp, #0]
 8016e1c:	b13b      	cbz	r3, 8016e2e <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x39a>
 8016e1e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016e20:	780b      	ldrb	r3, [r1, #0]
 8016e22:	2b30      	cmp	r3, #48	; 0x30
 8016e24:	d003      	beq.n	8016e2e <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x39a>
 8016e26:	222d      	movs	r2, #45	; 0x2d
 8016e28:	a810      	add	r0, sp, #64	; 0x40
 8016e2a:	f006 ff1b 	bl	801dc64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEc>
 8016e2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016e30:	b18b      	cbz	r3, 8016e56 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3c2>
 8016e32:	b1f7      	cbz	r7, 8016e72 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3de>
 8016e34:	f89d 1008 	ldrb.w	r1, [sp, #8]
 8016e38:	a80a      	add	r0, sp, #40	; 0x28
 8016e3a:	f006 fe95 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8016e3e:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 8016e42:	aa0a      	add	r2, sp, #40	; 0x28
 8016e44:	f00d fed3 	bl	8024bee <_ZSt17__verify_groupingPKcjRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016e48:	b928      	cbnz	r0, 8016e56 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3c2>
 8016e4a:	f8d8 3000 	ldr.w	r3, [r8]
 8016e4e:	f043 0304 	orr.w	r3, r3, #4
 8016e52:	f8c8 3000 	str.w	r3, [r8]
 8016e56:	b11f      	cbz	r7, 8016e60 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3cc>
 8016e58:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8016e5a:	42b3      	cmp	r3, r6
 8016e5c:	f47f ae69 	bne.w	8016b32 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x9e>
 8016e60:	9826      	ldr	r0, [sp, #152]	; 0x98
 8016e62:	a910      	add	r1, sp, #64	; 0x40
 8016e64:	f006 ffd8 	bl	801de18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_>
 8016e68:	e669      	b.n	8016b3e <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0xaa>
 8016e6a:	f1bb 0f00 	cmp.w	fp, #0
 8016e6e:	d1bf      	bne.n	8016df0 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x35c>
 8016e70:	e65f      	b.n	8016b32 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x9e>
 8016e72:	b2f1      	uxtb	r1, r6
 8016e74:	e7e0      	b.n	8016e38 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3a4>
 8016e76:	bf00      	nop
 8016e78:	2000003c 	.word	0x2000003c

08016e7c <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE>:
 8016e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e80:	ed2d 8b02 	vpush	{d8}
 8016e84:	b097      	sub	sp, #92	; 0x5c
 8016e86:	a906      	add	r1, sp, #24
 8016e88:	e881 000c 	stmia.w	r1, {r2, r3}
 8016e8c:	e9dd 3824 	ldrd	r3, r8, [sp, #144]	; 0x90
 8016e90:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 8016e94:	9004      	str	r0, [sp, #16]
 8016e96:	4620      	mov	r0, r4
 8016e98:	f007 fde2 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8016e9c:	ee08 0a10 	vmov	s16, r0
 8016ea0:	4620      	mov	r0, r4
 8016ea2:	f7fe fa21 	bl	80152e8 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb0EEEclERKSt6locale.isra.0>
 8016ea6:	f100 0340 	add.w	r3, r0, #64	; 0x40
 8016eaa:	9305      	str	r3, [sp, #20]
 8016eac:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8016eae:	4604      	mov	r4, r0
 8016eb0:	b11b      	cbz	r3, 8016eba <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3e>
 8016eb2:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8016eb4:	3b00      	subs	r3, #0
 8016eb6:	bf18      	it	ne
 8016eb8:	2301      	movne	r3, #1
 8016eba:	9301      	str	r3, [sp, #4]
 8016ebc:	ab0c      	add	r3, sp, #48	; 0x30
 8016ebe:	930a      	str	r3, [sp, #40]	; 0x28
 8016ec0:	2300      	movs	r3, #0
 8016ec2:	930b      	str	r3, [sp, #44]	; 0x2c
 8016ec4:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8016ec8:	7c23      	ldrb	r3, [r4, #16]
 8016eca:	b11b      	cbz	r3, 8016ed4 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x58>
 8016ecc:	2120      	movs	r1, #32
 8016ece:	a80a      	add	r0, sp, #40	; 0x28
 8016ed0:	f006 fe18 	bl	801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
 8016ed4:	2500      	movs	r5, #0
 8016ed6:	ab12      	add	r3, sp, #72	; 0x48
 8016ed8:	2120      	movs	r1, #32
 8016eda:	a810      	add	r0, sp, #64	; 0x40
 8016edc:	9310      	str	r3, [sp, #64]	; 0x40
 8016ede:	9511      	str	r5, [sp, #68]	; 0x44
 8016ee0:	f88d 5048 	strb.w	r5, [sp, #72]	; 0x48
 8016ee4:	f006 fe0e 	bl	801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
 8016ee8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8016eec:	ee08 3a90 	vmov	s17, r3
 8016ef0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8016ef2:	9308      	str	r3, [sp, #32]
 8016ef4:	462f      	mov	r7, r5
 8016ef6:	462e      	mov	r6, r5
 8016ef8:	9502      	str	r5, [sp, #8]
 8016efa:	46a9      	mov	r9, r5
 8016efc:	9500      	str	r5, [sp, #0]
 8016efe:	ab08      	add	r3, sp, #32
 8016f00:	5d5b      	ldrb	r3, [r3, r5]
 8016f02:	2b04      	cmp	r3, #4
 8016f04:	d840      	bhi.n	8016f88 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x10c>
 8016f06:	e8df f013 	tbh	[pc, r3, lsl #1]
 8016f0a:	0159      	.short	0x0159
 8016f0c:	002b0128 	.word	0x002b0128
 8016f10:	00da00a0 	.word	0x00da00a0
 8016f14:	f1bb 0f00 	cmp.w	fp, #0
 8016f18:	d1f1      	bne.n	8016efe <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x82>
 8016f1a:	f8d8 3000 	ldr.w	r3, [r8]
 8016f1e:	f043 0304 	orr.w	r3, r3, #4
 8016f22:	f8c8 3000 	str.w	r3, [r8]
 8016f26:	ac06      	add	r4, sp, #24
 8016f28:	a922      	add	r1, sp, #136	; 0x88
 8016f2a:	4620      	mov	r0, r4
 8016f2c:	f7fe ff39 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8016f30:	b128      	cbz	r0, 8016f3e <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0xc2>
 8016f32:	f8d8 3000 	ldr.w	r3, [r8]
 8016f36:	f043 0302 	orr.w	r3, r3, #2
 8016f3a:	f8c8 3000 	str.w	r3, [r8]
 8016f3e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8016f42:	9b04      	ldr	r3, [sp, #16]
 8016f44:	e883 0003 	stmia.w	r3, {r0, r1}
 8016f48:	a810      	add	r0, sp, #64	; 0x40
 8016f4a:	f006 fce7 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8016f4e:	a80a      	add	r0, sp, #40	; 0x28
 8016f50:	f006 fce4 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8016f54:	9804      	ldr	r0, [sp, #16]
 8016f56:	b017      	add	sp, #92	; 0x5c
 8016f58:	ecbd 8b02 	vpop	{d8}
 8016f5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016f62:	68db      	ldr	r3, [r3, #12]
 8016f64:	059a      	lsls	r2, r3, #22
 8016f66:	d41e      	bmi.n	8016fa6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016f68:	f1b9 0f01 	cmp.w	r9, #1
 8016f6c:	d81b      	bhi.n	8016fa6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016f6e:	b1d5      	cbz	r5, 8016fa6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016f70:	2d01      	cmp	r5, #1
 8016f72:	d10c      	bne.n	8016f8e <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x112>
 8016f74:	9b01      	ldr	r3, [sp, #4]
 8016f76:	b9b3      	cbnz	r3, 8016fa6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016f78:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8016f7c:	2b03      	cmp	r3, #3
 8016f7e:	d012      	beq.n	8016fa6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016f80:	f89d 3022 	ldrb.w	r3, [sp, #34]	; 0x22
 8016f84:	2b01      	cmp	r3, #1
 8016f86:	d00e      	beq.n	8016fa6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016f88:	f04f 0b01 	mov.w	fp, #1
 8016f8c:	e02b      	b.n	8016fe6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016f8e:	2d02      	cmp	r5, #2
 8016f90:	d1fa      	bne.n	8016f88 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x10c>
 8016f92:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8016f96:	2b04      	cmp	r3, #4
 8016f98:	d005      	beq.n	8016fa6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x12a>
 8016f9a:	9a01      	ldr	r2, [sp, #4]
 8016f9c:	2a00      	cmp	r2, #0
 8016f9e:	d0f3      	beq.n	8016f88 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x10c>
 8016fa0:	2b03      	cmp	r3, #3
 8016fa2:	f040 810e 	bne.w	80171c2 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x346>
 8016fa6:	6a23      	ldr	r3, [r4, #32]
 8016fa8:	9303      	str	r3, [sp, #12]
 8016faa:	f04f 0a00 	mov.w	sl, #0
 8016fae:	a922      	add	r1, sp, #136	; 0x88
 8016fb0:	a806      	add	r0, sp, #24
 8016fb2:	f7fe ff09 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8016fb6:	9b03      	ldr	r3, [sp, #12]
 8016fb8:	4683      	mov	fp, r0
 8016fba:	2800      	cmp	r0, #0
 8016fbc:	d03c      	beq.n	8017038 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x1bc>
 8016fbe:	459a      	cmp	sl, r3
 8016fc0:	d011      	beq.n	8016fe6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8016fc2:	a806      	add	r0, sp, #24
 8016fc4:	f7fe fede 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8016fc8:	69e3      	ldr	r3, [r4, #28]
 8016fca:	f853 302a 	ldr.w	r3, [r3, sl, lsl #2]
 8016fce:	4283      	cmp	r3, r0
 8016fd0:	d035      	beq.n	801703e <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x1c2>
 8016fd2:	f1ba 0f00 	cmp.w	sl, #0
 8016fd6:	f040 80f7 	bne.w	80171c8 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x34c>
 8016fda:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016fdc:	68db      	ldr	r3, [r3, #12]
 8016fde:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 8016fe2:	f3c3 2b40 	ubfx	fp, r3, #9, #1
 8016fe6:	3501      	adds	r5, #1
 8016fe8:	2d04      	cmp	r5, #4
 8016fea:	d193      	bne.n	8016f14 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x98>
 8016fec:	f1b9 0f01 	cmp.w	r9, #1
 8016ff0:	f240 812f 	bls.w	8017252 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3d6>
 8016ff4:	f1bb 0f00 	cmp.w	fp, #0
 8016ff8:	d08f      	beq.n	8016f1a <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x9e>
 8016ffa:	9b00      	ldr	r3, [sp, #0]
 8016ffc:	2b00      	cmp	r3, #0
 8016ffe:	f000 80e6 	beq.w	80171ce <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x352>
 8017002:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 8017004:	f04f 0b01 	mov.w	fp, #1
 8017008:	a922      	add	r1, sp, #136	; 0x88
 801700a:	a806      	add	r0, sp, #24
 801700c:	f7fe fedc 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8017010:	2800      	cmp	r0, #0
 8017012:	f000 80de 	beq.w	80171d2 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x356>
 8017016:	45d9      	cmp	r9, fp
 8017018:	f000 80de 	beq.w	80171d8 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x35c>
 801701c:	a806      	add	r0, sp, #24
 801701e:	f7fe feb1 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8017022:	f855 302b 	ldr.w	r3, [r5, fp, lsl #2]
 8017026:	4283      	cmp	r3, r0
 8017028:	f47f af77 	bne.w	8016f1a <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x9e>
 801702c:	a806      	add	r0, sp, #24
 801702e:	f7fe f9af 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8017032:	f10b 0b01 	add.w	fp, fp, #1
 8017036:	e7e7      	b.n	8017008 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x18c>
 8017038:	459a      	cmp	sl, r3
 801703a:	d1ca      	bne.n	8016fd2 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x156>
 801703c:	e7a4      	b.n	8016f88 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x10c>
 801703e:	a806      	add	r0, sp, #24
 8017040:	f7fe f9a6 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8017044:	f10a 0a01 	add.w	sl, sl, #1
 8017048:	e7b1      	b.n	8016fae <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x132>
 801704a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801704c:	b9b3      	cbnz	r3, 801707c <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x200>
 801704e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8017050:	b343      	cbz	r3, 80170a4 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x228>
 8017052:	a922      	add	r1, sp, #136	; 0x88
 8017054:	a806      	add	r0, sp, #24
 8017056:	f7fe feb7 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801705a:	4683      	mov	fp, r0
 801705c:	b310      	cbz	r0, 80170a4 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x228>
 801705e:	a806      	add	r0, sp, #24
 8017060:	f7fe fe90 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8017064:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8017066:	6812      	ldr	r2, [r2, #0]
 8017068:	4282      	cmp	r2, r0
 801706a:	d11b      	bne.n	80170a4 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x228>
 801706c:	a806      	add	r0, sp, #24
 801706e:	f8d4 9030 	ldr.w	r9, [r4, #48]	; 0x30
 8017072:	f7fe f98d 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8017076:	f8cd b000 	str.w	fp, [sp]
 801707a:	e7b4      	b.n	8016fe6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 801707c:	a922      	add	r1, sp, #136	; 0x88
 801707e:	a806      	add	r0, sp, #24
 8017080:	f7fe fea2 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8017084:	4683      	mov	fp, r0
 8017086:	2800      	cmp	r0, #0
 8017088:	d0e1      	beq.n	801704e <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x1d2>
 801708a:	a806      	add	r0, sp, #24
 801708c:	f7fe fe7a 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8017090:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8017092:	6812      	ldr	r2, [r2, #0]
 8017094:	4282      	cmp	r2, r0
 8017096:	d1da      	bne.n	801704e <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x1d2>
 8017098:	a806      	add	r0, sp, #24
 801709a:	f8d4 9028 	ldr.w	r9, [r4, #40]	; 0x28
 801709e:	f7fe f977 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 80170a2:	e7a0      	b.n	8016fe6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 80170a4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80170a6:	b91b      	cbnz	r3, 80170b0 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x234>
 80170a8:	9b01      	ldr	r3, [sp, #4]
 80170aa:	f083 0b01 	eor.w	fp, r3, #1
 80170ae:	e79a      	b.n	8016fe6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 80170b0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80170b2:	2b00      	cmp	r3, #0
 80170b4:	d1f8      	bne.n	80170a8 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x22c>
 80170b6:	2301      	movs	r3, #1
 80170b8:	9300      	str	r3, [sp, #0]
 80170ba:	469b      	mov	fp, r3
 80170bc:	e793      	b.n	8016fe6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 80170be:	a922      	add	r1, sp, #136	; 0x88
 80170c0:	a806      	add	r0, sp, #24
 80170c2:	f7fe fe81 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80170c6:	4683      	mov	fp, r0
 80170c8:	2800      	cmp	r0, #0
 80170ca:	d043      	beq.n	8017154 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2d8>
 80170cc:	a806      	add	r0, sp, #24
 80170ce:	f7fe fe59 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80170d2:	aa09      	add	r2, sp, #36	; 0x24
 80170d4:	9009      	str	r0, [sp, #36]	; 0x24
 80170d6:	210a      	movs	r1, #10
 80170d8:	ee18 0a90 	vmov	r0, s17
 80170dc:	f7f9 fa1d 	bl	801051a <_ZNSt11char_traitsIwE4findEPKwjRS1_>
 80170e0:	b1a0      	cbz	r0, 801710c <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x290>
 80170e2:	9b05      	ldr	r3, [sp, #20]
 80170e4:	eba0 0b03 	sub.w	fp, r0, r3
 80170e8:	4b5d      	ldr	r3, [pc, #372]	; (8017260 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3e4>)
 80170ea:	ea4f 0bab 	mov.w	fp, fp, asr #2
 80170ee:	681b      	ldr	r3, [r3, #0]
 80170f0:	a810      	add	r0, sp, #64	; 0x40
 80170f2:	f813 100b 	ldrb.w	r1, [r3, fp]
 80170f6:	f006 fd37 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 80170fa:	f106 0b01 	add.w	fp, r6, #1
 80170fe:	9e02      	ldr	r6, [sp, #8]
 8017100:	a806      	add	r0, sp, #24
 8017102:	f7fe f945 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 8017106:	9602      	str	r6, [sp, #8]
 8017108:	465e      	mov	r6, fp
 801710a:	e7d8      	b.n	80170be <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x242>
 801710c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801710e:	6962      	ldr	r2, [r4, #20]
 8017110:	428a      	cmp	r2, r1
 8017112:	d106      	bne.n	8017122 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2a6>
 8017114:	b92f      	cbnz	r7, 8017122 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2a6>
 8017116:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8017118:	2a00      	cmp	r2, #0
 801711a:	dd11      	ble.n	8017140 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2c4>
 801711c:	465f      	mov	r7, fp
 801711e:	4683      	mov	fp, r0
 8017120:	e7ee      	b.n	8017100 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x284>
 8017122:	7c22      	ldrb	r2, [r4, #16]
 8017124:	b162      	cbz	r2, 8017140 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2c4>
 8017126:	69a3      	ldr	r3, [r4, #24]
 8017128:	4299      	cmp	r1, r3
 801712a:	d108      	bne.n	801713e <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2c2>
 801712c:	b977      	cbnz	r7, 801714c <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2d0>
 801712e:	b17e      	cbz	r6, 8017150 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2d4>
 8017130:	b2f1      	uxtb	r1, r6
 8017132:	a80a      	add	r0, sp, #40	; 0x28
 8017134:	f006 fd18 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8017138:	46bb      	mov	fp, r7
 801713a:	9e02      	ldr	r6, [sp, #8]
 801713c:	e7e0      	b.n	8017100 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x284>
 801713e:	4693      	mov	fp, r2
 8017140:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017142:	2a00      	cmp	r2, #0
 8017144:	bf08      	it	eq
 8017146:	f04f 0b00 	moveq.w	fp, #0
 801714a:	e74c      	b.n	8016fe6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 801714c:	46bb      	mov	fp, r7
 801714e:	e7f7      	b.n	8017140 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2c4>
 8017150:	46b3      	mov	fp, r6
 8017152:	e7f5      	b.n	8017140 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2c4>
 8017154:	f04f 0b01 	mov.w	fp, #1
 8017158:	e7f2      	b.n	8017140 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2c4>
 801715a:	a922      	add	r1, sp, #136	; 0x88
 801715c:	a806      	add	r0, sp, #24
 801715e:	f7fe fe33 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8017162:	b9d8      	cbnz	r0, 801719c <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x320>
 8017164:	f04f 0b00 	mov.w	fp, #0
 8017168:	2d03      	cmp	r5, #3
 801716a:	f43f af3c 	beq.w	8016fe6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 801716e:	a922      	add	r1, sp, #136	; 0x88
 8017170:	a806      	add	r0, sp, #24
 8017172:	f7fe fe29 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8017176:	2800      	cmp	r0, #0
 8017178:	f43f af35 	beq.w	8016fe6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 801717c:	a806      	add	r0, sp, #24
 801717e:	f7fe fe01 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8017182:	2108      	movs	r1, #8
 8017184:	4602      	mov	r2, r0
 8017186:	ee18 0a10 	vmov	r0, s16
 801718a:	f7fe fafe 	bl	801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>
 801718e:	2800      	cmp	r0, #0
 8017190:	f43f af29 	beq.w	8016fe6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 8017194:	a806      	add	r0, sp, #24
 8017196:	f7fe f8fb 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 801719a:	e7e8      	b.n	801716e <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2f2>
 801719c:	a806      	add	r0, sp, #24
 801719e:	f7fe fdf1 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80171a2:	2108      	movs	r1, #8
 80171a4:	4602      	mov	r2, r0
 80171a6:	ee18 0a10 	vmov	r0, s16
 80171aa:	f7fe faee 	bl	801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>
 80171ae:	4683      	mov	fp, r0
 80171b0:	2800      	cmp	r0, #0
 80171b2:	d0d7      	beq.n	8017164 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2e8>
 80171b4:	a806      	add	r0, sp, #24
 80171b6:	f7fe f8eb 	bl	8015390 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv.isra.0>
 80171ba:	e7d5      	b.n	8017168 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2ec>
 80171bc:	f04f 0b01 	mov.w	fp, #1
 80171c0:	e7d2      	b.n	8017168 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x2ec>
 80171c2:	f8dd b004 	ldr.w	fp, [sp, #4]
 80171c6:	e70e      	b.n	8016fe6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 80171c8:	f04f 0b00 	mov.w	fp, #0
 80171cc:	e70b      	b.n	8016fe6 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x16a>
 80171ce:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80171d0:	e718      	b.n	8017004 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x188>
 80171d2:	45d9      	cmp	r9, fp
 80171d4:	f47f aea1 	bne.w	8016f1a <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x9e>
 80171d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80171da:	2b01      	cmp	r3, #1
 80171dc:	d911      	bls.n	8017202 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x386>
 80171de:	2200      	movs	r2, #0
 80171e0:	2130      	movs	r1, #48	; 0x30
 80171e2:	a810      	add	r0, sp, #64	; 0x40
 80171e4:	f006 fe86 	bl	801def4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj>
 80171e8:	4602      	mov	r2, r0
 80171ea:	b150      	cbz	r0, 8017202 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x386>
 80171ec:	1c43      	adds	r3, r0, #1
 80171ee:	bf08      	it	eq
 80171f0:	9811      	ldreq	r0, [sp, #68]	; 0x44
 80171f2:	f04f 0100 	mov.w	r1, #0
 80171f6:	bf08      	it	eq
 80171f8:	f100 32ff 	addeq.w	r2, r0, #4294967295	; 0xffffffff
 80171fc:	a810      	add	r0, sp, #64	; 0x40
 80171fe:	f7fe f8a7 	bl	8015350 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj.isra.0>
 8017202:	9b00      	ldr	r3, [sp, #0]
 8017204:	b13b      	cbz	r3, 8017216 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x39a>
 8017206:	9910      	ldr	r1, [sp, #64]	; 0x40
 8017208:	780b      	ldrb	r3, [r1, #0]
 801720a:	2b30      	cmp	r3, #48	; 0x30
 801720c:	d003      	beq.n	8017216 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x39a>
 801720e:	222d      	movs	r2, #45	; 0x2d
 8017210:	a810      	add	r0, sp, #64	; 0x40
 8017212:	f006 fd27 	bl	801dc64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEc>
 8017216:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017218:	b18b      	cbz	r3, 801723e <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3c2>
 801721a:	b1f7      	cbz	r7, 801725a <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3de>
 801721c:	f89d 1008 	ldrb.w	r1, [sp, #8]
 8017220:	a80a      	add	r0, sp, #40	; 0x28
 8017222:	f006 fca1 	bl	801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8017226:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 801722a:	aa0a      	add	r2, sp, #40	; 0x28
 801722c:	f00d fcdf 	bl	8024bee <_ZSt17__verify_groupingPKcjRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017230:	b928      	cbnz	r0, 801723e <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3c2>
 8017232:	f8d8 3000 	ldr.w	r3, [r8]
 8017236:	f043 0304 	orr.w	r3, r3, #4
 801723a:	f8c8 3000 	str.w	r3, [r8]
 801723e:	b11f      	cbz	r7, 8017248 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3cc>
 8017240:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8017242:	42b3      	cmp	r3, r6
 8017244:	f47f ae69 	bne.w	8016f1a <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x9e>
 8017248:	9826      	ldr	r0, [sp, #152]	; 0x98
 801724a:	a910      	add	r1, sp, #64	; 0x40
 801724c:	f006 fde4 	bl	801de18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_>
 8017250:	e669      	b.n	8016f26 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0xaa>
 8017252:	f1bb 0f00 	cmp.w	fp, #0
 8017256:	d1bf      	bne.n	80171d8 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x35c>
 8017258:	e65f      	b.n	8016f1a <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x9e>
 801725a:	b2f1      	uxtb	r1, r6
 801725c:	e7e0      	b.n	8017220 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE+0x3a4>
 801725e:	bf00      	nop
 8017260:	2000003c 	.word	0x2000003c

08017264 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRe>:
 8017264:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017268:	b092      	sub	sp, #72	; 0x48
 801726a:	ac08      	add	r4, sp, #32
 801726c:	e884 000c 	stmia.w	r4, {r2, r3}
 8017270:	e9dd 381b 	ldrd	r3, r8, [sp, #108]	; 0x6c
 8017274:	aa0e      	add	r2, sp, #56	; 0x38
 8017276:	468c      	mov	ip, r1
 8017278:	f89d 1068 	ldrb.w	r1, [sp, #104]	; 0x68
 801727c:	920c      	str	r2, [sp, #48]	; 0x30
 801727e:	af0c      	add	r7, sp, #48	; 0x30
 8017280:	2200      	movs	r2, #0
 8017282:	9302      	str	r3, [sp, #8]
 8017284:	e9cd 8703 	strd	r8, r7, [sp, #12]
 8017288:	4606      	mov	r6, r0
 801728a:	920d      	str	r2, [sp, #52]	; 0x34
 801728c:	f88d 2038 	strb.w	r2, [sp, #56]	; 0x38
 8017290:	ad06      	add	r5, sp, #24
 8017292:	ab18      	add	r3, sp, #96	; 0x60
 8017294:	b311      	cbz	r1, 80172dc <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRe+0x78>
 8017296:	e893 0003 	ldmia.w	r3, {r0, r1}
 801729a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801729e:	4661      	mov	r1, ip
 80172a0:	e894 000c 	ldmia.w	r4, {r2, r3}
 80172a4:	4628      	mov	r0, r5
 80172a6:	f7ff fbf5 	bl	8016a94 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE>
 80172aa:	e895 0003 	ldmia.w	r5, {r0, r1}
 80172ae:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80172b0:	e884 0003 	stmia.w	r4, {r0, r1}
 80172b4:	f7f5 f812 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 80172b8:	991d      	ldr	r1, [sp, #116]	; 0x74
 80172ba:	900b      	str	r0, [sp, #44]	; 0x2c
 80172bc:	ab0b      	add	r3, sp, #44	; 0x2c
 80172be:	4642      	mov	r2, r8
 80172c0:	4628      	mov	r0, r5
 80172c2:	f00d fa01 	bl	80246c8 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi>
 80172c6:	e894 0003 	ldmia.w	r4, {r0, r1}
 80172ca:	e886 0003 	stmia.w	r6, {r0, r1}
 80172ce:	4638      	mov	r0, r7
 80172d0:	f006 fb24 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80172d4:	4630      	mov	r0, r6
 80172d6:	b012      	add	sp, #72	; 0x48
 80172d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80172dc:	e893 0003 	ldmia.w	r3, {r0, r1}
 80172e0:	e88d 0003 	stmia.w	sp, {r0, r1}
 80172e4:	4661      	mov	r1, ip
 80172e6:	e894 000c 	ldmia.w	r4, {r2, r3}
 80172ea:	4628      	mov	r0, r5
 80172ec:	f7ff fdc6 	bl	8016e7c <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE>
 80172f0:	e7db      	b.n	80172aa <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRe+0x46>

080172f2 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIwS3_SaIwEEE>:
 80172f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80172f6:	b091      	sub	sp, #68	; 0x44
 80172f8:	ac08      	add	r4, sp, #32
 80172fa:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 80172fe:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8017302:	4606      	mov	r6, r0
 8017304:	f10b 006c 	add.w	r0, fp, #108	; 0x6c
 8017308:	e884 000c 	stmia.w	r4, {r2, r3}
 801730c:	4688      	mov	r8, r1
 801730e:	f007 fba7 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8017312:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8017314:	e9cd b302 	strd	fp, r3, [sp, #8]
 8017318:	af0a      	add	r7, sp, #40	; 0x28
 801731a:	9704      	str	r7, [sp, #16]
 801731c:	ab1a      	add	r3, sp, #104	; 0x68
 801731e:	4681      	mov	r9, r0
 8017320:	e893 0003 	ldmia.w	r3, {r0, r1}
 8017324:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017328:	aa0c      	add	r2, sp, #48	; 0x30
 801732a:	920a      	str	r2, [sp, #40]	; 0x28
 801732c:	ad06      	add	r5, sp, #24
 801732e:	2200      	movs	r2, #0
 8017330:	920b      	str	r2, [sp, #44]	; 0x2c
 8017332:	f88d 2030 	strb.w	r2, [sp, #48]	; 0x30
 8017336:	4641      	mov	r1, r8
 8017338:	e894 000c 	ldmia.w	r4, {r2, r3}
 801733c:	4628      	mov	r0, r5
 801733e:	f1ba 0f00 	cmp.w	sl, #0
 8017342:	d01d      	beq.n	8017380 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIwS3_SaIwEEE+0x8e>
 8017344:	f7ff fba6 	bl	8016a94 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE>
 8017348:	e895 0003 	ldmia.w	r5, {r0, r1}
 801734c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801734e:	e884 0003 	stmia.w	r4, {r0, r1}
 8017352:	b155      	cbz	r5, 801736a <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIwS3_SaIwEEE+0x78>
 8017354:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8017356:	4629      	mov	r1, r5
 8017358:	f00c fbf8 	bl	8023b4c <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6resizeEj>
 801735c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801735e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8017360:	194a      	adds	r2, r1, r5
 8017362:	681b      	ldr	r3, [r3, #0]
 8017364:	4648      	mov	r0, r9
 8017366:	f7fe fa09 	bl	801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>
 801736a:	e894 0003 	ldmia.w	r4, {r0, r1}
 801736e:	e886 0003 	stmia.w	r6, {r0, r1}
 8017372:	4638      	mov	r0, r7
 8017374:	f006 fad2 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8017378:	4630      	mov	r0, r6
 801737a:	b011      	add	sp, #68	; 0x44
 801737c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017380:	f7ff fd7c 	bl	8016e7c <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES4_S4_S4_RSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIcS2_IcESaIcEEE>
 8017384:	e7e0      	b.n	8017348 <_ZNKSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES4_S4_bRSt8ios_baseRSt12_Ios_IostateRNS_12basic_stringIwS3_SaIwEEE+0x56>
	...

08017388 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_>:
 8017388:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801738a:	4604      	mov	r4, r0
 801738c:	4616      	mov	r6, r2
 801738e:	460d      	mov	r5, r1
 8017390:	b919      	cbnz	r1, 801739a <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_+0x12>
 8017392:	b112      	cbz	r2, 801739a <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_+0x12>
 8017394:	480d      	ldr	r0, [pc, #52]	; (80173cc <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_+0x44>)
 8017396:	f000 fa49 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 801739a:	1b73      	subs	r3, r6, r5
 801739c:	109a      	asrs	r2, r3, #2
 801739e:	2b0c      	cmp	r3, #12
 80173a0:	9201      	str	r2, [sp, #4]
 80173a2:	d907      	bls.n	80173b4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_+0x2c>
 80173a4:	2200      	movs	r2, #0
 80173a6:	a901      	add	r1, sp, #4
 80173a8:	4620      	mov	r0, r4
 80173aa:	f00c fa21 	bl	80237f0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj>
 80173ae:	9b01      	ldr	r3, [sp, #4]
 80173b0:	6020      	str	r0, [r4, #0]
 80173b2:	60a3      	str	r3, [r4, #8]
 80173b4:	6820      	ldr	r0, [r4, #0]
 80173b6:	4632      	mov	r2, r6
 80173b8:	4629      	mov	r1, r5
 80173ba:	f00c fab4 	bl	8023926 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwPKwS7_>
 80173be:	9901      	ldr	r1, [sp, #4]
 80173c0:	4620      	mov	r0, r4
 80173c2:	f00c fa0f 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 80173c6:	b002      	add	sp, #8
 80173c8:	bd70      	pop	{r4, r5, r6, pc}
 80173ca:	bf00      	nop
 80173cc:	0802f810 	.word	0x0802f810

080173d0 <_ZNKSt7__cxx117collateIwE10do_compareEPKwS3_S3_S3_>:
 80173d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80173d4:	b08d      	sub	sp, #52	; 0x34
 80173d6:	461c      	mov	r4, r3
 80173d8:	4680      	mov	r8, r0
 80173da:	ab02      	add	r3, sp, #8
 80173dc:	4668      	mov	r0, sp
 80173de:	9300      	str	r3, [sp, #0]
 80173e0:	f7ff ffd2 	bl	8017388 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_>
 80173e4:	ab08      	add	r3, sp, #32
 80173e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80173e8:	9306      	str	r3, [sp, #24]
 80173ea:	4621      	mov	r1, r4
 80173ec:	a806      	add	r0, sp, #24
 80173ee:	f7ff ffcb 	bl	8017388 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_>
 80173f2:	e9dd 9700 	ldrd	r9, r7, [sp]
 80173f6:	e9dd 5606 	ldrd	r5, r6, [sp, #24]
 80173fa:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 80173fe:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 8017402:	462a      	mov	r2, r5
 8017404:	4649      	mov	r1, r9
 8017406:	4640      	mov	r0, r8
 8017408:	f00d fb19 	bl	8024a3e <_ZNKSt7__cxx117collateIwE10_M_compareEPKwS3_>
 801740c:	4604      	mov	r4, r0
 801740e:	b978      	cbnz	r0, 8017430 <_ZNKSt7__cxx117collateIwE10do_compareEPKwS3_S3_S3_+0x60>
 8017410:	4648      	mov	r0, r9
 8017412:	f013 f817 	bl	802a444 <wcslen>
 8017416:	eb09 0980 	add.w	r9, r9, r0, lsl #2
 801741a:	4628      	mov	r0, r5
 801741c:	f013 f812 	bl	802a444 <wcslen>
 8017420:	454f      	cmp	r7, r9
 8017422:	eb05 0480 	add.w	r4, r5, r0, lsl #2
 8017426:	d10d      	bne.n	8017444 <_ZNKSt7__cxx117collateIwE10do_compareEPKwS3_S3_S3_+0x74>
 8017428:	1b34      	subs	r4, r6, r4
 801742a:	bf18      	it	ne
 801742c:	f04f 34ff 	movne.w	r4, #4294967295	; 0xffffffff
 8017430:	a806      	add	r0, sp, #24
 8017432:	f00c fa01 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8017436:	4668      	mov	r0, sp
 8017438:	f00c f9fe 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 801743c:	4620      	mov	r0, r4
 801743e:	b00d      	add	sp, #52	; 0x34
 8017440:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017444:	42a6      	cmp	r6, r4
 8017446:	d003      	beq.n	8017450 <_ZNKSt7__cxx117collateIwE10do_compareEPKwS3_S3_S3_+0x80>
 8017448:	f109 0904 	add.w	r9, r9, #4
 801744c:	1d25      	adds	r5, r4, #4
 801744e:	e7d8      	b.n	8017402 <_ZNKSt7__cxx117collateIwE10do_compareEPKwS3_S3_S3_+0x32>
 8017450:	2401      	movs	r4, #1
 8017452:	e7ed      	b.n	8017430 <_ZNKSt7__cxx117collateIwE10do_compareEPKwS3_S3_S3_+0x60>

08017454 <_ZNKSt7__cxx117collateIwE12do_transformEPKwS3_>:
 8017454:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017458:	461c      	mov	r4, r3
 801745a:	f100 0308 	add.w	r3, r0, #8
 801745e:	b086      	sub	sp, #24
 8017460:	4616      	mov	r6, r2
 8017462:	6003      	str	r3, [r0, #0]
 8017464:	2300      	movs	r3, #0
 8017466:	e9c0 3301 	strd	r3, r3, [r0, #4]
 801746a:	4622      	mov	r2, r4
 801746c:	ab02      	add	r3, sp, #8
 801746e:	4605      	mov	r5, r0
 8017470:	4688      	mov	r8, r1
 8017472:	4668      	mov	r0, sp
 8017474:	4631      	mov	r1, r6
 8017476:	9300      	str	r3, [sp, #0]
 8017478:	f7ff ff86 	bl	8017388 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_>
 801747c:	e9dd 7300 	ldrd	r7, r3, [sp]
 8017480:	eb07 0983 	add.w	r9, r7, r3, lsl #2
 8017484:	4b21      	ldr	r3, [pc, #132]	; (801750c <_ZNKSt7__cxx117collateIwE12do_transformEPKwS3_+0xb8>)
 8017486:	1ba2      	subs	r2, r4, r6
 8017488:	429a      	cmp	r2, r3
 801748a:	ea4f 0662 	mov.w	r6, r2, asr #1
 801748e:	bf94      	ite	ls
 8017490:	00b0      	lslls	r0, r6, #2
 8017492:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 8017496:	f00c fda1 	bl	8023fdc <_Znaj>
 801749a:	f06f 4a60 	mvn.w	sl, #3758096384	; 0xe0000000
 801749e:	4604      	mov	r4, r0
 80174a0:	4633      	mov	r3, r6
 80174a2:	463a      	mov	r2, r7
 80174a4:	4621      	mov	r1, r4
 80174a6:	4640      	mov	r0, r8
 80174a8:	f00d fad4 	bl	8024a54 <_ZNKSt7__cxx117collateIwE12_M_transformEPwPKwj>
 80174ac:	4286      	cmp	r6, r0
 80174ae:	d811      	bhi.n	80174d4 <_ZNKSt7__cxx117collateIwE12do_transformEPKwS3_+0x80>
 80174b0:	1c46      	adds	r6, r0, #1
 80174b2:	4620      	mov	r0, r4
 80174b4:	f00c fd0c 	bl	8023ed0 <_ZdaPv>
 80174b8:	4556      	cmp	r6, sl
 80174ba:	bf34      	ite	cc
 80174bc:	00b0      	lslcc	r0, r6, #2
 80174be:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 80174c2:	f00c fd8b 	bl	8023fdc <_Znaj>
 80174c6:	4633      	mov	r3, r6
 80174c8:	4604      	mov	r4, r0
 80174ca:	4601      	mov	r1, r0
 80174cc:	463a      	mov	r2, r7
 80174ce:	4640      	mov	r0, r8
 80174d0:	f00d fac0 	bl	8024a54 <_ZNKSt7__cxx117collateIwE12_M_transformEPwPKwj>
 80174d4:	4602      	mov	r2, r0
 80174d6:	4621      	mov	r1, r4
 80174d8:	4628      	mov	r0, r5
 80174da:	f00c fbe9 	bl	8023cb0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEPKwj>
 80174de:	4638      	mov	r0, r7
 80174e0:	f012 ffb0 	bl	802a444 <wcslen>
 80174e4:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 80174e8:	4581      	cmp	r9, r0
 80174ea:	d005      	beq.n	80174f8 <_ZNKSt7__cxx117collateIwE12do_transformEPKwS3_+0xa4>
 80174ec:	1d07      	adds	r7, r0, #4
 80174ee:	2100      	movs	r1, #0
 80174f0:	4628      	mov	r0, r5
 80174f2:	f00c fab4 	bl	8023a5e <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9push_backEw>
 80174f6:	e7d3      	b.n	80174a0 <_ZNKSt7__cxx117collateIwE12do_transformEPKwS3_+0x4c>
 80174f8:	4620      	mov	r0, r4
 80174fa:	f00c fce9 	bl	8023ed0 <_ZdaPv>
 80174fe:	4668      	mov	r0, sp
 8017500:	f00c f99a 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8017504:	4628      	mov	r0, r5
 8017506:	b006      	add	sp, #24
 8017508:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801750c:	3ffffffc 	.word	0x3ffffffc

08017510 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
 8017510:	4b18      	ldr	r3, [pc, #96]	; (8017574 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x64>)
 8017512:	681a      	ldr	r2, [r3, #0]
 8017514:	07d1      	lsls	r1, r2, #31
 8017516:	bf5c      	itt	pl
 8017518:	2201      	movpl	r2, #1
 801751a:	601a      	strpl	r2, [r3, #0]
 801751c:	4b16      	ldr	r3, [pc, #88]	; (8017578 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x68>)
 801751e:	681a      	ldr	r2, [r3, #0]
 8017520:	07d2      	lsls	r2, r2, #31
 8017522:	bf5c      	itt	pl
 8017524:	2201      	movpl	r2, #1
 8017526:	601a      	strpl	r2, [r3, #0]
 8017528:	4b14      	ldr	r3, [pc, #80]	; (801757c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>)
 801752a:	681a      	ldr	r2, [r3, #0]
 801752c:	07d0      	lsls	r0, r2, #31
 801752e:	bf5c      	itt	pl
 8017530:	2201      	movpl	r2, #1
 8017532:	601a      	strpl	r2, [r3, #0]
 8017534:	4b12      	ldr	r3, [pc, #72]	; (8017580 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x70>)
 8017536:	681a      	ldr	r2, [r3, #0]
 8017538:	07d1      	lsls	r1, r2, #31
 801753a:	bf5c      	itt	pl
 801753c:	2201      	movpl	r2, #1
 801753e:	601a      	strpl	r2, [r3, #0]
 8017540:	4b10      	ldr	r3, [pc, #64]	; (8017584 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x74>)
 8017542:	681a      	ldr	r2, [r3, #0]
 8017544:	07d2      	lsls	r2, r2, #31
 8017546:	bf5c      	itt	pl
 8017548:	2201      	movpl	r2, #1
 801754a:	601a      	strpl	r2, [r3, #0]
 801754c:	4b0e      	ldr	r3, [pc, #56]	; (8017588 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x78>)
 801754e:	681a      	ldr	r2, [r3, #0]
 8017550:	07d0      	lsls	r0, r2, #31
 8017552:	bf5c      	itt	pl
 8017554:	2201      	movpl	r2, #1
 8017556:	601a      	strpl	r2, [r3, #0]
 8017558:	4b0c      	ldr	r3, [pc, #48]	; (801758c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x7c>)
 801755a:	681a      	ldr	r2, [r3, #0]
 801755c:	07d1      	lsls	r1, r2, #31
 801755e:	bf5c      	itt	pl
 8017560:	2201      	movpl	r2, #1
 8017562:	601a      	strpl	r2, [r3, #0]
 8017564:	4b0a      	ldr	r3, [pc, #40]	; (8017590 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x80>)
 8017566:	681a      	ldr	r2, [r3, #0]
 8017568:	07d2      	lsls	r2, r2, #31
 801756a:	bf5c      	itt	pl
 801756c:	2201      	movpl	r2, #1
 801756e:	601a      	strpl	r2, [r3, #0]
 8017570:	4770      	bx	lr
 8017572:	bf00      	nop
 8017574:	20003c68 	.word	0x20003c68
 8017578:	20003c64 	.word	0x20003c64
 801757c:	20003c60 	.word	0x20003c60
 8017580:	20003c5c 	.word	0x20003c5c
 8017584:	20003c58 	.word	0x20003c58
 8017588:	20003c54 	.word	0x20003c54
 801758c:	20003c50 	.word	0x20003c50
 8017590:	20003c4c 	.word	0x20003c4c

08017594 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE7seekposESt4fposI10_mbstate_tESt13_Ios_Openmode>:
 8017594:	b082      	sub	sp, #8
 8017596:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8017598:	ad06      	add	r5, sp, #24
 801759a:	e885 000c 	stmia.w	r5, {r2, r3}
 801759e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80175a0:	680b      	ldr	r3, [r1, #0]
 80175a2:	9201      	str	r2, [sp, #4]
 80175a4:	2200      	movs	r2, #0
 80175a6:	9200      	str	r2, [sp, #0]
 80175a8:	691d      	ldr	r5, [r3, #16]
 80175aa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80175ae:	4604      	mov	r4, r0
 80175b0:	47a8      	blx	r5
 80175b2:	4620      	mov	r0, r4
 80175b4:	b003      	add	sp, #12
 80175b6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80175ba:	b002      	add	sp, #8
 80175bc:	4770      	bx	lr

080175be <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE7seekposESt4fposI10_mbstate_tESt13_Ios_Openmode>:
 80175be:	b082      	sub	sp, #8
 80175c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80175c2:	ad06      	add	r5, sp, #24
 80175c4:	e885 000c 	stmia.w	r5, {r2, r3}
 80175c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80175ca:	680b      	ldr	r3, [r1, #0]
 80175cc:	9201      	str	r2, [sp, #4]
 80175ce:	2200      	movs	r2, #0
 80175d0:	9200      	str	r2, [sp, #0]
 80175d2:	691d      	ldr	r5, [r3, #16]
 80175d4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80175d8:	4604      	mov	r4, r0
 80175da:	47a8      	blx	r5
 80175dc:	4620      	mov	r0, r4
 80175de:	b003      	add	sp, #12
 80175e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80175e4:	b002      	add	sp, #8
 80175e6:	4770      	bx	lr

080175e8 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE9underflowEv>:
 80175e8:	b510      	push	{r4, lr}
 80175ea:	4604      	mov	r4, r0
 80175ec:	6a00      	ldr	r0, [r0, #32]
 80175ee:	f00e fa93 	bl	8025b18 <getc>
 80175f2:	6a21      	ldr	r1, [r4, #32]
 80175f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80175f8:	f012 b8c2 	b.w	8029780 <ungetc>

080175fc <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE4syncEv>:
 80175fc:	6a00      	ldr	r0, [r0, #32]
 80175fe:	f00d bf3d 	b.w	802547c <fflush>

08017602 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE4syncEv>:
 8017602:	6a00      	ldr	r0, [r0, #32]
 8017604:	f00d bf3a 	b.w	802547c <fflush>

08017608 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE7seekoffExSt12_Ios_SeekdirSt13_Ios_Openmode>:
 8017608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801760a:	9b06      	ldr	r3, [sp, #24]
 801760c:	460d      	mov	r5, r1
 801760e:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8017612:	4611      	mov	r1, r2
 8017614:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8017618:	2200      	movs	r2, #0
 801761a:	e9c0 6700 	strd	r6, r7, [r0]
 801761e:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8017622:	4604      	mov	r4, r0
 8017624:	b17b      	cbz	r3, 8017646 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE7seekoffExSt12_Ios_SeekdirSt13_Ios_Openmode+0x3e>
 8017626:	2b01      	cmp	r3, #1
 8017628:	bf0c      	ite	eq
 801762a:	2201      	moveq	r2, #1
 801762c:	2202      	movne	r2, #2
 801762e:	6a28      	ldr	r0, [r5, #32]
 8017630:	f00e f88e 	bl	8025750 <fseek>
 8017634:	b928      	cbnz	r0, 8017642 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE7seekoffExSt12_Ios_SeekdirSt13_Ios_Openmode+0x3a>
 8017636:	6a28      	ldr	r0, [r5, #32]
 8017638:	f00e f948 	bl	80258cc <ftell>
 801763c:	17c3      	asrs	r3, r0, #31
 801763e:	e9c4 0300 	strd	r0, r3, [r4]
 8017642:	4620      	mov	r0, r4
 8017644:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017646:	461a      	mov	r2, r3
 8017648:	e7f1      	b.n	801762e <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE7seekoffExSt12_Ios_SeekdirSt13_Ios_Openmode+0x26>

0801764a <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE7seekoffExSt12_Ios_SeekdirSt13_Ios_Openmode>:
 801764a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801764c:	9b06      	ldr	r3, [sp, #24]
 801764e:	460d      	mov	r5, r1
 8017650:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8017654:	4611      	mov	r1, r2
 8017656:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 801765a:	2200      	movs	r2, #0
 801765c:	e9c0 6700 	strd	r6, r7, [r0]
 8017660:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8017664:	4604      	mov	r4, r0
 8017666:	b17b      	cbz	r3, 8017688 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE7seekoffExSt12_Ios_SeekdirSt13_Ios_Openmode+0x3e>
 8017668:	2b01      	cmp	r3, #1
 801766a:	bf0c      	ite	eq
 801766c:	2201      	moveq	r2, #1
 801766e:	2202      	movne	r2, #2
 8017670:	6a28      	ldr	r0, [r5, #32]
 8017672:	f00e f86d 	bl	8025750 <fseek>
 8017676:	b928      	cbnz	r0, 8017684 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE7seekoffExSt12_Ios_SeekdirSt13_Ios_Openmode+0x3a>
 8017678:	6a28      	ldr	r0, [r5, #32]
 801767a:	f00e f927 	bl	80258cc <ftell>
 801767e:	17c3      	asrs	r3, r0, #31
 8017680:	e9c4 0300 	strd	r0, r3, [r4]
 8017684:	4620      	mov	r0, r4
 8017686:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017688:	461a      	mov	r2, r3
 801768a:	e7f1      	b.n	8017670 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE7seekoffExSt12_Ios_SeekdirSt13_Ios_Openmode+0x26>

0801768c <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE5uflowEv>:
 801768c:	b510      	push	{r4, lr}
 801768e:	4604      	mov	r4, r0
 8017690:	6a00      	ldr	r0, [r0, #32]
 8017692:	f00e fa85 	bl	8025ba0 <getwc>
 8017696:	6260      	str	r0, [r4, #36]	; 0x24
 8017698:	bd10      	pop	{r4, pc}

0801769a <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE6xsputnEPKci>:
 801769a:	4603      	mov	r3, r0
 801769c:	4608      	mov	r0, r1
 801769e:	6a1b      	ldr	r3, [r3, #32]
 80176a0:	2101      	movs	r1, #1
 80176a2:	f00e ba2b 	b.w	8025afc <fwrite>

080176a6 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE6xsgetnEPci>:
 80176a6:	b538      	push	{r3, r4, r5, lr}
 80176a8:	460c      	mov	r4, r1
 80176aa:	6a03      	ldr	r3, [r0, #32]
 80176ac:	4605      	mov	r5, r0
 80176ae:	2101      	movs	r1, #1
 80176b0:	4620      	mov	r0, r4
 80176b2:	f00e f83f 	bl	8025734 <fread>
 80176b6:	2800      	cmp	r0, #0
 80176b8:	bfca      	itet	gt
 80176ba:	1824      	addgt	r4, r4, r0
 80176bc:	f04f 33ff 	movle.w	r3, #4294967295	; 0xffffffff
 80176c0:	f814 3c01 	ldrbgt.w	r3, [r4, #-1]
 80176c4:	626b      	str	r3, [r5, #36]	; 0x24
 80176c6:	bd38      	pop	{r3, r4, r5, pc}

080176c8 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE8overflowEi>:
 80176c8:	b508      	push	{r3, lr}
 80176ca:	460b      	mov	r3, r1
 80176cc:	1c5a      	adds	r2, r3, #1
 80176ce:	6a01      	ldr	r1, [r0, #32]
 80176d0:	d004      	beq.n	80176dc <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE8overflowEi+0x14>
 80176d2:	4618      	mov	r0, r3
 80176d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80176d8:	f00f bbfc 	b.w	8026ed4 <putc>
 80176dc:	4608      	mov	r0, r1
 80176de:	f00d fecd 	bl	802547c <fflush>
 80176e2:	3800      	subs	r0, #0
 80176e4:	bf18      	it	ne
 80176e6:	2001      	movne	r0, #1
 80176e8:	4240      	negs	r0, r0
 80176ea:	bd08      	pop	{r3, pc}

080176ec <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE8overflowEj>:
 80176ec:	b508      	push	{r3, lr}
 80176ee:	460b      	mov	r3, r1
 80176f0:	1c5a      	adds	r2, r3, #1
 80176f2:	6a01      	ldr	r1, [r0, #32]
 80176f4:	d004      	beq.n	8017700 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE8overflowEj+0x14>
 80176f6:	4618      	mov	r0, r3
 80176f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80176fc:	f00f bc68 	b.w	8026fd0 <putwc>
 8017700:	4608      	mov	r0, r1
 8017702:	f00d febb 	bl	802547c <fflush>
 8017706:	3800      	subs	r0, #0
 8017708:	bf18      	it	ne
 801770a:	2001      	movne	r0, #1
 801770c:	4240      	negs	r0, r0
 801770e:	bd08      	pop	{r3, pc}

08017710 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE6xsputnEPKwi>:
 8017710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017712:	4605      	mov	r5, r0
 8017714:	460e      	mov	r6, r1
 8017716:	4617      	mov	r7, r2
 8017718:	2400      	movs	r4, #0
 801771a:	42bc      	cmp	r4, r7
 801771c:	d008      	beq.n	8017730 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE6xsputnEPKwi+0x20>
 801771e:	6a29      	ldr	r1, [r5, #32]
 8017720:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8017724:	f00f fc54 	bl	8026fd0 <putwc>
 8017728:	3001      	adds	r0, #1
 801772a:	d001      	beq.n	8017730 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE6xsputnEPKwi+0x20>
 801772c:	3401      	adds	r4, #1
 801772e:	e7f4      	b.n	801771a <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE6xsputnEPKwi+0xa>
 8017730:	4620      	mov	r0, r4
 8017732:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08017734 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEED1Ev>:
 8017734:	b510      	push	{r4, lr}
 8017736:	4b04      	ldr	r3, [pc, #16]	; (8017748 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEED1Ev+0x14>)
 8017738:	4604      	mov	r4, r0
 801773a:	f840 3b1c 	str.w	r3, [r0], #28
 801773e:	f7f4 fe23 	bl	800c388 <_ZNSt6localeD1Ev>
 8017742:	4620      	mov	r0, r4
 8017744:	bd10      	pop	{r4, pc}
 8017746:	bf00      	nop
 8017748:	08030fec 	.word	0x08030fec

0801774c <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEED0Ev>:
 801774c:	b510      	push	{r4, lr}
 801774e:	4604      	mov	r4, r0
 8017750:	f7ff fff0 	bl	8017734 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEED1Ev>
 8017754:	4620      	mov	r0, r4
 8017756:	f00c fbb9 	bl	8023ecc <_ZdlPv>
 801775a:	4620      	mov	r0, r4
 801775c:	bd10      	pop	{r4, pc}
	...

08017760 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEED1Ev>:
 8017760:	b510      	push	{r4, lr}
 8017762:	4b04      	ldr	r3, [pc, #16]	; (8017774 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEED1Ev+0x14>)
 8017764:	4604      	mov	r4, r0
 8017766:	f840 3b1c 	str.w	r3, [r0], #28
 801776a:	f7f4 fe0d 	bl	800c388 <_ZNSt6localeD1Ev>
 801776e:	4620      	mov	r0, r4
 8017770:	bd10      	pop	{r4, pc}
 8017772:	bf00      	nop
 8017774:	08030fac 	.word	0x08030fac

08017778 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEED0Ev>:
 8017778:	b510      	push	{r4, lr}
 801777a:	4604      	mov	r4, r0
 801777c:	f7ff fff0 	bl	8017760 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEED1Ev>
 8017780:	4620      	mov	r0, r4
 8017782:	f00c fba3 	bl	8023ecc <_ZdlPv>
 8017786:	4620      	mov	r0, r4
 8017788:	bd10      	pop	{r4, pc}

0801778a <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE5uflowEv>:
 801778a:	b510      	push	{r4, lr}
 801778c:	4604      	mov	r4, r0
 801778e:	6a00      	ldr	r0, [r0, #32]
 8017790:	f00e f9c2 	bl	8025b18 <getc>
 8017794:	6260      	str	r0, [r4, #36]	; 0x24
 8017796:	bd10      	pop	{r4, pc}

08017798 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE9pbackfailEj>:
 8017798:	1c4a      	adds	r2, r1, #1
 801779a:	b510      	push	{r4, lr}
 801779c:	4604      	mov	r4, r0
 801779e:	4608      	mov	r0, r1
 80177a0:	d102      	bne.n	80177a8 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE9pbackfailEj+0x10>
 80177a2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80177a4:	1c43      	adds	r3, r0, #1
 80177a6:	d002      	beq.n	80177ae <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE9pbackfailEj+0x16>
 80177a8:	6a21      	ldr	r1, [r4, #32]
 80177aa:	f012 f82d 	bl	8029808 <ungetwc>
 80177ae:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80177b2:	6263      	str	r3, [r4, #36]	; 0x24
 80177b4:	bd10      	pop	{r4, pc}

080177b6 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE9underflowEv>:
 80177b6:	b510      	push	{r4, lr}
 80177b8:	4604      	mov	r4, r0
 80177ba:	6a00      	ldr	r0, [r0, #32]
 80177bc:	f00e f9f0 	bl	8025ba0 <getwc>
 80177c0:	6a21      	ldr	r1, [r4, #32]
 80177c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80177c6:	f012 b81f 	b.w	8029808 <ungetwc>

080177ca <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE6xsgetnEPwi>:
 80177ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80177cc:	4605      	mov	r5, r0
 80177ce:	460e      	mov	r6, r1
 80177d0:	4617      	mov	r7, r2
 80177d2:	2400      	movs	r4, #0
 80177d4:	42bc      	cmp	r4, r7
 80177d6:	d008      	beq.n	80177ea <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE6xsgetnEPwi+0x20>
 80177d8:	6a28      	ldr	r0, [r5, #32]
 80177da:	f00e f9e1 	bl	8025ba0 <getwc>
 80177de:	1c43      	adds	r3, r0, #1
 80177e0:	d003      	beq.n	80177ea <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE6xsgetnEPwi+0x20>
 80177e2:	f846 0024 	str.w	r0, [r6, r4, lsl #2]
 80177e6:	3401      	adds	r4, #1
 80177e8:	e7f4      	b.n	80177d4 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE6xsgetnEPwi+0xa>
 80177ea:	b13c      	cbz	r4, 80177fc <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE6xsgetnEPwi+0x32>
 80177ec:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 80177f0:	3b01      	subs	r3, #1
 80177f2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80177f6:	626b      	str	r3, [r5, #36]	; 0x24
 80177f8:	4620      	mov	r0, r4
 80177fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80177fc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8017800:	e7f9      	b.n	80177f6 <_ZN9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEE6xsgetnEPwi+0x2c>

08017802 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE9pbackfailEi>:
 8017802:	1c4a      	adds	r2, r1, #1
 8017804:	b510      	push	{r4, lr}
 8017806:	4604      	mov	r4, r0
 8017808:	4608      	mov	r0, r1
 801780a:	d102      	bne.n	8017812 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE9pbackfailEi+0x10>
 801780c:	6a60      	ldr	r0, [r4, #36]	; 0x24
 801780e:	1c43      	adds	r3, r0, #1
 8017810:	d002      	beq.n	8017818 <_ZN9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEE9pbackfailEi+0x16>
 8017812:	6a21      	ldr	r1, [r4, #32]
 8017814:	f011 ffb4 	bl	8029780 <ungetc>
 8017818:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801781c:	6263      	str	r3, [r4, #36]	; 0x24
 801781e:	bd10      	pop	{r4, pc}

08017820 <_ZSt17__throw_bad_allocv>:
 8017820:	b508      	push	{r3, lr}
 8017822:	f00d fd00 	bl	8025226 <abort>

08017826 <_ZSt16__throw_bad_castv>:
 8017826:	b508      	push	{r3, lr}
 8017828:	f00d fcfd 	bl	8025226 <abort>

0801782c <_ZSt19__throw_logic_errorPKc>:
 801782c:	b508      	push	{r3, lr}
 801782e:	f00d fcfa 	bl	8025226 <abort>

08017832 <_ZSt20__throw_length_errorPKc>:
 8017832:	b508      	push	{r3, lr}
 8017834:	f00d fcf7 	bl	8025226 <abort>

08017838 <_ZSt24__throw_out_of_range_fmtPKcz>:
 8017838:	b40f      	push	{r0, r1, r2, r3}
 801783a:	b580      	push	{r7, lr}
 801783c:	b084      	sub	sp, #16
 801783e:	af00      	add	r7, sp, #0
 8017840:	f107 0418 	add.w	r4, r7, #24
 8017844:	f854 2b04 	ldr.w	r2, [r4], #4
 8017848:	607a      	str	r2, [r7, #4]
 801784a:	4610      	mov	r0, r2
 801784c:	f7e8 fd1a 	bl	8000284 <strlen>
 8017850:	f200 2307 	addw	r3, r0, #519	; 0x207
 8017854:	f023 0307 	bic.w	r3, r3, #7
 8017858:	ebad 0d03 	sub.w	sp, sp, r3
 801785c:	f500 7100 	add.w	r1, r0, #512	; 0x200
 8017860:	687a      	ldr	r2, [r7, #4]
 8017862:	60fc      	str	r4, [r7, #12]
 8017864:	4623      	mov	r3, r4
 8017866:	4668      	mov	r0, sp
 8017868:	f005 fe92 	bl	801d590 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list>
 801786c:	f00d fcdb 	bl	8025226 <abort>

08017870 <_ZSt21__throw_runtime_errorPKc>:
 8017870:	b508      	push	{r3, lr}
 8017872:	f00d fcd8 	bl	8025226 <abort>
	...

08017878 <_ZNSt9basic_iosIcSt11char_traitsIcEED1Ev>:
 8017878:	b510      	push	{r4, lr}
 801787a:	4b03      	ldr	r3, [pc, #12]	; (8017888 <_ZNSt9basic_iosIcSt11char_traitsIcEED1Ev+0x10>)
 801787c:	6003      	str	r3, [r0, #0]
 801787e:	4604      	mov	r4, r0
 8017880:	f000 f8f6 	bl	8017a70 <_ZNSt8ios_baseD1Ev>
 8017884:	4620      	mov	r0, r4
 8017886:	bd10      	pop	{r4, pc}
 8017888:	080307ac 	.word	0x080307ac

0801788c <_ZNSt9basic_iosIwSt11char_traitsIwEED1Ev>:
 801788c:	b510      	push	{r4, lr}
 801788e:	4b03      	ldr	r3, [pc, #12]	; (801789c <_ZNSt9basic_iosIwSt11char_traitsIwEED1Ev+0x10>)
 8017890:	6003      	str	r3, [r0, #0]
 8017892:	4604      	mov	r4, r0
 8017894:	f000 f8ec 	bl	8017a70 <_ZNSt8ios_baseD1Ev>
 8017898:	4620      	mov	r0, r4
 801789a:	bd10      	pop	{r4, pc}
 801789c:	080307bc 	.word	0x080307bc

080178a0 <_ZNSt9basic_iosIcSt11char_traitsIcEED0Ev>:
 80178a0:	b510      	push	{r4, lr}
 80178a2:	4604      	mov	r4, r0
 80178a4:	f7ff ffe8 	bl	8017878 <_ZNSt9basic_iosIcSt11char_traitsIcEED1Ev>
 80178a8:	4620      	mov	r0, r4
 80178aa:	f00c fb0f 	bl	8023ecc <_ZdlPv>
 80178ae:	4620      	mov	r0, r4
 80178b0:	bd10      	pop	{r4, pc}

080178b2 <_ZNSt9basic_iosIwSt11char_traitsIwEED0Ev>:
 80178b2:	b510      	push	{r4, lr}
 80178b4:	4604      	mov	r4, r0
 80178b6:	f7ff ffe9 	bl	801788c <_ZNSt9basic_iosIwSt11char_traitsIwEED1Ev>
 80178ba:	4620      	mov	r0, r4
 80178bc:	f00c fb06 	bl	8023ecc <_ZdlPv>
 80178c0:	4620      	mov	r0, r4
 80178c2:	bd10      	pop	{r4, pc}

080178c4 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate>:
 80178c4:	b508      	push	{r3, lr}
 80178c6:	6f83      	ldr	r3, [r0, #120]	; 0x78
 80178c8:	b90b      	cbnz	r3, 80178ce <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate+0xa>
 80178ca:	f041 0101 	orr.w	r1, r1, #1
 80178ce:	6903      	ldr	r3, [r0, #16]
 80178d0:	6141      	str	r1, [r0, #20]
 80178d2:	4219      	tst	r1, r3
 80178d4:	d002      	beq.n	80178dc <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate+0x18>
 80178d6:	4802      	ldr	r0, [pc, #8]	; (80178e0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate+0x1c>)
 80178d8:	f00d fbe8 	bl	80250ac <_ZSt19__throw_ios_failurePKc>
 80178dc:	bd08      	pop	{r3, pc}
 80178de:	bf00      	nop
 80178e0:	08030790 	.word	0x08030790

080178e4 <_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate>:
 80178e4:	b508      	push	{r3, lr}
 80178e6:	6943      	ldr	r3, [r0, #20]
 80178e8:	4319      	orrs	r1, r3
 80178ea:	f7ff ffeb 	bl	80178c4 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate>
 80178ee:	bd08      	pop	{r3, pc}

080178f0 <_ZNSt9basic_iosIcSt11char_traitsIcEE15_M_cache_localeERKSt6locale>:
 80178f0:	b538      	push	{r3, r4, r5, lr}
 80178f2:	4604      	mov	r4, r0
 80178f4:	4608      	mov	r0, r1
 80178f6:	460d      	mov	r5, r1
 80178f8:	f001 f90a 	bl	8018b10 <_ZSt9has_facetISt5ctypeIcEEbRKSt6locale>
 80178fc:	b110      	cbz	r0, 8017904 <_ZNSt9basic_iosIcSt11char_traitsIcEE15_M_cache_localeERKSt6locale+0x14>
 80178fe:	4628      	mov	r0, r5
 8017900:	f000 fe54 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8017904:	67e0      	str	r0, [r4, #124]	; 0x7c
 8017906:	4628      	mov	r0, r5
 8017908:	f001 f920 	bl	8018b4c <_ZSt9has_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale>
 801790c:	b110      	cbz	r0, 8017914 <_ZNSt9basic_iosIcSt11char_traitsIcEE15_M_cache_localeERKSt6locale+0x24>
 801790e:	4628      	mov	r0, r5
 8017910:	f000 ff04 	bl	801871c <_ZSt9use_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale>
 8017914:	f8c4 0080 	str.w	r0, [r4, #128]	; 0x80
 8017918:	4628      	mov	r0, r5
 801791a:	f001 f935 	bl	8018b88 <_ZSt9has_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale>
 801791e:	b110      	cbz	r0, 8017926 <_ZNSt9basic_iosIcSt11char_traitsIcEE15_M_cache_localeERKSt6locale+0x36>
 8017920:	4628      	mov	r0, r5
 8017922:	f000 ff19 	bl	8018758 <_ZSt9use_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale>
 8017926:	f8c4 0084 	str.w	r0, [r4, #132]	; 0x84
 801792a:	bd38      	pop	{r3, r4, r5, pc}

0801792c <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E>:
 801792c:	b538      	push	{r3, r4, r5, lr}
 801792e:	4604      	mov	r4, r0
 8017930:	460d      	mov	r5, r1
 8017932:	f00d f8b4 	bl	8024a9e <_ZNSt8ios_base7_M_initEv>
 8017936:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 801793a:	4620      	mov	r0, r4
 801793c:	f7ff ffd8 	bl	80178f0 <_ZNSt9basic_iosIcSt11char_traitsIcEE15_M_cache_localeERKSt6locale>
 8017940:	67a5      	str	r5, [r4, #120]	; 0x78
 8017942:	fab5 f585 	clz	r5, r5
 8017946:	2300      	movs	r3, #0
 8017948:	096d      	lsrs	r5, r5, #5
 801794a:	6723      	str	r3, [r4, #112]	; 0x70
 801794c:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
 8017950:	6123      	str	r3, [r4, #16]
 8017952:	6165      	str	r5, [r4, #20]
 8017954:	bd38      	pop	{r3, r4, r5, pc}
	...

08017958 <_ZNSt9basic_iosIwSt11char_traitsIwEE5clearESt12_Ios_Iostate>:
 8017958:	b508      	push	{r3, lr}
 801795a:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
 801795c:	b90b      	cbnz	r3, 8017962 <_ZNSt9basic_iosIwSt11char_traitsIwEE5clearESt12_Ios_Iostate+0xa>
 801795e:	f041 0101 	orr.w	r1, r1, #1
 8017962:	6903      	ldr	r3, [r0, #16]
 8017964:	6141      	str	r1, [r0, #20]
 8017966:	4219      	tst	r1, r3
 8017968:	d002      	beq.n	8017970 <_ZNSt9basic_iosIwSt11char_traitsIwEE5clearESt12_Ios_Iostate+0x18>
 801796a:	4802      	ldr	r0, [pc, #8]	; (8017974 <_ZNSt9basic_iosIwSt11char_traitsIwEE5clearESt12_Ios_Iostate+0x1c>)
 801796c:	f00d fb9e 	bl	80250ac <_ZSt19__throw_ios_failurePKc>
 8017970:	bd08      	pop	{r3, pc}
 8017972:	bf00      	nop
 8017974:	08030790 	.word	0x08030790

08017978 <_ZNSt9basic_iosIwSt11char_traitsIwEE8setstateESt12_Ios_Iostate>:
 8017978:	b508      	push	{r3, lr}
 801797a:	6943      	ldr	r3, [r0, #20]
 801797c:	4319      	orrs	r1, r3
 801797e:	f7ff ffeb 	bl	8017958 <_ZNSt9basic_iosIwSt11char_traitsIwEE5clearESt12_Ios_Iostate>
 8017982:	bd08      	pop	{r3, pc}

08017984 <_ZNSt9basic_iosIwSt11char_traitsIwEE15_M_cache_localeERKSt6locale>:
 8017984:	b538      	push	{r3, r4, r5, lr}
 8017986:	4604      	mov	r4, r0
 8017988:	4608      	mov	r0, r1
 801798a:	460d      	mov	r5, r1
 801798c:	f007 f93a 	bl	801ec04 <_ZSt9has_facetISt5ctypeIwEEbRKSt6locale>
 8017990:	b110      	cbz	r0, 8017998 <_ZNSt9basic_iosIwSt11char_traitsIwEE15_M_cache_localeERKSt6locale+0x14>
 8017992:	4628      	mov	r0, r5
 8017994:	f007 f864 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8017998:	f8c4 0080 	str.w	r0, [r4, #128]	; 0x80
 801799c:	4628      	mov	r0, r5
 801799e:	f007 f94f 	bl	801ec40 <_ZSt9has_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale>
 80179a2:	b110      	cbz	r0, 80179aa <_ZNSt9basic_iosIwSt11char_traitsIwEE15_M_cache_localeERKSt6locale+0x26>
 80179a4:	4628      	mov	r0, r5
 80179a6:	f007 f897 	bl	801ead8 <_ZSt9use_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale>
 80179aa:	f8c4 0084 	str.w	r0, [r4, #132]	; 0x84
 80179ae:	4628      	mov	r0, r5
 80179b0:	f007 f964 	bl	801ec7c <_ZSt9has_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale>
 80179b4:	b110      	cbz	r0, 80179bc <_ZNSt9basic_iosIwSt11char_traitsIwEE15_M_cache_localeERKSt6locale+0x38>
 80179b6:	4628      	mov	r0, r5
 80179b8:	f007 f8ac 	bl	801eb14 <_ZSt9use_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale>
 80179bc:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80179c0:	bd38      	pop	{r3, r4, r5, pc}

080179c2 <_ZNSt9basic_iosIwSt11char_traitsIwEE4initEPSt15basic_streambufIwS1_E>:
 80179c2:	b538      	push	{r3, r4, r5, lr}
 80179c4:	4604      	mov	r4, r0
 80179c6:	460d      	mov	r5, r1
 80179c8:	f00d f869 	bl	8024a9e <_ZNSt8ios_base7_M_initEv>
 80179cc:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 80179d0:	4620      	mov	r0, r4
 80179d2:	f7ff ffd7 	bl	8017984 <_ZNSt9basic_iosIwSt11char_traitsIwEE15_M_cache_localeERKSt6locale>
 80179d6:	67e5      	str	r5, [r4, #124]	; 0x7c
 80179d8:	fab5 f585 	clz	r5, r5
 80179dc:	2300      	movs	r3, #0
 80179de:	096d      	lsrs	r5, r5, #5
 80179e0:	6763      	str	r3, [r4, #116]	; 0x74
 80179e2:	f884 3078 	strb.w	r3, [r4, #120]	; 0x78
 80179e6:	6723      	str	r3, [r4, #112]	; 0x70
 80179e8:	6123      	str	r3, [r4, #16]
 80179ea:	6165      	str	r5, [r4, #20]
 80179ec:	bd38      	pop	{r3, r4, r5, pc}
	...

080179f0 <_ZNSt8ios_baseC1Ev>:
 80179f0:	4b0f      	ldr	r3, [pc, #60]	; (8017a30 <_ZNSt8ios_baseC1Ev+0x40>)
 80179f2:	b510      	push	{r4, lr}
 80179f4:	f100 0124 	add.w	r1, r0, #36	; 0x24
 80179f8:	6003      	str	r3, [r0, #0]
 80179fa:	2300      	movs	r3, #0
 80179fc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8017a00:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8017a04:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8017a08:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8017a0c:	4604      	mov	r4, r0
 8017a0e:	460a      	mov	r2, r1
 8017a10:	3064      	adds	r0, #100	; 0x64
 8017a12:	e9c2 3300 	strd	r3, r3, [r2]
 8017a16:	3208      	adds	r2, #8
 8017a18:	4290      	cmp	r0, r2
 8017a1a:	d1fa      	bne.n	8017a12 <_ZNSt8ios_baseC1Ev+0x22>
 8017a1c:	2308      	movs	r3, #8
 8017a1e:	e9c4 3119 	strd	r3, r1, [r4, #100]	; 0x64
 8017a22:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 8017a26:	f7f5 f9a9 	bl	800cd7c <_ZNSt6localeC1Ev>
 8017a2a:	4620      	mov	r0, r4
 8017a2c:	bd10      	pop	{r4, pc}
 8017a2e:	bf00      	nop
 8017a30:	0803083c 	.word	0x0803083c

08017a34 <_ZNSt8ios_base17_M_call_callbacksENS_5eventE>:
 8017a34:	b570      	push	{r4, r5, r6, lr}
 8017a36:	6984      	ldr	r4, [r0, #24]
 8017a38:	4605      	mov	r5, r0
 8017a3a:	460e      	mov	r6, r1
 8017a3c:	b134      	cbz	r4, 8017a4c <_ZNSt8ios_base17_M_call_callbacksENS_5eventE+0x18>
 8017a3e:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 8017a42:	4629      	mov	r1, r5
 8017a44:	4630      	mov	r0, r6
 8017a46:	4798      	blx	r3
 8017a48:	6824      	ldr	r4, [r4, #0]
 8017a4a:	e7f7      	b.n	8017a3c <_ZNSt8ios_base17_M_call_callbacksENS_5eventE+0x8>
 8017a4c:	bd70      	pop	{r4, r5, r6, pc}

08017a4e <_ZNSt8ios_base20_M_dispose_callbacksEv>:
 8017a4e:	b538      	push	{r3, r4, r5, lr}
 8017a50:	4604      	mov	r4, r0
 8017a52:	6980      	ldr	r0, [r0, #24]
 8017a54:	b140      	cbz	r0, 8017a68 <_ZNSt8ios_base20_M_dispose_callbacksEv+0x1a>
 8017a56:	68c3      	ldr	r3, [r0, #12]
 8017a58:	1e5a      	subs	r2, r3, #1
 8017a5a:	60c2      	str	r2, [r0, #12]
 8017a5c:	b923      	cbnz	r3, 8017a68 <_ZNSt8ios_base20_M_dispose_callbacksEv+0x1a>
 8017a5e:	6805      	ldr	r5, [r0, #0]
 8017a60:	f00c fa34 	bl	8023ecc <_ZdlPv>
 8017a64:	4628      	mov	r0, r5
 8017a66:	e7f5      	b.n	8017a54 <_ZNSt8ios_base20_M_dispose_callbacksEv+0x6>
 8017a68:	2300      	movs	r3, #0
 8017a6a:	61a3      	str	r3, [r4, #24]
 8017a6c:	bd38      	pop	{r3, r4, r5, pc}
	...

08017a70 <_ZNSt8ios_baseD1Ev>:
 8017a70:	4b0c      	ldr	r3, [pc, #48]	; (8017aa4 <_ZNSt8ios_baseD1Ev+0x34>)
 8017a72:	b510      	push	{r4, lr}
 8017a74:	2100      	movs	r1, #0
 8017a76:	4604      	mov	r4, r0
 8017a78:	6003      	str	r3, [r0, #0]
 8017a7a:	f7ff ffdb 	bl	8017a34 <_ZNSt8ios_base17_M_call_callbacksENS_5eventE>
 8017a7e:	4620      	mov	r0, r4
 8017a80:	f7ff ffe5 	bl	8017a4e <_ZNSt8ios_base20_M_dispose_callbacksEv>
 8017a84:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8017a86:	f104 0324 	add.w	r3, r4, #36	; 0x24
 8017a8a:	4298      	cmp	r0, r3
 8017a8c:	d004      	beq.n	8017a98 <_ZNSt8ios_baseD1Ev+0x28>
 8017a8e:	b108      	cbz	r0, 8017a94 <_ZNSt8ios_baseD1Ev+0x24>
 8017a90:	f00c fa1e 	bl	8023ed0 <_ZdaPv>
 8017a94:	2300      	movs	r3, #0
 8017a96:	66a3      	str	r3, [r4, #104]	; 0x68
 8017a98:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 8017a9c:	f7f4 fc74 	bl	800c388 <_ZNSt6localeD1Ev>
 8017aa0:	4620      	mov	r0, r4
 8017aa2:	bd10      	pop	{r4, pc}
 8017aa4:	0803083c 	.word	0x0803083c

08017aa8 <_ZNSt8ios_baseD0Ev>:
 8017aa8:	b510      	push	{r4, lr}
 8017aaa:	4604      	mov	r4, r0
 8017aac:	f7ff ffe0 	bl	8017a70 <_ZNSt8ios_baseD1Ev>
 8017ab0:	4620      	mov	r0, r4
 8017ab2:	f00c fa0b 	bl	8023ecc <_ZdlPv>
 8017ab6:	4620      	mov	r0, r4
 8017ab8:	bd10      	pop	{r4, pc}
	...

08017abc <_ZNSiD1Ev>:
 8017abc:	b510      	push	{r4, lr}
 8017abe:	4b06      	ldr	r3, [pc, #24]	; (8017ad8 <_ZNSiD1Ev+0x1c>)
 8017ac0:	6003      	str	r3, [r0, #0]
 8017ac2:	3314      	adds	r3, #20
 8017ac4:	6083      	str	r3, [r0, #8]
 8017ac6:	2300      	movs	r3, #0
 8017ac8:	4604      	mov	r4, r0
 8017aca:	6043      	str	r3, [r0, #4]
 8017acc:	3008      	adds	r0, #8
 8017ace:	f7ff fed3 	bl	8017878 <_ZNSt9basic_iosIcSt11char_traitsIcEED1Ev>
 8017ad2:	4620      	mov	r0, r4
 8017ad4:	bd10      	pop	{r4, pc}
 8017ad6:	bf00      	nop
 8017ad8:	08030858 	.word	0x08030858

08017adc <_ZTv0_n12_NSiD1Ev>:
 8017adc:	f8d0 c000 	ldr.w	ip, [r0]
 8017ae0:	f1ac 0c0c 	sub.w	ip, ip, #12
 8017ae4:	f8dc c000 	ldr.w	ip, [ip]
 8017ae8:	4460      	add	r0, ip
 8017aea:	e7e7      	b.n	8017abc <_ZNSiD1Ev>

08017aec <_ZNSt13basic_istreamIwSt11char_traitsIwEED1Ev>:
 8017aec:	b510      	push	{r4, lr}
 8017aee:	4b06      	ldr	r3, [pc, #24]	; (8017b08 <_ZNSt13basic_istreamIwSt11char_traitsIwEED1Ev+0x1c>)
 8017af0:	6003      	str	r3, [r0, #0]
 8017af2:	3314      	adds	r3, #20
 8017af4:	6083      	str	r3, [r0, #8]
 8017af6:	2300      	movs	r3, #0
 8017af8:	4604      	mov	r4, r0
 8017afa:	6043      	str	r3, [r0, #4]
 8017afc:	3008      	adds	r0, #8
 8017afe:	f7ff fec5 	bl	801788c <_ZNSt9basic_iosIwSt11char_traitsIwEED1Ev>
 8017b02:	4620      	mov	r0, r4
 8017b04:	bd10      	pop	{r4, pc}
 8017b06:	bf00      	nop
 8017b08:	08030888 	.word	0x08030888

08017b0c <_ZTv0_n12_NSt13basic_istreamIwSt11char_traitsIwEED1Ev>:
 8017b0c:	f8d0 c000 	ldr.w	ip, [r0]
 8017b10:	f1ac 0c0c 	sub.w	ip, ip, #12
 8017b14:	f8dc c000 	ldr.w	ip, [ip]
 8017b18:	4460      	add	r0, ip
 8017b1a:	e7e7      	b.n	8017aec <_ZNSt13basic_istreamIwSt11char_traitsIwEED1Ev>

08017b1c <_ZNSiD0Ev>:
 8017b1c:	b510      	push	{r4, lr}
 8017b1e:	4604      	mov	r4, r0
 8017b20:	f7ff ffcc 	bl	8017abc <_ZNSiD1Ev>
 8017b24:	4620      	mov	r0, r4
 8017b26:	f00c f9d1 	bl	8023ecc <_ZdlPv>
 8017b2a:	4620      	mov	r0, r4
 8017b2c:	bd10      	pop	{r4, pc}

08017b2e <_ZTv0_n12_NSiD0Ev>:
 8017b2e:	f8d0 c000 	ldr.w	ip, [r0]
 8017b32:	f1ac 0c0c 	sub.w	ip, ip, #12
 8017b36:	f8dc c000 	ldr.w	ip, [ip]
 8017b3a:	4460      	add	r0, ip
 8017b3c:	e7ee      	b.n	8017b1c <_ZNSiD0Ev>

08017b3e <_ZNSt13basic_istreamIwSt11char_traitsIwEED0Ev>:
 8017b3e:	b510      	push	{r4, lr}
 8017b40:	4604      	mov	r4, r0
 8017b42:	f7ff ffd3 	bl	8017aec <_ZNSt13basic_istreamIwSt11char_traitsIwEED1Ev>
 8017b46:	4620      	mov	r0, r4
 8017b48:	f00c f9c0 	bl	8023ecc <_ZdlPv>
 8017b4c:	4620      	mov	r0, r4
 8017b4e:	bd10      	pop	{r4, pc}

08017b50 <_ZTv0_n12_NSt13basic_istreamIwSt11char_traitsIwEED0Ev>:
 8017b50:	f8d0 c000 	ldr.w	ip, [r0]
 8017b54:	f1ac 0c0c 	sub.w	ip, ip, #12
 8017b58:	f8dc c000 	ldr.w	ip, [ip]
 8017b5c:	4460      	add	r0, ip
 8017b5e:	e7ee      	b.n	8017b3e <_ZNSt13basic_istreamIwSt11char_traitsIwEED0Ev>

08017b60 <_ZNSiD2Ev>:
 8017b60:	680a      	ldr	r2, [r1, #0]
 8017b62:	6002      	str	r2, [r0, #0]
 8017b64:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 8017b68:	6849      	ldr	r1, [r1, #4]
 8017b6a:	5081      	str	r1, [r0, r2]
 8017b6c:	2200      	movs	r2, #0
 8017b6e:	6042      	str	r2, [r0, #4]
 8017b70:	4770      	bx	lr

08017b72 <_ZNSt13basic_istreamIwSt11char_traitsIwEED2Ev>:
 8017b72:	680a      	ldr	r2, [r1, #0]
 8017b74:	6002      	str	r2, [r0, #0]
 8017b76:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 8017b7a:	6849      	ldr	r1, [r1, #4]
 8017b7c:	5081      	str	r1, [r0, r2]
 8017b7e:	2200      	movs	r2, #0
 8017b80:	6042      	str	r2, [r0, #4]
 8017b82:	4770      	bx	lr

08017b84 <_ZNKSt10moneypunctIcLb0EE16do_decimal_pointEv>:
 8017b84:	6883      	ldr	r3, [r0, #8]
 8017b86:	7c58      	ldrb	r0, [r3, #17]
 8017b88:	4770      	bx	lr

08017b8a <_ZNKSt10moneypunctIcLb0EE16do_thousands_sepEv>:
 8017b8a:	6883      	ldr	r3, [r0, #8]
 8017b8c:	7c98      	ldrb	r0, [r3, #18]
 8017b8e:	4770      	bx	lr

08017b90 <_ZNKSt10moneypunctIcLb0EE14do_frac_digitsEv>:
 8017b90:	6883      	ldr	r3, [r0, #8]
 8017b92:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8017b94:	4770      	bx	lr

08017b96 <_ZNKSt10moneypunctIcLb0EE13do_pos_formatEv>:
 8017b96:	6883      	ldr	r3, [r0, #8]
 8017b98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017b9a:	2000      	movs	r0, #0
 8017b9c:	b2da      	uxtb	r2, r3
 8017b9e:	f362 0007 	bfi	r0, r2, #0, #8
 8017ba2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8017ba6:	f362 200f 	bfi	r0, r2, #8, #8
 8017baa:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8017bae:	f362 4017 	bfi	r0, r2, #16, #8
 8017bb2:	0e1b      	lsrs	r3, r3, #24
 8017bb4:	b082      	sub	sp, #8
 8017bb6:	f363 601f 	bfi	r0, r3, #24, #8
 8017bba:	b002      	add	sp, #8
 8017bbc:	4770      	bx	lr

08017bbe <_ZNKSt10moneypunctIcLb0EE13do_neg_formatEv>:
 8017bbe:	6883      	ldr	r3, [r0, #8]
 8017bc0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8017bc2:	2000      	movs	r0, #0
 8017bc4:	b2da      	uxtb	r2, r3
 8017bc6:	f362 0007 	bfi	r0, r2, #0, #8
 8017bca:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8017bce:	f362 200f 	bfi	r0, r2, #8, #8
 8017bd2:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8017bd6:	f362 4017 	bfi	r0, r2, #16, #8
 8017bda:	0e1b      	lsrs	r3, r3, #24
 8017bdc:	b082      	sub	sp, #8
 8017bde:	f363 601f 	bfi	r0, r3, #24, #8
 8017be2:	b002      	add	sp, #8
 8017be4:	4770      	bx	lr

08017be6 <_ZNKSt10moneypunctIcLb1EE16do_decimal_pointEv>:
 8017be6:	6883      	ldr	r3, [r0, #8]
 8017be8:	7c58      	ldrb	r0, [r3, #17]
 8017bea:	4770      	bx	lr

08017bec <_ZNKSt10moneypunctIcLb1EE16do_thousands_sepEv>:
 8017bec:	6883      	ldr	r3, [r0, #8]
 8017bee:	7c98      	ldrb	r0, [r3, #18]
 8017bf0:	4770      	bx	lr

08017bf2 <_ZNKSt10moneypunctIcLb1EE14do_frac_digitsEv>:
 8017bf2:	6883      	ldr	r3, [r0, #8]
 8017bf4:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8017bf6:	4770      	bx	lr

08017bf8 <_ZNKSt10moneypunctIcLb1EE13do_pos_formatEv>:
 8017bf8:	6883      	ldr	r3, [r0, #8]
 8017bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017bfc:	2000      	movs	r0, #0
 8017bfe:	b2da      	uxtb	r2, r3
 8017c00:	f362 0007 	bfi	r0, r2, #0, #8
 8017c04:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8017c08:	f362 200f 	bfi	r0, r2, #8, #8
 8017c0c:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8017c10:	f362 4017 	bfi	r0, r2, #16, #8
 8017c14:	0e1b      	lsrs	r3, r3, #24
 8017c16:	b082      	sub	sp, #8
 8017c18:	f363 601f 	bfi	r0, r3, #24, #8
 8017c1c:	b002      	add	sp, #8
 8017c1e:	4770      	bx	lr

08017c20 <_ZNKSt10moneypunctIcLb1EE13do_neg_formatEv>:
 8017c20:	6883      	ldr	r3, [r0, #8]
 8017c22:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8017c24:	2000      	movs	r0, #0
 8017c26:	b2da      	uxtb	r2, r3
 8017c28:	f362 0007 	bfi	r0, r2, #0, #8
 8017c2c:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8017c30:	f362 200f 	bfi	r0, r2, #8, #8
 8017c34:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8017c38:	f362 4017 	bfi	r0, r2, #16, #8
 8017c3c:	0e1b      	lsrs	r3, r3, #24
 8017c3e:	b082      	sub	sp, #8
 8017c40:	f363 601f 	bfi	r0, r3, #24, #8
 8017c44:	b002      	add	sp, #8
 8017c46:	4770      	bx	lr

08017c48 <_ZNKSt8numpunctIcE16do_decimal_pointEv>:
 8017c48:	6883      	ldr	r3, [r0, #8]
 8017c4a:	f893 0024 	ldrb.w	r0, [r3, #36]	; 0x24
 8017c4e:	4770      	bx	lr

08017c50 <_ZNKSt8numpunctIcE16do_thousands_sepEv>:
 8017c50:	6883      	ldr	r3, [r0, #8]
 8017c52:	f893 0025 	ldrb.w	r0, [r3, #37]	; 0x25
 8017c56:	4770      	bx	lr

08017c58 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE13do_date_orderEv>:
 8017c58:	2000      	movs	r0, #0
 8017c5a:	4770      	bx	lr

08017c5c <_ZNKSt8messagesIcE7do_openERKSsRKSt6locale>:
 8017c5c:	2000      	movs	r0, #0
 8017c5e:	4770      	bx	lr

08017c60 <_ZNKSt8messagesIcE8do_closeEi>:
 8017c60:	4770      	bx	lr

08017c62 <_ZNKSt7collateIcE7do_hashEPKcS2_>:
 8017c62:	2000      	movs	r0, #0
 8017c64:	4291      	cmp	r1, r2
 8017c66:	d204      	bcs.n	8017c72 <_ZNKSt7collateIcE7do_hashEPKcS2_+0x10>
 8017c68:	f811 3b01 	ldrb.w	r3, [r1], #1
 8017c6c:	eb03 6070 	add.w	r0, r3, r0, ror #25
 8017c70:	e7f8      	b.n	8017c64 <_ZNKSt7collateIcE7do_hashEPKcS2_+0x2>
 8017c72:	4770      	bx	lr

08017c74 <_ZNKSt10moneypunctIcLb0EE11do_groupingEv>:
 8017c74:	b513      	push	{r0, r1, r4, lr}
 8017c76:	688b      	ldr	r3, [r1, #8]
 8017c78:	aa01      	add	r2, sp, #4
 8017c7a:	6899      	ldr	r1, [r3, #8]
 8017c7c:	4604      	mov	r4, r0
 8017c7e:	f7f8 fc36 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 8017c82:	4620      	mov	r0, r4
 8017c84:	b002      	add	sp, #8
 8017c86:	bd10      	pop	{r4, pc}

08017c88 <_ZNKSt10moneypunctIcLb0EE14do_curr_symbolEv>:
 8017c88:	b513      	push	{r0, r1, r4, lr}
 8017c8a:	688b      	ldr	r3, [r1, #8]
 8017c8c:	aa01      	add	r2, sp, #4
 8017c8e:	6959      	ldr	r1, [r3, #20]
 8017c90:	4604      	mov	r4, r0
 8017c92:	f7f8 fc2c 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 8017c96:	4620      	mov	r0, r4
 8017c98:	b002      	add	sp, #8
 8017c9a:	bd10      	pop	{r4, pc}

08017c9c <_ZNKSt10moneypunctIcLb0EE16do_positive_signEv>:
 8017c9c:	b513      	push	{r0, r1, r4, lr}
 8017c9e:	688b      	ldr	r3, [r1, #8]
 8017ca0:	aa01      	add	r2, sp, #4
 8017ca2:	69d9      	ldr	r1, [r3, #28]
 8017ca4:	4604      	mov	r4, r0
 8017ca6:	f7f8 fc22 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 8017caa:	4620      	mov	r0, r4
 8017cac:	b002      	add	sp, #8
 8017cae:	bd10      	pop	{r4, pc}

08017cb0 <_ZNKSt10moneypunctIcLb0EE16do_negative_signEv>:
 8017cb0:	b513      	push	{r0, r1, r4, lr}
 8017cb2:	688b      	ldr	r3, [r1, #8]
 8017cb4:	aa01      	add	r2, sp, #4
 8017cb6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8017cb8:	4604      	mov	r4, r0
 8017cba:	f7f8 fc18 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 8017cbe:	4620      	mov	r0, r4
 8017cc0:	b002      	add	sp, #8
 8017cc2:	bd10      	pop	{r4, pc}

08017cc4 <_ZNKSt10moneypunctIcLb1EE11do_groupingEv>:
 8017cc4:	b513      	push	{r0, r1, r4, lr}
 8017cc6:	688b      	ldr	r3, [r1, #8]
 8017cc8:	aa01      	add	r2, sp, #4
 8017cca:	6899      	ldr	r1, [r3, #8]
 8017ccc:	4604      	mov	r4, r0
 8017cce:	f7f8 fc0e 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 8017cd2:	4620      	mov	r0, r4
 8017cd4:	b002      	add	sp, #8
 8017cd6:	bd10      	pop	{r4, pc}

08017cd8 <_ZNKSt10moneypunctIcLb1EE14do_curr_symbolEv>:
 8017cd8:	b513      	push	{r0, r1, r4, lr}
 8017cda:	688b      	ldr	r3, [r1, #8]
 8017cdc:	aa01      	add	r2, sp, #4
 8017cde:	6959      	ldr	r1, [r3, #20]
 8017ce0:	4604      	mov	r4, r0
 8017ce2:	f7f8 fc04 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 8017ce6:	4620      	mov	r0, r4
 8017ce8:	b002      	add	sp, #8
 8017cea:	bd10      	pop	{r4, pc}

08017cec <_ZNKSt10moneypunctIcLb1EE16do_positive_signEv>:
 8017cec:	b513      	push	{r0, r1, r4, lr}
 8017cee:	688b      	ldr	r3, [r1, #8]
 8017cf0:	aa01      	add	r2, sp, #4
 8017cf2:	69d9      	ldr	r1, [r3, #28]
 8017cf4:	4604      	mov	r4, r0
 8017cf6:	f7f8 fbfa 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 8017cfa:	4620      	mov	r0, r4
 8017cfc:	b002      	add	sp, #8
 8017cfe:	bd10      	pop	{r4, pc}

08017d00 <_ZNKSt10moneypunctIcLb1EE16do_negative_signEv>:
 8017d00:	b513      	push	{r0, r1, r4, lr}
 8017d02:	688b      	ldr	r3, [r1, #8]
 8017d04:	aa01      	add	r2, sp, #4
 8017d06:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8017d08:	4604      	mov	r4, r0
 8017d0a:	f7f8 fbf0 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 8017d0e:	4620      	mov	r0, r4
 8017d10:	b002      	add	sp, #8
 8017d12:	bd10      	pop	{r4, pc}

08017d14 <_ZNKSt8numpunctIcE11do_groupingEv>:
 8017d14:	b513      	push	{r0, r1, r4, lr}
 8017d16:	688b      	ldr	r3, [r1, #8]
 8017d18:	aa01      	add	r2, sp, #4
 8017d1a:	6899      	ldr	r1, [r3, #8]
 8017d1c:	4604      	mov	r4, r0
 8017d1e:	f7f8 fbe6 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 8017d22:	4620      	mov	r0, r4
 8017d24:	b002      	add	sp, #8
 8017d26:	bd10      	pop	{r4, pc}

08017d28 <_ZNKSt8numpunctIcE11do_truenameEv>:
 8017d28:	b513      	push	{r0, r1, r4, lr}
 8017d2a:	688b      	ldr	r3, [r1, #8]
 8017d2c:	aa01      	add	r2, sp, #4
 8017d2e:	6959      	ldr	r1, [r3, #20]
 8017d30:	4604      	mov	r4, r0
 8017d32:	f7f8 fbdc 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 8017d36:	4620      	mov	r0, r4
 8017d38:	b002      	add	sp, #8
 8017d3a:	bd10      	pop	{r4, pc}

08017d3c <_ZNKSt8numpunctIcE12do_falsenameEv>:
 8017d3c:	b513      	push	{r0, r1, r4, lr}
 8017d3e:	688b      	ldr	r3, [r1, #8]
 8017d40:	aa01      	add	r2, sp, #4
 8017d42:	69d9      	ldr	r1, [r3, #28]
 8017d44:	4604      	mov	r4, r0
 8017d46:	f7f8 fbd2 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 8017d4a:	4620      	mov	r0, r4
 8017d4c:	b002      	add	sp, #8
 8017d4e:	bd10      	pop	{r4, pc}

08017d50 <_ZNSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>:
 8017d50:	b510      	push	{r4, lr}
 8017d52:	4b03      	ldr	r3, [pc, #12]	; (8017d60 <_ZNSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev+0x10>)
 8017d54:	6003      	str	r3, [r0, #0]
 8017d56:	4604      	mov	r4, r0
 8017d58:	f7f4 fa9e 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8017d5c:	4620      	mov	r0, r4
 8017d5e:	bd10      	pop	{r4, pc}
 8017d60:	08030a84 	.word	0x08030a84

08017d64 <_ZNSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev>:
 8017d64:	b510      	push	{r4, lr}
 8017d66:	4b03      	ldr	r3, [pc, #12]	; (8017d74 <_ZNSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev+0x10>)
 8017d68:	6003      	str	r3, [r0, #0]
 8017d6a:	4604      	mov	r4, r0
 8017d6c:	f7f4 fa94 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8017d70:	4620      	mov	r0, r4
 8017d72:	bd10      	pop	{r4, pc}
 8017d74:	08030a9c 	.word	0x08030a9c

08017d78 <_ZNSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>:
 8017d78:	b510      	push	{r4, lr}
 8017d7a:	4b03      	ldr	r3, [pc, #12]	; (8017d88 <_ZNSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev+0x10>)
 8017d7c:	6003      	str	r3, [r0, #0]
 8017d7e:	4604      	mov	r4, r0
 8017d80:	f7f4 fa8a 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8017d84:	4620      	mov	r0, r4
 8017d86:	bd10      	pop	{r4, pc}
 8017d88:	08030948 	.word	0x08030948

08017d8c <_ZNSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev>:
 8017d8c:	b510      	push	{r4, lr}
 8017d8e:	4b03      	ldr	r3, [pc, #12]	; (8017d9c <_ZNSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev+0x10>)
 8017d90:	6003      	str	r3, [r0, #0]
 8017d92:	4604      	mov	r4, r0
 8017d94:	f7f4 fa80 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8017d98:	4620      	mov	r0, r4
 8017d9a:	bd10      	pop	{r4, pc}
 8017d9c:	08030984 	.word	0x08030984

08017da0 <_ZNSt17__timepunct_cacheIcED1Ev>:
 8017da0:	b510      	push	{r4, lr}
 8017da2:	4b03      	ldr	r3, [pc, #12]	; (8017db0 <_ZNSt17__timepunct_cacheIcED1Ev+0x10>)
 8017da4:	6003      	str	r3, [r0, #0]
 8017da6:	4604      	mov	r4, r0
 8017da8:	f7f4 fa76 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8017dac:	4620      	mov	r0, r4
 8017dae:	bd10      	pop	{r4, pc}
 8017db0:	080309b4 	.word	0x080309b4

08017db4 <_ZNSt8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev>:
 8017db4:	b510      	push	{r4, lr}
 8017db6:	4b03      	ldr	r3, [pc, #12]	; (8017dc4 <_ZNSt8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev+0x10>)
 8017db8:	6003      	str	r3, [r0, #0]
 8017dba:	4604      	mov	r4, r0
 8017dbc:	f7f4 fa6c 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8017dc0:	4620      	mov	r0, r4
 8017dc2:	bd10      	pop	{r4, pc}
 8017dc4:	08030ab4 	.word	0x08030ab4

08017dc8 <_ZNSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>:
 8017dc8:	b510      	push	{r4, lr}
 8017dca:	4b03      	ldr	r3, [pc, #12]	; (8017dd8 <_ZNSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev+0x10>)
 8017dcc:	6003      	str	r3, [r0, #0]
 8017dce:	4604      	mov	r4, r0
 8017dd0:	f7f4 fa62 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8017dd4:	4620      	mov	r0, r4
 8017dd6:	bd10      	pop	{r4, pc}
 8017dd8:	08030ac8 	.word	0x08030ac8

08017ddc <_ZNSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED0Ev>:
 8017ddc:	b510      	push	{r4, lr}
 8017dde:	4604      	mov	r4, r0
 8017de0:	f7ff ffb6 	bl	8017d50 <_ZNSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 8017de4:	4620      	mov	r0, r4
 8017de6:	f00c f871 	bl	8023ecc <_ZdlPv>
 8017dea:	4620      	mov	r0, r4
 8017dec:	bd10      	pop	{r4, pc}

08017dee <_ZNSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED0Ev>:
 8017dee:	b510      	push	{r4, lr}
 8017df0:	4604      	mov	r4, r0
 8017df2:	f7ff ffb7 	bl	8017d64 <_ZNSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 8017df6:	4620      	mov	r0, r4
 8017df8:	f00c f868 	bl	8023ecc <_ZdlPv>
 8017dfc:	4620      	mov	r0, r4
 8017dfe:	bd10      	pop	{r4, pc}

08017e00 <_ZNSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED0Ev>:
 8017e00:	b510      	push	{r4, lr}
 8017e02:	4604      	mov	r4, r0
 8017e04:	f7ff ffb8 	bl	8017d78 <_ZNSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 8017e08:	4620      	mov	r0, r4
 8017e0a:	f00c f85f 	bl	8023ecc <_ZdlPv>
 8017e0e:	4620      	mov	r0, r4
 8017e10:	bd10      	pop	{r4, pc}

08017e12 <_ZNSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED0Ev>:
 8017e12:	b510      	push	{r4, lr}
 8017e14:	4604      	mov	r4, r0
 8017e16:	f7ff ffb9 	bl	8017d8c <_ZNSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 8017e1a:	4620      	mov	r0, r4
 8017e1c:	f00c f856 	bl	8023ecc <_ZdlPv>
 8017e20:	4620      	mov	r0, r4
 8017e22:	bd10      	pop	{r4, pc}

08017e24 <_ZNSt17__timepunct_cacheIcED0Ev>:
 8017e24:	b510      	push	{r4, lr}
 8017e26:	4604      	mov	r4, r0
 8017e28:	f7ff ffba 	bl	8017da0 <_ZNSt17__timepunct_cacheIcED1Ev>
 8017e2c:	4620      	mov	r0, r4
 8017e2e:	f00c f84d 	bl	8023ecc <_ZdlPv>
 8017e32:	4620      	mov	r0, r4
 8017e34:	bd10      	pop	{r4, pc}

08017e36 <_ZNSt8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED0Ev>:
 8017e36:	b510      	push	{r4, lr}
 8017e38:	4604      	mov	r4, r0
 8017e3a:	f7ff ffbb 	bl	8017db4 <_ZNSt8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 8017e3e:	4620      	mov	r0, r4
 8017e40:	f00c f844 	bl	8023ecc <_ZdlPv>
 8017e44:	4620      	mov	r0, r4
 8017e46:	bd10      	pop	{r4, pc}

08017e48 <_ZNSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED0Ev>:
 8017e48:	b510      	push	{r4, lr}
 8017e4a:	4604      	mov	r4, r0
 8017e4c:	f7ff ffbc 	bl	8017dc8 <_ZNSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEED1Ev>
 8017e50:	4620      	mov	r0, r4
 8017e52:	f00c f83b 	bl	8023ecc <_ZdlPv>
 8017e56:	4620      	mov	r0, r4
 8017e58:	bd10      	pop	{r4, pc}
	...

08017e5c <_ZNSt8messagesIcED1Ev>:
 8017e5c:	b510      	push	{r4, lr}
 8017e5e:	4b05      	ldr	r3, [pc, #20]	; (8017e74 <_ZNSt8messagesIcED1Ev+0x18>)
 8017e60:	4604      	mov	r4, r0
 8017e62:	f840 3b08 	str.w	r3, [r0], #8
 8017e66:	f00c fc97 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 8017e6a:	4620      	mov	r0, r4
 8017e6c:	f7f4 fa14 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8017e70:	4620      	mov	r0, r4
 8017e72:	bd10      	pop	{r4, pc}
 8017e74:	08030a3c 	.word	0x08030a3c

08017e78 <_ZNSt8messagesIcED0Ev>:
 8017e78:	b510      	push	{r4, lr}
 8017e7a:	4604      	mov	r4, r0
 8017e7c:	f7ff ffee 	bl	8017e5c <_ZNSt8messagesIcED1Ev>
 8017e80:	4620      	mov	r0, r4
 8017e82:	f00c f823 	bl	8023ecc <_ZdlPv>
 8017e86:	4620      	mov	r0, r4
 8017e88:	bd10      	pop	{r4, pc}
	...

08017e8c <_ZNSt7collateIcED1Ev>:
 8017e8c:	b510      	push	{r4, lr}
 8017e8e:	4b05      	ldr	r3, [pc, #20]	; (8017ea4 <_ZNSt7collateIcED1Ev+0x18>)
 8017e90:	4604      	mov	r4, r0
 8017e92:	f840 3b08 	str.w	r3, [r0], #8
 8017e96:	f00c fc7f 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 8017e9a:	4620      	mov	r0, r4
 8017e9c:	f7f4 f9fc 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8017ea0:	4620      	mov	r0, r4
 8017ea2:	bd10      	pop	{r4, pc}
 8017ea4:	08030908 	.word	0x08030908

08017ea8 <_ZNSt7collateIcED0Ev>:
 8017ea8:	b510      	push	{r4, lr}
 8017eaa:	4604      	mov	r4, r0
 8017eac:	f7ff ffee 	bl	8017e8c <_ZNSt7collateIcED1Ev>
 8017eb0:	4620      	mov	r0, r4
 8017eb2:	f00c f80b 	bl	8023ecc <_ZdlPv>
 8017eb6:	4620      	mov	r0, r4
 8017eb8:	bd10      	pop	{r4, pc}
	...

08017ebc <_ZNSt11__timepunctIcED1Ev>:
 8017ebc:	b538      	push	{r3, r4, r5, lr}
 8017ebe:	4b0d      	ldr	r3, [pc, #52]	; (8017ef4 <_ZNSt11__timepunctIcED1Ev+0x38>)
 8017ec0:	6003      	str	r3, [r0, #0]
 8017ec2:	6905      	ldr	r5, [r0, #16]
 8017ec4:	4604      	mov	r4, r0
 8017ec6:	f7f4 fa13 	bl	800c2f0 <_ZNSt6locale5facet13_S_get_c_nameEv>
 8017eca:	4285      	cmp	r5, r0
 8017ecc:	d003      	beq.n	8017ed6 <_ZNSt11__timepunctIcED1Ev+0x1a>
 8017ece:	b115      	cbz	r5, 8017ed6 <_ZNSt11__timepunctIcED1Ev+0x1a>
 8017ed0:	4628      	mov	r0, r5
 8017ed2:	f00b fffd 	bl	8023ed0 <_ZdaPv>
 8017ed6:	68a0      	ldr	r0, [r4, #8]
 8017ed8:	b110      	cbz	r0, 8017ee0 <_ZNSt11__timepunctIcED1Ev+0x24>
 8017eda:	6803      	ldr	r3, [r0, #0]
 8017edc:	685b      	ldr	r3, [r3, #4]
 8017ede:	4798      	blx	r3
 8017ee0:	f104 000c 	add.w	r0, r4, #12
 8017ee4:	f00c fc58 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 8017ee8:	4620      	mov	r0, r4
 8017eea:	f7f4 f9d5 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8017eee:	4620      	mov	r0, r4
 8017ef0:	bd38      	pop	{r3, r4, r5, pc}
 8017ef2:	bf00      	nop
 8017ef4:	080309c4 	.word	0x080309c4

08017ef8 <_ZNSt11__timepunctIcED0Ev>:
 8017ef8:	b510      	push	{r4, lr}
 8017efa:	4604      	mov	r4, r0
 8017efc:	f7ff ffde 	bl	8017ebc <_ZNSt11__timepunctIcED1Ev>
 8017f00:	4620      	mov	r0, r4
 8017f02:	f00b ffe3 	bl	8023ecc <_ZdlPv>
 8017f06:	4620      	mov	r0, r4
 8017f08:	bd10      	pop	{r4, pc}

08017f0a <_ZNKSt7collateIcE10do_compareEPKcS2_S2_S2_>:
 8017f0a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017f0e:	b085      	sub	sp, #20
 8017f10:	461c      	mov	r4, r3
 8017f12:	4680      	mov	r8, r0
 8017f14:	ab03      	add	r3, sp, #12
 8017f16:	a802      	add	r0, sp, #8
 8017f18:	f7f8 fadd 	bl	80104d6 <_ZNSsC1IPKcEET_S2_RKSaIcE>
 8017f1c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017f1e:	ab01      	add	r3, sp, #4
 8017f20:	4621      	mov	r1, r4
 8017f22:	a803      	add	r0, sp, #12
 8017f24:	f7f8 fad7 	bl	80104d6 <_ZNSsC1IPKcEET_S2_RKSaIcE>
 8017f28:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8017f2c:	9d03      	ldr	r5, [sp, #12]
 8017f2e:	f859 7c0c 	ldr.w	r7, [r9, #-12]
 8017f32:	f855 6c0c 	ldr.w	r6, [r5, #-12]
 8017f36:	444f      	add	r7, r9
 8017f38:	442e      	add	r6, r5
 8017f3a:	462a      	mov	r2, r5
 8017f3c:	4649      	mov	r1, r9
 8017f3e:	4640      	mov	r0, r8
 8017f40:	f00c fd8d 	bl	8024a5e <_ZNKSt7collateIcE10_M_compareEPKcS2_>
 8017f44:	4604      	mov	r4, r0
 8017f46:	b970      	cbnz	r0, 8017f66 <_ZNKSt7collateIcE10do_compareEPKcS2_S2_S2_+0x5c>
 8017f48:	4648      	mov	r0, r9
 8017f4a:	f7e8 f99b 	bl	8000284 <strlen>
 8017f4e:	4481      	add	r9, r0
 8017f50:	4628      	mov	r0, r5
 8017f52:	f7e8 f997 	bl	8000284 <strlen>
 8017f56:	454f      	cmp	r7, r9
 8017f58:	eb05 0400 	add.w	r4, r5, r0
 8017f5c:	d10d      	bne.n	8017f7a <_ZNKSt7collateIcE10do_compareEPKcS2_S2_S2_+0x70>
 8017f5e:	1b34      	subs	r4, r6, r4
 8017f60:	bf18      	it	ne
 8017f62:	f04f 34ff 	movne.w	r4, #4294967295	; 0xffffffff
 8017f66:	a803      	add	r0, sp, #12
 8017f68:	f7f8 f84c 	bl	8010004 <_ZNSsD1Ev>
 8017f6c:	a802      	add	r0, sp, #8
 8017f6e:	f7f8 f849 	bl	8010004 <_ZNSsD1Ev>
 8017f72:	4620      	mov	r0, r4
 8017f74:	b005      	add	sp, #20
 8017f76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017f7a:	42a6      	cmp	r6, r4
 8017f7c:	d003      	beq.n	8017f86 <_ZNKSt7collateIcE10do_compareEPKcS2_S2_S2_+0x7c>
 8017f7e:	f109 0901 	add.w	r9, r9, #1
 8017f82:	1c65      	adds	r5, r4, #1
 8017f84:	e7d9      	b.n	8017f3a <_ZNKSt7collateIcE10do_compareEPKcS2_S2_S2_+0x30>
 8017f86:	2401      	movs	r4, #1
 8017f88:	e7ed      	b.n	8017f66 <_ZNKSt7collateIcE10do_compareEPKcS2_S2_S2_+0x5c>
	...

08017f8c <_ZNKSt7collateIcE12do_transformEPKcS2_>:
 8017f8c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8017f90:	4615      	mov	r5, r2
 8017f92:	461c      	mov	r4, r3
 8017f94:	4b23      	ldr	r3, [pc, #140]	; (8018024 <_ZNKSt7collateIcE12do_transformEPKcS2_+0x98>)
 8017f96:	6003      	str	r3, [r0, #0]
 8017f98:	4622      	mov	r2, r4
 8017f9a:	466b      	mov	r3, sp
 8017f9c:	4607      	mov	r7, r0
 8017f9e:	4688      	mov	r8, r1
 8017fa0:	a801      	add	r0, sp, #4
 8017fa2:	4629      	mov	r1, r5
 8017fa4:	f7f8 fa97 	bl	80104d6 <_ZNSsC1IPKcEET_S2_RKSaIcE>
 8017fa8:	9e01      	ldr	r6, [sp, #4]
 8017faa:	1b62      	subs	r2, r4, r5
 8017fac:	f856 3c0c 	ldr.w	r3, [r6, #-12]
 8017fb0:	0054      	lsls	r4, r2, #1
 8017fb2:	4620      	mov	r0, r4
 8017fb4:	eb06 0903 	add.w	r9, r6, r3
 8017fb8:	f00c f810 	bl	8023fdc <_Znaj>
 8017fbc:	4605      	mov	r5, r0
 8017fbe:	4632      	mov	r2, r6
 8017fc0:	4623      	mov	r3, r4
 8017fc2:	4629      	mov	r1, r5
 8017fc4:	4640      	mov	r0, r8
 8017fc6:	f00c fd55 	bl	8024a74 <_ZNKSt7collateIcE12_M_transformEPcPKcj>
 8017fca:	4284      	cmp	r4, r0
 8017fcc:	4602      	mov	r2, r0
 8017fce:	d80e      	bhi.n	8017fee <_ZNKSt7collateIcE12do_transformEPKcS2_+0x62>
 8017fd0:	1c44      	adds	r4, r0, #1
 8017fd2:	4628      	mov	r0, r5
 8017fd4:	f00b ff7c 	bl	8023ed0 <_ZdaPv>
 8017fd8:	4620      	mov	r0, r4
 8017fda:	f00b ffff 	bl	8023fdc <_Znaj>
 8017fde:	4632      	mov	r2, r6
 8017fe0:	4601      	mov	r1, r0
 8017fe2:	4605      	mov	r5, r0
 8017fe4:	4623      	mov	r3, r4
 8017fe6:	4640      	mov	r0, r8
 8017fe8:	f00c fd44 	bl	8024a74 <_ZNKSt7collateIcE12_M_transformEPcPKcj>
 8017fec:	4602      	mov	r2, r0
 8017fee:	4629      	mov	r1, r5
 8017ff0:	4638      	mov	r0, r7
 8017ff2:	f7f8 f993 	bl	801031c <_ZNSs6appendEPKcj>
 8017ff6:	4630      	mov	r0, r6
 8017ff8:	f7e8 f944 	bl	8000284 <strlen>
 8017ffc:	4430      	add	r0, r6
 8017ffe:	4581      	cmp	r9, r0
 8018000:	d005      	beq.n	801800e <_ZNKSt7collateIcE12do_transformEPKcS2_+0x82>
 8018002:	1c46      	adds	r6, r0, #1
 8018004:	2100      	movs	r1, #0
 8018006:	4638      	mov	r0, r7
 8018008:	f7f8 fa11 	bl	801042e <_ZNSs9push_backEc>
 801800c:	e7d7      	b.n	8017fbe <_ZNKSt7collateIcE12do_transformEPKcS2_+0x32>
 801800e:	4628      	mov	r0, r5
 8018010:	f00b ff5e 	bl	8023ed0 <_ZdaPv>
 8018014:	a801      	add	r0, sp, #4
 8018016:	f7f7 fff5 	bl	8010004 <_ZNSsD1Ev>
 801801a:	4638      	mov	r0, r7
 801801c:	b003      	add	sp, #12
 801801e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018022:	bf00      	nop
 8018024:	20003bf0 	.word	0x20003bf0

08018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>:
 8018028:	e9d0 2102 	ldrd	r2, r1, [r0, #8]
 801802c:	428a      	cmp	r2, r1
 801802e:	d202      	bcs.n	8018036 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0+0xe>
 8018030:	3201      	adds	r2, #1
 8018032:	6082      	str	r2, [r0, #8]
 8018034:	4770      	bx	lr
 8018036:	6803      	ldr	r3, [r0, #0]
 8018038:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801803a:	4718      	bx	r3

0801803c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>:
 801803c:	280a      	cmp	r0, #10
 801803e:	d808      	bhi.n	8018052 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0+0x16>
 8018040:	292f      	cmp	r1, #47	; 0x2f
 8018042:	d918      	bls.n	8018076 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0+0x3a>
 8018044:	3030      	adds	r0, #48	; 0x30
 8018046:	b2c0      	uxtb	r0, r0
 8018048:	4281      	cmp	r1, r0
 801804a:	d214      	bcs.n	8018076 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0+0x3a>
 801804c:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8018050:	4770      	bx	lr
 8018052:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8018056:	2b09      	cmp	r3, #9
 8018058:	d9f8      	bls.n	801804c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0+0x10>
 801805a:	f1a1 0361 	sub.w	r3, r1, #97	; 0x61
 801805e:	2b05      	cmp	r3, #5
 8018060:	d802      	bhi.n	8018068 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0+0x2c>
 8018062:	f1a1 0057 	sub.w	r0, r1, #87	; 0x57
 8018066:	4770      	bx	lr
 8018068:	f1a1 0341 	sub.w	r3, r1, #65	; 0x41
 801806c:	2b05      	cmp	r3, #5
 801806e:	d802      	bhi.n	8018076 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0+0x3a>
 8018070:	f1a1 0037 	sub.w	r0, r1, #55	; 0x37
 8018074:	4770      	bx	lr
 8018076:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801807a:	4770      	bx	lr

0801807c <_ZNSs5eraseEjj.isra.0>:
 801807c:	6803      	ldr	r3, [r0, #0]
 801807e:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 8018082:	4299      	cmp	r1, r3
 8018084:	b510      	push	{r4, lr}
 8018086:	d904      	bls.n	8018092 <_ZNSs5eraseEjj.isra.0+0x16>
 8018088:	460a      	mov	r2, r1
 801808a:	4806      	ldr	r0, [pc, #24]	; (80180a4 <_ZNSs5eraseEjj.isra.0+0x28>)
 801808c:	4906      	ldr	r1, [pc, #24]	; (80180a8 <_ZNSs5eraseEjj.isra.0+0x2c>)
 801808e:	f7ff fbd3 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 8018092:	1a5c      	subs	r4, r3, r1
 8018094:	42a2      	cmp	r2, r4
 8018096:	bf28      	it	cs
 8018098:	4622      	movcs	r2, r4
 801809a:	2300      	movs	r3, #0
 801809c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80180a0:	f7f7 bfd0 	b.w	8010044 <_ZNSs9_M_mutateEjjj>
 80180a4:	0802f5dc 	.word	0x0802f5dc
 80180a8:	0802f63e 	.word	0x0802f63e

080180ac <_ZNSt11char_traitsIcE6assignEPcjc>:
 80180ac:	460b      	mov	r3, r1
 80180ae:	4611      	mov	r1, r2
 80180b0:	461a      	mov	r2, r3
 80180b2:	b10b      	cbz	r3, 80180b8 <_ZNSt11char_traitsIcE6assignEPcjc+0xc>
 80180b4:	f00d bf4c 	b.w	8025f50 <memset>
 80180b8:	4770      	bx	lr
	...

080180bc <_ZNSt18__moneypunct_cacheIcLb0EEC1Ej>:
 80180bc:	3900      	subs	r1, #0
 80180be:	4a0b      	ldr	r2, [pc, #44]	; (80180ec <_ZNSt18__moneypunct_cacheIcLb0EEC1Ej+0x30>)
 80180c0:	6002      	str	r2, [r0, #0]
 80180c2:	bf18      	it	ne
 80180c4:	2101      	movne	r1, #1
 80180c6:	2200      	movs	r2, #0
 80180c8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80180cc:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80180d0:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80180d4:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80180d8:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 80180dc:	6041      	str	r1, [r0, #4]
 80180de:	8202      	strh	r2, [r0, #16]
 80180e0:	7482      	strb	r2, [r0, #18]
 80180e2:	6342      	str	r2, [r0, #52]	; 0x34
 80180e4:	f880 2043 	strb.w	r2, [r0, #67]	; 0x43
 80180e8:	4770      	bx	lr
 80180ea:	bf00      	nop
 80180ec:	0802e9f0 	.word	0x0802e9f0

080180f0 <_ZNSt18__moneypunct_cacheIcLb1EEC1Ej>:
 80180f0:	3900      	subs	r1, #0
 80180f2:	4a0b      	ldr	r2, [pc, #44]	; (8018120 <_ZNSt18__moneypunct_cacheIcLb1EEC1Ej+0x30>)
 80180f4:	6002      	str	r2, [r0, #0]
 80180f6:	bf18      	it	ne
 80180f8:	2101      	movne	r1, #1
 80180fa:	2200      	movs	r2, #0
 80180fc:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8018100:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8018104:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8018108:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 801810c:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 8018110:	6041      	str	r1, [r0, #4]
 8018112:	8202      	strh	r2, [r0, #16]
 8018114:	7482      	strb	r2, [r0, #18]
 8018116:	6342      	str	r2, [r0, #52]	; 0x34
 8018118:	f880 2043 	strb.w	r2, [r0, #67]	; 0x43
 801811c:	4770      	bx	lr
 801811e:	bf00      	nop
 8018120:	0802e9e0 	.word	0x0802e9e0

08018124 <_ZNKSt10moneypunctIcLb0EE13decimal_pointEv>:
 8018124:	6803      	ldr	r3, [r0, #0]
 8018126:	689b      	ldr	r3, [r3, #8]
 8018128:	4718      	bx	r3

0801812a <_ZNKSt10moneypunctIcLb0EE13thousands_sepEv>:
 801812a:	6803      	ldr	r3, [r0, #0]
 801812c:	68db      	ldr	r3, [r3, #12]
 801812e:	4718      	bx	r3

08018130 <_ZNKSt10moneypunctIcLb0EE8groupingEv>:
 8018130:	b510      	push	{r4, lr}
 8018132:	680b      	ldr	r3, [r1, #0]
 8018134:	4604      	mov	r4, r0
 8018136:	691b      	ldr	r3, [r3, #16]
 8018138:	4798      	blx	r3
 801813a:	4620      	mov	r0, r4
 801813c:	bd10      	pop	{r4, pc}

0801813e <_ZNKSt10moneypunctIcLb0EE11curr_symbolEv>:
 801813e:	b510      	push	{r4, lr}
 8018140:	680b      	ldr	r3, [r1, #0]
 8018142:	4604      	mov	r4, r0
 8018144:	695b      	ldr	r3, [r3, #20]
 8018146:	4798      	blx	r3
 8018148:	4620      	mov	r0, r4
 801814a:	bd10      	pop	{r4, pc}

0801814c <_ZNKSt10moneypunctIcLb0EE13positive_signEv>:
 801814c:	b510      	push	{r4, lr}
 801814e:	680b      	ldr	r3, [r1, #0]
 8018150:	4604      	mov	r4, r0
 8018152:	699b      	ldr	r3, [r3, #24]
 8018154:	4798      	blx	r3
 8018156:	4620      	mov	r0, r4
 8018158:	bd10      	pop	{r4, pc}

0801815a <_ZNKSt10moneypunctIcLb0EE13negative_signEv>:
 801815a:	b510      	push	{r4, lr}
 801815c:	680b      	ldr	r3, [r1, #0]
 801815e:	4604      	mov	r4, r0
 8018160:	69db      	ldr	r3, [r3, #28]
 8018162:	4798      	blx	r3
 8018164:	4620      	mov	r0, r4
 8018166:	bd10      	pop	{r4, pc}

08018168 <_ZNKSt10moneypunctIcLb0EE11frac_digitsEv>:
 8018168:	6803      	ldr	r3, [r0, #0]
 801816a:	6a1b      	ldr	r3, [r3, #32]
 801816c:	4718      	bx	r3

0801816e <_ZNKSt10moneypunctIcLb0EE10pos_formatEv>:
 801816e:	6803      	ldr	r3, [r0, #0]
 8018170:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018172:	b082      	sub	sp, #8
 8018174:	b002      	add	sp, #8
 8018176:	4718      	bx	r3

08018178 <_ZNKSt10moneypunctIcLb0EE10neg_formatEv>:
 8018178:	6803      	ldr	r3, [r0, #0]
 801817a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801817c:	b082      	sub	sp, #8
 801817e:	b002      	add	sp, #8
 8018180:	4718      	bx	r3

08018182 <_ZNKSt10moneypunctIcLb1EE13decimal_pointEv>:
 8018182:	6803      	ldr	r3, [r0, #0]
 8018184:	689b      	ldr	r3, [r3, #8]
 8018186:	4718      	bx	r3

08018188 <_ZNKSt10moneypunctIcLb1EE13thousands_sepEv>:
 8018188:	6803      	ldr	r3, [r0, #0]
 801818a:	68db      	ldr	r3, [r3, #12]
 801818c:	4718      	bx	r3

0801818e <_ZNKSt10moneypunctIcLb1EE8groupingEv>:
 801818e:	b510      	push	{r4, lr}
 8018190:	680b      	ldr	r3, [r1, #0]
 8018192:	4604      	mov	r4, r0
 8018194:	691b      	ldr	r3, [r3, #16]
 8018196:	4798      	blx	r3
 8018198:	4620      	mov	r0, r4
 801819a:	bd10      	pop	{r4, pc}

0801819c <_ZNKSt10moneypunctIcLb1EE11curr_symbolEv>:
 801819c:	b510      	push	{r4, lr}
 801819e:	680b      	ldr	r3, [r1, #0]
 80181a0:	4604      	mov	r4, r0
 80181a2:	695b      	ldr	r3, [r3, #20]
 80181a4:	4798      	blx	r3
 80181a6:	4620      	mov	r0, r4
 80181a8:	bd10      	pop	{r4, pc}

080181aa <_ZNKSt10moneypunctIcLb1EE13positive_signEv>:
 80181aa:	b510      	push	{r4, lr}
 80181ac:	680b      	ldr	r3, [r1, #0]
 80181ae:	4604      	mov	r4, r0
 80181b0:	699b      	ldr	r3, [r3, #24]
 80181b2:	4798      	blx	r3
 80181b4:	4620      	mov	r0, r4
 80181b6:	bd10      	pop	{r4, pc}

080181b8 <_ZNKSt10moneypunctIcLb1EE13negative_signEv>:
 80181b8:	b510      	push	{r4, lr}
 80181ba:	680b      	ldr	r3, [r1, #0]
 80181bc:	4604      	mov	r4, r0
 80181be:	69db      	ldr	r3, [r3, #28]
 80181c0:	4798      	blx	r3
 80181c2:	4620      	mov	r0, r4
 80181c4:	bd10      	pop	{r4, pc}

080181c6 <_ZNKSt10moneypunctIcLb1EE11frac_digitsEv>:
 80181c6:	6803      	ldr	r3, [r0, #0]
 80181c8:	6a1b      	ldr	r3, [r3, #32]
 80181ca:	4718      	bx	r3

080181cc <_ZNKSt10moneypunctIcLb1EE10pos_formatEv>:
 80181cc:	6803      	ldr	r3, [r0, #0]
 80181ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80181d0:	b082      	sub	sp, #8
 80181d2:	b002      	add	sp, #8
 80181d4:	4718      	bx	r3

080181d6 <_ZNKSt10moneypunctIcLb1EE10neg_formatEv>:
 80181d6:	6803      	ldr	r3, [r0, #0]
 80181d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80181da:	b082      	sub	sp, #8
 80181dc:	b002      	add	sp, #8
 80181de:	4718      	bx	r3

080181e0 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRe>:
 80181e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80181e2:	b089      	sub	sp, #36	; 0x24
 80181e4:	ae06      	add	r6, sp, #24
 80181e6:	e886 000c 	stmia.w	r6, {r2, r3}
 80181ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80181ec:	680b      	ldr	r3, [r1, #0]
 80181ee:	9205      	str	r2, [sp, #20]
 80181f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80181f2:	9204      	str	r2, [sp, #16]
 80181f4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80181f6:	9203      	str	r2, [sp, #12]
 80181f8:	f89d 2040 	ldrb.w	r2, [sp, #64]	; 0x40
 80181fc:	9202      	str	r2, [sp, #8]
 80181fe:	aa0e      	add	r2, sp, #56	; 0x38
 8018200:	4604      	mov	r4, r0
 8018202:	460d      	mov	r5, r1
 8018204:	e892 0003 	ldmia.w	r2, {r0, r1}
 8018208:	e88d 0003 	stmia.w	sp, {r0, r1}
 801820c:	4620      	mov	r0, r4
 801820e:	689f      	ldr	r7, [r3, #8]
 8018210:	4629      	mov	r1, r5
 8018212:	e896 000c 	ldmia.w	r6, {r2, r3}
 8018216:	47b8      	blx	r7
 8018218:	4620      	mov	r0, r4
 801821a:	b009      	add	sp, #36	; 0x24
 801821c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801821e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSs>:
 801821e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018220:	b089      	sub	sp, #36	; 0x24
 8018222:	ae06      	add	r6, sp, #24
 8018224:	e886 000c 	stmia.w	r6, {r2, r3}
 8018228:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801822a:	680b      	ldr	r3, [r1, #0]
 801822c:	9205      	str	r2, [sp, #20]
 801822e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018230:	9204      	str	r2, [sp, #16]
 8018232:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018234:	9203      	str	r2, [sp, #12]
 8018236:	f89d 2040 	ldrb.w	r2, [sp, #64]	; 0x40
 801823a:	9202      	str	r2, [sp, #8]
 801823c:	aa0e      	add	r2, sp, #56	; 0x38
 801823e:	4604      	mov	r4, r0
 8018240:	460d      	mov	r5, r1
 8018242:	e892 0003 	ldmia.w	r2, {r0, r1}
 8018246:	e88d 0003 	stmia.w	sp, {r0, r1}
 801824a:	4620      	mov	r0, r4
 801824c:	68df      	ldr	r7, [r3, #12]
 801824e:	4629      	mov	r1, r5
 8018250:	e896 000c 	ldmia.w	r6, {r2, r3}
 8018254:	47b8      	blx	r7
 8018256:	4620      	mov	r0, r4
 8018258:	b009      	add	sp, #36	; 0x24
 801825a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801825c <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE3putES3_bRSt8ios_basece>:
 801825c:	b570      	push	{r4, r5, r6, lr}
 801825e:	b086      	sub	sp, #24
 8018260:	ac04      	add	r4, sp, #16
 8018262:	e884 000c 	stmia.w	r4, {r2, r3}
 8018266:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 801826a:	9202      	str	r2, [sp, #8]
 801826c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801826e:	9201      	str	r2, [sp, #4]
 8018270:	680b      	ldr	r3, [r1, #0]
 8018272:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 8018276:	9200      	str	r2, [sp, #0]
 8018278:	689e      	ldr	r6, [r3, #8]
 801827a:	e894 000c 	ldmia.w	r4, {r2, r3}
 801827e:	4605      	mov	r5, r0
 8018280:	47b0      	blx	r6
 8018282:	4628      	mov	r0, r5
 8018284:	b006      	add	sp, #24
 8018286:	bd70      	pop	{r4, r5, r6, pc}

08018288 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE3putES3_bRSt8ios_basecRKSs>:
 8018288:	b570      	push	{r4, r5, r6, lr}
 801828a:	b086      	sub	sp, #24
 801828c:	ac04      	add	r4, sp, #16
 801828e:	e884 000c 	stmia.w	r4, {r2, r3}
 8018292:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018294:	9203      	str	r2, [sp, #12]
 8018296:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 801829a:	9202      	str	r2, [sp, #8]
 801829c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801829e:	9201      	str	r2, [sp, #4]
 80182a0:	680b      	ldr	r3, [r1, #0]
 80182a2:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 80182a6:	9200      	str	r2, [sp, #0]
 80182a8:	68de      	ldr	r6, [r3, #12]
 80182aa:	e894 000c 	ldmia.w	r4, {r2, r3}
 80182ae:	4605      	mov	r5, r0
 80182b0:	47b0      	blx	r6
 80182b2:	4628      	mov	r0, r5
 80182b4:	b006      	add	sp, #24
 80182b6:	bd70      	pop	{r4, r5, r6, pc}

080182b8 <_ZNSt16__numpunct_cacheIcEC1Ej>:
 80182b8:	3900      	subs	r1, #0
 80182ba:	4a08      	ldr	r2, [pc, #32]	; (80182dc <_ZNSt16__numpunct_cacheIcEC1Ej+0x24>)
 80182bc:	6002      	str	r2, [r0, #0]
 80182be:	bf18      	it	ne
 80182c0:	2101      	movne	r1, #1
 80182c2:	2200      	movs	r2, #0
 80182c4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80182c8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80182cc:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80182d0:	6041      	str	r1, [r0, #4]
 80182d2:	7402      	strb	r2, [r0, #16]
 80182d4:	8482      	strh	r2, [r0, #36]	; 0x24
 80182d6:	f880 2064 	strb.w	r2, [r0, #100]	; 0x64
 80182da:	4770      	bx	lr
 80182dc:	0802ea58 	.word	0x0802ea58

080182e0 <_ZNKSt8numpunctIcE13decimal_pointEv>:
 80182e0:	6803      	ldr	r3, [r0, #0]
 80182e2:	689b      	ldr	r3, [r3, #8]
 80182e4:	4718      	bx	r3

080182e6 <_ZNKSt8numpunctIcE13thousands_sepEv>:
 80182e6:	6803      	ldr	r3, [r0, #0]
 80182e8:	68db      	ldr	r3, [r3, #12]
 80182ea:	4718      	bx	r3

080182ec <_ZNKSt8numpunctIcE8groupingEv>:
 80182ec:	b510      	push	{r4, lr}
 80182ee:	680b      	ldr	r3, [r1, #0]
 80182f0:	4604      	mov	r4, r0
 80182f2:	691b      	ldr	r3, [r3, #16]
 80182f4:	4798      	blx	r3
 80182f6:	4620      	mov	r0, r4
 80182f8:	bd10      	pop	{r4, pc}

080182fa <_ZNKSt8numpunctIcE8truenameEv>:
 80182fa:	b510      	push	{r4, lr}
 80182fc:	680b      	ldr	r3, [r1, #0]
 80182fe:	4604      	mov	r4, r0
 8018300:	695b      	ldr	r3, [r3, #20]
 8018302:	4798      	blx	r3
 8018304:	4620      	mov	r0, r4
 8018306:	bd10      	pop	{r4, pc}

08018308 <_ZNKSt8numpunctIcE9falsenameEv>:
 8018308:	b510      	push	{r4, lr}
 801830a:	680b      	ldr	r3, [r1, #0]
 801830c:	4604      	mov	r4, r0
 801830e:	699b      	ldr	r3, [r3, #24]
 8018310:	4798      	blx	r3
 8018312:	4620      	mov	r0, r4
 8018314:	bd10      	pop	{r4, pc}
	...

08018318 <_ZNSt11__timepunctIcEC1EPSt17__timepunct_cacheIcEj>:
 8018318:	3a00      	subs	r2, #0
 801831a:	4b08      	ldr	r3, [pc, #32]	; (801833c <_ZNSt11__timepunctIcEC1EPSt17__timepunct_cacheIcEj+0x24>)
 801831c:	bf18      	it	ne
 801831e:	2201      	movne	r2, #1
 8018320:	b510      	push	{r4, lr}
 8018322:	6042      	str	r2, [r0, #4]
 8018324:	6003      	str	r3, [r0, #0]
 8018326:	6081      	str	r1, [r0, #8]
 8018328:	4604      	mov	r4, r0
 801832a:	f7f3 ffe1 	bl	800c2f0 <_ZNSt6locale5facet13_S_get_c_nameEv>
 801832e:	2100      	movs	r1, #0
 8018330:	6120      	str	r0, [r4, #16]
 8018332:	4620      	mov	r0, r4
 8018334:	f00c fc8e 	bl	8024c54 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi>
 8018338:	4620      	mov	r0, r4
 801833a:	bd10      	pop	{r4, pc}
 801833c:	080309c4 	.word	0x080309c4

08018340 <_ZNKSt11__timepunctIcE15_M_date_formatsEPPKc>:
 8018340:	6883      	ldr	r3, [r0, #8]
 8018342:	689a      	ldr	r2, [r3, #8]
 8018344:	600a      	str	r2, [r1, #0]
 8018346:	68db      	ldr	r3, [r3, #12]
 8018348:	604b      	str	r3, [r1, #4]
 801834a:	4770      	bx	lr

0801834c <_ZNKSt11__timepunctIcE15_M_time_formatsEPPKc>:
 801834c:	6883      	ldr	r3, [r0, #8]
 801834e:	691a      	ldr	r2, [r3, #16]
 8018350:	600a      	str	r2, [r1, #0]
 8018352:	695b      	ldr	r3, [r3, #20]
 8018354:	604b      	str	r3, [r1, #4]
 8018356:	4770      	bx	lr

08018358 <_ZNKSt11__timepunctIcE20_M_date_time_formatsEPPKc>:
 8018358:	6883      	ldr	r3, [r0, #8]
 801835a:	699a      	ldr	r2, [r3, #24]
 801835c:	600a      	str	r2, [r1, #0]
 801835e:	69db      	ldr	r3, [r3, #28]
 8018360:	604b      	str	r3, [r1, #4]
 8018362:	4770      	bx	lr

08018364 <_ZNKSt11__timepunctIcE7_M_daysEPPKc>:
 8018364:	6883      	ldr	r3, [r0, #8]
 8018366:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8018368:	600a      	str	r2, [r1, #0]
 801836a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 801836c:	604a      	str	r2, [r1, #4]
 801836e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8018370:	608a      	str	r2, [r1, #8]
 8018372:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8018374:	60ca      	str	r2, [r1, #12]
 8018376:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8018378:	610a      	str	r2, [r1, #16]
 801837a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 801837c:	614a      	str	r2, [r1, #20]
 801837e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018380:	618b      	str	r3, [r1, #24]
 8018382:	4770      	bx	lr

08018384 <_ZNKSt11__timepunctIcE19_M_days_abbreviatedEPPKc>:
 8018384:	6883      	ldr	r3, [r0, #8]
 8018386:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8018388:	600a      	str	r2, [r1, #0]
 801838a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801838c:	604a      	str	r2, [r1, #4]
 801838e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8018390:	608a      	str	r2, [r1, #8]
 8018392:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8018394:	60ca      	str	r2, [r1, #12]
 8018396:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8018398:	610a      	str	r2, [r1, #16]
 801839a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 801839c:	614a      	str	r2, [r1, #20]
 801839e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80183a0:	618b      	str	r3, [r1, #24]
 80183a2:	4770      	bx	lr

080183a4 <_ZNKSt11__timepunctIcE9_M_monthsEPPKc>:
 80183a4:	6883      	ldr	r3, [r0, #8]
 80183a6:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80183a8:	600a      	str	r2, [r1, #0]
 80183aa:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80183ac:	604a      	str	r2, [r1, #4]
 80183ae:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 80183b0:	608a      	str	r2, [r1, #8]
 80183b2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80183b4:	60ca      	str	r2, [r1, #12]
 80183b6:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80183b8:	610a      	str	r2, [r1, #16]
 80183ba:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 80183bc:	614a      	str	r2, [r1, #20]
 80183be:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 80183c0:	618a      	str	r2, [r1, #24]
 80183c2:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 80183c6:	61ca      	str	r2, [r1, #28]
 80183c8:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
 80183cc:	620a      	str	r2, [r1, #32]
 80183ce:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 80183d2:	624a      	str	r2, [r1, #36]	; 0x24
 80183d4:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80183d8:	628a      	str	r2, [r1, #40]	; 0x28
 80183da:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80183de:	62cb      	str	r3, [r1, #44]	; 0x2c
 80183e0:	4770      	bx	lr

080183e2 <_ZNKSt11__timepunctIcE21_M_months_abbreviatedEPPKc>:
 80183e2:	6883      	ldr	r3, [r0, #8]
 80183e4:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80183e8:	600a      	str	r2, [r1, #0]
 80183ea:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80183ee:	604a      	str	r2, [r1, #4]
 80183f0:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 80183f4:	608a      	str	r2, [r1, #8]
 80183f6:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
 80183fa:	60ca      	str	r2, [r1, #12]
 80183fc:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8018400:	610a      	str	r2, [r1, #16]
 8018402:	f8d3 20a8 	ldr.w	r2, [r3, #168]	; 0xa8
 8018406:	614a      	str	r2, [r1, #20]
 8018408:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 801840c:	618a      	str	r2, [r1, #24]
 801840e:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 8018412:	61ca      	str	r2, [r1, #28]
 8018414:	f8d3 20b4 	ldr.w	r2, [r3, #180]	; 0xb4
 8018418:	620a      	str	r2, [r1, #32]
 801841a:	f8d3 20b8 	ldr.w	r2, [r3, #184]	; 0xb8
 801841e:	624a      	str	r2, [r1, #36]	; 0x24
 8018420:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 8018424:	628a      	str	r2, [r1, #40]	; 0x28
 8018426:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801842a:	62cb      	str	r3, [r1, #44]	; 0x2c
 801842c:	4770      	bx	lr

0801842e <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10date_orderEv>:
 801842e:	6803      	ldr	r3, [r0, #0]
 8018430:	689b      	ldr	r3, [r3, #8]
 8018432:	4718      	bx	r3

08018434 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8get_timeES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8018434:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018436:	b089      	sub	sp, #36	; 0x24
 8018438:	ae06      	add	r6, sp, #24
 801843a:	e886 000c 	stmia.w	r6, {r2, r3}
 801843e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018440:	680b      	ldr	r3, [r1, #0]
 8018442:	9204      	str	r2, [sp, #16]
 8018444:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018446:	9203      	str	r2, [sp, #12]
 8018448:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801844a:	9202      	str	r2, [sp, #8]
 801844c:	aa0e      	add	r2, sp, #56	; 0x38
 801844e:	4604      	mov	r4, r0
 8018450:	460d      	mov	r5, r1
 8018452:	e892 0003 	ldmia.w	r2, {r0, r1}
 8018456:	e88d 0003 	stmia.w	sp, {r0, r1}
 801845a:	4620      	mov	r0, r4
 801845c:	68df      	ldr	r7, [r3, #12]
 801845e:	4629      	mov	r1, r5
 8018460:	e896 000c 	ldmia.w	r6, {r2, r3}
 8018464:	47b8      	blx	r7
 8018466:	4620      	mov	r0, r4
 8018468:	b009      	add	sp, #36	; 0x24
 801846a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801846c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8get_dateES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801846c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801846e:	b089      	sub	sp, #36	; 0x24
 8018470:	ae06      	add	r6, sp, #24
 8018472:	e886 000c 	stmia.w	r6, {r2, r3}
 8018476:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018478:	680b      	ldr	r3, [r1, #0]
 801847a:	9204      	str	r2, [sp, #16]
 801847c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801847e:	9203      	str	r2, [sp, #12]
 8018480:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018482:	9202      	str	r2, [sp, #8]
 8018484:	aa0e      	add	r2, sp, #56	; 0x38
 8018486:	4604      	mov	r4, r0
 8018488:	460d      	mov	r5, r1
 801848a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801848e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018492:	4620      	mov	r0, r4
 8018494:	691f      	ldr	r7, [r3, #16]
 8018496:	4629      	mov	r1, r5
 8018498:	e896 000c 	ldmia.w	r6, {r2, r3}
 801849c:	47b8      	blx	r7
 801849e:	4620      	mov	r0, r4
 80184a0:	b009      	add	sp, #36	; 0x24
 80184a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080184a4 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11get_weekdayES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 80184a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80184a6:	b089      	sub	sp, #36	; 0x24
 80184a8:	ae06      	add	r6, sp, #24
 80184aa:	e886 000c 	stmia.w	r6, {r2, r3}
 80184ae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80184b0:	680b      	ldr	r3, [r1, #0]
 80184b2:	9204      	str	r2, [sp, #16]
 80184b4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80184b6:	9203      	str	r2, [sp, #12]
 80184b8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80184ba:	9202      	str	r2, [sp, #8]
 80184bc:	aa0e      	add	r2, sp, #56	; 0x38
 80184be:	4604      	mov	r4, r0
 80184c0:	460d      	mov	r5, r1
 80184c2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80184c6:	e88d 0003 	stmia.w	sp, {r0, r1}
 80184ca:	4620      	mov	r0, r4
 80184cc:	695f      	ldr	r7, [r3, #20]
 80184ce:	4629      	mov	r1, r5
 80184d0:	e896 000c 	ldmia.w	r6, {r2, r3}
 80184d4:	47b8      	blx	r7
 80184d6:	4620      	mov	r0, r4
 80184d8:	b009      	add	sp, #36	; 0x24
 80184da:	bdf0      	pop	{r4, r5, r6, r7, pc}

080184dc <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE13get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 80184dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80184de:	b089      	sub	sp, #36	; 0x24
 80184e0:	ae06      	add	r6, sp, #24
 80184e2:	e886 000c 	stmia.w	r6, {r2, r3}
 80184e6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80184e8:	680b      	ldr	r3, [r1, #0]
 80184ea:	9204      	str	r2, [sp, #16]
 80184ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80184ee:	9203      	str	r2, [sp, #12]
 80184f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80184f2:	9202      	str	r2, [sp, #8]
 80184f4:	aa0e      	add	r2, sp, #56	; 0x38
 80184f6:	4604      	mov	r4, r0
 80184f8:	460d      	mov	r5, r1
 80184fa:	e892 0003 	ldmia.w	r2, {r0, r1}
 80184fe:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018502:	4620      	mov	r0, r4
 8018504:	699f      	ldr	r7, [r3, #24]
 8018506:	4629      	mov	r1, r5
 8018508:	e896 000c 	ldmia.w	r6, {r2, r3}
 801850c:	47b8      	blx	r7
 801850e:	4620      	mov	r0, r4
 8018510:	b009      	add	sp, #36	; 0x24
 8018512:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018514 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE8get_yearES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8018514:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018516:	b089      	sub	sp, #36	; 0x24
 8018518:	ae06      	add	r6, sp, #24
 801851a:	e886 000c 	stmia.w	r6, {r2, r3}
 801851e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018520:	680b      	ldr	r3, [r1, #0]
 8018522:	9204      	str	r2, [sp, #16]
 8018524:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018526:	9203      	str	r2, [sp, #12]
 8018528:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801852a:	9202      	str	r2, [sp, #8]
 801852c:	aa0e      	add	r2, sp, #56	; 0x38
 801852e:	4604      	mov	r4, r0
 8018530:	460d      	mov	r5, r1
 8018532:	e892 0003 	ldmia.w	r2, {r0, r1}
 8018536:	e88d 0003 	stmia.w	sp, {r0, r1}
 801853a:	4620      	mov	r0, r4
 801853c:	69df      	ldr	r7, [r3, #28]
 801853e:	4629      	mov	r1, r5
 8018540:	e896 000c 	ldmia.w	r6, {r2, r3}
 8018544:	47b8      	blx	r7
 8018546:	4620      	mov	r0, r4
 8018548:	b009      	add	sp, #36	; 0x24
 801854a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801854c <_ZNSt8messagesIcEC1Ej>:
 801854c:	3900      	subs	r1, #0
 801854e:	b510      	push	{r4, lr}
 8018550:	4b05      	ldr	r3, [pc, #20]	; (8018568 <_ZNSt8messagesIcEC1Ej+0x1c>)
 8018552:	6003      	str	r3, [r0, #0]
 8018554:	bf18      	it	ne
 8018556:	2101      	movne	r1, #1
 8018558:	6041      	str	r1, [r0, #4]
 801855a:	4604      	mov	r4, r0
 801855c:	f7f3 febe 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8018560:	60a0      	str	r0, [r4, #8]
 8018562:	4620      	mov	r0, r4
 8018564:	bd10      	pop	{r4, pc}
 8018566:	bf00      	nop
 8018568:	08030a3c 	.word	0x08030a3c

0801856c <_ZNKSt8messagesIcE4openERKSsRKSt6locale>:
 801856c:	6803      	ldr	r3, [r0, #0]
 801856e:	689b      	ldr	r3, [r3, #8]
 8018570:	4718      	bx	r3

08018572 <_ZNKSt8messagesIcE3getEiiiRKSs>:
 8018572:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8018574:	9e07      	ldr	r6, [sp, #28]
 8018576:	9601      	str	r6, [sp, #4]
 8018578:	680d      	ldr	r5, [r1, #0]
 801857a:	9e06      	ldr	r6, [sp, #24]
 801857c:	9600      	str	r6, [sp, #0]
 801857e:	68ed      	ldr	r5, [r5, #12]
 8018580:	4604      	mov	r4, r0
 8018582:	47a8      	blx	r5
 8018584:	4620      	mov	r0, r4
 8018586:	b002      	add	sp, #8
 8018588:	bd70      	pop	{r4, r5, r6, pc}

0801858a <_ZNKSt8messagesIcE5closeEi>:
 801858a:	6803      	ldr	r3, [r0, #0]
 801858c:	691b      	ldr	r3, [r3, #16]
 801858e:	4718      	bx	r3

08018590 <_ZNKSt7collateIcE7compareEPKcS2_S2_S2_>:
 8018590:	b410      	push	{r4}
 8018592:	6804      	ldr	r4, [r0, #0]
 8018594:	68a4      	ldr	r4, [r4, #8]
 8018596:	46a4      	mov	ip, r4
 8018598:	f85d 4b04 	ldr.w	r4, [sp], #4
 801859c:	4760      	bx	ip

0801859e <_ZNKSt7collateIcE9transformEPKcS2_>:
 801859e:	b538      	push	{r3, r4, r5, lr}
 80185a0:	680d      	ldr	r5, [r1, #0]
 80185a2:	4604      	mov	r4, r0
 80185a4:	68ed      	ldr	r5, [r5, #12]
 80185a6:	47a8      	blx	r5
 80185a8:	4620      	mov	r0, r4
 80185aa:	bd38      	pop	{r3, r4, r5, pc}

080185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>:
 80185ac:	b510      	push	{r4, lr}
 80185ae:	4604      	mov	r4, r0
 80185b0:	480a      	ldr	r0, [pc, #40]	; (80185dc <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale+0x30>)
 80185b2:	f7f3 ff0f 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 80185b6:	6823      	ldr	r3, [r4, #0]
 80185b8:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 80185bc:	4283      	cmp	r3, r0
 80185be:	d902      	bls.n	80185c6 <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale+0x1a>
 80185c0:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 80185c4:	b908      	cbnz	r0, 80185ca <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale+0x1e>
 80185c6:	f7ff f92e 	bl	8017826 <_ZSt16__throw_bad_castv>
 80185ca:	4a05      	ldr	r2, [pc, #20]	; (80185e0 <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale+0x34>)
 80185cc:	4905      	ldr	r1, [pc, #20]	; (80185e4 <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale+0x38>)
 80185ce:	2300      	movs	r3, #0
 80185d0:	f00b fc80 	bl	8023ed4 <__dynamic_cast>
 80185d4:	b908      	cbnz	r0, 80185da <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale+0x2e>
 80185d6:	f00b fcd6 	bl	8023f86 <__cxa_bad_cast>
 80185da:	bd10      	pop	{r4, pc}
 80185dc:	20003c04 	.word	0x20003c04
 80185e0:	0802f6f0 	.word	0x0802f6f0
 80185e4:	0802e934 	.word	0x0802e934

080185e8 <_ZSt9use_facetISt8numpunctIcEERKT_RKSt6locale>:
 80185e8:	b510      	push	{r4, lr}
 80185ea:	4604      	mov	r4, r0
 80185ec:	480a      	ldr	r0, [pc, #40]	; (8018618 <_ZSt9use_facetISt8numpunctIcEERKT_RKSt6locale+0x30>)
 80185ee:	f7f3 fef1 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 80185f2:	6823      	ldr	r3, [r4, #0]
 80185f4:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 80185f8:	4283      	cmp	r3, r0
 80185fa:	d902      	bls.n	8018602 <_ZSt9use_facetISt8numpunctIcEERKT_RKSt6locale+0x1a>
 80185fc:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8018600:	b908      	cbnz	r0, 8018606 <_ZSt9use_facetISt8numpunctIcEERKT_RKSt6locale+0x1e>
 8018602:	f7ff f910 	bl	8017826 <_ZSt16__throw_bad_castv>
 8018606:	4a05      	ldr	r2, [pc, #20]	; (801861c <_ZSt9use_facetISt8numpunctIcEERKT_RKSt6locale+0x34>)
 8018608:	4905      	ldr	r1, [pc, #20]	; (8018620 <_ZSt9use_facetISt8numpunctIcEERKT_RKSt6locale+0x38>)
 801860a:	2300      	movs	r3, #0
 801860c:	f00b fc62 	bl	8023ed4 <__dynamic_cast>
 8018610:	b908      	cbnz	r0, 8018616 <_ZSt9use_facetISt8numpunctIcEERKT_RKSt6locale+0x2e>
 8018612:	f00b fcb8 	bl	8023f86 <__cxa_bad_cast>
 8018616:	bd10      	pop	{r4, pc}
 8018618:	20003cdc 	.word	0x20003cdc
 801861c:	08030bc8 	.word	0x08030bc8
 8018620:	0802e934 	.word	0x0802e934

08018624 <_ZNSt16__numpunct_cacheIcE8_M_cacheERKSt6locale>:
 8018624:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018628:	4604      	mov	r4, r0
 801862a:	b085      	sub	sp, #20
 801862c:	4608      	mov	r0, r1
 801862e:	4688      	mov	r8, r1
 8018630:	f7ff ffda 	bl	80185e8 <_ZSt9use_facetISt8numpunctIcEERKT_RKSt6locale>
 8018634:	4601      	mov	r1, r0
 8018636:	4605      	mov	r5, r0
 8018638:	a801      	add	r0, sp, #4
 801863a:	f7ff fe57 	bl	80182ec <_ZNKSt8numpunctIcE8groupingEv>
 801863e:	9b01      	ldr	r3, [sp, #4]
 8018640:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 8018644:	60e0      	str	r0, [r4, #12]
 8018646:	f00b fcc9 	bl	8023fdc <_Znaj>
 801864a:	2300      	movs	r3, #0
 801864c:	4601      	mov	r1, r0
 801864e:	68e2      	ldr	r2, [r4, #12]
 8018650:	4606      	mov	r6, r0
 8018652:	a801      	add	r0, sp, #4
 8018654:	f7f7 fc0c 	bl	800fe70 <_ZNKSs4copyEPcjj>
 8018658:	68e3      	ldr	r3, [r4, #12]
 801865a:	b12b      	cbz	r3, 8018668 <_ZNSt16__numpunct_cacheIcE8_M_cacheERKSt6locale+0x44>
 801865c:	f996 3000 	ldrsb.w	r3, [r6]
 8018660:	2b00      	cmp	r3, #0
 8018662:	bfd4      	ite	le
 8018664:	2300      	movle	r3, #0
 8018666:	2301      	movgt	r3, #1
 8018668:	4629      	mov	r1, r5
 801866a:	7423      	strb	r3, [r4, #16]
 801866c:	a802      	add	r0, sp, #8
 801866e:	f7ff fe44 	bl	80182fa <_ZNKSt8numpunctIcE8truenameEv>
 8018672:	9b02      	ldr	r3, [sp, #8]
 8018674:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 8018678:	61a0      	str	r0, [r4, #24]
 801867a:	f00b fcaf 	bl	8023fdc <_Znaj>
 801867e:	69a2      	ldr	r2, [r4, #24]
 8018680:	4681      	mov	r9, r0
 8018682:	2300      	movs	r3, #0
 8018684:	4601      	mov	r1, r0
 8018686:	a802      	add	r0, sp, #8
 8018688:	f7f7 fbf2 	bl	800fe70 <_ZNKSs4copyEPcjj>
 801868c:	4629      	mov	r1, r5
 801868e:	a803      	add	r0, sp, #12
 8018690:	f7ff fe3a 	bl	8018308 <_ZNKSt8numpunctIcE9falsenameEv>
 8018694:	9b03      	ldr	r3, [sp, #12]
 8018696:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801869a:	6220      	str	r0, [r4, #32]
 801869c:	f00b fc9e 	bl	8023fdc <_Znaj>
 80186a0:	6a22      	ldr	r2, [r4, #32]
 80186a2:	4601      	mov	r1, r0
 80186a4:	2300      	movs	r3, #0
 80186a6:	4607      	mov	r7, r0
 80186a8:	a803      	add	r0, sp, #12
 80186aa:	f7f7 fbe1 	bl	800fe70 <_ZNKSs4copyEPcjj>
 80186ae:	4628      	mov	r0, r5
 80186b0:	f7ff fe16 	bl	80182e0 <_ZNKSt8numpunctIcE13decimal_pointEv>
 80186b4:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 80186b8:	4628      	mov	r0, r5
 80186ba:	f7ff fe14 	bl	80182e6 <_ZNKSt8numpunctIcE13thousands_sepEv>
 80186be:	f884 0025 	strb.w	r0, [r4, #37]	; 0x25
 80186c2:	4640      	mov	r0, r8
 80186c4:	f7ff ff72 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 80186c8:	4b12      	ldr	r3, [pc, #72]	; (8018714 <_ZNSt16__numpunct_cacheIcE8_M_cacheERKSt6locale+0xf0>)
 80186ca:	6819      	ldr	r1, [r3, #0]
 80186cc:	f104 0326 	add.w	r3, r4, #38	; 0x26
 80186d0:	f101 0224 	add.w	r2, r1, #36	; 0x24
 80186d4:	4605      	mov	r5, r0
 80186d6:	f7f8 ff45 	bl	8011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>
 80186da:	4b0f      	ldr	r3, [pc, #60]	; (8018718 <_ZNSt16__numpunct_cacheIcE8_M_cacheERKSt6locale+0xf4>)
 80186dc:	6819      	ldr	r1, [r3, #0]
 80186de:	4628      	mov	r0, r5
 80186e0:	f101 021a 	add.w	r2, r1, #26
 80186e4:	f104 034a 	add.w	r3, r4, #74	; 0x4a
 80186e8:	f7f8 ff3c 	bl	8011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>
 80186ec:	2301      	movs	r3, #1
 80186ee:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80186f2:	60a6      	str	r6, [r4, #8]
 80186f4:	f8c4 9014 	str.w	r9, [r4, #20]
 80186f8:	61e7      	str	r7, [r4, #28]
 80186fa:	a803      	add	r0, sp, #12
 80186fc:	f7f7 fc82 	bl	8010004 <_ZNSsD1Ev>
 8018700:	a802      	add	r0, sp, #8
 8018702:	f7f7 fc7f 	bl	8010004 <_ZNSsD1Ev>
 8018706:	a801      	add	r0, sp, #4
 8018708:	f7f7 fc7c 	bl	8010004 <_ZNSsD1Ev>
 801870c:	b005      	add	sp, #20
 801870e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018712:	bf00      	nop
 8018714:	20000038 	.word	0x20000038
 8018718:	20000034 	.word	0x20000034

0801871c <_ZSt9use_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale>:
 801871c:	b510      	push	{r4, lr}
 801871e:	4604      	mov	r4, r0
 8018720:	480a      	ldr	r0, [pc, #40]	; (801874c <_ZSt9use_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale+0x30>)
 8018722:	f7f3 fe57 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 8018726:	6823      	ldr	r3, [r4, #0]
 8018728:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 801872c:	4283      	cmp	r3, r0
 801872e:	d902      	bls.n	8018736 <_ZSt9use_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale+0x1a>
 8018730:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8018734:	b908      	cbnz	r0, 801873a <_ZSt9use_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale+0x1e>
 8018736:	f7ff f876 	bl	8017826 <_ZSt16__throw_bad_castv>
 801873a:	4a05      	ldr	r2, [pc, #20]	; (8018750 <_ZSt9use_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale+0x34>)
 801873c:	4905      	ldr	r1, [pc, #20]	; (8018754 <_ZSt9use_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale+0x38>)
 801873e:	2300      	movs	r3, #0
 8018740:	f00b fbc8 	bl	8023ed4 <__dynamic_cast>
 8018744:	b908      	cbnz	r0, 801874a <_ZSt9use_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale+0x2e>
 8018746:	f00b fc1e 	bl	8023f86 <__cxa_bad_cast>
 801874a:	bd10      	pop	{r4, pc}
 801874c:	20003cd4 	.word	0x20003cd4
 8018750:	08030b9c 	.word	0x08030b9c
 8018754:	0802e934 	.word	0x0802e934

08018758 <_ZSt9use_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale>:
 8018758:	b510      	push	{r4, lr}
 801875a:	4604      	mov	r4, r0
 801875c:	480a      	ldr	r0, [pc, #40]	; (8018788 <_ZSt9use_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale+0x30>)
 801875e:	f7f3 fe39 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 8018762:	6823      	ldr	r3, [r4, #0]
 8018764:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 8018768:	4283      	cmp	r3, r0
 801876a:	d902      	bls.n	8018772 <_ZSt9use_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale+0x1a>
 801876c:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8018770:	b908      	cbnz	r0, 8018776 <_ZSt9use_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale+0x1e>
 8018772:	f7ff f858 	bl	8017826 <_ZSt16__throw_bad_castv>
 8018776:	4a05      	ldr	r2, [pc, #20]	; (801878c <_ZSt9use_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale+0x34>)
 8018778:	4905      	ldr	r1, [pc, #20]	; (8018790 <_ZSt9use_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale+0x38>)
 801877a:	2300      	movs	r3, #0
 801877c:	f00b fbaa 	bl	8023ed4 <__dynamic_cast>
 8018780:	b908      	cbnz	r0, 8018786 <_ZSt9use_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEERKT_RKSt6locale+0x2e>
 8018782:	f00b fc00 	bl	8023f86 <__cxa_bad_cast>
 8018786:	bd10      	pop	{r4, pc}
 8018788:	20003cd8 	.word	0x20003cd8
 801878c:	08030b90 	.word	0x08030b90
 8018790:	0802e934 	.word	0x0802e934

08018794 <_ZSt9use_facetISt10moneypunctIcLb1EEERKT_RKSt6locale>:
 8018794:	b510      	push	{r4, lr}
 8018796:	4604      	mov	r4, r0
 8018798:	480a      	ldr	r0, [pc, #40]	; (80187c4 <_ZSt9use_facetISt10moneypunctIcLb1EEERKT_RKSt6locale+0x30>)
 801879a:	f7f3 fe1b 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801879e:	6823      	ldr	r3, [r4, #0]
 80187a0:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 80187a4:	4283      	cmp	r3, r0
 80187a6:	d902      	bls.n	80187ae <_ZSt9use_facetISt10moneypunctIcLb1EEERKT_RKSt6locale+0x1a>
 80187a8:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 80187ac:	b908      	cbnz	r0, 80187b2 <_ZSt9use_facetISt10moneypunctIcLb1EEERKT_RKSt6locale+0x1e>
 80187ae:	f7ff f83a 	bl	8017826 <_ZSt16__throw_bad_castv>
 80187b2:	4a05      	ldr	r2, [pc, #20]	; (80187c8 <_ZSt9use_facetISt10moneypunctIcLb1EEERKT_RKSt6locale+0x34>)
 80187b4:	4905      	ldr	r1, [pc, #20]	; (80187cc <_ZSt9use_facetISt10moneypunctIcLb1EEERKT_RKSt6locale+0x38>)
 80187b6:	2300      	movs	r3, #0
 80187b8:	f00b fb8c 	bl	8023ed4 <__dynamic_cast>
 80187bc:	b908      	cbnz	r0, 80187c2 <_ZSt9use_facetISt10moneypunctIcLb1EEERKT_RKSt6locale+0x2e>
 80187be:	f00b fbe2 	bl	8023f86 <__cxa_bad_cast>
 80187c2:	bd10      	pop	{r4, pc}
 80187c4:	20003ce8 	.word	0x20003ce8
 80187c8:	08030b08 	.word	0x08030b08
 80187cc:	0802e934 	.word	0x0802e934

080187d0 <_ZNSt18__moneypunct_cacheIcLb1EE8_M_cacheERKSt6locale>:
 80187d0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80187d4:	4604      	mov	r4, r0
 80187d6:	4608      	mov	r0, r1
 80187d8:	4688      	mov	r8, r1
 80187da:	f7ff ffdb 	bl	8018794 <_ZSt9use_facetISt10moneypunctIcLb1EEERKT_RKSt6locale>
 80187de:	4605      	mov	r5, r0
 80187e0:	f7ff fccf 	bl	8018182 <_ZNKSt10moneypunctIcLb1EE13decimal_pointEv>
 80187e4:	7460      	strb	r0, [r4, #17]
 80187e6:	4628      	mov	r0, r5
 80187e8:	f7ff fcce 	bl	8018188 <_ZNKSt10moneypunctIcLb1EE13thousands_sepEv>
 80187ec:	74a0      	strb	r0, [r4, #18]
 80187ee:	4628      	mov	r0, r5
 80187f0:	f7ff fce9 	bl	80181c6 <_ZNKSt10moneypunctIcLb1EE11frac_digitsEv>
 80187f4:	4629      	mov	r1, r5
 80187f6:	62e0      	str	r0, [r4, #44]	; 0x2c
 80187f8:	4668      	mov	r0, sp
 80187fa:	f7ff fcc8 	bl	801818e <_ZNKSt10moneypunctIcLb1EE8groupingEv>
 80187fe:	9b00      	ldr	r3, [sp, #0]
 8018800:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 8018804:	60e0      	str	r0, [r4, #12]
 8018806:	f00b fbe9 	bl	8023fdc <_Znaj>
 801880a:	2300      	movs	r3, #0
 801880c:	4601      	mov	r1, r0
 801880e:	68e2      	ldr	r2, [r4, #12]
 8018810:	4606      	mov	r6, r0
 8018812:	4668      	mov	r0, sp
 8018814:	f7f7 fb2c 	bl	800fe70 <_ZNKSs4copyEPcjj>
 8018818:	68e3      	ldr	r3, [r4, #12]
 801881a:	b12b      	cbz	r3, 8018828 <_ZNSt18__moneypunct_cacheIcLb1EE8_M_cacheERKSt6locale+0x58>
 801881c:	f996 3000 	ldrsb.w	r3, [r6]
 8018820:	2b00      	cmp	r3, #0
 8018822:	bfd4      	ite	le
 8018824:	2300      	movle	r3, #0
 8018826:	2301      	movgt	r3, #1
 8018828:	4629      	mov	r1, r5
 801882a:	7423      	strb	r3, [r4, #16]
 801882c:	a801      	add	r0, sp, #4
 801882e:	f7ff fcb5 	bl	801819c <_ZNKSt10moneypunctIcLb1EE11curr_symbolEv>
 8018832:	9b01      	ldr	r3, [sp, #4]
 8018834:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 8018838:	61a0      	str	r0, [r4, #24]
 801883a:	f00b fbcf 	bl	8023fdc <_Znaj>
 801883e:	69a2      	ldr	r2, [r4, #24]
 8018840:	4682      	mov	sl, r0
 8018842:	2300      	movs	r3, #0
 8018844:	4601      	mov	r1, r0
 8018846:	a801      	add	r0, sp, #4
 8018848:	f7f7 fb12 	bl	800fe70 <_ZNKSs4copyEPcjj>
 801884c:	4629      	mov	r1, r5
 801884e:	a802      	add	r0, sp, #8
 8018850:	f7ff fcab 	bl	80181aa <_ZNKSt10moneypunctIcLb1EE13positive_signEv>
 8018854:	9b02      	ldr	r3, [sp, #8]
 8018856:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801885a:	6220      	str	r0, [r4, #32]
 801885c:	f00b fbbe 	bl	8023fdc <_Znaj>
 8018860:	6a22      	ldr	r2, [r4, #32]
 8018862:	4681      	mov	r9, r0
 8018864:	2300      	movs	r3, #0
 8018866:	4601      	mov	r1, r0
 8018868:	a802      	add	r0, sp, #8
 801886a:	f7f7 fb01 	bl	800fe70 <_ZNKSs4copyEPcjj>
 801886e:	4629      	mov	r1, r5
 8018870:	a803      	add	r0, sp, #12
 8018872:	f7ff fca1 	bl	80181b8 <_ZNKSt10moneypunctIcLb1EE13negative_signEv>
 8018876:	9b03      	ldr	r3, [sp, #12]
 8018878:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801887c:	62a0      	str	r0, [r4, #40]	; 0x28
 801887e:	f00b fbad 	bl	8023fdc <_Znaj>
 8018882:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8018884:	4601      	mov	r1, r0
 8018886:	2300      	movs	r3, #0
 8018888:	4607      	mov	r7, r0
 801888a:	a803      	add	r0, sp, #12
 801888c:	f7f7 faf0 	bl	800fe70 <_ZNKSs4copyEPcjj>
 8018890:	4628      	mov	r0, r5
 8018892:	f7ff fc9b 	bl	80181cc <_ZNKSt10moneypunctIcLb1EE10pos_formatEv>
 8018896:	6320      	str	r0, [r4, #48]	; 0x30
 8018898:	4628      	mov	r0, r5
 801889a:	f7ff fc9c 	bl	80181d6 <_ZNKSt10moneypunctIcLb1EE10neg_formatEv>
 801889e:	6360      	str	r0, [r4, #52]	; 0x34
 80188a0:	4640      	mov	r0, r8
 80188a2:	f7ff fe83 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 80188a6:	4b10      	ldr	r3, [pc, #64]	; (80188e8 <_ZNSt18__moneypunct_cacheIcLb1EE8_M_cacheERKSt6locale+0x118>)
 80188a8:	6819      	ldr	r1, [r3, #0]
 80188aa:	f104 0338 	add.w	r3, r4, #56	; 0x38
 80188ae:	f101 020b 	add.w	r2, r1, #11
 80188b2:	f7f8 fe57 	bl	8011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>
 80188b6:	2301      	movs	r3, #1
 80188b8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80188bc:	60a6      	str	r6, [r4, #8]
 80188be:	f8c4 a014 	str.w	sl, [r4, #20]
 80188c2:	f8c4 901c 	str.w	r9, [r4, #28]
 80188c6:	6267      	str	r7, [r4, #36]	; 0x24
 80188c8:	a803      	add	r0, sp, #12
 80188ca:	f7f7 fb9b 	bl	8010004 <_ZNSsD1Ev>
 80188ce:	a802      	add	r0, sp, #8
 80188d0:	f7f7 fb98 	bl	8010004 <_ZNSsD1Ev>
 80188d4:	a801      	add	r0, sp, #4
 80188d6:	f7f7 fb95 	bl	8010004 <_ZNSsD1Ev>
 80188da:	4668      	mov	r0, sp
 80188dc:	f7f7 fb92 	bl	8010004 <_ZNSsD1Ev>
 80188e0:	b004      	add	sp, #16
 80188e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80188e6:	bf00      	nop
 80188e8:	2000003c 	.word	0x2000003c

080188ec <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb1EEEclERKSt6locale.isra.0>:
 80188ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80188f0:	4605      	mov	r5, r0
 80188f2:	480f      	ldr	r0, [pc, #60]	; (8018930 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb1EEEclERKSt6locale.isra.0+0x44>)
 80188f4:	f7f3 fd6e 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 80188f8:	682b      	ldr	r3, [r5, #0]
 80188fa:	68df      	ldr	r7, [r3, #12]
 80188fc:	f857 8020 	ldr.w	r8, [r7, r0, lsl #2]
 8018900:	4604      	mov	r4, r0
 8018902:	f1b8 0f00 	cmp.w	r8, #0
 8018906:	d10f      	bne.n	8018928 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb1EEEclERKSt6locale.isra.0+0x3c>
 8018908:	2044      	movs	r0, #68	; 0x44
 801890a:	f7f3 fb19 	bl	800bf40 <_Znwj>
 801890e:	4641      	mov	r1, r8
 8018910:	4606      	mov	r6, r0
 8018912:	f7ff fbed 	bl	80180f0 <_ZNSt18__moneypunct_cacheIcLb1EEC1Ej>
 8018916:	4629      	mov	r1, r5
 8018918:	4630      	mov	r0, r6
 801891a:	f7ff ff59 	bl	80187d0 <_ZNSt18__moneypunct_cacheIcLb1EE8_M_cacheERKSt6locale>
 801891e:	6828      	ldr	r0, [r5, #0]
 8018920:	4622      	mov	r2, r4
 8018922:	4631      	mov	r1, r6
 8018924:	f7f3 fe1c 	bl	800c560 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj>
 8018928:	f857 0024 	ldr.w	r0, [r7, r4, lsl #2]
 801892c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018930:	20003ce8 	.word	0x20003ce8

08018934 <_ZSt9use_facetISt10moneypunctIcLb0EEERKT_RKSt6locale>:
 8018934:	b510      	push	{r4, lr}
 8018936:	4604      	mov	r4, r0
 8018938:	480a      	ldr	r0, [pc, #40]	; (8018964 <_ZSt9use_facetISt10moneypunctIcLb0EEERKT_RKSt6locale+0x30>)
 801893a:	f7f3 fd4b 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801893e:	6823      	ldr	r3, [r4, #0]
 8018940:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 8018944:	4283      	cmp	r3, r0
 8018946:	d902      	bls.n	801894e <_ZSt9use_facetISt10moneypunctIcLb0EEERKT_RKSt6locale+0x1a>
 8018948:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 801894c:	b908      	cbnz	r0, 8018952 <_ZSt9use_facetISt10moneypunctIcLb0EEERKT_RKSt6locale+0x1e>
 801894e:	f7fe ff6a 	bl	8017826 <_ZSt16__throw_bad_castv>
 8018952:	4a05      	ldr	r2, [pc, #20]	; (8018968 <_ZSt9use_facetISt10moneypunctIcLb0EEERKT_RKSt6locale+0x34>)
 8018954:	4905      	ldr	r1, [pc, #20]	; (801896c <_ZSt9use_facetISt10moneypunctIcLb0EEERKT_RKSt6locale+0x38>)
 8018956:	2300      	movs	r3, #0
 8018958:	f00b fabc 	bl	8023ed4 <__dynamic_cast>
 801895c:	b908      	cbnz	r0, 8018962 <_ZSt9use_facetISt10moneypunctIcLb0EEERKT_RKSt6locale+0x2e>
 801895e:	f00b fb12 	bl	8023f86 <__cxa_bad_cast>
 8018962:	bd10      	pop	{r4, pc}
 8018964:	20003cec 	.word	0x20003cec
 8018968:	08030ae8 	.word	0x08030ae8
 801896c:	0802e934 	.word	0x0802e934

08018970 <_ZNSt18__moneypunct_cacheIcLb0EE8_M_cacheERKSt6locale>:
 8018970:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8018974:	4604      	mov	r4, r0
 8018976:	4608      	mov	r0, r1
 8018978:	4688      	mov	r8, r1
 801897a:	f7ff ffdb 	bl	8018934 <_ZSt9use_facetISt10moneypunctIcLb0EEERKT_RKSt6locale>
 801897e:	4605      	mov	r5, r0
 8018980:	f7ff fbd0 	bl	8018124 <_ZNKSt10moneypunctIcLb0EE13decimal_pointEv>
 8018984:	7460      	strb	r0, [r4, #17]
 8018986:	4628      	mov	r0, r5
 8018988:	f7ff fbcf 	bl	801812a <_ZNKSt10moneypunctIcLb0EE13thousands_sepEv>
 801898c:	74a0      	strb	r0, [r4, #18]
 801898e:	4628      	mov	r0, r5
 8018990:	f7ff fbea 	bl	8018168 <_ZNKSt10moneypunctIcLb0EE11frac_digitsEv>
 8018994:	4629      	mov	r1, r5
 8018996:	62e0      	str	r0, [r4, #44]	; 0x2c
 8018998:	4668      	mov	r0, sp
 801899a:	f7ff fbc9 	bl	8018130 <_ZNKSt10moneypunctIcLb0EE8groupingEv>
 801899e:	9b00      	ldr	r3, [sp, #0]
 80189a0:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 80189a4:	60e0      	str	r0, [r4, #12]
 80189a6:	f00b fb19 	bl	8023fdc <_Znaj>
 80189aa:	2300      	movs	r3, #0
 80189ac:	4601      	mov	r1, r0
 80189ae:	68e2      	ldr	r2, [r4, #12]
 80189b0:	4606      	mov	r6, r0
 80189b2:	4668      	mov	r0, sp
 80189b4:	f7f7 fa5c 	bl	800fe70 <_ZNKSs4copyEPcjj>
 80189b8:	68e3      	ldr	r3, [r4, #12]
 80189ba:	b12b      	cbz	r3, 80189c8 <_ZNSt18__moneypunct_cacheIcLb0EE8_M_cacheERKSt6locale+0x58>
 80189bc:	f996 3000 	ldrsb.w	r3, [r6]
 80189c0:	2b00      	cmp	r3, #0
 80189c2:	bfd4      	ite	le
 80189c4:	2300      	movle	r3, #0
 80189c6:	2301      	movgt	r3, #1
 80189c8:	4629      	mov	r1, r5
 80189ca:	7423      	strb	r3, [r4, #16]
 80189cc:	a801      	add	r0, sp, #4
 80189ce:	f7ff fbb6 	bl	801813e <_ZNKSt10moneypunctIcLb0EE11curr_symbolEv>
 80189d2:	9b01      	ldr	r3, [sp, #4]
 80189d4:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 80189d8:	61a0      	str	r0, [r4, #24]
 80189da:	f00b faff 	bl	8023fdc <_Znaj>
 80189de:	69a2      	ldr	r2, [r4, #24]
 80189e0:	4682      	mov	sl, r0
 80189e2:	2300      	movs	r3, #0
 80189e4:	4601      	mov	r1, r0
 80189e6:	a801      	add	r0, sp, #4
 80189e8:	f7f7 fa42 	bl	800fe70 <_ZNKSs4copyEPcjj>
 80189ec:	4629      	mov	r1, r5
 80189ee:	a802      	add	r0, sp, #8
 80189f0:	f7ff fbac 	bl	801814c <_ZNKSt10moneypunctIcLb0EE13positive_signEv>
 80189f4:	9b02      	ldr	r3, [sp, #8]
 80189f6:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 80189fa:	6220      	str	r0, [r4, #32]
 80189fc:	f00b faee 	bl	8023fdc <_Znaj>
 8018a00:	6a22      	ldr	r2, [r4, #32]
 8018a02:	4681      	mov	r9, r0
 8018a04:	2300      	movs	r3, #0
 8018a06:	4601      	mov	r1, r0
 8018a08:	a802      	add	r0, sp, #8
 8018a0a:	f7f7 fa31 	bl	800fe70 <_ZNKSs4copyEPcjj>
 8018a0e:	4629      	mov	r1, r5
 8018a10:	a803      	add	r0, sp, #12
 8018a12:	f7ff fba2 	bl	801815a <_ZNKSt10moneypunctIcLb0EE13negative_signEv>
 8018a16:	9b03      	ldr	r3, [sp, #12]
 8018a18:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 8018a1c:	62a0      	str	r0, [r4, #40]	; 0x28
 8018a1e:	f00b fadd 	bl	8023fdc <_Znaj>
 8018a22:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8018a24:	4601      	mov	r1, r0
 8018a26:	2300      	movs	r3, #0
 8018a28:	4607      	mov	r7, r0
 8018a2a:	a803      	add	r0, sp, #12
 8018a2c:	f7f7 fa20 	bl	800fe70 <_ZNKSs4copyEPcjj>
 8018a30:	4628      	mov	r0, r5
 8018a32:	f7ff fb9c 	bl	801816e <_ZNKSt10moneypunctIcLb0EE10pos_formatEv>
 8018a36:	6320      	str	r0, [r4, #48]	; 0x30
 8018a38:	4628      	mov	r0, r5
 8018a3a:	f7ff fb9d 	bl	8018178 <_ZNKSt10moneypunctIcLb0EE10neg_formatEv>
 8018a3e:	6360      	str	r0, [r4, #52]	; 0x34
 8018a40:	4640      	mov	r0, r8
 8018a42:	f7ff fdb3 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8018a46:	4b10      	ldr	r3, [pc, #64]	; (8018a88 <_ZNSt18__moneypunct_cacheIcLb0EE8_M_cacheERKSt6locale+0x118>)
 8018a48:	6819      	ldr	r1, [r3, #0]
 8018a4a:	f104 0338 	add.w	r3, r4, #56	; 0x38
 8018a4e:	f101 020b 	add.w	r2, r1, #11
 8018a52:	f7f8 fd87 	bl	8011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>
 8018a56:	2301      	movs	r3, #1
 8018a58:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8018a5c:	60a6      	str	r6, [r4, #8]
 8018a5e:	f8c4 a014 	str.w	sl, [r4, #20]
 8018a62:	f8c4 901c 	str.w	r9, [r4, #28]
 8018a66:	6267      	str	r7, [r4, #36]	; 0x24
 8018a68:	a803      	add	r0, sp, #12
 8018a6a:	f7f7 facb 	bl	8010004 <_ZNSsD1Ev>
 8018a6e:	a802      	add	r0, sp, #8
 8018a70:	f7f7 fac8 	bl	8010004 <_ZNSsD1Ev>
 8018a74:	a801      	add	r0, sp, #4
 8018a76:	f7f7 fac5 	bl	8010004 <_ZNSsD1Ev>
 8018a7a:	4668      	mov	r0, sp
 8018a7c:	f7f7 fac2 	bl	8010004 <_ZNSsD1Ev>
 8018a80:	b004      	add	sp, #16
 8018a82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018a86:	bf00      	nop
 8018a88:	2000003c 	.word	0x2000003c

08018a8c <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb0EEEclERKSt6locale.isra.0>:
 8018a8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018a90:	4605      	mov	r5, r0
 8018a92:	480f      	ldr	r0, [pc, #60]	; (8018ad0 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb0EEEclERKSt6locale.isra.0+0x44>)
 8018a94:	f7f3 fc9e 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 8018a98:	682b      	ldr	r3, [r5, #0]
 8018a9a:	68df      	ldr	r7, [r3, #12]
 8018a9c:	f857 8020 	ldr.w	r8, [r7, r0, lsl #2]
 8018aa0:	4604      	mov	r4, r0
 8018aa2:	f1b8 0f00 	cmp.w	r8, #0
 8018aa6:	d10f      	bne.n	8018ac8 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb0EEEclERKSt6locale.isra.0+0x3c>
 8018aa8:	2044      	movs	r0, #68	; 0x44
 8018aaa:	f7f3 fa49 	bl	800bf40 <_Znwj>
 8018aae:	4641      	mov	r1, r8
 8018ab0:	4606      	mov	r6, r0
 8018ab2:	f7ff fb03 	bl	80180bc <_ZNSt18__moneypunct_cacheIcLb0EEC1Ej>
 8018ab6:	4629      	mov	r1, r5
 8018ab8:	4630      	mov	r0, r6
 8018aba:	f7ff ff59 	bl	8018970 <_ZNSt18__moneypunct_cacheIcLb0EE8_M_cacheERKSt6locale>
 8018abe:	6828      	ldr	r0, [r5, #0]
 8018ac0:	4622      	mov	r2, r4
 8018ac2:	4631      	mov	r1, r6
 8018ac4:	f7f3 fd4c 	bl	800c560 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj>
 8018ac8:	f857 0024 	ldr.w	r0, [r7, r4, lsl #2]
 8018acc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018ad0:	20003cec 	.word	0x20003cec

08018ad4 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale>:
 8018ad4:	b510      	push	{r4, lr}
 8018ad6:	4604      	mov	r4, r0
 8018ad8:	480a      	ldr	r0, [pc, #40]	; (8018b04 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale+0x30>)
 8018ada:	f7f3 fc7b 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 8018ade:	6823      	ldr	r3, [r4, #0]
 8018ae0:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 8018ae4:	4283      	cmp	r3, r0
 8018ae6:	d902      	bls.n	8018aee <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale+0x1a>
 8018ae8:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8018aec:	b908      	cbnz	r0, 8018af2 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale+0x1e>
 8018aee:	f7fe fe9a 	bl	8017826 <_ZSt16__throw_bad_castv>
 8018af2:	4a05      	ldr	r2, [pc, #20]	; (8018b08 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale+0x34>)
 8018af4:	4905      	ldr	r1, [pc, #20]	; (8018b0c <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale+0x38>)
 8018af6:	2300      	movs	r3, #0
 8018af8:	f00b f9ec 	bl	8023ed4 <__dynamic_cast>
 8018afc:	b908      	cbnz	r0, 8018b02 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale+0x2e>
 8018afe:	f00b fa42 	bl	8023f86 <__cxa_bad_cast>
 8018b02:	bd10      	pop	{r4, pc}
 8018b04:	20003cd0 	.word	0x20003cd0
 8018b08:	08030b28 	.word	0x08030b28
 8018b0c:	0802e934 	.word	0x0802e934

08018b10 <_ZSt9has_facetISt5ctypeIcEEbRKSt6locale>:
 8018b10:	b510      	push	{r4, lr}
 8018b12:	4604      	mov	r4, r0
 8018b14:	480a      	ldr	r0, [pc, #40]	; (8018b40 <_ZSt9has_facetISt5ctypeIcEEbRKSt6locale+0x30>)
 8018b16:	f7f3 fc5d 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 8018b1a:	6823      	ldr	r3, [r4, #0]
 8018b1c:	689a      	ldr	r2, [r3, #8]
 8018b1e:	4282      	cmp	r2, r0
 8018b20:	d90c      	bls.n	8018b3c <_ZSt9has_facetISt5ctypeIcEEbRKSt6locale+0x2c>
 8018b22:	685b      	ldr	r3, [r3, #4]
 8018b24:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8018b28:	b138      	cbz	r0, 8018b3a <_ZSt9has_facetISt5ctypeIcEEbRKSt6locale+0x2a>
 8018b2a:	4a06      	ldr	r2, [pc, #24]	; (8018b44 <_ZSt9has_facetISt5ctypeIcEEbRKSt6locale+0x34>)
 8018b2c:	4906      	ldr	r1, [pc, #24]	; (8018b48 <_ZSt9has_facetISt5ctypeIcEEbRKSt6locale+0x38>)
 8018b2e:	2300      	movs	r3, #0
 8018b30:	f00b f9d0 	bl	8023ed4 <__dynamic_cast>
 8018b34:	3800      	subs	r0, #0
 8018b36:	bf18      	it	ne
 8018b38:	2001      	movne	r0, #1
 8018b3a:	bd10      	pop	{r4, pc}
 8018b3c:	2000      	movs	r0, #0
 8018b3e:	e7fc      	b.n	8018b3a <_ZSt9has_facetISt5ctypeIcEEbRKSt6locale+0x2a>
 8018b40:	20003c04 	.word	0x20003c04
 8018b44:	0802f6f0 	.word	0x0802f6f0
 8018b48:	0802e934 	.word	0x0802e934

08018b4c <_ZSt9has_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale>:
 8018b4c:	b510      	push	{r4, lr}
 8018b4e:	4604      	mov	r4, r0
 8018b50:	480a      	ldr	r0, [pc, #40]	; (8018b7c <_ZSt9has_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale+0x30>)
 8018b52:	f7f3 fc3f 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 8018b56:	6823      	ldr	r3, [r4, #0]
 8018b58:	689a      	ldr	r2, [r3, #8]
 8018b5a:	4282      	cmp	r2, r0
 8018b5c:	d90c      	bls.n	8018b78 <_ZSt9has_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale+0x2c>
 8018b5e:	685b      	ldr	r3, [r3, #4]
 8018b60:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8018b64:	b138      	cbz	r0, 8018b76 <_ZSt9has_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale+0x2a>
 8018b66:	4a06      	ldr	r2, [pc, #24]	; (8018b80 <_ZSt9has_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale+0x34>)
 8018b68:	4906      	ldr	r1, [pc, #24]	; (8018b84 <_ZSt9has_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale+0x38>)
 8018b6a:	2300      	movs	r3, #0
 8018b6c:	f00b f9b2 	bl	8023ed4 <__dynamic_cast>
 8018b70:	3800      	subs	r0, #0
 8018b72:	bf18      	it	ne
 8018b74:	2001      	movne	r0, #1
 8018b76:	bd10      	pop	{r4, pc}
 8018b78:	2000      	movs	r0, #0
 8018b7a:	e7fc      	b.n	8018b76 <_ZSt9has_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale+0x2a>
 8018b7c:	20003cd4 	.word	0x20003cd4
 8018b80:	08030b9c 	.word	0x08030b9c
 8018b84:	0802e934 	.word	0x0802e934

08018b88 <_ZSt9has_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale>:
 8018b88:	b510      	push	{r4, lr}
 8018b8a:	4604      	mov	r4, r0
 8018b8c:	480a      	ldr	r0, [pc, #40]	; (8018bb8 <_ZSt9has_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale+0x30>)
 8018b8e:	f7f3 fc21 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 8018b92:	6823      	ldr	r3, [r4, #0]
 8018b94:	689a      	ldr	r2, [r3, #8]
 8018b96:	4282      	cmp	r2, r0
 8018b98:	d90c      	bls.n	8018bb4 <_ZSt9has_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale+0x2c>
 8018b9a:	685b      	ldr	r3, [r3, #4]
 8018b9c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8018ba0:	b138      	cbz	r0, 8018bb2 <_ZSt9has_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale+0x2a>
 8018ba2:	4a06      	ldr	r2, [pc, #24]	; (8018bbc <_ZSt9has_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale+0x34>)
 8018ba4:	4906      	ldr	r1, [pc, #24]	; (8018bc0 <_ZSt9has_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale+0x38>)
 8018ba6:	2300      	movs	r3, #0
 8018ba8:	f00b f994 	bl	8023ed4 <__dynamic_cast>
 8018bac:	3800      	subs	r0, #0
 8018bae:	bf18      	it	ne
 8018bb0:	2001      	movne	r0, #1
 8018bb2:	bd10      	pop	{r4, pc}
 8018bb4:	2000      	movs	r0, #0
 8018bb6:	e7fc      	b.n	8018bb2 <_ZSt9has_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEbRKSt6locale+0x2a>
 8018bb8:	20003cd8 	.word	0x20003cd8
 8018bbc:	08030b90 	.word	0x08030b90
 8018bc0:	0802e934 	.word	0x0802e934

08018bc4 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_>:
 8018bc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018bc8:	e9dd 6407 	ldrd	r6, r4, [sp, #28]
 8018bcc:	2500      	movs	r5, #0
 8018bce:	462f      	mov	r7, r5
 8018bd0:	f103 3cff 	add.w	ip, r3, #4294967295	; 0xffffffff
 8018bd4:	f812 e007 	ldrb.w	lr, [r2, r7]
 8018bd8:	eba4 0806 	sub.w	r8, r4, r6
 8018bdc:	45f0      	cmp	r8, lr
 8018bde:	eb02 0307 	add.w	r3, r2, r7
 8018be2:	dc07      	bgt.n	8018bf4 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x30>
 8018be4:	1e47      	subs	r7, r0, #1
 8018be6:	42a6      	cmp	r6, r4
 8018be8:	d010      	beq.n	8018c0c <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x48>
 8018bea:	f816 cb01 	ldrb.w	ip, [r6], #1
 8018bee:	f807 cf01 	strb.w	ip, [r7, #1]!
 8018bf2:	e7f8      	b.n	8018be6 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x22>
 8018bf4:	fa4f f98e 	sxtb.w	r9, lr
 8018bf8:	f1b9 0f00 	cmp.w	r9, #0
 8018bfc:	ddf2      	ble.n	8018be4 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x20>
 8018bfe:	45bc      	cmp	ip, r7
 8018c00:	eba4 040e 	sub.w	r4, r4, lr
 8018c04:	bf8c      	ite	hi
 8018c06:	3701      	addhi	r7, #1
 8018c08:	3501      	addls	r5, #1
 8018c0a:	e7e3      	b.n	8018bd4 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x10>
 8018c0c:	4440      	add	r0, r8
 8018c0e:	3d01      	subs	r5, #1
 8018c10:	d30e      	bcc.n	8018c30 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x6c>
 8018c12:	7001      	strb	r1, [r0, #0]
 8018c14:	781e      	ldrb	r6, [r3, #0]
 8018c16:	4607      	mov	r7, r0
 8018c18:	eb04 0e06 	add.w	lr, r4, r6
 8018c1c:	4574      	cmp	r4, lr
 8018c1e:	d102      	bne.n	8018c26 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x62>
 8018c20:	3601      	adds	r6, #1
 8018c22:	4430      	add	r0, r6
 8018c24:	e7f3      	b.n	8018c0e <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x4a>
 8018c26:	f814 cb01 	ldrb.w	ip, [r4], #1
 8018c2a:	f807 cf01 	strb.w	ip, [r7, #1]!
 8018c2e:	e7f5      	b.n	8018c1c <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x58>
 8018c30:	4293      	cmp	r3, r2
 8018c32:	d00f      	beq.n	8018c54 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x90>
 8018c34:	7001      	strb	r1, [r0, #0]
 8018c36:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 8018c3a:	4606      	mov	r6, r0
 8018c3c:	eb04 0c05 	add.w	ip, r4, r5
 8018c40:	4564      	cmp	r4, ip
 8018c42:	d102      	bne.n	8018c4a <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x86>
 8018c44:	3501      	adds	r5, #1
 8018c46:	4428      	add	r0, r5
 8018c48:	e7f2      	b.n	8018c30 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x6c>
 8018c4a:	f814 7b01 	ldrb.w	r7, [r4], #1
 8018c4e:	f806 7f01 	strb.w	r7, [r6, #1]!
 8018c52:	e7f5      	b.n	8018c40 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_+0x7c>
 8018c54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08018c58 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE14_M_group_floatEPKcjcS6_PcS7_Ri>:
 8018c58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8018c5a:	e9dd 7408 	ldrd	r7, r4, [sp, #32]
 8018c5e:	4608      	mov	r0, r1
 8018c60:	4619      	mov	r1, r3
 8018c62:	e9dd 360a 	ldrd	r3, r6, [sp, #40]	; 0x28
 8018c66:	b1bf      	cbz	r7, 8018c98 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE14_M_group_floatEPKcjcS6_PcS7_Ri+0x40>
 8018c68:	1afd      	subs	r5, r7, r3
 8018c6a:	eb03 0c05 	add.w	ip, r3, r5
 8018c6e:	e9cd 3c00 	strd	r3, ip, [sp]
 8018c72:	4613      	mov	r3, r2
 8018c74:	4602      	mov	r2, r0
 8018c76:	4620      	mov	r0, r4
 8018c78:	f7ff ffa4 	bl	8018bc4 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_>
 8018c7c:	1b04      	subs	r4, r0, r4
 8018c7e:	b147      	cbz	r7, 8018c92 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE14_M_group_floatEPKcjcS6_PcS7_Ri+0x3a>
 8018c80:	6832      	ldr	r2, [r6, #0]
 8018c82:	1b52      	subs	r2, r2, r5
 8018c84:	d002      	beq.n	8018c8c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE14_M_group_floatEPKcjcS6_PcS7_Ri+0x34>
 8018c86:	4639      	mov	r1, r7
 8018c88:	f00d f93a 	bl	8025f00 <memcpy>
 8018c8c:	6833      	ldr	r3, [r6, #0]
 8018c8e:	1b5b      	subs	r3, r3, r5
 8018c90:	441c      	add	r4, r3
 8018c92:	6034      	str	r4, [r6, #0]
 8018c94:	b003      	add	sp, #12
 8018c96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018c98:	6835      	ldr	r5, [r6, #0]
 8018c9a:	e7e6      	b.n	8018c6a <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE14_M_group_floatEPKcjcS6_PcS7_Ri+0x12>

08018c9c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE12_M_group_intEPKcjcRSt8ios_basePcS9_Ri>:
 8018c9c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8018c9e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018ca0:	e9dd 5007 	ldrd	r5, r0, [sp, #28]
 8018ca4:	460e      	mov	r6, r1
 8018ca6:	4619      	mov	r1, r3
 8018ca8:	6823      	ldr	r3, [r4, #0]
 8018caa:	4403      	add	r3, r0
 8018cac:	e9cd 0300 	strd	r0, r3, [sp]
 8018cb0:	4613      	mov	r3, r2
 8018cb2:	4628      	mov	r0, r5
 8018cb4:	4632      	mov	r2, r6
 8018cb6:	f7ff ff85 	bl	8018bc4 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_>
 8018cba:	1b40      	subs	r0, r0, r5
 8018cbc:	6020      	str	r0, [r4, #0]
 8018cbe:	b002      	add	sp, #8
 8018cc0:	bd70      	pop	{r4, r5, r6, pc}

08018cc2 <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii>:
 8018cc2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018cc6:	461d      	mov	r5, r3
 8018cc8:	e9dd 3608 	ldrd	r3, r6, [sp, #32]
 8018ccc:	eba3 0806 	sub.w	r8, r3, r6
 8018cd0:	68c3      	ldr	r3, [r0, #12]
 8018cd2:	f003 03b0 	and.w	r3, r3, #176	; 0xb0
 8018cd6:	2b20      	cmp	r3, #32
 8018cd8:	4689      	mov	r9, r1
 8018cda:	4614      	mov	r4, r2
 8018cdc:	d10c      	bne.n	8018cf8 <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0x36>
 8018cde:	b126      	cbz	r6, 8018cea <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0x28>
 8018ce0:	4632      	mov	r2, r6
 8018ce2:	4629      	mov	r1, r5
 8018ce4:	4620      	mov	r0, r4
 8018ce6:	f00d f90b 	bl	8025f00 <memcpy>
 8018cea:	464a      	mov	r2, r9
 8018cec:	4641      	mov	r1, r8
 8018cee:	19a0      	adds	r0, r4, r6
 8018cf0:	f7ff f9dc 	bl	80180ac <_ZNSt11char_traitsIcE6assignEPcjc>
 8018cf4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018cf8:	2b10      	cmp	r3, #16
 8018cfa:	d00e      	beq.n	8018d1a <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0x58>
 8018cfc:	2700      	movs	r7, #0
 8018cfe:	464a      	mov	r2, r9
 8018d00:	4641      	mov	r1, r8
 8018d02:	4620      	mov	r0, r4
 8018d04:	f7ff f9d2 	bl	80180ac <_ZNSt11char_traitsIcE6assignEPcjc>
 8018d08:	1bf2      	subs	r2, r6, r7
 8018d0a:	d0f3      	beq.n	8018cf4 <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0x32>
 8018d0c:	19e9      	adds	r1, r5, r7
 8018d0e:	eb04 0008 	add.w	r0, r4, r8
 8018d12:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018d16:	f00d b8f3 	b.w	8025f00 <memcpy>
 8018d1a:	306c      	adds	r0, #108	; 0x6c
 8018d1c:	f7ff fc46 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8018d20:	212d      	movs	r1, #45	; 0x2d
 8018d22:	4607      	mov	r7, r0
 8018d24:	f7f8 fc0d 	bl	8011542 <_ZNKSt5ctypeIcE5widenEc>
 8018d28:	782b      	ldrb	r3, [r5, #0]
 8018d2a:	4283      	cmp	r3, r0
 8018d2c:	d104      	bne.n	8018d38 <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0x76>
 8018d2e:	782b      	ldrb	r3, [r5, #0]
 8018d30:	f804 3b01 	strb.w	r3, [r4], #1
 8018d34:	2701      	movs	r7, #1
 8018d36:	e7e2      	b.n	8018cfe <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0x3c>
 8018d38:	212b      	movs	r1, #43	; 0x2b
 8018d3a:	4638      	mov	r0, r7
 8018d3c:	f7f8 fc01 	bl	8011542 <_ZNKSt5ctypeIcE5widenEc>
 8018d40:	782b      	ldrb	r3, [r5, #0]
 8018d42:	4283      	cmp	r3, r0
 8018d44:	d0f3      	beq.n	8018d2e <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0x6c>
 8018d46:	2130      	movs	r1, #48	; 0x30
 8018d48:	4638      	mov	r0, r7
 8018d4a:	f7f8 fbfa 	bl	8011542 <_ZNKSt5ctypeIcE5widenEc>
 8018d4e:	782b      	ldrb	r3, [r5, #0]
 8018d50:	4283      	cmp	r3, r0
 8018d52:	d1d3      	bne.n	8018cfc <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0x3a>
 8018d54:	2e01      	cmp	r6, #1
 8018d56:	ddd1      	ble.n	8018cfc <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0x3a>
 8018d58:	2178      	movs	r1, #120	; 0x78
 8018d5a:	4638      	mov	r0, r7
 8018d5c:	f7f8 fbf1 	bl	8011542 <_ZNKSt5ctypeIcE5widenEc>
 8018d60:	786b      	ldrb	r3, [r5, #1]
 8018d62:	4283      	cmp	r3, r0
 8018d64:	d106      	bne.n	8018d74 <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0xb2>
 8018d66:	782b      	ldrb	r3, [r5, #0]
 8018d68:	7023      	strb	r3, [r4, #0]
 8018d6a:	786b      	ldrb	r3, [r5, #1]
 8018d6c:	7063      	strb	r3, [r4, #1]
 8018d6e:	2702      	movs	r7, #2
 8018d70:	3402      	adds	r4, #2
 8018d72:	e7c4      	b.n	8018cfe <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0x3c>
 8018d74:	2158      	movs	r1, #88	; 0x58
 8018d76:	4638      	mov	r0, r7
 8018d78:	f7f8 fbe3 	bl	8011542 <_ZNKSt5ctypeIcE5widenEc>
 8018d7c:	786b      	ldrb	r3, [r5, #1]
 8018d7e:	4283      	cmp	r3, r0
 8018d80:	d1bc      	bne.n	8018cfc <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0x3a>
 8018d82:	e7f0      	b.n	8018d66 <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii+0xa4>

08018d84 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6_M_padEciRSt8ios_basePcPKcRi>:
 8018d84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8018d86:	9d08      	ldr	r5, [sp, #32]
 8018d88:	4618      	mov	r0, r3
 8018d8a:	682b      	ldr	r3, [r5, #0]
 8018d8c:	4614      	mov	r4, r2
 8018d8e:	e9cd 2300 	strd	r2, r3, [sp]
 8018d92:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8018d96:	f7ff ff94 	bl	8018cc2 <_ZNSt5__padIcSt11char_traitsIcEE6_S_padERSt8ios_basecPcPKcii>
 8018d9a:	602c      	str	r4, [r5, #0]
 8018d9c:	b003      	add	sp, #12
 8018d9e:	bd30      	pop	{r4, r5, pc}

08018da0 <_ZSt13__int_to_charIcmEiPT_T0_PKS0_St13_Ios_Fmtflagsb>:
 8018da0:	b570      	push	{r4, r5, r6, lr}
 8018da2:	f89d 4010 	ldrb.w	r4, [sp, #16]
 8018da6:	b17c      	cbz	r4, 8018dc8 <_ZSt13__int_to_charIcmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x28>
 8018da8:	4603      	mov	r3, r0
 8018daa:	260a      	movs	r6, #10
 8018dac:	fbb1 f5f6 	udiv	r5, r1, r6
 8018db0:	fb06 1415 	mls	r4, r6, r5, r1
 8018db4:	4414      	add	r4, r2
 8018db6:	7924      	ldrb	r4, [r4, #4]
 8018db8:	f803 4d01 	strb.w	r4, [r3, #-1]!
 8018dbc:	460c      	mov	r4, r1
 8018dbe:	2c09      	cmp	r4, #9
 8018dc0:	4629      	mov	r1, r5
 8018dc2:	d8f3      	bhi.n	8018dac <_ZSt13__int_to_charIcmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0xc>
 8018dc4:	1ac0      	subs	r0, r0, r3
 8018dc6:	bd70      	pop	{r4, r5, r6, pc}
 8018dc8:	f003 044a 	and.w	r4, r3, #74	; 0x4a
 8018dcc:	2c40      	cmp	r4, #64	; 0x40
 8018dce:	d109      	bne.n	8018de4 <_ZSt13__int_to_charIcmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x44>
 8018dd0:	4603      	mov	r3, r0
 8018dd2:	f001 0407 	and.w	r4, r1, #7
 8018dd6:	4414      	add	r4, r2
 8018dd8:	08c9      	lsrs	r1, r1, #3
 8018dda:	7924      	ldrb	r4, [r4, #4]
 8018ddc:	f803 4d01 	strb.w	r4, [r3, #-1]!
 8018de0:	d1f7      	bne.n	8018dd2 <_ZSt13__int_to_charIcmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x32>
 8018de2:	e7ef      	b.n	8018dc4 <_ZSt13__int_to_charIcmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x24>
 8018de4:	f413 4f80 	tst.w	r3, #16384	; 0x4000
 8018de8:	bf14      	ite	ne
 8018dea:	2414      	movne	r4, #20
 8018dec:	2404      	moveq	r4, #4
 8018dee:	4603      	mov	r3, r0
 8018df0:	4422      	add	r2, r4
 8018df2:	f001 040f 	and.w	r4, r1, #15
 8018df6:	0909      	lsrs	r1, r1, #4
 8018df8:	5d14      	ldrb	r4, [r2, r4]
 8018dfa:	f803 4d01 	strb.w	r4, [r3, #-1]!
 8018dfe:	d1f8      	bne.n	8018df2 <_ZSt13__int_to_charIcmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x52>
 8018e00:	e7e0      	b.n	8018dc4 <_ZSt13__int_to_charIcmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x24>

08018e02 <_ZSt13__int_to_charIcyEiPT_T0_PKS0_St13_Ios_Fmtflagsb>:
 8018e02:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018e06:	4614      	mov	r4, r2
 8018e08:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 8018e0c:	461d      	mov	r5, r3
 8018e0e:	4607      	mov	r7, r0
 8018e10:	e9dd 8308 	ldrd	r8, r3, [sp, #32]
 8018e14:	b1e2      	cbz	r2, 8018e50 <_ZSt13__int_to_charIcyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x4e>
 8018e16:	4606      	mov	r6, r0
 8018e18:	4620      	mov	r0, r4
 8018e1a:	4629      	mov	r1, r5
 8018e1c:	220a      	movs	r2, #10
 8018e1e:	2300      	movs	r3, #0
 8018e20:	f7e7 ff3c 	bl	8000c9c <__aeabi_uldivmod>
 8018e24:	4442      	add	r2, r8
 8018e26:	4620      	mov	r0, r4
 8018e28:	7913      	ldrb	r3, [r2, #4]
 8018e2a:	f806 3d01 	strb.w	r3, [r6, #-1]!
 8018e2e:	4629      	mov	r1, r5
 8018e30:	2300      	movs	r3, #0
 8018e32:	220a      	movs	r2, #10
 8018e34:	f7e7 ff32 	bl	8000c9c <__aeabi_uldivmod>
 8018e38:	46a2      	mov	sl, r4
 8018e3a:	46a9      	mov	r9, r5
 8018e3c:	f1ba 0f0a 	cmp.w	sl, #10
 8018e40:	f179 0300 	sbcs.w	r3, r9, #0
 8018e44:	4604      	mov	r4, r0
 8018e46:	460d      	mov	r5, r1
 8018e48:	d2e6      	bcs.n	8018e18 <_ZSt13__int_to_charIcyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x16>
 8018e4a:	1bb8      	subs	r0, r7, r6
 8018e4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018e50:	f003 024a 	and.w	r2, r3, #74	; 0x4a
 8018e54:	2a40      	cmp	r2, #64	; 0x40
 8018e56:	d10e      	bne.n	8018e76 <_ZSt13__int_to_charIcyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x74>
 8018e58:	4606      	mov	r6, r0
 8018e5a:	f004 0307 	and.w	r3, r4, #7
 8018e5e:	4443      	add	r3, r8
 8018e60:	08e4      	lsrs	r4, r4, #3
 8018e62:	791b      	ldrb	r3, [r3, #4]
 8018e64:	f806 3d01 	strb.w	r3, [r6, #-1]!
 8018e68:	ea44 7445 	orr.w	r4, r4, r5, lsl #29
 8018e6c:	08ed      	lsrs	r5, r5, #3
 8018e6e:	ea54 0305 	orrs.w	r3, r4, r5
 8018e72:	d1f2      	bne.n	8018e5a <_ZSt13__int_to_charIcyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x58>
 8018e74:	e7e9      	b.n	8018e4a <_ZSt13__int_to_charIcyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x48>
 8018e76:	f413 4f80 	tst.w	r3, #16384	; 0x4000
 8018e7a:	bf14      	ite	ne
 8018e7c:	2314      	movne	r3, #20
 8018e7e:	2304      	moveq	r3, #4
 8018e80:	4606      	mov	r6, r0
 8018e82:	4443      	add	r3, r8
 8018e84:	f004 020f 	and.w	r2, r4, #15
 8018e88:	0924      	lsrs	r4, r4, #4
 8018e8a:	5c9a      	ldrb	r2, [r3, r2]
 8018e8c:	f806 2d01 	strb.w	r2, [r6, #-1]!
 8018e90:	ea44 7405 	orr.w	r4, r4, r5, lsl #28
 8018e94:	092d      	lsrs	r5, r5, #4
 8018e96:	ea54 0205 	orrs.w	r2, r4, r5
 8018e9a:	d1f3      	bne.n	8018e84 <_ZSt13__int_to_charIcyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x82>
 8018e9c:	e7d5      	b.n	8018e4a <_ZSt13__int_to_charIcyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x48>

08018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>:
 8018e9e:	b510      	push	{r4, lr}
 8018ea0:	4604      	mov	r4, r0
 8018ea2:	6800      	ldr	r0, [r0, #0]
 8018ea4:	f7ff f8c0 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 8018ea8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8018eac:	6063      	str	r3, [r4, #4]
 8018eae:	4620      	mov	r0, r4
 8018eb0:	bd10      	pop	{r4, pc}
	...

08018eb4 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs>:
 8018eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018eb8:	b08f      	sub	sp, #60	; 0x3c
 8018eba:	a906      	add	r1, sp, #24
 8018ebc:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8018ebe:	9005      	str	r0, [sp, #20]
 8018ec0:	f107 046c 	add.w	r4, r7, #108	; 0x6c
 8018ec4:	4620      	mov	r0, r4
 8018ec6:	e881 000c 	stmia.w	r1, {r2, r3}
 8018eca:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 8018ece:	f7ff fb6d 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8018ed2:	4606      	mov	r6, r0
 8018ed4:	4620      	mov	r0, r4
 8018ed6:	f7ff fd09 	bl	80188ec <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb1EEEclERKSt6locale.isra.0>
 8018eda:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8018edc:	681d      	ldr	r5, [r3, #0]
 8018ede:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8018ee2:	782a      	ldrb	r2, [r5, #0]
 8018ee4:	429a      	cmp	r2, r3
 8018ee6:	4604      	mov	r4, r0
 8018ee8:	f855 2c0c 	ldr.w	r2, [r5, #-12]
 8018eec:	f000 8083 	beq.w	8018ff6 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x142>
 8018ef0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8018ef2:	9309      	str	r3, [sp, #36]	; 0x24
 8018ef4:	f8d0 9020 	ldr.w	r9, [r0, #32]
 8018ef8:	69c3      	ldr	r3, [r0, #28]
 8018efa:	9303      	str	r3, [sp, #12]
 8018efc:	442a      	add	r2, r5
 8018efe:	462b      	mov	r3, r5
 8018f00:	429a      	cmp	r2, r3
 8018f02:	469a      	mov	sl, r3
 8018f04:	d907      	bls.n	8018f16 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x62>
 8018f06:	f89a 0000 	ldrb.w	r0, [sl]
 8018f0a:	69b1      	ldr	r1, [r6, #24]
 8018f0c:	5c09      	ldrb	r1, [r1, r0]
 8018f0e:	0749      	lsls	r1, r1, #29
 8018f10:	f103 0301 	add.w	r3, r3, #1
 8018f14:	d4f4      	bmi.n	8018f00 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x4c>
 8018f16:	ebba 0a05 	subs.w	sl, sl, r5
 8018f1a:	f000 80c2 	beq.w	80190a2 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x1ee>
 8018f1e:	4b7a      	ldr	r3, [pc, #488]	; (8019108 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x254>)
 8018f20:	930a      	str	r3, [sp, #40]	; 0x28
 8018f22:	ea4f 014a 	mov.w	r1, sl, lsl #1
 8018f26:	a80a      	add	r0, sp, #40	; 0x28
 8018f28:	f7f7 f9b3 	bl	8010292 <_ZNSs7reserveEj>
 8018f2c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8018f2e:	ebaa 0603 	sub.w	r6, sl, r3
 8018f32:	2e00      	cmp	r6, #0
 8018f34:	dd27      	ble.n	8018f86 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0xd2>
 8018f36:	ea36 0623 	bics.w	r6, r6, r3, asr #32
 8018f3a:	bf28      	it	cs
 8018f3c:	4656      	movcs	r6, sl
 8018f3e:	68e3      	ldr	r3, [r4, #12]
 8018f40:	2b00      	cmp	r3, #0
 8018f42:	d063      	beq.n	801900c <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x158>
 8018f44:	2100      	movs	r1, #0
 8018f46:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018f48:	9100      	str	r1, [sp, #0]
 8018f4a:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 8018f4e:	0073      	lsls	r3, r6, #1
 8018f50:	a80a      	add	r0, sp, #40	; 0x28
 8018f52:	f7f7 f901 	bl	8010158 <_ZNSs14_M_replace_auxEjjjc>
 8018f56:	a80a      	add	r0, sp, #40	; 0x28
 8018f58:	f7f7 f8d6 	bl	8010108 <_ZNSs7_M_leakEv>
 8018f5c:	19ab      	adds	r3, r5, r6
 8018f5e:	7ca1      	ldrb	r1, [r4, #18]
 8018f60:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018f62:	e9cd 5300 	strd	r5, r3, [sp]
 8018f66:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
 8018f6a:	f7ff fe2b 	bl	8018bc4 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_>
 8018f6e:	4683      	mov	fp, r0
 8018f70:	a80a      	add	r0, sp, #40	; 0x28
 8018f72:	f7f7 f8c9 	bl	8010108 <_ZNSs7_M_leakEv>
 8018f76:	990a      	ldr	r1, [sp, #40]	; 0x28
 8018f78:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8018f7c:	ebab 0101 	sub.w	r1, fp, r1
 8018f80:	a80a      	add	r0, sp, #40	; 0x28
 8018f82:	f7ff f87b 	bl	801807c <_ZNSs5eraseEjj.isra.0>
 8018f86:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8018f88:	2b00      	cmp	r3, #0
 8018f8a:	dd0a      	ble.n	8018fa2 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0xee>
 8018f8c:	7c61      	ldrb	r1, [r4, #17]
 8018f8e:	a80a      	add	r0, sp, #40	; 0x28
 8018f90:	f7f7 fa4d 	bl	801042e <_ZNSs9push_backEc>
 8018f94:	2e00      	cmp	r6, #0
 8018f96:	db3f      	blt.n	8019018 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x164>
 8018f98:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8018f9a:	19a9      	adds	r1, r5, r6
 8018f9c:	a80a      	add	r0, sp, #40	; 0x28
 8018f9e:	f7f7 f9bd 	bl	801031c <_ZNSs6appendEPKcj>
 8018fa2:	68fb      	ldr	r3, [r7, #12]
 8018fa4:	f003 02b0 	and.w	r2, r3, #176	; 0xb0
 8018fa8:	9204      	str	r2, [sp, #16]
 8018faa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018fac:	f413 7500 	ands.w	r5, r3, #512	; 0x200
 8018fb0:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 8018fb4:	bf18      	it	ne
 8018fb6:	69a5      	ldrne	r5, [r4, #24]
 8018fb8:	4b53      	ldr	r3, [pc, #332]	; (8019108 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x254>)
 8018fba:	930b      	str	r3, [sp, #44]	; 0x2c
 8018fbc:	444a      	add	r2, r9
 8018fbe:	4415      	add	r5, r2
 8018fc0:	0069      	lsls	r1, r5, #1
 8018fc2:	a80b      	add	r0, sp, #44	; 0x2c
 8018fc4:	f7f7 f965 	bl	8010292 <_ZNSs7reserveEj>
 8018fc8:	9b04      	ldr	r3, [sp, #16]
 8018fca:	68be      	ldr	r6, [r7, #8]
 8018fcc:	2b10      	cmp	r3, #16
 8018fce:	d12c      	bne.n	801902a <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x176>
 8018fd0:	42b5      	cmp	r5, r6
 8018fd2:	bf2c      	ite	cs
 8018fd4:	f04f 0b00 	movcs.w	fp, #0
 8018fd8:	f04f 0b01 	movcc.w	fp, #1
 8018fdc:	f04f 0a00 	mov.w	sl, #0
 8018fe0:	1b75      	subs	r5, r6, r5
 8018fe2:	ab09      	add	r3, sp, #36	; 0x24
 8018fe4:	f813 300a 	ldrb.w	r3, [r3, sl]
 8018fe8:	2b04      	cmp	r3, #4
 8018fea:	d829      	bhi.n	8019040 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x18c>
 8018fec:	e8df f003 	tbb	[pc, r3]
 8018ff0:	6420727d 	.word	0x6420727d
 8018ff4:	6d          	.byte	0x6d
 8018ff5:	00          	.byte	0x00
 8018ff6:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8018ff8:	9309      	str	r3, [sp, #36]	; 0x24
 8018ffa:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8018ffc:	f8d0 9028 	ldr.w	r9, [r0, #40]	; 0x28
 8019000:	9303      	str	r3, [sp, #12]
 8019002:	2a00      	cmp	r2, #0
 8019004:	f43f af7a 	beq.w	8018efc <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x48>
 8019008:	3501      	adds	r5, #1
 801900a:	e777      	b.n	8018efc <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x48>
 801900c:	4632      	mov	r2, r6
 801900e:	4629      	mov	r1, r5
 8019010:	a80a      	add	r0, sp, #40	; 0x28
 8019012:	f7f7 f8e1 	bl	80101d8 <_ZNSs6assignEPKcj>
 8019016:	e7b6      	b.n	8018f86 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0xd2>
 8019018:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 801901c:	4271      	negs	r1, r6
 801901e:	a80a      	add	r0, sp, #40	; 0x28
 8019020:	f7f7 f9b6 	bl	8010390 <_ZNSs6appendEjc>
 8019024:	4652      	mov	r2, sl
 8019026:	4629      	mov	r1, r5
 8019028:	e7b8      	b.n	8018f9c <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0xe8>
 801902a:	f04f 0b00 	mov.w	fp, #0
 801902e:	e7d5      	b.n	8018fdc <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x128>
 8019030:	68fb      	ldr	r3, [r7, #12]
 8019032:	059b      	lsls	r3, r3, #22
 8019034:	d504      	bpl.n	8019040 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x18c>
 8019036:	e9d4 1205 	ldrd	r1, r2, [r4, #20]
 801903a:	a80b      	add	r0, sp, #44	; 0x2c
 801903c:	f7f7 f96e 	bl	801031c <_ZNSs6appendEPKcj>
 8019040:	f10a 0a01 	add.w	sl, sl, #1
 8019044:	f1ba 0f04 	cmp.w	sl, #4
 8019048:	d1cb      	bne.n	8018fe2 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x12e>
 801904a:	f1b9 0f01 	cmp.w	r9, #1
 801904e:	d906      	bls.n	801905e <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x1aa>
 8019050:	9903      	ldr	r1, [sp, #12]
 8019052:	f109 32ff 	add.w	r2, r9, #4294967295	; 0xffffffff
 8019056:	3101      	adds	r1, #1
 8019058:	a80b      	add	r0, sp, #44	; 0x2c
 801905a:	f7f7 f95f 	bl	801031c <_ZNSs6appendEPKcj>
 801905e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019060:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 8019064:	429e      	cmp	r6, r3
 8019066:	d94c      	bls.n	8019102 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x24e>
 8019068:	9a04      	ldr	r2, [sp, #16]
 801906a:	2a20      	cmp	r2, #32
 801906c:	eba6 0303 	sub.w	r3, r6, r3
 8019070:	d13f      	bne.n	80190f2 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x23e>
 8019072:	4642      	mov	r2, r8
 8019074:	4619      	mov	r1, r3
 8019076:	a80b      	add	r0, sp, #44	; 0x2c
 8019078:	f7f7 f98a 	bl	8010390 <_ZNSs6appendEjc>
 801907c:	ac0c      	add	r4, sp, #48	; 0x30
 801907e:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8019082:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019084:	9600      	str	r6, [sp, #0]
 8019086:	4620      	mov	r0, r4
 8019088:	f7f8 fc40 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 801908c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8019090:	9006      	str	r0, [sp, #24]
 8019092:	a80b      	add	r0, sp, #44	; 0x2c
 8019094:	f88d 101c 	strb.w	r1, [sp, #28]
 8019098:	f7f6 ffb4 	bl	8010004 <_ZNSsD1Ev>
 801909c:	a80a      	add	r0, sp, #40	; 0x28
 801909e:	f7f6 ffb1 	bl	8010004 <_ZNSsD1Ev>
 80190a2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80190a6:	2300      	movs	r3, #0
 80190a8:	60bb      	str	r3, [r7, #8]
 80190aa:	9b05      	ldr	r3, [sp, #20]
 80190ac:	e883 0003 	stmia.w	r3, {r0, r1}
 80190b0:	4618      	mov	r0, r3
 80190b2:	b00f      	add	sp, #60	; 0x3c
 80190b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190b8:	f1b9 0f00 	cmp.w	r9, #0
 80190bc:	d0c0      	beq.n	8019040 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x18c>
 80190be:	9b03      	ldr	r3, [sp, #12]
 80190c0:	7819      	ldrb	r1, [r3, #0]
 80190c2:	a80b      	add	r0, sp, #44	; 0x2c
 80190c4:	f7f7 f9b3 	bl	801042e <_ZNSs9push_backEc>
 80190c8:	e7ba      	b.n	8019040 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x18c>
 80190ca:	a90a      	add	r1, sp, #40	; 0x28
 80190cc:	a80b      	add	r0, sp, #44	; 0x2c
 80190ce:	f7f7 f8ff 	bl	80102d0 <_ZNSs6appendERKSs>
 80190d2:	e7b5      	b.n	8019040 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x18c>
 80190d4:	f1bb 0f00 	cmp.w	fp, #0
 80190d8:	d005      	beq.n	80190e6 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x232>
 80190da:	4642      	mov	r2, r8
 80190dc:	4629      	mov	r1, r5
 80190de:	a80b      	add	r0, sp, #44	; 0x2c
 80190e0:	f7f7 f956 	bl	8010390 <_ZNSs6appendEjc>
 80190e4:	e7ac      	b.n	8019040 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x18c>
 80190e6:	4641      	mov	r1, r8
 80190e8:	e7eb      	b.n	80190c2 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x20e>
 80190ea:	f1bb 0f00 	cmp.w	fp, #0
 80190ee:	d0a7      	beq.n	8019040 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x18c>
 80190f0:	e7f3      	b.n	80190da <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x226>
 80190f2:	2200      	movs	r2, #0
 80190f4:	f8cd 8000 	str.w	r8, [sp]
 80190f8:	4611      	mov	r1, r2
 80190fa:	a80b      	add	r0, sp, #44	; 0x2c
 80190fc:	f7f7 f82c 	bl	8010158 <_ZNSs14_M_replace_auxEjjjc>
 8019100:	e7bc      	b.n	801907c <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x1c8>
 8019102:	461e      	mov	r6, r3
 8019104:	e7ba      	b.n	801907c <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs+0x1c8>
 8019106:	bf00      	nop
 8019108:	20003bf0 	.word	0x20003bf0

0801910c <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs>:
 801910c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019110:	b08f      	sub	sp, #60	; 0x3c
 8019112:	a906      	add	r1, sp, #24
 8019114:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8019116:	9005      	str	r0, [sp, #20]
 8019118:	f107 046c 	add.w	r4, r7, #108	; 0x6c
 801911c:	4620      	mov	r0, r4
 801911e:	e881 000c 	stmia.w	r1, {r2, r3}
 8019122:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 8019126:	f7ff fa41 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 801912a:	4606      	mov	r6, r0
 801912c:	4620      	mov	r0, r4
 801912e:	f7ff fcad 	bl	8018a8c <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb0EEEclERKSt6locale.isra.0>
 8019132:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8019134:	681d      	ldr	r5, [r3, #0]
 8019136:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 801913a:	782a      	ldrb	r2, [r5, #0]
 801913c:	429a      	cmp	r2, r3
 801913e:	4604      	mov	r4, r0
 8019140:	f855 2c0c 	ldr.w	r2, [r5, #-12]
 8019144:	f000 8083 	beq.w	801924e <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x142>
 8019148:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801914a:	9309      	str	r3, [sp, #36]	; 0x24
 801914c:	f8d0 9020 	ldr.w	r9, [r0, #32]
 8019150:	69c3      	ldr	r3, [r0, #28]
 8019152:	9303      	str	r3, [sp, #12]
 8019154:	442a      	add	r2, r5
 8019156:	462b      	mov	r3, r5
 8019158:	429a      	cmp	r2, r3
 801915a:	469a      	mov	sl, r3
 801915c:	d907      	bls.n	801916e <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x62>
 801915e:	f89a 0000 	ldrb.w	r0, [sl]
 8019162:	69b1      	ldr	r1, [r6, #24]
 8019164:	5c09      	ldrb	r1, [r1, r0]
 8019166:	0749      	lsls	r1, r1, #29
 8019168:	f103 0301 	add.w	r3, r3, #1
 801916c:	d4f4      	bmi.n	8019158 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x4c>
 801916e:	ebba 0a05 	subs.w	sl, sl, r5
 8019172:	f000 80c2 	beq.w	80192fa <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x1ee>
 8019176:	4b7a      	ldr	r3, [pc, #488]	; (8019360 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x254>)
 8019178:	930a      	str	r3, [sp, #40]	; 0x28
 801917a:	ea4f 014a 	mov.w	r1, sl, lsl #1
 801917e:	a80a      	add	r0, sp, #40	; 0x28
 8019180:	f7f7 f887 	bl	8010292 <_ZNSs7reserveEj>
 8019184:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8019186:	ebaa 0603 	sub.w	r6, sl, r3
 801918a:	2e00      	cmp	r6, #0
 801918c:	dd27      	ble.n	80191de <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0xd2>
 801918e:	ea36 0623 	bics.w	r6, r6, r3, asr #32
 8019192:	bf28      	it	cs
 8019194:	4656      	movcs	r6, sl
 8019196:	68e3      	ldr	r3, [r4, #12]
 8019198:	2b00      	cmp	r3, #0
 801919a:	d063      	beq.n	8019264 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x158>
 801919c:	2100      	movs	r1, #0
 801919e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80191a0:	9100      	str	r1, [sp, #0]
 80191a2:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 80191a6:	0073      	lsls	r3, r6, #1
 80191a8:	a80a      	add	r0, sp, #40	; 0x28
 80191aa:	f7f6 ffd5 	bl	8010158 <_ZNSs14_M_replace_auxEjjjc>
 80191ae:	a80a      	add	r0, sp, #40	; 0x28
 80191b0:	f7f6 ffaa 	bl	8010108 <_ZNSs7_M_leakEv>
 80191b4:	19ab      	adds	r3, r5, r6
 80191b6:	7ca1      	ldrb	r1, [r4, #18]
 80191b8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80191ba:	e9cd 5300 	strd	r5, r3, [sp]
 80191be:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
 80191c2:	f7ff fcff 	bl	8018bc4 <_ZSt14__add_groupingIcEPT_S1_S0_PKcjPKS0_S5_>
 80191c6:	4683      	mov	fp, r0
 80191c8:	a80a      	add	r0, sp, #40	; 0x28
 80191ca:	f7f6 ff9d 	bl	8010108 <_ZNSs7_M_leakEv>
 80191ce:	990a      	ldr	r1, [sp, #40]	; 0x28
 80191d0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80191d4:	ebab 0101 	sub.w	r1, fp, r1
 80191d8:	a80a      	add	r0, sp, #40	; 0x28
 80191da:	f7fe ff4f 	bl	801807c <_ZNSs5eraseEjj.isra.0>
 80191de:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80191e0:	2b00      	cmp	r3, #0
 80191e2:	dd0a      	ble.n	80191fa <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0xee>
 80191e4:	7c61      	ldrb	r1, [r4, #17]
 80191e6:	a80a      	add	r0, sp, #40	; 0x28
 80191e8:	f7f7 f921 	bl	801042e <_ZNSs9push_backEc>
 80191ec:	2e00      	cmp	r6, #0
 80191ee:	db3f      	blt.n	8019270 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x164>
 80191f0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80191f2:	19a9      	adds	r1, r5, r6
 80191f4:	a80a      	add	r0, sp, #40	; 0x28
 80191f6:	f7f7 f891 	bl	801031c <_ZNSs6appendEPKcj>
 80191fa:	68fb      	ldr	r3, [r7, #12]
 80191fc:	f003 02b0 	and.w	r2, r3, #176	; 0xb0
 8019200:	9204      	str	r2, [sp, #16]
 8019202:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019204:	f413 7500 	ands.w	r5, r3, #512	; 0x200
 8019208:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801920c:	bf18      	it	ne
 801920e:	69a5      	ldrne	r5, [r4, #24]
 8019210:	4b53      	ldr	r3, [pc, #332]	; (8019360 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x254>)
 8019212:	930b      	str	r3, [sp, #44]	; 0x2c
 8019214:	444a      	add	r2, r9
 8019216:	4415      	add	r5, r2
 8019218:	0069      	lsls	r1, r5, #1
 801921a:	a80b      	add	r0, sp, #44	; 0x2c
 801921c:	f7f7 f839 	bl	8010292 <_ZNSs7reserveEj>
 8019220:	9b04      	ldr	r3, [sp, #16]
 8019222:	68be      	ldr	r6, [r7, #8]
 8019224:	2b10      	cmp	r3, #16
 8019226:	d12c      	bne.n	8019282 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x176>
 8019228:	42b5      	cmp	r5, r6
 801922a:	bf2c      	ite	cs
 801922c:	f04f 0b00 	movcs.w	fp, #0
 8019230:	f04f 0b01 	movcc.w	fp, #1
 8019234:	f04f 0a00 	mov.w	sl, #0
 8019238:	1b75      	subs	r5, r6, r5
 801923a:	ab09      	add	r3, sp, #36	; 0x24
 801923c:	f813 300a 	ldrb.w	r3, [r3, sl]
 8019240:	2b04      	cmp	r3, #4
 8019242:	d829      	bhi.n	8019298 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x18c>
 8019244:	e8df f003 	tbb	[pc, r3]
 8019248:	6420727d 	.word	0x6420727d
 801924c:	6d          	.byte	0x6d
 801924d:	00          	.byte	0x00
 801924e:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8019250:	9309      	str	r3, [sp, #36]	; 0x24
 8019252:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8019254:	f8d0 9028 	ldr.w	r9, [r0, #40]	; 0x28
 8019258:	9303      	str	r3, [sp, #12]
 801925a:	2a00      	cmp	r2, #0
 801925c:	f43f af7a 	beq.w	8019154 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x48>
 8019260:	3501      	adds	r5, #1
 8019262:	e777      	b.n	8019154 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x48>
 8019264:	4632      	mov	r2, r6
 8019266:	4629      	mov	r1, r5
 8019268:	a80a      	add	r0, sp, #40	; 0x28
 801926a:	f7f6 ffb5 	bl	80101d8 <_ZNSs6assignEPKcj>
 801926e:	e7b6      	b.n	80191de <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0xd2>
 8019270:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8019274:	4271      	negs	r1, r6
 8019276:	a80a      	add	r0, sp, #40	; 0x28
 8019278:	f7f7 f88a 	bl	8010390 <_ZNSs6appendEjc>
 801927c:	4652      	mov	r2, sl
 801927e:	4629      	mov	r1, r5
 8019280:	e7b8      	b.n	80191f4 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0xe8>
 8019282:	f04f 0b00 	mov.w	fp, #0
 8019286:	e7d5      	b.n	8019234 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x128>
 8019288:	68fb      	ldr	r3, [r7, #12]
 801928a:	059b      	lsls	r3, r3, #22
 801928c:	d504      	bpl.n	8019298 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x18c>
 801928e:	e9d4 1205 	ldrd	r1, r2, [r4, #20]
 8019292:	a80b      	add	r0, sp, #44	; 0x2c
 8019294:	f7f7 f842 	bl	801031c <_ZNSs6appendEPKcj>
 8019298:	f10a 0a01 	add.w	sl, sl, #1
 801929c:	f1ba 0f04 	cmp.w	sl, #4
 80192a0:	d1cb      	bne.n	801923a <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x12e>
 80192a2:	f1b9 0f01 	cmp.w	r9, #1
 80192a6:	d906      	bls.n	80192b6 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x1aa>
 80192a8:	9903      	ldr	r1, [sp, #12]
 80192aa:	f109 32ff 	add.w	r2, r9, #4294967295	; 0xffffffff
 80192ae:	3101      	adds	r1, #1
 80192b0:	a80b      	add	r0, sp, #44	; 0x2c
 80192b2:	f7f7 f833 	bl	801031c <_ZNSs6appendEPKcj>
 80192b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80192b8:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 80192bc:	429e      	cmp	r6, r3
 80192be:	d94c      	bls.n	801935a <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x24e>
 80192c0:	9a04      	ldr	r2, [sp, #16]
 80192c2:	2a20      	cmp	r2, #32
 80192c4:	eba6 0303 	sub.w	r3, r6, r3
 80192c8:	d13f      	bne.n	801934a <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x23e>
 80192ca:	4642      	mov	r2, r8
 80192cc:	4619      	mov	r1, r3
 80192ce:	a80b      	add	r0, sp, #44	; 0x2c
 80192d0:	f7f7 f85e 	bl	8010390 <_ZNSs6appendEjc>
 80192d4:	ac0c      	add	r4, sp, #48	; 0x30
 80192d6:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80192da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80192dc:	9600      	str	r6, [sp, #0]
 80192de:	4620      	mov	r0, r4
 80192e0:	f7f8 fb14 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 80192e4:	e894 0003 	ldmia.w	r4, {r0, r1}
 80192e8:	9006      	str	r0, [sp, #24]
 80192ea:	a80b      	add	r0, sp, #44	; 0x2c
 80192ec:	f88d 101c 	strb.w	r1, [sp, #28]
 80192f0:	f7f6 fe88 	bl	8010004 <_ZNSsD1Ev>
 80192f4:	a80a      	add	r0, sp, #40	; 0x28
 80192f6:	f7f6 fe85 	bl	8010004 <_ZNSsD1Ev>
 80192fa:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80192fe:	2300      	movs	r3, #0
 8019300:	60bb      	str	r3, [r7, #8]
 8019302:	9b05      	ldr	r3, [sp, #20]
 8019304:	e883 0003 	stmia.w	r3, {r0, r1}
 8019308:	4618      	mov	r0, r3
 801930a:	b00f      	add	sp, #60	; 0x3c
 801930c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019310:	f1b9 0f00 	cmp.w	r9, #0
 8019314:	d0c0      	beq.n	8019298 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x18c>
 8019316:	9b03      	ldr	r3, [sp, #12]
 8019318:	7819      	ldrb	r1, [r3, #0]
 801931a:	a80b      	add	r0, sp, #44	; 0x2c
 801931c:	f7f7 f887 	bl	801042e <_ZNSs9push_backEc>
 8019320:	e7ba      	b.n	8019298 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x18c>
 8019322:	a90a      	add	r1, sp, #40	; 0x28
 8019324:	a80b      	add	r0, sp, #44	; 0x2c
 8019326:	f7f6 ffd3 	bl	80102d0 <_ZNSs6appendERKSs>
 801932a:	e7b5      	b.n	8019298 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x18c>
 801932c:	f1bb 0f00 	cmp.w	fp, #0
 8019330:	d005      	beq.n	801933e <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x232>
 8019332:	4642      	mov	r2, r8
 8019334:	4629      	mov	r1, r5
 8019336:	a80b      	add	r0, sp, #44	; 0x2c
 8019338:	f7f7 f82a 	bl	8010390 <_ZNSs6appendEjc>
 801933c:	e7ac      	b.n	8019298 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x18c>
 801933e:	4641      	mov	r1, r8
 8019340:	e7eb      	b.n	801931a <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x20e>
 8019342:	f1bb 0f00 	cmp.w	fp, #0
 8019346:	d0a7      	beq.n	8019298 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x18c>
 8019348:	e7f3      	b.n	8019332 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x226>
 801934a:	2200      	movs	r2, #0
 801934c:	f8cd 8000 	str.w	r8, [sp]
 8019350:	4611      	mov	r1, r2
 8019352:	a80b      	add	r0, sp, #44	; 0x2c
 8019354:	f7f6 ff00 	bl	8010158 <_ZNSs14_M_replace_auxEjjjc>
 8019358:	e7bc      	b.n	80192d4 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x1c8>
 801935a:	461e      	mov	r6, r3
 801935c:	e7ba      	b.n	80192d4 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs+0x1c8>
 801935e:	bf00      	nop
 8019360:	20003bf0 	.word	0x20003bf0

08019364 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_bRSt8ios_basece>:
 8019364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019368:	ed2d 8b02 	vpush	{d8}
 801936c:	eeb0 8a40 	vmov.f32	s16, s0
 8019370:	eef0 8a60 	vmov.f32	s17, s1
 8019374:	b08d      	sub	sp, #52	; 0x34
 8019376:	af04      	add	r7, sp, #16
 8019378:	f107 0408 	add.w	r4, r7, #8
 801937c:	e884 000c 	stmia.w	r4, {r2, r3}
 8019380:	f897 3050 	ldrb.w	r3, [r7, #80]	; 0x50
 8019384:	607b      	str	r3, [r7, #4]
 8019386:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8019388:	f897 a058 	ldrb.w	sl, [r7, #88]	; 0x58
 801938c:	4605      	mov	r5, r0
 801938e:	4688      	mov	r8, r1
 8019390:	f107 0018 	add.w	r0, r7, #24
 8019394:	f103 016c 	add.w	r1, r3, #108	; 0x6c
 8019398:	f7f2 ff88 	bl	800c2ac <_ZNSt6localeC1ERKS_>
 801939c:	f107 0018 	add.w	r0, r7, #24
 80193a0:	f7ff f904 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 80193a4:	b090      	sub	sp, #64	; 0x40
 80193a6:	4681      	mov	r9, r0
 80193a8:	f7f2 ff98 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 80193ac:	ae04      	add	r6, sp, #16
 80193ae:	f04f 0b00 	mov.w	fp, #0
 80193b2:	61f8      	str	r0, [r7, #28]
 80193b4:	4631      	mov	r1, r6
 80193b6:	ed8d 8b02 	vstr	d8, [sp, #8]
 80193ba:	4b30      	ldr	r3, [pc, #192]	; (801947c <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_bRSt8ios_basece+0x118>)
 80193bc:	f8cd b000 	str.w	fp, [sp]
 80193c0:	2240      	movs	r2, #64	; 0x40
 80193c2:	f107 001c 	add.w	r0, r7, #28
 80193c6:	f7f8 f881 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 80193ca:	283f      	cmp	r0, #63	; 0x3f
 80193cc:	4601      	mov	r1, r0
 80193ce:	dd16      	ble.n	80193fe <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_bRSt8ios_basece+0x9a>
 80193d0:	3108      	adds	r1, #8
 80193d2:	f021 0107 	bic.w	r1, r1, #7
 80193d6:	ebad 0d01 	sub.w	sp, sp, r1
 80193da:	1c42      	adds	r2, r0, #1
 80193dc:	603a      	str	r2, [r7, #0]
 80193de:	f7f2 ff7d 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 80193e2:	ae04      	add	r6, sp, #16
 80193e4:	61f8      	str	r0, [r7, #28]
 80193e6:	4631      	mov	r1, r6
 80193e8:	ed8d 8b02 	vstr	d8, [sp, #8]
 80193ec:	4b23      	ldr	r3, [pc, #140]	; (801947c <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_bRSt8ios_basece+0x118>)
 80193ee:	683a      	ldr	r2, [r7, #0]
 80193f0:	f8cd b000 	str.w	fp, [sp]
 80193f4:	f107 001c 	add.w	r0, r7, #28
 80193f8:	f7f8 f868 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 80193fc:	4601      	mov	r1, r0
 80193fe:	f107 0314 	add.w	r3, r7, #20
 8019402:	2200      	movs	r2, #0
 8019404:	f107 001c 	add.w	r0, r7, #28
 8019408:	6039      	str	r1, [r7, #0]
 801940a:	f7f6 fdc7 	bl	800ff9c <_ZNSsC1EjcRKSaIcE>
 801940e:	6839      	ldr	r1, [r7, #0]
 8019410:	f107 001c 	add.w	r0, r7, #28
 8019414:	1872      	adds	r2, r6, r1
 8019416:	603a      	str	r2, [r7, #0]
 8019418:	f7f6 fe76 	bl	8010108 <_ZNSs7_M_leakEv>
 801941c:	69fb      	ldr	r3, [r7, #28]
 801941e:	683a      	ldr	r2, [r7, #0]
 8019420:	4631      	mov	r1, r6
 8019422:	4648      	mov	r0, r9
 8019424:	f7f8 f89e 	bl	8011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>
 8019428:	687b      	ldr	r3, [r7, #4]
 801942a:	b1d3      	cbz	r3, 8019462 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_bRSt8ios_basece+0xfe>
 801942c:	f107 031c 	add.w	r3, r7, #28
 8019430:	e9cd a301 	strd	sl, r3, [sp, #4]
 8019434:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8019436:	9300      	str	r3, [sp, #0]
 8019438:	4641      	mov	r1, r8
 801943a:	e894 000c 	ldmia.w	r4, {r2, r3}
 801943e:	4628      	mov	r0, r5
 8019440:	f7ff fd38 	bl	8018eb4 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs>
 8019444:	f107 001c 	add.w	r0, r7, #28
 8019448:	f7f6 fddc 	bl	8010004 <_ZNSsD1Ev>
 801944c:	f107 0018 	add.w	r0, r7, #24
 8019450:	f7f2 ff9a 	bl	800c388 <_ZNSt6localeD1Ev>
 8019454:	4628      	mov	r0, r5
 8019456:	3724      	adds	r7, #36	; 0x24
 8019458:	46bd      	mov	sp, r7
 801945a:	ecbd 8b02 	vpop	{d8}
 801945e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019462:	f107 031c 	add.w	r3, r7, #28
 8019466:	e9cd a301 	strd	sl, r3, [sp, #4]
 801946a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801946c:	9300      	str	r3, [sp, #0]
 801946e:	4641      	mov	r1, r8
 8019470:	e894 000c 	ldmia.w	r4, {r2, r3}
 8019474:	4628      	mov	r0, r5
 8019476:	f7ff fe49 	bl	801910c <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs>
 801947a:	e7e3      	b.n	8019444 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_bRSt8ios_basece+0xe0>
 801947c:	0802f7f2 	.word	0x0802f7f2

08019480 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_bRSt8ios_basecRKSs>:
 8019480:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019482:	b087      	sub	sp, #28
 8019484:	ac04      	add	r4, sp, #16
 8019486:	e884 000c 	stmia.w	r4, {r2, r3}
 801948a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801948c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8019490:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019492:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8019496:	9300      	str	r3, [sp, #0]
 8019498:	e9cd 2601 	strd	r2, r6, [sp, #4]
 801949c:	4605      	mov	r5, r0
 801949e:	e894 000c 	ldmia.w	r4, {r2, r3}
 80194a2:	b127      	cbz	r7, 80194ae <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_bRSt8ios_basecRKSs+0x2e>
 80194a4:	f7ff fd06 	bl	8018eb4 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb1EEES3_S3_RSt8ios_basecRKSs>
 80194a8:	4628      	mov	r0, r5
 80194aa:	b007      	add	sp, #28
 80194ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80194ae:	f7ff fe2d 	bl	801910c <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE9_M_insertILb0EEES3_S3_RSt8ios_basecRKSs>
 80194b2:	e7f9      	b.n	80194a8 <_ZNKSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_bRSt8ios_basecRKSs+0x28>

080194b4 <_ZNKSt8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecPK2tmcc>:
 80194b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80194b8:	b0a7      	sub	sp, #156	; 0x9c
 80194ba:	4604      	mov	r4, r0
 80194bc:	9e2e      	ldr	r6, [sp, #184]	; 0xb8
 80194be:	f89d 90c4 	ldrb.w	r9, [sp, #196]	; 0xc4
 80194c2:	f89d 70c8 	ldrb.w	r7, [sp, #200]	; 0xc8
 80194c6:	366c      	adds	r6, #108	; 0x6c
 80194c8:	4630      	mov	r0, r6
 80194ca:	ad02      	add	r5, sp, #8
 80194cc:	e885 000c 	stmia.w	r5, {r2, r3}
 80194d0:	f7ff f86c 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 80194d4:	4680      	mov	r8, r0
 80194d6:	4630      	mov	r0, r6
 80194d8:	f7ff fafc 	bl	8018ad4 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale>
 80194dc:	2125      	movs	r1, #37	; 0x25
 80194de:	4606      	mov	r6, r0
 80194e0:	4640      	mov	r0, r8
 80194e2:	f7f8 f82e 	bl	8011542 <_ZNKSt5ctypeIcE5widenEc>
 80194e6:	f88d 0014 	strb.w	r0, [sp, #20]
 80194ea:	b9cf      	cbnz	r7, 8019520 <_ZNKSt8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecPK2tmcc+0x6c>
 80194ec:	f88d 9015 	strb.w	r9, [sp, #21]
 80194f0:	f88d 7016 	strb.w	r7, [sp, #22]
 80194f4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80194f6:	9300      	str	r3, [sp, #0]
 80194f8:	a906      	add	r1, sp, #24
 80194fa:	ab05      	add	r3, sp, #20
 80194fc:	2280      	movs	r2, #128	; 0x80
 80194fe:	4630      	mov	r0, r6
 8019500:	f00b fb79 	bl	8024bf6 <_ZNKSt11__timepunctIcE6_M_putEPcjPKcPK2tm>
 8019504:	a806      	add	r0, sp, #24
 8019506:	f7e6 febd 	bl	8000284 <strlen>
 801950a:	9000      	str	r0, [sp, #0]
 801950c:	e895 0006 	ldmia.w	r5, {r1, r2}
 8019510:	4620      	mov	r0, r4
 8019512:	ab06      	add	r3, sp, #24
 8019514:	f7f8 f9fa 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 8019518:	4620      	mov	r0, r4
 801951a:	b027      	add	sp, #156	; 0x9c
 801951c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019520:	2300      	movs	r3, #0
 8019522:	f88d 7015 	strb.w	r7, [sp, #21]
 8019526:	f88d 9016 	strb.w	r9, [sp, #22]
 801952a:	f88d 3017 	strb.w	r3, [sp, #23]
 801952e:	e7e1      	b.n	80194f4 <_ZNKSt8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecPK2tmcc+0x40>

08019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>:
 8019530:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019534:	460d      	mov	r5, r1
 8019536:	480f      	ldr	r0, [pc, #60]	; (8019574 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale+0x44>)
 8019538:	f7f2 ff4c 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801953c:	682b      	ldr	r3, [r5, #0]
 801953e:	68df      	ldr	r7, [r3, #12]
 8019540:	f857 8020 	ldr.w	r8, [r7, r0, lsl #2]
 8019544:	4604      	mov	r4, r0
 8019546:	f1b8 0f00 	cmp.w	r8, #0
 801954a:	d10f      	bne.n	801956c <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale+0x3c>
 801954c:	2068      	movs	r0, #104	; 0x68
 801954e:	f7f2 fcf7 	bl	800bf40 <_Znwj>
 8019552:	4641      	mov	r1, r8
 8019554:	4606      	mov	r6, r0
 8019556:	f7fe feaf 	bl	80182b8 <_ZNSt16__numpunct_cacheIcEC1Ej>
 801955a:	4629      	mov	r1, r5
 801955c:	4630      	mov	r0, r6
 801955e:	f7ff f861 	bl	8018624 <_ZNSt16__numpunct_cacheIcE8_M_cacheERKSt6locale>
 8019562:	6828      	ldr	r0, [r5, #0]
 8019564:	4622      	mov	r2, r4
 8019566:	4631      	mov	r1, r6
 8019568:	f7f2 fffa 	bl	800c560 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj>
 801956c:	f857 0024 	ldr.w	r0, [r7, r4, lsl #2]
 8019570:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019574:	20003cdc 	.word	0x20003cdc

08019578 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_>:
 8019578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801957c:	b08b      	sub	sp, #44	; 0x2c
 801957e:	af04      	add	r7, sp, #16
 8019580:	468a      	mov	sl, r1
 8019582:	6c3e      	ldr	r6, [r7, #64]	; 0x40
 8019584:	f107 0108 	add.w	r1, r7, #8
 8019588:	e881 000c 	stmia.w	r1, {r2, r3}
 801958c:	4681      	mov	r9, r0
 801958e:	f106 016c 	add.w	r1, r6, #108	; 0x6c
 8019592:	f107 0010 	add.w	r0, r7, #16
 8019596:	f7ff ffcb 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 801959a:	68f5      	ldr	r5, [r6, #12]
 801959c:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 801959e:	f100 0326 	add.w	r3, r0, #38	; 0x26
 80195a2:	603b      	str	r3, [r7, #0]
 80195a4:	f005 034a 	and.w	r3, r5, #74	; 0x4a
 80195a8:	b086      	sub	sp, #24
 80195aa:	2b40      	cmp	r3, #64	; 0x40
 80195ac:	4604      	mov	r4, r0
 80195ae:	f10d 0b10 	add.w	fp, sp, #16
 80195b2:	607b      	str	r3, [r7, #4]
 80195b4:	d001      	beq.n	80195ba <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0x42>
 80195b6:	2b08      	cmp	r3, #8
 80195b8:	d177      	bne.n	80196aa <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0x132>
 80195ba:	f04f 0800 	mov.w	r8, #0
 80195be:	462b      	mov	r3, r5
 80195c0:	683a      	ldr	r2, [r7, #0]
 80195c2:	f8cd 8000 	str.w	r8, [sp]
 80195c6:	f10b 0014 	add.w	r0, fp, #20
 80195ca:	f7ff fbe9 	bl	8018da0 <_ZSt13__int_to_charIcmEiPT_T0_PKS0_St13_Ios_Fmtflagsb>
 80195ce:	7c23      	ldrb	r3, [r4, #16]
 80195d0:	6178      	str	r0, [r7, #20]
 80195d2:	f1c0 0114 	rsb	r1, r0, #20
 80195d6:	4459      	add	r1, fp
 80195d8:	b1ab      	cbz	r3, 8019606 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0x8e>
 80195da:	0040      	lsls	r0, r0, #1
 80195dc:	3009      	adds	r0, #9
 80195de:	f020 0007 	bic.w	r0, r0, #7
 80195e2:	ebad 0d00 	sub.w	sp, sp, r0
 80195e6:	f10d 0b12 	add.w	fp, sp, #18
 80195ea:	f107 0214 	add.w	r2, r7, #20
 80195ee:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80195f2:	e9cd 1202 	strd	r1, r2, [sp, #8]
 80195f6:	e9cd 6b00 	strd	r6, fp, [sp]
 80195fa:	4650      	mov	r0, sl
 80195fc:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8019600:	f7ff fb4c 	bl	8018c9c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE12_M_group_intEPKcjcRSt8ios_basePcS9_Ri>
 8019604:	4659      	mov	r1, fp
 8019606:	697b      	ldr	r3, [r7, #20]
 8019608:	f1b8 0f00 	cmp.w	r8, #0
 801960c:	d033      	beq.n	8019676 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0xfe>
 801960e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8019610:	2a00      	cmp	r2, #0
 8019612:	db2d      	blt.n	8019670 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0xf8>
 8019614:	0528      	lsls	r0, r5, #20
 8019616:	d506      	bpl.n	8019626 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0xae>
 8019618:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 801961c:	f801 2c01 	strb.w	r2, [r1, #-1]
 8019620:	3301      	adds	r3, #1
 8019622:	617b      	str	r3, [r7, #20]
 8019624:	3901      	subs	r1, #1
 8019626:	68b2      	ldr	r2, [r6, #8]
 8019628:	697b      	ldr	r3, [r7, #20]
 801962a:	4293      	cmp	r3, r2
 801962c:	da11      	bge.n	8019652 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0xda>
 801962e:	1dd3      	adds	r3, r2, #7
 8019630:	f023 0307 	bic.w	r3, r3, #7
 8019634:	ebad 0d03 	sub.w	sp, sp, r3
 8019638:	ac04      	add	r4, sp, #16
 801963a:	f107 0314 	add.w	r3, r7, #20
 801963e:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8019642:	9400      	str	r4, [sp, #0]
 8019644:	f897 1044 	ldrb.w	r1, [r7, #68]	; 0x44
 8019648:	4633      	mov	r3, r6
 801964a:	4650      	mov	r0, sl
 801964c:	f7ff fb9a 	bl	8018d84 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6_M_padEciRSt8ios_basePcPKcRi>
 8019650:	4621      	mov	r1, r4
 8019652:	2300      	movs	r3, #0
 8019654:	60b3      	str	r3, [r6, #8]
 8019656:	697b      	ldr	r3, [r7, #20]
 8019658:	9300      	str	r3, [sp, #0]
 801965a:	4648      	mov	r0, r9
 801965c:	460b      	mov	r3, r1
 801965e:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8019662:	f7f8 f953 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 8019666:	4648      	mov	r0, r9
 8019668:	371c      	adds	r7, #28
 801966a:	46bd      	mov	sp, r7
 801966c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019670:	f894 2026 	ldrb.w	r2, [r4, #38]	; 0x26
 8019674:	e7d2      	b.n	801961c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0xa4>
 8019676:	05aa      	lsls	r2, r5, #22
 8019678:	d5d5      	bpl.n	8019626 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0xae>
 801967a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 801967c:	2a00      	cmp	r2, #0
 801967e:	d0d2      	beq.n	8019626 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0xae>
 8019680:	687a      	ldr	r2, [r7, #4]
 8019682:	2a40      	cmp	r2, #64	; 0x40
 8019684:	d102      	bne.n	801968c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0x114>
 8019686:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 801968a:	e7c7      	b.n	801961c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0xa4>
 801968c:	683a      	ldr	r2, [r7, #0]
 801968e:	f3c5 3580 	ubfx	r5, r5, #14, #1
 8019692:	442a      	add	r2, r5
 8019694:	3302      	adds	r3, #2
 8019696:	7892      	ldrb	r2, [r2, #2]
 8019698:	f801 2c01 	strb.w	r2, [r1, #-1]
 801969c:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 80196a0:	f801 2c02 	strb.w	r2, [r1, #-2]
 80196a4:	617b      	str	r3, [r7, #20]
 80196a6:	3902      	subs	r1, #2
 80196a8:	e7bd      	b.n	8019626 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0xae>
 80196aa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80196ac:	2b00      	cmp	r3, #0
 80196ae:	dc01      	bgt.n	80196b4 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0x13c>
 80196b0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80196b2:	4259      	negs	r1, r3
 80196b4:	f04f 0801 	mov.w	r8, #1
 80196b8:	e781      	b.n	80195be <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_+0x46>

080196ba <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecl>:
 80196ba:	b530      	push	{r4, r5, lr}
 80196bc:	b087      	sub	sp, #28
 80196be:	ac04      	add	r4, sp, #16
 80196c0:	e884 000c 	stmia.w	r4, {r2, r3}
 80196c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80196c6:	9302      	str	r3, [sp, #8]
 80196c8:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 80196cc:	9301      	str	r3, [sp, #4]
 80196ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80196d0:	9300      	str	r3, [sp, #0]
 80196d2:	e894 000c 	ldmia.w	r4, {r2, r3}
 80196d6:	4605      	mov	r5, r0
 80196d8:	f7ff ff4e 	bl	8019578 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_>
 80196dc:	4628      	mov	r0, r5
 80196de:	b007      	add	sp, #28
 80196e0:	bd30      	pop	{r4, r5, pc}

080196e2 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecb>:
 80196e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80196e6:	b08d      	sub	sp, #52	; 0x34
 80196e8:	af04      	add	r7, sp, #16
 80196ea:	f107 0408 	add.w	r4, r7, #8
 80196ee:	e884 000c 	stmia.w	r4, {r2, r3}
 80196f2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80196f4:	f897 204c 	ldrb.w	r2, [r7, #76]	; 0x4c
 80196f8:	f897 8050 	ldrb.w	r8, [r7, #80]	; 0x50
 80196fc:	4606      	mov	r6, r0
 80196fe:	68d8      	ldr	r0, [r3, #12]
 8019700:	6078      	str	r0, [r7, #4]
 8019702:	f010 0f01 	tst.w	r0, #1
 8019706:	f107 0518 	add.w	r5, r7, #24
 801970a:	d114      	bne.n	8019736 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecb+0x54>
 801970c:	e9cd 2801 	strd	r2, r8, [sp, #4]
 8019710:	9300      	str	r3, [sp, #0]
 8019712:	4628      	mov	r0, r5
 8019714:	e894 000c 	ldmia.w	r4, {r2, r3}
 8019718:	f7ff ff2e 	bl	8019578 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIlEES3_S3_RSt8ios_basecT_>
 801971c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8019720:	60b8      	str	r0, [r7, #8]
 8019722:	7339      	strb	r1, [r7, #12]
 8019724:	e894 0003 	ldmia.w	r4, {r0, r1}
 8019728:	3724      	adds	r7, #36	; 0x24
 801972a:	e886 0003 	stmia.w	r6, {r0, r1}
 801972e:	4630      	mov	r0, r6
 8019730:	46bd      	mov	sp, r7
 8019732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019736:	f103 016c 	add.w	r1, r3, #108	; 0x6c
 801973a:	f107 0014 	add.w	r0, r7, #20
 801973e:	603a      	str	r2, [r7, #0]
 8019740:	64bb      	str	r3, [r7, #72]	; 0x48
 8019742:	f7ff fef5 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 8019746:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8019748:	683a      	ldr	r2, [r7, #0]
 801974a:	f1b8 0f00 	cmp.w	r8, #0
 801974e:	d030      	beq.n	80197b2 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecb+0xd0>
 8019750:	e9d0 a905 	ldrd	sl, r9, [r0, #20]
 8019754:	6899      	ldr	r1, [r3, #8]
 8019756:	4589      	cmp	r9, r1
 8019758:	da3e      	bge.n	80197d8 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecb+0xf6>
 801975a:	eba1 0809 	sub.w	r8, r1, r9
 801975e:	f108 0107 	add.w	r1, r8, #7
 8019762:	f021 0107 	bic.w	r1, r1, #7
 8019766:	ebad 0d01 	sub.w	sp, sp, r1
 801976a:	f10d 0b10 	add.w	fp, sp, #16
 801976e:	4641      	mov	r1, r8
 8019770:	4658      	mov	r0, fp
 8019772:	64bb      	str	r3, [r7, #72]	; 0x48
 8019774:	f7fe fc9a 	bl	80180ac <_ZNSt11char_traitsIcE6assignEPcjc>
 8019778:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801977a:	2200      	movs	r2, #0
 801977c:	609a      	str	r2, [r3, #8]
 801977e:	687b      	ldr	r3, [r7, #4]
 8019780:	f003 03b0 	and.w	r3, r3, #176	; 0xb0
 8019784:	2b20      	cmp	r3, #32
 8019786:	d117      	bne.n	80197b8 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecb+0xd6>
 8019788:	e894 0006 	ldmia.w	r4, {r1, r2}
 801978c:	4653      	mov	r3, sl
 801978e:	4628      	mov	r0, r5
 8019790:	f8cd 9000 	str.w	r9, [sp]
 8019794:	f7f8 f8ba 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 8019798:	e895 0003 	ldmia.w	r5, {r0, r1}
 801979c:	465b      	mov	r3, fp
 801979e:	60b8      	str	r0, [r7, #8]
 80197a0:	7339      	strb	r1, [r7, #12]
 80197a2:	f8cd 8000 	str.w	r8, [sp]
 80197a6:	e894 0006 	ldmia.w	r4, {r1, r2}
 80197aa:	4628      	mov	r0, r5
 80197ac:	f7f8 f8ae 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 80197b0:	e7b4      	b.n	801971c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecb+0x3a>
 80197b2:	e9d0 a907 	ldrd	sl, r9, [r0, #28]
 80197b6:	e7cd      	b.n	8019754 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecb+0x72>
 80197b8:	e894 0006 	ldmia.w	r4, {r1, r2}
 80197bc:	4628      	mov	r0, r5
 80197be:	f8cd 8000 	str.w	r8, [sp]
 80197c2:	465b      	mov	r3, fp
 80197c4:	f7f8 f8a2 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 80197c8:	e895 0003 	ldmia.w	r5, {r0, r1}
 80197cc:	60b8      	str	r0, [r7, #8]
 80197ce:	7339      	strb	r1, [r7, #12]
 80197d0:	f8cd 9000 	str.w	r9, [sp]
 80197d4:	4653      	mov	r3, sl
 80197d6:	e7e6      	b.n	80197a6 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecb+0xc4>
 80197d8:	2200      	movs	r2, #0
 80197da:	609a      	str	r2, [r3, #8]
 80197dc:	e7f8      	b.n	80197d0 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecb+0xee>

080197de <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_>:
 80197de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197e2:	b08b      	sub	sp, #44	; 0x2c
 80197e4:	af04      	add	r7, sp, #16
 80197e6:	4689      	mov	r9, r1
 80197e8:	6c3d      	ldr	r5, [r7, #64]	; 0x40
 80197ea:	f107 0108 	add.w	r1, r7, #8
 80197ee:	e881 000c 	stmia.w	r1, {r2, r3}
 80197f2:	4680      	mov	r8, r0
 80197f4:	f105 016c 	add.w	r1, r5, #108	; 0x6c
 80197f8:	f107 0010 	add.w	r0, r7, #16
 80197fc:	f7ff fe98 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 8019800:	68ee      	ldr	r6, [r5, #12]
 8019802:	f006 0a4a 	and.w	sl, r6, #74	; 0x4a
 8019806:	f100 0326 	add.w	r3, r0, #38	; 0x26
 801980a:	b086      	sub	sp, #24
 801980c:	f1ba 0f40 	cmp.w	sl, #64	; 0x40
 8019810:	4604      	mov	r4, r0
 8019812:	603b      	str	r3, [r7, #0]
 8019814:	f10d 0b10 	add.w	fp, sp, #16
 8019818:	d05f      	beq.n	80198da <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_+0xfc>
 801981a:	f1ba 0308 	subs.w	r3, sl, #8
 801981e:	bf18      	it	ne
 8019820:	2301      	movne	r3, #1
 8019822:	607b      	str	r3, [r7, #4]
 8019824:	687b      	ldr	r3, [r7, #4]
 8019826:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8019828:	9300      	str	r3, [sp, #0]
 801982a:	683a      	ldr	r2, [r7, #0]
 801982c:	4633      	mov	r3, r6
 801982e:	f10b 0014 	add.w	r0, fp, #20
 8019832:	f7ff fab5 	bl	8018da0 <_ZSt13__int_to_charIcmEiPT_T0_PKS0_St13_Ios_Fmtflagsb>
 8019836:	7c23      	ldrb	r3, [r4, #16]
 8019838:	6178      	str	r0, [r7, #20]
 801983a:	f1c0 0114 	rsb	r1, r0, #20
 801983e:	4459      	add	r1, fp
 8019840:	b1ab      	cbz	r3, 801986e <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_+0x90>
 8019842:	0040      	lsls	r0, r0, #1
 8019844:	3009      	adds	r0, #9
 8019846:	f020 0007 	bic.w	r0, r0, #7
 801984a:	ebad 0d00 	sub.w	sp, sp, r0
 801984e:	f10d 0b12 	add.w	fp, sp, #18
 8019852:	f107 0214 	add.w	r2, r7, #20
 8019856:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801985a:	e9cd 1202 	strd	r1, r2, [sp, #8]
 801985e:	e9cd 5b00 	strd	r5, fp, [sp]
 8019862:	4648      	mov	r0, r9
 8019864:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8019868:	f7ff fa18 	bl	8018c9c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE12_M_group_intEPKcjcRSt8ios_basePcS9_Ri>
 801986c:	4659      	mov	r1, fp
 801986e:	687b      	ldr	r3, [r7, #4]
 8019870:	b973      	cbnz	r3, 8019890 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_+0xb2>
 8019872:	05b3      	lsls	r3, r6, #22
 8019874:	d50c      	bpl.n	8019890 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_+0xb2>
 8019876:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8019878:	b153      	cbz	r3, 8019890 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_+0xb2>
 801987a:	f1ba 0f40 	cmp.w	sl, #64	; 0x40
 801987e:	697b      	ldr	r3, [r7, #20]
 8019880:	d12d      	bne.n	80198de <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_+0x100>
 8019882:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 8019886:	f801 2c01 	strb.w	r2, [r1, #-1]
 801988a:	3301      	adds	r3, #1
 801988c:	617b      	str	r3, [r7, #20]
 801988e:	3901      	subs	r1, #1
 8019890:	68aa      	ldr	r2, [r5, #8]
 8019892:	697b      	ldr	r3, [r7, #20]
 8019894:	4293      	cmp	r3, r2
 8019896:	da11      	bge.n	80198bc <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_+0xde>
 8019898:	1dd3      	adds	r3, r2, #7
 801989a:	f023 0307 	bic.w	r3, r3, #7
 801989e:	ebad 0d03 	sub.w	sp, sp, r3
 80198a2:	ac04      	add	r4, sp, #16
 80198a4:	f107 0314 	add.w	r3, r7, #20
 80198a8:	e9cd 1301 	strd	r1, r3, [sp, #4]
 80198ac:	9400      	str	r4, [sp, #0]
 80198ae:	f897 1044 	ldrb.w	r1, [r7, #68]	; 0x44
 80198b2:	462b      	mov	r3, r5
 80198b4:	4648      	mov	r0, r9
 80198b6:	f7ff fa65 	bl	8018d84 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6_M_padEciRSt8ios_basePcPKcRi>
 80198ba:	4621      	mov	r1, r4
 80198bc:	2300      	movs	r3, #0
 80198be:	60ab      	str	r3, [r5, #8]
 80198c0:	697b      	ldr	r3, [r7, #20]
 80198c2:	9300      	str	r3, [sp, #0]
 80198c4:	4640      	mov	r0, r8
 80198c6:	460b      	mov	r3, r1
 80198c8:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80198cc:	f7f8 f81e 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 80198d0:	4640      	mov	r0, r8
 80198d2:	371c      	adds	r7, #28
 80198d4:	46bd      	mov	sp, r7
 80198d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80198da:	2300      	movs	r3, #0
 80198dc:	e7a1      	b.n	8019822 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_+0x44>
 80198de:	683a      	ldr	r2, [r7, #0]
 80198e0:	f3c6 3680 	ubfx	r6, r6, #14, #1
 80198e4:	4432      	add	r2, r6
 80198e6:	3302      	adds	r3, #2
 80198e8:	7892      	ldrb	r2, [r2, #2]
 80198ea:	f801 2c01 	strb.w	r2, [r1, #-1]
 80198ee:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 80198f2:	f801 2c02 	strb.w	r2, [r1, #-2]
 80198f6:	617b      	str	r3, [r7, #20]
 80198f8:	3902      	subs	r1, #2
 80198fa:	e7c9      	b.n	8019890 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_+0xb2>

080198fc <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecm>:
 80198fc:	b530      	push	{r4, r5, lr}
 80198fe:	b087      	sub	sp, #28
 8019900:	ac04      	add	r4, sp, #16
 8019902:	e884 000c 	stmia.w	r4, {r2, r3}
 8019906:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019908:	9302      	str	r3, [sp, #8]
 801990a:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 801990e:	9301      	str	r3, [sp, #4]
 8019910:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019912:	9300      	str	r3, [sp, #0]
 8019914:	e894 000c 	ldmia.w	r4, {r2, r3}
 8019918:	4605      	mov	r5, r0
 801991a:	f7ff ff60 	bl	80197de <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_>
 801991e:	4628      	mov	r0, r5
 8019920:	b007      	add	sp, #28
 8019922:	bd30      	pop	{r4, r5, pc}

08019924 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecPKv>:
 8019924:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019928:	b088      	sub	sp, #32
 801992a:	ac04      	add	r4, sp, #16
 801992c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801992e:	f8d6 800c 	ldr.w	r8, [r6, #12]
 8019932:	e884 000c 	stmia.w	r4, {r2, r3}
 8019936:	f428 4380 	bic.w	r3, r8, #16384	; 0x4000
 801993a:	f023 034a 	bic.w	r3, r3, #74	; 0x4a
 801993e:	f443 7302 	orr.w	r3, r3, #520	; 0x208
 8019942:	60f3      	str	r3, [r6, #12]
 8019944:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019946:	9302      	str	r3, [sp, #8]
 8019948:	f89d 303c 	ldrb.w	r3, [sp, #60]	; 0x3c
 801994c:	e9cd 6300 	strd	r6, r3, [sp]
 8019950:	af06      	add	r7, sp, #24
 8019952:	4605      	mov	r5, r0
 8019954:	e894 000c 	ldmia.w	r4, {r2, r3}
 8019958:	4638      	mov	r0, r7
 801995a:	f7ff ff40 	bl	80197de <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_>
 801995e:	e897 0003 	ldmia.w	r7, {r0, r1}
 8019962:	9004      	str	r0, [sp, #16]
 8019964:	f88d 1014 	strb.w	r1, [sp, #20]
 8019968:	e894 0003 	ldmia.w	r4, {r0, r1}
 801996c:	e885 0003 	stmia.w	r5, {r0, r1}
 8019970:	4628      	mov	r0, r5
 8019972:	f8c6 800c 	str.w	r8, [r6, #12]
 8019976:	b008      	add	sp, #32
 8019978:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801997c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_>:
 801997c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019980:	ed2d 8b02 	vpush	{d8}
 8019984:	b08b      	sub	sp, #44	; 0x2c
 8019986:	af04      	add	r7, sp, #16
 8019988:	ee08 1a90 	vmov	s17, r1
 801998c:	f8d7 9048 	ldr.w	r9, [r7, #72]	; 0x48
 8019990:	f107 0108 	add.w	r1, r7, #8
 8019994:	e881 000c 	stmia.w	r1, {r2, r3}
 8019998:	ee08 0a10 	vmov	s16, r0
 801999c:	f109 016c 	add.w	r1, r9, #108	; 0x6c
 80199a0:	f107 0010 	add.w	r0, r7, #16
 80199a4:	e9d7 a814 	ldrd	sl, r8, [r7, #80]	; 0x50
 80199a8:	f7ff fdc2 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 80199ac:	f8d9 500c 	ldr.w	r5, [r9, #12]
 80199b0:	f100 0326 	add.w	r3, r0, #38	; 0x26
 80199b4:	603b      	str	r3, [r7, #0]
 80199b6:	f005 034a 	and.w	r3, r5, #74	; 0x4a
 80199ba:	607b      	str	r3, [r7, #4]
 80199bc:	6879      	ldr	r1, [r7, #4]
 80199be:	b08a      	sub	sp, #40	; 0x28
 80199c0:	2940      	cmp	r1, #64	; 0x40
 80199c2:	4604      	mov	r4, r0
 80199c4:	f10d 0b10 	add.w	fp, sp, #16
 80199c8:	4652      	mov	r2, sl
 80199ca:	4643      	mov	r3, r8
 80199cc:	d001      	beq.n	80199d2 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0x56>
 80199ce:	2908      	cmp	r1, #8
 80199d0:	d17d      	bne.n	8019ace <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0x152>
 80199d2:	2600      	movs	r6, #0
 80199d4:	6839      	ldr	r1, [r7, #0]
 80199d6:	9100      	str	r1, [sp, #0]
 80199d8:	e9cd 5601 	strd	r5, r6, [sp, #4]
 80199dc:	f10b 0028 	add.w	r0, fp, #40	; 0x28
 80199e0:	f7ff fa0f 	bl	8018e02 <_ZSt13__int_to_charIcyEiPT_T0_PKS0_St13_Ios_Fmtflagsb>
 80199e4:	7c23      	ldrb	r3, [r4, #16]
 80199e6:	6178      	str	r0, [r7, #20]
 80199e8:	f1c0 0128 	rsb	r1, r0, #40	; 0x28
 80199ec:	4459      	add	r1, fp
 80199ee:	b1b3      	cbz	r3, 8019a1e <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0xa2>
 80199f0:	0040      	lsls	r0, r0, #1
 80199f2:	3009      	adds	r0, #9
 80199f4:	f020 0007 	bic.w	r0, r0, #7
 80199f8:	ebad 0d00 	sub.w	sp, sp, r0
 80199fc:	f10d 0b12 	add.w	fp, sp, #18
 8019a00:	f107 0214 	add.w	r2, r7, #20
 8019a04:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8019a08:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8019a0c:	e9cd 9b00 	strd	r9, fp, [sp]
 8019a10:	ee18 0a90 	vmov	r0, s17
 8019a14:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8019a18:	f7ff f940 	bl	8018c9c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE12_M_group_intEPKcjcRSt8ios_basePcS9_Ri>
 8019a1c:	4659      	mov	r1, fp
 8019a1e:	697b      	ldr	r3, [r7, #20]
 8019a20:	2e00      	cmp	r6, #0
 8019a22:	d03a      	beq.n	8019a9a <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0x11e>
 8019a24:	f1b8 0f00 	cmp.w	r8, #0
 8019a28:	db34      	blt.n	8019a94 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0x118>
 8019a2a:	0528      	lsls	r0, r5, #20
 8019a2c:	d506      	bpl.n	8019a3c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0xc0>
 8019a2e:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 8019a32:	f801 2c01 	strb.w	r2, [r1, #-1]
 8019a36:	3301      	adds	r3, #1
 8019a38:	617b      	str	r3, [r7, #20]
 8019a3a:	3901      	subs	r1, #1
 8019a3c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8019a40:	697b      	ldr	r3, [r7, #20]
 8019a42:	4293      	cmp	r3, r2
 8019a44:	da12      	bge.n	8019a6c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0xf0>
 8019a46:	1dd3      	adds	r3, r2, #7
 8019a48:	f023 0307 	bic.w	r3, r3, #7
 8019a4c:	ebad 0d03 	sub.w	sp, sp, r3
 8019a50:	ac04      	add	r4, sp, #16
 8019a52:	f107 0314 	add.w	r3, r7, #20
 8019a56:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8019a5a:	ee18 0a90 	vmov	r0, s17
 8019a5e:	f897 104c 	ldrb.w	r1, [r7, #76]	; 0x4c
 8019a62:	9400      	str	r4, [sp, #0]
 8019a64:	464b      	mov	r3, r9
 8019a66:	f7ff f98d 	bl	8018d84 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6_M_padEciRSt8ios_basePcPKcRi>
 8019a6a:	4621      	mov	r1, r4
 8019a6c:	2300      	movs	r3, #0
 8019a6e:	f8c9 3008 	str.w	r3, [r9, #8]
 8019a72:	697b      	ldr	r3, [r7, #20]
 8019a74:	9300      	str	r3, [sp, #0]
 8019a76:	ee18 0a10 	vmov	r0, s16
 8019a7a:	460b      	mov	r3, r1
 8019a7c:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8019a80:	f7f7 ff44 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 8019a84:	ee18 0a10 	vmov	r0, s16
 8019a88:	371c      	adds	r7, #28
 8019a8a:	46bd      	mov	sp, r7
 8019a8c:	ecbd 8b02 	vpop	{d8}
 8019a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019a94:	f894 2026 	ldrb.w	r2, [r4, #38]	; 0x26
 8019a98:	e7cb      	b.n	8019a32 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0xb6>
 8019a9a:	05aa      	lsls	r2, r5, #22
 8019a9c:	d5ce      	bpl.n	8019a3c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0xc0>
 8019a9e:	ea5a 0208 	orrs.w	r2, sl, r8
 8019aa2:	d0cb      	beq.n	8019a3c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0xc0>
 8019aa4:	687a      	ldr	r2, [r7, #4]
 8019aa6:	2a40      	cmp	r2, #64	; 0x40
 8019aa8:	d102      	bne.n	8019ab0 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0x134>
 8019aaa:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 8019aae:	e7c0      	b.n	8019a32 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0xb6>
 8019ab0:	683a      	ldr	r2, [r7, #0]
 8019ab2:	f3c5 3580 	ubfx	r5, r5, #14, #1
 8019ab6:	442a      	add	r2, r5
 8019ab8:	3302      	adds	r3, #2
 8019aba:	7892      	ldrb	r2, [r2, #2]
 8019abc:	f801 2c01 	strb.w	r2, [r1, #-1]
 8019ac0:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 8019ac4:	f801 2c02 	strb.w	r2, [r1, #-2]
 8019ac8:	617b      	str	r3, [r7, #20]
 8019aca:	3902      	subs	r1, #2
 8019acc:	e7b6      	b.n	8019a3c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0xc0>
 8019ace:	f1ba 0f01 	cmp.w	sl, #1
 8019ad2:	f178 0100 	sbcs.w	r1, r8, #0
 8019ad6:	da03      	bge.n	8019ae0 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0x164>
 8019ad8:	f1da 0200 	rsbs	r2, sl, #0
 8019adc:	eb68 0348 	sbc.w	r3, r8, r8, lsl #1
 8019ae0:	2601      	movs	r6, #1
 8019ae2:	e777      	b.n	80199d4 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_+0x58>

08019ae4 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecx>:
 8019ae4:	b530      	push	{r4, r5, lr}
 8019ae6:	b087      	sub	sp, #28
 8019ae8:	ac04      	add	r4, sp, #16
 8019aea:	e884 000c 	stmia.w	r4, {r2, r3}
 8019aee:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8019af2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8019af6:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8019afa:	9301      	str	r3, [sp, #4]
 8019afc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019afe:	9300      	str	r3, [sp, #0]
 8019b00:	e894 000c 	ldmia.w	r4, {r2, r3}
 8019b04:	4605      	mov	r5, r0
 8019b06:	f7ff ff39 	bl	801997c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIxEES3_S3_RSt8ios_basecT_>
 8019b0a:	4628      	mov	r0, r5
 8019b0c:	b007      	add	sp, #28
 8019b0e:	bd30      	pop	{r4, r5, pc}

08019b10 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIyEES3_S3_RSt8ios_basecT_>:
 8019b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b14:	b08d      	sub	sp, #52	; 0x34
 8019b16:	af04      	add	r7, sp, #16
 8019b18:	4689      	mov	r9, r1
 8019b1a:	6cbd      	ldr	r5, [r7, #72]	; 0x48
 8019b1c:	f107 0110 	add.w	r1, r7, #16
 8019b20:	e881 000c 	stmia.w	r1, {r2, r3}
 8019b24:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8019b26:	607b      	str	r3, [r7, #4]
 8019b28:	4680      	mov	r8, r0
 8019b2a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8019b2c:	603b      	str	r3, [r7, #0]
 8019b2e:	f105 016c 	add.w	r1, r5, #108	; 0x6c
 8019b32:	f107 0018 	add.w	r0, r7, #24
 8019b36:	f7ff fcfb 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 8019b3a:	68ee      	ldr	r6, [r5, #12]
 8019b3c:	f006 0a4a 	and.w	sl, r6, #74	; 0x4a
 8019b40:	f100 0326 	add.w	r3, r0, #38	; 0x26
 8019b44:	b08a      	sub	sp, #40	; 0x28
 8019b46:	f1ba 0f40 	cmp.w	sl, #64	; 0x40
 8019b4a:	4604      	mov	r4, r0
 8019b4c:	60bb      	str	r3, [r7, #8]
 8019b4e:	f10d 0b10 	add.w	fp, sp, #16
 8019b52:	d063      	beq.n	8019c1c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIyEES3_S3_RSt8ios_basecT_+0x10c>
 8019b54:	f1ba 0308 	subs.w	r3, sl, #8
 8019b58:	bf18      	it	ne
 8019b5a:	2301      	movne	r3, #1
 8019b5c:	60fb      	str	r3, [r7, #12]
 8019b5e:	68fb      	ldr	r3, [r7, #12]
 8019b60:	e9cd 6301 	strd	r6, r3, [sp, #4]
 8019b64:	68bb      	ldr	r3, [r7, #8]
 8019b66:	9300      	str	r3, [sp, #0]
 8019b68:	f10b 0028 	add.w	r0, fp, #40	; 0x28
 8019b6c:	e9d7 3200 	ldrd	r3, r2, [r7]
 8019b70:	f7ff f947 	bl	8018e02 <_ZSt13__int_to_charIcyEiPT_T0_PKS0_St13_Ios_Fmtflagsb>
 8019b74:	7c23      	ldrb	r3, [r4, #16]
 8019b76:	61f8      	str	r0, [r7, #28]
 8019b78:	f1c0 0128 	rsb	r1, r0, #40	; 0x28
 8019b7c:	4459      	add	r1, fp
 8019b7e:	b1ab      	cbz	r3, 8019bac <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIyEES3_S3_RSt8ios_basecT_+0x9c>
 8019b80:	0040      	lsls	r0, r0, #1
 8019b82:	3009      	adds	r0, #9
 8019b84:	f020 0007 	bic.w	r0, r0, #7
 8019b88:	ebad 0d00 	sub.w	sp, sp, r0
 8019b8c:	f10d 0b12 	add.w	fp, sp, #18
 8019b90:	f107 021c 	add.w	r2, r7, #28
 8019b94:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8019b98:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8019b9c:	e9cd 5b00 	strd	r5, fp, [sp]
 8019ba0:	4648      	mov	r0, r9
 8019ba2:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8019ba6:	f7ff f879 	bl	8018c9c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE12_M_group_intEPKcjcRSt8ios_basePcS9_Ri>
 8019baa:	4659      	mov	r1, fp
 8019bac:	68fb      	ldr	r3, [r7, #12]
 8019bae:	b983      	cbnz	r3, 8019bd2 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIyEES3_S3_RSt8ios_basecT_+0xc2>
 8019bb0:	05b3      	lsls	r3, r6, #22
 8019bb2:	d50e      	bpl.n	8019bd2 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIyEES3_S3_RSt8ios_basecT_+0xc2>
 8019bb4:	e9d7 2300 	ldrd	r2, r3, [r7]
 8019bb8:	4313      	orrs	r3, r2
 8019bba:	d00a      	beq.n	8019bd2 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIyEES3_S3_RSt8ios_basecT_+0xc2>
 8019bbc:	f1ba 0f40 	cmp.w	sl, #64	; 0x40
 8019bc0:	69fb      	ldr	r3, [r7, #28]
 8019bc2:	d12d      	bne.n	8019c20 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIyEES3_S3_RSt8ios_basecT_+0x110>
 8019bc4:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 8019bc8:	f801 2c01 	strb.w	r2, [r1, #-1]
 8019bcc:	3301      	adds	r3, #1
 8019bce:	61fb      	str	r3, [r7, #28]
 8019bd0:	3901      	subs	r1, #1
 8019bd2:	68aa      	ldr	r2, [r5, #8]
 8019bd4:	69fb      	ldr	r3, [r7, #28]
 8019bd6:	4293      	cmp	r3, r2
 8019bd8:	da11      	bge.n	8019bfe <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIyEES3_S3_RSt8ios_basecT_+0xee>
 8019bda:	1dd3      	adds	r3, r2, #7
 8019bdc:	f023 0307 	bic.w	r3, r3, #7
 8019be0:	ebad 0d03 	sub.w	sp, sp, r3
 8019be4:	ac04      	add	r4, sp, #16
 8019be6:	f107 031c 	add.w	r3, r7, #28
 8019bea:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8019bee:	9400      	str	r4, [sp, #0]
 8019bf0:	f897 104c 	ldrb.w	r1, [r7, #76]	; 0x4c
 8019bf4:	462b      	mov	r3, r5
 8019bf6:	4648      	mov	r0, r9
 8019bf8:	f7ff f8c4 	bl	8018d84 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6_M_padEciRSt8ios_basePcPKcRi>
 8019bfc:	4621      	mov	r1, r4
 8019bfe:	2300      	movs	r3, #0
 8019c00:	60ab      	str	r3, [r5, #8]
 8019c02:	69fb      	ldr	r3, [r7, #28]
 8019c04:	9300      	str	r3, [sp, #0]
 8019c06:	4640      	mov	r0, r8
 8019c08:	460b      	mov	r3, r1
 8019c0a:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8019c0e:	f7f7 fe7d 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 8019c12:	4640      	mov	r0, r8
 8019c14:	3724      	adds	r7, #36	; 0x24
 8019c16:	46bd      	mov	sp, r7
 8019c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c1c:	2300      	movs	r3, #0
 8019c1e:	e79d      	b.n	8019b5c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIyEES3_S3_RSt8ios_basecT_+0x4c>
 8019c20:	68ba      	ldr	r2, [r7, #8]
 8019c22:	f3c6 3680 	ubfx	r6, r6, #14, #1
 8019c26:	4432      	add	r2, r6
 8019c28:	3302      	adds	r3, #2
 8019c2a:	7892      	ldrb	r2, [r2, #2]
 8019c2c:	f801 2c01 	strb.w	r2, [r1, #-1]
 8019c30:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 8019c34:	f801 2c02 	strb.w	r2, [r1, #-2]
 8019c38:	61fb      	str	r3, [r7, #28]
 8019c3a:	3902      	subs	r1, #2
 8019c3c:	e7c9      	b.n	8019bd2 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIyEES3_S3_RSt8ios_basecT_+0xc2>

08019c3e <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecy>:
 8019c3e:	b530      	push	{r4, r5, lr}
 8019c40:	b087      	sub	sp, #28
 8019c42:	ac04      	add	r4, sp, #16
 8019c44:	e884 000c 	stmia.w	r4, {r2, r3}
 8019c48:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8019c4c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8019c50:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8019c54:	9301      	str	r3, [sp, #4]
 8019c56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019c58:	9300      	str	r3, [sp, #0]
 8019c5a:	e894 000c 	ldmia.w	r4, {r2, r3}
 8019c5e:	4605      	mov	r5, r0
 8019c60:	f7ff ff56 	bl	8019b10 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intIyEES3_S3_RSt8ios_basecT_>
 8019c64:	4628      	mov	r0, r5
 8019c66:	b007      	add	sp, #28
 8019c68:	bd30      	pop	{r4, r5, pc}

08019c6a <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_>:
 8019c6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c6e:	ed2d 8b02 	vpush	{d8}
 8019c72:	eeb0 8a40 	vmov.f32	s16, s0
 8019c76:	eef0 8a60 	vmov.f32	s17, s1
 8019c7a:	b091      	sub	sp, #68	; 0x44
 8019c7c:	af04      	add	r7, sp, #16
 8019c7e:	468a      	mov	sl, r1
 8019c80:	6e3d      	ldr	r5, [r7, #96]	; 0x60
 8019c82:	f107 0108 	add.w	r1, r7, #8
 8019c86:	f105 0b6c 	add.w	fp, r5, #108	; 0x6c
 8019c8a:	e881 000c 	stmia.w	r1, {r2, r3}
 8019c8e:	4681      	mov	r9, r0
 8019c90:	4659      	mov	r1, fp
 8019c92:	f107 0014 	add.w	r0, r7, #20
 8019c96:	f7ff fc4b 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 8019c9a:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8019c9e:	f897 2068 	ldrb.w	r2, [r7, #104]	; 0x68
 8019ca2:	f1b8 0f00 	cmp.w	r8, #0
 8019ca6:	4606      	mov	r6, r0
 8019ca8:	f107 0120 	add.w	r1, r7, #32
 8019cac:	4628      	mov	r0, r5
 8019cae:	bfb8      	it	lt
 8019cb0:	f04f 0806 	movlt.w	r8, #6
 8019cb4:	f00a ff09 	bl	8024aca <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc>
 8019cb8:	68eb      	ldr	r3, [r5, #12]
 8019cba:	f403 7382 	and.w	r3, r3, #260	; 0x104
 8019cbe:	b08c      	sub	sp, #48	; 0x30
 8019cc0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8019cc4:	607b      	str	r3, [r7, #4]
 8019cc6:	ac04      	add	r4, sp, #16
 8019cc8:	f000 80b4 	beq.w	8019e34 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x1ca>
 8019ccc:	f7f2 fb06 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8019cd0:	ed8d 8b02 	vstr	d8, [sp, #8]
 8019cd4:	61f8      	str	r0, [r7, #28]
 8019cd6:	f8cd 8000 	str.w	r8, [sp]
 8019cda:	f107 0320 	add.w	r3, r7, #32
 8019cde:	222d      	movs	r2, #45	; 0x2d
 8019ce0:	4621      	mov	r1, r4
 8019ce2:	f107 001c 	add.w	r0, r7, #28
 8019ce6:	f7f7 fbf1 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 8019cea:	61b8      	str	r0, [r7, #24]
 8019cec:	69bb      	ldr	r3, [r7, #24]
 8019cee:	2b2c      	cmp	r3, #44	; 0x2c
 8019cf0:	dd1c      	ble.n	8019d2c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0xc2>
 8019cf2:	1c5a      	adds	r2, r3, #1
 8019cf4:	3308      	adds	r3, #8
 8019cf6:	f023 0307 	bic.w	r3, r3, #7
 8019cfa:	ebad 0d03 	sub.w	sp, sp, r3
 8019cfe:	687b      	ldr	r3, [r7, #4]
 8019d00:	607a      	str	r2, [r7, #4]
 8019d02:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8019d06:	ac04      	add	r4, sp, #16
 8019d08:	f000 80a2 	beq.w	8019e50 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x1e6>
 8019d0c:	f7f2 fae6 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8019d10:	ed8d 8b02 	vstr	d8, [sp, #8]
 8019d14:	61f8      	str	r0, [r7, #28]
 8019d16:	687a      	ldr	r2, [r7, #4]
 8019d18:	f8cd 8000 	str.w	r8, [sp]
 8019d1c:	f107 0320 	add.w	r3, r7, #32
 8019d20:	4621      	mov	r1, r4
 8019d22:	f107 001c 	add.w	r0, r7, #28
 8019d26:	f7f7 fbd1 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 8019d2a:	61b8      	str	r0, [r7, #24]
 8019d2c:	4658      	mov	r0, fp
 8019d2e:	f7fe fc3d 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8019d32:	69ba      	ldr	r2, [r7, #24]
 8019d34:	1dd3      	adds	r3, r2, #7
 8019d36:	f023 0307 	bic.w	r3, r3, #7
 8019d3a:	ebad 0d03 	sub.w	sp, sp, r3
 8019d3e:	f10d 0b17 	add.w	fp, sp, #23
 8019d42:	ea4f 08db 	mov.w	r8, fp, lsr #3
 8019d46:	f02b 0b07 	bic.w	fp, fp, #7
 8019d4a:	465b      	mov	r3, fp
 8019d4c:	4422      	add	r2, r4
 8019d4e:	4621      	mov	r1, r4
 8019d50:	f7f7 fc08 	bl	8011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>
 8019d54:	69b9      	ldr	r1, [r7, #24]
 8019d56:	6079      	str	r1, [r7, #4]
 8019d58:	232e      	movs	r3, #46	; 0x2e
 8019d5a:	f107 021c 	add.w	r2, r7, #28
 8019d5e:	4620      	mov	r0, r4
 8019d60:	773b      	strb	r3, [r7, #28]
 8019d62:	f7f6 f823 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 8019d66:	6879      	ldr	r1, [r7, #4]
 8019d68:	b130      	cbz	r0, 8019d78 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x10e>
 8019d6a:	1b03      	subs	r3, r0, r4
 8019d6c:	f896 2024 	ldrb.w	r2, [r6, #36]	; 0x24
 8019d70:	f803 2038 	strb.w	r2, [r3, r8, lsl #3]
 8019d74:	eb0b 0003 	add.w	r0, fp, r3
 8019d78:	7c33      	ldrb	r3, [r6, #16]
 8019d7a:	b39b      	cbz	r3, 8019de4 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x17a>
 8019d7c:	b948      	cbnz	r0, 8019d92 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x128>
 8019d7e:	2902      	cmp	r1, #2
 8019d80:	dd07      	ble.n	8019d92 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x128>
 8019d82:	7863      	ldrb	r3, [r4, #1]
 8019d84:	3b30      	subs	r3, #48	; 0x30
 8019d86:	2b09      	cmp	r3, #9
 8019d88:	d82c      	bhi.n	8019de4 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x17a>
 8019d8a:	78a3      	ldrb	r3, [r4, #2]
 8019d8c:	3b30      	subs	r3, #48	; 0x30
 8019d8e:	2b09      	cmp	r3, #9
 8019d90:	d828      	bhi.n	8019de4 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x17a>
 8019d92:	004b      	lsls	r3, r1, #1
 8019d94:	3307      	adds	r3, #7
 8019d96:	f023 0307 	bic.w	r3, r3, #7
 8019d9a:	ebad 0d03 	sub.w	sp, sp, r3
 8019d9e:	7823      	ldrb	r3, [r4, #0]
 8019da0:	2b2d      	cmp	r3, #45	; 0x2d
 8019da2:	f10d 0810 	add.w	r8, sp, #16
 8019da6:	d001      	beq.n	8019dac <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x142>
 8019da8:	2b2b      	cmp	r3, #43	; 0x2b
 8019daa:	d15f      	bne.n	8019e6c <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x202>
 8019dac:	f89b 3000 	ldrb.w	r3, [fp]
 8019db0:	f888 3000 	strb.w	r3, [r8]
 8019db4:	3901      	subs	r1, #1
 8019db6:	61b9      	str	r1, [r7, #24]
 8019db8:	2401      	movs	r4, #1
 8019dba:	f107 0218 	add.w	r2, r7, #24
 8019dbe:	f896 3025 	ldrb.w	r3, [r6, #37]	; 0x25
 8019dc2:	9203      	str	r2, [sp, #12]
 8019dc4:	eb0b 0204 	add.w	r2, fp, r4
 8019dc8:	9202      	str	r2, [sp, #8]
 8019dca:	eb08 0204 	add.w	r2, r8, r4
 8019dce:	e9cd 0200 	strd	r0, r2, [sp]
 8019dd2:	4650      	mov	r0, sl
 8019dd4:	e9d6 1202 	ldrd	r1, r2, [r6, #8]
 8019dd8:	f7fe ff3e 	bl	8018c58 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE14_M_group_floatEPKcjcS6_PcS7_Ri>
 8019ddc:	69bb      	ldr	r3, [r7, #24]
 8019dde:	4423      	add	r3, r4
 8019de0:	61bb      	str	r3, [r7, #24]
 8019de2:	46c3      	mov	fp, r8
 8019de4:	68aa      	ldr	r2, [r5, #8]
 8019de6:	69bb      	ldr	r3, [r7, #24]
 8019de8:	4293      	cmp	r3, r2
 8019dea:	da11      	bge.n	8019e10 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x1a6>
 8019dec:	1dd3      	adds	r3, r2, #7
 8019dee:	f023 0307 	bic.w	r3, r3, #7
 8019df2:	ebad 0d03 	sub.w	sp, sp, r3
 8019df6:	ac04      	add	r4, sp, #16
 8019df8:	f107 0318 	add.w	r3, r7, #24
 8019dfc:	e9cd b301 	strd	fp, r3, [sp, #4]
 8019e00:	f897 1064 	ldrb.w	r1, [r7, #100]	; 0x64
 8019e04:	9400      	str	r4, [sp, #0]
 8019e06:	462b      	mov	r3, r5
 8019e08:	4650      	mov	r0, sl
 8019e0a:	f7fe ffbb 	bl	8018d84 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6_M_padEciRSt8ios_basePcPKcRi>
 8019e0e:	46a3      	mov	fp, r4
 8019e10:	2300      	movs	r3, #0
 8019e12:	60ab      	str	r3, [r5, #8]
 8019e14:	69bb      	ldr	r3, [r7, #24]
 8019e16:	9300      	str	r3, [sp, #0]
 8019e18:	f107 0208 	add.w	r2, r7, #8
 8019e1c:	4648      	mov	r0, r9
 8019e1e:	ca06      	ldmia	r2, {r1, r2}
 8019e20:	465b      	mov	r3, fp
 8019e22:	f7f7 fd73 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 8019e26:	4648      	mov	r0, r9
 8019e28:	3734      	adds	r7, #52	; 0x34
 8019e2a:	46bd      	mov	sp, r7
 8019e2c:	ecbd 8b02 	vpop	{d8}
 8019e30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e34:	f7f2 fa52 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8019e38:	ed8d 8b00 	vstr	d8, [sp]
 8019e3c:	61f8      	str	r0, [r7, #28]
 8019e3e:	f107 0320 	add.w	r3, r7, #32
 8019e42:	222d      	movs	r2, #45	; 0x2d
 8019e44:	4621      	mov	r1, r4
 8019e46:	f107 001c 	add.w	r0, r7, #28
 8019e4a:	f7f7 fb3f 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 8019e4e:	e74c      	b.n	8019cea <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x80>
 8019e50:	f7f2 fa44 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8019e54:	ed8d 8b00 	vstr	d8, [sp]
 8019e58:	61f8      	str	r0, [r7, #28]
 8019e5a:	687a      	ldr	r2, [r7, #4]
 8019e5c:	f107 0320 	add.w	r3, r7, #32
 8019e60:	4621      	mov	r1, r4
 8019e62:	f107 001c 	add.w	r0, r7, #28
 8019e66:	f7f7 fb31 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 8019e6a:	e75e      	b.n	8019d2a <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0xc0>
 8019e6c:	2400      	movs	r4, #0
 8019e6e:	e7a4      	b.n	8019dba <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_+0x150>

08019e70 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd>:
 8019e70:	b530      	push	{r4, r5, lr}
 8019e72:	b087      	sub	sp, #28
 8019e74:	ac04      	add	r4, sp, #16
 8019e76:	e884 000c 	stmia.w	r4, {r2, r3}
 8019e7a:	2300      	movs	r3, #0
 8019e7c:	9302      	str	r3, [sp, #8]
 8019e7e:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8019e82:	9301      	str	r3, [sp, #4]
 8019e84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019e86:	9300      	str	r3, [sp, #0]
 8019e88:	e894 000c 	ldmia.w	r4, {r2, r3}
 8019e8c:	4605      	mov	r5, r0
 8019e8e:	f7ff feec 	bl	8019c6a <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_>
 8019e92:	4628      	mov	r0, r5
 8019e94:	b007      	add	sp, #28
 8019e96:	bd30      	pop	{r4, r5, pc}

08019e98 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_>:
 8019e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e9c:	ed2d 8b02 	vpush	{d8}
 8019ea0:	eeb0 8a40 	vmov.f32	s16, s0
 8019ea4:	eef0 8a60 	vmov.f32	s17, s1
 8019ea8:	b091      	sub	sp, #68	; 0x44
 8019eaa:	af04      	add	r7, sp, #16
 8019eac:	468a      	mov	sl, r1
 8019eae:	6e3d      	ldr	r5, [r7, #96]	; 0x60
 8019eb0:	f107 0108 	add.w	r1, r7, #8
 8019eb4:	f105 0b6c 	add.w	fp, r5, #108	; 0x6c
 8019eb8:	e881 000c 	stmia.w	r1, {r2, r3}
 8019ebc:	4681      	mov	r9, r0
 8019ebe:	4659      	mov	r1, fp
 8019ec0:	f107 0014 	add.w	r0, r7, #20
 8019ec4:	f7ff fb34 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 8019ec8:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8019ecc:	f897 2068 	ldrb.w	r2, [r7, #104]	; 0x68
 8019ed0:	f1b8 0f00 	cmp.w	r8, #0
 8019ed4:	4606      	mov	r6, r0
 8019ed6:	f107 0120 	add.w	r1, r7, #32
 8019eda:	4628      	mov	r0, r5
 8019edc:	bfb8      	it	lt
 8019ede:	f04f 0806 	movlt.w	r8, #6
 8019ee2:	f00a fdf2 	bl	8024aca <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc>
 8019ee6:	68eb      	ldr	r3, [r5, #12]
 8019ee8:	f403 7382 	and.w	r3, r3, #260	; 0x104
 8019eec:	b08c      	sub	sp, #48	; 0x30
 8019eee:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8019ef2:	607b      	str	r3, [r7, #4]
 8019ef4:	ac04      	add	r4, sp, #16
 8019ef6:	f000 80b4 	beq.w	801a062 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x1ca>
 8019efa:	f7f2 f9ef 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8019efe:	ed8d 8b02 	vstr	d8, [sp, #8]
 8019f02:	61f8      	str	r0, [r7, #28]
 8019f04:	f8cd 8000 	str.w	r8, [sp]
 8019f08:	f107 0320 	add.w	r3, r7, #32
 8019f0c:	222d      	movs	r2, #45	; 0x2d
 8019f0e:	4621      	mov	r1, r4
 8019f10:	f107 001c 	add.w	r0, r7, #28
 8019f14:	f7f7 fada 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 8019f18:	61b8      	str	r0, [r7, #24]
 8019f1a:	69bb      	ldr	r3, [r7, #24]
 8019f1c:	2b2c      	cmp	r3, #44	; 0x2c
 8019f1e:	dd1c      	ble.n	8019f5a <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0xc2>
 8019f20:	1c5a      	adds	r2, r3, #1
 8019f22:	3308      	adds	r3, #8
 8019f24:	f023 0307 	bic.w	r3, r3, #7
 8019f28:	ebad 0d03 	sub.w	sp, sp, r3
 8019f2c:	687b      	ldr	r3, [r7, #4]
 8019f2e:	607a      	str	r2, [r7, #4]
 8019f30:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8019f34:	ac04      	add	r4, sp, #16
 8019f36:	f000 80a2 	beq.w	801a07e <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x1e6>
 8019f3a:	f7f2 f9cf 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8019f3e:	ed8d 8b02 	vstr	d8, [sp, #8]
 8019f42:	61f8      	str	r0, [r7, #28]
 8019f44:	687a      	ldr	r2, [r7, #4]
 8019f46:	f8cd 8000 	str.w	r8, [sp]
 8019f4a:	f107 0320 	add.w	r3, r7, #32
 8019f4e:	4621      	mov	r1, r4
 8019f50:	f107 001c 	add.w	r0, r7, #28
 8019f54:	f7f7 faba 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 8019f58:	61b8      	str	r0, [r7, #24]
 8019f5a:	4658      	mov	r0, fp
 8019f5c:	f7fe fb26 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 8019f60:	69ba      	ldr	r2, [r7, #24]
 8019f62:	1dd3      	adds	r3, r2, #7
 8019f64:	f023 0307 	bic.w	r3, r3, #7
 8019f68:	ebad 0d03 	sub.w	sp, sp, r3
 8019f6c:	f10d 0b17 	add.w	fp, sp, #23
 8019f70:	ea4f 08db 	mov.w	r8, fp, lsr #3
 8019f74:	f02b 0b07 	bic.w	fp, fp, #7
 8019f78:	465b      	mov	r3, fp
 8019f7a:	4422      	add	r2, r4
 8019f7c:	4621      	mov	r1, r4
 8019f7e:	f7f7 faf1 	bl	8011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>
 8019f82:	69b9      	ldr	r1, [r7, #24]
 8019f84:	6079      	str	r1, [r7, #4]
 8019f86:	232e      	movs	r3, #46	; 0x2e
 8019f88:	f107 021c 	add.w	r2, r7, #28
 8019f8c:	4620      	mov	r0, r4
 8019f8e:	773b      	strb	r3, [r7, #28]
 8019f90:	f7f5 ff0c 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 8019f94:	6879      	ldr	r1, [r7, #4]
 8019f96:	b130      	cbz	r0, 8019fa6 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x10e>
 8019f98:	1b03      	subs	r3, r0, r4
 8019f9a:	f896 2024 	ldrb.w	r2, [r6, #36]	; 0x24
 8019f9e:	f803 2038 	strb.w	r2, [r3, r8, lsl #3]
 8019fa2:	eb0b 0003 	add.w	r0, fp, r3
 8019fa6:	7c33      	ldrb	r3, [r6, #16]
 8019fa8:	b39b      	cbz	r3, 801a012 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x17a>
 8019faa:	b948      	cbnz	r0, 8019fc0 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x128>
 8019fac:	2902      	cmp	r1, #2
 8019fae:	dd07      	ble.n	8019fc0 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x128>
 8019fb0:	7863      	ldrb	r3, [r4, #1]
 8019fb2:	3b30      	subs	r3, #48	; 0x30
 8019fb4:	2b09      	cmp	r3, #9
 8019fb6:	d82c      	bhi.n	801a012 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x17a>
 8019fb8:	78a3      	ldrb	r3, [r4, #2]
 8019fba:	3b30      	subs	r3, #48	; 0x30
 8019fbc:	2b09      	cmp	r3, #9
 8019fbe:	d828      	bhi.n	801a012 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x17a>
 8019fc0:	004b      	lsls	r3, r1, #1
 8019fc2:	3307      	adds	r3, #7
 8019fc4:	f023 0307 	bic.w	r3, r3, #7
 8019fc8:	ebad 0d03 	sub.w	sp, sp, r3
 8019fcc:	7823      	ldrb	r3, [r4, #0]
 8019fce:	2b2d      	cmp	r3, #45	; 0x2d
 8019fd0:	f10d 0810 	add.w	r8, sp, #16
 8019fd4:	d001      	beq.n	8019fda <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x142>
 8019fd6:	2b2b      	cmp	r3, #43	; 0x2b
 8019fd8:	d15f      	bne.n	801a09a <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x202>
 8019fda:	f89b 3000 	ldrb.w	r3, [fp]
 8019fde:	f888 3000 	strb.w	r3, [r8]
 8019fe2:	3901      	subs	r1, #1
 8019fe4:	61b9      	str	r1, [r7, #24]
 8019fe6:	2401      	movs	r4, #1
 8019fe8:	f107 0218 	add.w	r2, r7, #24
 8019fec:	f896 3025 	ldrb.w	r3, [r6, #37]	; 0x25
 8019ff0:	9203      	str	r2, [sp, #12]
 8019ff2:	eb0b 0204 	add.w	r2, fp, r4
 8019ff6:	9202      	str	r2, [sp, #8]
 8019ff8:	eb08 0204 	add.w	r2, r8, r4
 8019ffc:	e9cd 0200 	strd	r0, r2, [sp]
 801a000:	4650      	mov	r0, sl
 801a002:	e9d6 1202 	ldrd	r1, r2, [r6, #8]
 801a006:	f7fe fe27 	bl	8018c58 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE14_M_group_floatEPKcjcS6_PcS7_Ri>
 801a00a:	69bb      	ldr	r3, [r7, #24]
 801a00c:	4423      	add	r3, r4
 801a00e:	61bb      	str	r3, [r7, #24]
 801a010:	46c3      	mov	fp, r8
 801a012:	68aa      	ldr	r2, [r5, #8]
 801a014:	69bb      	ldr	r3, [r7, #24]
 801a016:	4293      	cmp	r3, r2
 801a018:	da11      	bge.n	801a03e <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x1a6>
 801a01a:	1dd3      	adds	r3, r2, #7
 801a01c:	f023 0307 	bic.w	r3, r3, #7
 801a020:	ebad 0d03 	sub.w	sp, sp, r3
 801a024:	ac04      	add	r4, sp, #16
 801a026:	f107 0318 	add.w	r3, r7, #24
 801a02a:	e9cd b301 	strd	fp, r3, [sp, #4]
 801a02e:	f897 1064 	ldrb.w	r1, [r7, #100]	; 0x64
 801a032:	9400      	str	r4, [sp, #0]
 801a034:	462b      	mov	r3, r5
 801a036:	4650      	mov	r0, sl
 801a038:	f7fe fea4 	bl	8018d84 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6_M_padEciRSt8ios_basePcPKcRi>
 801a03c:	46a3      	mov	fp, r4
 801a03e:	2300      	movs	r3, #0
 801a040:	60ab      	str	r3, [r5, #8]
 801a042:	69bb      	ldr	r3, [r7, #24]
 801a044:	9300      	str	r3, [sp, #0]
 801a046:	f107 0208 	add.w	r2, r7, #8
 801a04a:	4648      	mov	r0, r9
 801a04c:	ca06      	ldmia	r2, {r1, r2}
 801a04e:	465b      	mov	r3, fp
 801a050:	f7f7 fc5c 	bl	801190c <_ZSt7__writeIcESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 801a054:	4648      	mov	r0, r9
 801a056:	3734      	adds	r7, #52	; 0x34
 801a058:	46bd      	mov	sp, r7
 801a05a:	ecbd 8b02 	vpop	{d8}
 801a05e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a062:	f7f2 f93b 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 801a066:	ed8d 8b00 	vstr	d8, [sp]
 801a06a:	61f8      	str	r0, [r7, #28]
 801a06c:	f107 0320 	add.w	r3, r7, #32
 801a070:	222d      	movs	r2, #45	; 0x2d
 801a072:	4621      	mov	r1, r4
 801a074:	f107 001c 	add.w	r0, r7, #28
 801a078:	f7f7 fa28 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 801a07c:	e74c      	b.n	8019f18 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x80>
 801a07e:	f7f2 f92d 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 801a082:	ed8d 8b00 	vstr	d8, [sp]
 801a086:	61f8      	str	r0, [r7, #28]
 801a088:	687a      	ldr	r2, [r7, #4]
 801a08a:	f107 0320 	add.w	r3, r7, #32
 801a08e:	4621      	mov	r1, r4
 801a090:	f107 001c 	add.w	r0, r7, #28
 801a094:	f7f7 fa1a 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 801a098:	e75e      	b.n	8019f58 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0xc0>
 801a09a:	2400      	movs	r4, #0
 801a09c:	e7a4      	b.n	8019fe8 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_+0x150>

0801a09e <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basece>:
 801a09e:	b530      	push	{r4, r5, lr}
 801a0a0:	b087      	sub	sp, #28
 801a0a2:	ac04      	add	r4, sp, #16
 801a0a4:	e884 000c 	stmia.w	r4, {r2, r3}
 801a0a8:	234c      	movs	r3, #76	; 0x4c
 801a0aa:	9302      	str	r3, [sp, #8]
 801a0ac:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 801a0b0:	9301      	str	r3, [sp, #4]
 801a0b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a0b4:	9300      	str	r3, [sp, #0]
 801a0b6:	e894 000c 	ldmia.w	r4, {r2, r3}
 801a0ba:	4605      	mov	r5, r0
 801a0bc:	f7ff feec 	bl	8019e98 <_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIeEES3_S3_RSt8ios_baseccT_>
 801a0c0:	4628      	mov	r0, r5
 801a0c2:	b007      	add	sp, #28
 801a0c4:	bd30      	pop	{r4, r5, pc}

0801a0c6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>:
 801a0c6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0ca:	4605      	mov	r5, r0
 801a0cc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801a0d0:	a902      	add	r1, sp, #8
 801a0d2:	306c      	adds	r0, #108	; 0x6c
 801a0d4:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 801a0d8:	e901 000c 	stmdb	r1, {r2, r3}
 801a0dc:	f7fe fa66 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 801a0e0:	f1b9 0f02 	cmp.w	r9, #2
 801a0e4:	4682      	mov	sl, r0
 801a0e6:	d02f      	beq.n	801a148 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x82>
 801a0e8:	f1b9 0f04 	cmp.w	r9, #4
 801a0ec:	bf0c      	ite	eq
 801a0ee:	f44f 777a 	moveq.w	r7, #1000	; 0x3e8
 801a0f2:	2701      	movne	r7, #1
 801a0f4:	2400      	movs	r4, #0
 801a0f6:	46a0      	mov	r8, r4
 801a0f8:	f04f 0b0a 	mov.w	fp, #10
 801a0fc:	a90c      	add	r1, sp, #48	; 0x30
 801a0fe:	4668      	mov	r0, sp
 801a100:	f7f7 ff1c 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801a104:	b310      	cbz	r0, 801a14c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x86>
 801a106:	45c8      	cmp	r8, r9
 801a108:	d022      	beq.n	801a150 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x8a>
 801a10a:	4668      	mov	r0, sp
 801a10c:	f7f7 fef4 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801a110:	222a      	movs	r2, #42	; 0x2a
 801a112:	b2c1      	uxtb	r1, r0
 801a114:	4650      	mov	r0, sl
 801a116:	f7f7 fa44 	bl	80115a2 <_ZNKSt5ctypeIcE6narrowEcc>
 801a11a:	3830      	subs	r0, #48	; 0x30
 801a11c:	b2c2      	uxtb	r2, r0
 801a11e:	2a09      	cmp	r2, #9
 801a120:	d821      	bhi.n	801a166 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 801a122:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a124:	fb0b 0404 	mla	r4, fp, r4, r0
 801a128:	fb04 f207 	mul.w	r2, r4, r7
 801a12c:	429a      	cmp	r2, r3
 801a12e:	dc1a      	bgt.n	801a166 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 801a130:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a132:	443a      	add	r2, r7
 801a134:	429a      	cmp	r2, r3
 801a136:	dd16      	ble.n	801a166 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 801a138:	fbb7 f7fb 	udiv	r7, r7, fp
 801a13c:	4668      	mov	r0, sp
 801a13e:	f7fe feae 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801a142:	f108 0801 	add.w	r8, r8, #1
 801a146:	e7d9      	b.n	801a0fc <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x36>
 801a148:	270a      	movs	r7, #10
 801a14a:	e7d3      	b.n	801a0f4 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x2e>
 801a14c:	45c8      	cmp	r8, r9
 801a14e:	d10a      	bne.n	801a166 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 801a150:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a152:	601c      	str	r4, [r3, #0]
 801a154:	ab02      	add	r3, sp, #8
 801a156:	e913 0003 	ldmdb	r3, {r0, r1}
 801a15a:	e885 0003 	stmia.w	r5, {r0, r1}
 801a15e:	4628      	mov	r0, r5
 801a160:	b003      	add	sp, #12
 801a162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a166:	f1b9 0f04 	cmp.w	r9, #4
 801a16a:	d104      	bne.n	801a176 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xb0>
 801a16c:	f1b8 0f02 	cmp.w	r8, #2
 801a170:	d101      	bne.n	801a176 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xb0>
 801a172:	3c64      	subs	r4, #100	; 0x64
 801a174:	e7ec      	b.n	801a150 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x8a>
 801a176:	6833      	ldr	r3, [r6, #0]
 801a178:	f043 0304 	orr.w	r3, r3, #4
 801a17c:	6033      	str	r3, [r6, #0]
 801a17e:	e7e9      	b.n	801a154 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x8e>

0801a180 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>:
 801a180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a184:	b085      	sub	sp, #20
 801a186:	af00      	add	r7, sp, #0
 801a188:	f107 0408 	add.w	r4, r7, #8
 801a18c:	6078      	str	r0, [r7, #4]
 801a18e:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 801a190:	f8d7 9044 	ldr.w	r9, [r7, #68]	; 0x44
 801a194:	306c      	adds	r0, #108	; 0x6c
 801a196:	e884 000c 	stmia.w	r4, {r2, r3}
 801a19a:	f7fe fa07 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 801a19e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801a1a0:	009b      	lsls	r3, r3, #2
 801a1a2:	3307      	adds	r3, #7
 801a1a4:	f023 0307 	bic.w	r3, r3, #7
 801a1a8:	4682      	mov	sl, r0
 801a1aa:	ebad 0d03 	sub.w	sp, sp, r3
 801a1ae:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801a1b2:	4620      	mov	r0, r4
 801a1b4:	466e      	mov	r6, sp
 801a1b6:	f7f7 fec1 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801a1ba:	2800      	cmp	r0, #0
 801a1bc:	d043      	beq.n	801a246 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xc6>
 801a1be:	4620      	mov	r0, r4
 801a1c0:	f7f7 fe9a 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801a1c4:	f04f 0800 	mov.w	r8, #0
 801a1c8:	fa5f fb80 	uxtb.w	fp, r0
 801a1cc:	4645      	mov	r5, r8
 801a1ce:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801a1d0:	4598      	cmp	r8, r3
 801a1d2:	d010      	beq.n	801a1f6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x76>
 801a1d4:	f859 1028 	ldr.w	r1, [r9, r8, lsl #2]
 801a1d8:	7809      	ldrb	r1, [r1, #0]
 801a1da:	4559      	cmp	r1, fp
 801a1dc:	d105      	bne.n	801a1ea <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x6a>
 801a1de:	f846 8025 	str.w	r8, [r6, r5, lsl #2]
 801a1e2:	3501      	adds	r5, #1
 801a1e4:	f108 0801 	add.w	r8, r8, #1
 801a1e8:	e7f1      	b.n	801a1ce <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x4e>
 801a1ea:	4650      	mov	r0, sl
 801a1ec:	f7f7 f9a6 	bl	801153c <_ZNKSt5ctypeIcE7toupperEc>
 801a1f0:	4558      	cmp	r0, fp
 801a1f2:	d1f7      	bne.n	801a1e4 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x64>
 801a1f4:	e7f3      	b.n	801a1de <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x5e>
 801a1f6:	f04f 0a00 	mov.w	sl, #0
 801a1fa:	2d01      	cmp	r5, #1
 801a1fc:	d94e      	bls.n	801a29c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x11c>
 801a1fe:	46b0      	mov	r8, r6
 801a200:	f858 3b04 	ldr.w	r3, [r8], #4
 801a204:	f859 0023 	ldr.w	r0, [r9, r3, lsl #2]
 801a208:	f7e6 f83c 	bl	8000284 <strlen>
 801a20c:	eb06 0185 	add.w	r1, r6, r5, lsl #2
 801a210:	4683      	mov	fp, r0
 801a212:	f858 0b04 	ldr.w	r0, [r8], #4
 801a216:	6039      	str	r1, [r7, #0]
 801a218:	f859 0020 	ldr.w	r0, [r9, r0, lsl #2]
 801a21c:	f7e6 f832 	bl	8000284 <strlen>
 801a220:	6839      	ldr	r1, [r7, #0]
 801a222:	4583      	cmp	fp, r0
 801a224:	bf28      	it	cs
 801a226:	4683      	movcs	fp, r0
 801a228:	4541      	cmp	r1, r8
 801a22a:	d1f2      	bne.n	801a212 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x92>
 801a22c:	4620      	mov	r0, r4
 801a22e:	f10a 0a01 	add.w	sl, sl, #1
 801a232:	f7fe fe34 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801a236:	45da      	cmp	sl, fp
 801a238:	d205      	bcs.n	801a246 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xc6>
 801a23a:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801a23e:	4620      	mov	r0, r4
 801a240:	f7f7 fe7c 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801a244:	b978      	cbnz	r0, 801a266 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xe6>
 801a246:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801a248:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 801a24a:	681b      	ldr	r3, [r3, #0]
 801a24c:	f043 0304 	orr.w	r3, r3, #4
 801a250:	6013      	str	r3, [r2, #0]
 801a252:	e894 0003 	ldmia.w	r4, {r0, r1}
 801a256:	687b      	ldr	r3, [r7, #4]
 801a258:	3714      	adds	r7, #20
 801a25a:	e883 0003 	stmia.w	r3, {r0, r1}
 801a25e:	4618      	mov	r0, r3
 801a260:	46bd      	mov	sp, r7
 801a262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a266:	f04f 0b00 	mov.w	fp, #0
 801a26a:	f856 202b 	ldr.w	r2, [r6, fp, lsl #2]
 801a26e:	f859 2022 	ldr.w	r2, [r9, r2, lsl #2]
 801a272:	4620      	mov	r0, r4
 801a274:	f812 200a 	ldrb.w	r2, [r2, sl]
 801a278:	603a      	str	r2, [r7, #0]
 801a27a:	f7f7 fe3d 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801a27e:	683a      	ldr	r2, [r7, #0]
 801a280:	b2c0      	uxtb	r0, r0
 801a282:	4282      	cmp	r2, r0
 801a284:	bf17      	itett	ne
 801a286:	f105 35ff 	addne.w	r5, r5, #4294967295	; 0xffffffff
 801a28a:	f10b 0b01 	addeq.w	fp, fp, #1
 801a28e:	f856 2025 	ldrne.w	r2, [r6, r5, lsl #2]
 801a292:	f846 202b 	strne.w	r2, [r6, fp, lsl #2]
 801a296:	455d      	cmp	r5, fp
 801a298:	d8e7      	bhi.n	801a26a <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xea>
 801a29a:	e7ae      	b.n	801a1fa <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x7a>
 801a29c:	d1d3      	bne.n	801a246 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xc6>
 801a29e:	4620      	mov	r0, r4
 801a2a0:	f7fe fdfd 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801a2a4:	6836      	ldr	r6, [r6, #0]
 801a2a6:	f859 9026 	ldr.w	r9, [r9, r6, lsl #2]
 801a2aa:	4648      	mov	r0, r9
 801a2ac:	f7e5 ffea 	bl	8000284 <strlen>
 801a2b0:	f10a 0a01 	add.w	sl, sl, #1
 801a2b4:	4605      	mov	r5, r0
 801a2b6:	45aa      	cmp	sl, r5
 801a2b8:	d214      	bcs.n	801a2e4 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x164>
 801a2ba:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801a2be:	4620      	mov	r0, r4
 801a2c0:	f7f7 fe3c 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801a2c4:	2800      	cmp	r0, #0
 801a2c6:	d0be      	beq.n	801a246 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xc6>
 801a2c8:	4620      	mov	r0, r4
 801a2ca:	f819 b00a 	ldrb.w	fp, [r9, sl]
 801a2ce:	f7f7 fe13 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801a2d2:	b2c0      	uxtb	r0, r0
 801a2d4:	4583      	cmp	fp, r0
 801a2d6:	d1b6      	bne.n	801a246 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xc6>
 801a2d8:	4620      	mov	r0, r4
 801a2da:	f7fe fde0 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801a2de:	f10a 0a01 	add.w	sl, sl, #1
 801a2e2:	e7e8      	b.n	801a2b6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x136>
 801a2e4:	d1af      	bne.n	801a246 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xc6>
 801a2e6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801a2e8:	601e      	str	r6, [r3, #0]
 801a2ea:	e7b2      	b.n	801a252 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xd2>

0801a2ec <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>:
 801a2ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2f0:	b087      	sub	sp, #28
 801a2f2:	af00      	add	r7, sp, #0
 801a2f4:	4681      	mov	r9, r0
 801a2f6:	6d78      	ldr	r0, [r7, #84]	; 0x54
 801a2f8:	e9d7 ab13 	ldrd	sl, fp, [r7, #76]	; 0x4c
 801a2fc:	f107 0410 	add.w	r4, r7, #16
 801a300:	306c      	adds	r0, #108	; 0x6c
 801a302:	e884 000c 	stmia.w	r4, {r2, r3}
 801a306:	f7fe f951 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 801a30a:	466b      	mov	r3, sp
 801a30c:	eba3 03cb 	sub.w	r3, r3, fp, lsl #3
 801a310:	4606      	mov	r6, r0
 801a312:	469d      	mov	sp, r3
 801a314:	f107 0140 	add.w	r1, r7, #64	; 0x40
 801a318:	4620      	mov	r0, r4
 801a31a:	46e8      	mov	r8, sp
 801a31c:	f7f7 fe0e 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801a320:	b3c0      	cbz	r0, 801a394 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xa8>
 801a322:	4620      	mov	r0, r4
 801a324:	f7f7 fde8 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801a328:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801a32c:	60fb      	str	r3, [r7, #12]
 801a32e:	2300      	movs	r3, #0
 801a330:	b2c2      	uxtb	r2, r0
 801a332:	461d      	mov	r5, r3
 801a334:	68f9      	ldr	r1, [r7, #12]
 801a336:	4299      	cmp	r1, r3
 801a338:	d013      	beq.n	801a362 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x76>
 801a33a:	f85a 1023 	ldr.w	r1, [sl, r3, lsl #2]
 801a33e:	7809      	ldrb	r1, [r1, #0]
 801a340:	4291      	cmp	r1, r2
 801a342:	d104      	bne.n	801a34e <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x62>
 801a344:	f848 3025 	str.w	r3, [r8, r5, lsl #2]
 801a348:	3501      	adds	r5, #1
 801a34a:	3301      	adds	r3, #1
 801a34c:	e7f2      	b.n	801a334 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x48>
 801a34e:	4630      	mov	r0, r6
 801a350:	e9c7 2301 	strd	r2, r3, [r7, #4]
 801a354:	f7f7 f8f2 	bl	801153c <_ZNKSt5ctypeIcE7toupperEc>
 801a358:	687a      	ldr	r2, [r7, #4]
 801a35a:	68bb      	ldr	r3, [r7, #8]
 801a35c:	4290      	cmp	r0, r2
 801a35e:	d1f4      	bne.n	801a34a <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x5e>
 801a360:	e7f0      	b.n	801a344 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x58>
 801a362:	b1bd      	cbz	r5, 801a394 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xa8>
 801a364:	4620      	mov	r0, r4
 801a366:	f7fe fd9a 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801a36a:	00ab      	lsls	r3, r5, #2
 801a36c:	3307      	adds	r3, #7
 801a36e:	f023 0307 	bic.w	r3, r3, #7
 801a372:	ebad 0d03 	sub.w	sp, sp, r3
 801a376:	466e      	mov	r6, sp
 801a378:	2400      	movs	r4, #0
 801a37a:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 801a37e:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 801a382:	f7e5 ff7f 	bl	8000284 <strlen>
 801a386:	f846 0024 	str.w	r0, [r6, r4, lsl #2]
 801a38a:	3401      	adds	r4, #1
 801a38c:	42a5      	cmp	r5, r4
 801a38e:	d1f4      	bne.n	801a37a <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x8e>
 801a390:	2501      	movs	r5, #1
 801a392:	e002      	b.n	801a39a <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xae>
 801a394:	2400      	movs	r4, #0
 801a396:	4625      	mov	r5, r4
 801a398:	4626      	mov	r6, r4
 801a39a:	f107 0140 	add.w	r1, r7, #64	; 0x40
 801a39e:	f107 0010 	add.w	r0, r7, #16
 801a3a2:	f7f7 fdcb 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801a3a6:	b360      	cbz	r0, 801a402 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x116>
 801a3a8:	f107 0010 	add.w	r0, r7, #16
 801a3ac:	f7f7 fda4 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801a3b0:	2300      	movs	r3, #0
 801a3b2:	b2c0      	uxtb	r0, r0
 801a3b4:	4619      	mov	r1, r3
 801a3b6:	429c      	cmp	r4, r3
 801a3b8:	d91b      	bls.n	801a3f2 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x106>
 801a3ba:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
 801a3be:	42aa      	cmp	r2, r5
 801a3c0:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 801a3c4:	eb06 0c83 	add.w	ip, r6, r3, lsl #2
 801a3c8:	d802      	bhi.n	801a3d0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xe4>
 801a3ca:	3101      	adds	r1, #1
 801a3cc:	3301      	adds	r3, #1
 801a3ce:	e7f2      	b.n	801a3b6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xca>
 801a3d0:	f858 2023 	ldr.w	r2, [r8, r3, lsl #2]
 801a3d4:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 801a3d8:	5d52      	ldrb	r2, [r2, r5]
 801a3da:	4282      	cmp	r2, r0
 801a3dc:	d0f6      	beq.n	801a3cc <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xe0>
 801a3de:	3c01      	subs	r4, #1
 801a3e0:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
 801a3e4:	f848 200e 	str.w	r2, [r8, lr]
 801a3e8:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 801a3ec:	f8cc 2000 	str.w	r2, [ip]
 801a3f0:	e7e1      	b.n	801a3b6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xca>
 801a3f2:	428c      	cmp	r4, r1
 801a3f4:	d005      	beq.n	801a402 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x116>
 801a3f6:	f107 0010 	add.w	r0, r7, #16
 801a3fa:	f7fe fd50 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801a3fe:	3501      	adds	r5, #1
 801a400:	e7cb      	b.n	801a39a <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0xae>
 801a402:	2c01      	cmp	r4, #1
 801a404:	d115      	bne.n	801a432 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x146>
 801a406:	6833      	ldr	r3, [r6, #0]
 801a408:	42ab      	cmp	r3, r5
 801a40a:	d119      	bne.n	801a440 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x154>
 801a40c:	f8d8 3000 	ldr.w	r3, [r8]
 801a410:	6cba      	ldr	r2, [r7, #72]	; 0x48
 801a412:	455b      	cmp	r3, fp
 801a414:	bfa8      	it	ge
 801a416:	eba3 030b 	subge.w	r3, r3, fp
 801a41a:	6013      	str	r3, [r2, #0]
 801a41c:	f107 0318 	add.w	r3, r7, #24
 801a420:	e913 0003 	ldmdb	r3, {r0, r1}
 801a424:	371c      	adds	r7, #28
 801a426:	e889 0003 	stmia.w	r9, {r0, r1}
 801a42a:	4648      	mov	r0, r9
 801a42c:	46bd      	mov	sp, r7
 801a42e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a432:	2c02      	cmp	r4, #2
 801a434:	d104      	bne.n	801a440 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x154>
 801a436:	6833      	ldr	r3, [r6, #0]
 801a438:	42ab      	cmp	r3, r5
 801a43a:	d0e7      	beq.n	801a40c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x120>
 801a43c:	6873      	ldr	r3, [r6, #4]
 801a43e:	e7e3      	b.n	801a408 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x11c>
 801a440:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801a442:	6dba      	ldr	r2, [r7, #88]	; 0x58
 801a444:	681b      	ldr	r3, [r3, #0]
 801a446:	f043 0304 	orr.w	r3, r3, #4
 801a44a:	e7e6      	b.n	801a41a <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate+0x12e>

0801a44c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc>:
 801a44c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a450:	b09f      	sub	sp, #124	; 0x7c
 801a452:	460c      	mov	r4, r1
 801a454:	f8dd a0a8 	ldr.w	sl, [sp, #168]	; 0xa8
 801a458:	900b      	str	r0, [sp, #44]	; 0x2c
 801a45a:	f10a 056c 	add.w	r5, sl, #108	; 0x6c
 801a45e:	a90e      	add	r1, sp, #56	; 0x38
 801a460:	4628      	mov	r0, r5
 801a462:	e881 000c 	stmia.w	r1, {r2, r3}
 801a466:	f8dd 90b0 	ldr.w	r9, [sp, #176]	; 0xb0
 801a46a:	f7fe fb33 	bl	8018ad4 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale>
 801a46e:	4683      	mov	fp, r0
 801a470:	4628      	mov	r0, r5
 801a472:	f7fe f89b 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 801a476:	4605      	mov	r5, r0
 801a478:	982d      	ldr	r0, [sp, #180]	; 0xb4
 801a47a:	f7e5 ff03 	bl	8000284 <strlen>
 801a47e:	2600      	movs	r6, #0
 801a480:	900a      	str	r0, [sp, #40]	; 0x28
 801a482:	9610      	str	r6, [sp, #64]	; 0x40
 801a484:	af0e      	add	r7, sp, #56	; 0x38
 801a486:	a928      	add	r1, sp, #160	; 0xa0
 801a488:	4638      	mov	r0, r7
 801a48a:	f7f7 fd57 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801a48e:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 801a492:	2800      	cmp	r0, #0
 801a494:	d066      	beq.n	801a564 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x118>
 801a496:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a498:	429e      	cmp	r6, r3
 801a49a:	d263      	bcs.n	801a564 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x118>
 801a49c:	f1b8 0f00 	cmp.w	r8, #0
 801a4a0:	d164      	bne.n	801a56c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x120>
 801a4a2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a4a4:	4642      	mov	r2, r8
 801a4a6:	5d99      	ldrb	r1, [r3, r6]
 801a4a8:	4628      	mov	r0, r5
 801a4aa:	f7f7 f87a 	bl	80115a2 <_ZNKSt5ctypeIcE6narrowEcc>
 801a4ae:	2825      	cmp	r0, #37	; 0x25
 801a4b0:	f040 82aa 	bne.w	801aa08 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5bc>
 801a4b4:	1c73      	adds	r3, r6, #1
 801a4b6:	9309      	str	r3, [sp, #36]	; 0x24
 801a4b8:	1c71      	adds	r1, r6, #1
 801a4ba:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a4bc:	4642      	mov	r2, r8
 801a4be:	5c59      	ldrb	r1, [r3, r1]
 801a4c0:	4628      	mov	r0, r5
 801a4c2:	f7f7 f86e 	bl	80115a2 <_ZNKSt5ctypeIcE6narrowEcc>
 801a4c6:	2845      	cmp	r0, #69	; 0x45
 801a4c8:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
 801a4cc:	d001      	beq.n	801a4d2 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x86>
 801a4ce:	284f      	cmp	r0, #79	; 0x4f
 801a4d0:	d108      	bne.n	801a4e4 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x98>
 801a4d2:	1cb3      	adds	r3, r6, #2
 801a4d4:	9309      	str	r3, [sp, #36]	; 0x24
 801a4d6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a4d8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a4da:	2200      	movs	r2, #0
 801a4dc:	5c59      	ldrb	r1, [r3, r1]
 801a4de:	4628      	mov	r0, r5
 801a4e0:	f7f7 f85f 	bl	80115a2 <_ZNKSt5ctypeIcE6narrowEcc>
 801a4e4:	3841      	subs	r0, #65	; 0x41
 801a4e6:	ae0e      	add	r6, sp, #56	; 0x38
 801a4e8:	2838      	cmp	r0, #56	; 0x38
 801a4ea:	f200 8288 	bhi.w	801a9fe <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5b2>
 801a4ee:	e8df f010 	tbh	[pc, r0, lsl #1]
 801a4f2:	006a      	.short	0x006a
 801a4f4:	01d80095 	.word	0x01d80095
 801a4f8:	028600f0 	.word	0x028600f0
 801a4fc:	02860286 	.word	0x02860286
 801a500:	01340110 	.word	0x01340110
 801a504:	02860286 	.word	0x02860286
 801a508:	01620286 	.word	0x01620286
 801a50c:	02860286 	.word	0x02860286
 801a510:	02860286 	.word	0x02860286
 801a514:	019b0196 	.word	0x019b0196
 801a518:	028601ca 	.word	0x028601ca
 801a51c:	02860286 	.word	0x02860286
 801a520:	01d801d3 	.word	0x01d801d3
 801a524:	02860202 	.word	0x02860202
 801a528:	02860286 	.word	0x02860286
 801a52c:	02860286 	.word	0x02860286
 801a530:	00440286 	.word	0x00440286
 801a534:	009b0070 	.word	0x009b0070
 801a538:	00c700a3 	.word	0x00c700a3
 801a53c:	02860286 	.word	0x02860286
 801a540:	02860070 	.word	0x02860070
 801a544:	02860286 	.word	0x02860286
 801a548:	013e0286 	.word	0x013e0286
 801a54c:	02860187 	.word	0x02860187
 801a550:	02860286 	.word	0x02860286
 801a554:	02860286 	.word	0x02860286
 801a558:	028601c0 	.word	0x028601c0
 801a55c:	02860286 	.word	0x02860286
 801a560:	01d801ce 	.word	0x01d801ce
 801a564:	f1b8 0f00 	cmp.w	r8, #0
 801a568:	f000 8260 	beq.w	801aa2c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5e0>
 801a56c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a56e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801a570:	681b      	ldr	r3, [r3, #0]
 801a572:	f043 0304 	orr.w	r3, r3, #4
 801a576:	6013      	str	r3, [r2, #0]
 801a578:	e25c      	b.n	801aa34 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5e8>
 801a57a:	ae12      	add	r6, sp, #72	; 0x48
 801a57c:	4631      	mov	r1, r6
 801a57e:	4658      	mov	r0, fp
 801a580:	f7fd ff00 	bl	8018384 <_ZNKSt11__timepunctIcE19_M_days_abbreviatedEPPKc>
 801a584:	ab10      	add	r3, sp, #64	; 0x40
 801a586:	e9cd a305 	strd	sl, r3, [sp, #20]
 801a58a:	2307      	movs	r3, #7
 801a58c:	e9cd 6303 	strd	r6, r3, [sp, #12]
 801a590:	ab11      	add	r3, sp, #68	; 0x44
 801a592:	9302      	str	r3, [sp, #8]
 801a594:	ab28      	add	r3, sp, #160	; 0xa0
 801a596:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a59a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a59e:	af0c      	add	r7, sp, #48	; 0x30
 801a5a0:	ae0e      	add	r6, sp, #56	; 0x38
 801a5a2:	e896 000c 	ldmia.w	r6, {r2, r3}
 801a5a6:	4621      	mov	r1, r4
 801a5a8:	4638      	mov	r0, r7
 801a5aa:	f7ff fde9 	bl	801a180 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>
 801a5ae:	e897 0003 	ldmia.w	r7, {r0, r1}
 801a5b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a5b4:	e886 0003 	stmia.w	r6, {r0, r1}
 801a5b8:	b913      	cbnz	r3, 801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a5ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a5bc:	f8c9 3018 	str.w	r3, [r9, #24]
 801a5c0:	9e09      	ldr	r6, [sp, #36]	; 0x24
 801a5c2:	3601      	adds	r6, #1
 801a5c4:	e75e      	b.n	801a484 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x38>
 801a5c6:	ae12      	add	r6, sp, #72	; 0x48
 801a5c8:	4631      	mov	r1, r6
 801a5ca:	4658      	mov	r0, fp
 801a5cc:	f7fd feca 	bl	8018364 <_ZNKSt11__timepunctIcE7_M_daysEPPKc>
 801a5d0:	e7d8      	b.n	801a584 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x138>
 801a5d2:	ae12      	add	r6, sp, #72	; 0x48
 801a5d4:	4631      	mov	r1, r6
 801a5d6:	4658      	mov	r0, fp
 801a5d8:	f7fd ff03 	bl	80183e2 <_ZNKSt11__timepunctIcE21_M_months_abbreviatedEPPKc>
 801a5dc:	ab10      	add	r3, sp, #64	; 0x40
 801a5de:	e9cd a305 	strd	sl, r3, [sp, #20]
 801a5e2:	230c      	movs	r3, #12
 801a5e4:	e9cd 6303 	strd	r6, r3, [sp, #12]
 801a5e8:	ab11      	add	r3, sp, #68	; 0x44
 801a5ea:	9302      	str	r3, [sp, #8]
 801a5ec:	ab28      	add	r3, sp, #160	; 0xa0
 801a5ee:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a5f2:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a5f6:	af0c      	add	r7, sp, #48	; 0x30
 801a5f8:	ae0e      	add	r6, sp, #56	; 0x38
 801a5fa:	e896 000c 	ldmia.w	r6, {r2, r3}
 801a5fe:	4621      	mov	r1, r4
 801a600:	4638      	mov	r0, r7
 801a602:	f7ff fdbd 	bl	801a180 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>
 801a606:	e897 0003 	ldmia.w	r7, {r0, r1}
 801a60a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a60c:	e886 0003 	stmia.w	r6, {r0, r1}
 801a610:	2b00      	cmp	r3, #0
 801a612:	d1d5      	bne.n	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a614:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a616:	f8c9 3010 	str.w	r3, [r9, #16]
 801a61a:	e7d1      	b.n	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a61c:	ae12      	add	r6, sp, #72	; 0x48
 801a61e:	4631      	mov	r1, r6
 801a620:	4658      	mov	r0, fp
 801a622:	f7fd febf 	bl	80183a4 <_ZNKSt11__timepunctIcE9_M_monthsEPPKc>
 801a626:	e7d9      	b.n	801a5dc <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x190>
 801a628:	a912      	add	r1, sp, #72	; 0x48
 801a62a:	4658      	mov	r0, fp
 801a62c:	f7fd fe94 	bl	8018358 <_ZNKSt11__timepunctIcE20_M_date_time_formatsEPPKc>
 801a630:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a632:	9305      	str	r3, [sp, #20]
 801a634:	af0c      	add	r7, sp, #48	; 0x30
 801a636:	e056      	b.n	801a6e6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x29a>
 801a638:	ab10      	add	r3, sp, #64	; 0x40
 801a63a:	e9cd a306 	strd	sl, r3, [sp, #24]
 801a63e:	f04f 0c02 	mov.w	ip, #2
 801a642:	231f      	movs	r3, #31
 801a644:	e9cd 3c04 	strd	r3, ip, [sp, #16]
 801a648:	2301      	movs	r3, #1
 801a64a:	9303      	str	r3, [sp, #12]
 801a64c:	ab11      	add	r3, sp, #68	; 0x44
 801a64e:	9302      	str	r3, [sp, #8]
 801a650:	ab28      	add	r3, sp, #160	; 0xa0
 801a652:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a656:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a65a:	af0c      	add	r7, sp, #48	; 0x30
 801a65c:	ae0e      	add	r6, sp, #56	; 0x38
 801a65e:	e896 000c 	ldmia.w	r6, {r2, r3}
 801a662:	4621      	mov	r1, r4
 801a664:	4638      	mov	r0, r7
 801a666:	f7ff fd2e 	bl	801a0c6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801a66a:	e897 0003 	ldmia.w	r7, {r0, r1}
 801a66e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a670:	e886 0003 	stmia.w	r6, {r0, r1}
 801a674:	2b00      	cmp	r3, #0
 801a676:	d1a3      	bne.n	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a678:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a67a:	f8c9 300c 	str.w	r3, [r9, #12]
 801a67e:	e79f      	b.n	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a680:	4630      	mov	r0, r6
 801a682:	f7f7 fc39 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801a686:	69ab      	ldr	r3, [r5, #24]
 801a688:	b2c0      	uxtb	r0, r0
 801a68a:	5c1b      	ldrb	r3, [r3, r0]
 801a68c:	071f      	lsls	r7, r3, #28
 801a68e:	d516      	bpl.n	801a6be <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x272>
 801a690:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a692:	f7fd fcc9 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801a696:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801a69a:	930f      	str	r3, [sp, #60]	; 0x3c
 801a69c:	ab10      	add	r3, sp, #64	; 0x40
 801a69e:	e9cd a306 	strd	sl, r3, [sp, #24]
 801a6a2:	2209      	movs	r2, #9
 801a6a4:	2301      	movs	r3, #1
 801a6a6:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801a6aa:	af0c      	add	r7, sp, #48	; 0x30
 801a6ac:	9303      	str	r3, [sp, #12]
 801a6ae:	ab11      	add	r3, sp, #68	; 0x44
 801a6b0:	9302      	str	r3, [sp, #8]
 801a6b2:	ab28      	add	r3, sp, #160	; 0xa0
 801a6b4:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a6b8:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a6bc:	e7cf      	b.n	801a65e <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x212>
 801a6be:	ab10      	add	r3, sp, #64	; 0x40
 801a6c0:	e9cd a306 	strd	sl, r3, [sp, #24]
 801a6c4:	2002      	movs	r0, #2
 801a6c6:	231f      	movs	r3, #31
 801a6c8:	e9cd 3004 	strd	r3, r0, [sp, #16]
 801a6cc:	af0c      	add	r7, sp, #48	; 0x30
 801a6ce:	230a      	movs	r3, #10
 801a6d0:	e7ec      	b.n	801a6ac <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x260>
 801a6d2:	ae12      	add	r6, sp, #72	; 0x48
 801a6d4:	4abf      	ldr	r2, [pc, #764]	; (801a9d4 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x588>)
 801a6d6:	4633      	mov	r3, r6
 801a6d8:	f1a2 0109 	sub.w	r1, r2, #9
 801a6dc:	4628      	mov	r0, r5
 801a6de:	f7f6 ff41 	bl	8011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>
 801a6e2:	af0c      	add	r7, sp, #48	; 0x30
 801a6e4:	9605      	str	r6, [sp, #20]
 801a6e6:	ab10      	add	r3, sp, #64	; 0x40
 801a6e8:	e9cd a302 	strd	sl, r3, [sp, #8]
 801a6ec:	f8cd 9010 	str.w	r9, [sp, #16]
 801a6f0:	ab28      	add	r3, sp, #160	; 0xa0
 801a6f2:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a6f6:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a6fa:	ae0e      	add	r6, sp, #56	; 0x38
 801a6fc:	4621      	mov	r1, r4
 801a6fe:	4638      	mov	r0, r7
 801a700:	e896 000c 	ldmia.w	r6, {r2, r3}
 801a704:	f7ff fea2 	bl	801a44c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc>
 801a708:	e897 0003 	ldmia.w	r7, {r0, r1}
 801a70c:	e886 0003 	stmia.w	r6, {r0, r1}
 801a710:	e756      	b.n	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a712:	ab10      	add	r3, sp, #64	; 0x40
 801a714:	e9cd a306 	strd	sl, r3, [sp, #24]
 801a718:	2102      	movs	r1, #2
 801a71a:	2317      	movs	r3, #23
 801a71c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a720:	af0c      	add	r7, sp, #48	; 0x30
 801a722:	2300      	movs	r3, #0
 801a724:	9303      	str	r3, [sp, #12]
 801a726:	ab11      	add	r3, sp, #68	; 0x44
 801a728:	9302      	str	r3, [sp, #8]
 801a72a:	ab28      	add	r3, sp, #160	; 0xa0
 801a72c:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a730:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a734:	ae0e      	add	r6, sp, #56	; 0x38
 801a736:	e896 000c 	ldmia.w	r6, {r2, r3}
 801a73a:	4621      	mov	r1, r4
 801a73c:	4638      	mov	r0, r7
 801a73e:	f7ff fcc2 	bl	801a0c6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801a742:	e897 0003 	ldmia.w	r7, {r0, r1}
 801a746:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a748:	e886 0003 	stmia.w	r6, {r0, r1}
 801a74c:	2b00      	cmp	r3, #0
 801a74e:	f47f af37 	bne.w	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a752:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a754:	f8c9 3008 	str.w	r3, [r9, #8]
 801a758:	e732      	b.n	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a75a:	ab10      	add	r3, sp, #64	; 0x40
 801a75c:	e9cd a306 	strd	sl, r3, [sp, #24]
 801a760:	2202      	movs	r2, #2
 801a762:	230c      	movs	r3, #12
 801a764:	e9cd 3204 	strd	r3, r2, [sp, #16]
 801a768:	af0c      	add	r7, sp, #48	; 0x30
 801a76a:	2301      	movs	r3, #1
 801a76c:	e7da      	b.n	801a724 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x2d8>
 801a76e:	ab10      	add	r3, sp, #64	; 0x40
 801a770:	e9cd a306 	strd	sl, r3, [sp, #24]
 801a774:	f04f 0802 	mov.w	r8, #2
 801a778:	230c      	movs	r3, #12
 801a77a:	e9cd 3804 	strd	r3, r8, [sp, #16]
 801a77e:	2301      	movs	r3, #1
 801a780:	9303      	str	r3, [sp, #12]
 801a782:	ab11      	add	r3, sp, #68	; 0x44
 801a784:	9302      	str	r3, [sp, #8]
 801a786:	ab28      	add	r3, sp, #160	; 0xa0
 801a788:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a78c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a790:	af0c      	add	r7, sp, #48	; 0x30
 801a792:	ae0e      	add	r6, sp, #56	; 0x38
 801a794:	e896 000c 	ldmia.w	r6, {r2, r3}
 801a798:	4621      	mov	r1, r4
 801a79a:	4638      	mov	r0, r7
 801a79c:	f7ff fc93 	bl	801a0c6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801a7a0:	e897 0003 	ldmia.w	r7, {r0, r1}
 801a7a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7a6:	e886 0003 	stmia.w	r6, {r0, r1}
 801a7aa:	2b00      	cmp	r3, #0
 801a7ac:	f47f af08 	bne.w	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a7b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a7b2:	3b01      	subs	r3, #1
 801a7b4:	e72f      	b.n	801a616 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x1ca>
 801a7b6:	ab10      	add	r3, sp, #64	; 0x40
 801a7b8:	e9cd a306 	strd	sl, r3, [sp, #24]
 801a7bc:	f04f 0e02 	mov.w	lr, #2
 801a7c0:	233b      	movs	r3, #59	; 0x3b
 801a7c2:	e9cd 3e04 	strd	r3, lr, [sp, #16]
 801a7c6:	2300      	movs	r3, #0
 801a7c8:	9303      	str	r3, [sp, #12]
 801a7ca:	ab11      	add	r3, sp, #68	; 0x44
 801a7cc:	9302      	str	r3, [sp, #8]
 801a7ce:	ab28      	add	r3, sp, #160	; 0xa0
 801a7d0:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a7d4:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a7d8:	af0c      	add	r7, sp, #48	; 0x30
 801a7da:	ae0e      	add	r6, sp, #56	; 0x38
 801a7dc:	e896 000c 	ldmia.w	r6, {r2, r3}
 801a7e0:	4621      	mov	r1, r4
 801a7e2:	4638      	mov	r0, r7
 801a7e4:	f7ff fc6f 	bl	801a0c6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801a7e8:	e897 0003 	ldmia.w	r7, {r0, r1}
 801a7ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7ee:	e886 0003 	stmia.w	r6, {r0, r1}
 801a7f2:	2b00      	cmp	r3, #0
 801a7f4:	f47f aee4 	bne.w	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a7f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a7fa:	f8c9 3004 	str.w	r3, [r9, #4]
 801a7fe:	e6df      	b.n	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a800:	4630      	mov	r0, r6
 801a802:	f7f7 fb79 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801a806:	2200      	movs	r2, #0
 801a808:	b2c1      	uxtb	r1, r0
 801a80a:	4628      	mov	r0, r5
 801a80c:	f7f6 fec9 	bl	80115a2 <_ZNKSt5ctypeIcE6narrowEcc>
 801a810:	280a      	cmp	r0, #10
 801a812:	f040 80f4 	bne.w	801a9fe <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5b2>
 801a816:	4630      	mov	r0, r6
 801a818:	f7fe fb41 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801a81c:	e6d0      	b.n	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a81e:	4a6e      	ldr	r2, [pc, #440]	; (801a9d8 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x58c>)
 801a820:	ae12      	add	r6, sp, #72	; 0x48
 801a822:	4633      	mov	r3, r6
 801a824:	1f91      	subs	r1, r2, #6
 801a826:	e759      	b.n	801a6dc <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x290>
 801a828:	ab10      	add	r3, sp, #64	; 0x40
 801a82a:	e9cd a306 	strd	sl, r3, [sp, #24]
 801a82e:	f04f 0c02 	mov.w	ip, #2
 801a832:	233d      	movs	r3, #61	; 0x3d
 801a834:	e9cd 3c04 	strd	r3, ip, [sp, #16]
 801a838:	2300      	movs	r3, #0
 801a83a:	9303      	str	r3, [sp, #12]
 801a83c:	ab11      	add	r3, sp, #68	; 0x44
 801a83e:	9302      	str	r3, [sp, #8]
 801a840:	ab28      	add	r3, sp, #160	; 0xa0
 801a842:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a846:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a84a:	af0c      	add	r7, sp, #48	; 0x30
 801a84c:	ae0e      	add	r6, sp, #56	; 0x38
 801a84e:	e896 000c 	ldmia.w	r6, {r2, r3}
 801a852:	4621      	mov	r1, r4
 801a854:	4638      	mov	r0, r7
 801a856:	f7ff fc36 	bl	801a0c6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801a85a:	e897 0003 	ldmia.w	r7, {r0, r1}
 801a85e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a860:	e886 0003 	stmia.w	r6, {r0, r1}
 801a864:	2b00      	cmp	r3, #0
 801a866:	f47f aeab 	bne.w	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a86a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a86c:	f8c9 3000 	str.w	r3, [r9]
 801a870:	e6a6      	b.n	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a872:	4630      	mov	r0, r6
 801a874:	f7f7 fb40 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801a878:	2200      	movs	r2, #0
 801a87a:	b2c1      	uxtb	r1, r0
 801a87c:	4628      	mov	r0, r5
 801a87e:	f7f6 fe90 	bl	80115a2 <_ZNKSt5ctypeIcE6narrowEcc>
 801a882:	2809      	cmp	r0, #9
 801a884:	e7c5      	b.n	801a812 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x3c6>
 801a886:	ae12      	add	r6, sp, #72	; 0x48
 801a888:	4a54      	ldr	r2, [pc, #336]	; (801a9dc <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x590>)
 801a88a:	4633      	mov	r3, r6
 801a88c:	e724      	b.n	801a6d8 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x28c>
 801a88e:	a912      	add	r1, sp, #72	; 0x48
 801a890:	4658      	mov	r0, fp
 801a892:	f7fd fd55 	bl	8018340 <_ZNKSt11__timepunctIcE15_M_date_formatsEPPKc>
 801a896:	e6cb      	b.n	801a630 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x1e4>
 801a898:	a912      	add	r1, sp, #72	; 0x48
 801a89a:	4658      	mov	r0, fp
 801a89c:	f7fd fd56 	bl	801834c <_ZNKSt11__timepunctIcE15_M_time_formatsEPPKc>
 801a8a0:	e6c6      	b.n	801a630 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x1e4>
 801a8a2:	ab10      	add	r3, sp, #64	; 0x40
 801a8a4:	e9cd a306 	strd	sl, r3, [sp, #24]
 801a8a8:	2604      	movs	r6, #4
 801a8aa:	f242 730f 	movw	r3, #9999	; 0x270f
 801a8ae:	e9cd 3604 	strd	r3, r6, [sp, #16]
 801a8b2:	2300      	movs	r3, #0
 801a8b4:	9303      	str	r3, [sp, #12]
 801a8b6:	ab11      	add	r3, sp, #68	; 0x44
 801a8b8:	9302      	str	r3, [sp, #8]
 801a8ba:	ab28      	add	r3, sp, #160	; 0xa0
 801a8bc:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a8c0:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a8c4:	af0c      	add	r7, sp, #48	; 0x30
 801a8c6:	ae0e      	add	r6, sp, #56	; 0x38
 801a8c8:	e896 000c 	ldmia.w	r6, {r2, r3}
 801a8cc:	4621      	mov	r1, r4
 801a8ce:	4638      	mov	r0, r7
 801a8d0:	f7ff fbf9 	bl	801a0c6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801a8d4:	e897 0003 	ldmia.w	r7, {r0, r1}
 801a8d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a8da:	e886 0003 	stmia.w	r6, {r0, r1}
 801a8de:	2b00      	cmp	r3, #0
 801a8e0:	f47f ae6e 	bne.w	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a8e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a8e6:	2b00      	cmp	r3, #0
 801a8e8:	bfb4      	ite	lt
 801a8ea:	3364      	addlt	r3, #100	; 0x64
 801a8ec:	f2a3 736c 	subwge	r3, r3, #1900	; 0x76c
 801a8f0:	f8c9 3014 	str.w	r3, [r9, #20]
 801a8f4:	e664      	b.n	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a8f6:	4630      	mov	r0, r6
 801a8f8:	f7f7 fafe 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801a8fc:	69ab      	ldr	r3, [r5, #24]
 801a8fe:	b2c0      	uxtb	r0, r0
 801a900:	5c1b      	ldrb	r3, [r3, r0]
 801a902:	07d8      	lsls	r0, r3, #31
 801a904:	d57b      	bpl.n	801a9fe <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5b2>
 801a906:	ab10      	add	r3, sp, #64	; 0x40
 801a908:	e9cd a305 	strd	sl, r3, [sp, #20]
 801a90c:	230e      	movs	r3, #14
 801a90e:	9304      	str	r3, [sp, #16]
 801a910:	4b33      	ldr	r3, [pc, #204]	; (801a9e0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x594>)
 801a912:	9303      	str	r3, [sp, #12]
 801a914:	ab12      	add	r3, sp, #72	; 0x48
 801a916:	9302      	str	r3, [sp, #8]
 801a918:	ab28      	add	r3, sp, #160	; 0xa0
 801a91a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a91e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a922:	af0c      	add	r7, sp, #48	; 0x30
 801a924:	4621      	mov	r1, r4
 801a926:	4638      	mov	r0, r7
 801a928:	e896 000c 	ldmia.w	r6, {r2, r3}
 801a92c:	f7ff fc28 	bl	801a180 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>
 801a930:	e897 0003 	ldmia.w	r7, {r0, r1}
 801a934:	e886 0003 	stmia.w	r6, {r0, r1}
 801a938:	a928      	add	r1, sp, #160	; 0xa0
 801a93a:	4630      	mov	r0, r6
 801a93c:	f7f7 fafe 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801a940:	2800      	cmp	r0, #0
 801a942:	f43f ae3d 	beq.w	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a946:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a948:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a94a:	4313      	orrs	r3, r2
 801a94c:	f47f ae38 	bne.w	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a950:	4630      	mov	r0, r6
 801a952:	f7f7 fad1 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801a956:	212d      	movs	r1, #45	; 0x2d
 801a958:	4607      	mov	r7, r0
 801a95a:	4628      	mov	r0, r5
 801a95c:	f7f6 fdf1 	bl	8011542 <_ZNKSt5ctypeIcE5widenEc>
 801a960:	b2ff      	uxtb	r7, r7
 801a962:	42b8      	cmp	r0, r7
 801a964:	d13e      	bne.n	801a9e4 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x598>
 801a966:	af10      	add	r7, sp, #64	; 0x40
 801a968:	2317      	movs	r3, #23
 801a96a:	2202      	movs	r2, #2
 801a96c:	e9cd 3204 	strd	r3, r2, [sp, #16]
 801a970:	e9cd a706 	strd	sl, r7, [sp, #24]
 801a974:	2300      	movs	r3, #0
 801a976:	9303      	str	r3, [sp, #12]
 801a978:	ab12      	add	r3, sp, #72	; 0x48
 801a97a:	9302      	str	r3, [sp, #8]
 801a97c:	ab28      	add	r3, sp, #160	; 0xa0
 801a97e:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a982:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a986:	ae0c      	add	r6, sp, #48	; 0x30
 801a988:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 801a98c:	e898 000c 	ldmia.w	r8, {r2, r3}
 801a990:	4621      	mov	r1, r4
 801a992:	4630      	mov	r0, r6
 801a994:	f7ff fb97 	bl	801a0c6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801a998:	e896 0003 	ldmia.w	r6, {r0, r1}
 801a99c:	233b      	movs	r3, #59	; 0x3b
 801a99e:	e888 0003 	stmia.w	r8, {r0, r1}
 801a9a2:	2102      	movs	r1, #2
 801a9a4:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a9a8:	e9cd a706 	strd	sl, r7, [sp, #24]
 801a9ac:	2300      	movs	r3, #0
 801a9ae:	9303      	str	r3, [sp, #12]
 801a9b0:	ab12      	add	r3, sp, #72	; 0x48
 801a9b2:	9302      	str	r3, [sp, #8]
 801a9b4:	ab28      	add	r3, sp, #160	; 0xa0
 801a9b6:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a9ba:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a9be:	4621      	mov	r1, r4
 801a9c0:	4630      	mov	r0, r6
 801a9c2:	e898 000c 	ldmia.w	r8, {r2, r3}
 801a9c6:	f7ff fb7e 	bl	801a0c6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801a9ca:	e896 0003 	ldmia.w	r6, {r0, r1}
 801a9ce:	e888 0003 	stmia.w	r8, {r0, r1}
 801a9d2:	e5f5      	b.n	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a9d4:	0802f801 	.word	0x0802f801
 801a9d8:	0802f807 	.word	0x0802f807
 801a9dc:	0802f810 	.word	0x0802f810
 801a9e0:	20000040 	.word	0x20000040
 801a9e4:	4630      	mov	r0, r6
 801a9e6:	f7f7 fa87 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801a9ea:	212b      	movs	r1, #43	; 0x2b
 801a9ec:	4606      	mov	r6, r0
 801a9ee:	4628      	mov	r0, r5
 801a9f0:	f7f6 fda7 	bl	8011542 <_ZNKSt5ctypeIcE5widenEc>
 801a9f4:	b2f6      	uxtb	r6, r6
 801a9f6:	42b0      	cmp	r0, r6
 801a9f8:	f47f ade2 	bne.w	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801a9fc:	e7b3      	b.n	801a966 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x51a>
 801a9fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa00:	f043 0304 	orr.w	r3, r3, #4
 801aa04:	9310      	str	r3, [sp, #64]	; 0x40
 801aa06:	e5db      	b.n	801a5c0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x174>
 801aa08:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801aa0a:	4638      	mov	r0, r7
 801aa0c:	f813 8006 	ldrb.w	r8, [r3, r6]
 801aa10:	f7f7 fa72 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801aa14:	b2c0      	uxtb	r0, r0
 801aa16:	4580      	cmp	r8, r0
 801aa18:	d103      	bne.n	801aa22 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x5d6>
 801aa1a:	4638      	mov	r0, r7
 801aa1c:	f7fe fa3f 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801aa20:	e5cf      	b.n	801a5c2 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x176>
 801aa22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa24:	f043 0304 	orr.w	r3, r3, #4
 801aa28:	9310      	str	r3, [sp, #64]	; 0x40
 801aa2a:	e5ca      	b.n	801a5c2 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x176>
 801aa2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aa2e:	429e      	cmp	r6, r3
 801aa30:	f47f ad9c 	bne.w	801a56c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc+0x120>
 801aa34:	e897 0003 	ldmia.w	r7, {r0, r1}
 801aa38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801aa3a:	e883 0003 	stmia.w	r3, {r0, r1}
 801aa3e:	4618      	mov	r0, r3
 801aa40:	b01f      	add	sp, #124	; 0x7c
 801aa42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa46:	bf00      	nop

0801aa48 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>:
 801aa48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa4c:	b089      	sub	sp, #36	; 0x24
 801aa4e:	af04      	add	r7, sp, #16
 801aa50:	9914      	ldr	r1, [sp, #80]	; 0x50
 801aa52:	9002      	str	r0, [sp, #8]
 801aa54:	316c      	adds	r1, #108	; 0x6c
 801aa56:	a806      	add	r0, sp, #24
 801aa58:	e887 000c 	stmia.w	r7, {r2, r3}
 801aa5c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801aa60:	f7fe fd66 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 801aa64:	2300      	movs	r3, #0
 801aa66:	4604      	mov	r4, r0
 801aa68:	a912      	add	r1, sp, #72	; 0x48
 801aa6a:	4638      	mov	r0, r7
 801aa6c:	f88d 301b 	strb.w	r3, [sp, #27]
 801aa70:	f7f7 fa51 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801aa74:	4681      	mov	r9, r0
 801aa76:	2800      	cmp	r0, #0
 801aa78:	d15a      	bne.n	801ab30 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xe8>
 801aa7a:	4638      	mov	r0, r7
 801aa7c:	f7f7 fa3c 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801aa80:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 801aa84:	b2c0      	uxtb	r0, r0
 801aa86:	4281      	cmp	r1, r0
 801aa88:	f88d 001b 	strb.w	r0, [sp, #27]
 801aa8c:	d003      	beq.n	801aa96 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x4e>
 801aa8e:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801aa92:	4283      	cmp	r3, r0
 801aa94:	d120      	bne.n	801aad8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 801aa96:	7c23      	ldrb	r3, [r4, #16]
 801aa98:	b11b      	cbz	r3, 801aaa2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x5a>
 801aa9a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801aa9e:	4283      	cmp	r3, r0
 801aaa0:	d01a      	beq.n	801aad8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 801aaa2:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 801aaa6:	4283      	cmp	r3, r0
 801aaa8:	d016      	beq.n	801aad8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 801aaaa:	4281      	cmp	r1, r0
 801aaac:	bf0c      	ite	eq
 801aaae:	212b      	moveq	r1, #43	; 0x2b
 801aab0:	212d      	movne	r1, #45	; 0x2d
 801aab2:	4640      	mov	r0, r8
 801aab4:	f7f5 fcbb 	bl	801042e <_ZNSs9push_backEc>
 801aab8:	9804      	ldr	r0, [sp, #16]
 801aaba:	f7fd fab5 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801aabe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801aac2:	a912      	add	r1, sp, #72	; 0x48
 801aac4:	4638      	mov	r0, r7
 801aac6:	9305      	str	r3, [sp, #20]
 801aac8:	f7f7 fa38 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801aacc:	b380      	cbz	r0, 801ab30 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xe8>
 801aace:	4638      	mov	r0, r7
 801aad0:	f7f7 fa12 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801aad4:	f88d 001b 	strb.w	r0, [sp, #27]
 801aad8:	2600      	movs	r6, #0
 801aada:	46b3      	mov	fp, r6
 801aadc:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 801aae0:	7c22      	ldrb	r2, [r4, #16]
 801aae2:	f89d 301b 	ldrb.w	r3, [sp, #27]
 801aae6:	b11a      	cbz	r2, 801aaf0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xa8>
 801aae8:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 801aaec:	429a      	cmp	r2, r3
 801aaee:	d024      	beq.n	801ab3a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xf2>
 801aaf0:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 801aaf4:	429a      	cmp	r2, r3
 801aaf6:	d020      	beq.n	801ab3a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xf2>
 801aaf8:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 801aafc:	429a      	cmp	r2, r3
 801aafe:	d11c      	bne.n	801ab3a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xf2>
 801ab00:	b91e      	cbnz	r6, 801ab0a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xc2>
 801ab02:	2130      	movs	r1, #48	; 0x30
 801ab04:	4640      	mov	r0, r8
 801ab06:	f7f5 fc92 	bl	801042e <_ZNSs9push_backEc>
 801ab0a:	9804      	ldr	r0, [sp, #16]
 801ab0c:	f7fd fa8c 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801ab10:	a912      	add	r1, sp, #72	; 0x48
 801ab12:	4638      	mov	r0, r7
 801ab14:	9505      	str	r5, [sp, #20]
 801ab16:	f7f7 fa11 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801ab1a:	f10b 0b01 	add.w	fp, fp, #1
 801ab1e:	4606      	mov	r6, r0
 801ab20:	2800      	cmp	r0, #0
 801ab22:	d054      	beq.n	801abce <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x186>
 801ab24:	4638      	mov	r0, r7
 801ab26:	f7f7 f9e7 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801ab2a:	f88d 001b 	strb.w	r0, [sp, #27]
 801ab2e:	e7d7      	b.n	801aae0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x98>
 801ab30:	f04f 0b00 	mov.w	fp, #0
 801ab34:	465e      	mov	r6, fp
 801ab36:	f04f 0901 	mov.w	r9, #1
 801ab3a:	4b8a      	ldr	r3, [pc, #552]	; (801ad64 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x31c>)
 801ab3c:	9307      	str	r3, [sp, #28]
 801ab3e:	7c23      	ldrb	r3, [r4, #16]
 801ab40:	b11b      	cbz	r3, 801ab4a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x102>
 801ab42:	2120      	movs	r1, #32
 801ab44:	a807      	add	r0, sp, #28
 801ab46:	f7f5 fba4 	bl	8010292 <_ZNSs7reserveEj>
 801ab4a:	f894 a064 	ldrb.w	sl, [r4, #100]	; 0x64
 801ab4e:	f1ba 0f00 	cmp.w	sl, #0
 801ab52:	d065      	beq.n	801ac20 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1d8>
 801ab54:	f104 034e 	add.w	r3, r4, #78	; 0x4e
 801ab58:	2500      	movs	r5, #0
 801ab5a:	9301      	str	r3, [sp, #4]
 801ab5c:	9500      	str	r5, [sp, #0]
 801ab5e:	f1b9 0f00 	cmp.w	r9, #0
 801ab62:	f040 80ae 	bne.w	801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ab66:	7c23      	ldrb	r3, [r4, #16]
 801ab68:	f89d 901b 	ldrb.w	r9, [sp, #27]
 801ab6c:	2b00      	cmp	r3, #0
 801ab6e:	f000 80c9 	beq.w	801ad04 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2bc>
 801ab72:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801ab76:	454b      	cmp	r3, r9
 801ab78:	f040 80c4 	bne.w	801ad04 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2bc>
 801ab7c:	9b00      	ldr	r3, [sp, #0]
 801ab7e:	2b00      	cmp	r3, #0
 801ab80:	f040 809f 	bne.w	801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ab84:	2d00      	cmp	r5, #0
 801ab86:	f040 809c 	bne.w	801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ab8a:	f1bb 0f00 	cmp.w	fp, #0
 801ab8e:	f000 8095 	beq.w	801acbc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x274>
 801ab92:	fa5f f18b 	uxtb.w	r1, fp
 801ab96:	a807      	add	r0, sp, #28
 801ab98:	f7f5 fc49 	bl	801042e <_ZNSs9push_backEc>
 801ab9c:	9b00      	ldr	r3, [sp, #0]
 801ab9e:	46b1      	mov	r9, r6
 801aba0:	469b      	mov	fp, r3
 801aba2:	9804      	ldr	r0, [sp, #16]
 801aba4:	9303      	str	r3, [sp, #12]
 801aba6:	f7fd fa3f 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801abaa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801abae:	a912      	add	r1, sp, #72	; 0x48
 801abb0:	a804      	add	r0, sp, #16
 801abb2:	9305      	str	r3, [sp, #20]
 801abb4:	f7f7 f9c2 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801abb8:	9b03      	ldr	r3, [sp, #12]
 801abba:	2800      	cmp	r0, #0
 801abbc:	d07c      	beq.n	801acb8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x270>
 801abbe:	a804      	add	r0, sp, #16
 801abc0:	f7f7 f99a 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801abc4:	2500      	movs	r5, #0
 801abc6:	9b03      	ldr	r3, [sp, #12]
 801abc8:	f88d 001b 	strb.w	r0, [sp, #27]
 801abcc:	e06e      	b.n	801acac <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x264>
 801abce:	f04f 0901 	mov.w	r9, #1
 801abd2:	464e      	mov	r6, r9
 801abd4:	e7b1      	b.n	801ab3a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xf2>
 801abd6:	46a9      	mov	r9, r5
 801abd8:	4655      	mov	r5, sl
 801abda:	4656      	mov	r6, sl
 801abdc:	f1b9 0f00 	cmp.w	r9, #0
 801abe0:	d16f      	bne.n	801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801abe2:	f89d 101b 	ldrb.w	r1, [sp, #27]
 801abe6:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 801abea:	2b09      	cmp	r3, #9
 801abec:	d81c      	bhi.n	801ac28 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1e0>
 801abee:	4640      	mov	r0, r8
 801abf0:	f7f5 fc1d 	bl	801042e <_ZNSs9push_backEc>
 801abf4:	f04f 0a01 	mov.w	sl, #1
 801abf8:	9804      	ldr	r0, [sp, #16]
 801abfa:	f7fd fa15 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801abfe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801ac02:	a912      	add	r1, sp, #72	; 0x48
 801ac04:	4638      	mov	r0, r7
 801ac06:	9305      	str	r3, [sp, #20]
 801ac08:	f7f7 f998 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801ac0c:	b128      	cbz	r0, 801ac1a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1d2>
 801ac0e:	4638      	mov	r0, r7
 801ac10:	f7f7 f972 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801ac14:	f88d 001b 	strb.w	r0, [sp, #27]
 801ac18:	e7df      	b.n	801abda <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x192>
 801ac1a:	f04f 0901 	mov.w	r9, #1
 801ac1e:	e7dc      	b.n	801abda <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x192>
 801ac20:	4655      	mov	r5, sl
 801ac22:	f8cd a000 	str.w	sl, [sp]
 801ac26:	e7d9      	b.n	801abdc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x194>
 801ac28:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 801ac2c:	428b      	cmp	r3, r1
 801ac2e:	d10a      	bne.n	801ac46 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1fe>
 801ac30:	9b00      	ldr	r3, [sp, #0]
 801ac32:	b943      	cbnz	r3, 801ac46 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1fe>
 801ac34:	b93d      	cbnz	r5, 801ac46 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1fe>
 801ac36:	212e      	movs	r1, #46	; 0x2e
 801ac38:	4640      	mov	r0, r8
 801ac3a:	f7f5 fbf8 	bl	801042e <_ZNSs9push_backEc>
 801ac3e:	2301      	movs	r3, #1
 801ac40:	46b2      	mov	sl, r6
 801ac42:	9300      	str	r3, [sp, #0]
 801ac44:	e7d8      	b.n	801abf8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1b0>
 801ac46:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
 801ac4a:	428b      	cmp	r3, r1
 801ac4c:	d003      	beq.n	801ac56 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x20e>
 801ac4e:	f894 3062 	ldrb.w	r3, [r4, #98]	; 0x62
 801ac52:	428b      	cmp	r3, r1
 801ac54:	d135      	bne.n	801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ac56:	bba5      	cbnz	r5, 801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ac58:	b39e      	cbz	r6, 801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ac5a:	2165      	movs	r1, #101	; 0x65
 801ac5c:	4640      	mov	r0, r8
 801ac5e:	f7f5 fbe6 	bl	801042e <_ZNSs9push_backEc>
 801ac62:	9804      	ldr	r0, [sp, #16]
 801ac64:	f7fd f9e0 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801ac68:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801ac6c:	a912      	add	r1, sp, #72	; 0x48
 801ac6e:	4638      	mov	r0, r7
 801ac70:	9305      	str	r3, [sp, #20]
 801ac72:	f7f7 f963 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801ac76:	4682      	mov	sl, r0
 801ac78:	2800      	cmp	r0, #0
 801ac7a:	f000 80c0 	beq.w	801adfe <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3b6>
 801ac7e:	4638      	mov	r0, r7
 801ac80:	f7f7 f93a 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801ac84:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 801ac88:	b2c0      	uxtb	r0, r0
 801ac8a:	4283      	cmp	r3, r0
 801ac8c:	f88d 001b 	strb.w	r0, [sp, #27]
 801ac90:	d009      	beq.n	801aca6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x25e>
 801ac92:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801ac96:	4283      	cmp	r3, r0
 801ac98:	d19d      	bne.n	801abd6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x18e>
 801ac9a:	212d      	movs	r1, #45	; 0x2d
 801ac9c:	4640      	mov	r0, r8
 801ac9e:	f7f5 fbc6 	bl	801042e <_ZNSs9push_backEc>
 801aca2:	4655      	mov	r5, sl
 801aca4:	e7a8      	b.n	801abf8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1b0>
 801aca6:	212b      	movs	r1, #43	; 0x2b
 801aca8:	e7f8      	b.n	801ac9c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x254>
 801acaa:	4699      	mov	r9, r3
 801acac:	464e      	mov	r6, r9
 801acae:	46a9      	mov	r9, r5
 801acb0:	461d      	mov	r5, r3
 801acb2:	e754      	b.n	801ab5e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x116>
 801acb4:	464b      	mov	r3, r9
 801acb6:	e7f9      	b.n	801acac <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x264>
 801acb8:	4655      	mov	r5, sl
 801acba:	e7f7      	b.n	801acac <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x264>
 801acbc:	4640      	mov	r0, r8
 801acbe:	f7f5 f9ab 	bl	8010018 <_ZNSs5clearEv>
 801acc2:	9b07      	ldr	r3, [sp, #28]
 801acc4:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801acc8:	b183      	cbz	r3, 801acec <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2a4>
 801acca:	9b00      	ldr	r3, [sp, #0]
 801accc:	b92b      	cbnz	r3, 801acda <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x292>
 801acce:	b925      	cbnz	r5, 801acda <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x292>
 801acd0:	fa5f f18b 	uxtb.w	r1, fp
 801acd4:	a807      	add	r0, sp, #28
 801acd6:	f7f5 fbaa 	bl	801042e <_ZNSs9push_backEc>
 801acda:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 801acde:	aa07      	add	r2, sp, #28
 801ace0:	f009 ff64 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 801ace4:	b910      	cbnz	r0, 801acec <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2a4>
 801ace6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801ace8:	2204      	movs	r2, #4
 801acea:	601a      	str	r2, [r3, #0]
 801acec:	e897 0003 	ldmia.w	r7, {r0, r1}
 801acf0:	9b02      	ldr	r3, [sp, #8]
 801acf2:	e883 0003 	stmia.w	r3, {r0, r1}
 801acf6:	a807      	add	r0, sp, #28
 801acf8:	f7f5 f984 	bl	8010004 <_ZNSsD1Ev>
 801acfc:	9802      	ldr	r0, [sp, #8]
 801acfe:	b009      	add	sp, #36	; 0x24
 801ad00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad04:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 801ad08:	454b      	cmp	r3, r9
 801ad0a:	d116      	bne.n	801ad3a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2f2>
 801ad0c:	9b07      	ldr	r3, [sp, #28]
 801ad0e:	9a00      	ldr	r2, [sp, #0]
 801ad10:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801ad14:	2a00      	cmp	r2, #0
 801ad16:	d1d4      	bne.n	801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ad18:	2d00      	cmp	r5, #0
 801ad1a:	d1d2      	bne.n	801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ad1c:	b123      	cbz	r3, 801ad28 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2e0>
 801ad1e:	fa5f f18b 	uxtb.w	r1, fp
 801ad22:	a807      	add	r0, sp, #28
 801ad24:	f7f5 fb83 	bl	801042e <_ZNSs9push_backEc>
 801ad28:	212e      	movs	r1, #46	; 0x2e
 801ad2a:	4640      	mov	r0, r8
 801ad2c:	f7f5 fb7f 	bl	801042e <_ZNSs9push_backEc>
 801ad30:	46b1      	mov	r9, r6
 801ad32:	2300      	movs	r3, #0
 801ad34:	f8cd a000 	str.w	sl, [sp]
 801ad38:	e733      	b.n	801aba2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801ad3a:	9801      	ldr	r0, [sp, #4]
 801ad3c:	f10d 021b 	add.w	r2, sp, #27
 801ad40:	210a      	movs	r1, #10
 801ad42:	f7f5 f833 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 801ad46:	b178      	cbz	r0, 801ad68 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x320>
 801ad48:	9b01      	ldr	r3, [sp, #4]
 801ad4a:	1ac0      	subs	r0, r0, r3
 801ad4c:	f100 0130 	add.w	r1, r0, #48	; 0x30
 801ad50:	b2c9      	uxtb	r1, r1
 801ad52:	4640      	mov	r0, r8
 801ad54:	f7f5 fb6b 	bl	801042e <_ZNSs9push_backEc>
 801ad58:	f10b 0b01 	add.w	fp, fp, #1
 801ad5c:	462b      	mov	r3, r5
 801ad5e:	46d1      	mov	r9, sl
 801ad60:	e71f      	b.n	801aba2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801ad62:	bf00      	nop
 801ad64:	20003bf0 	.word	0x20003bf0
 801ad68:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
 801ad6c:	454b      	cmp	r3, r9
 801ad6e:	d003      	beq.n	801ad78 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x330>
 801ad70:	f894 3062 	ldrb.w	r3, [r4, #98]	; 0x62
 801ad74:	454b      	cmp	r3, r9
 801ad76:	d1a4      	bne.n	801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ad78:	9b07      	ldr	r3, [sp, #28]
 801ad7a:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801ad7e:	2d00      	cmp	r5, #0
 801ad80:	d19f      	bne.n	801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ad82:	2e00      	cmp	r6, #0
 801ad84:	d09d      	beq.n	801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ad86:	b133      	cbz	r3, 801ad96 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x34e>
 801ad88:	9b00      	ldr	r3, [sp, #0]
 801ad8a:	b923      	cbnz	r3, 801ad96 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x34e>
 801ad8c:	fa5f f18b 	uxtb.w	r1, fp
 801ad90:	a807      	add	r0, sp, #28
 801ad92:	f7f5 fb4c 	bl	801042e <_ZNSs9push_backEc>
 801ad96:	2165      	movs	r1, #101	; 0x65
 801ad98:	4640      	mov	r0, r8
 801ad9a:	f7f5 fb48 	bl	801042e <_ZNSs9push_backEc>
 801ad9e:	9804      	ldr	r0, [sp, #16]
 801ada0:	f7fd f942 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801ada4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801ada8:	a912      	add	r1, sp, #72	; 0x48
 801adaa:	a804      	add	r0, sp, #16
 801adac:	9305      	str	r3, [sp, #20]
 801adae:	f7f7 f8c5 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801adb2:	4681      	mov	r9, r0
 801adb4:	b318      	cbz	r0, 801adfe <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3b6>
 801adb6:	a804      	add	r0, sp, #16
 801adb8:	f7f7 f89e 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801adbc:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 801adc0:	b2c0      	uxtb	r0, r0
 801adc2:	4281      	cmp	r1, r0
 801adc4:	f88d 001b 	strb.w	r0, [sp, #27]
 801adc8:	d004      	beq.n	801add4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x38c>
 801adca:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801adce:	4283      	cmp	r3, r0
 801add0:	f47f af70 	bne.w	801acb4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x26c>
 801add4:	7c23      	ldrb	r3, [r4, #16]
 801add6:	b123      	cbz	r3, 801ade2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x39a>
 801add8:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 801addc:	4282      	cmp	r2, r0
 801adde:	f43f af64 	beq.w	801acaa <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x262>
 801ade2:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 801ade6:	4283      	cmp	r3, r0
 801ade8:	f43f af64 	beq.w	801acb4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x26c>
 801adec:	4281      	cmp	r1, r0
 801adee:	bf0c      	ite	eq
 801adf0:	212b      	moveq	r1, #43	; 0x2b
 801adf2:	212d      	movne	r1, #45	; 0x2d
 801adf4:	4640      	mov	r0, r8
 801adf6:	f7f5 fb1a 	bl	801042e <_ZNSs9push_backEc>
 801adfa:	464b      	mov	r3, r9
 801adfc:	e6d1      	b.n	801aba2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801adfe:	4635      	mov	r5, r6
 801ae00:	e75f      	b.n	801acc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ae02:	bf00      	nop

0801ae04 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRf>:
 801ae04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ae08:	b08d      	sub	sp, #52	; 0x34
 801ae0a:	ac08      	add	r4, sp, #32
 801ae0c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801ae0e:	af0a      	add	r7, sp, #40	; 0x28
 801ae10:	e884 000c 	stmia.w	r4, {r2, r3}
 801ae14:	4689      	mov	r9, r1
 801ae16:	4b1d      	ldr	r3, [pc, #116]	; (801ae8c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRf+0x88>)
 801ae18:	930a      	str	r3, [sp, #40]	; 0x28
 801ae1a:	2120      	movs	r1, #32
 801ae1c:	4605      	mov	r5, r0
 801ae1e:	4638      	mov	r0, r7
 801ae20:	f7f5 fa37 	bl	8010292 <_ZNSs7reserveEj>
 801ae24:	e9cd 6703 	strd	r6, r7, [sp, #12]
 801ae28:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ae2a:	9302      	str	r3, [sp, #8]
 801ae2c:	ab14      	add	r3, sp, #80	; 0x50
 801ae2e:	e893 0003 	ldmia.w	r3, {r0, r1}
 801ae32:	e88d 0003 	stmia.w	sp, {r0, r1}
 801ae36:	f10d 0818 	add.w	r8, sp, #24
 801ae3a:	e894 000c 	ldmia.w	r4, {r2, r3}
 801ae3e:	4640      	mov	r0, r8
 801ae40:	4649      	mov	r1, r9
 801ae42:	f7ff fe01 	bl	801aa48 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 801ae46:	e898 0003 	ldmia.w	r8, {r0, r1}
 801ae4a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801ae4e:	e884 0003 	stmia.w	r4, {r0, r1}
 801ae52:	f7f1 fa43 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 801ae56:	9918      	ldr	r1, [sp, #96]	; 0x60
 801ae58:	900b      	str	r0, [sp, #44]	; 0x2c
 801ae5a:	ab0b      	add	r3, sp, #44	; 0x2c
 801ae5c:	4640      	mov	r0, r8
 801ae5e:	4632      	mov	r2, r6
 801ae60:	f009 fb8a 	bl	8024578 <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi>
 801ae64:	a914      	add	r1, sp, #80	; 0x50
 801ae66:	4620      	mov	r0, r4
 801ae68:	f7f7 f855 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801ae6c:	b118      	cbz	r0, 801ae76 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRf+0x72>
 801ae6e:	6833      	ldr	r3, [r6, #0]
 801ae70:	f043 0302 	orr.w	r3, r3, #2
 801ae74:	6033      	str	r3, [r6, #0]
 801ae76:	e894 0003 	ldmia.w	r4, {r0, r1}
 801ae7a:	e885 0003 	stmia.w	r5, {r0, r1}
 801ae7e:	4638      	mov	r0, r7
 801ae80:	f7f5 f8c0 	bl	8010004 <_ZNSsD1Ev>
 801ae84:	4628      	mov	r0, r5
 801ae86:	b00d      	add	sp, #52	; 0x34
 801ae88:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ae8c:	20003bf0 	.word	0x20003bf0

0801ae90 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRd>:
 801ae90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ae94:	b08d      	sub	sp, #52	; 0x34
 801ae96:	ac08      	add	r4, sp, #32
 801ae98:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801ae9a:	af0a      	add	r7, sp, #40	; 0x28
 801ae9c:	e884 000c 	stmia.w	r4, {r2, r3}
 801aea0:	4689      	mov	r9, r1
 801aea2:	4b1d      	ldr	r3, [pc, #116]	; (801af18 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRd+0x88>)
 801aea4:	930a      	str	r3, [sp, #40]	; 0x28
 801aea6:	2120      	movs	r1, #32
 801aea8:	4605      	mov	r5, r0
 801aeaa:	4638      	mov	r0, r7
 801aeac:	f7f5 f9f1 	bl	8010292 <_ZNSs7reserveEj>
 801aeb0:	e9cd 6703 	strd	r6, r7, [sp, #12]
 801aeb4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801aeb6:	9302      	str	r3, [sp, #8]
 801aeb8:	ab14      	add	r3, sp, #80	; 0x50
 801aeba:	e893 0003 	ldmia.w	r3, {r0, r1}
 801aebe:	e88d 0003 	stmia.w	sp, {r0, r1}
 801aec2:	f10d 0818 	add.w	r8, sp, #24
 801aec6:	e894 000c 	ldmia.w	r4, {r2, r3}
 801aeca:	4640      	mov	r0, r8
 801aecc:	4649      	mov	r1, r9
 801aece:	f7ff fdbb 	bl	801aa48 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 801aed2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801aed6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801aeda:	e884 0003 	stmia.w	r4, {r0, r1}
 801aede:	f7f1 f9fd 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 801aee2:	9918      	ldr	r1, [sp, #96]	; 0x60
 801aee4:	900b      	str	r0, [sp, #44]	; 0x2c
 801aee6:	ab0b      	add	r3, sp, #44	; 0x2c
 801aee8:	4640      	mov	r0, r8
 801aeea:	4632      	mov	r2, r6
 801aeec:	f009 fb92 	bl	8024614 <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi>
 801aef0:	a914      	add	r1, sp, #80	; 0x50
 801aef2:	4620      	mov	r0, r4
 801aef4:	f7f7 f80f 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801aef8:	b118      	cbz	r0, 801af02 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRd+0x72>
 801aefa:	6833      	ldr	r3, [r6, #0]
 801aefc:	f043 0302 	orr.w	r3, r3, #2
 801af00:	6033      	str	r3, [r6, #0]
 801af02:	e894 0003 	ldmia.w	r4, {r0, r1}
 801af06:	e885 0003 	stmia.w	r5, {r0, r1}
 801af0a:	4638      	mov	r0, r7
 801af0c:	f7f5 f87a 	bl	8010004 <_ZNSsD1Ev>
 801af10:	4628      	mov	r0, r5
 801af12:	b00d      	add	sp, #52	; 0x34
 801af14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801af18:	20003bf0 	.word	0x20003bf0

0801af1c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRe>:
 801af1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801af20:	b08d      	sub	sp, #52	; 0x34
 801af22:	ac08      	add	r4, sp, #32
 801af24:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801af26:	af0a      	add	r7, sp, #40	; 0x28
 801af28:	e884 000c 	stmia.w	r4, {r2, r3}
 801af2c:	4689      	mov	r9, r1
 801af2e:	4b1d      	ldr	r3, [pc, #116]	; (801afa4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRe+0x88>)
 801af30:	930a      	str	r3, [sp, #40]	; 0x28
 801af32:	2120      	movs	r1, #32
 801af34:	4605      	mov	r5, r0
 801af36:	4638      	mov	r0, r7
 801af38:	f7f5 f9ab 	bl	8010292 <_ZNSs7reserveEj>
 801af3c:	e9cd 6703 	strd	r6, r7, [sp, #12]
 801af40:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801af42:	9302      	str	r3, [sp, #8]
 801af44:	ab14      	add	r3, sp, #80	; 0x50
 801af46:	e893 0003 	ldmia.w	r3, {r0, r1}
 801af4a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801af4e:	f10d 0818 	add.w	r8, sp, #24
 801af52:	e894 000c 	ldmia.w	r4, {r2, r3}
 801af56:	4640      	mov	r0, r8
 801af58:	4649      	mov	r1, r9
 801af5a:	f7ff fd75 	bl	801aa48 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 801af5e:	e898 0003 	ldmia.w	r8, {r0, r1}
 801af62:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801af66:	e884 0003 	stmia.w	r4, {r0, r1}
 801af6a:	f7f1 f9b7 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 801af6e:	9918      	ldr	r1, [sp, #96]	; 0x60
 801af70:	900b      	str	r0, [sp, #44]	; 0x2c
 801af72:	ab0b      	add	r3, sp, #44	; 0x2c
 801af74:	4640      	mov	r0, r8
 801af76:	4632      	mov	r2, r6
 801af78:	f009 fba6 	bl	80246c8 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi>
 801af7c:	a914      	add	r1, sp, #80	; 0x50
 801af7e:	4620      	mov	r0, r4
 801af80:	f7f6 ffc9 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801af84:	b118      	cbz	r0, 801af8e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRe+0x72>
 801af86:	6833      	ldr	r3, [r6, #0]
 801af88:	f043 0302 	orr.w	r3, r3, #2
 801af8c:	6033      	str	r3, [r6, #0]
 801af8e:	e894 0003 	ldmia.w	r4, {r0, r1}
 801af92:	e885 0003 	stmia.w	r5, {r0, r1}
 801af96:	4638      	mov	r0, r7
 801af98:	f7f5 f834 	bl	8010004 <_ZNSsD1Ev>
 801af9c:	4628      	mov	r0, r5
 801af9e:	b00d      	add	sp, #52	; 0x34
 801afa0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801afa4:	20003bf0 	.word	0x20003bf0

0801afa8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>:
 801afa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afac:	ed2d 8b02 	vpush	{d8}
 801afb0:	b08b      	sub	sp, #44	; 0x2c
 801afb2:	f10d 0a18 	add.w	sl, sp, #24
 801afb6:	9d18      	ldr	r5, [sp, #96]	; 0x60
 801afb8:	9005      	str	r0, [sp, #20]
 801afba:	f105 016c 	add.w	r1, r5, #108	; 0x6c
 801afbe:	a808      	add	r0, sp, #32
 801afc0:	e88a 000c 	stmia.w	sl, {r2, r3}
 801afc4:	f7fe fab4 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 801afc8:	68ef      	ldr	r7, [r5, #12]
 801afca:	f007 074a 	and.w	r7, r7, #74	; 0x4a
 801afce:	2300      	movs	r3, #0
 801afd0:	2f40      	cmp	r7, #64	; 0x40
 801afd2:	4604      	mov	r4, r0
 801afd4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801afd8:	d056      	beq.n	801b088 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe0>
 801afda:	2f08      	cmp	r7, #8
 801afdc:	bf0c      	ite	eq
 801afde:	f04f 0810 	moveq.w	r8, #16
 801afe2:	f04f 080a 	movne.w	r8, #10
 801afe6:	a916      	add	r1, sp, #88	; 0x58
 801afe8:	4650      	mov	r0, sl
 801afea:	f7f6 ff94 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801afee:	4681      	mov	r9, r0
 801aff0:	2800      	cmp	r0, #0
 801aff2:	f040 8083 	bne.w	801b0fc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x154>
 801aff6:	4650      	mov	r0, sl
 801aff8:	f7f6 ff7e 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801affc:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801b000:	b2c0      	uxtb	r0, r0
 801b002:	4283      	cmp	r3, r0
 801b004:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801b008:	bf0c      	ite	eq
 801b00a:	f04f 0b01 	moveq.w	fp, #1
 801b00e:	f04f 0b00 	movne.w	fp, #0
 801b012:	d003      	beq.n	801b01c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x74>
 801b014:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 801b018:	4283      	cmp	r3, r0
 801b01a:	d11c      	bne.n	801b056 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xae>
 801b01c:	7c23      	ldrb	r3, [r4, #16]
 801b01e:	b11b      	cbz	r3, 801b028 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x80>
 801b020:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801b024:	4283      	cmp	r3, r0
 801b026:	d016      	beq.n	801b056 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xae>
 801b028:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 801b02c:	4283      	cmp	r3, r0
 801b02e:	d012      	beq.n	801b056 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xae>
 801b030:	9806      	ldr	r0, [sp, #24]
 801b032:	f7fc fff9 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801b036:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801b03a:	a916      	add	r1, sp, #88	; 0x58
 801b03c:	4650      	mov	r0, sl
 801b03e:	9307      	str	r3, [sp, #28]
 801b040:	f7f6 ff7c 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801b044:	4605      	mov	r5, r0
 801b046:	2800      	cmp	r0, #0
 801b048:	f000 80a6 	beq.w	801b198 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f0>
 801b04c:	4650      	mov	r0, sl
 801b04e:	f7f6 ff53 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b052:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801b056:	2500      	movs	r5, #0
 801b058:	462e      	mov	r6, r5
 801b05a:	7c22      	ldrb	r2, [r4, #16]
 801b05c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 801b060:	b11a      	cbz	r2, 801b06a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xc2>
 801b062:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 801b066:	429a      	cmp	r2, r3
 801b068:	d04c      	beq.n	801b104 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15c>
 801b06a:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 801b06e:	429a      	cmp	r2, r3
 801b070:	d048      	beq.n	801b104 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15c>
 801b072:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 801b076:	429a      	cmp	r2, r3
 801b078:	d110      	bne.n	801b09c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf4>
 801b07a:	b145      	cbz	r5, 801b08e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe6>
 801b07c:	f1b8 0f0a 	cmp.w	r8, #10
 801b080:	d10d      	bne.n	801b09e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf6>
 801b082:	b947      	cbnz	r7, 801b096 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xee>
 801b084:	463e      	mov	r6, r7
 801b086:	e02f      	b.n	801b0e8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x140>
 801b088:	f04f 0808 	mov.w	r8, #8
 801b08c:	e7ab      	b.n	801afe6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x3e>
 801b08e:	b34f      	cbz	r7, 801b0e4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x13c>
 801b090:	f1b8 0f08 	cmp.w	r8, #8
 801b094:	d02b      	beq.n	801b0ee <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x146>
 801b096:	3601      	adds	r6, #1
 801b098:	2501      	movs	r5, #1
 801b09a:	e00e      	b.n	801b0ba <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x112>
 801b09c:	b305      	cbz	r5, 801b0e0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 801b09e:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 801b0a2:	429a      	cmp	r2, r3
 801b0a4:	d003      	beq.n	801b0ae <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x106>
 801b0a6:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 801b0aa:	429a      	cmp	r2, r3
 801b0ac:	d178      	bne.n	801b1a0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f8>
 801b0ae:	b307      	cbz	r7, 801b0f2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14a>
 801b0b0:	f1b8 0f10 	cmp.w	r8, #16
 801b0b4:	d179      	bne.n	801b1aa <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x202>
 801b0b6:	2600      	movs	r6, #0
 801b0b8:	4635      	mov	r5, r6
 801b0ba:	9806      	ldr	r0, [sp, #24]
 801b0bc:	f7fc ffb4 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801b0c0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801b0c4:	a916      	add	r1, sp, #88	; 0x58
 801b0c6:	4650      	mov	r0, sl
 801b0c8:	9307      	str	r3, [sp, #28]
 801b0ca:	f7f6 ff37 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801b0ce:	2800      	cmp	r0, #0
 801b0d0:	d068      	beq.n	801b1a4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1fc>
 801b0d2:	4650      	mov	r0, sl
 801b0d4:	f7f6 ff10 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b0d8:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801b0dc:	2d00      	cmp	r5, #0
 801b0de:	d1bc      	bne.n	801b05a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xb2>
 801b0e0:	46a9      	mov	r9, r5
 801b0e2:	e00f      	b.n	801b104 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15c>
 801b0e4:	463e      	mov	r6, r7
 801b0e6:	2501      	movs	r5, #1
 801b0e8:	f04f 0808 	mov.w	r8, #8
 801b0ec:	e7e5      	b.n	801b0ba <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x112>
 801b0ee:	462e      	mov	r6, r5
 801b0f0:	e7d2      	b.n	801b098 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf0>
 801b0f2:	463e      	mov	r6, r7
 801b0f4:	463d      	mov	r5, r7
 801b0f6:	f04f 0810 	mov.w	r8, #16
 801b0fa:	e7de      	b.n	801b0ba <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x112>
 801b0fc:	f04f 0b00 	mov.w	fp, #0
 801b100:	465e      	mov	r6, fp
 801b102:	465d      	mov	r5, fp
 801b104:	f1b8 0f10 	cmp.w	r8, #16
 801b108:	bf14      	ite	ne
 801b10a:	4643      	movne	r3, r8
 801b10c:	2316      	moveq	r3, #22
 801b10e:	ee08 3a10 	vmov	s16, r3
 801b112:	4b7a      	ldr	r3, [pc, #488]	; (801b2fc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x354>)
 801b114:	9309      	str	r3, [sp, #36]	; 0x24
 801b116:	7c23      	ldrb	r3, [r4, #16]
 801b118:	b11b      	cbz	r3, 801b122 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x17a>
 801b11a:	2120      	movs	r1, #32
 801b11c:	a809      	add	r0, sp, #36	; 0x24
 801b11e:	f7f5 f8b8 	bl	8010292 <_ZNSs7reserveEj>
 801b122:	f1bb 0f00 	cmp.w	fp, #0
 801b126:	bf14      	ite	ne
 801b128:	f04f 4300 	movne.w	r3, #2147483648	; 0x80000000
 801b12c:	f06f 4300 	mvneq.w	r3, #2147483648	; 0x80000000
 801b130:	9302      	str	r3, [sp, #8]
 801b132:	fbb3 f3f8 	udiv	r3, r3, r8
 801b136:	9303      	str	r3, [sp, #12]
 801b138:	f894 3064 	ldrb.w	r3, [r4, #100]	; 0x64
 801b13c:	9301      	str	r3, [sp, #4]
 801b13e:	2b00      	cmp	r3, #0
 801b140:	d060      	beq.n	801b204 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x25c>
 801b142:	f104 034e 	add.w	r3, r4, #78	; 0x4e
 801b146:	2700      	movs	r7, #0
 801b148:	9304      	str	r3, [sp, #16]
 801b14a:	46ba      	mov	sl, r7
 801b14c:	f1b9 0f00 	cmp.w	r9, #0
 801b150:	d131      	bne.n	801b1b6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20e>
 801b152:	7c23      	ldrb	r3, [r4, #16]
 801b154:	f89d 2023 	ldrb.w	r2, [sp, #35]	; 0x23
 801b158:	2b00      	cmp	r3, #0
 801b15a:	f000 8086 	beq.w	801b26a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2c2>
 801b15e:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 801b162:	4291      	cmp	r1, r2
 801b164:	f040 8081 	bne.w	801b26a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2c2>
 801b168:	b336      	cbz	r6, 801b1b8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x210>
 801b16a:	b2f1      	uxtb	r1, r6
 801b16c:	a809      	add	r0, sp, #36	; 0x24
 801b16e:	f7f5 f95e 	bl	801042e <_ZNSs9push_backEc>
 801b172:	2600      	movs	r6, #0
 801b174:	9806      	ldr	r0, [sp, #24]
 801b176:	f7fc ff57 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801b17a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801b17e:	a916      	add	r1, sp, #88	; 0x58
 801b180:	a806      	add	r0, sp, #24
 801b182:	9307      	str	r3, [sp, #28]
 801b184:	f7f6 feda 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801b188:	2800      	cmp	r0, #0
 801b18a:	d06b      	beq.n	801b264 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2bc>
 801b18c:	a806      	add	r0, sp, #24
 801b18e:	f7f6 feb3 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b192:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801b196:	e7dc      	b.n	801b152 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1aa>
 801b198:	f04f 0901 	mov.w	r9, #1
 801b19c:	4606      	mov	r6, r0
 801b19e:	e7b1      	b.n	801b104 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15c>
 801b1a0:	2501      	movs	r5, #1
 801b1a2:	e7af      	b.n	801b104 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15c>
 801b1a4:	f04f 0901 	mov.w	r9, #1
 801b1a8:	e7ac      	b.n	801b104 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15c>
 801b1aa:	ee08 8a10 	vmov	s16, r8
 801b1ae:	2501      	movs	r5, #1
 801b1b0:	e7af      	b.n	801b112 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x16a>
 801b1b2:	f04f 0901 	mov.w	r9, #1
 801b1b6:	2300      	movs	r3, #0
 801b1b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b1ba:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801b1be:	b172      	cbz	r2, 801b1de <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x236>
 801b1c0:	b2f1      	uxtb	r1, r6
 801b1c2:	a809      	add	r0, sp, #36	; 0x24
 801b1c4:	9301      	str	r3, [sp, #4]
 801b1c6:	f7f5 f932 	bl	801042e <_ZNSs9push_backEc>
 801b1ca:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 801b1ce:	aa09      	add	r2, sp, #36	; 0x24
 801b1d0:	f009 fcec 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 801b1d4:	9b01      	ldr	r3, [sp, #4]
 801b1d6:	b910      	cbnz	r0, 801b1de <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x236>
 801b1d8:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b1da:	2204      	movs	r2, #4
 801b1dc:	600a      	str	r2, [r1, #0]
 801b1de:	b92e      	cbnz	r6, 801b1ec <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x244>
 801b1e0:	b925      	cbnz	r5, 801b1ec <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x244>
 801b1e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b1e4:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801b1e8:	2a00      	cmp	r2, #0
 801b1ea:	d062      	beq.n	801b2b2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x30a>
 801b1ec:	2b00      	cmp	r3, #0
 801b1ee:	d160      	bne.n	801b2b2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x30a>
 801b1f0:	f1ba 0f00 	cmp.w	sl, #0
 801b1f4:	d17a      	bne.n	801b2ec <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x344>
 801b1f6:	f1bb 0f00 	cmp.w	fp, #0
 801b1fa:	d000      	beq.n	801b1fe <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x256>
 801b1fc:	427f      	negs	r7, r7
 801b1fe:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b200:	601f      	str	r7, [r3, #0]
 801b202:	e05c      	b.n	801b2be <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x316>
 801b204:	f8dd a004 	ldr.w	sl, [sp, #4]
 801b208:	4657      	mov	r7, sl
 801b20a:	f1b9 0f00 	cmp.w	r9, #0
 801b20e:	d1d2      	bne.n	801b1b6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20e>
 801b210:	f89d 1023 	ldrb.w	r1, [sp, #35]	; 0x23
 801b214:	ee18 0a10 	vmov	r0, s16
 801b218:	f7fc ff10 	bl	801803c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>
 801b21c:	1c43      	adds	r3, r0, #1
 801b21e:	d0ca      	beq.n	801b1b6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20e>
 801b220:	9b03      	ldr	r3, [sp, #12]
 801b222:	429f      	cmp	r7, r3
 801b224:	d81b      	bhi.n	801b25e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2b6>
 801b226:	9b02      	ldr	r3, [sp, #8]
 801b228:	fb07 f708 	mul.w	r7, r7, r8
 801b22c:	1a1b      	subs	r3, r3, r0
 801b22e:	42bb      	cmp	r3, r7
 801b230:	bf38      	it	cc
 801b232:	f04a 0a01 	orrcc.w	sl, sl, #1
 801b236:	3601      	adds	r6, #1
 801b238:	4407      	add	r7, r0
 801b23a:	9806      	ldr	r0, [sp, #24]
 801b23c:	f7fc fef4 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801b240:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801b244:	a916      	add	r1, sp, #88	; 0x58
 801b246:	a806      	add	r0, sp, #24
 801b248:	9307      	str	r3, [sp, #28]
 801b24a:	f7f6 fe77 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801b24e:	2800      	cmp	r0, #0
 801b250:	d0af      	beq.n	801b1b2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20a>
 801b252:	a806      	add	r0, sp, #24
 801b254:	f7f6 fe50 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b258:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801b25c:	e7d8      	b.n	801b210 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x268>
 801b25e:	f04f 0a01 	mov.w	sl, #1
 801b262:	e7ea      	b.n	801b23a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x292>
 801b264:	f8dd 9004 	ldr.w	r9, [sp, #4]
 801b268:	e770      	b.n	801b14c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1a4>
 801b26a:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 801b26e:	4293      	cmp	r3, r2
 801b270:	d0a1      	beq.n	801b1b6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20e>
 801b272:	ee18 1a10 	vmov	r1, s16
 801b276:	9804      	ldr	r0, [sp, #16]
 801b278:	f10d 0223 	add.w	r2, sp, #35	; 0x23
 801b27c:	f7f4 fd96 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 801b280:	b1a8      	cbz	r0, 801b2ae <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x306>
 801b282:	9b04      	ldr	r3, [sp, #16]
 801b284:	1ac0      	subs	r0, r0, r3
 801b286:	9b03      	ldr	r3, [sp, #12]
 801b288:	280f      	cmp	r0, #15
 801b28a:	bfc8      	it	gt
 801b28c:	3806      	subgt	r0, #6
 801b28e:	429f      	cmp	r7, r3
 801b290:	d80a      	bhi.n	801b2a8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x300>
 801b292:	9b02      	ldr	r3, [sp, #8]
 801b294:	fb07 f708 	mul.w	r7, r7, r8
 801b298:	1a1b      	subs	r3, r3, r0
 801b29a:	42bb      	cmp	r3, r7
 801b29c:	bf38      	it	cc
 801b29e:	f04a 0a01 	orrcc.w	sl, sl, #1
 801b2a2:	3601      	adds	r6, #1
 801b2a4:	4407      	add	r7, r0
 801b2a6:	e765      	b.n	801b174 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1cc>
 801b2a8:	f8dd a004 	ldr.w	sl, [sp, #4]
 801b2ac:	e762      	b.n	801b174 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1cc>
 801b2ae:	4603      	mov	r3, r0
 801b2b0:	e782      	b.n	801b1b8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x210>
 801b2b2:	2300      	movs	r3, #0
 801b2b4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801b2b6:	6013      	str	r3, [r2, #0]
 801b2b8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801b2ba:	2304      	movs	r3, #4
 801b2bc:	6013      	str	r3, [r2, #0]
 801b2be:	f1b9 0f00 	cmp.w	r9, #0
 801b2c2:	d005      	beq.n	801b2d0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x328>
 801b2c4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b2c6:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801b2c8:	681b      	ldr	r3, [r3, #0]
 801b2ca:	f043 0302 	orr.w	r3, r3, #2
 801b2ce:	6013      	str	r3, [r2, #0]
 801b2d0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b2d4:	9b05      	ldr	r3, [sp, #20]
 801b2d6:	e883 0003 	stmia.w	r3, {r0, r1}
 801b2da:	a809      	add	r0, sp, #36	; 0x24
 801b2dc:	f7f4 fe92 	bl	8010004 <_ZNSsD1Ev>
 801b2e0:	9805      	ldr	r0, [sp, #20]
 801b2e2:	b00b      	add	sp, #44	; 0x2c
 801b2e4:	ecbd 8b02 	vpop	{d8}
 801b2e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b2ec:	f1bb 0f00 	cmp.w	fp, #0
 801b2f0:	bf14      	ite	ne
 801b2f2:	f04f 4300 	movne.w	r3, #2147483648	; 0x80000000
 801b2f6:	f06f 4300 	mvneq.w	r3, #2147483648	; 0x80000000
 801b2fa:	e7db      	b.n	801b2b4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x30c>
 801b2fc:	20003bf0 	.word	0x20003bf0

0801b300 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRl>:
 801b300:	b570      	push	{r4, r5, r6, lr}
 801b302:	b088      	sub	sp, #32
 801b304:	ad06      	add	r5, sp, #24
 801b306:	e885 000c 	stmia.w	r5, {r2, r3}
 801b30a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b30c:	9304      	str	r3, [sp, #16]
 801b30e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b310:	9303      	str	r3, [sp, #12]
 801b312:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b314:	9302      	str	r3, [sp, #8]
 801b316:	ab0c      	add	r3, sp, #48	; 0x30
 801b318:	4604      	mov	r4, r0
 801b31a:	460e      	mov	r6, r1
 801b31c:	e893 0003 	ldmia.w	r3, {r0, r1}
 801b320:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b324:	4620      	mov	r0, r4
 801b326:	e895 000c 	ldmia.w	r5, {r2, r3}
 801b32a:	4631      	mov	r1, r6
 801b32c:	f7ff fe3c 	bl	801afa8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 801b330:	4620      	mov	r0, r4
 801b332:	b008      	add	sp, #32
 801b334:	bd70      	pop	{r4, r5, r6, pc}

0801b336 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb>:
 801b336:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b33a:	b08f      	sub	sp, #60	; 0x3c
 801b33c:	460e      	mov	r6, r1
 801b33e:	e9dd 191a 	ldrd	r1, r9, [sp, #104]	; 0x68
 801b342:	ad0a      	add	r5, sp, #40	; 0x28
 801b344:	e885 000c 	stmia.w	r5, {r2, r3}
 801b348:	68ca      	ldr	r2, [r1, #12]
 801b34a:	9006      	str	r0, [sp, #24]
 801b34c:	f012 0f01 	tst.w	r2, #1
 801b350:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
 801b354:	a80d      	add	r0, sp, #52	; 0x34
 801b356:	d138      	bne.n	801b3ca <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x94>
 801b358:	e9cd 9003 	strd	r9, r0, [sp, #12]
 801b35c:	9102      	str	r1, [sp, #8]
 801b35e:	ab18      	add	r3, sp, #96	; 0x60
 801b360:	e893 0003 	ldmia.w	r3, {r0, r1}
 801b364:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b368:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801b36c:	ac08      	add	r4, sp, #32
 801b36e:	920d      	str	r2, [sp, #52]	; 0x34
 801b370:	4631      	mov	r1, r6
 801b372:	e895 000c 	ldmia.w	r5, {r2, r3}
 801b376:	4620      	mov	r0, r4
 801b378:	f7ff fe16 	bl	801afa8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 801b37c:	e894 0003 	ldmia.w	r4, {r0, r1}
 801b380:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b382:	2b01      	cmp	r3, #1
 801b384:	e885 0003 	stmia.w	r5, {r0, r1}
 801b388:	d80c      	bhi.n	801b3a4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x6e>
 801b38a:	f003 0301 	and.w	r3, r3, #1
 801b38e:	f88a 3000 	strb.w	r3, [sl]
 801b392:	e895 0003 	ldmia.w	r5, {r0, r1}
 801b396:	9b06      	ldr	r3, [sp, #24]
 801b398:	e883 0003 	stmia.w	r3, {r0, r1}
 801b39c:	4618      	mov	r0, r3
 801b39e:	b00f      	add	sp, #60	; 0x3c
 801b3a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3a4:	2301      	movs	r3, #1
 801b3a6:	f88a 3000 	strb.w	r3, [sl]
 801b3aa:	2304      	movs	r3, #4
 801b3ac:	f8c9 3000 	str.w	r3, [r9]
 801b3b0:	a918      	add	r1, sp, #96	; 0x60
 801b3b2:	4628      	mov	r0, r5
 801b3b4:	f7f6 fdaf 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801b3b8:	2800      	cmp	r0, #0
 801b3ba:	d0ea      	beq.n	801b392 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x5c>
 801b3bc:	f8d9 3000 	ldr.w	r3, [r9]
 801b3c0:	f043 0302 	orr.w	r3, r3, #2
 801b3c4:	f8c9 3000 	str.w	r3, [r9]
 801b3c8:	e7e3      	b.n	801b392 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x5c>
 801b3ca:	316c      	adds	r1, #108	; 0x6c
 801b3cc:	f7fe f8b0 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 801b3d0:	6a06      	ldr	r6, [r0, #32]
 801b3d2:	6984      	ldr	r4, [r0, #24]
 801b3d4:	fab6 f686 	clz	r6, r6
 801b3d8:	fab4 f484 	clz	r4, r4
 801b3dc:	f04f 0b01 	mov.w	fp, #1
 801b3e0:	4680      	mov	r8, r0
 801b3e2:	0976      	lsrs	r6, r6, #5
 801b3e4:	0964      	lsrs	r4, r4, #5
 801b3e6:	2700      	movs	r7, #0
 801b3e8:	465a      	mov	r2, fp
 801b3ea:	b10e      	cbz	r6, 801b3f0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xba>
 801b3ec:	2c00      	cmp	r4, #0
 801b3ee:	d146      	bne.n	801b47e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x148>
 801b3f0:	a918      	add	r1, sp, #96	; 0x60
 801b3f2:	4628      	mov	r0, r5
 801b3f4:	9207      	str	r2, [sp, #28]
 801b3f6:	f7f6 fd8e 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801b3fa:	9a07      	ldr	r2, [sp, #28]
 801b3fc:	2800      	cmp	r0, #0
 801b3fe:	d150      	bne.n	801b4a2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x16c>
 801b400:	4628      	mov	r0, r5
 801b402:	f7f6 fd79 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b406:	9a07      	ldr	r2, [sp, #28]
 801b408:	b2c0      	uxtb	r0, r0
 801b40a:	b95e      	cbnz	r6, 801b424 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xee>
 801b40c:	f8d8 201c 	ldr.w	r2, [r8, #28]
 801b410:	5dd2      	ldrb	r2, [r2, r7]
 801b412:	4282      	cmp	r2, r0
 801b414:	d008      	beq.n	801b428 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xf2>
 801b416:	b14c      	cbz	r4, 801b42c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xf6>
 801b418:	2400      	movs	r4, #0
 801b41a:	e032      	b.n	801b482 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x14c>
 801b41c:	2101      	movs	r1, #1
 801b41e:	4622      	mov	r2, r4
 801b420:	460c      	mov	r4, r1
 801b422:	e7e2      	b.n	801b3ea <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xb4>
 801b424:	2a00      	cmp	r2, #0
 801b426:	d0f6      	beq.n	801b416 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xe0>
 801b428:	b9fc      	cbnz	r4, 801b46a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x134>
 801b42a:	2401      	movs	r4, #1
 801b42c:	f8d8 3014 	ldr.w	r3, [r8, #20]
 801b430:	5ddb      	ldrb	r3, [r3, r7]
 801b432:	4283      	cmp	r3, r0
 801b434:	d01e      	beq.n	801b474 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x13e>
 801b436:	2e00      	cmp	r6, #0
 801b438:	d150      	bne.n	801b4dc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x1a6>
 801b43a:	2c00      	cmp	r4, #0
 801b43c:	d047      	beq.n	801b4ce <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x198>
 801b43e:	46b3      	mov	fp, r6
 801b440:	4628      	mov	r0, r5
 801b442:	3701      	adds	r7, #1
 801b444:	f7fd fd2b 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801b448:	b1bc      	cbz	r4, 801b47a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x144>
 801b44a:	f8d8 6020 	ldr.w	r6, [r8, #32]
 801b44e:	42be      	cmp	r6, r7
 801b450:	bf8c      	ite	hi
 801b452:	2600      	movhi	r6, #0
 801b454:	2601      	movls	r6, #1
 801b456:	f1bb 0f00 	cmp.w	fp, #0
 801b45a:	d0df      	beq.n	801b41c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xe6>
 801b45c:	f8d8 1018 	ldr.w	r1, [r8, #24]
 801b460:	42b9      	cmp	r1, r7
 801b462:	bf8c      	ite	hi
 801b464:	2100      	movhi	r1, #0
 801b466:	2101      	movls	r1, #1
 801b468:	e7d9      	b.n	801b41e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xe8>
 801b46a:	f1bb 0f00 	cmp.w	fp, #0
 801b46e:	d0e2      	beq.n	801b436 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x100>
 801b470:	465c      	mov	r4, fp
 801b472:	e7e5      	b.n	801b440 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x10a>
 801b474:	f04f 0b01 	mov.w	fp, #1
 801b478:	e7e2      	b.n	801b440 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x10a>
 801b47a:	2601      	movs	r6, #1
 801b47c:	e7eb      	b.n	801b456 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x120>
 801b47e:	2400      	movs	r4, #0
 801b480:	b99a      	cbnz	r2, 801b4aa <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x174>
 801b482:	f1bb 0f00 	cmp.w	fp, #0
 801b486:	d022      	beq.n	801b4ce <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x198>
 801b488:	f8d8 3018 	ldr.w	r3, [r8, #24]
 801b48c:	42bb      	cmp	r3, r7
 801b48e:	d11e      	bne.n	801b4ce <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x198>
 801b490:	b1ef      	cbz	r7, 801b4ce <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x198>
 801b492:	2301      	movs	r3, #1
 801b494:	f88a 3000 	strb.w	r3, [sl]
 801b498:	2c00      	cmp	r4, #0
 801b49a:	bf14      	ite	ne
 801b49c:	2302      	movne	r3, #2
 801b49e:	2300      	moveq	r3, #0
 801b4a0:	e790      	b.n	801b3c4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x8e>
 801b4a2:	4604      	mov	r4, r0
 801b4a4:	e7ec      	b.n	801b480 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x14a>
 801b4a6:	2400      	movs	r4, #0
 801b4a8:	46a3      	mov	fp, r4
 801b4aa:	f8d8 2020 	ldr.w	r2, [r8, #32]
 801b4ae:	42ba      	cmp	r2, r7
 801b4b0:	d1e7      	bne.n	801b482 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x14c>
 801b4b2:	2f00      	cmp	r7, #0
 801b4b4:	d0e5      	beq.n	801b482 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x14c>
 801b4b6:	2200      	movs	r2, #0
 801b4b8:	f88a 2000 	strb.w	r2, [sl]
 801b4bc:	f1bb 0f00 	cmp.w	fp, #0
 801b4c0:	d0ea      	beq.n	801b498 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x162>
 801b4c2:	f8d8 3018 	ldr.w	r3, [r8, #24]
 801b4c6:	42bb      	cmp	r3, r7
 801b4c8:	d1e6      	bne.n	801b498 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x162>
 801b4ca:	2304      	movs	r3, #4
 801b4cc:	e77a      	b.n	801b3c4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x8e>
 801b4ce:	2300      	movs	r3, #0
 801b4d0:	f88a 3000 	strb.w	r3, [sl]
 801b4d4:	2c00      	cmp	r4, #0
 801b4d6:	d0f8      	beq.n	801b4ca <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x194>
 801b4d8:	2306      	movs	r3, #6
 801b4da:	e773      	b.n	801b3c4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x8e>
 801b4dc:	2c00      	cmp	r4, #0
 801b4de:	d1e2      	bne.n	801b4a6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x170>
 801b4e0:	f88a 4000 	strb.w	r4, [sl]
 801b4e4:	e7f1      	b.n	801b4ca <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x194>
	...

0801b4e8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>:
 801b4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4ec:	ed2d 8b02 	vpush	{d8}
 801b4f0:	b089      	sub	sp, #36	; 0x24
 801b4f2:	f10d 0a10 	add.w	sl, sp, #16
 801b4f6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b4f8:	9003      	str	r0, [sp, #12]
 801b4fa:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 801b4fe:	a806      	add	r0, sp, #24
 801b500:	e88a 000c 	stmia.w	sl, {r2, r3}
 801b504:	f7fe f814 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 801b508:	68e4      	ldr	r4, [r4, #12]
 801b50a:	f004 044a 	and.w	r4, r4, #74	; 0x4a
 801b50e:	2300      	movs	r3, #0
 801b510:	2c40      	cmp	r4, #64	; 0x40
 801b512:	4605      	mov	r5, r0
 801b514:	f88d 301b 	strb.w	r3, [sp, #27]
 801b518:	d055      	beq.n	801b5c6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xde>
 801b51a:	2c08      	cmp	r4, #8
 801b51c:	bf0c      	ite	eq
 801b51e:	f04f 0810 	moveq.w	r8, #16
 801b522:	f04f 080a 	movne.w	r8, #10
 801b526:	a914      	add	r1, sp, #80	; 0x50
 801b528:	4650      	mov	r0, sl
 801b52a:	f7f6 fcf4 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801b52e:	4681      	mov	r9, r0
 801b530:	2800      	cmp	r0, #0
 801b532:	f040 8082 	bne.w	801b63a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x152>
 801b536:	4650      	mov	r0, sl
 801b538:	f7f6 fcde 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b53c:	f895 304a 	ldrb.w	r3, [r5, #74]	; 0x4a
 801b540:	b2c0      	uxtb	r0, r0
 801b542:	4283      	cmp	r3, r0
 801b544:	bf0c      	ite	eq
 801b546:	2301      	moveq	r3, #1
 801b548:	2300      	movne	r3, #0
 801b54a:	f88d 001b 	strb.w	r0, [sp, #27]
 801b54e:	9300      	str	r3, [sp, #0]
 801b550:	d003      	beq.n	801b55a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x72>
 801b552:	f895 304b 	ldrb.w	r3, [r5, #75]	; 0x4b
 801b556:	4283      	cmp	r3, r0
 801b558:	d11c      	bne.n	801b594 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xac>
 801b55a:	7c2b      	ldrb	r3, [r5, #16]
 801b55c:	b11b      	cbz	r3, 801b566 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x7e>
 801b55e:	f895 3025 	ldrb.w	r3, [r5, #37]	; 0x25
 801b562:	4283      	cmp	r3, r0
 801b564:	d016      	beq.n	801b594 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xac>
 801b566:	f895 3024 	ldrb.w	r3, [r5, #36]	; 0x24
 801b56a:	4283      	cmp	r3, r0
 801b56c:	d012      	beq.n	801b594 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xac>
 801b56e:	9804      	ldr	r0, [sp, #16]
 801b570:	f7fc fd5a 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801b574:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801b578:	a914      	add	r1, sp, #80	; 0x50
 801b57a:	4650      	mov	r0, sl
 801b57c:	9305      	str	r3, [sp, #20]
 801b57e:	f7f6 fcdd 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801b582:	4606      	mov	r6, r0
 801b584:	2800      	cmp	r0, #0
 801b586:	f000 80a0 	beq.w	801b6ca <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 801b58a:	4650      	mov	r0, sl
 801b58c:	f7f6 fcb4 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b590:	f88d 001b 	strb.w	r0, [sp, #27]
 801b594:	2600      	movs	r6, #0
 801b596:	4637      	mov	r7, r6
 801b598:	7c2a      	ldrb	r2, [r5, #16]
 801b59a:	f89d 301b 	ldrb.w	r3, [sp, #27]
 801b59e:	b11a      	cbz	r2, 801b5a8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xc0>
 801b5a0:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
 801b5a4:	429a      	cmp	r2, r3
 801b5a6:	d04c      	beq.n	801b642 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15a>
 801b5a8:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
 801b5ac:	429a      	cmp	r2, r3
 801b5ae:	d048      	beq.n	801b642 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15a>
 801b5b0:	f895 204e 	ldrb.w	r2, [r5, #78]	; 0x4e
 801b5b4:	429a      	cmp	r2, r3
 801b5b6:	d110      	bne.n	801b5da <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf2>
 801b5b8:	b146      	cbz	r6, 801b5cc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe4>
 801b5ba:	f1b8 0f0a 	cmp.w	r8, #10
 801b5be:	d10d      	bne.n	801b5dc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf4>
 801b5c0:	b944      	cbnz	r4, 801b5d4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xec>
 801b5c2:	4627      	mov	r7, r4
 801b5c4:	e02f      	b.n	801b626 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x13e>
 801b5c6:	f04f 0808 	mov.w	r8, #8
 801b5ca:	e7ac      	b.n	801b526 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x3e>
 801b5cc:	b34c      	cbz	r4, 801b622 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x13a>
 801b5ce:	f1b8 0f08 	cmp.w	r8, #8
 801b5d2:	d02b      	beq.n	801b62c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 801b5d4:	3701      	adds	r7, #1
 801b5d6:	2601      	movs	r6, #1
 801b5d8:	e00e      	b.n	801b5f8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x110>
 801b5da:	b306      	cbz	r6, 801b61e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x136>
 801b5dc:	f895 204c 	ldrb.w	r2, [r5, #76]	; 0x4c
 801b5e0:	429a      	cmp	r2, r3
 801b5e2:	d003      	beq.n	801b5ec <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x104>
 801b5e4:	f895 204d 	ldrb.w	r2, [r5, #77]	; 0x4d
 801b5e8:	429a      	cmp	r2, r3
 801b5ea:	d172      	bne.n	801b6d2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1ea>
 801b5ec:	b304      	cbz	r4, 801b630 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x148>
 801b5ee:	f1b8 0f10 	cmp.w	r8, #16
 801b5f2:	d173      	bne.n	801b6dc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f4>
 801b5f4:	2700      	movs	r7, #0
 801b5f6:	463e      	mov	r6, r7
 801b5f8:	9804      	ldr	r0, [sp, #16]
 801b5fa:	f7fc fd15 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801b5fe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801b602:	a914      	add	r1, sp, #80	; 0x50
 801b604:	4650      	mov	r0, sl
 801b606:	9305      	str	r3, [sp, #20]
 801b608:	f7f6 fc98 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801b60c:	2800      	cmp	r0, #0
 801b60e:	d062      	beq.n	801b6d6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1ee>
 801b610:	4650      	mov	r0, sl
 801b612:	f7f6 fc71 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b616:	f88d 001b 	strb.w	r0, [sp, #27]
 801b61a:	2e00      	cmp	r6, #0
 801b61c:	d1bc      	bne.n	801b598 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xb0>
 801b61e:	46b1      	mov	r9, r6
 801b620:	e00f      	b.n	801b642 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15a>
 801b622:	4627      	mov	r7, r4
 801b624:	2601      	movs	r6, #1
 801b626:	f04f 0808 	mov.w	r8, #8
 801b62a:	e7e5      	b.n	801b5f8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x110>
 801b62c:	4637      	mov	r7, r6
 801b62e:	e7d2      	b.n	801b5d6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xee>
 801b630:	4627      	mov	r7, r4
 801b632:	4626      	mov	r6, r4
 801b634:	f04f 0810 	mov.w	r8, #16
 801b638:	e7de      	b.n	801b5f8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x110>
 801b63a:	2300      	movs	r3, #0
 801b63c:	9300      	str	r3, [sp, #0]
 801b63e:	461f      	mov	r7, r3
 801b640:	461e      	mov	r6, r3
 801b642:	f1b8 0f10 	cmp.w	r8, #16
 801b646:	bf14      	ite	ne
 801b648:	4643      	movne	r3, r8
 801b64a:	2316      	moveq	r3, #22
 801b64c:	ee08 3a10 	vmov	s16, r3
 801b650:	4b76      	ldr	r3, [pc, #472]	; (801b82c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x344>)
 801b652:	9307      	str	r3, [sp, #28]
 801b654:	7c2b      	ldrb	r3, [r5, #16]
 801b656:	b11b      	cbz	r3, 801b660 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x178>
 801b658:	2120      	movs	r1, #32
 801b65a:	a807      	add	r0, sp, #28
 801b65c:	f7f4 fe19 	bl	8010292 <_ZNSs7reserveEj>
 801b660:	f895 b064 	ldrb.w	fp, [r5, #100]	; 0x64
 801b664:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801b668:	fbb3 f3f8 	udiv	r3, r3, r8
 801b66c:	9301      	str	r3, [sp, #4]
 801b66e:	f1bb 0f00 	cmp.w	fp, #0
 801b672:	d060      	beq.n	801b736 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x24e>
 801b674:	f105 034e 	add.w	r3, r5, #78	; 0x4e
 801b678:	2400      	movs	r4, #0
 801b67a:	9302      	str	r3, [sp, #8]
 801b67c:	46a2      	mov	sl, r4
 801b67e:	f1b9 0f00 	cmp.w	r9, #0
 801b682:	d131      	bne.n	801b6e8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x200>
 801b684:	7c2b      	ldrb	r3, [r5, #16]
 801b686:	f89d 201b 	ldrb.w	r2, [sp, #27]
 801b68a:	2b00      	cmp	r3, #0
 801b68c:	f000 8088 	beq.w	801b7a0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2b8>
 801b690:	f895 1025 	ldrb.w	r1, [r5, #37]	; 0x25
 801b694:	4291      	cmp	r1, r2
 801b696:	f040 8083 	bne.w	801b7a0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2b8>
 801b69a:	b337      	cbz	r7, 801b6ea <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x202>
 801b69c:	b2f9      	uxtb	r1, r7
 801b69e:	a807      	add	r0, sp, #28
 801b6a0:	f7f4 fec5 	bl	801042e <_ZNSs9push_backEc>
 801b6a4:	2700      	movs	r7, #0
 801b6a6:	9804      	ldr	r0, [sp, #16]
 801b6a8:	f7fc fcbe 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801b6ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801b6b0:	a914      	add	r1, sp, #80	; 0x50
 801b6b2:	a804      	add	r0, sp, #16
 801b6b4:	9305      	str	r3, [sp, #20]
 801b6b6:	f7f6 fc41 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801b6ba:	2800      	cmp	r0, #0
 801b6bc:	d06e      	beq.n	801b79c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2b4>
 801b6be:	a804      	add	r0, sp, #16
 801b6c0:	f7f6 fc1a 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b6c4:	f88d 001b 	strb.w	r0, [sp, #27]
 801b6c8:	e7dc      	b.n	801b684 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x19c>
 801b6ca:	f04f 0901 	mov.w	r9, #1
 801b6ce:	4607      	mov	r7, r0
 801b6d0:	e7b7      	b.n	801b642 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15a>
 801b6d2:	2601      	movs	r6, #1
 801b6d4:	e7b5      	b.n	801b642 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15a>
 801b6d6:	f04f 0901 	mov.w	r9, #1
 801b6da:	e7b2      	b.n	801b642 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15a>
 801b6dc:	ee08 8a10 	vmov	s16, r8
 801b6e0:	2601      	movs	r6, #1
 801b6e2:	e7b5      	b.n	801b650 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x168>
 801b6e4:	f04f 0901 	mov.w	r9, #1
 801b6e8:	2300      	movs	r3, #0
 801b6ea:	9a07      	ldr	r2, [sp, #28]
 801b6ec:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801b6f0:	b172      	cbz	r2, 801b710 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x228>
 801b6f2:	b2f9      	uxtb	r1, r7
 801b6f4:	a807      	add	r0, sp, #28
 801b6f6:	9301      	str	r3, [sp, #4]
 801b6f8:	f7f4 fe99 	bl	801042e <_ZNSs9push_backEc>
 801b6fc:	e9d5 0102 	ldrd	r0, r1, [r5, #8]
 801b700:	aa07      	add	r2, sp, #28
 801b702:	f009 fa53 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 801b706:	9b01      	ldr	r3, [sp, #4]
 801b708:	b910      	cbnz	r0, 801b710 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x228>
 801b70a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b70c:	2204      	movs	r2, #4
 801b70e:	600a      	str	r2, [r1, #0]
 801b710:	b92f      	cbnz	r7, 801b71e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x236>
 801b712:	b926      	cbnz	r6, 801b71e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x236>
 801b714:	9a07      	ldr	r2, [sp, #28]
 801b716:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801b71a:	2a00      	cmp	r2, #0
 801b71c:	d066      	beq.n	801b7ec <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x304>
 801b71e:	2b00      	cmp	r3, #0
 801b720:	d164      	bne.n	801b7ec <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x304>
 801b722:	f1ba 0f00 	cmp.w	sl, #0
 801b726:	d17e      	bne.n	801b826 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x33e>
 801b728:	9b00      	ldr	r3, [sp, #0]
 801b72a:	b10b      	cbz	r3, 801b730 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x248>
 801b72c:	4264      	negs	r4, r4
 801b72e:	b2a4      	uxth	r4, r4
 801b730:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b732:	801c      	strh	r4, [r3, #0]
 801b734:	e060      	b.n	801b7f8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x310>
 801b736:	46da      	mov	sl, fp
 801b738:	465c      	mov	r4, fp
 801b73a:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
 801b73e:	f1b9 0f00 	cmp.w	r9, #0
 801b742:	d1d1      	bne.n	801b6e8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x200>
 801b744:	f89d 101b 	ldrb.w	r1, [sp, #27]
 801b748:	ee18 0a10 	vmov	r0, s16
 801b74c:	f7fc fc76 	bl	801803c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>
 801b750:	1c43      	adds	r3, r0, #1
 801b752:	d0c9      	beq.n	801b6e8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x200>
 801b754:	9b01      	ldr	r3, [sp, #4]
 801b756:	429c      	cmp	r4, r3
 801b758:	d81d      	bhi.n	801b796 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2ae>
 801b75a:	fb18 f304 	smulbb	r3, r8, r4
 801b75e:	b29c      	uxth	r4, r3
 801b760:	f5c0 437f 	rsb	r3, r0, #65280	; 0xff00
 801b764:	33ff      	adds	r3, #255	; 0xff
 801b766:	429c      	cmp	r4, r3
 801b768:	bfc8      	it	gt
 801b76a:	f04a 0a01 	orrgt.w	sl, sl, #1
 801b76e:	4404      	add	r4, r0
 801b770:	b2a4      	uxth	r4, r4
 801b772:	3701      	adds	r7, #1
 801b774:	9804      	ldr	r0, [sp, #16]
 801b776:	f7fc fc57 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801b77a:	a914      	add	r1, sp, #80	; 0x50
 801b77c:	a804      	add	r0, sp, #16
 801b77e:	f8cd b014 	str.w	fp, [sp, #20]
 801b782:	f7f6 fbdb 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801b786:	2800      	cmp	r0, #0
 801b788:	d0ac      	beq.n	801b6e4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1fc>
 801b78a:	a804      	add	r0, sp, #16
 801b78c:	f7f6 fbb4 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b790:	f88d 001b 	strb.w	r0, [sp, #27]
 801b794:	e7d6      	b.n	801b744 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x25c>
 801b796:	f04f 0a01 	mov.w	sl, #1
 801b79a:	e7eb      	b.n	801b774 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x28c>
 801b79c:	46d9      	mov	r9, fp
 801b79e:	e76e      	b.n	801b67e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x196>
 801b7a0:	f895 3024 	ldrb.w	r3, [r5, #36]	; 0x24
 801b7a4:	4293      	cmp	r3, r2
 801b7a6:	d09f      	beq.n	801b6e8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x200>
 801b7a8:	ee18 1a10 	vmov	r1, s16
 801b7ac:	9802      	ldr	r0, [sp, #8]
 801b7ae:	f10d 021b 	add.w	r2, sp, #27
 801b7b2:	f7f4 fafb 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 801b7b6:	b1b8      	cbz	r0, 801b7e8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x300>
 801b7b8:	9b02      	ldr	r3, [sp, #8]
 801b7ba:	1ac0      	subs	r0, r0, r3
 801b7bc:	9b01      	ldr	r3, [sp, #4]
 801b7be:	280f      	cmp	r0, #15
 801b7c0:	bfc8      	it	gt
 801b7c2:	3806      	subgt	r0, #6
 801b7c4:	429c      	cmp	r4, r3
 801b7c6:	d80d      	bhi.n	801b7e4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2fc>
 801b7c8:	fb18 f404 	smulbb	r4, r8, r4
 801b7cc:	f5c0 437f 	rsb	r3, r0, #65280	; 0xff00
 801b7d0:	b2a4      	uxth	r4, r4
 801b7d2:	33ff      	adds	r3, #255	; 0xff
 801b7d4:	429c      	cmp	r4, r3
 801b7d6:	bfc8      	it	gt
 801b7d8:	f04a 0a01 	orrgt.w	sl, sl, #1
 801b7dc:	4404      	add	r4, r0
 801b7de:	b2a4      	uxth	r4, r4
 801b7e0:	3701      	adds	r7, #1
 801b7e2:	e760      	b.n	801b6a6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1be>
 801b7e4:	46da      	mov	sl, fp
 801b7e6:	e75e      	b.n	801b6a6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1be>
 801b7e8:	4603      	mov	r3, r0
 801b7ea:	e77e      	b.n	801b6ea <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x202>
 801b7ec:	2300      	movs	r3, #0
 801b7ee:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b7f0:	8013      	strh	r3, [r2, #0]
 801b7f2:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 801b7f4:	2304      	movs	r3, #4
 801b7f6:	6013      	str	r3, [r2, #0]
 801b7f8:	f1b9 0f00 	cmp.w	r9, #0
 801b7fc:	d005      	beq.n	801b80a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x322>
 801b7fe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b800:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 801b802:	681b      	ldr	r3, [r3, #0]
 801b804:	f043 0302 	orr.w	r3, r3, #2
 801b808:	6013      	str	r3, [r2, #0]
 801b80a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801b80e:	9b03      	ldr	r3, [sp, #12]
 801b810:	e883 0003 	stmia.w	r3, {r0, r1}
 801b814:	a807      	add	r0, sp, #28
 801b816:	f7f4 fbf5 	bl	8010004 <_ZNSsD1Ev>
 801b81a:	9803      	ldr	r0, [sp, #12]
 801b81c:	b009      	add	sp, #36	; 0x24
 801b81e:	ecbd 8b02 	vpop	{d8}
 801b822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b826:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801b82a:	e7e0      	b.n	801b7ee <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x306>
 801b82c:	20003bf0 	.word	0x20003bf0

0801b830 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRt>:
 801b830:	b570      	push	{r4, r5, r6, lr}
 801b832:	b088      	sub	sp, #32
 801b834:	ad06      	add	r5, sp, #24
 801b836:	e885 000c 	stmia.w	r5, {r2, r3}
 801b83a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b83c:	9304      	str	r3, [sp, #16]
 801b83e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b840:	9303      	str	r3, [sp, #12]
 801b842:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b844:	9302      	str	r3, [sp, #8]
 801b846:	ab0c      	add	r3, sp, #48	; 0x30
 801b848:	4604      	mov	r4, r0
 801b84a:	460e      	mov	r6, r1
 801b84c:	e893 0003 	ldmia.w	r3, {r0, r1}
 801b850:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b854:	4620      	mov	r0, r4
 801b856:	e895 000c 	ldmia.w	r5, {r2, r3}
 801b85a:	4631      	mov	r1, r6
 801b85c:	f7ff fe44 	bl	801b4e8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 801b860:	4620      	mov	r0, r4
 801b862:	b008      	add	sp, #32
 801b864:	bd70      	pop	{r4, r5, r6, pc}
	...

0801b868 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>:
 801b868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b86c:	ed2d 8b02 	vpush	{d8}
 801b870:	b08b      	sub	sp, #44	; 0x2c
 801b872:	f10d 0918 	add.w	r9, sp, #24
 801b876:	9d18      	ldr	r5, [sp, #96]	; 0x60
 801b878:	9005      	str	r0, [sp, #20]
 801b87a:	f105 016c 	add.w	r1, r5, #108	; 0x6c
 801b87e:	a808      	add	r0, sp, #32
 801b880:	e889 000c 	stmia.w	r9, {r2, r3}
 801b884:	f7fd fe54 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 801b888:	68ee      	ldr	r6, [r5, #12]
 801b88a:	f006 064a 	and.w	r6, r6, #74	; 0x4a
 801b88e:	2300      	movs	r3, #0
 801b890:	2e40      	cmp	r6, #64	; 0x40
 801b892:	4604      	mov	r4, r0
 801b894:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801b898:	d051      	beq.n	801b93e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd6>
 801b89a:	2e08      	cmp	r6, #8
 801b89c:	bf0c      	ite	eq
 801b89e:	2710      	moveq	r7, #16
 801b8a0:	270a      	movne	r7, #10
 801b8a2:	a916      	add	r1, sp, #88	; 0x58
 801b8a4:	4648      	mov	r0, r9
 801b8a6:	f7f6 fb36 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801b8aa:	4680      	mov	r8, r0
 801b8ac:	2800      	cmp	r0, #0
 801b8ae:	d17d      	bne.n	801b9ac <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 801b8b0:	4648      	mov	r0, r9
 801b8b2:	f7f6 fb21 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b8b6:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801b8ba:	b2c0      	uxtb	r0, r0
 801b8bc:	4283      	cmp	r3, r0
 801b8be:	bf0c      	ite	eq
 801b8c0:	2301      	moveq	r3, #1
 801b8c2:	2300      	movne	r3, #0
 801b8c4:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801b8c8:	9302      	str	r3, [sp, #8]
 801b8ca:	d003      	beq.n	801b8d4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x6c>
 801b8cc:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 801b8d0:	4283      	cmp	r3, r0
 801b8d2:	d11c      	bne.n	801b90e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa6>
 801b8d4:	7c23      	ldrb	r3, [r4, #16]
 801b8d6:	b11b      	cbz	r3, 801b8e0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x78>
 801b8d8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801b8dc:	4283      	cmp	r3, r0
 801b8de:	d016      	beq.n	801b90e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa6>
 801b8e0:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 801b8e4:	4283      	cmp	r3, r0
 801b8e6:	d012      	beq.n	801b90e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa6>
 801b8e8:	9806      	ldr	r0, [sp, #24]
 801b8ea:	f7fc fb9d 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801b8ee:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801b8f2:	a916      	add	r1, sp, #88	; 0x58
 801b8f4:	4648      	mov	r0, r9
 801b8f6:	9307      	str	r3, [sp, #28]
 801b8f8:	f7f6 fb20 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801b8fc:	4605      	mov	r5, r0
 801b8fe:	2800      	cmp	r0, #0
 801b900:	f000 80a1 	beq.w	801ba46 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1de>
 801b904:	4648      	mov	r0, r9
 801b906:	f7f6 faf7 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b90a:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801b90e:	2500      	movs	r5, #0
 801b910:	46aa      	mov	sl, r5
 801b912:	7c21      	ldrb	r1, [r4, #16]
 801b914:	f89d 2023 	ldrb.w	r2, [sp, #35]	; 0x23
 801b918:	b119      	cbz	r1, 801b922 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xba>
 801b91a:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 801b91e:	4291      	cmp	r1, r2
 801b920:	d048      	beq.n	801b9b4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801b922:	f894 1024 	ldrb.w	r1, [r4, #36]	; 0x24
 801b926:	4291      	cmp	r1, r2
 801b928:	d044      	beq.n	801b9b4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801b92a:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 801b92e:	4291      	cmp	r1, r2
 801b930:	d10e      	bne.n	801b950 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe8>
 801b932:	b135      	cbz	r5, 801b942 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xda>
 801b934:	2f0a      	cmp	r7, #10
 801b936:	d10c      	bne.n	801b952 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xea>
 801b938:	b936      	cbnz	r6, 801b948 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe0>
 801b93a:	46b2      	mov	sl, r6
 801b93c:	e02e      	b.n	801b99c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x134>
 801b93e:	2708      	movs	r7, #8
 801b940:	e7af      	b.n	801b8a2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x3a>
 801b942:	b34e      	cbz	r6, 801b998 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x130>
 801b944:	2f08      	cmp	r7, #8
 801b946:	d02b      	beq.n	801b9a0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 801b948:	f10a 0a01 	add.w	sl, sl, #1
 801b94c:	2501      	movs	r5, #1
 801b94e:	e00e      	b.n	801b96e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x106>
 801b950:	b305      	cbz	r5, 801b994 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x12c>
 801b952:	f894 104c 	ldrb.w	r1, [r4, #76]	; 0x4c
 801b956:	4291      	cmp	r1, r2
 801b958:	d003      	beq.n	801b962 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xfa>
 801b95a:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 801b95e:	4291      	cmp	r1, r2
 801b960:	d175      	bne.n	801ba4e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e6>
 801b962:	b1fe      	cbz	r6, 801b9a4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x13c>
 801b964:	2f10      	cmp	r7, #16
 801b966:	d177      	bne.n	801ba58 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f0>
 801b968:	f04f 0a00 	mov.w	sl, #0
 801b96c:	4655      	mov	r5, sl
 801b96e:	9806      	ldr	r0, [sp, #24]
 801b970:	f7fc fb5a 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801b974:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801b978:	a916      	add	r1, sp, #88	; 0x58
 801b97a:	4648      	mov	r0, r9
 801b97c:	9207      	str	r2, [sp, #28]
 801b97e:	f7f6 fadd 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801b982:	2800      	cmp	r0, #0
 801b984:	d065      	beq.n	801ba52 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1ea>
 801b986:	4648      	mov	r0, r9
 801b988:	f7f6 fab6 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801b98c:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801b990:	2d00      	cmp	r5, #0
 801b992:	d1be      	bne.n	801b912 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xaa>
 801b994:	46a8      	mov	r8, r5
 801b996:	e00d      	b.n	801b9b4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801b998:	46b2      	mov	sl, r6
 801b99a:	2501      	movs	r5, #1
 801b99c:	2708      	movs	r7, #8
 801b99e:	e7e6      	b.n	801b96e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x106>
 801b9a0:	46aa      	mov	sl, r5
 801b9a2:	e7d3      	b.n	801b94c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe4>
 801b9a4:	46b2      	mov	sl, r6
 801b9a6:	4635      	mov	r5, r6
 801b9a8:	2710      	movs	r7, #16
 801b9aa:	e7e0      	b.n	801b96e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x106>
 801b9ac:	2300      	movs	r3, #0
 801b9ae:	9302      	str	r3, [sp, #8]
 801b9b0:	469a      	mov	sl, r3
 801b9b2:	461d      	mov	r5, r3
 801b9b4:	2f10      	cmp	r7, #16
 801b9b6:	bf14      	ite	ne
 801b9b8:	463b      	movne	r3, r7
 801b9ba:	2316      	moveq	r3, #22
 801b9bc:	ee08 3a10 	vmov	s16, r3
 801b9c0:	4a77      	ldr	r2, [pc, #476]	; (801bba0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x338>)
 801b9c2:	9209      	str	r2, [sp, #36]	; 0x24
 801b9c4:	7c22      	ldrb	r2, [r4, #16]
 801b9c6:	b11a      	cbz	r2, 801b9d0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x168>
 801b9c8:	2120      	movs	r1, #32
 801b9ca:	a809      	add	r0, sp, #36	; 0x24
 801b9cc:	f7f4 fc61 	bl	8010292 <_ZNSs7reserveEj>
 801b9d0:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
 801b9d4:	fbbb f3f7 	udiv	r3, fp, r7
 801b9d8:	9303      	str	r3, [sp, #12]
 801b9da:	f894 3064 	ldrb.w	r3, [r4, #100]	; 0x64
 801b9de:	9301      	str	r3, [sp, #4]
 801b9e0:	2b00      	cmp	r3, #0
 801b9e2:	d068      	beq.n	801bab6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x24e>
 801b9e4:	f104 034e 	add.w	r3, r4, #78	; 0x4e
 801b9e8:	2600      	movs	r6, #0
 801b9ea:	9304      	str	r3, [sp, #16]
 801b9ec:	46b1      	mov	r9, r6
 801b9ee:	f1b8 0f00 	cmp.w	r8, #0
 801b9f2:	d137      	bne.n	801ba64 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1fc>
 801b9f4:	f894 b010 	ldrb.w	fp, [r4, #16]
 801b9f8:	f89d 2023 	ldrb.w	r2, [sp, #35]	; 0x23
 801b9fc:	f1bb 0f00 	cmp.w	fp, #0
 801ba00:	f000 808a 	beq.w	801bb18 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2b0>
 801ba04:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 801ba08:	4291      	cmp	r1, r2
 801ba0a:	f040 8085 	bne.w	801bb18 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2b0>
 801ba0e:	f1ba 0f00 	cmp.w	sl, #0
 801ba12:	d029      	beq.n	801ba68 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x200>
 801ba14:	fa5f f18a 	uxtb.w	r1, sl
 801ba18:	a809      	add	r0, sp, #36	; 0x24
 801ba1a:	f7f4 fd08 	bl	801042e <_ZNSs9push_backEc>
 801ba1e:	f04f 0a00 	mov.w	sl, #0
 801ba22:	9806      	ldr	r0, [sp, #24]
 801ba24:	f7fc fb00 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801ba28:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801ba2c:	a916      	add	r1, sp, #88	; 0x58
 801ba2e:	a806      	add	r0, sp, #24
 801ba30:	9207      	str	r2, [sp, #28]
 801ba32:	f7f6 fa83 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801ba36:	2800      	cmp	r0, #0
 801ba38:	d06b      	beq.n	801bb12 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2aa>
 801ba3a:	a806      	add	r0, sp, #24
 801ba3c:	f7f6 fa5c 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801ba40:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801ba44:	e7d6      	b.n	801b9f4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x18c>
 801ba46:	f04f 0801 	mov.w	r8, #1
 801ba4a:	4682      	mov	sl, r0
 801ba4c:	e7b2      	b.n	801b9b4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801ba4e:	2501      	movs	r5, #1
 801ba50:	e7b0      	b.n	801b9b4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801ba52:	f04f 0801 	mov.w	r8, #1
 801ba56:	e7ad      	b.n	801b9b4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801ba58:	ee08 7a10 	vmov	s16, r7
 801ba5c:	2501      	movs	r5, #1
 801ba5e:	e7af      	b.n	801b9c0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x158>
 801ba60:	f04f 0801 	mov.w	r8, #1
 801ba64:	f04f 0b00 	mov.w	fp, #0
 801ba68:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ba6a:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801ba6e:	b16a      	cbz	r2, 801ba8c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x224>
 801ba70:	fa5f f18a 	uxtb.w	r1, sl
 801ba74:	a809      	add	r0, sp, #36	; 0x24
 801ba76:	f7f4 fcda 	bl	801042e <_ZNSs9push_backEc>
 801ba7a:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 801ba7e:	aa09      	add	r2, sp, #36	; 0x24
 801ba80:	f009 f894 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 801ba84:	b910      	cbnz	r0, 801ba8c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x224>
 801ba86:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ba88:	2204      	movs	r2, #4
 801ba8a:	601a      	str	r2, [r3, #0]
 801ba8c:	f1ba 0f00 	cmp.w	sl, #0
 801ba90:	d105      	bne.n	801ba9e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x236>
 801ba92:	b925      	cbnz	r5, 801ba9e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x236>
 801ba94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba96:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801ba9a:	2b00      	cmp	r3, #0
 801ba9c:	d05f      	beq.n	801bb5e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f6>
 801ba9e:	f1bb 0f00 	cmp.w	fp, #0
 801baa2:	d15c      	bne.n	801bb5e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f6>
 801baa4:	f1b9 0f00 	cmp.w	r9, #0
 801baa8:	d176      	bne.n	801bb98 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x330>
 801baaa:	9b02      	ldr	r3, [sp, #8]
 801baac:	b103      	cbz	r3, 801bab0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x248>
 801baae:	4276      	negs	r6, r6
 801bab0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801bab2:	601e      	str	r6, [r3, #0]
 801bab4:	e059      	b.n	801bb6a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x302>
 801bab6:	f8dd 9004 	ldr.w	r9, [sp, #4]
 801baba:	464e      	mov	r6, r9
 801babc:	f1b8 0f00 	cmp.w	r8, #0
 801bac0:	d1d0      	bne.n	801ba64 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1fc>
 801bac2:	f89d 1023 	ldrb.w	r1, [sp, #35]	; 0x23
 801bac6:	ee18 0a10 	vmov	r0, s16
 801baca:	f7fc fab7 	bl	801803c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>
 801bace:	1c43      	adds	r3, r0, #1
 801bad0:	d0c8      	beq.n	801ba64 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1fc>
 801bad2:	9b03      	ldr	r3, [sp, #12]
 801bad4:	429e      	cmp	r6, r3
 801bad6:	d819      	bhi.n	801bb0c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2a4>
 801bad8:	437e      	muls	r6, r7
 801bada:	43c2      	mvns	r2, r0
 801badc:	42b2      	cmp	r2, r6
 801bade:	bf38      	it	cc
 801bae0:	f049 0901 	orrcc.w	r9, r9, #1
 801bae4:	f10a 0a01 	add.w	sl, sl, #1
 801bae8:	4406      	add	r6, r0
 801baea:	9806      	ldr	r0, [sp, #24]
 801baec:	f7fc fa9c 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801baf0:	a916      	add	r1, sp, #88	; 0x58
 801baf2:	a806      	add	r0, sp, #24
 801baf4:	f8cd b01c 	str.w	fp, [sp, #28]
 801baf8:	f7f6 fa20 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801bafc:	2800      	cmp	r0, #0
 801bafe:	d0af      	beq.n	801ba60 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f8>
 801bb00:	a806      	add	r0, sp, #24
 801bb02:	f7f6 f9f9 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801bb06:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801bb0a:	e7da      	b.n	801bac2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x25a>
 801bb0c:	f04f 0901 	mov.w	r9, #1
 801bb10:	e7eb      	b.n	801baea <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x282>
 801bb12:	f8dd 8004 	ldr.w	r8, [sp, #4]
 801bb16:	e76a      	b.n	801b9ee <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x186>
 801bb18:	f894 1024 	ldrb.w	r1, [r4, #36]	; 0x24
 801bb1c:	4291      	cmp	r1, r2
 801bb1e:	d0a1      	beq.n	801ba64 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1fc>
 801bb20:	ee18 1a10 	vmov	r1, s16
 801bb24:	9804      	ldr	r0, [sp, #16]
 801bb26:	f10d 0223 	add.w	r2, sp, #35	; 0x23
 801bb2a:	f7f4 f93f 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 801bb2e:	b1a0      	cbz	r0, 801bb5a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f2>
 801bb30:	9b04      	ldr	r3, [sp, #16]
 801bb32:	1ac0      	subs	r0, r0, r3
 801bb34:	9b03      	ldr	r3, [sp, #12]
 801bb36:	280f      	cmp	r0, #15
 801bb38:	bfc8      	it	gt
 801bb3a:	3806      	subgt	r0, #6
 801bb3c:	429e      	cmp	r6, r3
 801bb3e:	d809      	bhi.n	801bb54 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2ec>
 801bb40:	437e      	muls	r6, r7
 801bb42:	43c2      	mvns	r2, r0
 801bb44:	42b2      	cmp	r2, r6
 801bb46:	bf38      	it	cc
 801bb48:	f049 0901 	orrcc.w	r9, r9, #1
 801bb4c:	f10a 0a01 	add.w	sl, sl, #1
 801bb50:	4406      	add	r6, r0
 801bb52:	e766      	b.n	801ba22 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1ba>
 801bb54:	f8dd 9004 	ldr.w	r9, [sp, #4]
 801bb58:	e763      	b.n	801ba22 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1ba>
 801bb5a:	4683      	mov	fp, r0
 801bb5c:	e784      	b.n	801ba68 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x200>
 801bb5e:	2300      	movs	r3, #0
 801bb60:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801bb62:	6013      	str	r3, [r2, #0]
 801bb64:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801bb66:	2304      	movs	r3, #4
 801bb68:	6013      	str	r3, [r2, #0]
 801bb6a:	f1b8 0f00 	cmp.w	r8, #0
 801bb6e:	d005      	beq.n	801bb7c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x314>
 801bb70:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801bb72:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801bb74:	681b      	ldr	r3, [r3, #0]
 801bb76:	f043 0302 	orr.w	r3, r3, #2
 801bb7a:	6013      	str	r3, [r2, #0]
 801bb7c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bb80:	9b05      	ldr	r3, [sp, #20]
 801bb82:	e883 0003 	stmia.w	r3, {r0, r1}
 801bb86:	a809      	add	r0, sp, #36	; 0x24
 801bb88:	f7f4 fa3c 	bl	8010004 <_ZNSsD1Ev>
 801bb8c:	9805      	ldr	r0, [sp, #20]
 801bb8e:	b00b      	add	sp, #44	; 0x2c
 801bb90:	ecbd 8b02 	vpop	{d8}
 801bb94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb98:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801bb9c:	e7e0      	b.n	801bb60 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f8>
 801bb9e:	bf00      	nop
 801bba0:	20003bf0 	.word	0x20003bf0

0801bba4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRj>:
 801bba4:	b570      	push	{r4, r5, r6, lr}
 801bba6:	b088      	sub	sp, #32
 801bba8:	ad06      	add	r5, sp, #24
 801bbaa:	e885 000c 	stmia.w	r5, {r2, r3}
 801bbae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bbb0:	9304      	str	r3, [sp, #16]
 801bbb2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bbb4:	9303      	str	r3, [sp, #12]
 801bbb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bbb8:	9302      	str	r3, [sp, #8]
 801bbba:	ab0c      	add	r3, sp, #48	; 0x30
 801bbbc:	4604      	mov	r4, r0
 801bbbe:	460e      	mov	r6, r1
 801bbc0:	e893 0003 	ldmia.w	r3, {r0, r1}
 801bbc4:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bbc8:	4620      	mov	r0, r4
 801bbca:	e895 000c 	ldmia.w	r5, {r2, r3}
 801bbce:	4631      	mov	r1, r6
 801bbd0:	f7ff fe4a 	bl	801b868 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 801bbd4:	4620      	mov	r0, r4
 801bbd6:	b008      	add	sp, #32
 801bbd8:	bd70      	pop	{r4, r5, r6, pc}
	...

0801bbdc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>:
 801bbdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bbe0:	ed2d 8b02 	vpush	{d8}
 801bbe4:	b08b      	sub	sp, #44	; 0x2c
 801bbe6:	f10d 0918 	add.w	r9, sp, #24
 801bbea:	9d18      	ldr	r5, [sp, #96]	; 0x60
 801bbec:	9005      	str	r0, [sp, #20]
 801bbee:	f105 016c 	add.w	r1, r5, #108	; 0x6c
 801bbf2:	a808      	add	r0, sp, #32
 801bbf4:	e889 000c 	stmia.w	r9, {r2, r3}
 801bbf8:	f7fd fc9a 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 801bbfc:	68ee      	ldr	r6, [r5, #12]
 801bbfe:	f006 064a 	and.w	r6, r6, #74	; 0x4a
 801bc02:	2300      	movs	r3, #0
 801bc04:	2e40      	cmp	r6, #64	; 0x40
 801bc06:	4604      	mov	r4, r0
 801bc08:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801bc0c:	d051      	beq.n	801bcb2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd6>
 801bc0e:	2e08      	cmp	r6, #8
 801bc10:	bf0c      	ite	eq
 801bc12:	2710      	moveq	r7, #16
 801bc14:	270a      	movne	r7, #10
 801bc16:	a916      	add	r1, sp, #88	; 0x58
 801bc18:	4648      	mov	r0, r9
 801bc1a:	f7f6 f97c 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801bc1e:	4680      	mov	r8, r0
 801bc20:	2800      	cmp	r0, #0
 801bc22:	d17d      	bne.n	801bd20 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 801bc24:	4648      	mov	r0, r9
 801bc26:	f7f6 f967 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801bc2a:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801bc2e:	b2c0      	uxtb	r0, r0
 801bc30:	4283      	cmp	r3, r0
 801bc32:	bf0c      	ite	eq
 801bc34:	2301      	moveq	r3, #1
 801bc36:	2300      	movne	r3, #0
 801bc38:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801bc3c:	9302      	str	r3, [sp, #8]
 801bc3e:	d003      	beq.n	801bc48 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x6c>
 801bc40:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 801bc44:	4283      	cmp	r3, r0
 801bc46:	d11c      	bne.n	801bc82 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa6>
 801bc48:	7c23      	ldrb	r3, [r4, #16]
 801bc4a:	b11b      	cbz	r3, 801bc54 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x78>
 801bc4c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801bc50:	4283      	cmp	r3, r0
 801bc52:	d016      	beq.n	801bc82 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa6>
 801bc54:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 801bc58:	4283      	cmp	r3, r0
 801bc5a:	d012      	beq.n	801bc82 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa6>
 801bc5c:	9806      	ldr	r0, [sp, #24]
 801bc5e:	f7fc f9e3 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801bc62:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801bc66:	a916      	add	r1, sp, #88	; 0x58
 801bc68:	4648      	mov	r0, r9
 801bc6a:	9307      	str	r3, [sp, #28]
 801bc6c:	f7f6 f966 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801bc70:	4605      	mov	r5, r0
 801bc72:	2800      	cmp	r0, #0
 801bc74:	f000 80a1 	beq.w	801bdba <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1de>
 801bc78:	4648      	mov	r0, r9
 801bc7a:	f7f6 f93d 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801bc7e:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801bc82:	2500      	movs	r5, #0
 801bc84:	46aa      	mov	sl, r5
 801bc86:	7c21      	ldrb	r1, [r4, #16]
 801bc88:	f89d 2023 	ldrb.w	r2, [sp, #35]	; 0x23
 801bc8c:	b119      	cbz	r1, 801bc96 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xba>
 801bc8e:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 801bc92:	4291      	cmp	r1, r2
 801bc94:	d048      	beq.n	801bd28 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801bc96:	f894 1024 	ldrb.w	r1, [r4, #36]	; 0x24
 801bc9a:	4291      	cmp	r1, r2
 801bc9c:	d044      	beq.n	801bd28 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801bc9e:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 801bca2:	4291      	cmp	r1, r2
 801bca4:	d10e      	bne.n	801bcc4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe8>
 801bca6:	b135      	cbz	r5, 801bcb6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xda>
 801bca8:	2f0a      	cmp	r7, #10
 801bcaa:	d10c      	bne.n	801bcc6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xea>
 801bcac:	b936      	cbnz	r6, 801bcbc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe0>
 801bcae:	46b2      	mov	sl, r6
 801bcb0:	e02e      	b.n	801bd10 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x134>
 801bcb2:	2708      	movs	r7, #8
 801bcb4:	e7af      	b.n	801bc16 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x3a>
 801bcb6:	b34e      	cbz	r6, 801bd0c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x130>
 801bcb8:	2f08      	cmp	r7, #8
 801bcba:	d02b      	beq.n	801bd14 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 801bcbc:	f10a 0a01 	add.w	sl, sl, #1
 801bcc0:	2501      	movs	r5, #1
 801bcc2:	e00e      	b.n	801bce2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x106>
 801bcc4:	b305      	cbz	r5, 801bd08 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x12c>
 801bcc6:	f894 104c 	ldrb.w	r1, [r4, #76]	; 0x4c
 801bcca:	4291      	cmp	r1, r2
 801bccc:	d003      	beq.n	801bcd6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xfa>
 801bcce:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 801bcd2:	4291      	cmp	r1, r2
 801bcd4:	d175      	bne.n	801bdc2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e6>
 801bcd6:	b1fe      	cbz	r6, 801bd18 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x13c>
 801bcd8:	2f10      	cmp	r7, #16
 801bcda:	d177      	bne.n	801bdcc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f0>
 801bcdc:	f04f 0a00 	mov.w	sl, #0
 801bce0:	4655      	mov	r5, sl
 801bce2:	9806      	ldr	r0, [sp, #24]
 801bce4:	f7fc f9a0 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801bce8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801bcec:	a916      	add	r1, sp, #88	; 0x58
 801bcee:	4648      	mov	r0, r9
 801bcf0:	9207      	str	r2, [sp, #28]
 801bcf2:	f7f6 f923 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801bcf6:	2800      	cmp	r0, #0
 801bcf8:	d065      	beq.n	801bdc6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1ea>
 801bcfa:	4648      	mov	r0, r9
 801bcfc:	f7f6 f8fc 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801bd00:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801bd04:	2d00      	cmp	r5, #0
 801bd06:	d1be      	bne.n	801bc86 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xaa>
 801bd08:	46a8      	mov	r8, r5
 801bd0a:	e00d      	b.n	801bd28 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801bd0c:	46b2      	mov	sl, r6
 801bd0e:	2501      	movs	r5, #1
 801bd10:	2708      	movs	r7, #8
 801bd12:	e7e6      	b.n	801bce2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x106>
 801bd14:	46aa      	mov	sl, r5
 801bd16:	e7d3      	b.n	801bcc0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe4>
 801bd18:	46b2      	mov	sl, r6
 801bd1a:	4635      	mov	r5, r6
 801bd1c:	2710      	movs	r7, #16
 801bd1e:	e7e0      	b.n	801bce2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x106>
 801bd20:	2300      	movs	r3, #0
 801bd22:	9302      	str	r3, [sp, #8]
 801bd24:	469a      	mov	sl, r3
 801bd26:	461d      	mov	r5, r3
 801bd28:	2f10      	cmp	r7, #16
 801bd2a:	bf14      	ite	ne
 801bd2c:	463b      	movne	r3, r7
 801bd2e:	2316      	moveq	r3, #22
 801bd30:	ee08 3a10 	vmov	s16, r3
 801bd34:	4a77      	ldr	r2, [pc, #476]	; (801bf14 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x338>)
 801bd36:	9209      	str	r2, [sp, #36]	; 0x24
 801bd38:	7c22      	ldrb	r2, [r4, #16]
 801bd3a:	b11a      	cbz	r2, 801bd44 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x168>
 801bd3c:	2120      	movs	r1, #32
 801bd3e:	a809      	add	r0, sp, #36	; 0x24
 801bd40:	f7f4 faa7 	bl	8010292 <_ZNSs7reserveEj>
 801bd44:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
 801bd48:	fbbb f3f7 	udiv	r3, fp, r7
 801bd4c:	9303      	str	r3, [sp, #12]
 801bd4e:	f894 3064 	ldrb.w	r3, [r4, #100]	; 0x64
 801bd52:	9301      	str	r3, [sp, #4]
 801bd54:	2b00      	cmp	r3, #0
 801bd56:	d068      	beq.n	801be2a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x24e>
 801bd58:	f104 034e 	add.w	r3, r4, #78	; 0x4e
 801bd5c:	2600      	movs	r6, #0
 801bd5e:	9304      	str	r3, [sp, #16]
 801bd60:	46b1      	mov	r9, r6
 801bd62:	f1b8 0f00 	cmp.w	r8, #0
 801bd66:	d137      	bne.n	801bdd8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1fc>
 801bd68:	f894 b010 	ldrb.w	fp, [r4, #16]
 801bd6c:	f89d 2023 	ldrb.w	r2, [sp, #35]	; 0x23
 801bd70:	f1bb 0f00 	cmp.w	fp, #0
 801bd74:	f000 808a 	beq.w	801be8c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2b0>
 801bd78:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 801bd7c:	4291      	cmp	r1, r2
 801bd7e:	f040 8085 	bne.w	801be8c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2b0>
 801bd82:	f1ba 0f00 	cmp.w	sl, #0
 801bd86:	d029      	beq.n	801bddc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x200>
 801bd88:	fa5f f18a 	uxtb.w	r1, sl
 801bd8c:	a809      	add	r0, sp, #36	; 0x24
 801bd8e:	f7f4 fb4e 	bl	801042e <_ZNSs9push_backEc>
 801bd92:	f04f 0a00 	mov.w	sl, #0
 801bd96:	9806      	ldr	r0, [sp, #24]
 801bd98:	f7fc f946 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801bd9c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801bda0:	a916      	add	r1, sp, #88	; 0x58
 801bda2:	a806      	add	r0, sp, #24
 801bda4:	9207      	str	r2, [sp, #28]
 801bda6:	f7f6 f8c9 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801bdaa:	2800      	cmp	r0, #0
 801bdac:	d06b      	beq.n	801be86 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2aa>
 801bdae:	a806      	add	r0, sp, #24
 801bdb0:	f7f6 f8a2 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801bdb4:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801bdb8:	e7d6      	b.n	801bd68 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x18c>
 801bdba:	f04f 0801 	mov.w	r8, #1
 801bdbe:	4682      	mov	sl, r0
 801bdc0:	e7b2      	b.n	801bd28 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801bdc2:	2501      	movs	r5, #1
 801bdc4:	e7b0      	b.n	801bd28 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801bdc6:	f04f 0801 	mov.w	r8, #1
 801bdca:	e7ad      	b.n	801bd28 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801bdcc:	ee08 7a10 	vmov	s16, r7
 801bdd0:	2501      	movs	r5, #1
 801bdd2:	e7af      	b.n	801bd34 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x158>
 801bdd4:	f04f 0801 	mov.w	r8, #1
 801bdd8:	f04f 0b00 	mov.w	fp, #0
 801bddc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bdde:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801bde2:	b16a      	cbz	r2, 801be00 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x224>
 801bde4:	fa5f f18a 	uxtb.w	r1, sl
 801bde8:	a809      	add	r0, sp, #36	; 0x24
 801bdea:	f7f4 fb20 	bl	801042e <_ZNSs9push_backEc>
 801bdee:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 801bdf2:	aa09      	add	r2, sp, #36	; 0x24
 801bdf4:	f008 feda 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 801bdf8:	b910      	cbnz	r0, 801be00 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x224>
 801bdfa:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801bdfc:	2204      	movs	r2, #4
 801bdfe:	601a      	str	r2, [r3, #0]
 801be00:	f1ba 0f00 	cmp.w	sl, #0
 801be04:	d105      	bne.n	801be12 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x236>
 801be06:	b925      	cbnz	r5, 801be12 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x236>
 801be08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be0a:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801be0e:	2b00      	cmp	r3, #0
 801be10:	d05f      	beq.n	801bed2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f6>
 801be12:	f1bb 0f00 	cmp.w	fp, #0
 801be16:	d15c      	bne.n	801bed2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f6>
 801be18:	f1b9 0f00 	cmp.w	r9, #0
 801be1c:	d176      	bne.n	801bf0c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x330>
 801be1e:	9b02      	ldr	r3, [sp, #8]
 801be20:	b103      	cbz	r3, 801be24 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x248>
 801be22:	4276      	negs	r6, r6
 801be24:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801be26:	601e      	str	r6, [r3, #0]
 801be28:	e059      	b.n	801bede <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x302>
 801be2a:	f8dd 9004 	ldr.w	r9, [sp, #4]
 801be2e:	464e      	mov	r6, r9
 801be30:	f1b8 0f00 	cmp.w	r8, #0
 801be34:	d1d0      	bne.n	801bdd8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1fc>
 801be36:	f89d 1023 	ldrb.w	r1, [sp, #35]	; 0x23
 801be3a:	ee18 0a10 	vmov	r0, s16
 801be3e:	f7fc f8fd 	bl	801803c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>
 801be42:	1c43      	adds	r3, r0, #1
 801be44:	d0c8      	beq.n	801bdd8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1fc>
 801be46:	9b03      	ldr	r3, [sp, #12]
 801be48:	429e      	cmp	r6, r3
 801be4a:	d819      	bhi.n	801be80 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2a4>
 801be4c:	437e      	muls	r6, r7
 801be4e:	43c2      	mvns	r2, r0
 801be50:	42b2      	cmp	r2, r6
 801be52:	bf38      	it	cc
 801be54:	f049 0901 	orrcc.w	r9, r9, #1
 801be58:	f10a 0a01 	add.w	sl, sl, #1
 801be5c:	4406      	add	r6, r0
 801be5e:	9806      	ldr	r0, [sp, #24]
 801be60:	f7fc f8e2 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801be64:	a916      	add	r1, sp, #88	; 0x58
 801be66:	a806      	add	r0, sp, #24
 801be68:	f8cd b01c 	str.w	fp, [sp, #28]
 801be6c:	f7f6 f866 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801be70:	2800      	cmp	r0, #0
 801be72:	d0af      	beq.n	801bdd4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f8>
 801be74:	a806      	add	r0, sp, #24
 801be76:	f7f6 f83f 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801be7a:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801be7e:	e7da      	b.n	801be36 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x25a>
 801be80:	f04f 0901 	mov.w	r9, #1
 801be84:	e7eb      	b.n	801be5e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x282>
 801be86:	f8dd 8004 	ldr.w	r8, [sp, #4]
 801be8a:	e76a      	b.n	801bd62 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x186>
 801be8c:	f894 1024 	ldrb.w	r1, [r4, #36]	; 0x24
 801be90:	4291      	cmp	r1, r2
 801be92:	d0a1      	beq.n	801bdd8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1fc>
 801be94:	ee18 1a10 	vmov	r1, s16
 801be98:	9804      	ldr	r0, [sp, #16]
 801be9a:	f10d 0223 	add.w	r2, sp, #35	; 0x23
 801be9e:	f7f3 ff85 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 801bea2:	b1a0      	cbz	r0, 801bece <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f2>
 801bea4:	9b04      	ldr	r3, [sp, #16]
 801bea6:	1ac0      	subs	r0, r0, r3
 801bea8:	9b03      	ldr	r3, [sp, #12]
 801beaa:	280f      	cmp	r0, #15
 801beac:	bfc8      	it	gt
 801beae:	3806      	subgt	r0, #6
 801beb0:	429e      	cmp	r6, r3
 801beb2:	d809      	bhi.n	801bec8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2ec>
 801beb4:	437e      	muls	r6, r7
 801beb6:	43c2      	mvns	r2, r0
 801beb8:	42b2      	cmp	r2, r6
 801beba:	bf38      	it	cc
 801bebc:	f049 0901 	orrcc.w	r9, r9, #1
 801bec0:	f10a 0a01 	add.w	sl, sl, #1
 801bec4:	4406      	add	r6, r0
 801bec6:	e766      	b.n	801bd96 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1ba>
 801bec8:	f8dd 9004 	ldr.w	r9, [sp, #4]
 801becc:	e763      	b.n	801bd96 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1ba>
 801bece:	4683      	mov	fp, r0
 801bed0:	e784      	b.n	801bddc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x200>
 801bed2:	2300      	movs	r3, #0
 801bed4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801bed6:	6013      	str	r3, [r2, #0]
 801bed8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801beda:	2304      	movs	r3, #4
 801bedc:	6013      	str	r3, [r2, #0]
 801bede:	f1b8 0f00 	cmp.w	r8, #0
 801bee2:	d005      	beq.n	801bef0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x314>
 801bee4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801bee6:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801bee8:	681b      	ldr	r3, [r3, #0]
 801beea:	f043 0302 	orr.w	r3, r3, #2
 801beee:	6013      	str	r3, [r2, #0]
 801bef0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bef4:	9b05      	ldr	r3, [sp, #20]
 801bef6:	e883 0003 	stmia.w	r3, {r0, r1}
 801befa:	a809      	add	r0, sp, #36	; 0x24
 801befc:	f7f4 f882 	bl	8010004 <_ZNSsD1Ev>
 801bf00:	9805      	ldr	r0, [sp, #20]
 801bf02:	b00b      	add	sp, #44	; 0x2c
 801bf04:	ecbd 8b02 	vpop	{d8}
 801bf08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf0c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801bf10:	e7e0      	b.n	801bed4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f8>
 801bf12:	bf00      	nop
 801bf14:	20003bf0 	.word	0x20003bf0

0801bf18 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRm>:
 801bf18:	b570      	push	{r4, r5, r6, lr}
 801bf1a:	b088      	sub	sp, #32
 801bf1c:	ad06      	add	r5, sp, #24
 801bf1e:	e885 000c 	stmia.w	r5, {r2, r3}
 801bf22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bf24:	9304      	str	r3, [sp, #16]
 801bf26:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bf28:	9303      	str	r3, [sp, #12]
 801bf2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf2c:	9302      	str	r3, [sp, #8]
 801bf2e:	ab0c      	add	r3, sp, #48	; 0x30
 801bf30:	4604      	mov	r4, r0
 801bf32:	460e      	mov	r6, r1
 801bf34:	e893 0003 	ldmia.w	r3, {r0, r1}
 801bf38:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bf3c:	4620      	mov	r0, r4
 801bf3e:	e895 000c 	ldmia.w	r5, {r2, r3}
 801bf42:	4631      	mov	r1, r6
 801bf44:	f7ff fe4a 	bl	801bbdc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 801bf48:	4620      	mov	r0, r4
 801bf4a:	b008      	add	sp, #32
 801bf4c:	bd70      	pop	{r4, r5, r6, pc}

0801bf4e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRPv>:
 801bf4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bf52:	b08c      	sub	sp, #48	; 0x30
 801bf54:	ac08      	add	r4, sp, #32
 801bf56:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801bf58:	f8d6 800c 	ldr.w	r8, [r6, #12]
 801bf5c:	e884 000c 	stmia.w	r4, {r2, r3}
 801bf60:	f028 034a 	bic.w	r3, r8, #74	; 0x4a
 801bf64:	f043 0308 	orr.w	r3, r3, #8
 801bf68:	60f3      	str	r3, [r6, #12]
 801bf6a:	ab0b      	add	r3, sp, #44	; 0x2c
 801bf6c:	9304      	str	r3, [sp, #16]
 801bf6e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801bf70:	e9cd 6302 	strd	r6, r3, [sp, #8]
 801bf74:	ab12      	add	r3, sp, #72	; 0x48
 801bf76:	4605      	mov	r5, r0
 801bf78:	468c      	mov	ip, r1
 801bf7a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801bf7e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bf82:	af06      	add	r7, sp, #24
 801bf84:	e894 000c 	ldmia.w	r4, {r2, r3}
 801bf88:	4661      	mov	r1, ip
 801bf8a:	4638      	mov	r0, r7
 801bf8c:	f7ff fe26 	bl	801bbdc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 801bf90:	e897 0003 	ldmia.w	r7, {r0, r1}
 801bf94:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bf96:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bf98:	f8c6 800c 	str.w	r8, [r6, #12]
 801bf9c:	e884 0003 	stmia.w	r4, {r0, r1}
 801bfa0:	e885 0003 	stmia.w	r5, {r0, r1}
 801bfa4:	4628      	mov	r0, r5
 801bfa6:	601a      	str	r2, [r3, #0]
 801bfa8:	b00c      	add	sp, #48	; 0x30
 801bfaa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0801bfb0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>:
 801bfb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bfb4:	ed2d 8b02 	vpush	{d8}
 801bfb8:	b08d      	sub	sp, #52	; 0x34
 801bfba:	f10d 0a20 	add.w	sl, sp, #32
 801bfbe:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 801bfc0:	9005      	str	r0, [sp, #20]
 801bfc2:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 801bfc6:	a80a      	add	r0, sp, #40	; 0x28
 801bfc8:	e88a 000c 	stmia.w	sl, {r2, r3}
 801bfcc:	f7fd fab0 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 801bfd0:	68e4      	ldr	r4, [r4, #12]
 801bfd2:	f004 044a 	and.w	r4, r4, #74	; 0x4a
 801bfd6:	2300      	movs	r3, #0
 801bfd8:	2c40      	cmp	r4, #64	; 0x40
 801bfda:	4605      	mov	r5, r0
 801bfdc:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801bfe0:	d055      	beq.n	801c08e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xde>
 801bfe2:	2c08      	cmp	r4, #8
 801bfe4:	bf0c      	ite	eq
 801bfe6:	f04f 0810 	moveq.w	r8, #16
 801bfea:	f04f 080a 	movne.w	r8, #10
 801bfee:	a918      	add	r1, sp, #96	; 0x60
 801bff0:	4650      	mov	r0, sl
 801bff2:	f7f5 ff90 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801bff6:	4681      	mov	r9, r0
 801bff8:	2800      	cmp	r0, #0
 801bffa:	f040 8084 	bne.w	801c106 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x156>
 801bffe:	4650      	mov	r0, sl
 801c000:	f7f5 ff7a 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801c004:	f895 304a 	ldrb.w	r3, [r5, #74]	; 0x4a
 801c008:	b2c0      	uxtb	r0, r0
 801c00a:	4283      	cmp	r3, r0
 801c00c:	bf0c      	ite	eq
 801c00e:	2301      	moveq	r3, #1
 801c010:	2300      	movne	r3, #0
 801c012:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 801c016:	9300      	str	r3, [sp, #0]
 801c018:	d003      	beq.n	801c022 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x72>
 801c01a:	f895 304b 	ldrb.w	r3, [r5, #75]	; 0x4b
 801c01e:	4283      	cmp	r3, r0
 801c020:	d11c      	bne.n	801c05c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xac>
 801c022:	7c2b      	ldrb	r3, [r5, #16]
 801c024:	b11b      	cbz	r3, 801c02e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x7e>
 801c026:	f895 3025 	ldrb.w	r3, [r5, #37]	; 0x25
 801c02a:	4283      	cmp	r3, r0
 801c02c:	d016      	beq.n	801c05c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xac>
 801c02e:	f895 3024 	ldrb.w	r3, [r5, #36]	; 0x24
 801c032:	4283      	cmp	r3, r0
 801c034:	d012      	beq.n	801c05c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xac>
 801c036:	9808      	ldr	r0, [sp, #32]
 801c038:	f7fb fff6 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801c03c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801c040:	a918      	add	r1, sp, #96	; 0x60
 801c042:	4650      	mov	r0, sl
 801c044:	9309      	str	r3, [sp, #36]	; 0x24
 801c046:	f7f5 ff79 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801c04a:	4606      	mov	r6, r0
 801c04c:	2800      	cmp	r0, #0
 801c04e:	f000 80b4 	beq.w	801c1ba <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20a>
 801c052:	4650      	mov	r0, sl
 801c054:	f7f5 ff50 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801c058:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 801c05c:	2600      	movs	r6, #0
 801c05e:	4637      	mov	r7, r6
 801c060:	7c2a      	ldrb	r2, [r5, #16]
 801c062:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
 801c066:	b11a      	cbz	r2, 801c070 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xc0>
 801c068:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
 801c06c:	429a      	cmp	r2, r3
 801c06e:	d04e      	beq.n	801c10e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15e>
 801c070:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
 801c074:	429a      	cmp	r2, r3
 801c076:	d04a      	beq.n	801c10e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15e>
 801c078:	f895 204e 	ldrb.w	r2, [r5, #78]	; 0x4e
 801c07c:	429a      	cmp	r2, r3
 801c07e:	d110      	bne.n	801c0a2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf2>
 801c080:	b146      	cbz	r6, 801c094 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe4>
 801c082:	f1b8 0f0a 	cmp.w	r8, #10
 801c086:	d10d      	bne.n	801c0a4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf4>
 801c088:	b944      	cbnz	r4, 801c09c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xec>
 801c08a:	4627      	mov	r7, r4
 801c08c:	e031      	b.n	801c0f2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x142>
 801c08e:	f04f 0808 	mov.w	r8, #8
 801c092:	e7ac      	b.n	801bfee <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x3e>
 801c094:	b35c      	cbz	r4, 801c0ee <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x13e>
 801c096:	f1b8 0f08 	cmp.w	r8, #8
 801c09a:	d02d      	beq.n	801c0f8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x148>
 801c09c:	3701      	adds	r7, #1
 801c09e:	2601      	movs	r6, #1
 801c0a0:	e010      	b.n	801c0c4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x114>
 801c0a2:	b316      	cbz	r6, 801c0ea <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x13a>
 801c0a4:	f895 204c 	ldrb.w	r2, [r5, #76]	; 0x4c
 801c0a8:	429a      	cmp	r2, r3
 801c0aa:	d004      	beq.n	801c0b6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x106>
 801c0ac:	f895 204d 	ldrb.w	r2, [r5, #77]	; 0x4d
 801c0b0:	429a      	cmp	r2, r3
 801c0b2:	f040 8086 	bne.w	801c1c2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x212>
 801c0b6:	b30c      	cbz	r4, 801c0fc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x14c>
 801c0b8:	f1b8 0f10 	cmp.w	r8, #16
 801c0bc:	f040 8086 	bne.w	801c1cc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x21c>
 801c0c0:	2700      	movs	r7, #0
 801c0c2:	463e      	mov	r6, r7
 801c0c4:	9808      	ldr	r0, [sp, #32]
 801c0c6:	f7fb ffaf 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801c0ca:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801c0ce:	a918      	add	r1, sp, #96	; 0x60
 801c0d0:	4650      	mov	r0, sl
 801c0d2:	9309      	str	r3, [sp, #36]	; 0x24
 801c0d4:	f7f5 ff32 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801c0d8:	2800      	cmp	r0, #0
 801c0da:	d074      	beq.n	801c1c6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x216>
 801c0dc:	4650      	mov	r0, sl
 801c0de:	f7f5 ff0b 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801c0e2:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 801c0e6:	2e00      	cmp	r6, #0
 801c0e8:	d1ba      	bne.n	801c060 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xb0>
 801c0ea:	46b1      	mov	r9, r6
 801c0ec:	e00f      	b.n	801c10e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15e>
 801c0ee:	4627      	mov	r7, r4
 801c0f0:	2601      	movs	r6, #1
 801c0f2:	f04f 0808 	mov.w	r8, #8
 801c0f6:	e7e5      	b.n	801c0c4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x114>
 801c0f8:	4637      	mov	r7, r6
 801c0fa:	e7d0      	b.n	801c09e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xee>
 801c0fc:	4627      	mov	r7, r4
 801c0fe:	4626      	mov	r6, r4
 801c100:	f04f 0810 	mov.w	r8, #16
 801c104:	e7de      	b.n	801c0c4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x114>
 801c106:	2300      	movs	r3, #0
 801c108:	9300      	str	r3, [sp, #0]
 801c10a:	461f      	mov	r7, r3
 801c10c:	461e      	mov	r6, r3
 801c10e:	f1b8 0f10 	cmp.w	r8, #16
 801c112:	bf14      	ite	ne
 801c114:	4643      	movne	r3, r8
 801c116:	2316      	moveq	r3, #22
 801c118:	ee08 3a10 	vmov	s16, r3
 801c11c:	4b90      	ldr	r3, [pc, #576]	; (801c360 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x3b0>)
 801c11e:	930b      	str	r3, [sp, #44]	; 0x2c
 801c120:	7c2b      	ldrb	r3, [r5, #16]
 801c122:	b11b      	cbz	r3, 801c12c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x17c>
 801c124:	2120      	movs	r1, #32
 801c126:	a80b      	add	r0, sp, #44	; 0x2c
 801c128:	f7f4 f8b3 	bl	8010292 <_ZNSs7reserveEj>
 801c12c:	9b00      	ldr	r3, [sp, #0]
 801c12e:	2b00      	cmp	r3, #0
 801c130:	bf14      	ite	ne
 801c132:	2300      	movne	r3, #0
 801c134:	f04f 33ff 	moveq.w	r3, #4294967295	; 0xffffffff
 801c138:	9302      	str	r3, [sp, #8]
 801c13a:	bf14      	ite	ne
 801c13c:	f04f 4300 	movne.w	r3, #2147483648	; 0x80000000
 801c140:	f06f 4300 	mvneq.w	r3, #2147483648	; 0x80000000
 801c144:	9303      	str	r3, [sp, #12]
 801c146:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801c14a:	ea4f 73e8 	mov.w	r3, r8, asr #31
 801c14e:	4642      	mov	r2, r8
 801c150:	f7e4 fda4 	bl	8000c9c <__aeabi_uldivmod>
 801c154:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 801c158:	9301      	str	r3, [sp, #4]
 801c15a:	e9cd 0106 	strd	r0, r1, [sp, #24]
 801c15e:	2b00      	cmp	r3, #0
 801c160:	d064      	beq.n	801c22c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x27c>
 801c162:	2400      	movs	r4, #0
 801c164:	f105 034e 	add.w	r3, r5, #78	; 0x4e
 801c168:	9304      	str	r3, [sp, #16]
 801c16a:	46a2      	mov	sl, r4
 801c16c:	46a3      	mov	fp, r4
 801c16e:	f1b9 0f00 	cmp.w	r9, #0
 801c172:	d131      	bne.n	801c1d8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x228>
 801c174:	7c2b      	ldrb	r3, [r5, #16]
 801c176:	f89d 202b 	ldrb.w	r2, [sp, #43]	; 0x2b
 801c17a:	2b00      	cmp	r3, #0
 801c17c:	f000 8096 	beq.w	801c2ac <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2fc>
 801c180:	f895 1025 	ldrb.w	r1, [r5, #37]	; 0x25
 801c184:	4291      	cmp	r1, r2
 801c186:	f040 8091 	bne.w	801c2ac <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2fc>
 801c18a:	b337      	cbz	r7, 801c1da <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x22a>
 801c18c:	b2f9      	uxtb	r1, r7
 801c18e:	a80b      	add	r0, sp, #44	; 0x2c
 801c190:	f7f4 f94d 	bl	801042e <_ZNSs9push_backEc>
 801c194:	2700      	movs	r7, #0
 801c196:	9808      	ldr	r0, [sp, #32]
 801c198:	f7fb ff46 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801c19c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801c1a0:	a918      	add	r1, sp, #96	; 0x60
 801c1a2:	a808      	add	r0, sp, #32
 801c1a4:	9309      	str	r3, [sp, #36]	; 0x24
 801c1a6:	f7f5 fec9 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801c1aa:	2800      	cmp	r0, #0
 801c1ac:	d07b      	beq.n	801c2a6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f6>
 801c1ae:	a808      	add	r0, sp, #32
 801c1b0:	f7f5 fea2 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801c1b4:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 801c1b8:	e7dc      	b.n	801c174 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1c4>
 801c1ba:	f04f 0901 	mov.w	r9, #1
 801c1be:	4607      	mov	r7, r0
 801c1c0:	e7a5      	b.n	801c10e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15e>
 801c1c2:	2601      	movs	r6, #1
 801c1c4:	e7a3      	b.n	801c10e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15e>
 801c1c6:	f04f 0901 	mov.w	r9, #1
 801c1ca:	e7a0      	b.n	801c10e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15e>
 801c1cc:	ee08 8a10 	vmov	s16, r8
 801c1d0:	2601      	movs	r6, #1
 801c1d2:	e7a3      	b.n	801c11c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x16c>
 801c1d4:	f04f 0901 	mov.w	r9, #1
 801c1d8:	2300      	movs	r3, #0
 801c1da:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c1dc:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801c1e0:	b172      	cbz	r2, 801c200 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x250>
 801c1e2:	b2f9      	uxtb	r1, r7
 801c1e4:	a80b      	add	r0, sp, #44	; 0x2c
 801c1e6:	9301      	str	r3, [sp, #4]
 801c1e8:	f7f4 f921 	bl	801042e <_ZNSs9push_backEc>
 801c1ec:	e9d5 0102 	ldrd	r0, r1, [r5, #8]
 801c1f0:	aa0b      	add	r2, sp, #44	; 0x2c
 801c1f2:	f008 fcdb 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 801c1f6:	9b01      	ldr	r3, [sp, #4]
 801c1f8:	b910      	cbnz	r0, 801c200 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x250>
 801c1fa:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801c1fc:	2204      	movs	r2, #4
 801c1fe:	600a      	str	r2, [r1, #0]
 801c200:	b92f      	cbnz	r7, 801c20e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x25e>
 801c202:	b926      	cbnz	r6, 801c20e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x25e>
 801c204:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c206:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801c20a:	2a00      	cmp	r2, #0
 801c20c:	d07e      	beq.n	801c30c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x35c>
 801c20e:	2b00      	cmp	r3, #0
 801c210:	d17c      	bne.n	801c30c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x35c>
 801c212:	f1bb 0f00 	cmp.w	fp, #0
 801c216:	f040 8098 	bne.w	801c34a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x39a>
 801c21a:	9b00      	ldr	r3, [sp, #0]
 801c21c:	b113      	cbz	r3, 801c224 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x274>
 801c21e:	4264      	negs	r4, r4
 801c220:	eb6a 0a4a 	sbc.w	sl, sl, sl, lsl #1
 801c224:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c226:	e9c3 4a00 	strd	r4, sl, [r3]
 801c22a:	e077      	b.n	801c31c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x36c>
 801c22c:	f8dd b004 	ldr.w	fp, [sp, #4]
 801c230:	465c      	mov	r4, fp
 801c232:	46da      	mov	sl, fp
 801c234:	f1b9 0f00 	cmp.w	r9, #0
 801c238:	d1ce      	bne.n	801c1d8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x228>
 801c23a:	f89d 102b 	ldrb.w	r1, [sp, #43]	; 0x2b
 801c23e:	ee18 0a10 	vmov	r0, s16
 801c242:	f7fb fefb 	bl	801803c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>
 801c246:	1c43      	adds	r3, r0, #1
 801c248:	d0c6      	beq.n	801c1d8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x228>
 801c24a:	9b06      	ldr	r3, [sp, #24]
 801c24c:	42a3      	cmp	r3, r4
 801c24e:	9b07      	ldr	r3, [sp, #28]
 801c250:	eb73 030a 	sbcs.w	r3, r3, sl
 801c254:	d324      	bcc.n	801c2a0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f0>
 801c256:	fba8 4304 	umull	r4, r3, r8, r4
 801c25a:	fb08 3a0a 	mla	sl, r8, sl, r3
 801c25e:	9b02      	ldr	r3, [sp, #8]
 801c260:	1a1a      	subs	r2, r3, r0
 801c262:	9b03      	ldr	r3, [sp, #12]
 801c264:	eb63 73e0 	sbc.w	r3, r3, r0, asr #31
 801c268:	42a2      	cmp	r2, r4
 801c26a:	eb73 030a 	sbcs.w	r3, r3, sl
 801c26e:	bf38      	it	cc
 801c270:	f04b 0b01 	orrcc.w	fp, fp, #1
 801c274:	1904      	adds	r4, r0, r4
 801c276:	eb4a 7ae0 	adc.w	sl, sl, r0, asr #31
 801c27a:	3701      	adds	r7, #1
 801c27c:	9808      	ldr	r0, [sp, #32]
 801c27e:	f7fb fed3 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801c282:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801c286:	a918      	add	r1, sp, #96	; 0x60
 801c288:	a808      	add	r0, sp, #32
 801c28a:	9309      	str	r3, [sp, #36]	; 0x24
 801c28c:	f7f5 fe56 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801c290:	2800      	cmp	r0, #0
 801c292:	d09f      	beq.n	801c1d4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x224>
 801c294:	a808      	add	r0, sp, #32
 801c296:	f7f5 fe2f 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801c29a:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 801c29e:	e7cc      	b.n	801c23a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x28a>
 801c2a0:	f04f 0b01 	mov.w	fp, #1
 801c2a4:	e7ea      	b.n	801c27c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2cc>
 801c2a6:	f8dd 9004 	ldr.w	r9, [sp, #4]
 801c2aa:	e760      	b.n	801c16e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1be>
 801c2ac:	f895 3024 	ldrb.w	r3, [r5, #36]	; 0x24
 801c2b0:	4293      	cmp	r3, r2
 801c2b2:	d091      	beq.n	801c1d8 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x228>
 801c2b4:	ee18 1a10 	vmov	r1, s16
 801c2b8:	9804      	ldr	r0, [sp, #16]
 801c2ba:	f10d 022b 	add.w	r2, sp, #43	; 0x2b
 801c2be:	f7f3 fd75 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 801c2c2:	b308      	cbz	r0, 801c308 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x358>
 801c2c4:	9b04      	ldr	r3, [sp, #16]
 801c2c6:	1ac0      	subs	r0, r0, r3
 801c2c8:	9b06      	ldr	r3, [sp, #24]
 801c2ca:	280f      	cmp	r0, #15
 801c2cc:	bfc8      	it	gt
 801c2ce:	3806      	subgt	r0, #6
 801c2d0:	42a3      	cmp	r3, r4
 801c2d2:	9b07      	ldr	r3, [sp, #28]
 801c2d4:	eb73 030a 	sbcs.w	r3, r3, sl
 801c2d8:	d313      	bcc.n	801c302 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x352>
 801c2da:	fba8 4304 	umull	r4, r3, r8, r4
 801c2de:	fb08 3a0a 	mla	sl, r8, sl, r3
 801c2e2:	9b02      	ldr	r3, [sp, #8]
 801c2e4:	1a1a      	subs	r2, r3, r0
 801c2e6:	9b03      	ldr	r3, [sp, #12]
 801c2e8:	eb63 73e0 	sbc.w	r3, r3, r0, asr #31
 801c2ec:	42a2      	cmp	r2, r4
 801c2ee:	eb73 030a 	sbcs.w	r3, r3, sl
 801c2f2:	bf38      	it	cc
 801c2f4:	f04b 0b01 	orrcc.w	fp, fp, #1
 801c2f8:	1904      	adds	r4, r0, r4
 801c2fa:	eb4a 7ae0 	adc.w	sl, sl, r0, asr #31
 801c2fe:	3701      	adds	r7, #1
 801c300:	e749      	b.n	801c196 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e6>
 801c302:	f8dd b004 	ldr.w	fp, [sp, #4]
 801c306:	e746      	b.n	801c196 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e6>
 801c308:	4603      	mov	r3, r0
 801c30a:	e766      	b.n	801c1da <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x22a>
 801c30c:	2200      	movs	r2, #0
 801c30e:	2300      	movs	r3, #0
 801c310:	991c      	ldr	r1, [sp, #112]	; 0x70
 801c312:	e9c1 2300 	strd	r2, r3, [r1]
 801c316:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801c318:	2304      	movs	r3, #4
 801c31a:	6013      	str	r3, [r2, #0]
 801c31c:	f1b9 0f00 	cmp.w	r9, #0
 801c320:	d005      	beq.n	801c32e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x37e>
 801c322:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801c324:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801c326:	681b      	ldr	r3, [r3, #0]
 801c328:	f043 0302 	orr.w	r3, r3, #2
 801c32c:	6013      	str	r3, [r2, #0]
 801c32e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 801c332:	9b05      	ldr	r3, [sp, #20]
 801c334:	e883 0003 	stmia.w	r3, {r0, r1}
 801c338:	a80b      	add	r0, sp, #44	; 0x2c
 801c33a:	f7f3 fe63 	bl	8010004 <_ZNSsD1Ev>
 801c33e:	9805      	ldr	r0, [sp, #20]
 801c340:	b00d      	add	sp, #52	; 0x34
 801c342:	ecbd 8b02 	vpop	{d8}
 801c346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c34a:	9b00      	ldr	r3, [sp, #0]
 801c34c:	b923      	cbnz	r3, 801c358 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x3a8>
 801c34e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801c352:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801c356:	e7db      	b.n	801c310 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x360>
 801c358:	2200      	movs	r2, #0
 801c35a:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 801c35e:	e7d7      	b.n	801c310 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x360>
 801c360:	20003bf0 	.word	0x20003bf0

0801c364 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRx>:
 801c364:	b570      	push	{r4, r5, r6, lr}
 801c366:	b088      	sub	sp, #32
 801c368:	ad06      	add	r5, sp, #24
 801c36a:	e885 000c 	stmia.w	r5, {r2, r3}
 801c36e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c370:	9304      	str	r3, [sp, #16]
 801c372:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c374:	9303      	str	r3, [sp, #12]
 801c376:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c378:	9302      	str	r3, [sp, #8]
 801c37a:	ab0c      	add	r3, sp, #48	; 0x30
 801c37c:	4604      	mov	r4, r0
 801c37e:	460e      	mov	r6, r1
 801c380:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c384:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c388:	4620      	mov	r0, r4
 801c38a:	e895 000c 	ldmia.w	r5, {r2, r3}
 801c38e:	4631      	mov	r1, r6
 801c390:	f7ff fe0e 	bl	801bfb0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 801c394:	4620      	mov	r0, r4
 801c396:	b008      	add	sp, #32
 801c398:	bd70      	pop	{r4, r5, r6, pc}
	...

0801c39c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>:
 801c39c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3a0:	ed2d 8b02 	vpush	{d8}
 801c3a4:	b08b      	sub	sp, #44	; 0x2c
 801c3a6:	f10d 0918 	add.w	r9, sp, #24
 801c3aa:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801c3ac:	9003      	str	r0, [sp, #12]
 801c3ae:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 801c3b2:	a808      	add	r0, sp, #32
 801c3b4:	e889 000c 	stmia.w	r9, {r2, r3}
 801c3b8:	f7fd f8ba 	bl	8019530 <_ZNKSt11__use_cacheISt16__numpunct_cacheIcEEclERKSt6locale>
 801c3bc:	68e4      	ldr	r4, [r4, #12]
 801c3be:	f004 044a 	and.w	r4, r4, #74	; 0x4a
 801c3c2:	2300      	movs	r3, #0
 801c3c4:	2c40      	cmp	r4, #64	; 0x40
 801c3c6:	4605      	mov	r5, r0
 801c3c8:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801c3cc:	d055      	beq.n	801c47a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xde>
 801c3ce:	2c08      	cmp	r4, #8
 801c3d0:	bf0c      	ite	eq
 801c3d2:	f04f 0810 	moveq.w	r8, #16
 801c3d6:	f04f 080a 	movne.w	r8, #10
 801c3da:	a916      	add	r1, sp, #88	; 0x58
 801c3dc:	4648      	mov	r0, r9
 801c3de:	f7f5 fd9a 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801c3e2:	4682      	mov	sl, r0
 801c3e4:	2800      	cmp	r0, #0
 801c3e6:	f040 8082 	bne.w	801c4ee <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x152>
 801c3ea:	4648      	mov	r0, r9
 801c3ec:	f7f5 fd84 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801c3f0:	f895 304a 	ldrb.w	r3, [r5, #74]	; 0x4a
 801c3f4:	b2c0      	uxtb	r0, r0
 801c3f6:	4283      	cmp	r3, r0
 801c3f8:	bf0c      	ite	eq
 801c3fa:	2301      	moveq	r3, #1
 801c3fc:	2300      	movne	r3, #0
 801c3fe:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801c402:	9301      	str	r3, [sp, #4]
 801c404:	d003      	beq.n	801c40e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x72>
 801c406:	f895 304b 	ldrb.w	r3, [r5, #75]	; 0x4b
 801c40a:	4283      	cmp	r3, r0
 801c40c:	d11c      	bne.n	801c448 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xac>
 801c40e:	7c2b      	ldrb	r3, [r5, #16]
 801c410:	b11b      	cbz	r3, 801c41a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x7e>
 801c412:	f895 3025 	ldrb.w	r3, [r5, #37]	; 0x25
 801c416:	4283      	cmp	r3, r0
 801c418:	d016      	beq.n	801c448 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xac>
 801c41a:	f895 3024 	ldrb.w	r3, [r5, #36]	; 0x24
 801c41e:	4283      	cmp	r3, r0
 801c420:	d012      	beq.n	801c448 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xac>
 801c422:	9806      	ldr	r0, [sp, #24]
 801c424:	f7fb fe00 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801c428:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801c42c:	a916      	add	r1, sp, #88	; 0x58
 801c42e:	4648      	mov	r0, r9
 801c430:	9307      	str	r3, [sp, #28]
 801c432:	f7f5 fd83 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801c436:	4606      	mov	r6, r0
 801c438:	2800      	cmp	r0, #0
 801c43a:	f000 80a7 	beq.w	801c58c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f0>
 801c43e:	4648      	mov	r0, r9
 801c440:	f7f5 fd5a 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801c444:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801c448:	2600      	movs	r6, #0
 801c44a:	4637      	mov	r7, r6
 801c44c:	7c2a      	ldrb	r2, [r5, #16]
 801c44e:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 801c452:	b11a      	cbz	r2, 801c45c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xc0>
 801c454:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
 801c458:	429a      	cmp	r2, r3
 801c45a:	d04c      	beq.n	801c4f6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15a>
 801c45c:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
 801c460:	429a      	cmp	r2, r3
 801c462:	d048      	beq.n	801c4f6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15a>
 801c464:	f895 204e 	ldrb.w	r2, [r5, #78]	; 0x4e
 801c468:	429a      	cmp	r2, r3
 801c46a:	d110      	bne.n	801c48e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf2>
 801c46c:	b146      	cbz	r6, 801c480 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe4>
 801c46e:	f1b8 0f0a 	cmp.w	r8, #10
 801c472:	d10d      	bne.n	801c490 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf4>
 801c474:	b944      	cbnz	r4, 801c488 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xec>
 801c476:	4627      	mov	r7, r4
 801c478:	e02f      	b.n	801c4da <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x13e>
 801c47a:	f04f 0808 	mov.w	r8, #8
 801c47e:	e7ac      	b.n	801c3da <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x3e>
 801c480:	b34c      	cbz	r4, 801c4d6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x13a>
 801c482:	f1b8 0f08 	cmp.w	r8, #8
 801c486:	d02b      	beq.n	801c4e0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 801c488:	3701      	adds	r7, #1
 801c48a:	2601      	movs	r6, #1
 801c48c:	e00e      	b.n	801c4ac <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x110>
 801c48e:	b306      	cbz	r6, 801c4d2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x136>
 801c490:	f895 204c 	ldrb.w	r2, [r5, #76]	; 0x4c
 801c494:	429a      	cmp	r2, r3
 801c496:	d003      	beq.n	801c4a0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x104>
 801c498:	f895 204d 	ldrb.w	r2, [r5, #77]	; 0x4d
 801c49c:	429a      	cmp	r2, r3
 801c49e:	d179      	bne.n	801c594 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f8>
 801c4a0:	b304      	cbz	r4, 801c4e4 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x148>
 801c4a2:	f1b8 0f10 	cmp.w	r8, #16
 801c4a6:	d17a      	bne.n	801c59e <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x202>
 801c4a8:	2700      	movs	r7, #0
 801c4aa:	463e      	mov	r6, r7
 801c4ac:	9806      	ldr	r0, [sp, #24]
 801c4ae:	f7fb fdbb 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801c4b2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801c4b6:	a916      	add	r1, sp, #88	; 0x58
 801c4b8:	4648      	mov	r0, r9
 801c4ba:	9307      	str	r3, [sp, #28]
 801c4bc:	f7f5 fd3e 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801c4c0:	2800      	cmp	r0, #0
 801c4c2:	d069      	beq.n	801c598 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1fc>
 801c4c4:	4648      	mov	r0, r9
 801c4c6:	f7f5 fd17 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801c4ca:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801c4ce:	2e00      	cmp	r6, #0
 801c4d0:	d1bc      	bne.n	801c44c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xb0>
 801c4d2:	46b2      	mov	sl, r6
 801c4d4:	e00f      	b.n	801c4f6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15a>
 801c4d6:	4627      	mov	r7, r4
 801c4d8:	2601      	movs	r6, #1
 801c4da:	f04f 0808 	mov.w	r8, #8
 801c4de:	e7e5      	b.n	801c4ac <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x110>
 801c4e0:	4637      	mov	r7, r6
 801c4e2:	e7d2      	b.n	801c48a <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xee>
 801c4e4:	4627      	mov	r7, r4
 801c4e6:	4626      	mov	r6, r4
 801c4e8:	f04f 0810 	mov.w	r8, #16
 801c4ec:	e7de      	b.n	801c4ac <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x110>
 801c4ee:	2300      	movs	r3, #0
 801c4f0:	9301      	str	r3, [sp, #4]
 801c4f2:	461f      	mov	r7, r3
 801c4f4:	461e      	mov	r6, r3
 801c4f6:	f1b8 0f10 	cmp.w	r8, #16
 801c4fa:	bf14      	ite	ne
 801c4fc:	4643      	movne	r3, r8
 801c4fe:	2316      	moveq	r3, #22
 801c500:	ee08 3a10 	vmov	s16, r3
 801c504:	4b87      	ldr	r3, [pc, #540]	; (801c724 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x388>)
 801c506:	9309      	str	r3, [sp, #36]	; 0x24
 801c508:	7c2b      	ldrb	r3, [r5, #16]
 801c50a:	b11b      	cbz	r3, 801c514 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x178>
 801c50c:	2120      	movs	r1, #32
 801c50e:	a809      	add	r0, sp, #36	; 0x24
 801c510:	f7f3 febf 	bl	8010292 <_ZNSs7reserveEj>
 801c514:	ea4f 73e8 	mov.w	r3, r8, asr #31
 801c518:	4642      	mov	r2, r8
 801c51a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801c51e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 801c522:	f7e4 fbbb 	bl	8000c9c <__aeabi_uldivmod>
 801c526:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 801c52a:	9300      	str	r3, [sp, #0]
 801c52c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801c530:	2b00      	cmp	r3, #0
 801c532:	d064      	beq.n	801c5fe <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x262>
 801c534:	2400      	movs	r4, #0
 801c536:	f105 034e 	add.w	r3, r5, #78	; 0x4e
 801c53a:	9302      	str	r3, [sp, #8]
 801c53c:	46a1      	mov	r9, r4
 801c53e:	46a3      	mov	fp, r4
 801c540:	f1ba 0f00 	cmp.w	sl, #0
 801c544:	d131      	bne.n	801c5aa <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20e>
 801c546:	7c2b      	ldrb	r3, [r5, #16]
 801c548:	f89d 2023 	ldrb.w	r2, [sp, #35]	; 0x23
 801c54c:	2b00      	cmp	r3, #0
 801c54e:	f000 8095 	beq.w	801c67c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2e0>
 801c552:	f895 1025 	ldrb.w	r1, [r5, #37]	; 0x25
 801c556:	4291      	cmp	r1, r2
 801c558:	f040 8090 	bne.w	801c67c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2e0>
 801c55c:	b337      	cbz	r7, 801c5ac <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x210>
 801c55e:	b2f9      	uxtb	r1, r7
 801c560:	a809      	add	r0, sp, #36	; 0x24
 801c562:	f7f3 ff64 	bl	801042e <_ZNSs9push_backEc>
 801c566:	2700      	movs	r7, #0
 801c568:	9806      	ldr	r0, [sp, #24]
 801c56a:	f7fb fd5d 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801c56e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801c572:	a916      	add	r1, sp, #88	; 0x58
 801c574:	a806      	add	r0, sp, #24
 801c576:	9307      	str	r3, [sp, #28]
 801c578:	f7f5 fce0 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801c57c:	2800      	cmp	r0, #0
 801c57e:	d07a      	beq.n	801c676 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2da>
 801c580:	a806      	add	r0, sp, #24
 801c582:	f7f5 fcb9 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801c586:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801c58a:	e7dc      	b.n	801c546 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1aa>
 801c58c:	f04f 0a01 	mov.w	sl, #1
 801c590:	4607      	mov	r7, r0
 801c592:	e7b0      	b.n	801c4f6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15a>
 801c594:	2601      	movs	r6, #1
 801c596:	e7ae      	b.n	801c4f6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15a>
 801c598:	f04f 0a01 	mov.w	sl, #1
 801c59c:	e7ab      	b.n	801c4f6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x15a>
 801c59e:	ee08 8a10 	vmov	s16, r8
 801c5a2:	2601      	movs	r6, #1
 801c5a4:	e7ae      	b.n	801c504 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x168>
 801c5a6:	f04f 0a01 	mov.w	sl, #1
 801c5aa:	2300      	movs	r3, #0
 801c5ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c5ae:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801c5b2:	b172      	cbz	r2, 801c5d2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x236>
 801c5b4:	b2f9      	uxtb	r1, r7
 801c5b6:	a809      	add	r0, sp, #36	; 0x24
 801c5b8:	9300      	str	r3, [sp, #0]
 801c5ba:	f7f3 ff38 	bl	801042e <_ZNSs9push_backEc>
 801c5be:	e9d5 0102 	ldrd	r0, r1, [r5, #8]
 801c5c2:	aa09      	add	r2, sp, #36	; 0x24
 801c5c4:	f008 faf2 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 801c5c8:	9b00      	ldr	r3, [sp, #0]
 801c5ca:	b910      	cbnz	r0, 801c5d2 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x236>
 801c5cc:	9919      	ldr	r1, [sp, #100]	; 0x64
 801c5ce:	2204      	movs	r2, #4
 801c5d0:	600a      	str	r2, [r1, #0]
 801c5d2:	b92f      	cbnz	r7, 801c5e0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x244>
 801c5d4:	b926      	cbnz	r6, 801c5e0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x244>
 801c5d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c5d8:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801c5dc:	2a00      	cmp	r2, #0
 801c5de:	d07c      	beq.n	801c6da <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x33e>
 801c5e0:	2b00      	cmp	r3, #0
 801c5e2:	d17a      	bne.n	801c6da <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x33e>
 801c5e4:	f1bb 0f00 	cmp.w	fp, #0
 801c5e8:	f040 8096 	bne.w	801c718 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x37c>
 801c5ec:	9b01      	ldr	r3, [sp, #4]
 801c5ee:	b113      	cbz	r3, 801c5f6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x25a>
 801c5f0:	4264      	negs	r4, r4
 801c5f2:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
 801c5f6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801c5f8:	e9c3 4900 	strd	r4, r9, [r3]
 801c5fc:	e075      	b.n	801c6ea <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x34e>
 801c5fe:	f8dd b000 	ldr.w	fp, [sp]
 801c602:	465c      	mov	r4, fp
 801c604:	46d9      	mov	r9, fp
 801c606:	f1ba 0f00 	cmp.w	sl, #0
 801c60a:	d1ce      	bne.n	801c5aa <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20e>
 801c60c:	f89d 1023 	ldrb.w	r1, [sp, #35]	; 0x23
 801c610:	ee18 0a10 	vmov	r0, s16
 801c614:	f7fb fd12 	bl	801803c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE7_M_findIcEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>
 801c618:	1c43      	adds	r3, r0, #1
 801c61a:	d0c6      	beq.n	801c5aa <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20e>
 801c61c:	9b04      	ldr	r3, [sp, #16]
 801c61e:	42a3      	cmp	r3, r4
 801c620:	9b05      	ldr	r3, [sp, #20]
 801c622:	eb73 0309 	sbcs.w	r3, r3, r9
 801c626:	d323      	bcc.n	801c670 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2d4>
 801c628:	fba8 4304 	umull	r4, r3, r8, r4
 801c62c:	fb08 3909 	mla	r9, r8, r9, r3
 801c630:	43c1      	mvns	r1, r0
 801c632:	17c3      	asrs	r3, r0, #31
 801c634:	42a1      	cmp	r1, r4
 801c636:	ea6f 0203 	mvn.w	r2, r3
 801c63a:	eb72 0209 	sbcs.w	r2, r2, r9
 801c63e:	bf38      	it	cc
 801c640:	f04b 0b01 	orrcc.w	fp, fp, #1
 801c644:	1904      	adds	r4, r0, r4
 801c646:	eb49 0903 	adc.w	r9, r9, r3
 801c64a:	3701      	adds	r7, #1
 801c64c:	9806      	ldr	r0, [sp, #24]
 801c64e:	f7fb fceb 	bl	8018028 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6sbumpcEv.isra.0>
 801c652:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801c656:	a916      	add	r1, sp, #88	; 0x58
 801c658:	a806      	add	r0, sp, #24
 801c65a:	9307      	str	r3, [sp, #28]
 801c65c:	f7f5 fc6e 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801c660:	2800      	cmp	r0, #0
 801c662:	d0a0      	beq.n	801c5a6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20a>
 801c664:	a806      	add	r0, sp, #24
 801c666:	f7f5 fc47 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801c66a:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
 801c66e:	e7cd      	b.n	801c60c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x270>
 801c670:	f04f 0b01 	mov.w	fp, #1
 801c674:	e7ea      	b.n	801c64c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2b0>
 801c676:	f8dd a000 	ldr.w	sl, [sp]
 801c67a:	e761      	b.n	801c540 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1a4>
 801c67c:	f895 3024 	ldrb.w	r3, [r5, #36]	; 0x24
 801c680:	4293      	cmp	r3, r2
 801c682:	d092      	beq.n	801c5aa <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20e>
 801c684:	ee18 1a10 	vmov	r1, s16
 801c688:	9802      	ldr	r0, [sp, #8]
 801c68a:	f10d 0223 	add.w	r2, sp, #35	; 0x23
 801c68e:	f7f3 fb8d 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 801c692:	b300      	cbz	r0, 801c6d6 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x33a>
 801c694:	9b02      	ldr	r3, [sp, #8]
 801c696:	1ac0      	subs	r0, r0, r3
 801c698:	9b04      	ldr	r3, [sp, #16]
 801c69a:	280f      	cmp	r0, #15
 801c69c:	bfc8      	it	gt
 801c69e:	3806      	subgt	r0, #6
 801c6a0:	42a3      	cmp	r3, r4
 801c6a2:	9b05      	ldr	r3, [sp, #20]
 801c6a4:	eb73 0309 	sbcs.w	r3, r3, r9
 801c6a8:	d312      	bcc.n	801c6d0 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x334>
 801c6aa:	fba8 4304 	umull	r4, r3, r8, r4
 801c6ae:	fb08 3909 	mla	r9, r8, r9, r3
 801c6b2:	43c1      	mvns	r1, r0
 801c6b4:	17c3      	asrs	r3, r0, #31
 801c6b6:	42a1      	cmp	r1, r4
 801c6b8:	ea6f 0203 	mvn.w	r2, r3
 801c6bc:	eb72 0209 	sbcs.w	r2, r2, r9
 801c6c0:	bf38      	it	cc
 801c6c2:	f04b 0b01 	orrcc.w	fp, fp, #1
 801c6c6:	1904      	adds	r4, r0, r4
 801c6c8:	eb49 0903 	adc.w	r9, r9, r3
 801c6cc:	3701      	adds	r7, #1
 801c6ce:	e74b      	b.n	801c568 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1cc>
 801c6d0:	f8dd b000 	ldr.w	fp, [sp]
 801c6d4:	e748      	b.n	801c568 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1cc>
 801c6d6:	4603      	mov	r3, r0
 801c6d8:	e768      	b.n	801c5ac <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x210>
 801c6da:	2200      	movs	r2, #0
 801c6dc:	2300      	movs	r3, #0
 801c6de:	991a      	ldr	r1, [sp, #104]	; 0x68
 801c6e0:	e9c1 2300 	strd	r2, r3, [r1]
 801c6e4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801c6e6:	2304      	movs	r3, #4
 801c6e8:	6013      	str	r3, [r2, #0]
 801c6ea:	f1ba 0f00 	cmp.w	sl, #0
 801c6ee:	d005      	beq.n	801c6fc <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x360>
 801c6f0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801c6f2:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801c6f4:	681b      	ldr	r3, [r3, #0]
 801c6f6:	f043 0302 	orr.w	r3, r3, #2
 801c6fa:	6013      	str	r3, [r2, #0]
 801c6fc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c700:	9b03      	ldr	r3, [sp, #12]
 801c702:	e883 0003 	stmia.w	r3, {r0, r1}
 801c706:	a809      	add	r0, sp, #36	; 0x24
 801c708:	f7f3 fc7c 	bl	8010004 <_ZNSsD1Ev>
 801c70c:	9803      	ldr	r0, [sp, #12]
 801c70e:	b00b      	add	sp, #44	; 0x2c
 801c710:	ecbd 8b02 	vpop	{d8}
 801c714:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c718:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801c71c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801c720:	e7dd      	b.n	801c6de <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x342>
 801c722:	bf00      	nop
 801c724:	20003bf0 	.word	0x20003bf0

0801c728 <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRy>:
 801c728:	b570      	push	{r4, r5, r6, lr}
 801c72a:	b088      	sub	sp, #32
 801c72c:	ad06      	add	r5, sp, #24
 801c72e:	e885 000c 	stmia.w	r5, {r2, r3}
 801c732:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c734:	9304      	str	r3, [sp, #16]
 801c736:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c738:	9303      	str	r3, [sp, #12]
 801c73a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c73c:	9302      	str	r3, [sp, #8]
 801c73e:	ab0c      	add	r3, sp, #48	; 0x30
 801c740:	4604      	mov	r4, r0
 801c742:	460e      	mov	r6, r1
 801c744:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c748:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c74c:	4620      	mov	r0, r4
 801c74e:	e895 000c 	ldmia.w	r5, {r2, r3}
 801c752:	4631      	mov	r1, r6
 801c754:	f7ff fe22 	bl	801c39c <_ZNKSt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 801c758:	4620      	mov	r0, r4
 801c75a:	b008      	add	sp, #32
 801c75c:	bd70      	pop	{r4, r5, r6, pc}

0801c75e <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_yearES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801c75e:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c760:	b08f      	sub	sp, #60	; 0x3c
 801c762:	ac0a      	add	r4, sp, #40	; 0x28
 801c764:	e884 000c 	stmia.w	r4, {r2, r3}
 801c768:	aa0d      	add	r2, sp, #52	; 0x34
 801c76a:	9207      	str	r2, [sp, #28]
 801c76c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c76e:	9206      	str	r2, [sp, #24]
 801c770:	468c      	mov	ip, r1
 801c772:	f242 720f 	movw	r2, #9999	; 0x270f
 801c776:	2104      	movs	r1, #4
 801c778:	e9cd 2104 	strd	r2, r1, [sp, #16]
 801c77c:	2300      	movs	r3, #0
 801c77e:	9303      	str	r3, [sp, #12]
 801c780:	930d      	str	r3, [sp, #52]	; 0x34
 801c782:	ab0c      	add	r3, sp, #48	; 0x30
 801c784:	9302      	str	r3, [sp, #8]
 801c786:	ab14      	add	r3, sp, #80	; 0x50
 801c788:	4605      	mov	r5, r0
 801c78a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c78e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c792:	af08      	add	r7, sp, #32
 801c794:	e894 000c 	ldmia.w	r4, {r2, r3}
 801c798:	4661      	mov	r1, ip
 801c79a:	4638      	mov	r0, r7
 801c79c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801c79e:	f7fd fc92 	bl	801a0c6 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 801c7a2:	e897 0003 	ldmia.w	r7, {r0, r1}
 801c7a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c7a8:	e884 0003 	stmia.w	r4, {r0, r1}
 801c7ac:	b9bb      	cbnz	r3, 801c7de <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_yearES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x80>
 801c7ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c7b0:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c7b2:	2b00      	cmp	r3, #0
 801c7b4:	bfb4      	ite	lt
 801c7b6:	3364      	addlt	r3, #100	; 0x64
 801c7b8:	f2a3 736c 	subwge	r3, r3, #1900	; 0x76c
 801c7bc:	6153      	str	r3, [r2, #20]
 801c7be:	a914      	add	r1, sp, #80	; 0x50
 801c7c0:	4620      	mov	r0, r4
 801c7c2:	f7f5 fba8 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801c7c6:	b118      	cbz	r0, 801c7d0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_yearES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x72>
 801c7c8:	6833      	ldr	r3, [r6, #0]
 801c7ca:	f043 0302 	orr.w	r3, r3, #2
 801c7ce:	6033      	str	r3, [r6, #0]
 801c7d0:	e894 0003 	ldmia.w	r4, {r0, r1}
 801c7d4:	e885 0003 	stmia.w	r5, {r0, r1}
 801c7d8:	4628      	mov	r0, r5
 801c7da:	b00f      	add	sp, #60	; 0x3c
 801c7dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c7de:	6833      	ldr	r3, [r6, #0]
 801c7e0:	f043 0304 	orr.w	r3, r3, #4
 801c7e4:	6033      	str	r3, [r6, #0]
 801c7e6:	e7ea      	b.n	801c7be <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_yearES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x60>

0801c7e8 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14do_get_weekdayES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801c7e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c7ec:	b09c      	sub	sp, #112	; 0x70
 801c7ee:	e9dd 9626 	ldrd	r9, r6, [sp, #152]	; 0x98
 801c7f2:	ac0a      	add	r4, sp, #40	; 0x28
 801c7f4:	4605      	mov	r5, r0
 801c7f6:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 801c7fa:	e884 000c 	stmia.w	r4, {r2, r3}
 801c7fe:	4688      	mov	r8, r1
 801c800:	f7fc f968 	bl	8018ad4 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale>
 801c804:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 801c808:	4607      	mov	r7, r0
 801c80a:	4651      	mov	r1, sl
 801c80c:	f7fb fdba 	bl	8018384 <_ZNKSt11__timepunctIcE19_M_days_abbreviatedEPPKc>
 801c810:	4638      	mov	r0, r7
 801c812:	a915      	add	r1, sp, #84	; 0x54
 801c814:	f7fb fda6 	bl	8018364 <_ZNKSt11__timepunctIcE7_M_daysEPPKc>
 801c818:	2300      	movs	r3, #0
 801c81a:	930d      	str	r3, [sp, #52]	; 0x34
 801c81c:	ab0d      	add	r3, sp, #52	; 0x34
 801c81e:	e9cd 9305 	strd	r9, r3, [sp, #20]
 801c822:	2307      	movs	r3, #7
 801c824:	e9cd a303 	strd	sl, r3, [sp, #12]
 801c828:	ab0c      	add	r3, sp, #48	; 0x30
 801c82a:	9302      	str	r3, [sp, #8]
 801c82c:	ab24      	add	r3, sp, #144	; 0x90
 801c82e:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c832:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c836:	af08      	add	r7, sp, #32
 801c838:	e894 000c 	ldmia.w	r4, {r2, r3}
 801c83c:	4641      	mov	r1, r8
 801c83e:	4638      	mov	r0, r7
 801c840:	f7fd fd54 	bl	801a2ec <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>
 801c844:	e897 0003 	ldmia.w	r7, {r0, r1}
 801c848:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c84a:	e884 0003 	stmia.w	r4, {r0, r1}
 801c84e:	b99b      	cbnz	r3, 801c878 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14do_get_weekdayES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x90>
 801c850:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c852:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c854:	619a      	str	r2, [r3, #24]
 801c856:	a924      	add	r1, sp, #144	; 0x90
 801c858:	4620      	mov	r0, r4
 801c85a:	f7f5 fb5c 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801c85e:	b118      	cbz	r0, 801c868 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14do_get_weekdayES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x80>
 801c860:	6833      	ldr	r3, [r6, #0]
 801c862:	f043 0302 	orr.w	r3, r3, #2
 801c866:	6033      	str	r3, [r6, #0]
 801c868:	e894 0003 	ldmia.w	r4, {r0, r1}
 801c86c:	e885 0003 	stmia.w	r5, {r0, r1}
 801c870:	4628      	mov	r0, r5
 801c872:	b01c      	add	sp, #112	; 0x70
 801c874:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c878:	6833      	ldr	r3, [r6, #0]
 801c87a:	f043 0304 	orr.w	r3, r3, #4
 801c87e:	6033      	str	r3, [r6, #0]
 801c880:	e7e9      	b.n	801c856 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14do_get_weekdayES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x6e>

0801c882 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16do_get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801c882:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c886:	b0a6      	sub	sp, #152	; 0x98
 801c888:	e9dd 9630 	ldrd	r9, r6, [sp, #192]	; 0xc0
 801c88c:	ac0a      	add	r4, sp, #40	; 0x28
 801c88e:	4605      	mov	r5, r0
 801c890:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 801c894:	e884 000c 	stmia.w	r4, {r2, r3}
 801c898:	4688      	mov	r8, r1
 801c89a:	f7fc f91b 	bl	8018ad4 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale>
 801c89e:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 801c8a2:	4607      	mov	r7, r0
 801c8a4:	4651      	mov	r1, sl
 801c8a6:	f7fb fd9c 	bl	80183e2 <_ZNKSt11__timepunctIcE21_M_months_abbreviatedEPPKc>
 801c8aa:	4638      	mov	r0, r7
 801c8ac:	a91a      	add	r1, sp, #104	; 0x68
 801c8ae:	f7fb fd79 	bl	80183a4 <_ZNKSt11__timepunctIcE9_M_monthsEPPKc>
 801c8b2:	2300      	movs	r3, #0
 801c8b4:	930d      	str	r3, [sp, #52]	; 0x34
 801c8b6:	ab0d      	add	r3, sp, #52	; 0x34
 801c8b8:	e9cd 9305 	strd	r9, r3, [sp, #20]
 801c8bc:	230c      	movs	r3, #12
 801c8be:	e9cd a303 	strd	sl, r3, [sp, #12]
 801c8c2:	ab0c      	add	r3, sp, #48	; 0x30
 801c8c4:	9302      	str	r3, [sp, #8]
 801c8c6:	ab2e      	add	r3, sp, #184	; 0xb8
 801c8c8:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c8cc:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c8d0:	af08      	add	r7, sp, #32
 801c8d2:	e894 000c 	ldmia.w	r4, {r2, r3}
 801c8d6:	4641      	mov	r1, r8
 801c8d8:	4638      	mov	r0, r7
 801c8da:	f7fd fd07 	bl	801a2ec <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate>
 801c8de:	e897 0003 	ldmia.w	r7, {r0, r1}
 801c8e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c8e4:	e884 0003 	stmia.w	r4, {r0, r1}
 801c8e8:	b99b      	cbnz	r3, 801c912 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16do_get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x90>
 801c8ea:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801c8ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c8ee:	611a      	str	r2, [r3, #16]
 801c8f0:	a92e      	add	r1, sp, #184	; 0xb8
 801c8f2:	4620      	mov	r0, r4
 801c8f4:	f7f5 fb0f 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801c8f8:	b118      	cbz	r0, 801c902 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16do_get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x80>
 801c8fa:	6833      	ldr	r3, [r6, #0]
 801c8fc:	f043 0302 	orr.w	r3, r3, #2
 801c900:	6033      	str	r3, [r6, #0]
 801c902:	e894 0003 	ldmia.w	r4, {r0, r1}
 801c906:	e885 0003 	stmia.w	r5, {r0, r1}
 801c90a:	4628      	mov	r0, r5
 801c90c:	b026      	add	sp, #152	; 0x98
 801c90e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c912:	6833      	ldr	r3, [r6, #0]
 801c914:	f043 0304 	orr.w	r3, r3, #4
 801c918:	6033      	str	r3, [r6, #0]
 801c91a:	e7e9      	b.n	801c8f0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16do_get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x6e>

0801c91c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_timeES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801c91c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c920:	b08d      	sub	sp, #52	; 0x34
 801c922:	e9dd 9616 	ldrd	r9, r6, [sp, #88]	; 0x58
 801c926:	ac08      	add	r4, sp, #32
 801c928:	4605      	mov	r5, r0
 801c92a:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 801c92e:	e884 000c 	stmia.w	r4, {r2, r3}
 801c932:	4688      	mov	r8, r1
 801c934:	f7fc f8ce 	bl	8018ad4 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale>
 801c938:	a90a      	add	r1, sp, #40	; 0x28
 801c93a:	f7fb fd07 	bl	801834c <_ZNKSt11__timepunctIcE15_M_time_formatsEPPKc>
 801c93e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c940:	9305      	str	r3, [sp, #20]
 801c942:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c944:	f8cd 9008 	str.w	r9, [sp, #8]
 801c948:	e9cd 6303 	strd	r6, r3, [sp, #12]
 801c94c:	ab14      	add	r3, sp, #80	; 0x50
 801c94e:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c952:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c956:	af06      	add	r7, sp, #24
 801c958:	4641      	mov	r1, r8
 801c95a:	4638      	mov	r0, r7
 801c95c:	e894 000c 	ldmia.w	r4, {r2, r3}
 801c960:	f7fd fd74 	bl	801a44c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc>
 801c964:	e897 0003 	ldmia.w	r7, {r0, r1}
 801c968:	e884 0003 	stmia.w	r4, {r0, r1}
 801c96c:	a914      	add	r1, sp, #80	; 0x50
 801c96e:	4620      	mov	r0, r4
 801c970:	f7f5 fad1 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801c974:	b118      	cbz	r0, 801c97e <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_timeES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x62>
 801c976:	6833      	ldr	r3, [r6, #0]
 801c978:	f043 0302 	orr.w	r3, r3, #2
 801c97c:	6033      	str	r3, [r6, #0]
 801c97e:	e894 0003 	ldmia.w	r4, {r0, r1}
 801c982:	e885 0003 	stmia.w	r5, {r0, r1}
 801c986:	4628      	mov	r0, r5
 801c988:	b00d      	add	sp, #52	; 0x34
 801c98a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0801c98e <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_dateES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801c98e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c992:	b08d      	sub	sp, #52	; 0x34
 801c994:	e9dd 9616 	ldrd	r9, r6, [sp, #88]	; 0x58
 801c998:	ac08      	add	r4, sp, #32
 801c99a:	4605      	mov	r5, r0
 801c99c:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 801c9a0:	e884 000c 	stmia.w	r4, {r2, r3}
 801c9a4:	4688      	mov	r8, r1
 801c9a6:	f7fc f895 	bl	8018ad4 <_ZSt9use_facetISt11__timepunctIcEERKT_RKSt6locale>
 801c9aa:	a90a      	add	r1, sp, #40	; 0x28
 801c9ac:	f7fb fcc8 	bl	8018340 <_ZNKSt11__timepunctIcE15_M_date_formatsEPPKc>
 801c9b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c9b2:	9305      	str	r3, [sp, #20]
 801c9b4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c9b6:	f8cd 9008 	str.w	r9, [sp, #8]
 801c9ba:	e9cd 6303 	strd	r6, r3, [sp, #12]
 801c9be:	ab14      	add	r3, sp, #80	; 0x50
 801c9c0:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c9c4:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c9c8:	af06      	add	r7, sp, #24
 801c9ca:	4641      	mov	r1, r8
 801c9cc:	4638      	mov	r0, r7
 801c9ce:	e894 000c 	ldmia.w	r4, {r2, r3}
 801c9d2:	f7fd fd3b 	bl	801a44c <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc>
 801c9d6:	e897 0003 	ldmia.w	r7, {r0, r1}
 801c9da:	e884 0003 	stmia.w	r4, {r0, r1}
 801c9de:	a914      	add	r1, sp, #80	; 0x50
 801c9e0:	4620      	mov	r0, r4
 801c9e2:	f7f5 fa98 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801c9e6:	b118      	cbz	r0, 801c9f0 <_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE11do_get_dateES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x62>
 801c9e8:	6833      	ldr	r3, [r6, #0]
 801c9ea:	f043 0302 	orr.w	r3, r3, #2
 801c9ee:	6033      	str	r3, [r6, #0]
 801c9f0:	e894 0003 	ldmia.w	r4, {r0, r1}
 801c9f4:	e885 0003 	stmia.w	r5, {r0, r1}
 801c9f8:	4628      	mov	r0, r5
 801c9fa:	b00d      	add	sp, #52	; 0x34
 801c9fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0801ca00 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>:
 801ca00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca04:	ed2d 8b02 	vpush	{d8}
 801ca08:	b08f      	sub	sp, #60	; 0x3c
 801ca0a:	a908      	add	r1, sp, #32
 801ca0c:	e881 000c 	stmia.w	r1, {r2, r3}
 801ca10:	e9dd 381c 	ldrd	r3, r8, [sp, #112]	; 0x70
 801ca14:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 801ca18:	9006      	str	r0, [sp, #24]
 801ca1a:	4620      	mov	r0, r4
 801ca1c:	f7fb fdc6 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 801ca20:	9004      	str	r0, [sp, #16]
 801ca22:	4620      	mov	r0, r4
 801ca24:	f7fb ff62 	bl	80188ec <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb1EEEclERKSt6locale.isra.0>
 801ca28:	f100 0338 	add.w	r3, r0, #56	; 0x38
 801ca2c:	9307      	str	r3, [sp, #28]
 801ca2e:	6a03      	ldr	r3, [r0, #32]
 801ca30:	4604      	mov	r4, r0
 801ca32:	b11b      	cbz	r3, 801ca3c <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3c>
 801ca34:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801ca36:	3b00      	subs	r3, #0
 801ca38:	bf18      	it	ne
 801ca3a:	2301      	movne	r3, #1
 801ca3c:	9302      	str	r3, [sp, #8]
 801ca3e:	7c23      	ldrb	r3, [r4, #16]
 801ca40:	4d9d      	ldr	r5, [pc, #628]	; (801ccb8 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2b8>)
 801ca42:	950b      	str	r5, [sp, #44]	; 0x2c
 801ca44:	b11b      	cbz	r3, 801ca4e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x4e>
 801ca46:	2120      	movs	r1, #32
 801ca48:	a80b      	add	r0, sp, #44	; 0x2c
 801ca4a:	f7f3 fc22 	bl	8010292 <_ZNSs7reserveEj>
 801ca4e:	2120      	movs	r1, #32
 801ca50:	a80c      	add	r0, sp, #48	; 0x30
 801ca52:	950c      	str	r5, [sp, #48]	; 0x30
 801ca54:	f7f3 fc1d 	bl	8010292 <_ZNSs7reserveEj>
 801ca58:	f104 0339 	add.w	r3, r4, #57	; 0x39
 801ca5c:	2500      	movs	r5, #0
 801ca5e:	ee08 3a10 	vmov	s16, r3
 801ca62:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801ca64:	930d      	str	r3, [sp, #52]	; 0x34
 801ca66:	462f      	mov	r7, r5
 801ca68:	462e      	mov	r6, r5
 801ca6a:	9503      	str	r5, [sp, #12]
 801ca6c:	46a9      	mov	r9, r5
 801ca6e:	9501      	str	r5, [sp, #4]
 801ca70:	ab0d      	add	r3, sp, #52	; 0x34
 801ca72:	5d5b      	ldrb	r3, [r3, r5]
 801ca74:	2b04      	cmp	r3, #4
 801ca76:	d840      	bhi.n	801cafa <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfa>
 801ca78:	e8df f013 	tbh	[pc, r3, lsl #1]
 801ca7c:	0132015f 	.word	0x0132015f
 801ca80:	00a2002b 	.word	0x00a2002b
 801ca84:	00de      	.short	0x00de
 801ca86:	f1ba 0f00 	cmp.w	sl, #0
 801ca8a:	d1f1      	bne.n	801ca70 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x70>
 801ca8c:	f8d8 3000 	ldr.w	r3, [r8]
 801ca90:	f043 0304 	orr.w	r3, r3, #4
 801ca94:	f8c8 3000 	str.w	r3, [r8]
 801ca98:	ac08      	add	r4, sp, #32
 801ca9a:	a91a      	add	r1, sp, #104	; 0x68
 801ca9c:	4620      	mov	r0, r4
 801ca9e:	f7f5 fa3a 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801caa2:	b128      	cbz	r0, 801cab0 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xb0>
 801caa4:	f8d8 3000 	ldr.w	r3, [r8]
 801caa8:	f043 0302 	orr.w	r3, r3, #2
 801caac:	f8c8 3000 	str.w	r3, [r8]
 801cab0:	e894 0003 	ldmia.w	r4, {r0, r1}
 801cab4:	9b06      	ldr	r3, [sp, #24]
 801cab6:	e883 0003 	stmia.w	r3, {r0, r1}
 801caba:	a80c      	add	r0, sp, #48	; 0x30
 801cabc:	f7f3 faa2 	bl	8010004 <_ZNSsD1Ev>
 801cac0:	a80b      	add	r0, sp, #44	; 0x2c
 801cac2:	f7f3 fa9f 	bl	8010004 <_ZNSsD1Ev>
 801cac6:	9806      	ldr	r0, [sp, #24]
 801cac8:	b00f      	add	sp, #60	; 0x3c
 801caca:	ecbd 8b02 	vpop	{d8}
 801cace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cad2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cad4:	68db      	ldr	r3, [r3, #12]
 801cad6:	0598      	lsls	r0, r3, #22
 801cad8:	d41e      	bmi.n	801cb18 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801cada:	f1b9 0f01 	cmp.w	r9, #1
 801cade:	d81b      	bhi.n	801cb18 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801cae0:	b1d5      	cbz	r5, 801cb18 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801cae2:	2d01      	cmp	r5, #1
 801cae4:	d10c      	bne.n	801cb00 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x100>
 801cae6:	9b02      	ldr	r3, [sp, #8]
 801cae8:	b9b3      	cbnz	r3, 801cb18 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801caea:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
 801caee:	2b03      	cmp	r3, #3
 801caf0:	d012      	beq.n	801cb18 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801caf2:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
 801caf6:	2b01      	cmp	r3, #1
 801caf8:	d00e      	beq.n	801cb18 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801cafa:	f04f 0a01 	mov.w	sl, #1
 801cafe:	e02c      	b.n	801cb5a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cb00:	2d02      	cmp	r5, #2
 801cb02:	d1fa      	bne.n	801cafa <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfa>
 801cb04:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
 801cb08:	2b04      	cmp	r3, #4
 801cb0a:	d005      	beq.n	801cb18 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801cb0c:	9a02      	ldr	r2, [sp, #8]
 801cb0e:	2a00      	cmp	r2, #0
 801cb10:	d0f3      	beq.n	801cafa <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfa>
 801cb12:	2b03      	cmp	r3, #3
 801cb14:	f040 8114 	bne.w	801cd40 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x340>
 801cb18:	69a3      	ldr	r3, [r4, #24]
 801cb1a:	9305      	str	r3, [sp, #20]
 801cb1c:	f04f 0b00 	mov.w	fp, #0
 801cb20:	a91a      	add	r1, sp, #104	; 0x68
 801cb22:	a808      	add	r0, sp, #32
 801cb24:	f7f5 fa0a 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801cb28:	9b05      	ldr	r3, [sp, #20]
 801cb2a:	4682      	mov	sl, r0
 801cb2c:	2800      	cmp	r0, #0
 801cb2e:	d03e      	beq.n	801cbae <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1ae>
 801cb30:	459b      	cmp	fp, r3
 801cb32:	d012      	beq.n	801cb5a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cb34:	a808      	add	r0, sp, #32
 801cb36:	f7f5 f9df 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801cb3a:	6963      	ldr	r3, [r4, #20]
 801cb3c:	f813 300b 	ldrb.w	r3, [r3, fp]
 801cb40:	b2c0      	uxtb	r0, r0
 801cb42:	4283      	cmp	r3, r0
 801cb44:	d036      	beq.n	801cbb4 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1b4>
 801cb46:	f1bb 0f00 	cmp.w	fp, #0
 801cb4a:	f040 80fc 	bne.w	801cd46 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x346>
 801cb4e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cb50:	68db      	ldr	r3, [r3, #12]
 801cb52:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 801cb56:	f3c3 2a40 	ubfx	sl, r3, #9, #1
 801cb5a:	3501      	adds	r5, #1
 801cb5c:	2d04      	cmp	r5, #4
 801cb5e:	d192      	bne.n	801ca86 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x86>
 801cb60:	f1b9 0f01 	cmp.w	r9, #1
 801cb64:	f240 8142 	bls.w	801cdec <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ec>
 801cb68:	f1ba 0f00 	cmp.w	sl, #0
 801cb6c:	d08e      	beq.n	801ca8c <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8c>
 801cb6e:	9b01      	ldr	r3, [sp, #4]
 801cb70:	2b00      	cmp	r3, #0
 801cb72:	f000 80eb 	beq.w	801cd4c <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x34c>
 801cb76:	6a65      	ldr	r5, [r4, #36]	; 0x24
 801cb78:	f04f 0b01 	mov.w	fp, #1
 801cb7c:	a91a      	add	r1, sp, #104	; 0x68
 801cb7e:	a808      	add	r0, sp, #32
 801cb80:	f7f5 f9dc 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801cb84:	2800      	cmp	r0, #0
 801cb86:	f000 80e3 	beq.w	801cd50 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x350>
 801cb8a:	45d9      	cmp	r9, fp
 801cb8c:	f000 80e3 	beq.w	801cd56 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x356>
 801cb90:	a808      	add	r0, sp, #32
 801cb92:	f7f5 f9b1 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801cb96:	f815 300b 	ldrb.w	r3, [r5, fp]
 801cb9a:	b2c0      	uxtb	r0, r0
 801cb9c:	4283      	cmp	r3, r0
 801cb9e:	f47f af75 	bne.w	801ca8c <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8c>
 801cba2:	a808      	add	r0, sp, #32
 801cba4:	f7fc f97b 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801cba8:	f10b 0b01 	add.w	fp, fp, #1
 801cbac:	e7e6      	b.n	801cb7c <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x17c>
 801cbae:	459b      	cmp	fp, r3
 801cbb0:	d1c9      	bne.n	801cb46 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x146>
 801cbb2:	e7a2      	b.n	801cafa <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfa>
 801cbb4:	a808      	add	r0, sp, #32
 801cbb6:	f7fc f972 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801cbba:	f10b 0b01 	add.w	fp, fp, #1
 801cbbe:	e7af      	b.n	801cb20 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x120>
 801cbc0:	6a23      	ldr	r3, [r4, #32]
 801cbc2:	b9bb      	cbnz	r3, 801cbf4 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1f4>
 801cbc4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801cbc6:	b353      	cbz	r3, 801cc1e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21e>
 801cbc8:	a91a      	add	r1, sp, #104	; 0x68
 801cbca:	a808      	add	r0, sp, #32
 801cbcc:	f7f5 f9b6 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801cbd0:	4682      	mov	sl, r0
 801cbd2:	b320      	cbz	r0, 801cc1e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21e>
 801cbd4:	a808      	add	r0, sp, #32
 801cbd6:	f7f5 f98f 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801cbda:	6a62      	ldr	r2, [r4, #36]	; 0x24
 801cbdc:	7812      	ldrb	r2, [r2, #0]
 801cbde:	b2c0      	uxtb	r0, r0
 801cbe0:	4282      	cmp	r2, r0
 801cbe2:	d11c      	bne.n	801cc1e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21e>
 801cbe4:	a808      	add	r0, sp, #32
 801cbe6:	f8d4 9028 	ldr.w	r9, [r4, #40]	; 0x28
 801cbea:	f7fc f958 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801cbee:	f8cd a004 	str.w	sl, [sp, #4]
 801cbf2:	e7b2      	b.n	801cb5a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cbf4:	a91a      	add	r1, sp, #104	; 0x68
 801cbf6:	a808      	add	r0, sp, #32
 801cbf8:	f7f5 f9a0 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801cbfc:	4682      	mov	sl, r0
 801cbfe:	2800      	cmp	r0, #0
 801cc00:	d0e0      	beq.n	801cbc4 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1c4>
 801cc02:	a808      	add	r0, sp, #32
 801cc04:	f7f5 f978 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801cc08:	69e2      	ldr	r2, [r4, #28]
 801cc0a:	7812      	ldrb	r2, [r2, #0]
 801cc0c:	b2c0      	uxtb	r0, r0
 801cc0e:	4282      	cmp	r2, r0
 801cc10:	d1d8      	bne.n	801cbc4 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1c4>
 801cc12:	a808      	add	r0, sp, #32
 801cc14:	f8d4 9020 	ldr.w	r9, [r4, #32]
 801cc18:	f7fc f941 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801cc1c:	e79d      	b.n	801cb5a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cc1e:	6a23      	ldr	r3, [r4, #32]
 801cc20:	b91b      	cbnz	r3, 801cc2a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x22a>
 801cc22:	9b02      	ldr	r3, [sp, #8]
 801cc24:	f083 0a01 	eor.w	sl, r3, #1
 801cc28:	e797      	b.n	801cb5a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cc2a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801cc2c:	2b00      	cmp	r3, #0
 801cc2e:	d1f8      	bne.n	801cc22 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x222>
 801cc30:	2301      	movs	r3, #1
 801cc32:	9301      	str	r3, [sp, #4]
 801cc34:	469a      	mov	sl, r3
 801cc36:	e790      	b.n	801cb5a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cc38:	a91a      	add	r1, sp, #104	; 0x68
 801cc3a:	a808      	add	r0, sp, #32
 801cc3c:	f7f5 f97e 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801cc40:	4682      	mov	sl, r0
 801cc42:	2800      	cmp	r0, #0
 801cc44:	d049      	beq.n	801ccda <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2da>
 801cc46:	a808      	add	r0, sp, #32
 801cc48:	f7f5 f956 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801cc4c:	f10d 022b 	add.w	r2, sp, #43	; 0x2b
 801cc50:	fa5f fb80 	uxtb.w	fp, r0
 801cc54:	210a      	movs	r1, #10
 801cc56:	ee18 0a10 	vmov	r0, s16
 801cc5a:	f88d b02b 	strb.w	fp, [sp, #43]	; 0x2b
 801cc5e:	f7f3 f8a5 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 801cc62:	b180      	cbz	r0, 801cc86 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x286>
 801cc64:	9b07      	ldr	r3, [sp, #28]
 801cc66:	1ac0      	subs	r0, r0, r3
 801cc68:	4b14      	ldr	r3, [pc, #80]	; (801ccbc <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2bc>)
 801cc6a:	681b      	ldr	r3, [r3, #0]
 801cc6c:	5c19      	ldrb	r1, [r3, r0]
 801cc6e:	a80c      	add	r0, sp, #48	; 0x30
 801cc70:	f7f3 fbdd 	bl	801042e <_ZNSs9push_backEc>
 801cc74:	f106 0b01 	add.w	fp, r6, #1
 801cc78:	9e03      	ldr	r6, [sp, #12]
 801cc7a:	a808      	add	r0, sp, #32
 801cc7c:	f7fc f90f 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801cc80:	9603      	str	r6, [sp, #12]
 801cc82:	465e      	mov	r6, fp
 801cc84:	e7d8      	b.n	801cc38 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x238>
 801cc86:	7c62      	ldrb	r2, [r4, #17]
 801cc88:	455a      	cmp	r2, fp
 801cc8a:	d106      	bne.n	801cc9a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x29a>
 801cc8c:	b92f      	cbnz	r7, 801cc9a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x29a>
 801cc8e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801cc90:	2a00      	cmp	r2, #0
 801cc92:	dd16      	ble.n	801ccc2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2c2>
 801cc94:	4657      	mov	r7, sl
 801cc96:	4683      	mov	fp, r0
 801cc98:	e7ef      	b.n	801cc7a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801cc9a:	7c22      	ldrb	r2, [r4, #16]
 801cc9c:	b18a      	cbz	r2, 801ccc2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2c2>
 801cc9e:	7ca3      	ldrb	r3, [r4, #18]
 801cca0:	455b      	cmp	r3, fp
 801cca2:	d10d      	bne.n	801ccc0 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2c0>
 801cca4:	b9af      	cbnz	r7, 801ccd2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2d2>
 801cca6:	b1b6      	cbz	r6, 801ccd6 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2d6>
 801cca8:	b2f1      	uxtb	r1, r6
 801ccaa:	a80b      	add	r0, sp, #44	; 0x2c
 801ccac:	f7f3 fbbf 	bl	801042e <_ZNSs9push_backEc>
 801ccb0:	46bb      	mov	fp, r7
 801ccb2:	9e03      	ldr	r6, [sp, #12]
 801ccb4:	e7e1      	b.n	801cc7a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801ccb6:	bf00      	nop
 801ccb8:	20003bf0 	.word	0x20003bf0
 801ccbc:	2000003c 	.word	0x2000003c
 801ccc0:	4692      	mov	sl, r2
 801ccc2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ccc4:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801ccc8:	2a00      	cmp	r2, #0
 801ccca:	bf08      	it	eq
 801cccc:	f04f 0a00 	moveq.w	sl, #0
 801ccd0:	e743      	b.n	801cb5a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801ccd2:	46ba      	mov	sl, r7
 801ccd4:	e7f5      	b.n	801ccc2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2c2>
 801ccd6:	46b2      	mov	sl, r6
 801ccd8:	e7f3      	b.n	801ccc2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2c2>
 801ccda:	f04f 0a01 	mov.w	sl, #1
 801ccde:	e7f0      	b.n	801ccc2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2c2>
 801cce0:	a91a      	add	r1, sp, #104	; 0x68
 801cce2:	a808      	add	r0, sp, #32
 801cce4:	f7f5 f92a 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801cce8:	4682      	mov	sl, r0
 801ccea:	b9c8      	cbnz	r0, 801cd20 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x320>
 801ccec:	f04f 0a00 	mov.w	sl, #0
 801ccf0:	2d03      	cmp	r5, #3
 801ccf2:	f43f af32 	beq.w	801cb5a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801ccf6:	a91a      	add	r1, sp, #104	; 0x68
 801ccf8:	a808      	add	r0, sp, #32
 801ccfa:	f7f5 f91f 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801ccfe:	2800      	cmp	r0, #0
 801cd00:	f43f af2b 	beq.w	801cb5a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cd04:	a808      	add	r0, sp, #32
 801cd06:	f7f5 f8f7 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801cd0a:	9b04      	ldr	r3, [sp, #16]
 801cd0c:	b2c0      	uxtb	r0, r0
 801cd0e:	699a      	ldr	r2, [r3, #24]
 801cd10:	5c12      	ldrb	r2, [r2, r0]
 801cd12:	0712      	lsls	r2, r2, #28
 801cd14:	f57f af21 	bpl.w	801cb5a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cd18:	a808      	add	r0, sp, #32
 801cd1a:	f7fc f8c0 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801cd1e:	e7ea      	b.n	801ccf6 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2f6>
 801cd20:	a808      	add	r0, sp, #32
 801cd22:	f7f5 f8e9 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801cd26:	9b04      	ldr	r3, [sp, #16]
 801cd28:	b2c0      	uxtb	r0, r0
 801cd2a:	699a      	ldr	r2, [r3, #24]
 801cd2c:	5c12      	ldrb	r2, [r2, r0]
 801cd2e:	0711      	lsls	r1, r2, #28
 801cd30:	d5dc      	bpl.n	801ccec <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2ec>
 801cd32:	a808      	add	r0, sp, #32
 801cd34:	f7fc f8b3 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801cd38:	e7da      	b.n	801ccf0 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2f0>
 801cd3a:	f04f 0a01 	mov.w	sl, #1
 801cd3e:	e7d7      	b.n	801ccf0 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2f0>
 801cd40:	f8dd a008 	ldr.w	sl, [sp, #8]
 801cd44:	e709      	b.n	801cb5a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cd46:	f04f 0a00 	mov.w	sl, #0
 801cd4a:	e706      	b.n	801cb5a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cd4c:	69e5      	ldr	r5, [r4, #28]
 801cd4e:	e713      	b.n	801cb78 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x178>
 801cd50:	45d9      	cmp	r9, fp
 801cd52:	f47f ae9b 	bne.w	801ca8c <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8c>
 801cd56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cd58:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801cd5c:	2b01      	cmp	r3, #1
 801cd5e:	d914      	bls.n	801cd8a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x38a>
 801cd60:	2130      	movs	r1, #48	; 0x30
 801cd62:	2200      	movs	r2, #0
 801cd64:	eb0d 0001 	add.w	r0, sp, r1
 801cd68:	f7f3 f8b3 	bl	800fed2 <_ZNKSs17find_first_not_ofEcj>
 801cd6c:	4602      	mov	r2, r0
 801cd6e:	b160      	cbz	r0, 801cd8a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x38a>
 801cd70:	1c43      	adds	r3, r0, #1
 801cd72:	bf04      	itt	eq
 801cd74:	9b0c      	ldreq	r3, [sp, #48]	; 0x30
 801cd76:	f853 2c0c 	ldreq.w	r2, [r3, #-12]
 801cd7a:	f04f 0100 	mov.w	r1, #0
 801cd7e:	bf08      	it	eq
 801cd80:	f102 32ff 	addeq.w	r2, r2, #4294967295	; 0xffffffff
 801cd84:	a80c      	add	r0, sp, #48	; 0x30
 801cd86:	f7fb f979 	bl	801807c <_ZNSs5eraseEjj.isra.0>
 801cd8a:	9b01      	ldr	r3, [sp, #4]
 801cd8c:	b173      	cbz	r3, 801cdac <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ac>
 801cd8e:	a80c      	add	r0, sp, #48	; 0x30
 801cd90:	f7f3 f9ba 	bl	8010108 <_ZNSs7_M_leakEv>
 801cd94:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cd96:	781b      	ldrb	r3, [r3, #0]
 801cd98:	2b30      	cmp	r3, #48	; 0x30
 801cd9a:	d007      	beq.n	801cdac <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ac>
 801cd9c:	a80c      	add	r0, sp, #48	; 0x30
 801cd9e:	f7f3 f9bc 	bl	801011a <_ZNSs5beginEv>
 801cda2:	222d      	movs	r2, #45	; 0x2d
 801cda4:	4601      	mov	r1, r0
 801cda6:	a80c      	add	r0, sp, #48	; 0x30
 801cda8:	f7f3 f9f2 	bl	8010190 <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc>
 801cdac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cdae:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801cdb2:	b18b      	cbz	r3, 801cdd8 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3d8>
 801cdb4:	b1f7      	cbz	r7, 801cdf4 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3f4>
 801cdb6:	f89d 100c 	ldrb.w	r1, [sp, #12]
 801cdba:	a80b      	add	r0, sp, #44	; 0x2c
 801cdbc:	f7f3 fb37 	bl	801042e <_ZNSs9push_backEc>
 801cdc0:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 801cdc4:	aa0b      	add	r2, sp, #44	; 0x2c
 801cdc6:	f007 fef1 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 801cdca:	b928      	cbnz	r0, 801cdd8 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3d8>
 801cdcc:	f8d8 3000 	ldr.w	r3, [r8]
 801cdd0:	f043 0304 	orr.w	r3, r3, #4
 801cdd4:	f8c8 3000 	str.w	r3, [r8]
 801cdd8:	b11f      	cbz	r7, 801cde2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3e2>
 801cdda:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801cddc:	42b3      	cmp	r3, r6
 801cdde:	f47f ae55 	bne.w	801ca8c <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8c>
 801cde2:	981e      	ldr	r0, [sp, #120]	; 0x78
 801cde4:	a90c      	add	r1, sp, #48	; 0x30
 801cde6:	f7f3 f85f 	bl	800fea8 <_ZNSs4swapERSs>
 801cdea:	e655      	b.n	801ca98 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x98>
 801cdec:	f1ba 0f00 	cmp.w	sl, #0
 801cdf0:	d1b1      	bne.n	801cd56 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x356>
 801cdf2:	e64b      	b.n	801ca8c <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8c>
 801cdf4:	b2f1      	uxtb	r1, r6
 801cdf6:	e7e0      	b.n	801cdba <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ba>

0801cdf8 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>:
 801cdf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdfc:	ed2d 8b02 	vpush	{d8}
 801ce00:	b08f      	sub	sp, #60	; 0x3c
 801ce02:	a908      	add	r1, sp, #32
 801ce04:	e881 000c 	stmia.w	r1, {r2, r3}
 801ce08:	e9dd 381c 	ldrd	r3, r8, [sp, #112]	; 0x70
 801ce0c:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 801ce10:	9006      	str	r0, [sp, #24]
 801ce12:	4620      	mov	r0, r4
 801ce14:	f7fb fbca 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 801ce18:	9004      	str	r0, [sp, #16]
 801ce1a:	4620      	mov	r0, r4
 801ce1c:	f7fb fe36 	bl	8018a8c <_ZNKSt11__use_cacheISt18__moneypunct_cacheIcLb0EEEclERKSt6locale.isra.0>
 801ce20:	f100 0338 	add.w	r3, r0, #56	; 0x38
 801ce24:	9307      	str	r3, [sp, #28]
 801ce26:	6a03      	ldr	r3, [r0, #32]
 801ce28:	4604      	mov	r4, r0
 801ce2a:	b11b      	cbz	r3, 801ce34 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3c>
 801ce2c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801ce2e:	3b00      	subs	r3, #0
 801ce30:	bf18      	it	ne
 801ce32:	2301      	movne	r3, #1
 801ce34:	9302      	str	r3, [sp, #8]
 801ce36:	7c23      	ldrb	r3, [r4, #16]
 801ce38:	4d9d      	ldr	r5, [pc, #628]	; (801d0b0 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2b8>)
 801ce3a:	950b      	str	r5, [sp, #44]	; 0x2c
 801ce3c:	b11b      	cbz	r3, 801ce46 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x4e>
 801ce3e:	2120      	movs	r1, #32
 801ce40:	a80b      	add	r0, sp, #44	; 0x2c
 801ce42:	f7f3 fa26 	bl	8010292 <_ZNSs7reserveEj>
 801ce46:	2120      	movs	r1, #32
 801ce48:	a80c      	add	r0, sp, #48	; 0x30
 801ce4a:	950c      	str	r5, [sp, #48]	; 0x30
 801ce4c:	f7f3 fa21 	bl	8010292 <_ZNSs7reserveEj>
 801ce50:	f104 0339 	add.w	r3, r4, #57	; 0x39
 801ce54:	2500      	movs	r5, #0
 801ce56:	ee08 3a10 	vmov	s16, r3
 801ce5a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801ce5c:	930d      	str	r3, [sp, #52]	; 0x34
 801ce5e:	462f      	mov	r7, r5
 801ce60:	462e      	mov	r6, r5
 801ce62:	9503      	str	r5, [sp, #12]
 801ce64:	46a9      	mov	r9, r5
 801ce66:	9501      	str	r5, [sp, #4]
 801ce68:	ab0d      	add	r3, sp, #52	; 0x34
 801ce6a:	5d5b      	ldrb	r3, [r3, r5]
 801ce6c:	2b04      	cmp	r3, #4
 801ce6e:	d840      	bhi.n	801cef2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfa>
 801ce70:	e8df f013 	tbh	[pc, r3, lsl #1]
 801ce74:	0132015f 	.word	0x0132015f
 801ce78:	00a2002b 	.word	0x00a2002b
 801ce7c:	00de      	.short	0x00de
 801ce7e:	f1ba 0f00 	cmp.w	sl, #0
 801ce82:	d1f1      	bne.n	801ce68 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x70>
 801ce84:	f8d8 3000 	ldr.w	r3, [r8]
 801ce88:	f043 0304 	orr.w	r3, r3, #4
 801ce8c:	f8c8 3000 	str.w	r3, [r8]
 801ce90:	ac08      	add	r4, sp, #32
 801ce92:	a91a      	add	r1, sp, #104	; 0x68
 801ce94:	4620      	mov	r0, r4
 801ce96:	f7f5 f83e 	bl	8011f16 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE5equalERKS2_>
 801ce9a:	b128      	cbz	r0, 801cea8 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xb0>
 801ce9c:	f8d8 3000 	ldr.w	r3, [r8]
 801cea0:	f043 0302 	orr.w	r3, r3, #2
 801cea4:	f8c8 3000 	str.w	r3, [r8]
 801cea8:	e894 0003 	ldmia.w	r4, {r0, r1}
 801ceac:	9b06      	ldr	r3, [sp, #24]
 801ceae:	e883 0003 	stmia.w	r3, {r0, r1}
 801ceb2:	a80c      	add	r0, sp, #48	; 0x30
 801ceb4:	f7f3 f8a6 	bl	8010004 <_ZNSsD1Ev>
 801ceb8:	a80b      	add	r0, sp, #44	; 0x2c
 801ceba:	f7f3 f8a3 	bl	8010004 <_ZNSsD1Ev>
 801cebe:	9806      	ldr	r0, [sp, #24]
 801cec0:	b00f      	add	sp, #60	; 0x3c
 801cec2:	ecbd 8b02 	vpop	{d8}
 801cec6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ceca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cecc:	68db      	ldr	r3, [r3, #12]
 801cece:	0598      	lsls	r0, r3, #22
 801ced0:	d41e      	bmi.n	801cf10 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801ced2:	f1b9 0f01 	cmp.w	r9, #1
 801ced6:	d81b      	bhi.n	801cf10 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801ced8:	b1d5      	cbz	r5, 801cf10 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801ceda:	2d01      	cmp	r5, #1
 801cedc:	d10c      	bne.n	801cef8 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x100>
 801cede:	9b02      	ldr	r3, [sp, #8]
 801cee0:	b9b3      	cbnz	r3, 801cf10 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801cee2:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
 801cee6:	2b03      	cmp	r3, #3
 801cee8:	d012      	beq.n	801cf10 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801ceea:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
 801ceee:	2b01      	cmp	r3, #1
 801cef0:	d00e      	beq.n	801cf10 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801cef2:	f04f 0a01 	mov.w	sl, #1
 801cef6:	e02c      	b.n	801cf52 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cef8:	2d02      	cmp	r5, #2
 801cefa:	d1fa      	bne.n	801cef2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfa>
 801cefc:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
 801cf00:	2b04      	cmp	r3, #4
 801cf02:	d005      	beq.n	801cf10 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x118>
 801cf04:	9a02      	ldr	r2, [sp, #8]
 801cf06:	2a00      	cmp	r2, #0
 801cf08:	d0f3      	beq.n	801cef2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfa>
 801cf0a:	2b03      	cmp	r3, #3
 801cf0c:	f040 8114 	bne.w	801d138 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x340>
 801cf10:	69a3      	ldr	r3, [r4, #24]
 801cf12:	9305      	str	r3, [sp, #20]
 801cf14:	f04f 0b00 	mov.w	fp, #0
 801cf18:	a91a      	add	r1, sp, #104	; 0x68
 801cf1a:	a808      	add	r0, sp, #32
 801cf1c:	f7f5 f80e 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801cf20:	9b05      	ldr	r3, [sp, #20]
 801cf22:	4682      	mov	sl, r0
 801cf24:	2800      	cmp	r0, #0
 801cf26:	d03e      	beq.n	801cfa6 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1ae>
 801cf28:	459b      	cmp	fp, r3
 801cf2a:	d012      	beq.n	801cf52 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cf2c:	a808      	add	r0, sp, #32
 801cf2e:	f7f4 ffe3 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801cf32:	6963      	ldr	r3, [r4, #20]
 801cf34:	f813 300b 	ldrb.w	r3, [r3, fp]
 801cf38:	b2c0      	uxtb	r0, r0
 801cf3a:	4283      	cmp	r3, r0
 801cf3c:	d036      	beq.n	801cfac <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1b4>
 801cf3e:	f1bb 0f00 	cmp.w	fp, #0
 801cf42:	f040 80fc 	bne.w	801d13e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x346>
 801cf46:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cf48:	68db      	ldr	r3, [r3, #12]
 801cf4a:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 801cf4e:	f3c3 2a40 	ubfx	sl, r3, #9, #1
 801cf52:	3501      	adds	r5, #1
 801cf54:	2d04      	cmp	r5, #4
 801cf56:	d192      	bne.n	801ce7e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x86>
 801cf58:	f1b9 0f01 	cmp.w	r9, #1
 801cf5c:	f240 8142 	bls.w	801d1e4 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ec>
 801cf60:	f1ba 0f00 	cmp.w	sl, #0
 801cf64:	d08e      	beq.n	801ce84 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8c>
 801cf66:	9b01      	ldr	r3, [sp, #4]
 801cf68:	2b00      	cmp	r3, #0
 801cf6a:	f000 80eb 	beq.w	801d144 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x34c>
 801cf6e:	6a65      	ldr	r5, [r4, #36]	; 0x24
 801cf70:	f04f 0b01 	mov.w	fp, #1
 801cf74:	a91a      	add	r1, sp, #104	; 0x68
 801cf76:	a808      	add	r0, sp, #32
 801cf78:	f7f4 ffe0 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801cf7c:	2800      	cmp	r0, #0
 801cf7e:	f000 80e3 	beq.w	801d148 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x350>
 801cf82:	45d9      	cmp	r9, fp
 801cf84:	f000 80e3 	beq.w	801d14e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x356>
 801cf88:	a808      	add	r0, sp, #32
 801cf8a:	f7f4 ffb5 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801cf8e:	f815 300b 	ldrb.w	r3, [r5, fp]
 801cf92:	b2c0      	uxtb	r0, r0
 801cf94:	4283      	cmp	r3, r0
 801cf96:	f47f af75 	bne.w	801ce84 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8c>
 801cf9a:	a808      	add	r0, sp, #32
 801cf9c:	f7fb ff7f 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801cfa0:	f10b 0b01 	add.w	fp, fp, #1
 801cfa4:	e7e6      	b.n	801cf74 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x17c>
 801cfa6:	459b      	cmp	fp, r3
 801cfa8:	d1c9      	bne.n	801cf3e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x146>
 801cfaa:	e7a2      	b.n	801cef2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfa>
 801cfac:	a808      	add	r0, sp, #32
 801cfae:	f7fb ff76 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801cfb2:	f10b 0b01 	add.w	fp, fp, #1
 801cfb6:	e7af      	b.n	801cf18 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x120>
 801cfb8:	6a23      	ldr	r3, [r4, #32]
 801cfba:	b9bb      	cbnz	r3, 801cfec <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1f4>
 801cfbc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801cfbe:	b353      	cbz	r3, 801d016 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21e>
 801cfc0:	a91a      	add	r1, sp, #104	; 0x68
 801cfc2:	a808      	add	r0, sp, #32
 801cfc4:	f7f4 ffba 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801cfc8:	4682      	mov	sl, r0
 801cfca:	b320      	cbz	r0, 801d016 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21e>
 801cfcc:	a808      	add	r0, sp, #32
 801cfce:	f7f4 ff93 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801cfd2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 801cfd4:	7812      	ldrb	r2, [r2, #0]
 801cfd6:	b2c0      	uxtb	r0, r0
 801cfd8:	4282      	cmp	r2, r0
 801cfda:	d11c      	bne.n	801d016 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21e>
 801cfdc:	a808      	add	r0, sp, #32
 801cfde:	f8d4 9028 	ldr.w	r9, [r4, #40]	; 0x28
 801cfe2:	f7fb ff5c 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801cfe6:	f8cd a004 	str.w	sl, [sp, #4]
 801cfea:	e7b2      	b.n	801cf52 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801cfec:	a91a      	add	r1, sp, #104	; 0x68
 801cfee:	a808      	add	r0, sp, #32
 801cff0:	f7f4 ffa4 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801cff4:	4682      	mov	sl, r0
 801cff6:	2800      	cmp	r0, #0
 801cff8:	d0e0      	beq.n	801cfbc <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1c4>
 801cffa:	a808      	add	r0, sp, #32
 801cffc:	f7f4 ff7c 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801d000:	69e2      	ldr	r2, [r4, #28]
 801d002:	7812      	ldrb	r2, [r2, #0]
 801d004:	b2c0      	uxtb	r0, r0
 801d006:	4282      	cmp	r2, r0
 801d008:	d1d8      	bne.n	801cfbc <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1c4>
 801d00a:	a808      	add	r0, sp, #32
 801d00c:	f8d4 9020 	ldr.w	r9, [r4, #32]
 801d010:	f7fb ff45 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801d014:	e79d      	b.n	801cf52 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801d016:	6a23      	ldr	r3, [r4, #32]
 801d018:	b91b      	cbnz	r3, 801d022 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x22a>
 801d01a:	9b02      	ldr	r3, [sp, #8]
 801d01c:	f083 0a01 	eor.w	sl, r3, #1
 801d020:	e797      	b.n	801cf52 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801d022:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801d024:	2b00      	cmp	r3, #0
 801d026:	d1f8      	bne.n	801d01a <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x222>
 801d028:	2301      	movs	r3, #1
 801d02a:	9301      	str	r3, [sp, #4]
 801d02c:	469a      	mov	sl, r3
 801d02e:	e790      	b.n	801cf52 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801d030:	a91a      	add	r1, sp, #104	; 0x68
 801d032:	a808      	add	r0, sp, #32
 801d034:	f7f4 ff82 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801d038:	4682      	mov	sl, r0
 801d03a:	2800      	cmp	r0, #0
 801d03c:	d049      	beq.n	801d0d2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2da>
 801d03e:	a808      	add	r0, sp, #32
 801d040:	f7f4 ff5a 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801d044:	f10d 022b 	add.w	r2, sp, #43	; 0x2b
 801d048:	fa5f fb80 	uxtb.w	fp, r0
 801d04c:	210a      	movs	r1, #10
 801d04e:	ee18 0a10 	vmov	r0, s16
 801d052:	f88d b02b 	strb.w	fp, [sp, #43]	; 0x2b
 801d056:	f7f2 fea9 	bl	800fdac <_ZNSt11char_traitsIcE4findEPKcjRS1_>
 801d05a:	b180      	cbz	r0, 801d07e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x286>
 801d05c:	9b07      	ldr	r3, [sp, #28]
 801d05e:	1ac0      	subs	r0, r0, r3
 801d060:	4b14      	ldr	r3, [pc, #80]	; (801d0b4 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2bc>)
 801d062:	681b      	ldr	r3, [r3, #0]
 801d064:	5c19      	ldrb	r1, [r3, r0]
 801d066:	a80c      	add	r0, sp, #48	; 0x30
 801d068:	f7f3 f9e1 	bl	801042e <_ZNSs9push_backEc>
 801d06c:	f106 0b01 	add.w	fp, r6, #1
 801d070:	9e03      	ldr	r6, [sp, #12]
 801d072:	a808      	add	r0, sp, #32
 801d074:	f7fb ff13 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801d078:	9603      	str	r6, [sp, #12]
 801d07a:	465e      	mov	r6, fp
 801d07c:	e7d8      	b.n	801d030 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x238>
 801d07e:	7c62      	ldrb	r2, [r4, #17]
 801d080:	455a      	cmp	r2, fp
 801d082:	d106      	bne.n	801d092 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x29a>
 801d084:	b92f      	cbnz	r7, 801d092 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x29a>
 801d086:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801d088:	2a00      	cmp	r2, #0
 801d08a:	dd16      	ble.n	801d0ba <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2c2>
 801d08c:	4657      	mov	r7, sl
 801d08e:	4683      	mov	fp, r0
 801d090:	e7ef      	b.n	801d072 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801d092:	7c22      	ldrb	r2, [r4, #16]
 801d094:	b18a      	cbz	r2, 801d0ba <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2c2>
 801d096:	7ca3      	ldrb	r3, [r4, #18]
 801d098:	455b      	cmp	r3, fp
 801d09a:	d10d      	bne.n	801d0b8 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2c0>
 801d09c:	b9af      	cbnz	r7, 801d0ca <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2d2>
 801d09e:	b1b6      	cbz	r6, 801d0ce <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2d6>
 801d0a0:	b2f1      	uxtb	r1, r6
 801d0a2:	a80b      	add	r0, sp, #44	; 0x2c
 801d0a4:	f7f3 f9c3 	bl	801042e <_ZNSs9push_backEc>
 801d0a8:	46bb      	mov	fp, r7
 801d0aa:	9e03      	ldr	r6, [sp, #12]
 801d0ac:	e7e1      	b.n	801d072 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x27a>
 801d0ae:	bf00      	nop
 801d0b0:	20003bf0 	.word	0x20003bf0
 801d0b4:	2000003c 	.word	0x2000003c
 801d0b8:	4692      	mov	sl, r2
 801d0ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d0bc:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801d0c0:	2a00      	cmp	r2, #0
 801d0c2:	bf08      	it	eq
 801d0c4:	f04f 0a00 	moveq.w	sl, #0
 801d0c8:	e743      	b.n	801cf52 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801d0ca:	46ba      	mov	sl, r7
 801d0cc:	e7f5      	b.n	801d0ba <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2c2>
 801d0ce:	46b2      	mov	sl, r6
 801d0d0:	e7f3      	b.n	801d0ba <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2c2>
 801d0d2:	f04f 0a01 	mov.w	sl, #1
 801d0d6:	e7f0      	b.n	801d0ba <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2c2>
 801d0d8:	a91a      	add	r1, sp, #104	; 0x68
 801d0da:	a808      	add	r0, sp, #32
 801d0dc:	f7f4 ff2e 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801d0e0:	4682      	mov	sl, r0
 801d0e2:	b9c8      	cbnz	r0, 801d118 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x320>
 801d0e4:	f04f 0a00 	mov.w	sl, #0
 801d0e8:	2d03      	cmp	r5, #3
 801d0ea:	f43f af32 	beq.w	801cf52 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801d0ee:	a91a      	add	r1, sp, #104	; 0x68
 801d0f0:	a808      	add	r0, sp, #32
 801d0f2:	f7f4 ff23 	bl	8011f3c <_ZStneIcSt11char_traitsIcEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 801d0f6:	2800      	cmp	r0, #0
 801d0f8:	f43f af2b 	beq.w	801cf52 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801d0fc:	a808      	add	r0, sp, #32
 801d0fe:	f7f4 fefb 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801d102:	9b04      	ldr	r3, [sp, #16]
 801d104:	b2c0      	uxtb	r0, r0
 801d106:	699a      	ldr	r2, [r3, #24]
 801d108:	5c12      	ldrb	r2, [r2, r0]
 801d10a:	0712      	lsls	r2, r2, #28
 801d10c:	f57f af21 	bpl.w	801cf52 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801d110:	a808      	add	r0, sp, #32
 801d112:	f7fb fec4 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801d116:	e7ea      	b.n	801d0ee <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2f6>
 801d118:	a808      	add	r0, sp, #32
 801d11a:	f7f4 feed 	bl	8011ef8 <_ZNKSt19istreambuf_iteratorIcSt11char_traitsIcEE6_M_getEv>
 801d11e:	9b04      	ldr	r3, [sp, #16]
 801d120:	b2c0      	uxtb	r0, r0
 801d122:	699a      	ldr	r2, [r3, #24]
 801d124:	5c12      	ldrb	r2, [r2, r0]
 801d126:	0711      	lsls	r1, r2, #28
 801d128:	d5dc      	bpl.n	801d0e4 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2ec>
 801d12a:	a808      	add	r0, sp, #32
 801d12c:	f7fb feb7 	bl	8018e9e <_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv>
 801d130:	e7da      	b.n	801d0e8 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2f0>
 801d132:	f04f 0a01 	mov.w	sl, #1
 801d136:	e7d7      	b.n	801d0e8 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2f0>
 801d138:	f8dd a008 	ldr.w	sl, [sp, #8]
 801d13c:	e709      	b.n	801cf52 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801d13e:	f04f 0a00 	mov.w	sl, #0
 801d142:	e706      	b.n	801cf52 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15a>
 801d144:	69e5      	ldr	r5, [r4, #28]
 801d146:	e713      	b.n	801cf70 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x178>
 801d148:	45d9      	cmp	r9, fp
 801d14a:	f47f ae9b 	bne.w	801ce84 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8c>
 801d14e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d150:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801d154:	2b01      	cmp	r3, #1
 801d156:	d914      	bls.n	801d182 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x38a>
 801d158:	2130      	movs	r1, #48	; 0x30
 801d15a:	2200      	movs	r2, #0
 801d15c:	eb0d 0001 	add.w	r0, sp, r1
 801d160:	f7f2 feb7 	bl	800fed2 <_ZNKSs17find_first_not_ofEcj>
 801d164:	4602      	mov	r2, r0
 801d166:	b160      	cbz	r0, 801d182 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x38a>
 801d168:	1c43      	adds	r3, r0, #1
 801d16a:	bf04      	itt	eq
 801d16c:	9b0c      	ldreq	r3, [sp, #48]	; 0x30
 801d16e:	f853 2c0c 	ldreq.w	r2, [r3, #-12]
 801d172:	f04f 0100 	mov.w	r1, #0
 801d176:	bf08      	it	eq
 801d178:	f102 32ff 	addeq.w	r2, r2, #4294967295	; 0xffffffff
 801d17c:	a80c      	add	r0, sp, #48	; 0x30
 801d17e:	f7fa ff7d 	bl	801807c <_ZNSs5eraseEjj.isra.0>
 801d182:	9b01      	ldr	r3, [sp, #4]
 801d184:	b173      	cbz	r3, 801d1a4 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ac>
 801d186:	a80c      	add	r0, sp, #48	; 0x30
 801d188:	f7f2 ffbe 	bl	8010108 <_ZNSs7_M_leakEv>
 801d18c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d18e:	781b      	ldrb	r3, [r3, #0]
 801d190:	2b30      	cmp	r3, #48	; 0x30
 801d192:	d007      	beq.n	801d1a4 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ac>
 801d194:	a80c      	add	r0, sp, #48	; 0x30
 801d196:	f7f2 ffc0 	bl	801011a <_ZNSs5beginEv>
 801d19a:	222d      	movs	r2, #45	; 0x2d
 801d19c:	4601      	mov	r1, r0
 801d19e:	a80c      	add	r0, sp, #48	; 0x30
 801d1a0:	f7f2 fff6 	bl	8010190 <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc>
 801d1a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d1a6:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801d1aa:	b18b      	cbz	r3, 801d1d0 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3d8>
 801d1ac:	b1f7      	cbz	r7, 801d1ec <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3f4>
 801d1ae:	f89d 100c 	ldrb.w	r1, [sp, #12]
 801d1b2:	a80b      	add	r0, sp, #44	; 0x2c
 801d1b4:	f7f3 f93b 	bl	801042e <_ZNSs9push_backEc>
 801d1b8:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 801d1bc:	aa0b      	add	r2, sp, #44	; 0x2c
 801d1be:	f007 fcf5 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 801d1c2:	b928      	cbnz	r0, 801d1d0 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3d8>
 801d1c4:	f8d8 3000 	ldr.w	r3, [r8]
 801d1c8:	f043 0304 	orr.w	r3, r3, #4
 801d1cc:	f8c8 3000 	str.w	r3, [r8]
 801d1d0:	b11f      	cbz	r7, 801d1da <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3e2>
 801d1d2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801d1d4:	42b3      	cmp	r3, r6
 801d1d6:	f47f ae55 	bne.w	801ce84 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8c>
 801d1da:	981e      	ldr	r0, [sp, #120]	; 0x78
 801d1dc:	a90c      	add	r1, sp, #48	; 0x30
 801d1de:	f7f2 fe63 	bl	800fea8 <_ZNSs4swapERSs>
 801d1e2:	e655      	b.n	801ce90 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x98>
 801d1e4:	f1ba 0f00 	cmp.w	sl, #0
 801d1e8:	d1b1      	bne.n	801d14e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x356>
 801d1ea:	e64b      	b.n	801ce84 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8c>
 801d1ec:	b2f1      	uxtb	r1, r6
 801d1ee:	e7e0      	b.n	801d1b2 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ba>

0801d1f0 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRe>:
 801d1f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d1f4:	b08c      	sub	sp, #48	; 0x30
 801d1f6:	ac08      	add	r4, sp, #32
 801d1f8:	e884 000c 	stmia.w	r4, {r2, r3}
 801d1fc:	e9dd 3815 	ldrd	r3, r8, [sp, #84]	; 0x54
 801d200:	af0a      	add	r7, sp, #40	; 0x28
 801d202:	e9cd 8703 	strd	r8, r7, [sp, #12]
 801d206:	9302      	str	r3, [sp, #8]
 801d208:	468c      	mov	ip, r1
 801d20a:	ab12      	add	r3, sp, #72	; 0x48
 801d20c:	4918      	ldr	r1, [pc, #96]	; (801d270 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRe+0x80>)
 801d20e:	910a      	str	r1, [sp, #40]	; 0x28
 801d210:	4606      	mov	r6, r0
 801d212:	e893 0003 	ldmia.w	r3, {r0, r1}
 801d216:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 801d21a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d21e:	ad06      	add	r5, sp, #24
 801d220:	b1f2      	cbz	r2, 801d260 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRe+0x70>
 801d222:	e894 000c 	ldmia.w	r4, {r2, r3}
 801d226:	4661      	mov	r1, ip
 801d228:	4628      	mov	r0, r5
 801d22a:	f7ff fbe9 	bl	801ca00 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 801d22e:	e895 0003 	ldmia.w	r5, {r0, r1}
 801d232:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d234:	e884 0003 	stmia.w	r4, {r0, r1}
 801d238:	f7ef f850 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 801d23c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801d23e:	900b      	str	r0, [sp, #44]	; 0x2c
 801d240:	ab0b      	add	r3, sp, #44	; 0x2c
 801d242:	4642      	mov	r2, r8
 801d244:	4628      	mov	r0, r5
 801d246:	f007 fa3f 	bl	80246c8 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi>
 801d24a:	e894 0003 	ldmia.w	r4, {r0, r1}
 801d24e:	e886 0003 	stmia.w	r6, {r0, r1}
 801d252:	4638      	mov	r0, r7
 801d254:	f7f2 fed6 	bl	8010004 <_ZNSsD1Ev>
 801d258:	4630      	mov	r0, r6
 801d25a:	b00c      	add	sp, #48	; 0x30
 801d25c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d260:	e894 000c 	ldmia.w	r4, {r2, r3}
 801d264:	4661      	mov	r1, ip
 801d266:	4628      	mov	r0, r5
 801d268:	f7ff fdc6 	bl	801cdf8 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 801d26c:	e7df      	b.n	801d22e <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRe+0x3e>
 801d26e:	bf00      	nop
 801d270:	20003bf0 	.word	0x20003bf0

0801d274 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSs>:
 801d274:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d278:	b08f      	sub	sp, #60	; 0x3c
 801d27a:	ac0a      	add	r4, sp, #40	; 0x28
 801d27c:	e884 000c 	stmia.w	r4, {r2, r3}
 801d280:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d282:	f89d b068 	ldrb.w	fp, [sp, #104]	; 0x68
 801d286:	f8dd 9074 	ldr.w	r9, [sp, #116]	; 0x74
 801d28a:	4606      	mov	r6, r0
 801d28c:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 801d290:	468a      	mov	sl, r1
 801d292:	f7fb f98b 	bl	80185ac <_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale>
 801d296:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d298:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801d29a:	491f      	ldr	r1, [pc, #124]	; (801d318 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSs+0xa4>)
 801d29c:	910d      	str	r1, [sp, #52]	; 0x34
 801d29e:	e9cd 3202 	strd	r3, r2, [sp, #8]
 801d2a2:	af0d      	add	r7, sp, #52	; 0x34
 801d2a4:	9704      	str	r7, [sp, #16]
 801d2a6:	ab18      	add	r3, sp, #96	; 0x60
 801d2a8:	4680      	mov	r8, r0
 801d2aa:	e893 0003 	ldmia.w	r3, {r0, r1}
 801d2ae:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d2b2:	ad08      	add	r5, sp, #32
 801d2b4:	e894 000c 	ldmia.w	r4, {r2, r3}
 801d2b8:	4651      	mov	r1, sl
 801d2ba:	4628      	mov	r0, r5
 801d2bc:	f1bb 0f00 	cmp.w	fp, #0
 801d2c0:	d027      	beq.n	801d312 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSs+0x9e>
 801d2c2:	f7ff fb9d 	bl	801ca00 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 801d2c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d2c8:	e895 0003 	ldmia.w	r5, {r0, r1}
 801d2cc:	f853 5c0c 	ldr.w	r5, [r3, #-12]
 801d2d0:	e884 0003 	stmia.w	r4, {r0, r1}
 801d2d4:	b195      	cbz	r5, 801d2fc <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSs+0x88>
 801d2d6:	4629      	mov	r1, r5
 801d2d8:	4648      	mov	r0, r9
 801d2da:	f7f3 f8a3 	bl	8010424 <_ZNSs6resizeEj>
 801d2de:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 801d2e2:	4648      	mov	r0, r9
 801d2e4:	eb0a 0205 	add.w	r2, sl, r5
 801d2e8:	9207      	str	r2, [sp, #28]
 801d2ea:	f7f2 ff0d 	bl	8010108 <_ZNSs7_M_leakEv>
 801d2ee:	f8d9 3000 	ldr.w	r3, [r9]
 801d2f2:	9a07      	ldr	r2, [sp, #28]
 801d2f4:	4651      	mov	r1, sl
 801d2f6:	4640      	mov	r0, r8
 801d2f8:	f7f4 f934 	bl	8011564 <_ZNKSt5ctypeIcE5widenEPKcS2_Pc>
 801d2fc:	e894 0003 	ldmia.w	r4, {r0, r1}
 801d300:	e886 0003 	stmia.w	r6, {r0, r1}
 801d304:	4638      	mov	r0, r7
 801d306:	f7f2 fe7d 	bl	8010004 <_ZNSsD1Ev>
 801d30a:	4630      	mov	r0, r6
 801d30c:	b00f      	add	sp, #60	; 0x3c
 801d30e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d312:	f7ff fd71 	bl	801cdf8 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 801d316:	e7d6      	b.n	801d2c6 <_ZNKSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSs+0x52>
 801d318:	20003bf0 	.word	0x20003bf0

0801d31c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj>:
 801d31c:	4b24      	ldr	r3, [pc, #144]	; (801d3b0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x94>)
 801d31e:	681a      	ldr	r2, [r3, #0]
 801d320:	07d0      	lsls	r0, r2, #31
 801d322:	bf5c      	itt	pl
 801d324:	2201      	movpl	r2, #1
 801d326:	601a      	strpl	r2, [r3, #0]
 801d328:	4b22      	ldr	r3, [pc, #136]	; (801d3b4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x98>)
 801d32a:	681a      	ldr	r2, [r3, #0]
 801d32c:	07d1      	lsls	r1, r2, #31
 801d32e:	bf5c      	itt	pl
 801d330:	2201      	movpl	r2, #1
 801d332:	601a      	strpl	r2, [r3, #0]
 801d334:	4b20      	ldr	r3, [pc, #128]	; (801d3b8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x9c>)
 801d336:	681a      	ldr	r2, [r3, #0]
 801d338:	07d2      	lsls	r2, r2, #31
 801d33a:	bf5c      	itt	pl
 801d33c:	2201      	movpl	r2, #1
 801d33e:	601a      	strpl	r2, [r3, #0]
 801d340:	4b1e      	ldr	r3, [pc, #120]	; (801d3bc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa0>)
 801d342:	681a      	ldr	r2, [r3, #0]
 801d344:	07d0      	lsls	r0, r2, #31
 801d346:	bf5c      	itt	pl
 801d348:	2201      	movpl	r2, #1
 801d34a:	601a      	strpl	r2, [r3, #0]
 801d34c:	4b1c      	ldr	r3, [pc, #112]	; (801d3c0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa4>)
 801d34e:	681a      	ldr	r2, [r3, #0]
 801d350:	07d1      	lsls	r1, r2, #31
 801d352:	bf5c      	itt	pl
 801d354:	2201      	movpl	r2, #1
 801d356:	601a      	strpl	r2, [r3, #0]
 801d358:	4b1a      	ldr	r3, [pc, #104]	; (801d3c4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xa8>)
 801d35a:	681a      	ldr	r2, [r3, #0]
 801d35c:	07d2      	lsls	r2, r2, #31
 801d35e:	bf5c      	itt	pl
 801d360:	2201      	movpl	r2, #1
 801d362:	601a      	strpl	r2, [r3, #0]
 801d364:	4b18      	ldr	r3, [pc, #96]	; (801d3c8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xac>)
 801d366:	681a      	ldr	r2, [r3, #0]
 801d368:	07d0      	lsls	r0, r2, #31
 801d36a:	bf5c      	itt	pl
 801d36c:	2201      	movpl	r2, #1
 801d36e:	601a      	strpl	r2, [r3, #0]
 801d370:	4b16      	ldr	r3, [pc, #88]	; (801d3cc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb0>)
 801d372:	681a      	ldr	r2, [r3, #0]
 801d374:	07d1      	lsls	r1, r2, #31
 801d376:	bf5c      	itt	pl
 801d378:	2201      	movpl	r2, #1
 801d37a:	601a      	strpl	r2, [r3, #0]
 801d37c:	4b14      	ldr	r3, [pc, #80]	; (801d3d0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb4>)
 801d37e:	681a      	ldr	r2, [r3, #0]
 801d380:	07d2      	lsls	r2, r2, #31
 801d382:	bf5c      	itt	pl
 801d384:	2201      	movpl	r2, #1
 801d386:	601a      	strpl	r2, [r3, #0]
 801d388:	4b12      	ldr	r3, [pc, #72]	; (801d3d4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xb8>)
 801d38a:	681a      	ldr	r2, [r3, #0]
 801d38c:	07d0      	lsls	r0, r2, #31
 801d38e:	bf5c      	itt	pl
 801d390:	2201      	movpl	r2, #1
 801d392:	601a      	strpl	r2, [r3, #0]
 801d394:	4b10      	ldr	r3, [pc, #64]	; (801d3d8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xbc>)
 801d396:	681a      	ldr	r2, [r3, #0]
 801d398:	07d1      	lsls	r1, r2, #31
 801d39a:	bf5c      	itt	pl
 801d39c:	2201      	movpl	r2, #1
 801d39e:	601a      	strpl	r2, [r3, #0]
 801d3a0:	4b0e      	ldr	r3, [pc, #56]	; (801d3dc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xc0>)
 801d3a2:	681a      	ldr	r2, [r3, #0]
 801d3a4:	07d2      	lsls	r2, r2, #31
 801d3a6:	bf5c      	itt	pl
 801d3a8:	2201      	movpl	r2, #1
 801d3aa:	601a      	strpl	r2, [r3, #0]
 801d3ac:	4770      	bx	lr
 801d3ae:	bf00      	nop
 801d3b0:	20003cbc 	.word	0x20003cbc
 801d3b4:	20003cb8 	.word	0x20003cb8
 801d3b8:	20003cb4 	.word	0x20003cb4
 801d3bc:	20003cb0 	.word	0x20003cb0
 801d3c0:	20003cac 	.word	0x20003cac
 801d3c4:	20003ca8 	.word	0x20003ca8
 801d3c8:	20003ca4 	.word	0x20003ca4
 801d3cc:	20003ca0 	.word	0x20003ca0
 801d3d0:	20003c9c 	.word	0x20003c9c
 801d3d4:	20003c98 	.word	0x20003c98
 801d3d8:	20003c94 	.word	0x20003c94
 801d3dc:	20003c90 	.word	0x20003c90

0801d3e0 <_ZNSoD1Ev>:
 801d3e0:	b510      	push	{r4, lr}
 801d3e2:	4b05      	ldr	r3, [pc, #20]	; (801d3f8 <_ZNSoD1Ev+0x18>)
 801d3e4:	6003      	str	r3, [r0, #0]
 801d3e6:	3314      	adds	r3, #20
 801d3e8:	4604      	mov	r4, r0
 801d3ea:	f840 3f04 	str.w	r3, [r0, #4]!
 801d3ee:	f7fa fa43 	bl	8017878 <_ZNSt9basic_iosIcSt11char_traitsIcEED1Ev>
 801d3f2:	4620      	mov	r0, r4
 801d3f4:	bd10      	pop	{r4, pc}
 801d3f6:	bf00      	nop
 801d3f8:	08030e94 	.word	0x08030e94

0801d3fc <_ZTv0_n12_NSoD1Ev>:
 801d3fc:	f8d0 c000 	ldr.w	ip, [r0]
 801d400:	f1ac 0c0c 	sub.w	ip, ip, #12
 801d404:	f8dc c000 	ldr.w	ip, [ip]
 801d408:	4460      	add	r0, ip
 801d40a:	e7e9      	b.n	801d3e0 <_ZNSoD1Ev>

0801d40c <_ZNSt13basic_ostreamIwSt11char_traitsIwEED1Ev>:
 801d40c:	b510      	push	{r4, lr}
 801d40e:	4b05      	ldr	r3, [pc, #20]	; (801d424 <_ZNSt13basic_ostreamIwSt11char_traitsIwEED1Ev+0x18>)
 801d410:	6003      	str	r3, [r0, #0]
 801d412:	3314      	adds	r3, #20
 801d414:	4604      	mov	r4, r0
 801d416:	f840 3f04 	str.w	r3, [r0, #4]!
 801d41a:	f7fa fa37 	bl	801788c <_ZNSt9basic_iosIwSt11char_traitsIwEED1Ev>
 801d41e:	4620      	mov	r0, r4
 801d420:	bd10      	pop	{r4, pc}
 801d422:	bf00      	nop
 801d424:	08030ec4 	.word	0x08030ec4

0801d428 <_ZTv0_n12_NSt13basic_ostreamIwSt11char_traitsIwEED1Ev>:
 801d428:	f8d0 c000 	ldr.w	ip, [r0]
 801d42c:	f1ac 0c0c 	sub.w	ip, ip, #12
 801d430:	f8dc c000 	ldr.w	ip, [ip]
 801d434:	4460      	add	r0, ip
 801d436:	e7e9      	b.n	801d40c <_ZNSt13basic_ostreamIwSt11char_traitsIwEED1Ev>

0801d438 <_ZNSoD0Ev>:
 801d438:	b510      	push	{r4, lr}
 801d43a:	4604      	mov	r4, r0
 801d43c:	f7ff ffd0 	bl	801d3e0 <_ZNSoD1Ev>
 801d440:	4620      	mov	r0, r4
 801d442:	f006 fd43 	bl	8023ecc <_ZdlPv>
 801d446:	4620      	mov	r0, r4
 801d448:	bd10      	pop	{r4, pc}

0801d44a <_ZTv0_n12_NSoD0Ev>:
 801d44a:	f8d0 c000 	ldr.w	ip, [r0]
 801d44e:	f1ac 0c0c 	sub.w	ip, ip, #12
 801d452:	f8dc c000 	ldr.w	ip, [ip]
 801d456:	4460      	add	r0, ip
 801d458:	e7ee      	b.n	801d438 <_ZNSoD0Ev>

0801d45a <_ZNSt13basic_ostreamIwSt11char_traitsIwEED0Ev>:
 801d45a:	b510      	push	{r4, lr}
 801d45c:	4604      	mov	r4, r0
 801d45e:	f7ff ffd5 	bl	801d40c <_ZNSt13basic_ostreamIwSt11char_traitsIwEED1Ev>
 801d462:	4620      	mov	r0, r4
 801d464:	f006 fd32 	bl	8023ecc <_ZdlPv>
 801d468:	4620      	mov	r0, r4
 801d46a:	bd10      	pop	{r4, pc}

0801d46c <_ZTv0_n12_NSt13basic_ostreamIwSt11char_traitsIwEED0Ev>:
 801d46c:	f8d0 c000 	ldr.w	ip, [r0]
 801d470:	f1ac 0c0c 	sub.w	ip, ip, #12
 801d474:	f8dc c000 	ldr.w	ip, [ip]
 801d478:	4460      	add	r0, ip
 801d47a:	e7ee      	b.n	801d45a <_ZNSt13basic_ostreamIwSt11char_traitsIwEED0Ev>

0801d47c <_ZNSoD2Ev>:
 801d47c:	680a      	ldr	r2, [r1, #0]
 801d47e:	6002      	str	r2, [r0, #0]
 801d480:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801d484:	6849      	ldr	r1, [r1, #4]
 801d486:	5081      	str	r1, [r0, r2]
 801d488:	4770      	bx	lr

0801d48a <_ZNSo5flushEv>:
 801d48a:	6803      	ldr	r3, [r0, #0]
 801d48c:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801d490:	4403      	add	r3, r0
 801d492:	b510      	push	{r4, lr}
 801d494:	4604      	mov	r4, r0
 801d496:	6f98      	ldr	r0, [r3, #120]	; 0x78
 801d498:	b150      	cbz	r0, 801d4b0 <_ZNSo5flushEv+0x26>
 801d49a:	f000 f9fb 	bl	801d894 <_ZNSt15basic_streambufIcSt11char_traitsIcEE7pubsyncEv>
 801d49e:	3001      	adds	r0, #1
 801d4a0:	d106      	bne.n	801d4b0 <_ZNSo5flushEv+0x26>
 801d4a2:	6823      	ldr	r3, [r4, #0]
 801d4a4:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801d4a8:	2101      	movs	r1, #1
 801d4aa:	4420      	add	r0, r4
 801d4ac:	f7fa fa1a 	bl	80178e4 <_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate>
 801d4b0:	4620      	mov	r0, r4
 801d4b2:	bd10      	pop	{r4, pc}

0801d4b4 <_ZNSt13basic_ostreamIwSt11char_traitsIwEED2Ev>:
 801d4b4:	680a      	ldr	r2, [r1, #0]
 801d4b6:	6002      	str	r2, [r0, #0]
 801d4b8:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801d4bc:	6849      	ldr	r1, [r1, #4]
 801d4be:	5081      	str	r1, [r0, r2]
 801d4c0:	4770      	bx	lr

0801d4c2 <_ZNSt13basic_ostreamIwSt11char_traitsIwEE5flushEv>:
 801d4c2:	6803      	ldr	r3, [r0, #0]
 801d4c4:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801d4c8:	4403      	add	r3, r0
 801d4ca:	b510      	push	{r4, lr}
 801d4cc:	4604      	mov	r4, r0
 801d4ce:	6fd8      	ldr	r0, [r3, #124]	; 0x7c
 801d4d0:	b150      	cbz	r0, 801d4e8 <_ZNSt13basic_ostreamIwSt11char_traitsIwEE5flushEv+0x26>
 801d4d2:	f000 f9ee 	bl	801d8b2 <_ZNSt15basic_streambufIwSt11char_traitsIwEE7pubsyncEv>
 801d4d6:	3001      	adds	r0, #1
 801d4d8:	d106      	bne.n	801d4e8 <_ZNSt13basic_ostreamIwSt11char_traitsIwEE5flushEv+0x26>
 801d4da:	6823      	ldr	r3, [r4, #0]
 801d4dc:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801d4e0:	2101      	movs	r1, #1
 801d4e2:	4420      	add	r0, r4
 801d4e4:	f7fa fa48 	bl	8017978 <_ZNSt9basic_iosIwSt11char_traitsIwEE8setstateESt12_Ios_Iostate>
 801d4e8:	4620      	mov	r0, r4
 801d4ea:	bd10      	pop	{r4, pc}

0801d4ec <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>:
 801d4ec:	b580      	push	{r7, lr}
 801d4ee:	b09c      	sub	sp, #112	; 0x70
 801d4f0:	4606      	mov	r6, r0
 801d4f2:	af00      	add	r7, sp, #0
 801d4f4:	460c      	mov	r4, r1
 801d4f6:	1ba4      	subs	r4, r4, r6
 801d4f8:	490e      	ldr	r1, [pc, #56]	; (801d534 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_+0x48>)
 801d4fa:	2269      	movs	r2, #105	; 0x69
 801d4fc:	1d38      	adds	r0, r7, #4
 801d4fe:	f008 fcff 	bl	8025f00 <memcpy>
 801d502:	f104 0370 	add.w	r3, r4, #112	; 0x70
 801d506:	f023 0307 	bic.w	r3, r3, #7
 801d50a:	ebad 0d03 	sub.w	sp, sp, r3
 801d50e:	466d      	mov	r5, sp
 801d510:	2268      	movs	r2, #104	; 0x68
 801d512:	1d39      	adds	r1, r7, #4
 801d514:	4628      	mov	r0, r5
 801d516:	f008 fcf3 	bl	8025f00 <memcpy>
 801d51a:	4622      	mov	r2, r4
 801d51c:	4631      	mov	r1, r6
 801d51e:	f105 0068 	add.w	r0, r5, #104	; 0x68
 801d522:	442c      	add	r4, r5
 801d524:	f008 fcec 	bl	8025f00 <memcpy>
 801d528:	2300      	movs	r3, #0
 801d52a:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 801d52e:	4628      	mov	r0, r5
 801d530:	f7fa f97c 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 801d534:	08030f3a 	.word	0x08030f3a

0801d538 <_ZN9__gnu_cxx15__concat_size_tEPcjj>:
 801d538:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d53c:	af00      	add	r7, sp, #0
 801d53e:	b084      	sub	sp, #16
 801d540:	466d      	mov	r5, sp
 801d542:	f105 040c 	add.w	r4, r5, #12
 801d546:	f8df 8044 	ldr.w	r8, [pc, #68]	; 801d58c <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x54>
 801d54a:	4623      	mov	r3, r4
 801d54c:	f04f 0c0a 	mov.w	ip, #10
 801d550:	fbb2 f6fc 	udiv	r6, r2, ip
 801d554:	fb0c 2e16 	mls	lr, ip, r6, r2
 801d558:	f818 e00e 	ldrb.w	lr, [r8, lr]
 801d55c:	f803 ed01 	strb.w	lr, [r3, #-1]!
 801d560:	4696      	mov	lr, r2
 801d562:	f1be 0f09 	cmp.w	lr, #9
 801d566:	4632      	mov	r2, r6
 801d568:	d8f2      	bhi.n	801d550 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x18>
 801d56a:	1ae4      	subs	r4, r4, r3
 801d56c:	428c      	cmp	r4, r1
 801d56e:	d809      	bhi.n	801d584 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x4c>
 801d570:	f1c4 030c 	rsb	r3, r4, #12
 801d574:	4622      	mov	r2, r4
 801d576:	18e9      	adds	r1, r5, r3
 801d578:	f008 fcc2 	bl	8025f00 <memcpy>
 801d57c:	4620      	mov	r0, r4
 801d57e:	46bd      	mov	sp, r7
 801d580:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d584:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 801d588:	e7f8      	b.n	801d57c <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x44>
 801d58a:	bf00      	nop
 801d58c:	08031909 	.word	0x08031909

0801d590 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list>:
 801d590:	3901      	subs	r1, #1
 801d592:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d596:	4607      	mov	r7, r0
 801d598:	4615      	mov	r5, r2
 801d59a:	eb00 0801 	add.w	r8, r0, r1
 801d59e:	4604      	mov	r4, r0
 801d5a0:	782a      	ldrb	r2, [r5, #0]
 801d5a2:	b392      	cbz	r2, 801d60a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x7a>
 801d5a4:	4544      	cmp	r4, r8
 801d5a6:	d22a      	bcs.n	801d5fe <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x6e>
 801d5a8:	2a25      	cmp	r2, #37	; 0x25
 801d5aa:	d107      	bne.n	801d5bc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 801d5ac:	786a      	ldrb	r2, [r5, #1]
 801d5ae:	2a73      	cmp	r2, #115	; 0x73
 801d5b0:	d009      	beq.n	801d5c6 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x36>
 801d5b2:	2a7a      	cmp	r2, #122	; 0x7a
 801d5b4:	d012      	beq.n	801d5dc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x4c>
 801d5b6:	2a25      	cmp	r2, #37	; 0x25
 801d5b8:	d100      	bne.n	801d5bc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 801d5ba:	3501      	adds	r5, #1
 801d5bc:	f815 2b01 	ldrb.w	r2, [r5], #1
 801d5c0:	f804 2b01 	strb.w	r2, [r4], #1
 801d5c4:	e7ec      	b.n	801d5a0 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 801d5c6:	f853 2b04 	ldr.w	r2, [r3], #4
 801d5ca:	3a01      	subs	r2, #1
 801d5cc:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 801d5d0:	b1c9      	cbz	r1, 801d606 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 801d5d2:	4544      	cmp	r4, r8
 801d5d4:	d013      	beq.n	801d5fe <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x6e>
 801d5d6:	f804 1b01 	strb.w	r1, [r4], #1
 801d5da:	e7f7      	b.n	801d5cc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x3c>
 801d5dc:	78aa      	ldrb	r2, [r5, #2]
 801d5de:	2a75      	cmp	r2, #117	; 0x75
 801d5e0:	d1ec      	bne.n	801d5bc <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 801d5e2:	461e      	mov	r6, r3
 801d5e4:	eba8 0104 	sub.w	r1, r8, r4
 801d5e8:	f856 2b04 	ldr.w	r2, [r6], #4
 801d5ec:	4620      	mov	r0, r4
 801d5ee:	f7ff ffa3 	bl	801d538 <_ZN9__gnu_cxx15__concat_size_tEPcjj>
 801d5f2:	2800      	cmp	r0, #0
 801d5f4:	dd03      	ble.n	801d5fe <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x6e>
 801d5f6:	4404      	add	r4, r0
 801d5f8:	3503      	adds	r5, #3
 801d5fa:	4633      	mov	r3, r6
 801d5fc:	e7d0      	b.n	801d5a0 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 801d5fe:	4621      	mov	r1, r4
 801d600:	4638      	mov	r0, r7
 801d602:	f7ff ff73 	bl	801d4ec <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>
 801d606:	3502      	adds	r5, #2
 801d608:	e7ca      	b.n	801d5a0 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 801d60a:	7022      	strb	r2, [r4, #0]
 801d60c:	1be0      	subs	r0, r4, r7
 801d60e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801d612 <_ZNSt15basic_streambufIcSt11char_traitsIcEE5imbueERKSt6locale>:
 801d612:	4770      	bx	lr

0801d614 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6setbufEPci>:
 801d614:	4770      	bx	lr

0801d616 <_ZNSt15basic_streambufIcSt11char_traitsIcEE7seekoffExSt12_Ios_SeekdirSt13_Ios_Openmode>:
 801d616:	b530      	push	{r4, r5, lr}
 801d618:	2200      	movs	r2, #0
 801d61a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 801d61e:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 801d622:	e9c0 4500 	strd	r4, r5, [r0]
 801d626:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801d62a:	bd30      	pop	{r4, r5, pc}

0801d62c <_ZNSt15basic_streambufIcSt11char_traitsIcEE7seekposESt4fposI10_mbstate_tESt13_Ios_Openmode>:
 801d62c:	b082      	sub	sp, #8
 801d62e:	e88d 000c 	stmia.w	sp, {r2, r3}
 801d632:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801d636:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801d63a:	e9c0 2300 	strd	r2, r3, [r0]
 801d63e:	2300      	movs	r3, #0
 801d640:	e9c0 3302 	strd	r3, r3, [r0, #8]
 801d644:	b002      	add	sp, #8
 801d646:	4770      	bx	lr

0801d648 <_ZNSt15basic_streambufIcSt11char_traitsIcEE4syncEv>:
 801d648:	2000      	movs	r0, #0
 801d64a:	4770      	bx	lr

0801d64c <_ZNSt15basic_streambufIcSt11char_traitsIcEE9showmanycEv>:
 801d64c:	2000      	movs	r0, #0
 801d64e:	4770      	bx	lr

0801d650 <_ZNSt15basic_streambufIcSt11char_traitsIcEE9underflowEv>:
 801d650:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801d654:	4770      	bx	lr

0801d656 <_ZNSt15basic_streambufIcSt11char_traitsIcEE5uflowEv>:
 801d656:	6803      	ldr	r3, [r0, #0]
 801d658:	b510      	push	{r4, lr}
 801d65a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d65c:	4604      	mov	r4, r0
 801d65e:	4798      	blx	r3
 801d660:	1c43      	adds	r3, r0, #1
 801d662:	bf1e      	ittt	ne
 801d664:	68a3      	ldrne	r3, [r4, #8]
 801d666:	f813 0b01 	ldrbne.w	r0, [r3], #1
 801d66a:	60a3      	strne	r3, [r4, #8]
 801d66c:	bd10      	pop	{r4, pc}

0801d66e <_ZNSt15basic_streambufIcSt11char_traitsIcEE9pbackfailEi>:
 801d66e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801d672:	4770      	bx	lr

0801d674 <_ZNSt15basic_streambufIcSt11char_traitsIcEE8overflowEi>:
 801d674:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801d678:	4770      	bx	lr

0801d67a <_ZNSt15basic_streambufIwSt11char_traitsIwEE5imbueERKSt6locale>:
 801d67a:	4770      	bx	lr

0801d67c <_ZNSt15basic_streambufIwSt11char_traitsIwEE6setbufEPwi>:
 801d67c:	4770      	bx	lr

0801d67e <_ZNSt15basic_streambufIwSt11char_traitsIwEE7seekoffExSt12_Ios_SeekdirSt13_Ios_Openmode>:
 801d67e:	b530      	push	{r4, r5, lr}
 801d680:	2200      	movs	r2, #0
 801d682:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 801d686:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 801d68a:	e9c0 4500 	strd	r4, r5, [r0]
 801d68e:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801d692:	bd30      	pop	{r4, r5, pc}

0801d694 <_ZNSt15basic_streambufIwSt11char_traitsIwEE7seekposESt4fposI10_mbstate_tESt13_Ios_Openmode>:
 801d694:	b082      	sub	sp, #8
 801d696:	e88d 000c 	stmia.w	sp, {r2, r3}
 801d69a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801d69e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801d6a2:	e9c0 2300 	strd	r2, r3, [r0]
 801d6a6:	2300      	movs	r3, #0
 801d6a8:	e9c0 3302 	strd	r3, r3, [r0, #8]
 801d6ac:	b002      	add	sp, #8
 801d6ae:	4770      	bx	lr

0801d6b0 <_ZNSt15basic_streambufIwSt11char_traitsIwEE4syncEv>:
 801d6b0:	2000      	movs	r0, #0
 801d6b2:	4770      	bx	lr

0801d6b4 <_ZNSt15basic_streambufIwSt11char_traitsIwEE9showmanycEv>:
 801d6b4:	2000      	movs	r0, #0
 801d6b6:	4770      	bx	lr

0801d6b8 <_ZNSt15basic_streambufIwSt11char_traitsIwEE9underflowEv>:
 801d6b8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801d6bc:	4770      	bx	lr

0801d6be <_ZNSt15basic_streambufIwSt11char_traitsIwEE5uflowEv>:
 801d6be:	6803      	ldr	r3, [r0, #0]
 801d6c0:	b510      	push	{r4, lr}
 801d6c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d6c4:	4604      	mov	r4, r0
 801d6c6:	4798      	blx	r3
 801d6c8:	1c43      	adds	r3, r0, #1
 801d6ca:	bf1e      	ittt	ne
 801d6cc:	68a3      	ldrne	r3, [r4, #8]
 801d6ce:	f853 0b04 	ldrne.w	r0, [r3], #4
 801d6d2:	60a3      	strne	r3, [r4, #8]
 801d6d4:	bd10      	pop	{r4, pc}

0801d6d6 <_ZNSt15basic_streambufIwSt11char_traitsIwEE9pbackfailEj>:
 801d6d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801d6da:	4770      	bx	lr

0801d6dc <_ZNSt15basic_streambufIwSt11char_traitsIwEE8overflowEj>:
 801d6dc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801d6e0:	4770      	bx	lr
	...

0801d6e4 <_ZNSt15basic_streambufIcSt11char_traitsIcEED1Ev>:
 801d6e4:	b510      	push	{r4, lr}
 801d6e6:	4b04      	ldr	r3, [pc, #16]	; (801d6f8 <_ZNSt15basic_streambufIcSt11char_traitsIcEED1Ev+0x14>)
 801d6e8:	4604      	mov	r4, r0
 801d6ea:	f840 3b1c 	str.w	r3, [r0], #28
 801d6ee:	f7ee fe4b 	bl	800c388 <_ZNSt6localeD1Ev>
 801d6f2:	4620      	mov	r0, r4
 801d6f4:	bd10      	pop	{r4, pc}
 801d6f6:	bf00      	nop
 801d6f8:	08030fac 	.word	0x08030fac

0801d6fc <_ZNSt15basic_streambufIwSt11char_traitsIwEED1Ev>:
 801d6fc:	b510      	push	{r4, lr}
 801d6fe:	4b04      	ldr	r3, [pc, #16]	; (801d710 <_ZNSt15basic_streambufIwSt11char_traitsIwEED1Ev+0x14>)
 801d700:	4604      	mov	r4, r0
 801d702:	f840 3b1c 	str.w	r3, [r0], #28
 801d706:	f7ee fe3f 	bl	800c388 <_ZNSt6localeD1Ev>
 801d70a:	4620      	mov	r0, r4
 801d70c:	bd10      	pop	{r4, pc}
 801d70e:	bf00      	nop
 801d710:	08030fec 	.word	0x08030fec

0801d714 <_ZNSt15basic_streambufIcSt11char_traitsIcEED0Ev>:
 801d714:	b510      	push	{r4, lr}
 801d716:	4604      	mov	r4, r0
 801d718:	f7ff ffe4 	bl	801d6e4 <_ZNSt15basic_streambufIcSt11char_traitsIcEED1Ev>
 801d71c:	4620      	mov	r0, r4
 801d71e:	f006 fbd5 	bl	8023ecc <_ZdlPv>
 801d722:	4620      	mov	r0, r4
 801d724:	bd10      	pop	{r4, pc}

0801d726 <_ZNSt15basic_streambufIwSt11char_traitsIwEED0Ev>:
 801d726:	b510      	push	{r4, lr}
 801d728:	4604      	mov	r4, r0
 801d72a:	f7ff ffe7 	bl	801d6fc <_ZNSt15basic_streambufIwSt11char_traitsIwEED1Ev>
 801d72e:	4620      	mov	r0, r4
 801d730:	f006 fbcc 	bl	8023ecc <_ZdlPv>
 801d734:	4620      	mov	r0, r4
 801d736:	bd10      	pop	{r4, pc}

0801d738 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPci>:
 801d738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d73c:	4606      	mov	r6, r0
 801d73e:	460c      	mov	r4, r1
 801d740:	4690      	mov	r8, r2
 801d742:	2500      	movs	r5, #0
 801d744:	4545      	cmp	r5, r8
 801d746:	da1d      	bge.n	801d784 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPci+0x4c>
 801d748:	e9d6 1702 	ldrd	r1, r7, [r6, #8]
 801d74c:	1a7a      	subs	r2, r7, r1
 801d74e:	d00f      	beq.n	801d770 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPci+0x38>
 801d750:	eba8 0705 	sub.w	r7, r8, r5
 801d754:	4297      	cmp	r7, r2
 801d756:	bfa8      	it	ge
 801d758:	4617      	movge	r7, r2
 801d75a:	4620      	mov	r0, r4
 801d75c:	463a      	mov	r2, r7
 801d75e:	f008 fbcf 	bl	8025f00 <memcpy>
 801d762:	68b3      	ldr	r3, [r6, #8]
 801d764:	443d      	add	r5, r7
 801d766:	443b      	add	r3, r7
 801d768:	45a8      	cmp	r8, r5
 801d76a:	443c      	add	r4, r7
 801d76c:	60b3      	str	r3, [r6, #8]
 801d76e:	dde9      	ble.n	801d744 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPci+0xc>
 801d770:	6833      	ldr	r3, [r6, #0]
 801d772:	4630      	mov	r0, r6
 801d774:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d776:	4798      	blx	r3
 801d778:	1c43      	adds	r3, r0, #1
 801d77a:	d003      	beq.n	801d784 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPci+0x4c>
 801d77c:	f804 0b01 	strb.w	r0, [r4], #1
 801d780:	3501      	adds	r5, #1
 801d782:	e7df      	b.n	801d744 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPci+0xc>
 801d784:	4628      	mov	r0, r5
 801d786:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801d78a <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsgetnEPwi>:
 801d78a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d78e:	4607      	mov	r7, r0
 801d790:	460d      	mov	r5, r1
 801d792:	4690      	mov	r8, r2
 801d794:	2600      	movs	r6, #0
 801d796:	4546      	cmp	r6, r8
 801d798:	da22      	bge.n	801d7e0 <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsgetnEPwi+0x56>
 801d79a:	e9d7 1402 	ldrd	r1, r4, [r7, #8]
 801d79e:	428c      	cmp	r4, r1
 801d7a0:	d014      	beq.n	801d7cc <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsgetnEPwi+0x42>
 801d7a2:	1a64      	subs	r4, r4, r1
 801d7a4:	10a4      	asrs	r4, r4, #2
 801d7a6:	eba8 0206 	sub.w	r2, r8, r6
 801d7aa:	4294      	cmp	r4, r2
 801d7ac:	bfa8      	it	ge
 801d7ae:	4614      	movge	r4, r2
 801d7b0:	b11c      	cbz	r4, 801d7ba <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsgetnEPwi+0x30>
 801d7b2:	4622      	mov	r2, r4
 801d7b4:	4628      	mov	r0, r5
 801d7b6:	f00c ffce 	bl	802a756 <wmemcpy>
 801d7ba:	68bb      	ldr	r3, [r7, #8]
 801d7bc:	4426      	add	r6, r4
 801d7be:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 801d7c2:	45b0      	cmp	r8, r6
 801d7c4:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 801d7c8:	60bb      	str	r3, [r7, #8]
 801d7ca:	dde4      	ble.n	801d796 <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsgetnEPwi+0xc>
 801d7cc:	683b      	ldr	r3, [r7, #0]
 801d7ce:	4638      	mov	r0, r7
 801d7d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d7d2:	4798      	blx	r3
 801d7d4:	1c43      	adds	r3, r0, #1
 801d7d6:	d003      	beq.n	801d7e0 <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsgetnEPwi+0x56>
 801d7d8:	f845 0b04 	str.w	r0, [r5], #4
 801d7dc:	3601      	adds	r6, #1
 801d7de:	e7da      	b.n	801d796 <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsgetnEPwi+0xc>
 801d7e0:	4630      	mov	r0, r6
 801d7e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801d7e6 <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsputnEPKwi>:
 801d7e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d7ea:	4607      	mov	r7, r0
 801d7ec:	460e      	mov	r6, r1
 801d7ee:	4690      	mov	r8, r2
 801d7f0:	2500      	movs	r5, #0
 801d7f2:	4545      	cmp	r5, r8
 801d7f4:	da22      	bge.n	801d83c <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsputnEPKwi+0x56>
 801d7f6:	e9d7 0405 	ldrd	r0, r4, [r7, #20]
 801d7fa:	4284      	cmp	r4, r0
 801d7fc:	d014      	beq.n	801d828 <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsputnEPKwi+0x42>
 801d7fe:	1a24      	subs	r4, r4, r0
 801d800:	10a4      	asrs	r4, r4, #2
 801d802:	eba8 0205 	sub.w	r2, r8, r5
 801d806:	4294      	cmp	r4, r2
 801d808:	bfa8      	it	ge
 801d80a:	4614      	movge	r4, r2
 801d80c:	b11c      	cbz	r4, 801d816 <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsputnEPKwi+0x30>
 801d80e:	4622      	mov	r2, r4
 801d810:	4631      	mov	r1, r6
 801d812:	f00c ffa0 	bl	802a756 <wmemcpy>
 801d816:	697b      	ldr	r3, [r7, #20]
 801d818:	4425      	add	r5, r4
 801d81a:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 801d81e:	45a8      	cmp	r8, r5
 801d820:	eb06 0684 	add.w	r6, r6, r4, lsl #2
 801d824:	617b      	str	r3, [r7, #20]
 801d826:	dde4      	ble.n	801d7f2 <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsputnEPKwi+0xc>
 801d828:	683b      	ldr	r3, [r7, #0]
 801d82a:	6831      	ldr	r1, [r6, #0]
 801d82c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801d82e:	4638      	mov	r0, r7
 801d830:	4798      	blx	r3
 801d832:	3001      	adds	r0, #1
 801d834:	d002      	beq.n	801d83c <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsputnEPKwi+0x56>
 801d836:	3501      	adds	r5, #1
 801d838:	3604      	adds	r6, #4
 801d83a:	e7da      	b.n	801d7f2 <_ZNSt15basic_streambufIwSt11char_traitsIwEE6xsputnEPKwi+0xc>
 801d83c:	4628      	mov	r0, r5
 801d83e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801d842 <_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKci>:
 801d842:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d846:	4606      	mov	r6, r0
 801d848:	460d      	mov	r5, r1
 801d84a:	4690      	mov	r8, r2
 801d84c:	2400      	movs	r4, #0
 801d84e:	4544      	cmp	r4, r8
 801d850:	da1d      	bge.n	801d88e <_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKci+0x4c>
 801d852:	e9d6 0705 	ldrd	r0, r7, [r6, #20]
 801d856:	1a3a      	subs	r2, r7, r0
 801d858:	d00f      	beq.n	801d87a <_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKci+0x38>
 801d85a:	eba8 0704 	sub.w	r7, r8, r4
 801d85e:	4297      	cmp	r7, r2
 801d860:	bfa8      	it	ge
 801d862:	4617      	movge	r7, r2
 801d864:	4629      	mov	r1, r5
 801d866:	463a      	mov	r2, r7
 801d868:	f008 fb4a 	bl	8025f00 <memcpy>
 801d86c:	6973      	ldr	r3, [r6, #20]
 801d86e:	443c      	add	r4, r7
 801d870:	443b      	add	r3, r7
 801d872:	45a0      	cmp	r8, r4
 801d874:	443d      	add	r5, r7
 801d876:	6173      	str	r3, [r6, #20]
 801d878:	dde9      	ble.n	801d84e <_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKci+0xc>
 801d87a:	6833      	ldr	r3, [r6, #0]
 801d87c:	7829      	ldrb	r1, [r5, #0]
 801d87e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801d880:	4630      	mov	r0, r6
 801d882:	4798      	blx	r3
 801d884:	3001      	adds	r0, #1
 801d886:	d002      	beq.n	801d88e <_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKci+0x4c>
 801d888:	3401      	adds	r4, #1
 801d88a:	3501      	adds	r5, #1
 801d88c:	e7df      	b.n	801d84e <_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKci+0xc>
 801d88e:	4620      	mov	r0, r4
 801d890:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801d894 <_ZNSt15basic_streambufIcSt11char_traitsIcEE7pubsyncEv>:
 801d894:	6803      	ldr	r3, [r0, #0]
 801d896:	699b      	ldr	r3, [r3, #24]
 801d898:	4718      	bx	r3

0801d89a <_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv>:
 801d89a:	e9d0 2102 	ldrd	r2, r1, [r0, #8]
 801d89e:	428a      	cmp	r2, r1
 801d8a0:	d302      	bcc.n	801d8a8 <_ZNSt15basic_streambufIcSt11char_traitsIcEE5sgetcEv+0xe>
 801d8a2:	6803      	ldr	r3, [r0, #0]
 801d8a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d8a6:	4718      	bx	r3
 801d8a8:	7810      	ldrb	r0, [r2, #0]
 801d8aa:	4770      	bx	lr

0801d8ac <_ZNSt15basic_streambufIcSt11char_traitsIcEE5sputnEPKci>:
 801d8ac:	6803      	ldr	r3, [r0, #0]
 801d8ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d8b0:	4718      	bx	r3

0801d8b2 <_ZNSt15basic_streambufIwSt11char_traitsIwEE7pubsyncEv>:
 801d8b2:	6803      	ldr	r3, [r0, #0]
 801d8b4:	699b      	ldr	r3, [r3, #24]
 801d8b6:	4718      	bx	r3

0801d8b8 <_ZNSt15basic_streambufIwSt11char_traitsIwEE5sgetcEv>:
 801d8b8:	e9d0 2102 	ldrd	r2, r1, [r0, #8]
 801d8bc:	428a      	cmp	r2, r1
 801d8be:	d302      	bcc.n	801d8c6 <_ZNSt15basic_streambufIwSt11char_traitsIwEE5sgetcEv+0xe>
 801d8c0:	6803      	ldr	r3, [r0, #0]
 801d8c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d8c4:	4718      	bx	r3
 801d8c6:	6810      	ldr	r0, [r2, #0]
 801d8c8:	4770      	bx	lr

0801d8ca <_ZNSt15basic_streambufIwSt11char_traitsIwEE5sputnEPKwi>:
 801d8ca:	6803      	ldr	r3, [r0, #0]
 801d8cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d8ce:	4718      	bx	r3

0801d8d0 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>:
 801d8d0:	b10a      	cbz	r2, 801d8d6 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0+0x6>
 801d8d2:	f008 bb15 	b.w	8025f00 <memcpy>
 801d8d6:	4770      	bx	lr

0801d8d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
 801d8d8:	b508      	push	{r3, lr}
 801d8da:	680b      	ldr	r3, [r1, #0]
 801d8dc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 801d8e0:	d302      	bcc.n	801d8e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x10>
 801d8e2:	480d      	ldr	r0, [pc, #52]	; (801d918 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>)
 801d8e4:	f7f9 ffa5 	bl	8017832 <_ZSt20__throw_length_errorPKc>
 801d8e8:	4293      	cmp	r3, r2
 801d8ea:	d90b      	bls.n	801d904 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 801d8ec:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 801d8f0:	ea4f 0042 	mov.w	r0, r2, lsl #1
 801d8f4:	d206      	bcs.n	801d904 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 801d8f6:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 801d8fa:	bf2a      	itet	cs
 801d8fc:	f06f 4340 	mvncs.w	r3, #3221225472	; 0xc0000000
 801d900:	6008      	strcc	r0, [r1, #0]
 801d902:	600b      	strcs	r3, [r1, #0]
 801d904:	6808      	ldr	r0, [r1, #0]
 801d906:	3001      	adds	r0, #1
 801d908:	d501      	bpl.n	801d90e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x36>
 801d90a:	f7f9 ff89 	bl	8017820 <_ZSt17__throw_bad_allocv>
 801d90e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801d912:	f7ee bb15 	b.w	800bf40 <_Znwj>
 801d916:	bf00      	nop
 801d918:	08031086 	.word	0x08031086

0801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
 801d91c:	f850 3b08 	ldr.w	r3, [r0], #8
 801d920:	4283      	cmp	r3, r0
 801d922:	d002      	beq.n	801d92a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0xe>
 801d924:	4618      	mov	r0, r3
 801d926:	f006 bad1 	b.w	8023ecc <_ZdlPv>
 801d92a:	4770      	bx	lr

0801d92c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>:
 801d92c:	b508      	push	{r3, lr}
 801d92e:	4603      	mov	r3, r0
 801d930:	4608      	mov	r0, r1
 801d932:	685b      	ldr	r3, [r3, #4]
 801d934:	4298      	cmp	r0, r3
 801d936:	4611      	mov	r1, r2
 801d938:	d903      	bls.n	801d942 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x16>
 801d93a:	4602      	mov	r2, r0
 801d93c:	4801      	ldr	r0, [pc, #4]	; (801d944 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x18>)
 801d93e:	f7f9 ff7b 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 801d942:	bd08      	pop	{r3, pc}
 801d944:	0802f5dc 	.word	0x0802f5dc

0801d948 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
 801d948:	6840      	ldr	r0, [r0, #4]
 801d94a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801d94e:	3901      	subs	r1, #1
 801d950:	1a09      	subs	r1, r1, r0
 801d952:	4291      	cmp	r1, r2
 801d954:	b508      	push	{r3, lr}
 801d956:	d202      	bcs.n	801d95e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x16>
 801d958:	4618      	mov	r0, r3
 801d95a:	f7f9 ff6a 	bl	8017832 <_ZSt20__throw_length_errorPKc>
 801d95e:	bd08      	pop	{r3, pc}

0801d960 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
 801d960:	6803      	ldr	r3, [r0, #0]
 801d962:	428b      	cmp	r3, r1
 801d964:	d806      	bhi.n	801d974 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x14>
 801d966:	6840      	ldr	r0, [r0, #4]
 801d968:	4418      	add	r0, r3
 801d96a:	4281      	cmp	r1, r0
 801d96c:	bf94      	ite	ls
 801d96e:	2000      	movls	r0, #0
 801d970:	2001      	movhi	r0, #1
 801d972:	4770      	bx	lr
 801d974:	2001      	movs	r0, #1
 801d976:	4770      	bx	lr

0801d978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
 801d978:	2a01      	cmp	r2, #1
 801d97a:	b410      	push	{r4}
 801d97c:	d104      	bne.n	801d988 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0x10>
 801d97e:	780a      	ldrb	r2, [r1, #0]
 801d980:	f85d 4b04 	ldr.w	r4, [sp], #4
 801d984:	7002      	strb	r2, [r0, #0]
 801d986:	4770      	bx	lr
 801d988:	f85d 4b04 	ldr.w	r4, [sp], #4
 801d98c:	f7ff bfa0 	b.w	801d8d0 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>

0801d990 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>:
 801d990:	2a01      	cmp	r2, #1
 801d992:	b430      	push	{r4, r5}
 801d994:	d103      	bne.n	801d99e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xe>
 801d996:	780b      	ldrb	r3, [r1, #0]
 801d998:	7003      	strb	r3, [r0, #0]
 801d99a:	bc30      	pop	{r4, r5}
 801d99c:	4770      	bx	lr
 801d99e:	2a00      	cmp	r2, #0
 801d9a0:	d0fb      	beq.n	801d99a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xa>
 801d9a2:	bc30      	pop	{r4, r5}
 801d9a4:	f008 baba 	b.w	8025f1c <memmove>

0801d9a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc>:
 801d9a8:	460b      	mov	r3, r1
 801d9aa:	2b01      	cmp	r3, #1
 801d9ac:	b410      	push	{r4}
 801d9ae:	4611      	mov	r1, r2
 801d9b0:	4604      	mov	r4, r0
 801d9b2:	d103      	bne.n	801d9bc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc+0x14>
 801d9b4:	7022      	strb	r2, [r4, #0]
 801d9b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 801d9ba:	4770      	bx	lr
 801d9bc:	2b00      	cmp	r3, #0
 801d9be:	d0fa      	beq.n	801d9b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc+0xe>
 801d9c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 801d9c4:	461a      	mov	r2, r3
 801d9c6:	f008 bac3 	b.w	8025f50 <memset>

0801d9ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc>:
 801d9ca:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801d9cc:	290f      	cmp	r1, #15
 801d9ce:	4604      	mov	r4, r0
 801d9d0:	9101      	str	r1, [sp, #4]
 801d9d2:	4615      	mov	r5, r2
 801d9d4:	d906      	bls.n	801d9e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x1a>
 801d9d6:	2200      	movs	r2, #0
 801d9d8:	a901      	add	r1, sp, #4
 801d9da:	f7ff ff7d 	bl	801d8d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 801d9de:	9b01      	ldr	r3, [sp, #4]
 801d9e0:	6020      	str	r0, [r4, #0]
 801d9e2:	60a3      	str	r3, [r4, #8]
 801d9e4:	9901      	ldr	r1, [sp, #4]
 801d9e6:	b119      	cbz	r1, 801d9f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc+0x26>
 801d9e8:	6820      	ldr	r0, [r4, #0]
 801d9ea:	462a      	mov	r2, r5
 801d9ec:	f7ff ffdc 	bl	801d9a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc>
 801d9f0:	9b01      	ldr	r3, [sp, #4]
 801d9f2:	6822      	ldr	r2, [r4, #0]
 801d9f4:	6063      	str	r3, [r4, #4]
 801d9f6:	2100      	movs	r1, #0
 801d9f8:	54d1      	strb	r1, [r2, r3]
 801d9fa:	b003      	add	sp, #12
 801d9fc:	bd30      	pop	{r4, r5, pc}

0801d9fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
 801d9fe:	b508      	push	{r3, lr}
 801da00:	1a52      	subs	r2, r2, r1
 801da02:	f7ff ffb9 	bl	801d978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 801da06:	bd08      	pop	{r3, pc}

0801da08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
 801da08:	b508      	push	{r3, lr}
 801da0a:	1a52      	subs	r2, r2, r1
 801da0c:	f7ff ffb4 	bl	801d978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 801da10:	bd08      	pop	{r3, pc}

0801da12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
 801da12:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801da16:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801da18:	461f      	mov	r7, r3
 801da1a:	6843      	ldr	r3, [r0, #4]
 801da1c:	eb01 0802 	add.w	r8, r1, r2
 801da20:	1ab2      	subs	r2, r6, r2
 801da22:	441a      	add	r2, r3
 801da24:	eba3 0908 	sub.w	r9, r3, r8
 801da28:	4603      	mov	r3, r0
 801da2a:	9201      	str	r2, [sp, #4]
 801da2c:	f853 2b08 	ldr.w	r2, [r3], #8
 801da30:	429a      	cmp	r2, r3
 801da32:	bf18      	it	ne
 801da34:	6882      	ldrne	r2, [r0, #8]
 801da36:	460d      	mov	r5, r1
 801da38:	bf08      	it	eq
 801da3a:	220f      	moveq	r2, #15
 801da3c:	a901      	add	r1, sp, #4
 801da3e:	4604      	mov	r4, r0
 801da40:	f7ff ff4a 	bl	801d8d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 801da44:	4682      	mov	sl, r0
 801da46:	b11d      	cbz	r5, 801da50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x3e>
 801da48:	6821      	ldr	r1, [r4, #0]
 801da4a:	462a      	mov	r2, r5
 801da4c:	f7ff ff94 	bl	801d978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 801da50:	b137      	cbz	r7, 801da60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 801da52:	b12e      	cbz	r6, 801da60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 801da54:	4632      	mov	r2, r6
 801da56:	4639      	mov	r1, r7
 801da58:	eb0a 0005 	add.w	r0, sl, r5
 801da5c:	f7ff ff8c 	bl	801d978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 801da60:	f1b9 0f00 	cmp.w	r9, #0
 801da64:	d007      	beq.n	801da76 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x64>
 801da66:	6821      	ldr	r1, [r4, #0]
 801da68:	4435      	add	r5, r6
 801da6a:	464a      	mov	r2, r9
 801da6c:	4441      	add	r1, r8
 801da6e:	eb0a 0005 	add.w	r0, sl, r5
 801da72:	f7ff ff81 	bl	801d978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 801da76:	4620      	mov	r0, r4
 801da78:	f7ff ff50 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 801da7c:	9b01      	ldr	r3, [sp, #4]
 801da7e:	f8c4 a000 	str.w	sl, [r4]
 801da82:	60a3      	str	r3, [r4, #8]
 801da84:	b002      	add	sp, #8
 801da86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801da8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>:
 801da8a:	b538      	push	{r3, r4, r5, lr}
 801da8c:	4604      	mov	r4, r0
 801da8e:	4615      	mov	r5, r2
 801da90:	4608      	mov	r0, r1
 801da92:	4411      	add	r1, r2
 801da94:	6862      	ldr	r2, [r4, #4]
 801da96:	1a52      	subs	r2, r2, r1
 801da98:	d005      	beq.n	801daa6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 801da9a:	b125      	cbz	r5, 801daa6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 801da9c:	6823      	ldr	r3, [r4, #0]
 801da9e:	4419      	add	r1, r3
 801daa0:	4418      	add	r0, r3
 801daa2:	f7ff ff75 	bl	801d990 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 801daa6:	6862      	ldr	r2, [r4, #4]
 801daa8:	6823      	ldr	r3, [r4, #0]
 801daaa:	1b55      	subs	r5, r2, r5
 801daac:	2200      	movs	r2, #0
 801daae:	6065      	str	r5, [r4, #4]
 801dab0:	555a      	strb	r2, [r3, r5]
 801dab2:	bd38      	pop	{r3, r4, r5, pc}

0801dab4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
 801dab4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dab6:	460d      	mov	r5, r1
 801dab8:	f851 3b08 	ldr.w	r3, [r1], #8
 801dabc:	686a      	ldr	r2, [r5, #4]
 801dabe:	4299      	cmp	r1, r3
 801dac0:	4604      	mov	r4, r0
 801dac2:	6800      	ldr	r0, [r0, #0]
 801dac4:	d10d      	bne.n	801dae2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x2e>
 801dac6:	b10a      	cbz	r2, 801dacc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x18>
 801dac8:	f7ff ff56 	bl	801d978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 801dacc:	686b      	ldr	r3, [r5, #4]
 801dace:	6822      	ldr	r2, [r4, #0]
 801dad0:	6063      	str	r3, [r4, #4]
 801dad2:	2100      	movs	r1, #0
 801dad4:	54d1      	strb	r1, [r2, r3]
 801dad6:	682a      	ldr	r2, [r5, #0]
 801dad8:	2300      	movs	r3, #0
 801dada:	606b      	str	r3, [r5, #4]
 801dadc:	7013      	strb	r3, [r2, #0]
 801dade:	4620      	mov	r0, r4
 801dae0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dae2:	e9c4 3200 	strd	r3, r2, [r4]
 801dae6:	f104 0708 	add.w	r7, r4, #8
 801daea:	42b8      	cmp	r0, r7
 801daec:	68ab      	ldr	r3, [r5, #8]
 801daee:	bf18      	it	ne
 801daf0:	68a6      	ldrne	r6, [r4, #8]
 801daf2:	60a3      	str	r3, [r4, #8]
 801daf4:	bf08      	it	eq
 801daf6:	2000      	moveq	r0, #0
 801daf8:	b110      	cbz	r0, 801db00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x4c>
 801dafa:	6028      	str	r0, [r5, #0]
 801dafc:	60ae      	str	r6, [r5, #8]
 801dafe:	e7ea      	b.n	801dad6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>
 801db00:	6029      	str	r1, [r5, #0]
 801db02:	e7e8      	b.n	801dad6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>

0801db04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>:
 801db04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801db06:	4605      	mov	r5, r0
 801db08:	6843      	ldr	r3, [r0, #4]
 801db0a:	4299      	cmp	r1, r3
 801db0c:	bf2c      	ite	cs
 801db0e:	9101      	strcs	r1, [sp, #4]
 801db10:	9301      	strcc	r3, [sp, #4]
 801db12:	f855 1b08 	ldr.w	r1, [r5], #8
 801db16:	428d      	cmp	r5, r1
 801db18:	bf18      	it	ne
 801db1a:	6882      	ldrne	r2, [r0, #8]
 801db1c:	4604      	mov	r4, r0
 801db1e:	9801      	ldr	r0, [sp, #4]
 801db20:	bf08      	it	eq
 801db22:	220f      	moveq	r2, #15
 801db24:	4290      	cmp	r0, r2
 801db26:	d012      	beq.n	801db4e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 801db28:	d801      	bhi.n	801db2e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x2a>
 801db2a:	280f      	cmp	r0, #15
 801db2c:	d911      	bls.n	801db52 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4e>
 801db2e:	a901      	add	r1, sp, #4
 801db30:	4620      	mov	r0, r4
 801db32:	f7ff fed1 	bl	801d8d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 801db36:	6862      	ldr	r2, [r4, #4]
 801db38:	6821      	ldr	r1, [r4, #0]
 801db3a:	3201      	adds	r2, #1
 801db3c:	4605      	mov	r5, r0
 801db3e:	f7ff ff1b 	bl	801d978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 801db42:	4620      	mov	r0, r4
 801db44:	f7ff feea 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 801db48:	9b01      	ldr	r3, [sp, #4]
 801db4a:	6025      	str	r5, [r4, #0]
 801db4c:	60a3      	str	r3, [r4, #8]
 801db4e:	b003      	add	sp, #12
 801db50:	bd30      	pop	{r4, r5, pc}
 801db52:	428d      	cmp	r5, r1
 801db54:	d0fb      	beq.n	801db4e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 801db56:	1c5a      	adds	r2, r3, #1
 801db58:	4628      	mov	r0, r5
 801db5a:	f7ff ff0d 	bl	801d978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 801db5e:	6820      	ldr	r0, [r4, #0]
 801db60:	f006 f9b4 	bl	8023ecc <_ZdlPv>
 801db64:	6025      	str	r5, [r4, #0]
 801db66:	e7f2      	b.n	801db4e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>

0801db68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>:
 801db68:	4603      	mov	r3, r0
 801db6a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801db6c:	f853 2b08 	ldr.w	r2, [r3], #8
 801db70:	6846      	ldr	r6, [r0, #4]
 801db72:	429a      	cmp	r2, r3
 801db74:	bf18      	it	ne
 801db76:	6883      	ldrne	r3, [r0, #8]
 801db78:	f106 0501 	add.w	r5, r6, #1
 801db7c:	bf08      	it	eq
 801db7e:	230f      	moveq	r3, #15
 801db80:	429d      	cmp	r5, r3
 801db82:	4604      	mov	r4, r0
 801db84:	460f      	mov	r7, r1
 801db86:	d906      	bls.n	801db96 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x2e>
 801db88:	2301      	movs	r3, #1
 801db8a:	9300      	str	r3, [sp, #0]
 801db8c:	2300      	movs	r3, #0
 801db8e:	461a      	mov	r2, r3
 801db90:	4631      	mov	r1, r6
 801db92:	f7ff ff3e 	bl	801da12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 801db96:	6823      	ldr	r3, [r4, #0]
 801db98:	559f      	strb	r7, [r3, r6]
 801db9a:	6823      	ldr	r3, [r4, #0]
 801db9c:	6065      	str	r5, [r4, #4]
 801db9e:	2200      	movs	r2, #0
 801dba0:	555a      	strb	r2, [r3, r5]
 801dba2:	b003      	add	sp, #12
 801dba4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801dba8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>:
 801dba8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801dbac:	4616      	mov	r6, r2
 801dbae:	461d      	mov	r5, r3
 801dbb0:	4604      	mov	r4, r0
 801dbb2:	4b1c      	ldr	r3, [pc, #112]	; (801dc24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x7c>)
 801dbb4:	462a      	mov	r2, r5
 801dbb6:	460f      	mov	r7, r1
 801dbb8:	4631      	mov	r1, r6
 801dbba:	f7ff fec5 	bl	801d948 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 801dbbe:	4623      	mov	r3, r4
 801dbc0:	6862      	ldr	r2, [r4, #4]
 801dbc2:	f853 0b08 	ldr.w	r0, [r3], #8
 801dbc6:	4298      	cmp	r0, r3
 801dbc8:	bf18      	it	ne
 801dbca:	68a3      	ldrne	r3, [r4, #8]
 801dbcc:	eba5 0806 	sub.w	r8, r5, r6
 801dbd0:	4490      	add	r8, r2
 801dbd2:	bf08      	it	eq
 801dbd4:	230f      	moveq	r3, #15
 801dbd6:	4543      	cmp	r3, r8
 801dbd8:	d31b      	bcc.n	801dc12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x6a>
 801dbda:	19f3      	adds	r3, r6, r7
 801dbdc:	1ad2      	subs	r2, r2, r3
 801dbde:	d006      	beq.n	801dbee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x46>
 801dbe0:	42ae      	cmp	r6, r5
 801dbe2:	d004      	beq.n	801dbee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x46>
 801dbe4:	4438      	add	r0, r7
 801dbe6:	1981      	adds	r1, r0, r6
 801dbe8:	4428      	add	r0, r5
 801dbea:	f7ff fed1 	bl	801d990 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 801dbee:	b135      	cbz	r5, 801dbfe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x56>
 801dbf0:	6820      	ldr	r0, [r4, #0]
 801dbf2:	f89d 2020 	ldrb.w	r2, [sp, #32]
 801dbf6:	4629      	mov	r1, r5
 801dbf8:	4438      	add	r0, r7
 801dbfa:	f7ff fed5 	bl	801d9a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc>
 801dbfe:	6823      	ldr	r3, [r4, #0]
 801dc00:	f8c4 8004 	str.w	r8, [r4, #4]
 801dc04:	2200      	movs	r2, #0
 801dc06:	4620      	mov	r0, r4
 801dc08:	f803 2008 	strb.w	r2, [r3, r8]
 801dc0c:	b002      	add	sp, #8
 801dc0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801dc12:	9500      	str	r5, [sp, #0]
 801dc14:	2300      	movs	r3, #0
 801dc16:	4632      	mov	r2, r6
 801dc18:	4639      	mov	r1, r7
 801dc1a:	4620      	mov	r0, r4
 801dc1c:	f7ff fef9 	bl	801da12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 801dc20:	e7e5      	b.n	801dbee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc+0x46>
 801dc22:	bf00      	nop
 801dc24:	0802f652 	.word	0x0802f652

0801dc28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc>:
 801dc28:	b507      	push	{r0, r1, r2, lr}
 801dc2a:	9200      	str	r2, [sp, #0]
 801dc2c:	460b      	mov	r3, r1
 801dc2e:	2200      	movs	r2, #0
 801dc30:	6841      	ldr	r1, [r0, #4]
 801dc32:	f7ff ffb9 	bl	801dba8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
 801dc36:	b003      	add	sp, #12
 801dc38:	f85d fb04 	ldr.w	pc, [sp], #4

0801dc3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc>:
 801dc3c:	b510      	push	{r4, lr}
 801dc3e:	6844      	ldr	r4, [r0, #4]
 801dc40:	428c      	cmp	r4, r1
 801dc42:	4603      	mov	r3, r0
 801dc44:	d203      	bcs.n	801dc4e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc+0x12>
 801dc46:	1b09      	subs	r1, r1, r4
 801dc48:	f7ff ffee 	bl	801dc28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc>
 801dc4c:	bd10      	pop	{r4, pc}
 801dc4e:	bf81      	itttt	hi
 801dc50:	6803      	ldrhi	r3, [r0, #0]
 801dc52:	6041      	strhi	r1, [r0, #4]
 801dc54:	2200      	movhi	r2, #0
 801dc56:	545a      	strbhi	r2, [r3, r1]
 801dc58:	e7f8      	b.n	801dc4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc+0x10>

0801dc5a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEj>:
 801dc5a:	b508      	push	{r3, lr}
 801dc5c:	2200      	movs	r2, #0
 801dc5e:	f7ff ffed 	bl	801dc3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc>
 801dc62:	bd08      	pop	{r3, pc}

0801dc64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEc>:
 801dc64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801dc66:	6804      	ldr	r4, [r0, #0]
 801dc68:	9200      	str	r2, [sp, #0]
 801dc6a:	4605      	mov	r5, r0
 801dc6c:	1b0c      	subs	r4, r1, r4
 801dc6e:	2301      	movs	r3, #1
 801dc70:	2200      	movs	r2, #0
 801dc72:	4621      	mov	r1, r4
 801dc74:	f7ff ff98 	bl	801dba8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc>
 801dc78:	6828      	ldr	r0, [r5, #0]
 801dc7a:	4420      	add	r0, r4
 801dc7c:	b003      	add	sp, #12
 801dc7e:	bd30      	pop	{r4, r5, pc}

0801dc80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>:
 801dc80:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc84:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801dc86:	4614      	mov	r4, r2
 801dc88:	4680      	mov	r8, r0
 801dc8a:	462a      	mov	r2, r5
 801dc8c:	4689      	mov	r9, r1
 801dc8e:	461f      	mov	r7, r3
 801dc90:	4621      	mov	r1, r4
 801dc92:	4b39      	ldr	r3, [pc, #228]	; (801dd78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xf8>)
 801dc94:	f7ff fe58 	bl	801d948 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 801dc98:	4642      	mov	r2, r8
 801dc9a:	f8d8 3004 	ldr.w	r3, [r8, #4]
 801dc9e:	f852 6b08 	ldr.w	r6, [r2], #8
 801dca2:	4296      	cmp	r6, r2
 801dca4:	bf18      	it	ne
 801dca6:	f8d8 2008 	ldrne.w	r2, [r8, #8]
 801dcaa:	eba5 0b04 	sub.w	fp, r5, r4
 801dcae:	eb03 0a0b 	add.w	sl, r3, fp
 801dcb2:	bf08      	it	eq
 801dcb4:	220f      	moveq	r2, #15
 801dcb6:	4552      	cmp	r2, sl
 801dcb8:	d351      	bcc.n	801dd5e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xde>
 801dcba:	444e      	add	r6, r9
 801dcbc:	4639      	mov	r1, r7
 801dcbe:	44a1      	add	r9, r4
 801dcc0:	4640      	mov	r0, r8
 801dcc2:	eba3 0909 	sub.w	r9, r3, r9
 801dcc6:	f7ff fe4b 	bl	801d960 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
 801dcca:	b180      	cbz	r0, 801dcee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x6e>
 801dccc:	f1b9 0f00 	cmp.w	r9, #0
 801dcd0:	d006      	beq.n	801dce0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 801dcd2:	42ac      	cmp	r4, r5
 801dcd4:	d004      	beq.n	801dce0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 801dcd6:	464a      	mov	r2, r9
 801dcd8:	1931      	adds	r1, r6, r4
 801dcda:	1970      	adds	r0, r6, r5
 801dcdc:	f7ff fe58 	bl	801d990 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 801dce0:	b315      	cbz	r5, 801dd28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 801dce2:	462a      	mov	r2, r5
 801dce4:	4639      	mov	r1, r7
 801dce6:	4630      	mov	r0, r6
 801dce8:	f7ff fe46 	bl	801d978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 801dcec:	e01c      	b.n	801dd28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 801dcee:	b135      	cbz	r5, 801dcfe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x7e>
 801dcf0:	42ac      	cmp	r4, r5
 801dcf2:	d33c      	bcc.n	801dd6e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xee>
 801dcf4:	462a      	mov	r2, r5
 801dcf6:	4639      	mov	r1, r7
 801dcf8:	4630      	mov	r0, r6
 801dcfa:	f7ff fe49 	bl	801d990 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 801dcfe:	f1b9 0f00 	cmp.w	r9, #0
 801dd02:	d011      	beq.n	801dd28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 801dd04:	42ac      	cmp	r4, r5
 801dd06:	d00f      	beq.n	801dd28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 801dd08:	464a      	mov	r2, r9
 801dd0a:	1931      	adds	r1, r6, r4
 801dd0c:	1970      	adds	r0, r6, r5
 801dd0e:	f7ff fe3f 	bl	801d990 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 801dd12:	42ac      	cmp	r4, r5
 801dd14:	d208      	bcs.n	801dd28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 801dd16:	4434      	add	r4, r6
 801dd18:	197b      	adds	r3, r7, r5
 801dd1a:	429c      	cmp	r4, r3
 801dd1c:	d30f      	bcc.n	801dd3e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbe>
 801dd1e:	462a      	mov	r2, r5
 801dd20:	4639      	mov	r1, r7
 801dd22:	4630      	mov	r0, r6
 801dd24:	f7ff fe34 	bl	801d990 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 801dd28:	f8d8 3000 	ldr.w	r3, [r8]
 801dd2c:	f8c8 a004 	str.w	sl, [r8, #4]
 801dd30:	2200      	movs	r2, #0
 801dd32:	4640      	mov	r0, r8
 801dd34:	f803 200a 	strb.w	r2, [r3, sl]
 801dd38:	b003      	add	sp, #12
 801dd3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd3e:	42bc      	cmp	r4, r7
 801dd40:	d803      	bhi.n	801dd4a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xca>
 801dd42:	462a      	mov	r2, r5
 801dd44:	eb07 010b 	add.w	r1, r7, fp
 801dd48:	e7cd      	b.n	801dce6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x66>
 801dd4a:	1be4      	subs	r4, r4, r7
 801dd4c:	4622      	mov	r2, r4
 801dd4e:	4639      	mov	r1, r7
 801dd50:	4630      	mov	r0, r6
 801dd52:	f7ff fe1d 	bl	801d990 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 801dd56:	1b2a      	subs	r2, r5, r4
 801dd58:	1971      	adds	r1, r6, r5
 801dd5a:	1930      	adds	r0, r6, r4
 801dd5c:	e7c4      	b.n	801dce8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x68>
 801dd5e:	9500      	str	r5, [sp, #0]
 801dd60:	463b      	mov	r3, r7
 801dd62:	4622      	mov	r2, r4
 801dd64:	4649      	mov	r1, r9
 801dd66:	4640      	mov	r0, r8
 801dd68:	f7ff fe53 	bl	801da12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 801dd6c:	e7dc      	b.n	801dd28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 801dd6e:	f1b9 0f00 	cmp.w	r9, #0
 801dd72:	d0d0      	beq.n	801dd16 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x96>
 801dd74:	e7c8      	b.n	801dd08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x88>
 801dd76:	bf00      	nop
 801dd78:	0803109e 	.word	0x0803109e

0801dd7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>:
 801dd7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801dd7e:	4604      	mov	r4, r0
 801dd80:	4623      	mov	r3, r4
 801dd82:	6840      	ldr	r0, [r0, #4]
 801dd84:	f853 6b08 	ldr.w	r6, [r3], #8
 801dd88:	429e      	cmp	r6, r3
 801dd8a:	bf18      	it	ne
 801dd8c:	68a3      	ldrne	r3, [r4, #8]
 801dd8e:	eb00 0502 	add.w	r5, r0, r2
 801dd92:	bf08      	it	eq
 801dd94:	230f      	moveq	r3, #15
 801dd96:	429d      	cmp	r5, r3
 801dd98:	d80a      	bhi.n	801ddb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x34>
 801dd9a:	b112      	cbz	r2, 801dda2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>
 801dd9c:	4430      	add	r0, r6
 801dd9e:	f7ff fdeb 	bl	801d978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 801dda2:	6823      	ldr	r3, [r4, #0]
 801dda4:	6065      	str	r5, [r4, #4]
 801dda6:	2200      	movs	r2, #0
 801dda8:	4620      	mov	r0, r4
 801ddaa:	555a      	strb	r2, [r3, r5]
 801ddac:	b002      	add	sp, #8
 801ddae:	bd70      	pop	{r4, r5, r6, pc}
 801ddb0:	9200      	str	r2, [sp, #0]
 801ddb2:	460b      	mov	r3, r1
 801ddb4:	2200      	movs	r2, #0
 801ddb6:	4601      	mov	r1, r0
 801ddb8:	4620      	mov	r0, r4
 801ddba:	f7ff fe2a 	bl	801da12 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 801ddbe:	e7f0      	b.n	801dda2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>

0801ddc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>:
 801ddc0:	b570      	push	{r4, r5, r6, lr}
 801ddc2:	4b06      	ldr	r3, [pc, #24]	; (801dddc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj+0x1c>)
 801ddc4:	4604      	mov	r4, r0
 801ddc6:	460d      	mov	r5, r1
 801ddc8:	4616      	mov	r6, r2
 801ddca:	2100      	movs	r1, #0
 801ddcc:	f7ff fdbc 	bl	801d948 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 801ddd0:	4632      	mov	r2, r6
 801ddd2:	4629      	mov	r1, r5
 801ddd4:	4620      	mov	r0, r4
 801ddd6:	f7ff ffd1 	bl	801dd7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 801ddda:	bd70      	pop	{r4, r5, r6, pc}
 801dddc:	0802f684 	.word	0x0802f684

0801dde0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj>:
 801dde0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801dde4:	4607      	mov	r7, r0
 801dde6:	4691      	mov	r9, r2
 801dde8:	4688      	mov	r8, r1
 801ddea:	4a0a      	ldr	r2, [pc, #40]	; (801de14 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x34>)
 801ddec:	4619      	mov	r1, r3
 801ddee:	461e      	mov	r6, r3
 801ddf0:	f7ff fd9c 	bl	801d92c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>
 801ddf4:	687d      	ldr	r5, [r7, #4]
 801ddf6:	1bac      	subs	r4, r5, r6
 801ddf8:	454c      	cmp	r4, r9
 801ddfa:	bf28      	it	cs
 801ddfc:	464c      	movcs	r4, r9
 801ddfe:	b12c      	cbz	r4, 801de0c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj+0x2c>
 801de00:	6839      	ldr	r1, [r7, #0]
 801de02:	4622      	mov	r2, r4
 801de04:	4431      	add	r1, r6
 801de06:	4640      	mov	r0, r8
 801de08:	f7ff fdb6 	bl	801d978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 801de0c:	4620      	mov	r0, r4
 801de0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801de12:	bf00      	nop
 801de14:	0802f613 	.word	0x0802f613

0801de18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_>:
 801de18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801de1c:	4288      	cmp	r0, r1
 801de1e:	b085      	sub	sp, #20
 801de20:	4605      	mov	r5, r0
 801de22:	460c      	mov	r4, r1
 801de24:	d036      	beq.n	801de94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x7c>
 801de26:	4607      	mov	r7, r0
 801de28:	460e      	mov	r6, r1
 801de2a:	f857 2b08 	ldr.w	r2, [r7], #8
 801de2e:	f856 3b08 	ldr.w	r3, [r6], #8
 801de32:	4297      	cmp	r7, r2
 801de34:	d14a      	bne.n	801decc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0xb4>
 801de36:	429e      	cmp	r6, r3
 801de38:	d13b      	bne.n	801deb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x9a>
 801de3a:	f8d0 9004 	ldr.w	r9, [r0, #4]
 801de3e:	f8d1 8004 	ldr.w	r8, [r1, #4]
 801de42:	f1b9 0f00 	cmp.w	r9, #0
 801de46:	d016      	beq.n	801de76 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x5e>
 801de48:	2210      	movs	r2, #16
 801de4a:	f1b8 0f00 	cmp.w	r8, #0
 801de4e:	d024      	beq.n	801de9a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x82>
 801de50:	4631      	mov	r1, r6
 801de52:	4668      	mov	r0, sp
 801de54:	f7ff fd3c 	bl	801d8d0 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>
 801de58:	2210      	movs	r2, #16
 801de5a:	4639      	mov	r1, r7
 801de5c:	4630      	mov	r0, r6
 801de5e:	f7ff fd37 	bl	801d8d0 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>
 801de62:	2210      	movs	r2, #16
 801de64:	4669      	mov	r1, sp
 801de66:	4638      	mov	r0, r7
 801de68:	f7ff fd32 	bl	801d8d0 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>
 801de6c:	686b      	ldr	r3, [r5, #4]
 801de6e:	6862      	ldr	r2, [r4, #4]
 801de70:	606a      	str	r2, [r5, #4]
 801de72:	6063      	str	r3, [r4, #4]
 801de74:	e00e      	b.n	801de94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x7c>
 801de76:	f1b8 0f00 	cmp.w	r8, #0
 801de7a:	d0f7      	beq.n	801de6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x54>
 801de7c:	2210      	movs	r2, #16
 801de7e:	4631      	mov	r1, r6
 801de80:	4638      	mov	r0, r7
 801de82:	f7ff fd25 	bl	801d8d0 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>
 801de86:	6863      	ldr	r3, [r4, #4]
 801de88:	606b      	str	r3, [r5, #4]
 801de8a:	6823      	ldr	r3, [r4, #0]
 801de8c:	f8c4 9004 	str.w	r9, [r4, #4]
 801de90:	f883 9000 	strb.w	r9, [r3]
 801de94:	b005      	add	sp, #20
 801de96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801de9a:	4639      	mov	r1, r7
 801de9c:	4630      	mov	r0, r6
 801de9e:	f7ff fd17 	bl	801d8d0 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>
 801dea2:	686b      	ldr	r3, [r5, #4]
 801dea4:	6063      	str	r3, [r4, #4]
 801dea6:	682b      	ldr	r3, [r5, #0]
 801dea8:	f8c5 8004 	str.w	r8, [r5, #4]
 801deac:	f883 8000 	strb.w	r8, [r3]
 801deb0:	e7f0      	b.n	801de94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x7c>
 801deb2:	f8d1 8008 	ldr.w	r8, [r1, #8]
 801deb6:	2210      	movs	r2, #16
 801deb8:	4639      	mov	r1, r7
 801deba:	4630      	mov	r0, r6
 801debc:	f7ff fd08 	bl	801d8d0 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>
 801dec0:	6823      	ldr	r3, [r4, #0]
 801dec2:	602b      	str	r3, [r5, #0]
 801dec4:	6026      	str	r6, [r4, #0]
 801dec6:	f8c5 8008 	str.w	r8, [r5, #8]
 801deca:	e7cf      	b.n	801de6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x54>
 801decc:	429e      	cmp	r6, r3
 801dece:	f8d0 8008 	ldr.w	r8, [r0, #8]
 801ded2:	d10a      	bne.n	801deea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0xd2>
 801ded4:	2210      	movs	r2, #16
 801ded6:	4631      	mov	r1, r6
 801ded8:	4638      	mov	r0, r7
 801deda:	f7ff fcf9 	bl	801d8d0 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>
 801dede:	682b      	ldr	r3, [r5, #0]
 801dee0:	6023      	str	r3, [r4, #0]
 801dee2:	602f      	str	r7, [r5, #0]
 801dee4:	f8c4 8008 	str.w	r8, [r4, #8]
 801dee8:	e7c0      	b.n	801de6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0x54>
 801deea:	6003      	str	r3, [r0, #0]
 801deec:	688b      	ldr	r3, [r1, #8]
 801deee:	600a      	str	r2, [r1, #0]
 801def0:	6083      	str	r3, [r0, #8]
 801def2:	e7f7      	b.n	801dee4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_+0xcc>

0801def4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj>:
 801def4:	b510      	push	{r4, lr}
 801def6:	6843      	ldr	r3, [r0, #4]
 801def8:	429a      	cmp	r2, r3
 801defa:	d205      	bcs.n	801df08 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x14>
 801defc:	6804      	ldr	r4, [r0, #0]
 801defe:	5ca4      	ldrb	r4, [r4, r2]
 801df00:	428c      	cmp	r4, r1
 801df02:	d103      	bne.n	801df0c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x18>
 801df04:	3201      	adds	r2, #1
 801df06:	e7f7      	b.n	801def8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj+0x4>
 801df08:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801df0c:	4610      	mov	r0, r2
 801df0e:	bd10      	pop	{r4, pc}

0801df10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
 801df10:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801df12:	4604      	mov	r4, r0
 801df14:	4616      	mov	r6, r2
 801df16:	460d      	mov	r5, r1
 801df18:	b919      	cbnz	r1, 801df22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x12>
 801df1a:	b112      	cbz	r2, 801df22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x12>
 801df1c:	480d      	ldr	r0, [pc, #52]	; (801df54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x44>)
 801df1e:	f7f9 fc85 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 801df22:	1b73      	subs	r3, r6, r5
 801df24:	2b0f      	cmp	r3, #15
 801df26:	9301      	str	r3, [sp, #4]
 801df28:	d907      	bls.n	801df3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x2a>
 801df2a:	2200      	movs	r2, #0
 801df2c:	a901      	add	r1, sp, #4
 801df2e:	4620      	mov	r0, r4
 801df30:	f7ff fcd2 	bl	801d8d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 801df34:	9b01      	ldr	r3, [sp, #4]
 801df36:	6020      	str	r0, [r4, #0]
 801df38:	60a3      	str	r3, [r4, #8]
 801df3a:	4632      	mov	r2, r6
 801df3c:	4629      	mov	r1, r5
 801df3e:	6820      	ldr	r0, [r4, #0]
 801df40:	f7ff fd5d 	bl	801d9fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>
 801df44:	9b01      	ldr	r3, [sp, #4]
 801df46:	6822      	ldr	r2, [r4, #0]
 801df48:	6063      	str	r3, [r4, #4]
 801df4a:	2100      	movs	r1, #0
 801df4c:	54d1      	strb	r1, [r2, r3]
 801df4e:	b002      	add	sp, #8
 801df50:	bd70      	pop	{r4, r5, r6, pc}
 801df52:	bf00      	nop
 801df54:	0802f810 	.word	0x0802f810

0801df58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>:
 801df58:	b538      	push	{r3, r4, r5, lr}
 801df5a:	f100 0308 	add.w	r3, r0, #8
 801df5e:	6003      	str	r3, [r0, #0]
 801df60:	e9d1 5200 	ldrd	r5, r2, [r1]
 801df64:	4604      	mov	r4, r0
 801df66:	f04f 0300 	mov.w	r3, #0
 801df6a:	442a      	add	r2, r5
 801df6c:	4629      	mov	r1, r5
 801df6e:	f7ff ffcf 	bl	801df10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
 801df72:	4620      	mov	r0, r4
 801df74:	bd38      	pop	{r3, r4, r5, pc}
	...

0801df78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
 801df78:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801df7a:	4604      	mov	r4, r0
 801df7c:	4616      	mov	r6, r2
 801df7e:	460d      	mov	r5, r1
 801df80:	b919      	cbnz	r1, 801df8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x12>
 801df82:	b112      	cbz	r2, 801df8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x12>
 801df84:	480d      	ldr	r0, [pc, #52]	; (801dfbc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x44>)
 801df86:	f7f9 fc51 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 801df8a:	1b73      	subs	r3, r6, r5
 801df8c:	2b0f      	cmp	r3, #15
 801df8e:	9301      	str	r3, [sp, #4]
 801df90:	d907      	bls.n	801dfa2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x2a>
 801df92:	2200      	movs	r2, #0
 801df94:	a901      	add	r1, sp, #4
 801df96:	4620      	mov	r0, r4
 801df98:	f7ff fc9e 	bl	801d8d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 801df9c:	9b01      	ldr	r3, [sp, #4]
 801df9e:	6020      	str	r0, [r4, #0]
 801dfa0:	60a3      	str	r3, [r4, #8]
 801dfa2:	4632      	mov	r2, r6
 801dfa4:	4629      	mov	r1, r5
 801dfa6:	6820      	ldr	r0, [r4, #0]
 801dfa8:	f7ff fd2e 	bl	801da08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
 801dfac:	9b01      	ldr	r3, [sp, #4]
 801dfae:	6822      	ldr	r2, [r4, #0]
 801dfb0:	6063      	str	r3, [r4, #4]
 801dfb2:	2100      	movs	r1, #0
 801dfb4:	54d1      	strb	r1, [r2, r3]
 801dfb6:	b002      	add	sp, #8
 801dfb8:	bd70      	pop	{r4, r5, r6, pc}
 801dfba:	bf00      	nop
 801dfbc:	0802f810 	.word	0x0802f810

0801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>:
 801dfc0:	b538      	push	{r3, r4, r5, lr}
 801dfc2:	f100 0308 	add.w	r3, r0, #8
 801dfc6:	4604      	mov	r4, r0
 801dfc8:	6003      	str	r3, [r0, #0]
 801dfca:	460d      	mov	r5, r1
 801dfcc:	b159      	cbz	r1, 801dfe6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x26>
 801dfce:	4608      	mov	r0, r1
 801dfd0:	f7e2 f958 	bl	8000284 <strlen>
 801dfd4:	182a      	adds	r2, r5, r0
 801dfd6:	4620      	mov	r0, r4
 801dfd8:	f04f 0300 	mov.w	r3, #0
 801dfdc:	4629      	mov	r1, r5
 801dfde:	f7ff ffcb 	bl	801df78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
 801dfe2:	4620      	mov	r0, r4
 801dfe4:	bd38      	pop	{r3, r4, r5, pc}
 801dfe6:	2201      	movs	r2, #1
 801dfe8:	e7f5      	b.n	801dfd6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x16>

0801dfea <_ZNKSt10moneypunctIwLb0EE16do_decimal_pointEv>:
 801dfea:	6883      	ldr	r3, [r0, #8]
 801dfec:	6958      	ldr	r0, [r3, #20]
 801dfee:	4770      	bx	lr

0801dff0 <_ZNKSt10moneypunctIwLb0EE16do_thousands_sepEv>:
 801dff0:	6883      	ldr	r3, [r0, #8]
 801dff2:	6998      	ldr	r0, [r3, #24]
 801dff4:	4770      	bx	lr

0801dff6 <_ZNKSt10moneypunctIwLb0EE14do_frac_digitsEv>:
 801dff6:	6883      	ldr	r3, [r0, #8]
 801dff8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 801dffa:	4770      	bx	lr

0801dffc <_ZNKSt10moneypunctIwLb0EE13do_pos_formatEv>:
 801dffc:	6883      	ldr	r3, [r0, #8]
 801dffe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e000:	2000      	movs	r0, #0
 801e002:	b2da      	uxtb	r2, r3
 801e004:	f362 0007 	bfi	r0, r2, #0, #8
 801e008:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801e00c:	f362 200f 	bfi	r0, r2, #8, #8
 801e010:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801e014:	f362 4017 	bfi	r0, r2, #16, #8
 801e018:	0e1b      	lsrs	r3, r3, #24
 801e01a:	b082      	sub	sp, #8
 801e01c:	f363 601f 	bfi	r0, r3, #24, #8
 801e020:	b002      	add	sp, #8
 801e022:	4770      	bx	lr

0801e024 <_ZNKSt10moneypunctIwLb0EE13do_neg_formatEv>:
 801e024:	6883      	ldr	r3, [r0, #8]
 801e026:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801e028:	2000      	movs	r0, #0
 801e02a:	b2da      	uxtb	r2, r3
 801e02c:	f362 0007 	bfi	r0, r2, #0, #8
 801e030:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801e034:	f362 200f 	bfi	r0, r2, #8, #8
 801e038:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801e03c:	f362 4017 	bfi	r0, r2, #16, #8
 801e040:	0e1b      	lsrs	r3, r3, #24
 801e042:	b082      	sub	sp, #8
 801e044:	f363 601f 	bfi	r0, r3, #24, #8
 801e048:	b002      	add	sp, #8
 801e04a:	4770      	bx	lr

0801e04c <_ZNKSt10moneypunctIwLb1EE16do_decimal_pointEv>:
 801e04c:	6883      	ldr	r3, [r0, #8]
 801e04e:	6958      	ldr	r0, [r3, #20]
 801e050:	4770      	bx	lr

0801e052 <_ZNKSt10moneypunctIwLb1EE16do_thousands_sepEv>:
 801e052:	6883      	ldr	r3, [r0, #8]
 801e054:	6998      	ldr	r0, [r3, #24]
 801e056:	4770      	bx	lr

0801e058 <_ZNKSt10moneypunctIwLb1EE14do_frac_digitsEv>:
 801e058:	6883      	ldr	r3, [r0, #8]
 801e05a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 801e05c:	4770      	bx	lr

0801e05e <_ZNKSt10moneypunctIwLb1EE13do_pos_formatEv>:
 801e05e:	6883      	ldr	r3, [r0, #8]
 801e060:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e062:	2000      	movs	r0, #0
 801e064:	b2da      	uxtb	r2, r3
 801e066:	f362 0007 	bfi	r0, r2, #0, #8
 801e06a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801e06e:	f362 200f 	bfi	r0, r2, #8, #8
 801e072:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801e076:	f362 4017 	bfi	r0, r2, #16, #8
 801e07a:	0e1b      	lsrs	r3, r3, #24
 801e07c:	b082      	sub	sp, #8
 801e07e:	f363 601f 	bfi	r0, r3, #24, #8
 801e082:	b002      	add	sp, #8
 801e084:	4770      	bx	lr

0801e086 <_ZNKSt10moneypunctIwLb1EE13do_neg_formatEv>:
 801e086:	6883      	ldr	r3, [r0, #8]
 801e088:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801e08a:	2000      	movs	r0, #0
 801e08c:	b2da      	uxtb	r2, r3
 801e08e:	f362 0007 	bfi	r0, r2, #0, #8
 801e092:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801e096:	f362 200f 	bfi	r0, r2, #8, #8
 801e09a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801e09e:	f362 4017 	bfi	r0, r2, #16, #8
 801e0a2:	0e1b      	lsrs	r3, r3, #24
 801e0a4:	b082      	sub	sp, #8
 801e0a6:	f363 601f 	bfi	r0, r3, #24, #8
 801e0aa:	b002      	add	sp, #8
 801e0ac:	4770      	bx	lr

0801e0ae <_ZNKSt8numpunctIwE16do_decimal_pointEv>:
 801e0ae:	6883      	ldr	r3, [r0, #8]
 801e0b0:	6a58      	ldr	r0, [r3, #36]	; 0x24
 801e0b2:	4770      	bx	lr

0801e0b4 <_ZNKSt8numpunctIwE16do_thousands_sepEv>:
 801e0b4:	6883      	ldr	r3, [r0, #8]
 801e0b6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 801e0b8:	4770      	bx	lr

0801e0ba <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE13do_date_orderEv>:
 801e0ba:	2000      	movs	r0, #0
 801e0bc:	4770      	bx	lr

0801e0be <_ZNKSt8messagesIwE7do_openERKSsRKSt6locale>:
 801e0be:	2000      	movs	r0, #0
 801e0c0:	4770      	bx	lr

0801e0c2 <_ZNKSt8messagesIwE8do_closeEi>:
 801e0c2:	4770      	bx	lr

0801e0c4 <_ZNKSt7collateIwE7do_hashEPKwS2_>:
 801e0c4:	2000      	movs	r0, #0
 801e0c6:	4291      	cmp	r1, r2
 801e0c8:	d204      	bcs.n	801e0d4 <_ZNKSt7collateIwE7do_hashEPKwS2_+0x10>
 801e0ca:	f851 3b04 	ldr.w	r3, [r1], #4
 801e0ce:	eb03 6070 	add.w	r0, r3, r0, ror #25
 801e0d2:	e7f8      	b.n	801e0c6 <_ZNKSt7collateIwE7do_hashEPKwS2_+0x2>
 801e0d4:	4770      	bx	lr

0801e0d6 <_ZNKSt10moneypunctIwLb0EE11do_groupingEv>:
 801e0d6:	b513      	push	{r0, r1, r4, lr}
 801e0d8:	688b      	ldr	r3, [r1, #8]
 801e0da:	aa01      	add	r2, sp, #4
 801e0dc:	6899      	ldr	r1, [r3, #8]
 801e0de:	4604      	mov	r4, r0
 801e0e0:	f7f2 fa05 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 801e0e4:	4620      	mov	r0, r4
 801e0e6:	b002      	add	sp, #8
 801e0e8:	bd10      	pop	{r4, pc}

0801e0ea <_ZNKSt10moneypunctIwLb1EE11do_groupingEv>:
 801e0ea:	b513      	push	{r0, r1, r4, lr}
 801e0ec:	688b      	ldr	r3, [r1, #8]
 801e0ee:	aa01      	add	r2, sp, #4
 801e0f0:	6899      	ldr	r1, [r3, #8]
 801e0f2:	4604      	mov	r4, r0
 801e0f4:	f7f2 f9fb 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 801e0f8:	4620      	mov	r0, r4
 801e0fa:	b002      	add	sp, #8
 801e0fc:	bd10      	pop	{r4, pc}

0801e0fe <_ZNKSt8numpunctIwE11do_groupingEv>:
 801e0fe:	b513      	push	{r0, r1, r4, lr}
 801e100:	688b      	ldr	r3, [r1, #8]
 801e102:	aa01      	add	r2, sp, #4
 801e104:	6899      	ldr	r1, [r3, #8]
 801e106:	4604      	mov	r4, r0
 801e108:	f7f2 f9f1 	bl	80104ee <_ZNSsC1EPKcRKSaIcE>
 801e10c:	4620      	mov	r0, r4
 801e10e:	b002      	add	sp, #8
 801e110:	bd10      	pop	{r4, pc}

0801e112 <_ZNKSt10moneypunctIwLb0EE14do_curr_symbolEv>:
 801e112:	b513      	push	{r0, r1, r4, lr}
 801e114:	688b      	ldr	r3, [r1, #8]
 801e116:	aa01      	add	r2, sp, #4
 801e118:	69d9      	ldr	r1, [r3, #28]
 801e11a:	4604      	mov	r4, r0
 801e11c:	f7f2 fd6c 	bl	8010bf8 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_>
 801e120:	4620      	mov	r0, r4
 801e122:	b002      	add	sp, #8
 801e124:	bd10      	pop	{r4, pc}

0801e126 <_ZNKSt10moneypunctIwLb0EE16do_positive_signEv>:
 801e126:	b513      	push	{r0, r1, r4, lr}
 801e128:	688b      	ldr	r3, [r1, #8]
 801e12a:	aa01      	add	r2, sp, #4
 801e12c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 801e12e:	4604      	mov	r4, r0
 801e130:	f7f2 fd62 	bl	8010bf8 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_>
 801e134:	4620      	mov	r0, r4
 801e136:	b002      	add	sp, #8
 801e138:	bd10      	pop	{r4, pc}

0801e13a <_ZNKSt10moneypunctIwLb0EE16do_negative_signEv>:
 801e13a:	b513      	push	{r0, r1, r4, lr}
 801e13c:	688b      	ldr	r3, [r1, #8]
 801e13e:	aa01      	add	r2, sp, #4
 801e140:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 801e142:	4604      	mov	r4, r0
 801e144:	f7f2 fd58 	bl	8010bf8 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_>
 801e148:	4620      	mov	r0, r4
 801e14a:	b002      	add	sp, #8
 801e14c:	bd10      	pop	{r4, pc}

0801e14e <_ZNKSt10moneypunctIwLb1EE14do_curr_symbolEv>:
 801e14e:	b513      	push	{r0, r1, r4, lr}
 801e150:	688b      	ldr	r3, [r1, #8]
 801e152:	aa01      	add	r2, sp, #4
 801e154:	69d9      	ldr	r1, [r3, #28]
 801e156:	4604      	mov	r4, r0
 801e158:	f7f2 fd4e 	bl	8010bf8 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_>
 801e15c:	4620      	mov	r0, r4
 801e15e:	b002      	add	sp, #8
 801e160:	bd10      	pop	{r4, pc}

0801e162 <_ZNKSt10moneypunctIwLb1EE16do_positive_signEv>:
 801e162:	b513      	push	{r0, r1, r4, lr}
 801e164:	688b      	ldr	r3, [r1, #8]
 801e166:	aa01      	add	r2, sp, #4
 801e168:	6a59      	ldr	r1, [r3, #36]	; 0x24
 801e16a:	4604      	mov	r4, r0
 801e16c:	f7f2 fd44 	bl	8010bf8 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_>
 801e170:	4620      	mov	r0, r4
 801e172:	b002      	add	sp, #8
 801e174:	bd10      	pop	{r4, pc}

0801e176 <_ZNKSt10moneypunctIwLb1EE16do_negative_signEv>:
 801e176:	b513      	push	{r0, r1, r4, lr}
 801e178:	688b      	ldr	r3, [r1, #8]
 801e17a:	aa01      	add	r2, sp, #4
 801e17c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 801e17e:	4604      	mov	r4, r0
 801e180:	f7f2 fd3a 	bl	8010bf8 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_>
 801e184:	4620      	mov	r0, r4
 801e186:	b002      	add	sp, #8
 801e188:	bd10      	pop	{r4, pc}

0801e18a <_ZNKSt8numpunctIwE11do_truenameEv>:
 801e18a:	b513      	push	{r0, r1, r4, lr}
 801e18c:	688b      	ldr	r3, [r1, #8]
 801e18e:	aa01      	add	r2, sp, #4
 801e190:	6959      	ldr	r1, [r3, #20]
 801e192:	4604      	mov	r4, r0
 801e194:	f7f2 fd30 	bl	8010bf8 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_>
 801e198:	4620      	mov	r0, r4
 801e19a:	b002      	add	sp, #8
 801e19c:	bd10      	pop	{r4, pc}

0801e19e <_ZNKSt8numpunctIwE12do_falsenameEv>:
 801e19e:	b513      	push	{r0, r1, r4, lr}
 801e1a0:	688b      	ldr	r3, [r1, #8]
 801e1a2:	aa01      	add	r2, sp, #4
 801e1a4:	69d9      	ldr	r1, [r3, #28]
 801e1a6:	4604      	mov	r4, r0
 801e1a8:	f7f2 fd26 	bl	8010bf8 <_ZNSbIwSt11char_traitsIwESaIwEEC1EPKwRKS1_>
 801e1ac:	4620      	mov	r0, r4
 801e1ae:	b002      	add	sp, #8
 801e1b0:	bd10      	pop	{r4, pc}
	...

0801e1b4 <_ZNSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>:
 801e1b4:	b510      	push	{r4, lr}
 801e1b6:	4b03      	ldr	r3, [pc, #12]	; (801e1c4 <_ZNSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev+0x10>)
 801e1b8:	6003      	str	r3, [r0, #0]
 801e1ba:	4604      	mov	r4, r0
 801e1bc:	f7ee f86c 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 801e1c0:	4620      	mov	r0, r4
 801e1c2:	bd10      	pop	{r4, pc}
 801e1c4:	0803127c 	.word	0x0803127c

0801e1c8 <_ZNSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev>:
 801e1c8:	b510      	push	{r4, lr}
 801e1ca:	4b03      	ldr	r3, [pc, #12]	; (801e1d8 <_ZNSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev+0x10>)
 801e1cc:	6003      	str	r3, [r0, #0]
 801e1ce:	4604      	mov	r4, r0
 801e1d0:	f7ee f862 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 801e1d4:	4620      	mov	r0, r4
 801e1d6:	bd10      	pop	{r4, pc}
 801e1d8:	08031294 	.word	0x08031294

0801e1dc <_ZNSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>:
 801e1dc:	b510      	push	{r4, lr}
 801e1de:	4b03      	ldr	r3, [pc, #12]	; (801e1ec <_ZNSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev+0x10>)
 801e1e0:	6003      	str	r3, [r0, #0]
 801e1e2:	4604      	mov	r4, r0
 801e1e4:	f7ee f858 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 801e1e8:	4620      	mov	r0, r4
 801e1ea:	bd10      	pop	{r4, pc}
 801e1ec:	08031140 	.word	0x08031140

0801e1f0 <_ZNSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev>:
 801e1f0:	b510      	push	{r4, lr}
 801e1f2:	4b03      	ldr	r3, [pc, #12]	; (801e200 <_ZNSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev+0x10>)
 801e1f4:	6003      	str	r3, [r0, #0]
 801e1f6:	4604      	mov	r4, r0
 801e1f8:	f7ee f84e 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 801e1fc:	4620      	mov	r0, r4
 801e1fe:	bd10      	pop	{r4, pc}
 801e200:	0803117c 	.word	0x0803117c

0801e204 <_ZNSt17__timepunct_cacheIwED1Ev>:
 801e204:	b510      	push	{r4, lr}
 801e206:	4b03      	ldr	r3, [pc, #12]	; (801e214 <_ZNSt17__timepunct_cacheIwED1Ev+0x10>)
 801e208:	6003      	str	r3, [r0, #0]
 801e20a:	4604      	mov	r4, r0
 801e20c:	f7ee f844 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 801e210:	4620      	mov	r0, r4
 801e212:	bd10      	pop	{r4, pc}
 801e214:	080311ac 	.word	0x080311ac

0801e218 <_ZNSt8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev>:
 801e218:	b510      	push	{r4, lr}
 801e21a:	4b03      	ldr	r3, [pc, #12]	; (801e228 <_ZNSt8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev+0x10>)
 801e21c:	6003      	str	r3, [r0, #0]
 801e21e:	4604      	mov	r4, r0
 801e220:	f7ee f83a 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 801e224:	4620      	mov	r0, r4
 801e226:	bd10      	pop	{r4, pc}
 801e228:	080312ac 	.word	0x080312ac

0801e22c <_ZNSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>:
 801e22c:	b510      	push	{r4, lr}
 801e22e:	4b03      	ldr	r3, [pc, #12]	; (801e23c <_ZNSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev+0x10>)
 801e230:	6003      	str	r3, [r0, #0]
 801e232:	4604      	mov	r4, r0
 801e234:	f7ee f830 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 801e238:	4620      	mov	r0, r4
 801e23a:	bd10      	pop	{r4, pc}
 801e23c:	080312c0 	.word	0x080312c0

0801e240 <_ZNSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED0Ev>:
 801e240:	b510      	push	{r4, lr}
 801e242:	4604      	mov	r4, r0
 801e244:	f7ff ffb6 	bl	801e1b4 <_ZNSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 801e248:	4620      	mov	r0, r4
 801e24a:	f005 fe3f 	bl	8023ecc <_ZdlPv>
 801e24e:	4620      	mov	r0, r4
 801e250:	bd10      	pop	{r4, pc}

0801e252 <_ZNSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED0Ev>:
 801e252:	b510      	push	{r4, lr}
 801e254:	4604      	mov	r4, r0
 801e256:	f7ff ffb7 	bl	801e1c8 <_ZNSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 801e25a:	4620      	mov	r0, r4
 801e25c:	f005 fe36 	bl	8023ecc <_ZdlPv>
 801e260:	4620      	mov	r0, r4
 801e262:	bd10      	pop	{r4, pc}

0801e264 <_ZNSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED0Ev>:
 801e264:	b510      	push	{r4, lr}
 801e266:	4604      	mov	r4, r0
 801e268:	f7ff ffb8 	bl	801e1dc <_ZNSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 801e26c:	4620      	mov	r0, r4
 801e26e:	f005 fe2d 	bl	8023ecc <_ZdlPv>
 801e272:	4620      	mov	r0, r4
 801e274:	bd10      	pop	{r4, pc}

0801e276 <_ZNSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED0Ev>:
 801e276:	b510      	push	{r4, lr}
 801e278:	4604      	mov	r4, r0
 801e27a:	f7ff ffb9 	bl	801e1f0 <_ZNSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 801e27e:	4620      	mov	r0, r4
 801e280:	f005 fe24 	bl	8023ecc <_ZdlPv>
 801e284:	4620      	mov	r0, r4
 801e286:	bd10      	pop	{r4, pc}

0801e288 <_ZNSt17__timepunct_cacheIwED0Ev>:
 801e288:	b510      	push	{r4, lr}
 801e28a:	4604      	mov	r4, r0
 801e28c:	f7ff ffba 	bl	801e204 <_ZNSt17__timepunct_cacheIwED1Ev>
 801e290:	4620      	mov	r0, r4
 801e292:	f005 fe1b 	bl	8023ecc <_ZdlPv>
 801e296:	4620      	mov	r0, r4
 801e298:	bd10      	pop	{r4, pc}

0801e29a <_ZNSt8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED0Ev>:
 801e29a:	b510      	push	{r4, lr}
 801e29c:	4604      	mov	r4, r0
 801e29e:	f7ff ffbb 	bl	801e218 <_ZNSt8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 801e2a2:	4620      	mov	r0, r4
 801e2a4:	f005 fe12 	bl	8023ecc <_ZdlPv>
 801e2a8:	4620      	mov	r0, r4
 801e2aa:	bd10      	pop	{r4, pc}

0801e2ac <_ZNSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED0Ev>:
 801e2ac:	b510      	push	{r4, lr}
 801e2ae:	4604      	mov	r4, r0
 801e2b0:	f7ff ffbc 	bl	801e22c <_ZNSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEED1Ev>
 801e2b4:	4620      	mov	r0, r4
 801e2b6:	f005 fe09 	bl	8023ecc <_ZdlPv>
 801e2ba:	4620      	mov	r0, r4
 801e2bc:	bd10      	pop	{r4, pc}
	...

0801e2c0 <_ZNSt8messagesIwED1Ev>:
 801e2c0:	b510      	push	{r4, lr}
 801e2c2:	4b05      	ldr	r3, [pc, #20]	; (801e2d8 <_ZNSt8messagesIwED1Ev+0x18>)
 801e2c4:	4604      	mov	r4, r0
 801e2c6:	f840 3b08 	str.w	r3, [r0], #8
 801e2ca:	f006 fa65 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 801e2ce:	4620      	mov	r0, r4
 801e2d0:	f7ed ffe2 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 801e2d4:	4620      	mov	r0, r4
 801e2d6:	bd10      	pop	{r4, pc}
 801e2d8:	08031234 	.word	0x08031234

0801e2dc <_ZNSt8messagesIwED0Ev>:
 801e2dc:	b510      	push	{r4, lr}
 801e2de:	4604      	mov	r4, r0
 801e2e0:	f7ff ffee 	bl	801e2c0 <_ZNSt8messagesIwED1Ev>
 801e2e4:	4620      	mov	r0, r4
 801e2e6:	f005 fdf1 	bl	8023ecc <_ZdlPv>
 801e2ea:	4620      	mov	r0, r4
 801e2ec:	bd10      	pop	{r4, pc}
	...

0801e2f0 <_ZNSt7collateIwED1Ev>:
 801e2f0:	b510      	push	{r4, lr}
 801e2f2:	4b05      	ldr	r3, [pc, #20]	; (801e308 <_ZNSt7collateIwED1Ev+0x18>)
 801e2f4:	4604      	mov	r4, r0
 801e2f6:	f840 3b08 	str.w	r3, [r0], #8
 801e2fa:	f006 fa4d 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 801e2fe:	4620      	mov	r0, r4
 801e300:	f7ed ffca 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 801e304:	4620      	mov	r0, r4
 801e306:	bd10      	pop	{r4, pc}
 801e308:	080310c0 	.word	0x080310c0

0801e30c <_ZNSt7collateIwED0Ev>:
 801e30c:	b510      	push	{r4, lr}
 801e30e:	4604      	mov	r4, r0
 801e310:	f7ff ffee 	bl	801e2f0 <_ZNSt7collateIwED1Ev>
 801e314:	4620      	mov	r0, r4
 801e316:	f005 fdd9 	bl	8023ecc <_ZdlPv>
 801e31a:	4620      	mov	r0, r4
 801e31c:	bd10      	pop	{r4, pc}
	...

0801e320 <_ZNSt11__timepunctIwED1Ev>:
 801e320:	b538      	push	{r3, r4, r5, lr}
 801e322:	4b0d      	ldr	r3, [pc, #52]	; (801e358 <_ZNSt11__timepunctIwED1Ev+0x38>)
 801e324:	6003      	str	r3, [r0, #0]
 801e326:	6905      	ldr	r5, [r0, #16]
 801e328:	4604      	mov	r4, r0
 801e32a:	f7ed ffe1 	bl	800c2f0 <_ZNSt6locale5facet13_S_get_c_nameEv>
 801e32e:	4285      	cmp	r5, r0
 801e330:	d003      	beq.n	801e33a <_ZNSt11__timepunctIwED1Ev+0x1a>
 801e332:	b115      	cbz	r5, 801e33a <_ZNSt11__timepunctIwED1Ev+0x1a>
 801e334:	4628      	mov	r0, r5
 801e336:	f005 fdcb 	bl	8023ed0 <_ZdaPv>
 801e33a:	68a0      	ldr	r0, [r4, #8]
 801e33c:	b110      	cbz	r0, 801e344 <_ZNSt11__timepunctIwED1Ev+0x24>
 801e33e:	6803      	ldr	r3, [r0, #0]
 801e340:	685b      	ldr	r3, [r3, #4]
 801e342:	4798      	blx	r3
 801e344:	f104 000c 	add.w	r0, r4, #12
 801e348:	f006 fa26 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 801e34c:	4620      	mov	r0, r4
 801e34e:	f7ed ffa3 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 801e352:	4620      	mov	r0, r4
 801e354:	bd38      	pop	{r3, r4, r5, pc}
 801e356:	bf00      	nop
 801e358:	080311bc 	.word	0x080311bc

0801e35c <_ZNSt11__timepunctIwED0Ev>:
 801e35c:	b510      	push	{r4, lr}
 801e35e:	4604      	mov	r4, r0
 801e360:	f7ff ffde 	bl	801e320 <_ZNSt11__timepunctIwED1Ev>
 801e364:	4620      	mov	r0, r4
 801e366:	f005 fdb1 	bl	8023ecc <_ZdlPv>
 801e36a:	4620      	mov	r0, r4
 801e36c:	bd10      	pop	{r4, pc}

0801e36e <_ZNKSt7collateIwE10do_compareEPKwS2_S2_S2_>:
 801e36e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e372:	b085      	sub	sp, #20
 801e374:	461c      	mov	r4, r3
 801e376:	4680      	mov	r8, r0
 801e378:	ab03      	add	r3, sp, #12
 801e37a:	a802      	add	r0, sp, #8
 801e37c:	f7f2 fc30 	bl	8010be0 <_ZNSbIwSt11char_traitsIwESaIwEEC1IPKwEET_S6_RKS1_>
 801e380:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e382:	ab01      	add	r3, sp, #4
 801e384:	4621      	mov	r1, r4
 801e386:	a803      	add	r0, sp, #12
 801e388:	f7f2 fc2a 	bl	8010be0 <_ZNSbIwSt11char_traitsIwESaIwEEC1IPKwEET_S6_RKS1_>
 801e38c:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801e390:	9d03      	ldr	r5, [sp, #12]
 801e392:	f859 7c0c 	ldr.w	r7, [r9, #-12]
 801e396:	f855 6c0c 	ldr.w	r6, [r5, #-12]
 801e39a:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 801e39e:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 801e3a2:	462a      	mov	r2, r5
 801e3a4:	4649      	mov	r1, r9
 801e3a6:	4640      	mov	r0, r8
 801e3a8:	f006 fb69 	bl	8024a7e <_ZNKSt7collateIwE10_M_compareEPKwS2_>
 801e3ac:	4604      	mov	r4, r0
 801e3ae:	b978      	cbnz	r0, 801e3d0 <_ZNKSt7collateIwE10do_compareEPKwS2_S2_S2_+0x62>
 801e3b0:	4648      	mov	r0, r9
 801e3b2:	f00c f847 	bl	802a444 <wcslen>
 801e3b6:	eb09 0980 	add.w	r9, r9, r0, lsl #2
 801e3ba:	4628      	mov	r0, r5
 801e3bc:	f00c f842 	bl	802a444 <wcslen>
 801e3c0:	454f      	cmp	r7, r9
 801e3c2:	eb05 0480 	add.w	r4, r5, r0, lsl #2
 801e3c6:	d10d      	bne.n	801e3e4 <_ZNKSt7collateIwE10do_compareEPKwS2_S2_S2_+0x76>
 801e3c8:	1b34      	subs	r4, r6, r4
 801e3ca:	bf18      	it	ne
 801e3cc:	f04f 34ff 	movne.w	r4, #4294967295	; 0xffffffff
 801e3d0:	a803      	add	r0, sp, #12
 801e3d2:	f7f2 f9c3 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801e3d6:	a802      	add	r0, sp, #8
 801e3d8:	f7f2 f9c0 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801e3dc:	4620      	mov	r0, r4
 801e3de:	b005      	add	sp, #20
 801e3e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e3e4:	42a6      	cmp	r6, r4
 801e3e6:	d003      	beq.n	801e3f0 <_ZNKSt7collateIwE10do_compareEPKwS2_S2_S2_+0x82>
 801e3e8:	f109 0904 	add.w	r9, r9, #4
 801e3ec:	1d25      	adds	r5, r4, #4
 801e3ee:	e7d8      	b.n	801e3a2 <_ZNKSt7collateIwE10do_compareEPKwS2_S2_S2_+0x34>
 801e3f0:	2401      	movs	r4, #1
 801e3f2:	e7ed      	b.n	801e3d0 <_ZNKSt7collateIwE10do_compareEPKwS2_S2_S2_+0x62>

0801e3f4 <_ZNKSt7collateIwE12do_transformEPKwS2_>:
 801e3f4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801e3f8:	4616      	mov	r6, r2
 801e3fa:	461c      	mov	r4, r3
 801e3fc:	4b29      	ldr	r3, [pc, #164]	; (801e4a4 <_ZNKSt7collateIwE12do_transformEPKwS2_+0xb0>)
 801e3fe:	6003      	str	r3, [r0, #0]
 801e400:	4622      	mov	r2, r4
 801e402:	466b      	mov	r3, sp
 801e404:	4607      	mov	r7, r0
 801e406:	4688      	mov	r8, r1
 801e408:	a801      	add	r0, sp, #4
 801e40a:	4631      	mov	r1, r6
 801e40c:	f7f2 fbe8 	bl	8010be0 <_ZNSbIwSt11char_traitsIwESaIwEEC1IPKwEET_S6_RKS1_>
 801e410:	9d01      	ldr	r5, [sp, #4]
 801e412:	f855 3c0c 	ldr.w	r3, [r5, #-12]
 801e416:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 801e41a:	4b23      	ldr	r3, [pc, #140]	; (801e4a8 <_ZNKSt7collateIwE12do_transformEPKwS2_+0xb4>)
 801e41c:	1ba2      	subs	r2, r4, r6
 801e41e:	429a      	cmp	r2, r3
 801e420:	ea4f 0662 	mov.w	r6, r2, asr #1
 801e424:	bf94      	ite	ls
 801e426:	00b0      	lslls	r0, r6, #2
 801e428:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 801e42c:	f005 fdd6 	bl	8023fdc <_Znaj>
 801e430:	f06f 4a60 	mvn.w	sl, #3758096384	; 0xe0000000
 801e434:	4604      	mov	r4, r0
 801e436:	462a      	mov	r2, r5
 801e438:	4633      	mov	r3, r6
 801e43a:	4621      	mov	r1, r4
 801e43c:	4640      	mov	r0, r8
 801e43e:	f006 fb29 	bl	8024a94 <_ZNKSt7collateIwE12_M_transformEPwPKwj>
 801e442:	4286      	cmp	r6, r0
 801e444:	4602      	mov	r2, r0
 801e446:	d812      	bhi.n	801e46e <_ZNKSt7collateIwE12do_transformEPKwS2_+0x7a>
 801e448:	1c46      	adds	r6, r0, #1
 801e44a:	4620      	mov	r0, r4
 801e44c:	f005 fd40 	bl	8023ed0 <_ZdaPv>
 801e450:	4556      	cmp	r6, sl
 801e452:	bf34      	ite	cc
 801e454:	00b0      	lslcc	r0, r6, #2
 801e456:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 801e45a:	f005 fdbf 	bl	8023fdc <_Znaj>
 801e45e:	462a      	mov	r2, r5
 801e460:	4601      	mov	r1, r0
 801e462:	4604      	mov	r4, r0
 801e464:	4633      	mov	r3, r6
 801e466:	4640      	mov	r0, r8
 801e468:	f006 fb14 	bl	8024a94 <_ZNKSt7collateIwE12_M_transformEPwPKwj>
 801e46c:	4602      	mov	r2, r0
 801e46e:	4621      	mov	r1, r4
 801e470:	4638      	mov	r0, r7
 801e472:	f7f2 fad7 	bl	8010a24 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj>
 801e476:	4628      	mov	r0, r5
 801e478:	f00b ffe4 	bl	802a444 <wcslen>
 801e47c:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 801e480:	4581      	cmp	r9, r0
 801e482:	d005      	beq.n	801e490 <_ZNKSt7collateIwE12do_transformEPKwS2_+0x9c>
 801e484:	1d05      	adds	r5, r0, #4
 801e486:	2100      	movs	r1, #0
 801e488:	4638      	mov	r0, r7
 801e48a:	f7f2 fb54 	bl	8010b36 <_ZNSbIwSt11char_traitsIwESaIwEE9push_backEw>
 801e48e:	e7d2      	b.n	801e436 <_ZNKSt7collateIwE12do_transformEPKwS2_+0x42>
 801e490:	4620      	mov	r0, r4
 801e492:	f005 fd1d 	bl	8023ed0 <_ZdaPv>
 801e496:	a801      	add	r0, sp, #4
 801e498:	f7f2 f960 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801e49c:	4638      	mov	r0, r7
 801e49e:	b002      	add	sp, #8
 801e4a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e4a4:	20003c00 	.word	0x20003c00
 801e4a8:	3ffffffc 	.word	0x3ffffffc

0801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>:
 801e4ac:	e9d0 2102 	ldrd	r2, r1, [r0, #8]
 801e4b0:	428a      	cmp	r2, r1
 801e4b2:	d202      	bcs.n	801e4ba <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0+0xe>
 801e4b4:	3204      	adds	r2, #4
 801e4b6:	6082      	str	r2, [r0, #8]
 801e4b8:	4770      	bx	lr
 801e4ba:	6803      	ldr	r3, [r0, #0]
 801e4bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e4be:	4718      	bx	r3

0801e4c0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>:
 801e4c0:	280a      	cmp	r0, #10
 801e4c2:	d807      	bhi.n	801e4d4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0+0x14>
 801e4c4:	292f      	cmp	r1, #47	; 0x2f
 801e4c6:	d917      	bls.n	801e4f8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0+0x38>
 801e4c8:	3030      	adds	r0, #48	; 0x30
 801e4ca:	4281      	cmp	r1, r0
 801e4cc:	d214      	bcs.n	801e4f8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0+0x38>
 801e4ce:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 801e4d2:	4770      	bx	lr
 801e4d4:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 801e4d8:	2809      	cmp	r0, #9
 801e4da:	d90f      	bls.n	801e4fc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0+0x3c>
 801e4dc:	f1a1 0361 	sub.w	r3, r1, #97	; 0x61
 801e4e0:	2b05      	cmp	r3, #5
 801e4e2:	d802      	bhi.n	801e4ea <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0+0x2a>
 801e4e4:	f1a1 0057 	sub.w	r0, r1, #87	; 0x57
 801e4e8:	4770      	bx	lr
 801e4ea:	f1a1 0341 	sub.w	r3, r1, #65	; 0x41
 801e4ee:	2b05      	cmp	r3, #5
 801e4f0:	d802      	bhi.n	801e4f8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0+0x38>
 801e4f2:	f1a1 0037 	sub.w	r0, r1, #55	; 0x37
 801e4f6:	4770      	bx	lr
 801e4f8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801e4fc:	4770      	bx	lr
	...

0801e500 <_ZNSs5eraseEjj.isra.0>:
 801e500:	6803      	ldr	r3, [r0, #0]
 801e502:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801e506:	4299      	cmp	r1, r3
 801e508:	b510      	push	{r4, lr}
 801e50a:	d904      	bls.n	801e516 <_ZNSs5eraseEjj.isra.0+0x16>
 801e50c:	460a      	mov	r2, r1
 801e50e:	4806      	ldr	r0, [pc, #24]	; (801e528 <_ZNSs5eraseEjj.isra.0+0x28>)
 801e510:	4906      	ldr	r1, [pc, #24]	; (801e52c <_ZNSs5eraseEjj.isra.0+0x2c>)
 801e512:	f7f9 f991 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 801e516:	1a5c      	subs	r4, r3, r1
 801e518:	42a2      	cmp	r2, r4
 801e51a:	bf28      	it	cs
 801e51c:	4622      	movcs	r2, r4
 801e51e:	2300      	movs	r3, #0
 801e520:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e524:	f7f1 bd8e 	b.w	8010044 <_ZNSs9_M_mutateEjjj>
 801e528:	0802f5dc 	.word	0x0802f5dc
 801e52c:	0802f63e 	.word	0x0802f63e

0801e530 <_ZNSbIwSt11char_traitsIwESaIwEE5eraseEjj.isra.0>:
 801e530:	6803      	ldr	r3, [r0, #0]
 801e532:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801e536:	4299      	cmp	r1, r3
 801e538:	b510      	push	{r4, lr}
 801e53a:	d904      	bls.n	801e546 <_ZNSbIwSt11char_traitsIwESaIwEE5eraseEjj.isra.0+0x16>
 801e53c:	460a      	mov	r2, r1
 801e53e:	4806      	ldr	r0, [pc, #24]	; (801e558 <_ZNSbIwSt11char_traitsIwESaIwEE5eraseEjj.isra.0+0x28>)
 801e540:	4906      	ldr	r1, [pc, #24]	; (801e55c <_ZNSbIwSt11char_traitsIwESaIwEE5eraseEjj.isra.0+0x2c>)
 801e542:	f7f9 f979 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 801e546:	1a5c      	subs	r4, r3, r1
 801e548:	42a2      	cmp	r2, r4
 801e54a:	bf28      	it	cs
 801e54c:	4622      	movcs	r2, r4
 801e54e:	2300      	movs	r3, #0
 801e550:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e554:	f7f2 b90c 	b.w	8010770 <_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEjjj>
 801e558:	0802f5dc 	.word	0x0802f5dc
 801e55c:	0802f63e 	.word	0x0802f63e

0801e560 <_ZNSt11char_traitsIwE6assignEPwjw>:
 801e560:	460b      	mov	r3, r1
 801e562:	4611      	mov	r1, r2
 801e564:	461a      	mov	r2, r3
 801e566:	b10b      	cbz	r3, 801e56c <_ZNSt11char_traitsIwE6assignEPwjw+0xc>
 801e568:	f00c b8fb 	b.w	802a762 <wmemset>
 801e56c:	4770      	bx	lr
	...

0801e570 <_ZNSt18__moneypunct_cacheIwLb0EEC1Ej>:
 801e570:	3900      	subs	r1, #0
 801e572:	4a0b      	ldr	r2, [pc, #44]	; (801e5a0 <_ZNSt18__moneypunct_cacheIwLb0EEC1Ej+0x30>)
 801e574:	6002      	str	r2, [r0, #0]
 801e576:	bf18      	it	ne
 801e578:	2101      	movne	r1, #1
 801e57a:	2200      	movs	r2, #0
 801e57c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801e580:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801e584:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801e588:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 801e58c:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 801e590:	e9c0 220d 	strd	r2, r2, [r0, #52]	; 0x34
 801e594:	6041      	str	r1, [r0, #4]
 801e596:	7402      	strb	r2, [r0, #16]
 801e598:	63c2      	str	r2, [r0, #60]	; 0x3c
 801e59a:	f880 206c 	strb.w	r2, [r0, #108]	; 0x6c
 801e59e:	4770      	bx	lr
 801e5a0:	0802ea10 	.word	0x0802ea10

0801e5a4 <_ZNSt18__moneypunct_cacheIwLb1EEC1Ej>:
 801e5a4:	3900      	subs	r1, #0
 801e5a6:	4a0b      	ldr	r2, [pc, #44]	; (801e5d4 <_ZNSt18__moneypunct_cacheIwLb1EEC1Ej+0x30>)
 801e5a8:	6002      	str	r2, [r0, #0]
 801e5aa:	bf18      	it	ne
 801e5ac:	2101      	movne	r1, #1
 801e5ae:	2200      	movs	r2, #0
 801e5b0:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801e5b4:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801e5b8:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801e5bc:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 801e5c0:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 801e5c4:	e9c0 220d 	strd	r2, r2, [r0, #52]	; 0x34
 801e5c8:	6041      	str	r1, [r0, #4]
 801e5ca:	7402      	strb	r2, [r0, #16]
 801e5cc:	63c2      	str	r2, [r0, #60]	; 0x3c
 801e5ce:	f880 206c 	strb.w	r2, [r0, #108]	; 0x6c
 801e5d2:	4770      	bx	lr
 801e5d4:	0802ea00 	.word	0x0802ea00

0801e5d8 <_ZNKSt10moneypunctIwLb0EE13decimal_pointEv>:
 801e5d8:	6803      	ldr	r3, [r0, #0]
 801e5da:	689b      	ldr	r3, [r3, #8]
 801e5dc:	4718      	bx	r3

0801e5de <_ZNKSt10moneypunctIwLb0EE13thousands_sepEv>:
 801e5de:	6803      	ldr	r3, [r0, #0]
 801e5e0:	68db      	ldr	r3, [r3, #12]
 801e5e2:	4718      	bx	r3

0801e5e4 <_ZNKSt10moneypunctIwLb0EE8groupingEv>:
 801e5e4:	b510      	push	{r4, lr}
 801e5e6:	680b      	ldr	r3, [r1, #0]
 801e5e8:	4604      	mov	r4, r0
 801e5ea:	691b      	ldr	r3, [r3, #16]
 801e5ec:	4798      	blx	r3
 801e5ee:	4620      	mov	r0, r4
 801e5f0:	bd10      	pop	{r4, pc}

0801e5f2 <_ZNKSt10moneypunctIwLb0EE11curr_symbolEv>:
 801e5f2:	b510      	push	{r4, lr}
 801e5f4:	680b      	ldr	r3, [r1, #0]
 801e5f6:	4604      	mov	r4, r0
 801e5f8:	695b      	ldr	r3, [r3, #20]
 801e5fa:	4798      	blx	r3
 801e5fc:	4620      	mov	r0, r4
 801e5fe:	bd10      	pop	{r4, pc}

0801e600 <_ZNKSt10moneypunctIwLb0EE13positive_signEv>:
 801e600:	b510      	push	{r4, lr}
 801e602:	680b      	ldr	r3, [r1, #0]
 801e604:	4604      	mov	r4, r0
 801e606:	699b      	ldr	r3, [r3, #24]
 801e608:	4798      	blx	r3
 801e60a:	4620      	mov	r0, r4
 801e60c:	bd10      	pop	{r4, pc}

0801e60e <_ZNKSt10moneypunctIwLb0EE13negative_signEv>:
 801e60e:	b510      	push	{r4, lr}
 801e610:	680b      	ldr	r3, [r1, #0]
 801e612:	4604      	mov	r4, r0
 801e614:	69db      	ldr	r3, [r3, #28]
 801e616:	4798      	blx	r3
 801e618:	4620      	mov	r0, r4
 801e61a:	bd10      	pop	{r4, pc}

0801e61c <_ZNKSt10moneypunctIwLb0EE11frac_digitsEv>:
 801e61c:	6803      	ldr	r3, [r0, #0]
 801e61e:	6a1b      	ldr	r3, [r3, #32]
 801e620:	4718      	bx	r3

0801e622 <_ZNKSt10moneypunctIwLb0EE10pos_formatEv>:
 801e622:	6803      	ldr	r3, [r0, #0]
 801e624:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801e626:	b082      	sub	sp, #8
 801e628:	b002      	add	sp, #8
 801e62a:	4718      	bx	r3

0801e62c <_ZNKSt10moneypunctIwLb0EE10neg_formatEv>:
 801e62c:	6803      	ldr	r3, [r0, #0]
 801e62e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e630:	b082      	sub	sp, #8
 801e632:	b002      	add	sp, #8
 801e634:	4718      	bx	r3

0801e636 <_ZNKSt10moneypunctIwLb1EE13decimal_pointEv>:
 801e636:	6803      	ldr	r3, [r0, #0]
 801e638:	689b      	ldr	r3, [r3, #8]
 801e63a:	4718      	bx	r3

0801e63c <_ZNKSt10moneypunctIwLb1EE13thousands_sepEv>:
 801e63c:	6803      	ldr	r3, [r0, #0]
 801e63e:	68db      	ldr	r3, [r3, #12]
 801e640:	4718      	bx	r3

0801e642 <_ZNKSt10moneypunctIwLb1EE8groupingEv>:
 801e642:	b510      	push	{r4, lr}
 801e644:	680b      	ldr	r3, [r1, #0]
 801e646:	4604      	mov	r4, r0
 801e648:	691b      	ldr	r3, [r3, #16]
 801e64a:	4798      	blx	r3
 801e64c:	4620      	mov	r0, r4
 801e64e:	bd10      	pop	{r4, pc}

0801e650 <_ZNKSt10moneypunctIwLb1EE11curr_symbolEv>:
 801e650:	b510      	push	{r4, lr}
 801e652:	680b      	ldr	r3, [r1, #0]
 801e654:	4604      	mov	r4, r0
 801e656:	695b      	ldr	r3, [r3, #20]
 801e658:	4798      	blx	r3
 801e65a:	4620      	mov	r0, r4
 801e65c:	bd10      	pop	{r4, pc}

0801e65e <_ZNKSt10moneypunctIwLb1EE13positive_signEv>:
 801e65e:	b510      	push	{r4, lr}
 801e660:	680b      	ldr	r3, [r1, #0]
 801e662:	4604      	mov	r4, r0
 801e664:	699b      	ldr	r3, [r3, #24]
 801e666:	4798      	blx	r3
 801e668:	4620      	mov	r0, r4
 801e66a:	bd10      	pop	{r4, pc}

0801e66c <_ZNKSt10moneypunctIwLb1EE13negative_signEv>:
 801e66c:	b510      	push	{r4, lr}
 801e66e:	680b      	ldr	r3, [r1, #0]
 801e670:	4604      	mov	r4, r0
 801e672:	69db      	ldr	r3, [r3, #28]
 801e674:	4798      	blx	r3
 801e676:	4620      	mov	r0, r4
 801e678:	bd10      	pop	{r4, pc}

0801e67a <_ZNKSt10moneypunctIwLb1EE11frac_digitsEv>:
 801e67a:	6803      	ldr	r3, [r0, #0]
 801e67c:	6a1b      	ldr	r3, [r3, #32]
 801e67e:	4718      	bx	r3

0801e680 <_ZNKSt10moneypunctIwLb1EE10pos_formatEv>:
 801e680:	6803      	ldr	r3, [r0, #0]
 801e682:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801e684:	b082      	sub	sp, #8
 801e686:	b002      	add	sp, #8
 801e688:	4718      	bx	r3

0801e68a <_ZNKSt10moneypunctIwLb1EE10neg_formatEv>:
 801e68a:	6803      	ldr	r3, [r0, #0]
 801e68c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e68e:	b082      	sub	sp, #8
 801e690:	b002      	add	sp, #8
 801e692:	4718      	bx	r3

0801e694 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRe>:
 801e694:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e696:	b089      	sub	sp, #36	; 0x24
 801e698:	ae06      	add	r6, sp, #24
 801e69a:	e886 000c 	stmia.w	r6, {r2, r3}
 801e69e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e6a0:	680b      	ldr	r3, [r1, #0]
 801e6a2:	9205      	str	r2, [sp, #20]
 801e6a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e6a6:	9204      	str	r2, [sp, #16]
 801e6a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e6aa:	9203      	str	r2, [sp, #12]
 801e6ac:	f89d 2040 	ldrb.w	r2, [sp, #64]	; 0x40
 801e6b0:	9202      	str	r2, [sp, #8]
 801e6b2:	aa0e      	add	r2, sp, #56	; 0x38
 801e6b4:	4604      	mov	r4, r0
 801e6b6:	460d      	mov	r5, r1
 801e6b8:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e6bc:	e88d 0003 	stmia.w	sp, {r0, r1}
 801e6c0:	4620      	mov	r0, r4
 801e6c2:	689f      	ldr	r7, [r3, #8]
 801e6c4:	4629      	mov	r1, r5
 801e6c6:	e896 000c 	ldmia.w	r6, {r2, r3}
 801e6ca:	47b8      	blx	r7
 801e6cc:	4620      	mov	r0, r4
 801e6ce:	b009      	add	sp, #36	; 0x24
 801e6d0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801e6d2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSbIwS2_SaIwEE>:
 801e6d2:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e6d4:	b089      	sub	sp, #36	; 0x24
 801e6d6:	ae06      	add	r6, sp, #24
 801e6d8:	e886 000c 	stmia.w	r6, {r2, r3}
 801e6dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e6de:	680b      	ldr	r3, [r1, #0]
 801e6e0:	9205      	str	r2, [sp, #20]
 801e6e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e6e4:	9204      	str	r2, [sp, #16]
 801e6e6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e6e8:	9203      	str	r2, [sp, #12]
 801e6ea:	f89d 2040 	ldrb.w	r2, [sp, #64]	; 0x40
 801e6ee:	9202      	str	r2, [sp, #8]
 801e6f0:	aa0e      	add	r2, sp, #56	; 0x38
 801e6f2:	4604      	mov	r4, r0
 801e6f4:	460d      	mov	r5, r1
 801e6f6:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e6fa:	e88d 0003 	stmia.w	sp, {r0, r1}
 801e6fe:	4620      	mov	r0, r4
 801e700:	68df      	ldr	r7, [r3, #12]
 801e702:	4629      	mov	r1, r5
 801e704:	e896 000c 	ldmia.w	r6, {r2, r3}
 801e708:	47b8      	blx	r7
 801e70a:	4620      	mov	r0, r4
 801e70c:	b009      	add	sp, #36	; 0x24
 801e70e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801e710 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE3putES3_bRSt8ios_basewe>:
 801e710:	b570      	push	{r4, r5, r6, lr}
 801e712:	b086      	sub	sp, #24
 801e714:	ac04      	add	r4, sp, #16
 801e716:	e884 000c 	stmia.w	r4, {r2, r3}
 801e71a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e71c:	9202      	str	r2, [sp, #8]
 801e71e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e720:	9201      	str	r2, [sp, #4]
 801e722:	680b      	ldr	r3, [r1, #0]
 801e724:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 801e728:	9200      	str	r2, [sp, #0]
 801e72a:	689e      	ldr	r6, [r3, #8]
 801e72c:	e894 000c 	ldmia.w	r4, {r2, r3}
 801e730:	4605      	mov	r5, r0
 801e732:	47b0      	blx	r6
 801e734:	4628      	mov	r0, r5
 801e736:	b006      	add	sp, #24
 801e738:	bd70      	pop	{r4, r5, r6, pc}

0801e73a <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE3putES3_bRSt8ios_basewRKSbIwS2_SaIwEE>:
 801e73a:	b570      	push	{r4, r5, r6, lr}
 801e73c:	b086      	sub	sp, #24
 801e73e:	ac04      	add	r4, sp, #16
 801e740:	e884 000c 	stmia.w	r4, {r2, r3}
 801e744:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801e746:	9203      	str	r2, [sp, #12]
 801e748:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e74a:	9202      	str	r2, [sp, #8]
 801e74c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e74e:	9201      	str	r2, [sp, #4]
 801e750:	680b      	ldr	r3, [r1, #0]
 801e752:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 801e756:	9200      	str	r2, [sp, #0]
 801e758:	68de      	ldr	r6, [r3, #12]
 801e75a:	e894 000c 	ldmia.w	r4, {r2, r3}
 801e75e:	4605      	mov	r5, r0
 801e760:	47b0      	blx	r6
 801e762:	4628      	mov	r0, r5
 801e764:	b006      	add	sp, #24
 801e766:	bd70      	pop	{r4, r5, r6, pc}

0801e768 <_ZNSt16__numpunct_cacheIwEC1Ej>:
 801e768:	3900      	subs	r1, #0
 801e76a:	4a09      	ldr	r2, [pc, #36]	; (801e790 <_ZNSt16__numpunct_cacheIwEC1Ej+0x28>)
 801e76c:	6002      	str	r2, [r0, #0]
 801e76e:	bf18      	it	ne
 801e770:	2101      	movne	r1, #1
 801e772:	2200      	movs	r2, #0
 801e774:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801e778:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801e77c:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801e780:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 801e784:	6041      	str	r1, [r0, #4]
 801e786:	7402      	strb	r2, [r0, #16]
 801e788:	f880 2124 	strb.w	r2, [r0, #292]	; 0x124
 801e78c:	4770      	bx	lr
 801e78e:	bf00      	nop
 801e790:	0802ea68 	.word	0x0802ea68

0801e794 <_ZNKSt8numpunctIwE13decimal_pointEv>:
 801e794:	6803      	ldr	r3, [r0, #0]
 801e796:	689b      	ldr	r3, [r3, #8]
 801e798:	4718      	bx	r3

0801e79a <_ZNKSt8numpunctIwE13thousands_sepEv>:
 801e79a:	6803      	ldr	r3, [r0, #0]
 801e79c:	68db      	ldr	r3, [r3, #12]
 801e79e:	4718      	bx	r3

0801e7a0 <_ZNKSt8numpunctIwE8groupingEv>:
 801e7a0:	b510      	push	{r4, lr}
 801e7a2:	680b      	ldr	r3, [r1, #0]
 801e7a4:	4604      	mov	r4, r0
 801e7a6:	691b      	ldr	r3, [r3, #16]
 801e7a8:	4798      	blx	r3
 801e7aa:	4620      	mov	r0, r4
 801e7ac:	bd10      	pop	{r4, pc}

0801e7ae <_ZNKSt8numpunctIwE8truenameEv>:
 801e7ae:	b510      	push	{r4, lr}
 801e7b0:	680b      	ldr	r3, [r1, #0]
 801e7b2:	4604      	mov	r4, r0
 801e7b4:	695b      	ldr	r3, [r3, #20]
 801e7b6:	4798      	blx	r3
 801e7b8:	4620      	mov	r0, r4
 801e7ba:	bd10      	pop	{r4, pc}

0801e7bc <_ZNKSt8numpunctIwE9falsenameEv>:
 801e7bc:	b510      	push	{r4, lr}
 801e7be:	680b      	ldr	r3, [r1, #0]
 801e7c0:	4604      	mov	r4, r0
 801e7c2:	699b      	ldr	r3, [r3, #24]
 801e7c4:	4798      	blx	r3
 801e7c6:	4620      	mov	r0, r4
 801e7c8:	bd10      	pop	{r4, pc}
	...

0801e7cc <_ZNSt11__timepunctIwEC1EPSt17__timepunct_cacheIwEj>:
 801e7cc:	3a00      	subs	r2, #0
 801e7ce:	4b08      	ldr	r3, [pc, #32]	; (801e7f0 <_ZNSt11__timepunctIwEC1EPSt17__timepunct_cacheIwEj+0x24>)
 801e7d0:	bf18      	it	ne
 801e7d2:	2201      	movne	r2, #1
 801e7d4:	b510      	push	{r4, lr}
 801e7d6:	6042      	str	r2, [r0, #4]
 801e7d8:	6003      	str	r3, [r0, #0]
 801e7da:	6081      	str	r1, [r0, #8]
 801e7dc:	4604      	mov	r4, r0
 801e7de:	f7ed fd87 	bl	800c2f0 <_ZNSt6locale5facet13_S_get_c_nameEv>
 801e7e2:	2100      	movs	r1, #0
 801e7e4:	6120      	str	r0, [r4, #16]
 801e7e6:	4620      	mov	r0, r4
 801e7e8:	f006 fb62 	bl	8024eb0 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi>
 801e7ec:	4620      	mov	r0, r4
 801e7ee:	bd10      	pop	{r4, pc}
 801e7f0:	080311bc 	.word	0x080311bc

0801e7f4 <_ZNKSt11__timepunctIwE15_M_date_formatsEPPKw>:
 801e7f4:	6883      	ldr	r3, [r0, #8]
 801e7f6:	689a      	ldr	r2, [r3, #8]
 801e7f8:	600a      	str	r2, [r1, #0]
 801e7fa:	68db      	ldr	r3, [r3, #12]
 801e7fc:	604b      	str	r3, [r1, #4]
 801e7fe:	4770      	bx	lr

0801e800 <_ZNKSt11__timepunctIwE15_M_time_formatsEPPKw>:
 801e800:	6883      	ldr	r3, [r0, #8]
 801e802:	691a      	ldr	r2, [r3, #16]
 801e804:	600a      	str	r2, [r1, #0]
 801e806:	695b      	ldr	r3, [r3, #20]
 801e808:	604b      	str	r3, [r1, #4]
 801e80a:	4770      	bx	lr

0801e80c <_ZNKSt11__timepunctIwE20_M_date_time_formatsEPPKw>:
 801e80c:	6883      	ldr	r3, [r0, #8]
 801e80e:	699a      	ldr	r2, [r3, #24]
 801e810:	600a      	str	r2, [r1, #0]
 801e812:	69db      	ldr	r3, [r3, #28]
 801e814:	604b      	str	r3, [r1, #4]
 801e816:	4770      	bx	lr

0801e818 <_ZNKSt11__timepunctIwE7_M_daysEPPKw>:
 801e818:	6883      	ldr	r3, [r0, #8]
 801e81a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801e81c:	600a      	str	r2, [r1, #0]
 801e81e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 801e820:	604a      	str	r2, [r1, #4]
 801e822:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 801e824:	608a      	str	r2, [r1, #8]
 801e826:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 801e828:	60ca      	str	r2, [r1, #12]
 801e82a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 801e82c:	610a      	str	r2, [r1, #16]
 801e82e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 801e830:	614a      	str	r2, [r1, #20]
 801e832:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801e834:	618b      	str	r3, [r1, #24]
 801e836:	4770      	bx	lr

0801e838 <_ZNKSt11__timepunctIwE19_M_days_abbreviatedEPPKw>:
 801e838:	6883      	ldr	r3, [r0, #8]
 801e83a:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 801e83c:	600a      	str	r2, [r1, #0]
 801e83e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801e840:	604a      	str	r2, [r1, #4]
 801e842:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 801e844:	608a      	str	r2, [r1, #8]
 801e846:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 801e848:	60ca      	str	r2, [r1, #12]
 801e84a:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 801e84c:	610a      	str	r2, [r1, #16]
 801e84e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 801e850:	614a      	str	r2, [r1, #20]
 801e852:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801e854:	618b      	str	r3, [r1, #24]
 801e856:	4770      	bx	lr

0801e858 <_ZNKSt11__timepunctIwE9_M_monthsEPPKw>:
 801e858:	6883      	ldr	r3, [r0, #8]
 801e85a:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 801e85c:	600a      	str	r2, [r1, #0]
 801e85e:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 801e860:	604a      	str	r2, [r1, #4]
 801e862:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 801e864:	608a      	str	r2, [r1, #8]
 801e866:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 801e868:	60ca      	str	r2, [r1, #12]
 801e86a:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 801e86c:	610a      	str	r2, [r1, #16]
 801e86e:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 801e870:	614a      	str	r2, [r1, #20]
 801e872:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 801e874:	618a      	str	r2, [r1, #24]
 801e876:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 801e87a:	61ca      	str	r2, [r1, #28]
 801e87c:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
 801e880:	620a      	str	r2, [r1, #32]
 801e882:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 801e886:	624a      	str	r2, [r1, #36]	; 0x24
 801e888:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 801e88c:	628a      	str	r2, [r1, #40]	; 0x28
 801e88e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801e892:	62cb      	str	r3, [r1, #44]	; 0x2c
 801e894:	4770      	bx	lr

0801e896 <_ZNKSt11__timepunctIwE21_M_months_abbreviatedEPPKw>:
 801e896:	6883      	ldr	r3, [r0, #8]
 801e898:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 801e89c:	600a      	str	r2, [r1, #0]
 801e89e:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 801e8a2:	604a      	str	r2, [r1, #4]
 801e8a4:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 801e8a8:	608a      	str	r2, [r1, #8]
 801e8aa:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
 801e8ae:	60ca      	str	r2, [r1, #12]
 801e8b0:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 801e8b4:	610a      	str	r2, [r1, #16]
 801e8b6:	f8d3 20a8 	ldr.w	r2, [r3, #168]	; 0xa8
 801e8ba:	614a      	str	r2, [r1, #20]
 801e8bc:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 801e8c0:	618a      	str	r2, [r1, #24]
 801e8c2:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 801e8c6:	61ca      	str	r2, [r1, #28]
 801e8c8:	f8d3 20b4 	ldr.w	r2, [r3, #180]	; 0xb4
 801e8cc:	620a      	str	r2, [r1, #32]
 801e8ce:	f8d3 20b8 	ldr.w	r2, [r3, #184]	; 0xb8
 801e8d2:	624a      	str	r2, [r1, #36]	; 0x24
 801e8d4:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 801e8d8:	628a      	str	r2, [r1, #40]	; 0x28
 801e8da:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801e8de:	62cb      	str	r3, [r1, #44]	; 0x2c
 801e8e0:	4770      	bx	lr

0801e8e2 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10date_orderEv>:
 801e8e2:	6803      	ldr	r3, [r0, #0]
 801e8e4:	689b      	ldr	r3, [r3, #8]
 801e8e6:	4718      	bx	r3

0801e8e8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE8get_timeES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801e8e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e8ea:	b089      	sub	sp, #36	; 0x24
 801e8ec:	ae06      	add	r6, sp, #24
 801e8ee:	e886 000c 	stmia.w	r6, {r2, r3}
 801e8f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e8f4:	680b      	ldr	r3, [r1, #0]
 801e8f6:	9204      	str	r2, [sp, #16]
 801e8f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e8fa:	9203      	str	r2, [sp, #12]
 801e8fc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e8fe:	9202      	str	r2, [sp, #8]
 801e900:	aa0e      	add	r2, sp, #56	; 0x38
 801e902:	4604      	mov	r4, r0
 801e904:	460d      	mov	r5, r1
 801e906:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e90a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801e90e:	4620      	mov	r0, r4
 801e910:	68df      	ldr	r7, [r3, #12]
 801e912:	4629      	mov	r1, r5
 801e914:	e896 000c 	ldmia.w	r6, {r2, r3}
 801e918:	47b8      	blx	r7
 801e91a:	4620      	mov	r0, r4
 801e91c:	b009      	add	sp, #36	; 0x24
 801e91e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801e920 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE8get_dateES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801e920:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e922:	b089      	sub	sp, #36	; 0x24
 801e924:	ae06      	add	r6, sp, #24
 801e926:	e886 000c 	stmia.w	r6, {r2, r3}
 801e92a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e92c:	680b      	ldr	r3, [r1, #0]
 801e92e:	9204      	str	r2, [sp, #16]
 801e930:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e932:	9203      	str	r2, [sp, #12]
 801e934:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e936:	9202      	str	r2, [sp, #8]
 801e938:	aa0e      	add	r2, sp, #56	; 0x38
 801e93a:	4604      	mov	r4, r0
 801e93c:	460d      	mov	r5, r1
 801e93e:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e942:	e88d 0003 	stmia.w	sp, {r0, r1}
 801e946:	4620      	mov	r0, r4
 801e948:	691f      	ldr	r7, [r3, #16]
 801e94a:	4629      	mov	r1, r5
 801e94c:	e896 000c 	ldmia.w	r6, {r2, r3}
 801e950:	47b8      	blx	r7
 801e952:	4620      	mov	r0, r4
 801e954:	b009      	add	sp, #36	; 0x24
 801e956:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801e958 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11get_weekdayES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801e958:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e95a:	b089      	sub	sp, #36	; 0x24
 801e95c:	ae06      	add	r6, sp, #24
 801e95e:	e886 000c 	stmia.w	r6, {r2, r3}
 801e962:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e964:	680b      	ldr	r3, [r1, #0]
 801e966:	9204      	str	r2, [sp, #16]
 801e968:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e96a:	9203      	str	r2, [sp, #12]
 801e96c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e96e:	9202      	str	r2, [sp, #8]
 801e970:	aa0e      	add	r2, sp, #56	; 0x38
 801e972:	4604      	mov	r4, r0
 801e974:	460d      	mov	r5, r1
 801e976:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e97a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801e97e:	4620      	mov	r0, r4
 801e980:	695f      	ldr	r7, [r3, #20]
 801e982:	4629      	mov	r1, r5
 801e984:	e896 000c 	ldmia.w	r6, {r2, r3}
 801e988:	47b8      	blx	r7
 801e98a:	4620      	mov	r0, r4
 801e98c:	b009      	add	sp, #36	; 0x24
 801e98e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801e990 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE13get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801e990:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e992:	b089      	sub	sp, #36	; 0x24
 801e994:	ae06      	add	r6, sp, #24
 801e996:	e886 000c 	stmia.w	r6, {r2, r3}
 801e99a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e99c:	680b      	ldr	r3, [r1, #0]
 801e99e:	9204      	str	r2, [sp, #16]
 801e9a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e9a2:	9203      	str	r2, [sp, #12]
 801e9a4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e9a6:	9202      	str	r2, [sp, #8]
 801e9a8:	aa0e      	add	r2, sp, #56	; 0x38
 801e9aa:	4604      	mov	r4, r0
 801e9ac:	460d      	mov	r5, r1
 801e9ae:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e9b2:	e88d 0003 	stmia.w	sp, {r0, r1}
 801e9b6:	4620      	mov	r0, r4
 801e9b8:	699f      	ldr	r7, [r3, #24]
 801e9ba:	4629      	mov	r1, r5
 801e9bc:	e896 000c 	ldmia.w	r6, {r2, r3}
 801e9c0:	47b8      	blx	r7
 801e9c2:	4620      	mov	r0, r4
 801e9c4:	b009      	add	sp, #36	; 0x24
 801e9c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801e9c8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE8get_yearES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 801e9c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e9ca:	b089      	sub	sp, #36	; 0x24
 801e9cc:	ae06      	add	r6, sp, #24
 801e9ce:	e886 000c 	stmia.w	r6, {r2, r3}
 801e9d2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e9d4:	680b      	ldr	r3, [r1, #0]
 801e9d6:	9204      	str	r2, [sp, #16]
 801e9d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e9da:	9203      	str	r2, [sp, #12]
 801e9dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e9de:	9202      	str	r2, [sp, #8]
 801e9e0:	aa0e      	add	r2, sp, #56	; 0x38
 801e9e2:	4604      	mov	r4, r0
 801e9e4:	460d      	mov	r5, r1
 801e9e6:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e9ea:	e88d 0003 	stmia.w	sp, {r0, r1}
 801e9ee:	4620      	mov	r0, r4
 801e9f0:	69df      	ldr	r7, [r3, #28]
 801e9f2:	4629      	mov	r1, r5
 801e9f4:	e896 000c 	ldmia.w	r6, {r2, r3}
 801e9f8:	47b8      	blx	r7
 801e9fa:	4620      	mov	r0, r4
 801e9fc:	b009      	add	sp, #36	; 0x24
 801e9fe:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801ea00 <_ZNSt8messagesIwEC1Ej>:
 801ea00:	3900      	subs	r1, #0
 801ea02:	b510      	push	{r4, lr}
 801ea04:	4b05      	ldr	r3, [pc, #20]	; (801ea1c <_ZNSt8messagesIwEC1Ej+0x1c>)
 801ea06:	6003      	str	r3, [r0, #0]
 801ea08:	bf18      	it	ne
 801ea0a:	2101      	movne	r1, #1
 801ea0c:	6041      	str	r1, [r0, #4]
 801ea0e:	4604      	mov	r4, r0
 801ea10:	f7ed fc64 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 801ea14:	60a0      	str	r0, [r4, #8]
 801ea16:	4620      	mov	r0, r4
 801ea18:	bd10      	pop	{r4, pc}
 801ea1a:	bf00      	nop
 801ea1c:	08031234 	.word	0x08031234

0801ea20 <_ZNKSt8messagesIwE4openERKSsRKSt6locale>:
 801ea20:	6803      	ldr	r3, [r0, #0]
 801ea22:	689b      	ldr	r3, [r3, #8]
 801ea24:	4718      	bx	r3

0801ea26 <_ZNKSt8messagesIwE3getEiiiRKSbIwSt11char_traitsIwESaIwEE>:
 801ea26:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801ea28:	9e07      	ldr	r6, [sp, #28]
 801ea2a:	9601      	str	r6, [sp, #4]
 801ea2c:	680d      	ldr	r5, [r1, #0]
 801ea2e:	9e06      	ldr	r6, [sp, #24]
 801ea30:	9600      	str	r6, [sp, #0]
 801ea32:	68ed      	ldr	r5, [r5, #12]
 801ea34:	4604      	mov	r4, r0
 801ea36:	47a8      	blx	r5
 801ea38:	4620      	mov	r0, r4
 801ea3a:	b002      	add	sp, #8
 801ea3c:	bd70      	pop	{r4, r5, r6, pc}

0801ea3e <_ZNKSt8messagesIwE5closeEi>:
 801ea3e:	6803      	ldr	r3, [r0, #0]
 801ea40:	691b      	ldr	r3, [r3, #16]
 801ea42:	4718      	bx	r3

0801ea44 <_ZNKSt7collateIwE7compareEPKwS2_S2_S2_>:
 801ea44:	b410      	push	{r4}
 801ea46:	6804      	ldr	r4, [r0, #0]
 801ea48:	68a4      	ldr	r4, [r4, #8]
 801ea4a:	46a4      	mov	ip, r4
 801ea4c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ea50:	4760      	bx	ip

0801ea52 <_ZNKSt7collateIwE9transformEPKwS2_>:
 801ea52:	b538      	push	{r3, r4, r5, lr}
 801ea54:	680d      	ldr	r5, [r1, #0]
 801ea56:	4604      	mov	r4, r0
 801ea58:	68ed      	ldr	r5, [r5, #12]
 801ea5a:	47a8      	blx	r5
 801ea5c:	4620      	mov	r0, r4
 801ea5e:	bd38      	pop	{r3, r4, r5, pc}

0801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>:
 801ea60:	b510      	push	{r4, lr}
 801ea62:	4604      	mov	r4, r0
 801ea64:	480a      	ldr	r0, [pc, #40]	; (801ea90 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale+0x30>)
 801ea66:	f7ed fcb5 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801ea6a:	6823      	ldr	r3, [r4, #0]
 801ea6c:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 801ea70:	4283      	cmp	r3, r0
 801ea72:	d902      	bls.n	801ea7a <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale+0x1a>
 801ea74:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 801ea78:	b908      	cbnz	r0, 801ea7e <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale+0x1e>
 801ea7a:	f7f8 fed4 	bl	8017826 <_ZSt16__throw_bad_castv>
 801ea7e:	4a05      	ldr	r2, [pc, #20]	; (801ea94 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale+0x34>)
 801ea80:	4905      	ldr	r1, [pc, #20]	; (801ea98 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale+0x38>)
 801ea82:	2300      	movs	r3, #0
 801ea84:	f005 fa26 	bl	8023ed4 <__dynamic_cast>
 801ea88:	b908      	cbnz	r0, 801ea8e <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale+0x2e>
 801ea8a:	f005 fa7c 	bl	8023f86 <__cxa_bad_cast>
 801ea8e:	bd10      	pop	{r4, pc}
 801ea90:	20003c08 	.word	0x20003c08
 801ea94:	0802f710 	.word	0x0802f710
 801ea98:	0802e934 	.word	0x0802e934

0801ea9c <_ZSt9use_facetISt8numpunctIwEERKT_RKSt6locale>:
 801ea9c:	b510      	push	{r4, lr}
 801ea9e:	4604      	mov	r4, r0
 801eaa0:	480a      	ldr	r0, [pc, #40]	; (801eacc <_ZSt9use_facetISt8numpunctIwEERKT_RKSt6locale+0x30>)
 801eaa2:	f7ed fc97 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801eaa6:	6823      	ldr	r3, [r4, #0]
 801eaa8:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 801eaac:	4283      	cmp	r3, r0
 801eaae:	d902      	bls.n	801eab6 <_ZSt9use_facetISt8numpunctIwEERKT_RKSt6locale+0x1a>
 801eab0:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 801eab4:	b908      	cbnz	r0, 801eaba <_ZSt9use_facetISt8numpunctIwEERKT_RKSt6locale+0x1e>
 801eab6:	f7f8 feb6 	bl	8017826 <_ZSt16__throw_bad_castv>
 801eaba:	4a05      	ldr	r2, [pc, #20]	; (801ead0 <_ZSt9use_facetISt8numpunctIwEERKT_RKSt6locale+0x34>)
 801eabc:	4905      	ldr	r1, [pc, #20]	; (801ead4 <_ZSt9use_facetISt8numpunctIwEERKT_RKSt6locale+0x38>)
 801eabe:	2300      	movs	r3, #0
 801eac0:	f005 fa08 	bl	8023ed4 <__dynamic_cast>
 801eac4:	b908      	cbnz	r0, 801eaca <_ZSt9use_facetISt8numpunctIwEERKT_RKSt6locale+0x2e>
 801eac6:	f005 fa5e 	bl	8023f86 <__cxa_bad_cast>
 801eaca:	bd10      	pop	{r4, pc}
 801eacc:	20003d3c 	.word	0x20003d3c
 801ead0:	080313e0 	.word	0x080313e0
 801ead4:	0802e934 	.word	0x0802e934

0801ead8 <_ZSt9use_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale>:
 801ead8:	b510      	push	{r4, lr}
 801eada:	4604      	mov	r4, r0
 801eadc:	480a      	ldr	r0, [pc, #40]	; (801eb08 <_ZSt9use_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale+0x30>)
 801eade:	f7ed fc79 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801eae2:	6823      	ldr	r3, [r4, #0]
 801eae4:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 801eae8:	4283      	cmp	r3, r0
 801eaea:	d902      	bls.n	801eaf2 <_ZSt9use_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale+0x1a>
 801eaec:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 801eaf0:	b908      	cbnz	r0, 801eaf6 <_ZSt9use_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale+0x1e>
 801eaf2:	f7f8 fe98 	bl	8017826 <_ZSt16__throw_bad_castv>
 801eaf6:	4a05      	ldr	r2, [pc, #20]	; (801eb0c <_ZSt9use_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale+0x34>)
 801eaf8:	4905      	ldr	r1, [pc, #20]	; (801eb10 <_ZSt9use_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale+0x38>)
 801eafa:	2300      	movs	r3, #0
 801eafc:	f005 f9ea 	bl	8023ed4 <__dynamic_cast>
 801eb00:	b908      	cbnz	r0, 801eb06 <_ZSt9use_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale+0x2e>
 801eb02:	f005 fa40 	bl	8023f86 <__cxa_bad_cast>
 801eb06:	bd10      	pop	{r4, pc}
 801eb08:	20003d34 	.word	0x20003d34
 801eb0c:	080313b4 	.word	0x080313b4
 801eb10:	0802e934 	.word	0x0802e934

0801eb14 <_ZSt9use_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale>:
 801eb14:	b510      	push	{r4, lr}
 801eb16:	4604      	mov	r4, r0
 801eb18:	480a      	ldr	r0, [pc, #40]	; (801eb44 <_ZSt9use_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale+0x30>)
 801eb1a:	f7ed fc5b 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801eb1e:	6823      	ldr	r3, [r4, #0]
 801eb20:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 801eb24:	4283      	cmp	r3, r0
 801eb26:	d902      	bls.n	801eb2e <_ZSt9use_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale+0x1a>
 801eb28:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 801eb2c:	b908      	cbnz	r0, 801eb32 <_ZSt9use_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale+0x1e>
 801eb2e:	f7f8 fe7a 	bl	8017826 <_ZSt16__throw_bad_castv>
 801eb32:	4a05      	ldr	r2, [pc, #20]	; (801eb48 <_ZSt9use_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale+0x34>)
 801eb34:	4905      	ldr	r1, [pc, #20]	; (801eb4c <_ZSt9use_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale+0x38>)
 801eb36:	2300      	movs	r3, #0
 801eb38:	f005 f9cc 	bl	8023ed4 <__dynamic_cast>
 801eb3c:	b908      	cbnz	r0, 801eb42 <_ZSt9use_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEERKT_RKSt6locale+0x2e>
 801eb3e:	f005 fa22 	bl	8023f86 <__cxa_bad_cast>
 801eb42:	bd10      	pop	{r4, pc}
 801eb44:	20003d38 	.word	0x20003d38
 801eb48:	080313a8 	.word	0x080313a8
 801eb4c:	0802e934 	.word	0x0802e934

0801eb50 <_ZSt9use_facetISt10moneypunctIwLb1EEERKT_RKSt6locale>:
 801eb50:	b510      	push	{r4, lr}
 801eb52:	4604      	mov	r4, r0
 801eb54:	480a      	ldr	r0, [pc, #40]	; (801eb80 <_ZSt9use_facetISt10moneypunctIwLb1EEERKT_RKSt6locale+0x30>)
 801eb56:	f7ed fc3d 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801eb5a:	6823      	ldr	r3, [r4, #0]
 801eb5c:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 801eb60:	4283      	cmp	r3, r0
 801eb62:	d902      	bls.n	801eb6a <_ZSt9use_facetISt10moneypunctIwLb1EEERKT_RKSt6locale+0x1a>
 801eb64:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 801eb68:	b908      	cbnz	r0, 801eb6e <_ZSt9use_facetISt10moneypunctIwLb1EEERKT_RKSt6locale+0x1e>
 801eb6a:	f7f8 fe5c 	bl	8017826 <_ZSt16__throw_bad_castv>
 801eb6e:	4a05      	ldr	r2, [pc, #20]	; (801eb84 <_ZSt9use_facetISt10moneypunctIwLb1EEERKT_RKSt6locale+0x34>)
 801eb70:	4905      	ldr	r1, [pc, #20]	; (801eb88 <_ZSt9use_facetISt10moneypunctIwLb1EEERKT_RKSt6locale+0x38>)
 801eb72:	2300      	movs	r3, #0
 801eb74:	f005 f9ae 	bl	8023ed4 <__dynamic_cast>
 801eb78:	b908      	cbnz	r0, 801eb7e <_ZSt9use_facetISt10moneypunctIwLb1EEERKT_RKSt6locale+0x2e>
 801eb7a:	f005 fa04 	bl	8023f86 <__cxa_bad_cast>
 801eb7e:	bd10      	pop	{r4, pc}
 801eb80:	20003d48 	.word	0x20003d48
 801eb84:	08031300 	.word	0x08031300
 801eb88:	0802e934 	.word	0x0802e934

0801eb8c <_ZSt9use_facetISt10moneypunctIwLb0EEERKT_RKSt6locale>:
 801eb8c:	b510      	push	{r4, lr}
 801eb8e:	4604      	mov	r4, r0
 801eb90:	480a      	ldr	r0, [pc, #40]	; (801ebbc <_ZSt9use_facetISt10moneypunctIwLb0EEERKT_RKSt6locale+0x30>)
 801eb92:	f7ed fc1f 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801eb96:	6823      	ldr	r3, [r4, #0]
 801eb98:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 801eb9c:	4283      	cmp	r3, r0
 801eb9e:	d902      	bls.n	801eba6 <_ZSt9use_facetISt10moneypunctIwLb0EEERKT_RKSt6locale+0x1a>
 801eba0:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 801eba4:	b908      	cbnz	r0, 801ebaa <_ZSt9use_facetISt10moneypunctIwLb0EEERKT_RKSt6locale+0x1e>
 801eba6:	f7f8 fe3e 	bl	8017826 <_ZSt16__throw_bad_castv>
 801ebaa:	4a05      	ldr	r2, [pc, #20]	; (801ebc0 <_ZSt9use_facetISt10moneypunctIwLb0EEERKT_RKSt6locale+0x34>)
 801ebac:	4905      	ldr	r1, [pc, #20]	; (801ebc4 <_ZSt9use_facetISt10moneypunctIwLb0EEERKT_RKSt6locale+0x38>)
 801ebae:	2300      	movs	r3, #0
 801ebb0:	f005 f990 	bl	8023ed4 <__dynamic_cast>
 801ebb4:	b908      	cbnz	r0, 801ebba <_ZSt9use_facetISt10moneypunctIwLb0EEERKT_RKSt6locale+0x2e>
 801ebb6:	f005 f9e6 	bl	8023f86 <__cxa_bad_cast>
 801ebba:	bd10      	pop	{r4, pc}
 801ebbc:	20003d4c 	.word	0x20003d4c
 801ebc0:	080312e0 	.word	0x080312e0
 801ebc4:	0802e934 	.word	0x0802e934

0801ebc8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale>:
 801ebc8:	b510      	push	{r4, lr}
 801ebca:	4604      	mov	r4, r0
 801ebcc:	480a      	ldr	r0, [pc, #40]	; (801ebf8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale+0x30>)
 801ebce:	f7ed fc01 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801ebd2:	6823      	ldr	r3, [r4, #0]
 801ebd4:	e9d3 2301 	ldrd	r2, r3, [r3, #4]
 801ebd8:	4283      	cmp	r3, r0
 801ebda:	d902      	bls.n	801ebe2 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale+0x1a>
 801ebdc:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 801ebe0:	b908      	cbnz	r0, 801ebe6 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale+0x1e>
 801ebe2:	f7f8 fe20 	bl	8017826 <_ZSt16__throw_bad_castv>
 801ebe6:	4a05      	ldr	r2, [pc, #20]	; (801ebfc <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale+0x34>)
 801ebe8:	4905      	ldr	r1, [pc, #20]	; (801ec00 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale+0x38>)
 801ebea:	2300      	movs	r3, #0
 801ebec:	f005 f972 	bl	8023ed4 <__dynamic_cast>
 801ebf0:	b908      	cbnz	r0, 801ebf6 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale+0x2e>
 801ebf2:	f005 f9c8 	bl	8023f86 <__cxa_bad_cast>
 801ebf6:	bd10      	pop	{r4, pc}
 801ebf8:	20003d30 	.word	0x20003d30
 801ebfc:	08031320 	.word	0x08031320
 801ec00:	0802e934 	.word	0x0802e934

0801ec04 <_ZSt9has_facetISt5ctypeIwEEbRKSt6locale>:
 801ec04:	b510      	push	{r4, lr}
 801ec06:	4604      	mov	r4, r0
 801ec08:	480a      	ldr	r0, [pc, #40]	; (801ec34 <_ZSt9has_facetISt5ctypeIwEEbRKSt6locale+0x30>)
 801ec0a:	f7ed fbe3 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801ec0e:	6823      	ldr	r3, [r4, #0]
 801ec10:	689a      	ldr	r2, [r3, #8]
 801ec12:	4282      	cmp	r2, r0
 801ec14:	d90c      	bls.n	801ec30 <_ZSt9has_facetISt5ctypeIwEEbRKSt6locale+0x2c>
 801ec16:	685b      	ldr	r3, [r3, #4]
 801ec18:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 801ec1c:	b138      	cbz	r0, 801ec2e <_ZSt9has_facetISt5ctypeIwEEbRKSt6locale+0x2a>
 801ec1e:	4a06      	ldr	r2, [pc, #24]	; (801ec38 <_ZSt9has_facetISt5ctypeIwEEbRKSt6locale+0x34>)
 801ec20:	4906      	ldr	r1, [pc, #24]	; (801ec3c <_ZSt9has_facetISt5ctypeIwEEbRKSt6locale+0x38>)
 801ec22:	2300      	movs	r3, #0
 801ec24:	f005 f956 	bl	8023ed4 <__dynamic_cast>
 801ec28:	3800      	subs	r0, #0
 801ec2a:	bf18      	it	ne
 801ec2c:	2001      	movne	r0, #1
 801ec2e:	bd10      	pop	{r4, pc}
 801ec30:	2000      	movs	r0, #0
 801ec32:	e7fc      	b.n	801ec2e <_ZSt9has_facetISt5ctypeIwEEbRKSt6locale+0x2a>
 801ec34:	20003c08 	.word	0x20003c08
 801ec38:	0802f710 	.word	0x0802f710
 801ec3c:	0802e934 	.word	0x0802e934

0801ec40 <_ZSt9has_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale>:
 801ec40:	b510      	push	{r4, lr}
 801ec42:	4604      	mov	r4, r0
 801ec44:	480a      	ldr	r0, [pc, #40]	; (801ec70 <_ZSt9has_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale+0x30>)
 801ec46:	f7ed fbc5 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801ec4a:	6823      	ldr	r3, [r4, #0]
 801ec4c:	689a      	ldr	r2, [r3, #8]
 801ec4e:	4282      	cmp	r2, r0
 801ec50:	d90c      	bls.n	801ec6c <_ZSt9has_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale+0x2c>
 801ec52:	685b      	ldr	r3, [r3, #4]
 801ec54:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 801ec58:	b138      	cbz	r0, 801ec6a <_ZSt9has_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale+0x2a>
 801ec5a:	4a06      	ldr	r2, [pc, #24]	; (801ec74 <_ZSt9has_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale+0x34>)
 801ec5c:	4906      	ldr	r1, [pc, #24]	; (801ec78 <_ZSt9has_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale+0x38>)
 801ec5e:	2300      	movs	r3, #0
 801ec60:	f005 f938 	bl	8023ed4 <__dynamic_cast>
 801ec64:	3800      	subs	r0, #0
 801ec66:	bf18      	it	ne
 801ec68:	2001      	movne	r0, #1
 801ec6a:	bd10      	pop	{r4, pc}
 801ec6c:	2000      	movs	r0, #0
 801ec6e:	e7fc      	b.n	801ec6a <_ZSt9has_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale+0x2a>
 801ec70:	20003d34 	.word	0x20003d34
 801ec74:	080313b4 	.word	0x080313b4
 801ec78:	0802e934 	.word	0x0802e934

0801ec7c <_ZSt9has_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale>:
 801ec7c:	b510      	push	{r4, lr}
 801ec7e:	4604      	mov	r4, r0
 801ec80:	480a      	ldr	r0, [pc, #40]	; (801ecac <_ZSt9has_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale+0x30>)
 801ec82:	f7ed fba7 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801ec86:	6823      	ldr	r3, [r4, #0]
 801ec88:	689a      	ldr	r2, [r3, #8]
 801ec8a:	4282      	cmp	r2, r0
 801ec8c:	d90c      	bls.n	801eca8 <_ZSt9has_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale+0x2c>
 801ec8e:	685b      	ldr	r3, [r3, #4]
 801ec90:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 801ec94:	b138      	cbz	r0, 801eca6 <_ZSt9has_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale+0x2a>
 801ec96:	4a06      	ldr	r2, [pc, #24]	; (801ecb0 <_ZSt9has_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale+0x34>)
 801ec98:	4906      	ldr	r1, [pc, #24]	; (801ecb4 <_ZSt9has_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale+0x38>)
 801ec9a:	2300      	movs	r3, #0
 801ec9c:	f005 f91a 	bl	8023ed4 <__dynamic_cast>
 801eca0:	3800      	subs	r0, #0
 801eca2:	bf18      	it	ne
 801eca4:	2001      	movne	r0, #1
 801eca6:	bd10      	pop	{r4, pc}
 801eca8:	2000      	movs	r0, #0
 801ecaa:	e7fc      	b.n	801eca6 <_ZSt9has_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEbRKSt6locale+0x2a>
 801ecac:	20003d38 	.word	0x20003d38
 801ecb0:	080313a8 	.word	0x080313a8
 801ecb4:	0802e934 	.word	0x0802e934

0801ecb8 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_>:
 801ecb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ecbc:	e9dd 6407 	ldrd	r6, r4, [sp, #28]
 801ecc0:	2500      	movs	r5, #0
 801ecc2:	462f      	mov	r7, r5
 801ecc4:	f103 3cff 	add.w	ip, r3, #4294967295	; 0xffffffff
 801ecc8:	f812 e007 	ldrb.w	lr, [r2, r7]
 801eccc:	eba4 0806 	sub.w	r8, r4, r6
 801ecd0:	ebbe 0fa8 	cmp.w	lr, r8, asr #2
 801ecd4:	eb02 0307 	add.w	r3, r2, r7
 801ecd8:	db07      	blt.n	801ecea <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x32>
 801ecda:	1f07      	subs	r7, r0, #4
 801ecdc:	42a6      	cmp	r6, r4
 801ecde:	d010      	beq.n	801ed02 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x4a>
 801ece0:	f856 cb04 	ldr.w	ip, [r6], #4
 801ece4:	f847 cf04 	str.w	ip, [r7, #4]!
 801ece8:	e7f8      	b.n	801ecdc <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x24>
 801ecea:	fa4f f98e 	sxtb.w	r9, lr
 801ecee:	f1b9 0f00 	cmp.w	r9, #0
 801ecf2:	ddf2      	ble.n	801ecda <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x22>
 801ecf4:	45bc      	cmp	ip, r7
 801ecf6:	eba4 048e 	sub.w	r4, r4, lr, lsl #2
 801ecfa:	bf8c      	ite	hi
 801ecfc:	3701      	addhi	r7, #1
 801ecfe:	3501      	addls	r5, #1
 801ed00:	e7e2      	b.n	801ecc8 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x10>
 801ed02:	4440      	add	r0, r8
 801ed04:	3d01      	subs	r5, #1
 801ed06:	d30f      	bcc.n	801ed28 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x70>
 801ed08:	6001      	str	r1, [r0, #0]
 801ed0a:	781e      	ldrb	r6, [r3, #0]
 801ed0c:	4684      	mov	ip, r0
 801ed0e:	00b7      	lsls	r7, r6, #2
 801ed10:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 801ed14:	42b4      	cmp	r4, r6
 801ed16:	d102      	bne.n	801ed1e <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x66>
 801ed18:	3704      	adds	r7, #4
 801ed1a:	4438      	add	r0, r7
 801ed1c:	e7f2      	b.n	801ed04 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x4c>
 801ed1e:	f854 eb04 	ldr.w	lr, [r4], #4
 801ed22:	f84c ef04 	str.w	lr, [ip, #4]!
 801ed26:	e7f5      	b.n	801ed14 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x5c>
 801ed28:	4293      	cmp	r3, r2
 801ed2a:	d010      	beq.n	801ed4e <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x96>
 801ed2c:	6001      	str	r1, [r0, #0]
 801ed2e:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 801ed32:	4607      	mov	r7, r0
 801ed34:	00ae      	lsls	r6, r5, #2
 801ed36:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 801ed3a:	42ac      	cmp	r4, r5
 801ed3c:	d102      	bne.n	801ed44 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x8c>
 801ed3e:	3604      	adds	r6, #4
 801ed40:	4430      	add	r0, r6
 801ed42:	e7f1      	b.n	801ed28 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x70>
 801ed44:	f854 cb04 	ldr.w	ip, [r4], #4
 801ed48:	f847 cf04 	str.w	ip, [r7, #4]!
 801ed4c:	e7f5      	b.n	801ed3a <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_+0x82>
 801ed4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0801ed52 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE14_M_group_floatEPKcjwPKwPwS9_Ri>:
 801ed52:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801ed54:	e9dd 7408 	ldrd	r7, r4, [sp, #32]
 801ed58:	4608      	mov	r0, r1
 801ed5a:	4619      	mov	r1, r3
 801ed5c:	e9dd 360a 	ldrd	r3, r6, [sp, #40]	; 0x28
 801ed60:	b1cf      	cbz	r7, 801ed96 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE14_M_group_floatEPKcjwPKwPwS9_Ri+0x44>
 801ed62:	1afd      	subs	r5, r7, r3
 801ed64:	10ad      	asrs	r5, r5, #2
 801ed66:	eb03 0c85 	add.w	ip, r3, r5, lsl #2
 801ed6a:	e9cd 3c00 	strd	r3, ip, [sp]
 801ed6e:	4613      	mov	r3, r2
 801ed70:	4602      	mov	r2, r0
 801ed72:	4620      	mov	r0, r4
 801ed74:	f7ff ffa0 	bl	801ecb8 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_>
 801ed78:	1b04      	subs	r4, r0, r4
 801ed7a:	10a4      	asrs	r4, r4, #2
 801ed7c:	b147      	cbz	r7, 801ed90 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE14_M_group_floatEPKcjwPKwPwS9_Ri+0x3e>
 801ed7e:	6832      	ldr	r2, [r6, #0]
 801ed80:	1b52      	subs	r2, r2, r5
 801ed82:	d002      	beq.n	801ed8a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE14_M_group_floatEPKcjwPKwPwS9_Ri+0x38>
 801ed84:	4639      	mov	r1, r7
 801ed86:	f00b fce6 	bl	802a756 <wmemcpy>
 801ed8a:	6833      	ldr	r3, [r6, #0]
 801ed8c:	1b5b      	subs	r3, r3, r5
 801ed8e:	441c      	add	r4, r3
 801ed90:	6034      	str	r4, [r6, #0]
 801ed92:	b003      	add	sp, #12
 801ed94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ed96:	6835      	ldr	r5, [r6, #0]
 801ed98:	e7e5      	b.n	801ed66 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE14_M_group_floatEPKcjwPKwPwS9_Ri+0x14>

0801ed9a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE12_M_group_intEPKcjwRSt8ios_basePwS9_Ri>:
 801ed9a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801ed9c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ed9e:	e9dd 5007 	ldrd	r5, r0, [sp, #28]
 801eda2:	460e      	mov	r6, r1
 801eda4:	4619      	mov	r1, r3
 801eda6:	6823      	ldr	r3, [r4, #0]
 801eda8:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 801edac:	e9cd 0300 	strd	r0, r3, [sp]
 801edb0:	4613      	mov	r3, r2
 801edb2:	4628      	mov	r0, r5
 801edb4:	4632      	mov	r2, r6
 801edb6:	f7ff ff7f 	bl	801ecb8 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_>
 801edba:	1b40      	subs	r0, r0, r5
 801edbc:	1080      	asrs	r0, r0, #2
 801edbe:	6020      	str	r0, [r4, #0]
 801edc0:	b002      	add	sp, #8
 801edc2:	bd70      	pop	{r4, r5, r6, pc}

0801edc4 <_ZSt13__int_to_charIwmEiPT_T0_PKS0_St13_Ios_Fmtflagsb>:
 801edc4:	b570      	push	{r4, r5, r6, lr}
 801edc6:	f89d 4010 	ldrb.w	r4, [sp, #16]
 801edca:	b18c      	cbz	r4, 801edf0 <_ZSt13__int_to_charIwmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x2c>
 801edcc:	4603      	mov	r3, r0
 801edce:	260a      	movs	r6, #10
 801edd0:	fbb1 f5f6 	udiv	r5, r1, r6
 801edd4:	fb06 1415 	mls	r4, r6, r5, r1
 801edd8:	3404      	adds	r4, #4
 801edda:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801edde:	f843 4d04 	str.w	r4, [r3, #-4]!
 801ede2:	460c      	mov	r4, r1
 801ede4:	2c09      	cmp	r4, #9
 801ede6:	4629      	mov	r1, r5
 801ede8:	d8f2      	bhi.n	801edd0 <_ZSt13__int_to_charIwmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0xc>
 801edea:	1ac0      	subs	r0, r0, r3
 801edec:	1080      	asrs	r0, r0, #2
 801edee:	bd70      	pop	{r4, r5, r6, pc}
 801edf0:	f003 044a 	and.w	r4, r3, #74	; 0x4a
 801edf4:	2c40      	cmp	r4, #64	; 0x40
 801edf6:	d10a      	bne.n	801ee0e <_ZSt13__int_to_charIwmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x4a>
 801edf8:	4603      	mov	r3, r0
 801edfa:	f001 0407 	and.w	r4, r1, #7
 801edfe:	3404      	adds	r4, #4
 801ee00:	08c9      	lsrs	r1, r1, #3
 801ee02:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801ee06:	f843 4d04 	str.w	r4, [r3, #-4]!
 801ee0a:	d1f6      	bne.n	801edfa <_ZSt13__int_to_charIwmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x36>
 801ee0c:	e7ed      	b.n	801edea <_ZSt13__int_to_charIwmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x26>
 801ee0e:	f413 4f80 	tst.w	r3, #16384	; 0x4000
 801ee12:	bf14      	ite	ne
 801ee14:	2514      	movne	r5, #20
 801ee16:	2504      	moveq	r5, #4
 801ee18:	4603      	mov	r3, r0
 801ee1a:	f001 040f 	and.w	r4, r1, #15
 801ee1e:	442c      	add	r4, r5
 801ee20:	0909      	lsrs	r1, r1, #4
 801ee22:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801ee26:	f843 4d04 	str.w	r4, [r3, #-4]!
 801ee2a:	d1f6      	bne.n	801ee1a <_ZSt13__int_to_charIwmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x56>
 801ee2c:	e7dd      	b.n	801edea <_ZSt13__int_to_charIwmEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x26>

0801ee2e <_ZSt13__int_to_charIwyEiPT_T0_PKS0_St13_Ios_Fmtflagsb>:
 801ee2e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ee32:	4614      	mov	r4, r2
 801ee34:	f89d 2028 	ldrb.w	r2, [sp, #40]	; 0x28
 801ee38:	461d      	mov	r5, r3
 801ee3a:	4607      	mov	r7, r0
 801ee3c:	e9dd 8308 	ldrd	r8, r3, [sp, #32]
 801ee40:	b1f2      	cbz	r2, 801ee80 <_ZSt13__int_to_charIwyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x52>
 801ee42:	4606      	mov	r6, r0
 801ee44:	4620      	mov	r0, r4
 801ee46:	4629      	mov	r1, r5
 801ee48:	220a      	movs	r2, #10
 801ee4a:	2300      	movs	r3, #0
 801ee4c:	f7e1 ff26 	bl	8000c9c <__aeabi_uldivmod>
 801ee50:	3204      	adds	r2, #4
 801ee52:	4620      	mov	r0, r4
 801ee54:	f858 3022 	ldr.w	r3, [r8, r2, lsl #2]
 801ee58:	f846 3d04 	str.w	r3, [r6, #-4]!
 801ee5c:	4629      	mov	r1, r5
 801ee5e:	2300      	movs	r3, #0
 801ee60:	220a      	movs	r2, #10
 801ee62:	f7e1 ff1b 	bl	8000c9c <__aeabi_uldivmod>
 801ee66:	46a2      	mov	sl, r4
 801ee68:	46a9      	mov	r9, r5
 801ee6a:	f1ba 0f0a 	cmp.w	sl, #10
 801ee6e:	f179 0300 	sbcs.w	r3, r9, #0
 801ee72:	4604      	mov	r4, r0
 801ee74:	460d      	mov	r5, r1
 801ee76:	d2e5      	bcs.n	801ee44 <_ZSt13__int_to_charIwyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x16>
 801ee78:	1bb8      	subs	r0, r7, r6
 801ee7a:	1080      	asrs	r0, r0, #2
 801ee7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ee80:	f003 024a 	and.w	r2, r3, #74	; 0x4a
 801ee84:	2a40      	cmp	r2, #64	; 0x40
 801ee86:	d10f      	bne.n	801eea8 <_ZSt13__int_to_charIwyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x7a>
 801ee88:	4606      	mov	r6, r0
 801ee8a:	f004 0307 	and.w	r3, r4, #7
 801ee8e:	3304      	adds	r3, #4
 801ee90:	08e4      	lsrs	r4, r4, #3
 801ee92:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ee96:	f846 3d04 	str.w	r3, [r6, #-4]!
 801ee9a:	ea44 7445 	orr.w	r4, r4, r5, lsl #29
 801ee9e:	08ed      	lsrs	r5, r5, #3
 801eea0:	ea54 0305 	orrs.w	r3, r4, r5
 801eea4:	d1f1      	bne.n	801ee8a <_ZSt13__int_to_charIwyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x5c>
 801eea6:	e7e7      	b.n	801ee78 <_ZSt13__int_to_charIwyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x4a>
 801eea8:	f413 4f80 	tst.w	r3, #16384	; 0x4000
 801eeac:	bf14      	ite	ne
 801eeae:	2214      	movne	r2, #20
 801eeb0:	2204      	moveq	r2, #4
 801eeb2:	4606      	mov	r6, r0
 801eeb4:	f004 030f 	and.w	r3, r4, #15
 801eeb8:	4413      	add	r3, r2
 801eeba:	0924      	lsrs	r4, r4, #4
 801eebc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801eec0:	f846 3d04 	str.w	r3, [r6, #-4]!
 801eec4:	ea44 7405 	orr.w	r4, r4, r5, lsl #28
 801eec8:	092d      	lsrs	r5, r5, #4
 801eeca:	ea54 0305 	orrs.w	r3, r4, r5
 801eece:	d1f1      	bne.n	801eeb4 <_ZSt13__int_to_charIwyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x86>
 801eed0:	e7d2      	b.n	801ee78 <_ZSt13__int_to_charIwyEiPT_T0_PKS0_St13_Ios_Fmtflagsb+0x4a>
	...

0801eed4 <_ZNSt18__moneypunct_cacheIwLb0EE8_M_cacheERKSt6locale>:
 801eed4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801eed8:	4604      	mov	r4, r0
 801eeda:	4608      	mov	r0, r1
 801eedc:	460f      	mov	r7, r1
 801eede:	f7ff fe55 	bl	801eb8c <_ZSt9use_facetISt10moneypunctIwLb0EEERKT_RKSt6locale>
 801eee2:	4605      	mov	r5, r0
 801eee4:	f7ff fb78 	bl	801e5d8 <_ZNKSt10moneypunctIwLb0EE13decimal_pointEv>
 801eee8:	6160      	str	r0, [r4, #20]
 801eeea:	4628      	mov	r0, r5
 801eeec:	f7ff fb77 	bl	801e5de <_ZNKSt10moneypunctIwLb0EE13thousands_sepEv>
 801eef0:	61a0      	str	r0, [r4, #24]
 801eef2:	4628      	mov	r0, r5
 801eef4:	f7ff fb92 	bl	801e61c <_ZNKSt10moneypunctIwLb0EE11frac_digitsEv>
 801eef8:	4629      	mov	r1, r5
 801eefa:	6360      	str	r0, [r4, #52]	; 0x34
 801eefc:	4668      	mov	r0, sp
 801eefe:	f7ff fb71 	bl	801e5e4 <_ZNKSt10moneypunctIwLb0EE8groupingEv>
 801ef02:	9b00      	ldr	r3, [sp, #0]
 801ef04:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801ef08:	60e0      	str	r0, [r4, #12]
 801ef0a:	f005 f867 	bl	8023fdc <_Znaj>
 801ef0e:	2300      	movs	r3, #0
 801ef10:	4601      	mov	r1, r0
 801ef12:	68e2      	ldr	r2, [r4, #12]
 801ef14:	4606      	mov	r6, r0
 801ef16:	4668      	mov	r0, sp
 801ef18:	f7f0 ffaa 	bl	800fe70 <_ZNKSs4copyEPcjj>
 801ef1c:	68e3      	ldr	r3, [r4, #12]
 801ef1e:	b12b      	cbz	r3, 801ef2c <_ZNSt18__moneypunct_cacheIwLb0EE8_M_cacheERKSt6locale+0x58>
 801ef20:	f996 3000 	ldrsb.w	r3, [r6]
 801ef24:	2b00      	cmp	r3, #0
 801ef26:	bfd4      	ite	le
 801ef28:	2300      	movle	r3, #0
 801ef2a:	2301      	movgt	r3, #1
 801ef2c:	4629      	mov	r1, r5
 801ef2e:	7423      	strb	r3, [r4, #16]
 801ef30:	a801      	add	r0, sp, #4
 801ef32:	f7ff fb5e 	bl	801e5f2 <_ZNKSt10moneypunctIwLb0EE11curr_symbolEv>
 801ef36:	9b01      	ldr	r3, [sp, #4]
 801ef38:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801ef3c:	6220      	str	r0, [r4, #32]
 801ef3e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801ef42:	4298      	cmp	r0, r3
 801ef44:	bf34      	ite	cc
 801ef46:	0080      	lslcc	r0, r0, #2
 801ef48:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 801ef4c:	f005 f846 	bl	8023fdc <_Znaj>
 801ef50:	6a22      	ldr	r2, [r4, #32]
 801ef52:	4680      	mov	r8, r0
 801ef54:	2300      	movs	r3, #0
 801ef56:	4601      	mov	r1, r0
 801ef58:	a801      	add	r0, sp, #4
 801ef5a:	f7f1 fb43 	bl	80105e4 <_ZNKSbIwSt11char_traitsIwESaIwEE4copyEPwjj>
 801ef5e:	4629      	mov	r1, r5
 801ef60:	a802      	add	r0, sp, #8
 801ef62:	f7ff fb4d 	bl	801e600 <_ZNKSt10moneypunctIwLb0EE13positive_signEv>
 801ef66:	9b02      	ldr	r3, [sp, #8]
 801ef68:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801ef6c:	62a0      	str	r0, [r4, #40]	; 0x28
 801ef6e:	f06f 4260 	mvn.w	r2, #3758096384	; 0xe0000000
 801ef72:	4290      	cmp	r0, r2
 801ef74:	bf34      	ite	cc
 801ef76:	0080      	lslcc	r0, r0, #2
 801ef78:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 801ef7c:	f005 f82e 	bl	8023fdc <_Znaj>
 801ef80:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801ef82:	4681      	mov	r9, r0
 801ef84:	2300      	movs	r3, #0
 801ef86:	4601      	mov	r1, r0
 801ef88:	a802      	add	r0, sp, #8
 801ef8a:	f7f1 fb2b 	bl	80105e4 <_ZNKSbIwSt11char_traitsIwESaIwEE4copyEPwjj>
 801ef8e:	4629      	mov	r1, r5
 801ef90:	a803      	add	r0, sp, #12
 801ef92:	f7ff fb3c 	bl	801e60e <_ZNKSt10moneypunctIwLb0EE13negative_signEv>
 801ef96:	9b03      	ldr	r3, [sp, #12]
 801ef98:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801ef9c:	6320      	str	r0, [r4, #48]	; 0x30
 801ef9e:	f06f 4260 	mvn.w	r2, #3758096384	; 0xe0000000
 801efa2:	4290      	cmp	r0, r2
 801efa4:	bf34      	ite	cc
 801efa6:	0080      	lslcc	r0, r0, #2
 801efa8:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 801efac:	f005 f816 	bl	8023fdc <_Znaj>
 801efb0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801efb2:	4601      	mov	r1, r0
 801efb4:	2300      	movs	r3, #0
 801efb6:	4682      	mov	sl, r0
 801efb8:	a803      	add	r0, sp, #12
 801efba:	f7f1 fb13 	bl	80105e4 <_ZNKSbIwSt11char_traitsIwESaIwEE4copyEPwjj>
 801efbe:	4628      	mov	r0, r5
 801efc0:	f7ff fb2f 	bl	801e622 <_ZNKSt10moneypunctIwLb0EE10pos_formatEv>
 801efc4:	63a0      	str	r0, [r4, #56]	; 0x38
 801efc6:	4628      	mov	r0, r5
 801efc8:	f7ff fb30 	bl	801e62c <_ZNKSt10moneypunctIwLb0EE10neg_formatEv>
 801efcc:	63e0      	str	r0, [r4, #60]	; 0x3c
 801efce:	4638      	mov	r0, r7
 801efd0:	f7ff fd46 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 801efd4:	4b10      	ldr	r3, [pc, #64]	; (801f018 <_ZNSt18__moneypunct_cacheIwLb0EE8_M_cacheERKSt6locale+0x144>)
 801efd6:	6819      	ldr	r1, [r3, #0]
 801efd8:	f104 0340 	add.w	r3, r4, #64	; 0x40
 801efdc:	f101 020b 	add.w	r2, r1, #11
 801efe0:	f7f6 fbcc 	bl	801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>
 801efe4:	2301      	movs	r3, #1
 801efe6:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 801efea:	60a6      	str	r6, [r4, #8]
 801efec:	f8c4 801c 	str.w	r8, [r4, #28]
 801eff0:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 801eff4:	f8c4 a02c 	str.w	sl, [r4, #44]	; 0x2c
 801eff8:	a803      	add	r0, sp, #12
 801effa:	f7f1 fbaf 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801effe:	a802      	add	r0, sp, #8
 801f000:	f7f1 fbac 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801f004:	a801      	add	r0, sp, #4
 801f006:	f7f1 fba9 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801f00a:	4668      	mov	r0, sp
 801f00c:	f7f0 fffa 	bl	8010004 <_ZNSsD1Ev>
 801f010:	b004      	add	sp, #16
 801f012:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f016:	bf00      	nop
 801f018:	2000003c 	.word	0x2000003c

0801f01c <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb0EEEclERKSt6locale.isra.0>:
 801f01c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f020:	4605      	mov	r5, r0
 801f022:	480f      	ldr	r0, [pc, #60]	; (801f060 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb0EEEclERKSt6locale.isra.0+0x44>)
 801f024:	f7ed f9d6 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801f028:	682b      	ldr	r3, [r5, #0]
 801f02a:	68df      	ldr	r7, [r3, #12]
 801f02c:	f857 8020 	ldr.w	r8, [r7, r0, lsl #2]
 801f030:	4604      	mov	r4, r0
 801f032:	f1b8 0f00 	cmp.w	r8, #0
 801f036:	d10f      	bne.n	801f058 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb0EEEclERKSt6locale.isra.0+0x3c>
 801f038:	2070      	movs	r0, #112	; 0x70
 801f03a:	f7ec ff81 	bl	800bf40 <_Znwj>
 801f03e:	4641      	mov	r1, r8
 801f040:	4606      	mov	r6, r0
 801f042:	f7ff fa95 	bl	801e570 <_ZNSt18__moneypunct_cacheIwLb0EEC1Ej>
 801f046:	4629      	mov	r1, r5
 801f048:	4630      	mov	r0, r6
 801f04a:	f7ff ff43 	bl	801eed4 <_ZNSt18__moneypunct_cacheIwLb0EE8_M_cacheERKSt6locale>
 801f04e:	6828      	ldr	r0, [r5, #0]
 801f050:	4622      	mov	r2, r4
 801f052:	4631      	mov	r1, r6
 801f054:	f7ed fa84 	bl	800c560 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj>
 801f058:	f857 0024 	ldr.w	r0, [r7, r4, lsl #2]
 801f05c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f060:	20003d4c 	.word	0x20003d4c

0801f064 <_ZNSt18__moneypunct_cacheIwLb1EE8_M_cacheERKSt6locale>:
 801f064:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801f068:	4604      	mov	r4, r0
 801f06a:	4608      	mov	r0, r1
 801f06c:	460f      	mov	r7, r1
 801f06e:	f7ff fd6f 	bl	801eb50 <_ZSt9use_facetISt10moneypunctIwLb1EEERKT_RKSt6locale>
 801f072:	4605      	mov	r5, r0
 801f074:	f7ff fadf 	bl	801e636 <_ZNKSt10moneypunctIwLb1EE13decimal_pointEv>
 801f078:	6160      	str	r0, [r4, #20]
 801f07a:	4628      	mov	r0, r5
 801f07c:	f7ff fade 	bl	801e63c <_ZNKSt10moneypunctIwLb1EE13thousands_sepEv>
 801f080:	61a0      	str	r0, [r4, #24]
 801f082:	4628      	mov	r0, r5
 801f084:	f7ff faf9 	bl	801e67a <_ZNKSt10moneypunctIwLb1EE11frac_digitsEv>
 801f088:	4629      	mov	r1, r5
 801f08a:	6360      	str	r0, [r4, #52]	; 0x34
 801f08c:	4668      	mov	r0, sp
 801f08e:	f7ff fad8 	bl	801e642 <_ZNKSt10moneypunctIwLb1EE8groupingEv>
 801f092:	9b00      	ldr	r3, [sp, #0]
 801f094:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801f098:	60e0      	str	r0, [r4, #12]
 801f09a:	f004 ff9f 	bl	8023fdc <_Znaj>
 801f09e:	2300      	movs	r3, #0
 801f0a0:	4601      	mov	r1, r0
 801f0a2:	68e2      	ldr	r2, [r4, #12]
 801f0a4:	4606      	mov	r6, r0
 801f0a6:	4668      	mov	r0, sp
 801f0a8:	f7f0 fee2 	bl	800fe70 <_ZNKSs4copyEPcjj>
 801f0ac:	68e3      	ldr	r3, [r4, #12]
 801f0ae:	b12b      	cbz	r3, 801f0bc <_ZNSt18__moneypunct_cacheIwLb1EE8_M_cacheERKSt6locale+0x58>
 801f0b0:	f996 3000 	ldrsb.w	r3, [r6]
 801f0b4:	2b00      	cmp	r3, #0
 801f0b6:	bfd4      	ite	le
 801f0b8:	2300      	movle	r3, #0
 801f0ba:	2301      	movgt	r3, #1
 801f0bc:	4629      	mov	r1, r5
 801f0be:	7423      	strb	r3, [r4, #16]
 801f0c0:	a801      	add	r0, sp, #4
 801f0c2:	f7ff fac5 	bl	801e650 <_ZNKSt10moneypunctIwLb1EE11curr_symbolEv>
 801f0c6:	9b01      	ldr	r3, [sp, #4]
 801f0c8:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801f0cc:	6220      	str	r0, [r4, #32]
 801f0ce:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801f0d2:	4298      	cmp	r0, r3
 801f0d4:	bf34      	ite	cc
 801f0d6:	0080      	lslcc	r0, r0, #2
 801f0d8:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 801f0dc:	f004 ff7e 	bl	8023fdc <_Znaj>
 801f0e0:	6a22      	ldr	r2, [r4, #32]
 801f0e2:	4680      	mov	r8, r0
 801f0e4:	2300      	movs	r3, #0
 801f0e6:	4601      	mov	r1, r0
 801f0e8:	a801      	add	r0, sp, #4
 801f0ea:	f7f1 fa7b 	bl	80105e4 <_ZNKSbIwSt11char_traitsIwESaIwEE4copyEPwjj>
 801f0ee:	4629      	mov	r1, r5
 801f0f0:	a802      	add	r0, sp, #8
 801f0f2:	f7ff fab4 	bl	801e65e <_ZNKSt10moneypunctIwLb1EE13positive_signEv>
 801f0f6:	9b02      	ldr	r3, [sp, #8]
 801f0f8:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801f0fc:	62a0      	str	r0, [r4, #40]	; 0x28
 801f0fe:	f06f 4260 	mvn.w	r2, #3758096384	; 0xe0000000
 801f102:	4290      	cmp	r0, r2
 801f104:	bf34      	ite	cc
 801f106:	0080      	lslcc	r0, r0, #2
 801f108:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 801f10c:	f004 ff66 	bl	8023fdc <_Znaj>
 801f110:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801f112:	4681      	mov	r9, r0
 801f114:	2300      	movs	r3, #0
 801f116:	4601      	mov	r1, r0
 801f118:	a802      	add	r0, sp, #8
 801f11a:	f7f1 fa63 	bl	80105e4 <_ZNKSbIwSt11char_traitsIwESaIwEE4copyEPwjj>
 801f11e:	4629      	mov	r1, r5
 801f120:	a803      	add	r0, sp, #12
 801f122:	f7ff faa3 	bl	801e66c <_ZNKSt10moneypunctIwLb1EE13negative_signEv>
 801f126:	9b03      	ldr	r3, [sp, #12]
 801f128:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801f12c:	6320      	str	r0, [r4, #48]	; 0x30
 801f12e:	f06f 4260 	mvn.w	r2, #3758096384	; 0xe0000000
 801f132:	4290      	cmp	r0, r2
 801f134:	bf34      	ite	cc
 801f136:	0080      	lslcc	r0, r0, #2
 801f138:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 801f13c:	f004 ff4e 	bl	8023fdc <_Znaj>
 801f140:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801f142:	4601      	mov	r1, r0
 801f144:	2300      	movs	r3, #0
 801f146:	4682      	mov	sl, r0
 801f148:	a803      	add	r0, sp, #12
 801f14a:	f7f1 fa4b 	bl	80105e4 <_ZNKSbIwSt11char_traitsIwESaIwEE4copyEPwjj>
 801f14e:	4628      	mov	r0, r5
 801f150:	f7ff fa96 	bl	801e680 <_ZNKSt10moneypunctIwLb1EE10pos_formatEv>
 801f154:	63a0      	str	r0, [r4, #56]	; 0x38
 801f156:	4628      	mov	r0, r5
 801f158:	f7ff fa97 	bl	801e68a <_ZNKSt10moneypunctIwLb1EE10neg_formatEv>
 801f15c:	63e0      	str	r0, [r4, #60]	; 0x3c
 801f15e:	4638      	mov	r0, r7
 801f160:	f7ff fc7e 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 801f164:	4b10      	ldr	r3, [pc, #64]	; (801f1a8 <_ZNSt18__moneypunct_cacheIwLb1EE8_M_cacheERKSt6locale+0x144>)
 801f166:	6819      	ldr	r1, [r3, #0]
 801f168:	f104 0340 	add.w	r3, r4, #64	; 0x40
 801f16c:	f101 020b 	add.w	r2, r1, #11
 801f170:	f7f6 fb04 	bl	801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>
 801f174:	2301      	movs	r3, #1
 801f176:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 801f17a:	60a6      	str	r6, [r4, #8]
 801f17c:	f8c4 801c 	str.w	r8, [r4, #28]
 801f180:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 801f184:	f8c4 a02c 	str.w	sl, [r4, #44]	; 0x2c
 801f188:	a803      	add	r0, sp, #12
 801f18a:	f7f1 fae7 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801f18e:	a802      	add	r0, sp, #8
 801f190:	f7f1 fae4 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801f194:	a801      	add	r0, sp, #4
 801f196:	f7f1 fae1 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801f19a:	4668      	mov	r0, sp
 801f19c:	f7f0 ff32 	bl	8010004 <_ZNSsD1Ev>
 801f1a0:	b004      	add	sp, #16
 801f1a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f1a6:	bf00      	nop
 801f1a8:	2000003c 	.word	0x2000003c

0801f1ac <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb1EEEclERKSt6locale.isra.0>:
 801f1ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f1b0:	4605      	mov	r5, r0
 801f1b2:	480f      	ldr	r0, [pc, #60]	; (801f1f0 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb1EEEclERKSt6locale.isra.0+0x44>)
 801f1b4:	f7ed f90e 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801f1b8:	682b      	ldr	r3, [r5, #0]
 801f1ba:	68df      	ldr	r7, [r3, #12]
 801f1bc:	f857 8020 	ldr.w	r8, [r7, r0, lsl #2]
 801f1c0:	4604      	mov	r4, r0
 801f1c2:	f1b8 0f00 	cmp.w	r8, #0
 801f1c6:	d10f      	bne.n	801f1e8 <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb1EEEclERKSt6locale.isra.0+0x3c>
 801f1c8:	2070      	movs	r0, #112	; 0x70
 801f1ca:	f7ec feb9 	bl	800bf40 <_Znwj>
 801f1ce:	4641      	mov	r1, r8
 801f1d0:	4606      	mov	r6, r0
 801f1d2:	f7ff f9e7 	bl	801e5a4 <_ZNSt18__moneypunct_cacheIwLb1EEC1Ej>
 801f1d6:	4629      	mov	r1, r5
 801f1d8:	4630      	mov	r0, r6
 801f1da:	f7ff ff43 	bl	801f064 <_ZNSt18__moneypunct_cacheIwLb1EE8_M_cacheERKSt6locale>
 801f1de:	6828      	ldr	r0, [r5, #0]
 801f1e0:	4622      	mov	r2, r4
 801f1e2:	4631      	mov	r1, r6
 801f1e4:	f7ed f9bc 	bl	800c560 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj>
 801f1e8:	f857 0024 	ldr.w	r0, [r7, r4, lsl #2]
 801f1ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f1f0:	20003d48 	.word	0x20003d48

0801f1f4 <_ZNSt16__numpunct_cacheIwE8_M_cacheERKSt6locale>:
 801f1f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801f1f8:	4604      	mov	r4, r0
 801f1fa:	b085      	sub	sp, #20
 801f1fc:	4608      	mov	r0, r1
 801f1fe:	460f      	mov	r7, r1
 801f200:	f7ff fc4c 	bl	801ea9c <_ZSt9use_facetISt8numpunctIwEERKT_RKSt6locale>
 801f204:	4601      	mov	r1, r0
 801f206:	4605      	mov	r5, r0
 801f208:	a801      	add	r0, sp, #4
 801f20a:	f7ff fac9 	bl	801e7a0 <_ZNKSt8numpunctIwE8groupingEv>
 801f20e:	9b01      	ldr	r3, [sp, #4]
 801f210:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801f214:	60e0      	str	r0, [r4, #12]
 801f216:	f004 fee1 	bl	8023fdc <_Znaj>
 801f21a:	2300      	movs	r3, #0
 801f21c:	4601      	mov	r1, r0
 801f21e:	68e2      	ldr	r2, [r4, #12]
 801f220:	4606      	mov	r6, r0
 801f222:	a801      	add	r0, sp, #4
 801f224:	f7f0 fe24 	bl	800fe70 <_ZNKSs4copyEPcjj>
 801f228:	68e3      	ldr	r3, [r4, #12]
 801f22a:	b12b      	cbz	r3, 801f238 <_ZNSt16__numpunct_cacheIwE8_M_cacheERKSt6locale+0x44>
 801f22c:	f996 3000 	ldrsb.w	r3, [r6]
 801f230:	2b00      	cmp	r3, #0
 801f232:	bfd4      	ite	le
 801f234:	2300      	movle	r3, #0
 801f236:	2301      	movgt	r3, #1
 801f238:	4629      	mov	r1, r5
 801f23a:	7423      	strb	r3, [r4, #16]
 801f23c:	a802      	add	r0, sp, #8
 801f23e:	f7ff fab6 	bl	801e7ae <_ZNKSt8numpunctIwE8truenameEv>
 801f242:	9b02      	ldr	r3, [sp, #8]
 801f244:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801f248:	61a0      	str	r0, [r4, #24]
 801f24a:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801f24e:	4298      	cmp	r0, r3
 801f250:	bf34      	ite	cc
 801f252:	0080      	lslcc	r0, r0, #2
 801f254:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 801f258:	f004 fec0 	bl	8023fdc <_Znaj>
 801f25c:	69a2      	ldr	r2, [r4, #24]
 801f25e:	4681      	mov	r9, r0
 801f260:	2300      	movs	r3, #0
 801f262:	4601      	mov	r1, r0
 801f264:	a802      	add	r0, sp, #8
 801f266:	f7f1 f9bd 	bl	80105e4 <_ZNKSbIwSt11char_traitsIwESaIwEE4copyEPwjj>
 801f26a:	4629      	mov	r1, r5
 801f26c:	a803      	add	r0, sp, #12
 801f26e:	f7ff faa5 	bl	801e7bc <_ZNKSt8numpunctIwE9falsenameEv>
 801f272:	9b03      	ldr	r3, [sp, #12]
 801f274:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 801f278:	6220      	str	r0, [r4, #32]
 801f27a:	f06f 4260 	mvn.w	r2, #3758096384	; 0xe0000000
 801f27e:	4290      	cmp	r0, r2
 801f280:	bf34      	ite	cc
 801f282:	0080      	lslcc	r0, r0, #2
 801f284:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 801f288:	f004 fea8 	bl	8023fdc <_Znaj>
 801f28c:	6a22      	ldr	r2, [r4, #32]
 801f28e:	4601      	mov	r1, r0
 801f290:	2300      	movs	r3, #0
 801f292:	4680      	mov	r8, r0
 801f294:	a803      	add	r0, sp, #12
 801f296:	f7f1 f9a5 	bl	80105e4 <_ZNKSbIwSt11char_traitsIwESaIwEE4copyEPwjj>
 801f29a:	4628      	mov	r0, r5
 801f29c:	f7ff fa7a 	bl	801e794 <_ZNKSt8numpunctIwE13decimal_pointEv>
 801f2a0:	6260      	str	r0, [r4, #36]	; 0x24
 801f2a2:	4628      	mov	r0, r5
 801f2a4:	f7ff fa79 	bl	801e79a <_ZNKSt8numpunctIwE13thousands_sepEv>
 801f2a8:	62a0      	str	r0, [r4, #40]	; 0x28
 801f2aa:	4638      	mov	r0, r7
 801f2ac:	f7ff fbd8 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 801f2b0:	4b12      	ldr	r3, [pc, #72]	; (801f2fc <_ZNSt16__numpunct_cacheIwE8_M_cacheERKSt6locale+0x108>)
 801f2b2:	6819      	ldr	r1, [r3, #0]
 801f2b4:	f104 032c 	add.w	r3, r4, #44	; 0x2c
 801f2b8:	f101 0224 	add.w	r2, r1, #36	; 0x24
 801f2bc:	4605      	mov	r5, r0
 801f2be:	f7f6 fa5d 	bl	801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>
 801f2c2:	4b0f      	ldr	r3, [pc, #60]	; (801f300 <_ZNSt16__numpunct_cacheIwE8_M_cacheERKSt6locale+0x10c>)
 801f2c4:	6819      	ldr	r1, [r3, #0]
 801f2c6:	4628      	mov	r0, r5
 801f2c8:	f101 021a 	add.w	r2, r1, #26
 801f2cc:	f104 03bc 	add.w	r3, r4, #188	; 0xbc
 801f2d0:	f7f6 fa54 	bl	801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>
 801f2d4:	2301      	movs	r3, #1
 801f2d6:	f884 3124 	strb.w	r3, [r4, #292]	; 0x124
 801f2da:	60a6      	str	r6, [r4, #8]
 801f2dc:	f8c4 9014 	str.w	r9, [r4, #20]
 801f2e0:	f8c4 801c 	str.w	r8, [r4, #28]
 801f2e4:	a803      	add	r0, sp, #12
 801f2e6:	f7f1 fa39 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801f2ea:	a802      	add	r0, sp, #8
 801f2ec:	f7f1 fa36 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801f2f0:	a801      	add	r0, sp, #4
 801f2f2:	f7f0 fe87 	bl	8010004 <_ZNSsD1Ev>
 801f2f6:	b005      	add	sp, #20
 801f2f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801f2fc:	20000038 	.word	0x20000038
 801f300:	20000034 	.word	0x20000034

0801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>:
 801f304:	b510      	push	{r4, lr}
 801f306:	4604      	mov	r4, r0
 801f308:	6800      	ldr	r0, [r0, #0]
 801f30a:	f7ff f8cf 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 801f30e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801f312:	6063      	str	r3, [r4, #4]
 801f314:	4620      	mov	r0, r4
 801f316:	bd10      	pop	{r4, pc}

0801f318 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE>:
 801f318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f31c:	b08f      	sub	sp, #60	; 0x3c
 801f31e:	e9dd 7818 	ldrd	r7, r8, [sp, #96]	; 0x60
 801f322:	f107 046c 	add.w	r4, r7, #108	; 0x6c
 801f326:	a906      	add	r1, sp, #24
 801f328:	9005      	str	r0, [sp, #20]
 801f32a:	4620      	mov	r0, r4
 801f32c:	e881 000c 	stmia.w	r1, {r2, r3}
 801f330:	f7ff fb96 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 801f334:	4606      	mov	r6, r0
 801f336:	4620      	mov	r0, r4
 801f338:	f7ff ff38 	bl	801f1ac <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb1EEEclERKSt6locale.isra.0>
 801f33c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801f33e:	681d      	ldr	r5, [r3, #0]
 801f340:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801f342:	682a      	ldr	r2, [r5, #0]
 801f344:	429a      	cmp	r2, r3
 801f346:	4604      	mov	r4, r0
 801f348:	f855 3c0c 	ldr.w	r3, [r5, #-12]
 801f34c:	f000 8084 	beq.w	801f458 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x140>
 801f350:	6b82      	ldr	r2, [r0, #56]	; 0x38
 801f352:	9209      	str	r2, [sp, #36]	; 0x24
 801f354:	f8d0 9028 	ldr.w	r9, [r0, #40]	; 0x28
 801f358:	6a42      	ldr	r2, [r0, #36]	; 0x24
 801f35a:	9203      	str	r2, [sp, #12]
 801f35c:	6832      	ldr	r2, [r6, #0]
 801f35e:	4630      	mov	r0, r6
 801f360:	f8d2 a014 	ldr.w	sl, [r2, #20]
 801f364:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 801f368:	462a      	mov	r2, r5
 801f36a:	2104      	movs	r1, #4
 801f36c:	47d0      	blx	sl
 801f36e:	1b40      	subs	r0, r0, r5
 801f370:	1086      	asrs	r6, r0, #2
 801f372:	f000 80c7 	beq.w	801f504 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x1ec>
 801f376:	4b7c      	ldr	r3, [pc, #496]	; (801f568 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x250>)
 801f378:	930a      	str	r3, [sp, #40]	; 0x28
 801f37a:	0071      	lsls	r1, r6, #1
 801f37c:	a80a      	add	r0, sp, #40	; 0x28
 801f37e:	f7f1 fb0a 	bl	8010996 <_ZNSbIwSt11char_traitsIwESaIwEE7reserveEj>
 801f382:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801f384:	eba6 0a03 	sub.w	sl, r6, r3
 801f388:	f1ba 0f00 	cmp.w	sl, #0
 801f38c:	dd2a      	ble.n	801f3e4 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0xcc>
 801f38e:	ea3a 0a23 	bics.w	sl, sl, r3, asr #32
 801f392:	bf28      	it	cs
 801f394:	46b2      	movcs	sl, r6
 801f396:	68e3      	ldr	r3, [r4, #12]
 801f398:	2b00      	cmp	r3, #0
 801f39a:	d068      	beq.n	801f46e <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x156>
 801f39c:	2100      	movs	r1, #0
 801f39e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f3a0:	9100      	str	r1, [sp, #0]
 801f3a2:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801f3a6:	ea4f 034a 	mov.w	r3, sl, lsl #1
 801f3aa:	a80a      	add	r0, sp, #40	; 0x28
 801f3ac:	f7f1 fa66 	bl	801087c <_ZNSbIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw>
 801f3b0:	a80a      	add	r0, sp, #40	; 0x28
 801f3b2:	f7f1 fa41 	bl	8010838 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_leakEv>
 801f3b6:	eb05 038a 	add.w	r3, r5, sl, lsl #2
 801f3ba:	e9cd 5300 	strd	r5, r3, [sp]
 801f3be:	980a      	ldr	r0, [sp, #40]	; 0x28
 801f3c0:	69a1      	ldr	r1, [r4, #24]
 801f3c2:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
 801f3c6:	f7ff fc77 	bl	801ecb8 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_>
 801f3ca:	4683      	mov	fp, r0
 801f3cc:	a80a      	add	r0, sp, #40	; 0x28
 801f3ce:	f7f1 fa33 	bl	8010838 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_leakEv>
 801f3d2:	990a      	ldr	r1, [sp, #40]	; 0x28
 801f3d4:	ebab 0101 	sub.w	r1, fp, r1
 801f3d8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801f3dc:	1089      	asrs	r1, r1, #2
 801f3de:	a80a      	add	r0, sp, #40	; 0x28
 801f3e0:	f7ff f8a6 	bl	801e530 <_ZNSbIwSt11char_traitsIwESaIwEE5eraseEjj.isra.0>
 801f3e4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801f3e6:	2b00      	cmp	r3, #0
 801f3e8:	dd0c      	ble.n	801f404 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0xec>
 801f3ea:	6961      	ldr	r1, [r4, #20]
 801f3ec:	a80a      	add	r0, sp, #40	; 0x28
 801f3ee:	f7f1 fba2 	bl	8010b36 <_ZNSbIwSt11char_traitsIwESaIwEE9push_backEw>
 801f3f2:	f1ba 0f00 	cmp.w	sl, #0
 801f3f6:	db40      	blt.n	801f47a <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x162>
 801f3f8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 801f3fa:	eb05 018a 	add.w	r1, r5, sl, lsl #2
 801f3fe:	a80a      	add	r0, sp, #40	; 0x28
 801f400:	f7f1 fb10 	bl	8010a24 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj>
 801f404:	68fb      	ldr	r3, [r7, #12]
 801f406:	f003 02b0 	and.w	r2, r3, #176	; 0xb0
 801f40a:	9204      	str	r2, [sp, #16]
 801f40c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f40e:	f413 7500 	ands.w	r5, r3, #512	; 0x200
 801f412:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801f416:	bf18      	it	ne
 801f418:	6a25      	ldrne	r5, [r4, #32]
 801f41a:	4b53      	ldr	r3, [pc, #332]	; (801f568 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x250>)
 801f41c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f41e:	444a      	add	r2, r9
 801f420:	4415      	add	r5, r2
 801f422:	0069      	lsls	r1, r5, #1
 801f424:	a80b      	add	r0, sp, #44	; 0x2c
 801f426:	f7f1 fab6 	bl	8010996 <_ZNSbIwSt11char_traitsIwESaIwEE7reserveEj>
 801f42a:	9b04      	ldr	r3, [sp, #16]
 801f42c:	68be      	ldr	r6, [r7, #8]
 801f42e:	2b10      	cmp	r3, #16
 801f430:	d12c      	bne.n	801f48c <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x174>
 801f432:	42b5      	cmp	r5, r6
 801f434:	bf2c      	ite	cs
 801f436:	f04f 0b00 	movcs.w	fp, #0
 801f43a:	f04f 0b01 	movcc.w	fp, #1
 801f43e:	f04f 0a00 	mov.w	sl, #0
 801f442:	1b75      	subs	r5, r6, r5
 801f444:	ab09      	add	r3, sp, #36	; 0x24
 801f446:	f813 300a 	ldrb.w	r3, [r3, sl]
 801f44a:	2b04      	cmp	r3, #4
 801f44c:	d829      	bhi.n	801f4a2 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f44e:	e8df f003 	tbb	[pc, r3]
 801f452:	727d      	.short	0x727d
 801f454:	6420      	.short	0x6420
 801f456:	6d          	.byte	0x6d
 801f457:	00          	.byte	0x00
 801f458:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 801f45a:	9209      	str	r2, [sp, #36]	; 0x24
 801f45c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801f45e:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 801f462:	9203      	str	r2, [sp, #12]
 801f464:	2b00      	cmp	r3, #0
 801f466:	f43f af79 	beq.w	801f35c <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x44>
 801f46a:	3504      	adds	r5, #4
 801f46c:	e776      	b.n	801f35c <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x44>
 801f46e:	4652      	mov	r2, sl
 801f470:	4629      	mov	r1, r5
 801f472:	a80a      	add	r0, sp, #40	; 0x28
 801f474:	f7f1 fa30 	bl	80108d8 <_ZNSbIwSt11char_traitsIwESaIwEE6assignEPKwj>
 801f478:	e7b4      	b.n	801f3e4 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0xcc>
 801f47a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 801f47c:	f1ca 0100 	rsb	r1, sl, #0
 801f480:	a80a      	add	r0, sp, #40	; 0x28
 801f482:	f7f1 fb09 	bl	8010a98 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEjw>
 801f486:	4632      	mov	r2, r6
 801f488:	4629      	mov	r1, r5
 801f48a:	e7b8      	b.n	801f3fe <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0xe6>
 801f48c:	f04f 0b00 	mov.w	fp, #0
 801f490:	e7d5      	b.n	801f43e <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x126>
 801f492:	68fb      	ldr	r3, [r7, #12]
 801f494:	059b      	lsls	r3, r3, #22
 801f496:	d504      	bpl.n	801f4a2 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f498:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 801f49c:	a80b      	add	r0, sp, #44	; 0x2c
 801f49e:	f7f1 fac1 	bl	8010a24 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj>
 801f4a2:	f10a 0a01 	add.w	sl, sl, #1
 801f4a6:	f1ba 0f04 	cmp.w	sl, #4
 801f4aa:	d1cb      	bne.n	801f444 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x12c>
 801f4ac:	f1b9 0f01 	cmp.w	r9, #1
 801f4b0:	d906      	bls.n	801f4c0 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x1a8>
 801f4b2:	9903      	ldr	r1, [sp, #12]
 801f4b4:	f109 32ff 	add.w	r2, r9, #4294967295	; 0xffffffff
 801f4b8:	3104      	adds	r1, #4
 801f4ba:	a80b      	add	r0, sp, #44	; 0x2c
 801f4bc:	f7f1 fab2 	bl	8010a24 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj>
 801f4c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f4c2:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801f4c6:	429e      	cmp	r6, r3
 801f4c8:	d94c      	bls.n	801f564 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x24c>
 801f4ca:	9a04      	ldr	r2, [sp, #16]
 801f4cc:	2a20      	cmp	r2, #32
 801f4ce:	eba6 0303 	sub.w	r3, r6, r3
 801f4d2:	d13f      	bne.n	801f554 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x23c>
 801f4d4:	4642      	mov	r2, r8
 801f4d6:	4619      	mov	r1, r3
 801f4d8:	a80b      	add	r0, sp, #44	; 0x2c
 801f4da:	f7f1 fadd 	bl	8010a98 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEjw>
 801f4de:	ac0c      	add	r4, sp, #48	; 0x30
 801f4e0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801f4e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f4e6:	9600      	str	r6, [sp, #0]
 801f4e8:	4620      	mov	r0, r4
 801f4ea:	f7f6 f951 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 801f4ee:	e894 0003 	ldmia.w	r4, {r0, r1}
 801f4f2:	9006      	str	r0, [sp, #24]
 801f4f4:	a80b      	add	r0, sp, #44	; 0x2c
 801f4f6:	f88d 101c 	strb.w	r1, [sp, #28]
 801f4fa:	f7f1 f92f 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801f4fe:	a80a      	add	r0, sp, #40	; 0x28
 801f500:	f7f1 f92c 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801f504:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801f508:	2300      	movs	r3, #0
 801f50a:	60bb      	str	r3, [r7, #8]
 801f50c:	9b05      	ldr	r3, [sp, #20]
 801f50e:	e883 0003 	stmia.w	r3, {r0, r1}
 801f512:	4618      	mov	r0, r3
 801f514:	b00f      	add	sp, #60	; 0x3c
 801f516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f51a:	f1b9 0f00 	cmp.w	r9, #0
 801f51e:	d0c0      	beq.n	801f4a2 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f520:	9b03      	ldr	r3, [sp, #12]
 801f522:	6819      	ldr	r1, [r3, #0]
 801f524:	a80b      	add	r0, sp, #44	; 0x2c
 801f526:	f7f1 fb06 	bl	8010b36 <_ZNSbIwSt11char_traitsIwESaIwEE9push_backEw>
 801f52a:	e7ba      	b.n	801f4a2 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f52c:	a90a      	add	r1, sp, #40	; 0x28
 801f52e:	a80b      	add	r0, sp, #44	; 0x2c
 801f530:	f7f1 fa50 	bl	80109d4 <_ZNSbIwSt11char_traitsIwESaIwEE6appendERKS2_>
 801f534:	e7b5      	b.n	801f4a2 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f536:	f1bb 0f00 	cmp.w	fp, #0
 801f53a:	d005      	beq.n	801f548 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x230>
 801f53c:	4642      	mov	r2, r8
 801f53e:	4629      	mov	r1, r5
 801f540:	a80b      	add	r0, sp, #44	; 0x2c
 801f542:	f7f1 faa9 	bl	8010a98 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEjw>
 801f546:	e7ac      	b.n	801f4a2 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f548:	4641      	mov	r1, r8
 801f54a:	e7eb      	b.n	801f524 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x20c>
 801f54c:	f1bb 0f00 	cmp.w	fp, #0
 801f550:	d0a7      	beq.n	801f4a2 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f552:	e7f3      	b.n	801f53c <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x224>
 801f554:	2200      	movs	r2, #0
 801f556:	f8cd 8000 	str.w	r8, [sp]
 801f55a:	4611      	mov	r1, r2
 801f55c:	a80b      	add	r0, sp, #44	; 0x2c
 801f55e:	f7f1 f98d 	bl	801087c <_ZNSbIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw>
 801f562:	e7bc      	b.n	801f4de <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x1c6>
 801f564:	461e      	mov	r6, r3
 801f566:	e7ba      	b.n	801f4de <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x1c6>
 801f568:	20003c00 	.word	0x20003c00

0801f56c <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE>:
 801f56c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f570:	b08f      	sub	sp, #60	; 0x3c
 801f572:	e9dd 7818 	ldrd	r7, r8, [sp, #96]	; 0x60
 801f576:	f107 046c 	add.w	r4, r7, #108	; 0x6c
 801f57a:	a906      	add	r1, sp, #24
 801f57c:	9005      	str	r0, [sp, #20]
 801f57e:	4620      	mov	r0, r4
 801f580:	e881 000c 	stmia.w	r1, {r2, r3}
 801f584:	f7ff fa6c 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 801f588:	4606      	mov	r6, r0
 801f58a:	4620      	mov	r0, r4
 801f58c:	f7ff fd46 	bl	801f01c <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb0EEEclERKSt6locale.isra.0>
 801f590:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801f592:	681d      	ldr	r5, [r3, #0]
 801f594:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801f596:	682a      	ldr	r2, [r5, #0]
 801f598:	429a      	cmp	r2, r3
 801f59a:	4604      	mov	r4, r0
 801f59c:	f855 3c0c 	ldr.w	r3, [r5, #-12]
 801f5a0:	f000 8084 	beq.w	801f6ac <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x140>
 801f5a4:	6b82      	ldr	r2, [r0, #56]	; 0x38
 801f5a6:	9209      	str	r2, [sp, #36]	; 0x24
 801f5a8:	f8d0 9028 	ldr.w	r9, [r0, #40]	; 0x28
 801f5ac:	6a42      	ldr	r2, [r0, #36]	; 0x24
 801f5ae:	9203      	str	r2, [sp, #12]
 801f5b0:	6832      	ldr	r2, [r6, #0]
 801f5b2:	4630      	mov	r0, r6
 801f5b4:	f8d2 a014 	ldr.w	sl, [r2, #20]
 801f5b8:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 801f5bc:	462a      	mov	r2, r5
 801f5be:	2104      	movs	r1, #4
 801f5c0:	47d0      	blx	sl
 801f5c2:	1b40      	subs	r0, r0, r5
 801f5c4:	1086      	asrs	r6, r0, #2
 801f5c6:	f000 80c7 	beq.w	801f758 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x1ec>
 801f5ca:	4b7c      	ldr	r3, [pc, #496]	; (801f7bc <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x250>)
 801f5cc:	930a      	str	r3, [sp, #40]	; 0x28
 801f5ce:	0071      	lsls	r1, r6, #1
 801f5d0:	a80a      	add	r0, sp, #40	; 0x28
 801f5d2:	f7f1 f9e0 	bl	8010996 <_ZNSbIwSt11char_traitsIwESaIwEE7reserveEj>
 801f5d6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801f5d8:	eba6 0a03 	sub.w	sl, r6, r3
 801f5dc:	f1ba 0f00 	cmp.w	sl, #0
 801f5e0:	dd2a      	ble.n	801f638 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0xcc>
 801f5e2:	ea3a 0a23 	bics.w	sl, sl, r3, asr #32
 801f5e6:	bf28      	it	cs
 801f5e8:	46b2      	movcs	sl, r6
 801f5ea:	68e3      	ldr	r3, [r4, #12]
 801f5ec:	2b00      	cmp	r3, #0
 801f5ee:	d068      	beq.n	801f6c2 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x156>
 801f5f0:	2100      	movs	r1, #0
 801f5f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f5f4:	9100      	str	r1, [sp, #0]
 801f5f6:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801f5fa:	ea4f 034a 	mov.w	r3, sl, lsl #1
 801f5fe:	a80a      	add	r0, sp, #40	; 0x28
 801f600:	f7f1 f93c 	bl	801087c <_ZNSbIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw>
 801f604:	a80a      	add	r0, sp, #40	; 0x28
 801f606:	f7f1 f917 	bl	8010838 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_leakEv>
 801f60a:	eb05 038a 	add.w	r3, r5, sl, lsl #2
 801f60e:	e9cd 5300 	strd	r5, r3, [sp]
 801f612:	980a      	ldr	r0, [sp, #40]	; 0x28
 801f614:	69a1      	ldr	r1, [r4, #24]
 801f616:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
 801f61a:	f7ff fb4d 	bl	801ecb8 <_ZSt14__add_groupingIwEPT_S1_S0_PKcjPKS0_S5_>
 801f61e:	4683      	mov	fp, r0
 801f620:	a80a      	add	r0, sp, #40	; 0x28
 801f622:	f7f1 f909 	bl	8010838 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_leakEv>
 801f626:	990a      	ldr	r1, [sp, #40]	; 0x28
 801f628:	ebab 0101 	sub.w	r1, fp, r1
 801f62c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801f630:	1089      	asrs	r1, r1, #2
 801f632:	a80a      	add	r0, sp, #40	; 0x28
 801f634:	f7fe ff7c 	bl	801e530 <_ZNSbIwSt11char_traitsIwESaIwEE5eraseEjj.isra.0>
 801f638:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801f63a:	2b00      	cmp	r3, #0
 801f63c:	dd0c      	ble.n	801f658 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0xec>
 801f63e:	6961      	ldr	r1, [r4, #20]
 801f640:	a80a      	add	r0, sp, #40	; 0x28
 801f642:	f7f1 fa78 	bl	8010b36 <_ZNSbIwSt11char_traitsIwESaIwEE9push_backEw>
 801f646:	f1ba 0f00 	cmp.w	sl, #0
 801f64a:	db40      	blt.n	801f6ce <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x162>
 801f64c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 801f64e:	eb05 018a 	add.w	r1, r5, sl, lsl #2
 801f652:	a80a      	add	r0, sp, #40	; 0x28
 801f654:	f7f1 f9e6 	bl	8010a24 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj>
 801f658:	68fb      	ldr	r3, [r7, #12]
 801f65a:	f003 02b0 	and.w	r2, r3, #176	; 0xb0
 801f65e:	9204      	str	r2, [sp, #16]
 801f660:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f662:	f413 7500 	ands.w	r5, r3, #512	; 0x200
 801f666:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 801f66a:	bf18      	it	ne
 801f66c:	6a25      	ldrne	r5, [r4, #32]
 801f66e:	4b53      	ldr	r3, [pc, #332]	; (801f7bc <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x250>)
 801f670:	930b      	str	r3, [sp, #44]	; 0x2c
 801f672:	444a      	add	r2, r9
 801f674:	4415      	add	r5, r2
 801f676:	0069      	lsls	r1, r5, #1
 801f678:	a80b      	add	r0, sp, #44	; 0x2c
 801f67a:	f7f1 f98c 	bl	8010996 <_ZNSbIwSt11char_traitsIwESaIwEE7reserveEj>
 801f67e:	9b04      	ldr	r3, [sp, #16]
 801f680:	68be      	ldr	r6, [r7, #8]
 801f682:	2b10      	cmp	r3, #16
 801f684:	d12c      	bne.n	801f6e0 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x174>
 801f686:	42b5      	cmp	r5, r6
 801f688:	bf2c      	ite	cs
 801f68a:	f04f 0b00 	movcs.w	fp, #0
 801f68e:	f04f 0b01 	movcc.w	fp, #1
 801f692:	f04f 0a00 	mov.w	sl, #0
 801f696:	1b75      	subs	r5, r6, r5
 801f698:	ab09      	add	r3, sp, #36	; 0x24
 801f69a:	f813 300a 	ldrb.w	r3, [r3, sl]
 801f69e:	2b04      	cmp	r3, #4
 801f6a0:	d829      	bhi.n	801f6f6 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f6a2:	e8df f003 	tbb	[pc, r3]
 801f6a6:	727d      	.short	0x727d
 801f6a8:	6420      	.short	0x6420
 801f6aa:	6d          	.byte	0x6d
 801f6ab:	00          	.byte	0x00
 801f6ac:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 801f6ae:	9209      	str	r2, [sp, #36]	; 0x24
 801f6b0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801f6b2:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 801f6b6:	9203      	str	r2, [sp, #12]
 801f6b8:	2b00      	cmp	r3, #0
 801f6ba:	f43f af79 	beq.w	801f5b0 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x44>
 801f6be:	3504      	adds	r5, #4
 801f6c0:	e776      	b.n	801f5b0 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x44>
 801f6c2:	4652      	mov	r2, sl
 801f6c4:	4629      	mov	r1, r5
 801f6c6:	a80a      	add	r0, sp, #40	; 0x28
 801f6c8:	f7f1 f906 	bl	80108d8 <_ZNSbIwSt11char_traitsIwESaIwEE6assignEPKwj>
 801f6cc:	e7b4      	b.n	801f638 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0xcc>
 801f6ce:	6c62      	ldr	r2, [r4, #68]	; 0x44
 801f6d0:	f1ca 0100 	rsb	r1, sl, #0
 801f6d4:	a80a      	add	r0, sp, #40	; 0x28
 801f6d6:	f7f1 f9df 	bl	8010a98 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEjw>
 801f6da:	4632      	mov	r2, r6
 801f6dc:	4629      	mov	r1, r5
 801f6de:	e7b8      	b.n	801f652 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0xe6>
 801f6e0:	f04f 0b00 	mov.w	fp, #0
 801f6e4:	e7d5      	b.n	801f692 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x126>
 801f6e6:	68fb      	ldr	r3, [r7, #12]
 801f6e8:	059b      	lsls	r3, r3, #22
 801f6ea:	d504      	bpl.n	801f6f6 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f6ec:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 801f6f0:	a80b      	add	r0, sp, #44	; 0x2c
 801f6f2:	f7f1 f997 	bl	8010a24 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj>
 801f6f6:	f10a 0a01 	add.w	sl, sl, #1
 801f6fa:	f1ba 0f04 	cmp.w	sl, #4
 801f6fe:	d1cb      	bne.n	801f698 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x12c>
 801f700:	f1b9 0f01 	cmp.w	r9, #1
 801f704:	d906      	bls.n	801f714 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x1a8>
 801f706:	9903      	ldr	r1, [sp, #12]
 801f708:	f109 32ff 	add.w	r2, r9, #4294967295	; 0xffffffff
 801f70c:	3104      	adds	r1, #4
 801f70e:	a80b      	add	r0, sp, #44	; 0x2c
 801f710:	f7f1 f988 	bl	8010a24 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEPKwj>
 801f714:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f716:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 801f71a:	429e      	cmp	r6, r3
 801f71c:	d94c      	bls.n	801f7b8 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x24c>
 801f71e:	9a04      	ldr	r2, [sp, #16]
 801f720:	2a20      	cmp	r2, #32
 801f722:	eba6 0303 	sub.w	r3, r6, r3
 801f726:	d13f      	bne.n	801f7a8 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x23c>
 801f728:	4642      	mov	r2, r8
 801f72a:	4619      	mov	r1, r3
 801f72c:	a80b      	add	r0, sp, #44	; 0x2c
 801f72e:	f7f1 f9b3 	bl	8010a98 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEjw>
 801f732:	ac0c      	add	r4, sp, #48	; 0x30
 801f734:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801f738:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f73a:	9600      	str	r6, [sp, #0]
 801f73c:	4620      	mov	r0, r4
 801f73e:	f7f6 f827 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 801f742:	e894 0003 	ldmia.w	r4, {r0, r1}
 801f746:	9006      	str	r0, [sp, #24]
 801f748:	a80b      	add	r0, sp, #44	; 0x2c
 801f74a:	f88d 101c 	strb.w	r1, [sp, #28]
 801f74e:	f7f1 f805 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801f752:	a80a      	add	r0, sp, #40	; 0x28
 801f754:	f7f1 f802 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801f758:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801f75c:	2300      	movs	r3, #0
 801f75e:	60bb      	str	r3, [r7, #8]
 801f760:	9b05      	ldr	r3, [sp, #20]
 801f762:	e883 0003 	stmia.w	r3, {r0, r1}
 801f766:	4618      	mov	r0, r3
 801f768:	b00f      	add	sp, #60	; 0x3c
 801f76a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f76e:	f1b9 0f00 	cmp.w	r9, #0
 801f772:	d0c0      	beq.n	801f6f6 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f774:	9b03      	ldr	r3, [sp, #12]
 801f776:	6819      	ldr	r1, [r3, #0]
 801f778:	a80b      	add	r0, sp, #44	; 0x2c
 801f77a:	f7f1 f9dc 	bl	8010b36 <_ZNSbIwSt11char_traitsIwESaIwEE9push_backEw>
 801f77e:	e7ba      	b.n	801f6f6 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f780:	a90a      	add	r1, sp, #40	; 0x28
 801f782:	a80b      	add	r0, sp, #44	; 0x2c
 801f784:	f7f1 f926 	bl	80109d4 <_ZNSbIwSt11char_traitsIwESaIwEE6appendERKS2_>
 801f788:	e7b5      	b.n	801f6f6 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f78a:	f1bb 0f00 	cmp.w	fp, #0
 801f78e:	d005      	beq.n	801f79c <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x230>
 801f790:	4642      	mov	r2, r8
 801f792:	4629      	mov	r1, r5
 801f794:	a80b      	add	r0, sp, #44	; 0x2c
 801f796:	f7f1 f97f 	bl	8010a98 <_ZNSbIwSt11char_traitsIwESaIwEE6appendEjw>
 801f79a:	e7ac      	b.n	801f6f6 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f79c:	4641      	mov	r1, r8
 801f79e:	e7eb      	b.n	801f778 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x20c>
 801f7a0:	f1bb 0f00 	cmp.w	fp, #0
 801f7a4:	d0a7      	beq.n	801f6f6 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x18a>
 801f7a6:	e7f3      	b.n	801f790 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x224>
 801f7a8:	2200      	movs	r2, #0
 801f7aa:	f8cd 8000 	str.w	r8, [sp]
 801f7ae:	4611      	mov	r1, r2
 801f7b0:	a80b      	add	r0, sp, #44	; 0x2c
 801f7b2:	f7f1 f863 	bl	801087c <_ZNSbIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw>
 801f7b6:	e7bc      	b.n	801f732 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x1c6>
 801f7b8:	461e      	mov	r6, r3
 801f7ba:	e7ba      	b.n	801f732 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE+0x1c6>
 801f7bc:	20003c00 	.word	0x20003c00

0801f7c0 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_bRSt8ios_basewe>:
 801f7c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f7c4:	ed2d 8b02 	vpush	{d8}
 801f7c8:	eeb0 8a40 	vmov.f32	s16, s0
 801f7cc:	eef0 8a60 	vmov.f32	s17, s1
 801f7d0:	b08d      	sub	sp, #52	; 0x34
 801f7d2:	af04      	add	r7, sp, #16
 801f7d4:	f107 0408 	add.w	r4, r7, #8
 801f7d8:	e884 000c 	stmia.w	r4, {r2, r3}
 801f7dc:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801f7de:	f897 b050 	ldrb.w	fp, [r7, #80]	; 0x50
 801f7e2:	4605      	mov	r5, r0
 801f7e4:	4688      	mov	r8, r1
 801f7e6:	f107 0018 	add.w	r0, r7, #24
 801f7ea:	f103 016c 	add.w	r1, r3, #108	; 0x6c
 801f7ee:	f7ec fd5d 	bl	800c2ac <_ZNSt6localeC1ERKS_>
 801f7f2:	f107 0018 	add.w	r0, r7, #24
 801f7f6:	f7ff f933 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 801f7fa:	b090      	sub	sp, #64	; 0x40
 801f7fc:	4681      	mov	r9, r0
 801f7fe:	f7ec fd6d 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 801f802:	ae04      	add	r6, sp, #16
 801f804:	f04f 0a00 	mov.w	sl, #0
 801f808:	61f8      	str	r0, [r7, #28]
 801f80a:	4631      	mov	r1, r6
 801f80c:	ed8d 8b02 	vstr	d8, [sp, #8]
 801f810:	4b2c      	ldr	r3, [pc, #176]	; (801f8c4 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_bRSt8ios_basewe+0x104>)
 801f812:	f8cd a000 	str.w	sl, [sp]
 801f816:	2240      	movs	r2, #64	; 0x40
 801f818:	f107 001c 	add.w	r0, r7, #28
 801f81c:	f7f1 fe56 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 801f820:	283f      	cmp	r0, #63	; 0x3f
 801f822:	4601      	mov	r1, r0
 801f824:	dd16      	ble.n	801f854 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_bRSt8ios_basewe+0x94>
 801f826:	3108      	adds	r1, #8
 801f828:	f021 0107 	bic.w	r1, r1, #7
 801f82c:	ebad 0d01 	sub.w	sp, sp, r1
 801f830:	1c42      	adds	r2, r0, #1
 801f832:	607a      	str	r2, [r7, #4]
 801f834:	f7ec fd52 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 801f838:	ae04      	add	r6, sp, #16
 801f83a:	61f8      	str	r0, [r7, #28]
 801f83c:	4631      	mov	r1, r6
 801f83e:	ed8d 8b02 	vstr	d8, [sp, #8]
 801f842:	4b20      	ldr	r3, [pc, #128]	; (801f8c4 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_bRSt8ios_basewe+0x104>)
 801f844:	687a      	ldr	r2, [r7, #4]
 801f846:	f8cd a000 	str.w	sl, [sp]
 801f84a:	f107 001c 	add.w	r0, r7, #28
 801f84e:	f7f1 fe3d 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 801f852:	4601      	mov	r1, r0
 801f854:	f107 0314 	add.w	r3, r7, #20
 801f858:	2200      	movs	r2, #0
 801f85a:	f107 001c 	add.w	r0, r7, #28
 801f85e:	6079      	str	r1, [r7, #4]
 801f860:	f7f0 ff48 	bl	80106f4 <_ZNSbIwSt11char_traitsIwESaIwEEC1EjwRKS1_>
 801f864:	6879      	ldr	r1, [r7, #4]
 801f866:	f107 001c 	add.w	r0, r7, #28
 801f86a:	1872      	adds	r2, r6, r1
 801f86c:	607a      	str	r2, [r7, #4]
 801f86e:	f7f0 ffe3 	bl	8010838 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_leakEv>
 801f872:	69fb      	ldr	r3, [r7, #28]
 801f874:	687a      	ldr	r2, [r7, #4]
 801f876:	4631      	mov	r1, r6
 801f878:	4648      	mov	r0, r9
 801f87a:	f7f5 ff7f 	bl	801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>
 801f87e:	f107 031c 	add.w	r3, r7, #28
 801f882:	9302      	str	r3, [sp, #8]
 801f884:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801f886:	9301      	str	r3, [sp, #4]
 801f888:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801f88a:	9300      	str	r3, [sp, #0]
 801f88c:	4641      	mov	r1, r8
 801f88e:	e894 000c 	ldmia.w	r4, {r2, r3}
 801f892:	4628      	mov	r0, r5
 801f894:	f1bb 0f00 	cmp.w	fp, #0
 801f898:	d010      	beq.n	801f8bc <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_bRSt8ios_basewe+0xfc>
 801f89a:	f7ff fd3d 	bl	801f318 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE>
 801f89e:	f107 001c 	add.w	r0, r7, #28
 801f8a2:	f7f0 ff5b 	bl	801075c <_ZNSbIwSt11char_traitsIwESaIwEED1Ev>
 801f8a6:	f107 0018 	add.w	r0, r7, #24
 801f8aa:	f7ec fd6d 	bl	800c388 <_ZNSt6localeD1Ev>
 801f8ae:	4628      	mov	r0, r5
 801f8b0:	3724      	adds	r7, #36	; 0x24
 801f8b2:	46bd      	mov	sp, r7
 801f8b4:	ecbd 8b02 	vpop	{d8}
 801f8b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8bc:	f7ff fe56 	bl	801f56c <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE>
 801f8c0:	e7ed      	b.n	801f89e <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_bRSt8ios_basewe+0xde>
 801f8c2:	bf00      	nop
 801f8c4:	0802f7f2 	.word	0x0802f7f2

0801f8c8 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_bRSt8ios_basewRKSbIwS2_SaIwEE>:
 801f8c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f8ca:	b087      	sub	sp, #28
 801f8cc:	ac04      	add	r4, sp, #16
 801f8ce:	e884 000c 	stmia.w	r4, {r2, r3}
 801f8d2:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 801f8d6:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801f8d8:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f8dc:	9300      	str	r3, [sp, #0]
 801f8de:	e9cd 2601 	strd	r2, r6, [sp, #4]
 801f8e2:	4605      	mov	r5, r0
 801f8e4:	e894 000c 	ldmia.w	r4, {r2, r3}
 801f8e8:	b127      	cbz	r7, 801f8f4 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_bRSt8ios_basewRKSbIwS2_SaIwEE+0x2c>
 801f8ea:	f7ff fd15 	bl	801f318 <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb1EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE>
 801f8ee:	4628      	mov	r0, r5
 801f8f0:	b007      	add	sp, #28
 801f8f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f8f4:	f7ff fe3a 	bl	801f56c <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE9_M_insertILb0EEES3_S3_RSt8ios_basewRKSbIwS2_SaIwEE>
 801f8f8:	e7f9      	b.n	801f8ee <_ZNKSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_bRSt8ios_basewRKSbIwS2_SaIwEE+0x26>
	...

0801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>:
 801f8fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f900:	460d      	mov	r5, r1
 801f902:	4810      	ldr	r0, [pc, #64]	; (801f944 <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale+0x48>)
 801f904:	f7ec fd66 	bl	800c3d4 <_ZNKSt6locale2id5_M_idEv>
 801f908:	682b      	ldr	r3, [r5, #0]
 801f90a:	68df      	ldr	r7, [r3, #12]
 801f90c:	f857 8020 	ldr.w	r8, [r7, r0, lsl #2]
 801f910:	4604      	mov	r4, r0
 801f912:	f1b8 0f00 	cmp.w	r8, #0
 801f916:	d110      	bne.n	801f93a <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale+0x3e>
 801f918:	f44f 7094 	mov.w	r0, #296	; 0x128
 801f91c:	f7ec fb10 	bl	800bf40 <_Znwj>
 801f920:	4641      	mov	r1, r8
 801f922:	4606      	mov	r6, r0
 801f924:	f7fe ff20 	bl	801e768 <_ZNSt16__numpunct_cacheIwEC1Ej>
 801f928:	4629      	mov	r1, r5
 801f92a:	4630      	mov	r0, r6
 801f92c:	f7ff fc62 	bl	801f1f4 <_ZNSt16__numpunct_cacheIwE8_M_cacheERKSt6locale>
 801f930:	6828      	ldr	r0, [r5, #0]
 801f932:	4622      	mov	r2, r4
 801f934:	4631      	mov	r1, r6
 801f936:	f7ec fe13 	bl	800c560 <_ZNSt6locale5_Impl16_M_install_cacheEPKNS_5facetEj>
 801f93a:	f857 0024 	ldr.w	r0, [r7, r4, lsl #2]
 801f93e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f942:	bf00      	nop
 801f944:	20003d3c 	.word	0x20003d3c

0801f948 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii>:
 801f948:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801f94c:	461d      	mov	r5, r3
 801f94e:	e9dd 3608 	ldrd	r3, r6, [sp, #32]
 801f952:	eba3 0806 	sub.w	r8, r3, r6
 801f956:	68c3      	ldr	r3, [r0, #12]
 801f958:	f003 03b0 	and.w	r3, r3, #176	; 0xb0
 801f95c:	2b20      	cmp	r3, #32
 801f95e:	4689      	mov	r9, r1
 801f960:	4614      	mov	r4, r2
 801f962:	d10d      	bne.n	801f980 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0x38>
 801f964:	b126      	cbz	r6, 801f970 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0x28>
 801f966:	4632      	mov	r2, r6
 801f968:	4629      	mov	r1, r5
 801f96a:	4620      	mov	r0, r4
 801f96c:	f00a fef3 	bl	802a756 <wmemcpy>
 801f970:	464a      	mov	r2, r9
 801f972:	4641      	mov	r1, r8
 801f974:	eb04 0086 	add.w	r0, r4, r6, lsl #2
 801f978:	f7fe fdf2 	bl	801e560 <_ZNSt11char_traitsIwE6assignEPwjw>
 801f97c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801f980:	2b10      	cmp	r3, #16
 801f982:	d00f      	beq.n	801f9a4 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0x5c>
 801f984:	2700      	movs	r7, #0
 801f986:	464a      	mov	r2, r9
 801f988:	4641      	mov	r1, r8
 801f98a:	4620      	mov	r0, r4
 801f98c:	f7fe fde8 	bl	801e560 <_ZNSt11char_traitsIwE6assignEPwjw>
 801f990:	1bf2      	subs	r2, r6, r7
 801f992:	d0f3      	beq.n	801f97c <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0x34>
 801f994:	eb05 0187 	add.w	r1, r5, r7, lsl #2
 801f998:	eb04 0088 	add.w	r0, r4, r8, lsl #2
 801f99c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801f9a0:	f00a bed9 	b.w	802a756 <wmemcpy>
 801f9a4:	306c      	adds	r0, #108	; 0x6c
 801f9a6:	f7ff f85b 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 801f9aa:	212d      	movs	r1, #45	; 0x2d
 801f9ac:	4607      	mov	r7, r0
 801f9ae:	f7f6 f9e6 	bl	8015d7e <_ZNKSt21__ctype_abstract_baseIwE5widenEc>
 801f9b2:	682b      	ldr	r3, [r5, #0]
 801f9b4:	4298      	cmp	r0, r3
 801f9b6:	d104      	bne.n	801f9c2 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0x7a>
 801f9b8:	682b      	ldr	r3, [r5, #0]
 801f9ba:	f844 3b04 	str.w	r3, [r4], #4
 801f9be:	2701      	movs	r7, #1
 801f9c0:	e7e1      	b.n	801f986 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0x3e>
 801f9c2:	212b      	movs	r1, #43	; 0x2b
 801f9c4:	4638      	mov	r0, r7
 801f9c6:	f7f6 f9da 	bl	8015d7e <_ZNKSt21__ctype_abstract_baseIwE5widenEc>
 801f9ca:	682b      	ldr	r3, [r5, #0]
 801f9cc:	4298      	cmp	r0, r3
 801f9ce:	d0f3      	beq.n	801f9b8 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0x70>
 801f9d0:	2130      	movs	r1, #48	; 0x30
 801f9d2:	4638      	mov	r0, r7
 801f9d4:	f7f6 f9d3 	bl	8015d7e <_ZNKSt21__ctype_abstract_baseIwE5widenEc>
 801f9d8:	682b      	ldr	r3, [r5, #0]
 801f9da:	4298      	cmp	r0, r3
 801f9dc:	d1d2      	bne.n	801f984 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0x3c>
 801f9de:	2e01      	cmp	r6, #1
 801f9e0:	ddd0      	ble.n	801f984 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0x3c>
 801f9e2:	2178      	movs	r1, #120	; 0x78
 801f9e4:	4638      	mov	r0, r7
 801f9e6:	f7f6 f9ca 	bl	8015d7e <_ZNKSt21__ctype_abstract_baseIwE5widenEc>
 801f9ea:	686b      	ldr	r3, [r5, #4]
 801f9ec:	4298      	cmp	r0, r3
 801f9ee:	d106      	bne.n	801f9fe <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0xb6>
 801f9f0:	682b      	ldr	r3, [r5, #0]
 801f9f2:	6023      	str	r3, [r4, #0]
 801f9f4:	686b      	ldr	r3, [r5, #4]
 801f9f6:	6063      	str	r3, [r4, #4]
 801f9f8:	2702      	movs	r7, #2
 801f9fa:	3408      	adds	r4, #8
 801f9fc:	e7c3      	b.n	801f986 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0x3e>
 801f9fe:	2158      	movs	r1, #88	; 0x58
 801fa00:	4638      	mov	r0, r7
 801fa02:	f7f6 f9bc 	bl	8015d7e <_ZNKSt21__ctype_abstract_baseIwE5widenEc>
 801fa06:	686b      	ldr	r3, [r5, #4]
 801fa08:	4298      	cmp	r0, r3
 801fa0a:	d1bb      	bne.n	801f984 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0x3c>
 801fa0c:	e7f0      	b.n	801f9f0 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii+0xa8>

0801fa0e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6_M_padEwiRSt8ios_basePwPKwRi>:
 801fa0e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801fa10:	9d08      	ldr	r5, [sp, #32]
 801fa12:	4618      	mov	r0, r3
 801fa14:	682b      	ldr	r3, [r5, #0]
 801fa16:	4614      	mov	r4, r2
 801fa18:	e9cd 2300 	strd	r2, r3, [sp]
 801fa1c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801fa20:	f7ff ff92 	bl	801f948 <_ZNSt5__padIwSt11char_traitsIwEE6_S_padERSt8ios_basewPwPKwii>
 801fa24:	602c      	str	r4, [r5, #0]
 801fa26:	b003      	add	sp, #12
 801fa28:	bd30      	pop	{r4, r5, pc}

0801fa2a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_>:
 801fa2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa2e:	ed2d 8b02 	vpush	{d8}
 801fa32:	b08b      	sub	sp, #44	; 0x2c
 801fa34:	af04      	add	r7, sp, #16
 801fa36:	468a      	mov	sl, r1
 801fa38:	6cbe      	ldr	r6, [r7, #72]	; 0x48
 801fa3a:	f107 0108 	add.w	r1, r7, #8
 801fa3e:	e881 000c 	stmia.w	r1, {r2, r3}
 801fa42:	ee08 0a10 	vmov	s16, r0
 801fa46:	f106 016c 	add.w	r1, r6, #108	; 0x6c
 801fa4a:	f107 0010 	add.w	r0, r7, #16
 801fa4e:	f7ff ff55 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 801fa52:	68f5      	ldr	r5, [r6, #12]
 801fa54:	6d39      	ldr	r1, [r7, #80]	; 0x50
 801fa56:	f005 034a 	and.w	r3, r5, #74	; 0x4a
 801fa5a:	b094      	sub	sp, #80	; 0x50
 801fa5c:	2b40      	cmp	r3, #64	; 0x40
 801fa5e:	4604      	mov	r4, r0
 801fa60:	f100 092c 	add.w	r9, r0, #44	; 0x2c
 801fa64:	f10d 0b10 	add.w	fp, sp, #16
 801fa68:	607b      	str	r3, [r7, #4]
 801fa6a:	d001      	beq.n	801fa70 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0x46>
 801fa6c:	2b08      	cmp	r3, #8
 801fa6e:	d174      	bne.n	801fb5a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0x130>
 801fa70:	f04f 0800 	mov.w	r8, #0
 801fa74:	462b      	mov	r3, r5
 801fa76:	464a      	mov	r2, r9
 801fa78:	f8cd 8000 	str.w	r8, [sp]
 801fa7c:	f10b 0050 	add.w	r0, fp, #80	; 0x50
 801fa80:	f7ff f9a0 	bl	801edc4 <_ZSt13__int_to_charIwmEiPT_T0_PKS0_St13_Ios_Fmtflagsb>
 801fa84:	7c22      	ldrb	r2, [r4, #16]
 801fa86:	6178      	str	r0, [r7, #20]
 801fa88:	f1c0 0314 	rsb	r3, r0, #20
 801fa8c:	eb0b 0383 	add.w	r3, fp, r3, lsl #2
 801fa90:	b192      	cbz	r2, 801fab8 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0x8e>
 801fa92:	00c0      	lsls	r0, r0, #3
 801fa94:	3008      	adds	r0, #8
 801fa96:	ebad 0d00 	sub.w	sp, sp, r0
 801fa9a:	f10d 0b18 	add.w	fp, sp, #24
 801fa9e:	f107 0214 	add.w	r2, r7, #20
 801faa2:	e9cd 3202 	strd	r3, r2, [sp, #8]
 801faa6:	e9cd 6b00 	strd	r6, fp, [sp]
 801faaa:	4650      	mov	r0, sl
 801faac:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801faae:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 801fab2:	f7ff f972 	bl	801ed9a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE12_M_group_intEPKcjwRSt8ios_basePwS9_Ri>
 801fab6:	465b      	mov	r3, fp
 801fab8:	697a      	ldr	r2, [r7, #20]
 801faba:	f1b8 0f00 	cmp.w	r8, #0
 801fabe:	d034      	beq.n	801fb2a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0x100>
 801fac0:	6d39      	ldr	r1, [r7, #80]	; 0x50
 801fac2:	2900      	cmp	r1, #0
 801fac4:	db2f      	blt.n	801fb26 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0xfc>
 801fac6:	0528      	lsls	r0, r5, #20
 801fac8:	d505      	bpl.n	801fad6 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0xac>
 801faca:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801facc:	f843 1c04 	str.w	r1, [r3, #-4]
 801fad0:	3201      	adds	r2, #1
 801fad2:	617a      	str	r2, [r7, #20]
 801fad4:	3b04      	subs	r3, #4
 801fad6:	68b2      	ldr	r2, [r6, #8]
 801fad8:	6979      	ldr	r1, [r7, #20]
 801fada:	4291      	cmp	r1, r2
 801fadc:	da11      	bge.n	801fb02 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0xd8>
 801fade:	0091      	lsls	r1, r2, #2
 801fae0:	3107      	adds	r1, #7
 801fae2:	f021 0107 	bic.w	r1, r1, #7
 801fae6:	ebad 0d01 	sub.w	sp, sp, r1
 801faea:	ac04      	add	r4, sp, #16
 801faec:	f107 0114 	add.w	r1, r7, #20
 801faf0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801faf4:	9400      	str	r4, [sp, #0]
 801faf6:	4633      	mov	r3, r6
 801faf8:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 801fafa:	4650      	mov	r0, sl
 801fafc:	f7ff ff87 	bl	801fa0e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6_M_padEwiRSt8ios_basePwPKwRi>
 801fb00:	4623      	mov	r3, r4
 801fb02:	2200      	movs	r2, #0
 801fb04:	60b2      	str	r2, [r6, #8]
 801fb06:	697a      	ldr	r2, [r7, #20]
 801fb08:	9200      	str	r2, [sp, #0]
 801fb0a:	ee18 0a10 	vmov	r0, s16
 801fb0e:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 801fb12:	f7f5 fe3d 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 801fb16:	ee18 0a10 	vmov	r0, s16
 801fb1a:	371c      	adds	r7, #28
 801fb1c:	46bd      	mov	sp, r7
 801fb1e:	ecbd 8b02 	vpop	{d8}
 801fb22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb26:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801fb28:	e7d0      	b.n	801facc <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0xa2>
 801fb2a:	05a9      	lsls	r1, r5, #22
 801fb2c:	d5d3      	bpl.n	801fad6 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0xac>
 801fb2e:	6d39      	ldr	r1, [r7, #80]	; 0x50
 801fb30:	2900      	cmp	r1, #0
 801fb32:	d0d0      	beq.n	801fad6 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0xac>
 801fb34:	6879      	ldr	r1, [r7, #4]
 801fb36:	2940      	cmp	r1, #64	; 0x40
 801fb38:	d101      	bne.n	801fb3e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0x114>
 801fb3a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 801fb3c:	e7c6      	b.n	801facc <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0xa2>
 801fb3e:	f3c5 3580 	ubfx	r5, r5, #14, #1
 801fb42:	3502      	adds	r5, #2
 801fb44:	3202      	adds	r2, #2
 801fb46:	f859 1025 	ldr.w	r1, [r9, r5, lsl #2]
 801fb4a:	f843 1c04 	str.w	r1, [r3, #-4]
 801fb4e:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 801fb50:	f843 1c08 	str.w	r1, [r3, #-8]
 801fb54:	617a      	str	r2, [r7, #20]
 801fb56:	3b08      	subs	r3, #8
 801fb58:	e7bd      	b.n	801fad6 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0xac>
 801fb5a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801fb5c:	2b00      	cmp	r3, #0
 801fb5e:	dc01      	bgt.n	801fb64 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0x13a>
 801fb60:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801fb62:	4259      	negs	r1, r3
 801fb64:	f04f 0801 	mov.w	r8, #1
 801fb68:	e784      	b.n	801fa74 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_+0x4a>

0801fb6a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewl>:
 801fb6a:	b530      	push	{r4, r5, lr}
 801fb6c:	b087      	sub	sp, #28
 801fb6e:	ac04      	add	r4, sp, #16
 801fb70:	e884 000c 	stmia.w	r4, {r2, r3}
 801fb74:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fb76:	9302      	str	r3, [sp, #8]
 801fb78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fb7a:	9301      	str	r3, [sp, #4]
 801fb7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb7e:	9300      	str	r3, [sp, #0]
 801fb80:	e894 000c 	ldmia.w	r4, {r2, r3}
 801fb84:	4605      	mov	r5, r0
 801fb86:	f7ff ff50 	bl	801fa2a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_>
 801fb8a:	4628      	mov	r0, r5
 801fb8c:	b007      	add	sp, #28
 801fb8e:	bd30      	pop	{r4, r5, pc}

0801fb90 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewb>:
 801fb90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb94:	b08d      	sub	sp, #52	; 0x34
 801fb96:	af04      	add	r7, sp, #16
 801fb98:	f107 0408 	add.w	r4, r7, #8
 801fb9c:	e884 000c 	stmia.w	r4, {r2, r3}
 801fba0:	e9d7 3212 	ldrd	r3, r2, [r7, #72]	; 0x48
 801fba4:	4606      	mov	r6, r0
 801fba6:	68d8      	ldr	r0, [r3, #12]
 801fba8:	f897 8050 	ldrb.w	r8, [r7, #80]	; 0x50
 801fbac:	6078      	str	r0, [r7, #4]
 801fbae:	f010 0f01 	tst.w	r0, #1
 801fbb2:	f107 0518 	add.w	r5, r7, #24
 801fbb6:	d114      	bne.n	801fbe2 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewb+0x52>
 801fbb8:	e9cd 2801 	strd	r2, r8, [sp, #4]
 801fbbc:	9300      	str	r3, [sp, #0]
 801fbbe:	4628      	mov	r0, r5
 801fbc0:	e894 000c 	ldmia.w	r4, {r2, r3}
 801fbc4:	f7ff ff31 	bl	801fa2a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIlEES3_S3_RSt8ios_basewT_>
 801fbc8:	e895 0003 	ldmia.w	r5, {r0, r1}
 801fbcc:	60b8      	str	r0, [r7, #8]
 801fbce:	7339      	strb	r1, [r7, #12]
 801fbd0:	e894 0003 	ldmia.w	r4, {r0, r1}
 801fbd4:	3724      	adds	r7, #36	; 0x24
 801fbd6:	e886 0003 	stmia.w	r6, {r0, r1}
 801fbda:	4630      	mov	r0, r6
 801fbdc:	46bd      	mov	sp, r7
 801fbde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fbe2:	f103 016c 	add.w	r1, r3, #108	; 0x6c
 801fbe6:	f107 0014 	add.w	r0, r7, #20
 801fbea:	64fa      	str	r2, [r7, #76]	; 0x4c
 801fbec:	64bb      	str	r3, [r7, #72]	; 0x48
 801fbee:	f7ff fe85 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 801fbf2:	e9d7 3212 	ldrd	r3, r2, [r7, #72]	; 0x48
 801fbf6:	f1b8 0f00 	cmp.w	r8, #0
 801fbfa:	d031      	beq.n	801fc60 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewb+0xd0>
 801fbfc:	e9d0 a905 	ldrd	sl, r9, [r0, #20]
 801fc00:	6899      	ldr	r1, [r3, #8]
 801fc02:	4589      	cmp	r9, r1
 801fc04:	da3f      	bge.n	801fc86 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewb+0xf6>
 801fc06:	eba1 0809 	sub.w	r8, r1, r9
 801fc0a:	ea4f 0188 	mov.w	r1, r8, lsl #2
 801fc0e:	3107      	adds	r1, #7
 801fc10:	f021 0107 	bic.w	r1, r1, #7
 801fc14:	ebad 0d01 	sub.w	sp, sp, r1
 801fc18:	f10d 0b10 	add.w	fp, sp, #16
 801fc1c:	4641      	mov	r1, r8
 801fc1e:	4658      	mov	r0, fp
 801fc20:	64bb      	str	r3, [r7, #72]	; 0x48
 801fc22:	f7fe fc9d 	bl	801e560 <_ZNSt11char_traitsIwE6assignEPwjw>
 801fc26:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801fc28:	2200      	movs	r2, #0
 801fc2a:	609a      	str	r2, [r3, #8]
 801fc2c:	687b      	ldr	r3, [r7, #4]
 801fc2e:	f003 03b0 	and.w	r3, r3, #176	; 0xb0
 801fc32:	2b20      	cmp	r3, #32
 801fc34:	d117      	bne.n	801fc66 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewb+0xd6>
 801fc36:	e894 0006 	ldmia.w	r4, {r1, r2}
 801fc3a:	4653      	mov	r3, sl
 801fc3c:	4628      	mov	r0, r5
 801fc3e:	f8cd 9000 	str.w	r9, [sp]
 801fc42:	f7f5 fda5 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 801fc46:	e895 0003 	ldmia.w	r5, {r0, r1}
 801fc4a:	465b      	mov	r3, fp
 801fc4c:	60b8      	str	r0, [r7, #8]
 801fc4e:	7339      	strb	r1, [r7, #12]
 801fc50:	f8cd 8000 	str.w	r8, [sp]
 801fc54:	e894 0006 	ldmia.w	r4, {r1, r2}
 801fc58:	4628      	mov	r0, r5
 801fc5a:	f7f5 fd99 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 801fc5e:	e7b3      	b.n	801fbc8 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewb+0x38>
 801fc60:	e9d0 a907 	ldrd	sl, r9, [r0, #28]
 801fc64:	e7cc      	b.n	801fc00 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewb+0x70>
 801fc66:	e894 0006 	ldmia.w	r4, {r1, r2}
 801fc6a:	4628      	mov	r0, r5
 801fc6c:	f8cd 8000 	str.w	r8, [sp]
 801fc70:	465b      	mov	r3, fp
 801fc72:	f7f5 fd8d 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 801fc76:	e895 0003 	ldmia.w	r5, {r0, r1}
 801fc7a:	60b8      	str	r0, [r7, #8]
 801fc7c:	7339      	strb	r1, [r7, #12]
 801fc7e:	f8cd 9000 	str.w	r9, [sp]
 801fc82:	4653      	mov	r3, sl
 801fc84:	e7e6      	b.n	801fc54 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewb+0xc4>
 801fc86:	2200      	movs	r2, #0
 801fc88:	609a      	str	r2, [r3, #8]
 801fc8a:	e7f8      	b.n	801fc7e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewb+0xee>

0801fc8c <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_>:
 801fc8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc90:	b08b      	sub	sp, #44	; 0x2c
 801fc92:	af04      	add	r7, sp, #16
 801fc94:	4689      	mov	r9, r1
 801fc96:	6c3e      	ldr	r6, [r7, #64]	; 0x40
 801fc98:	f107 0108 	add.w	r1, r7, #8
 801fc9c:	e881 000c 	stmia.w	r1, {r2, r3}
 801fca0:	4680      	mov	r8, r0
 801fca2:	f106 016c 	add.w	r1, r6, #108	; 0x6c
 801fca6:	f107 0010 	add.w	r0, r7, #16
 801fcaa:	f7ff fe27 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 801fcae:	68f5      	ldr	r5, [r6, #12]
 801fcb0:	f005 034a 	and.w	r3, r5, #74	; 0x4a
 801fcb4:	b094      	sub	sp, #80	; 0x50
 801fcb6:	2b40      	cmp	r3, #64	; 0x40
 801fcb8:	4604      	mov	r4, r0
 801fcba:	f100 0a2c 	add.w	sl, r0, #44	; 0x2c
 801fcbe:	f10d 0b10 	add.w	fp, sp, #16
 801fcc2:	603b      	str	r3, [r7, #0]
 801fcc4:	d05a      	beq.n	801fd7c <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_+0xf0>
 801fcc6:	3b08      	subs	r3, #8
 801fcc8:	bf18      	it	ne
 801fcca:	2301      	movne	r3, #1
 801fccc:	607b      	str	r3, [r7, #4]
 801fcce:	687b      	ldr	r3, [r7, #4]
 801fcd0:	9300      	str	r3, [sp, #0]
 801fcd2:	4652      	mov	r2, sl
 801fcd4:	462b      	mov	r3, r5
 801fcd6:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 801fcd8:	f10b 0050 	add.w	r0, fp, #80	; 0x50
 801fcdc:	f7ff f872 	bl	801edc4 <_ZSt13__int_to_charIwmEiPT_T0_PKS0_St13_Ios_Fmtflagsb>
 801fce0:	7c22      	ldrb	r2, [r4, #16]
 801fce2:	6178      	str	r0, [r7, #20]
 801fce4:	f1c0 0314 	rsb	r3, r0, #20
 801fce8:	eb0b 0383 	add.w	r3, fp, r3, lsl #2
 801fcec:	b192      	cbz	r2, 801fd14 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_+0x88>
 801fcee:	00c0      	lsls	r0, r0, #3
 801fcf0:	3008      	adds	r0, #8
 801fcf2:	ebad 0d00 	sub.w	sp, sp, r0
 801fcf6:	f10d 0b18 	add.w	fp, sp, #24
 801fcfa:	f107 0214 	add.w	r2, r7, #20
 801fcfe:	e9cd 3202 	strd	r3, r2, [sp, #8]
 801fd02:	e9cd 6b00 	strd	r6, fp, [sp]
 801fd06:	4648      	mov	r0, r9
 801fd08:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801fd0a:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 801fd0e:	f7ff f844 	bl	801ed9a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE12_M_group_intEPKcjwRSt8ios_basePwS9_Ri>
 801fd12:	465b      	mov	r3, fp
 801fd14:	687a      	ldr	r2, [r7, #4]
 801fd16:	b96a      	cbnz	r2, 801fd34 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_+0xa8>
 801fd18:	05aa      	lsls	r2, r5, #22
 801fd1a:	d50b      	bpl.n	801fd34 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_+0xa8>
 801fd1c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 801fd1e:	b14a      	cbz	r2, 801fd34 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_+0xa8>
 801fd20:	6839      	ldr	r1, [r7, #0]
 801fd22:	697a      	ldr	r2, [r7, #20]
 801fd24:	2940      	cmp	r1, #64	; 0x40
 801fd26:	d12b      	bne.n	801fd80 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_+0xf4>
 801fd28:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 801fd2a:	f843 1c04 	str.w	r1, [r3, #-4]
 801fd2e:	3201      	adds	r2, #1
 801fd30:	617a      	str	r2, [r7, #20]
 801fd32:	3b04      	subs	r3, #4
 801fd34:	68b2      	ldr	r2, [r6, #8]
 801fd36:	6979      	ldr	r1, [r7, #20]
 801fd38:	4291      	cmp	r1, r2
 801fd3a:	da11      	bge.n	801fd60 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_+0xd4>
 801fd3c:	0091      	lsls	r1, r2, #2
 801fd3e:	3107      	adds	r1, #7
 801fd40:	f021 0107 	bic.w	r1, r1, #7
 801fd44:	ebad 0d01 	sub.w	sp, sp, r1
 801fd48:	ac04      	add	r4, sp, #16
 801fd4a:	f107 0114 	add.w	r1, r7, #20
 801fd4e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801fd52:	9400      	str	r4, [sp, #0]
 801fd54:	4633      	mov	r3, r6
 801fd56:	6c79      	ldr	r1, [r7, #68]	; 0x44
 801fd58:	4648      	mov	r0, r9
 801fd5a:	f7ff fe58 	bl	801fa0e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6_M_padEwiRSt8ios_basePwPKwRi>
 801fd5e:	4623      	mov	r3, r4
 801fd60:	2200      	movs	r2, #0
 801fd62:	60b2      	str	r2, [r6, #8]
 801fd64:	697a      	ldr	r2, [r7, #20]
 801fd66:	9200      	str	r2, [sp, #0]
 801fd68:	4640      	mov	r0, r8
 801fd6a:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 801fd6e:	f7f5 fd0f 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 801fd72:	4640      	mov	r0, r8
 801fd74:	371c      	adds	r7, #28
 801fd76:	46bd      	mov	sp, r7
 801fd78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fd7c:	2300      	movs	r3, #0
 801fd7e:	e7a5      	b.n	801fccc <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_+0x40>
 801fd80:	f3c5 3580 	ubfx	r5, r5, #14, #1
 801fd84:	3502      	adds	r5, #2
 801fd86:	3202      	adds	r2, #2
 801fd88:	f85a 1025 	ldr.w	r1, [sl, r5, lsl #2]
 801fd8c:	f843 1c04 	str.w	r1, [r3, #-4]
 801fd90:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 801fd92:	f843 1c08 	str.w	r1, [r3, #-8]
 801fd96:	617a      	str	r2, [r7, #20]
 801fd98:	3b08      	subs	r3, #8
 801fd9a:	e7cb      	b.n	801fd34 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_+0xa8>

0801fd9c <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewm>:
 801fd9c:	b530      	push	{r4, r5, lr}
 801fd9e:	b087      	sub	sp, #28
 801fda0:	ac04      	add	r4, sp, #16
 801fda2:	e884 000c 	stmia.w	r4, {r2, r3}
 801fda6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fda8:	9302      	str	r3, [sp, #8]
 801fdaa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fdac:	9301      	str	r3, [sp, #4]
 801fdae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fdb0:	9300      	str	r3, [sp, #0]
 801fdb2:	e894 000c 	ldmia.w	r4, {r2, r3}
 801fdb6:	4605      	mov	r5, r0
 801fdb8:	f7ff ff68 	bl	801fc8c <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_>
 801fdbc:	4628      	mov	r0, r5
 801fdbe:	b007      	add	sp, #28
 801fdc0:	bd30      	pop	{r4, r5, pc}

0801fdc2 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewPKv>:
 801fdc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fdc6:	b088      	sub	sp, #32
 801fdc8:	ac04      	add	r4, sp, #16
 801fdca:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801fdcc:	f8d6 800c 	ldr.w	r8, [r6, #12]
 801fdd0:	e884 000c 	stmia.w	r4, {r2, r3}
 801fdd4:	f428 4380 	bic.w	r3, r8, #16384	; 0x4000
 801fdd8:	f023 034a 	bic.w	r3, r3, #74	; 0x4a
 801fddc:	f443 7302 	orr.w	r3, r3, #520	; 0x208
 801fde0:	60f3      	str	r3, [r6, #12]
 801fde2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fde4:	9302      	str	r3, [sp, #8]
 801fde6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fde8:	e9cd 6300 	strd	r6, r3, [sp]
 801fdec:	af06      	add	r7, sp, #24
 801fdee:	4605      	mov	r5, r0
 801fdf0:	e894 000c 	ldmia.w	r4, {r2, r3}
 801fdf4:	4638      	mov	r0, r7
 801fdf6:	f7ff ff49 	bl	801fc8c <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intImEES3_S3_RSt8ios_basewT_>
 801fdfa:	e897 0003 	ldmia.w	r7, {r0, r1}
 801fdfe:	9004      	str	r0, [sp, #16]
 801fe00:	f88d 1014 	strb.w	r1, [sp, #20]
 801fe04:	e894 0003 	ldmia.w	r4, {r0, r1}
 801fe08:	e885 0003 	stmia.w	r5, {r0, r1}
 801fe0c:	4628      	mov	r0, r5
 801fe0e:	f8c6 800c 	str.w	r8, [r6, #12]
 801fe12:	b008      	add	sp, #32
 801fe14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801fe18 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_>:
 801fe18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe1c:	ed2d 8b02 	vpush	{d8}
 801fe20:	b08b      	sub	sp, #44	; 0x2c
 801fe22:	af04      	add	r7, sp, #16
 801fe24:	ee08 1a90 	vmov	s17, r1
 801fe28:	f8d7 9048 	ldr.w	r9, [r7, #72]	; 0x48
 801fe2c:	f107 0108 	add.w	r1, r7, #8
 801fe30:	e881 000c 	stmia.w	r1, {r2, r3}
 801fe34:	ee08 0a10 	vmov	s16, r0
 801fe38:	f109 016c 	add.w	r1, r9, #108	; 0x6c
 801fe3c:	f107 0010 	add.w	r0, r7, #16
 801fe40:	e9d7 a814 	ldrd	sl, r8, [r7, #80]	; 0x50
 801fe44:	f7ff fd5a 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 801fe48:	f8d9 500c 	ldr.w	r5, [r9, #12]
 801fe4c:	f100 032c 	add.w	r3, r0, #44	; 0x2c
 801fe50:	603b      	str	r3, [r7, #0]
 801fe52:	f005 034a 	and.w	r3, r5, #74	; 0x4a
 801fe56:	607b      	str	r3, [r7, #4]
 801fe58:	6879      	ldr	r1, [r7, #4]
 801fe5a:	b0a8      	sub	sp, #160	; 0xa0
 801fe5c:	2940      	cmp	r1, #64	; 0x40
 801fe5e:	4604      	mov	r4, r0
 801fe60:	f10d 0b10 	add.w	fp, sp, #16
 801fe64:	4652      	mov	r2, sl
 801fe66:	4643      	mov	r3, r8
 801fe68:	d001      	beq.n	801fe6e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0x56>
 801fe6a:	2908      	cmp	r1, #8
 801fe6c:	d177      	bne.n	801ff5e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0x146>
 801fe6e:	2600      	movs	r6, #0
 801fe70:	6839      	ldr	r1, [r7, #0]
 801fe72:	9100      	str	r1, [sp, #0]
 801fe74:	e9cd 5601 	strd	r5, r6, [sp, #4]
 801fe78:	f10b 00a0 	add.w	r0, fp, #160	; 0xa0
 801fe7c:	f7fe ffd7 	bl	801ee2e <_ZSt13__int_to_charIwyEiPT_T0_PKS0_St13_Ios_Fmtflagsb>
 801fe80:	7c22      	ldrb	r2, [r4, #16]
 801fe82:	6178      	str	r0, [r7, #20]
 801fe84:	f1c0 0328 	rsb	r3, r0, #40	; 0x28
 801fe88:	eb0b 0383 	add.w	r3, fp, r3, lsl #2
 801fe8c:	b19a      	cbz	r2, 801feb6 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0x9e>
 801fe8e:	00c0      	lsls	r0, r0, #3
 801fe90:	3008      	adds	r0, #8
 801fe92:	ebad 0d00 	sub.w	sp, sp, r0
 801fe96:	f10d 0b18 	add.w	fp, sp, #24
 801fe9a:	f107 0214 	add.w	r2, r7, #20
 801fe9e:	e9cd 3202 	strd	r3, r2, [sp, #8]
 801fea2:	e9cd 9b00 	strd	r9, fp, [sp]
 801fea6:	ee18 0a90 	vmov	r0, s17
 801feaa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801feac:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 801feb0:	f7fe ff73 	bl	801ed9a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE12_M_group_intEPKcjwRSt8ios_basePwS9_Ri>
 801feb4:	465b      	mov	r3, fp
 801feb6:	697a      	ldr	r2, [r7, #20]
 801feb8:	2e00      	cmp	r6, #0
 801feba:	d037      	beq.n	801ff2c <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0x114>
 801febc:	f1b8 0f00 	cmp.w	r8, #0
 801fec0:	db32      	blt.n	801ff28 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0x110>
 801fec2:	0528      	lsls	r0, r5, #20
 801fec4:	d505      	bpl.n	801fed2 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0xba>
 801fec6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801fec8:	f843 1c04 	str.w	r1, [r3, #-4]
 801fecc:	3201      	adds	r2, #1
 801fece:	617a      	str	r2, [r7, #20]
 801fed0:	3b04      	subs	r3, #4
 801fed2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801fed6:	6979      	ldr	r1, [r7, #20]
 801fed8:	4291      	cmp	r1, r2
 801feda:	da12      	bge.n	801ff02 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0xea>
 801fedc:	0091      	lsls	r1, r2, #2
 801fede:	3107      	adds	r1, #7
 801fee0:	f021 0107 	bic.w	r1, r1, #7
 801fee4:	ebad 0d01 	sub.w	sp, sp, r1
 801fee8:	ac04      	add	r4, sp, #16
 801feea:	f107 0114 	add.w	r1, r7, #20
 801feee:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801fef2:	ee18 0a90 	vmov	r0, s17
 801fef6:	464b      	mov	r3, r9
 801fef8:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 801fefa:	9400      	str	r4, [sp, #0]
 801fefc:	f7ff fd87 	bl	801fa0e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6_M_padEwiRSt8ios_basePwPKwRi>
 801ff00:	4623      	mov	r3, r4
 801ff02:	2200      	movs	r2, #0
 801ff04:	f8c9 2008 	str.w	r2, [r9, #8]
 801ff08:	697a      	ldr	r2, [r7, #20]
 801ff0a:	9200      	str	r2, [sp, #0]
 801ff0c:	ee18 0a10 	vmov	r0, s16
 801ff10:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 801ff14:	f7f5 fc3c 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 801ff18:	ee18 0a10 	vmov	r0, s16
 801ff1c:	371c      	adds	r7, #28
 801ff1e:	46bd      	mov	sp, r7
 801ff20:	ecbd 8b02 	vpop	{d8}
 801ff24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff28:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801ff2a:	e7cd      	b.n	801fec8 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0xb0>
 801ff2c:	05a9      	lsls	r1, r5, #22
 801ff2e:	d5d0      	bpl.n	801fed2 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0xba>
 801ff30:	ea5a 0108 	orrs.w	r1, sl, r8
 801ff34:	d0cd      	beq.n	801fed2 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0xba>
 801ff36:	6879      	ldr	r1, [r7, #4]
 801ff38:	2940      	cmp	r1, #64	; 0x40
 801ff3a:	d101      	bne.n	801ff40 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0x128>
 801ff3c:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 801ff3e:	e7c3      	b.n	801fec8 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0xb0>
 801ff40:	f3c5 3580 	ubfx	r5, r5, #14, #1
 801ff44:	6839      	ldr	r1, [r7, #0]
 801ff46:	3502      	adds	r5, #2
 801ff48:	3202      	adds	r2, #2
 801ff4a:	f851 1025 	ldr.w	r1, [r1, r5, lsl #2]
 801ff4e:	f843 1c04 	str.w	r1, [r3, #-4]
 801ff52:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 801ff54:	f843 1c08 	str.w	r1, [r3, #-8]
 801ff58:	617a      	str	r2, [r7, #20]
 801ff5a:	3b08      	subs	r3, #8
 801ff5c:	e7b9      	b.n	801fed2 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0xba>
 801ff5e:	f1ba 0f01 	cmp.w	sl, #1
 801ff62:	f178 0100 	sbcs.w	r1, r8, #0
 801ff66:	da03      	bge.n	801ff70 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0x158>
 801ff68:	f1da 0200 	rsbs	r2, sl, #0
 801ff6c:	eb68 0348 	sbc.w	r3, r8, r8, lsl #1
 801ff70:	2601      	movs	r6, #1
 801ff72:	e77d      	b.n	801fe70 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_+0x58>

0801ff74 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewx>:
 801ff74:	b530      	push	{r4, r5, lr}
 801ff76:	b087      	sub	sp, #28
 801ff78:	ac04      	add	r4, sp, #16
 801ff7a:	e884 000c 	stmia.w	r4, {r2, r3}
 801ff7e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 801ff82:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801ff86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ff88:	9301      	str	r3, [sp, #4]
 801ff8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ff8c:	9300      	str	r3, [sp, #0]
 801ff8e:	e894 000c 	ldmia.w	r4, {r2, r3}
 801ff92:	4605      	mov	r5, r0
 801ff94:	f7ff ff40 	bl	801fe18 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIxEES3_S3_RSt8ios_basewT_>
 801ff98:	4628      	mov	r0, r5
 801ff9a:	b007      	add	sp, #28
 801ff9c:	bd30      	pop	{r4, r5, pc}

0801ff9e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIyEES3_S3_RSt8ios_basewT_>:
 801ff9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ffa2:	b08d      	sub	sp, #52	; 0x34
 801ffa4:	af04      	add	r7, sp, #16
 801ffa6:	4689      	mov	r9, r1
 801ffa8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
 801ffaa:	f107 0110 	add.w	r1, r7, #16
 801ffae:	e881 000c 	stmia.w	r1, {r2, r3}
 801ffb2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801ffb4:	607b      	str	r3, [r7, #4]
 801ffb6:	4680      	mov	r8, r0
 801ffb8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801ffba:	603b      	str	r3, [r7, #0]
 801ffbc:	f106 016c 	add.w	r1, r6, #108	; 0x6c
 801ffc0:	f107 0018 	add.w	r0, r7, #24
 801ffc4:	f7ff fc9a 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 801ffc8:	68f5      	ldr	r5, [r6, #12]
 801ffca:	f005 0a4a 	and.w	sl, r5, #74	; 0x4a
 801ffce:	f100 032c 	add.w	r3, r0, #44	; 0x2c
 801ffd2:	b0a8      	sub	sp, #160	; 0xa0
 801ffd4:	f1ba 0f40 	cmp.w	sl, #64	; 0x40
 801ffd8:	4604      	mov	r4, r0
 801ffda:	60bb      	str	r3, [r7, #8]
 801ffdc:	f10d 0b10 	add.w	fp, sp, #16
 801ffe0:	d05f      	beq.n	80200a2 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIyEES3_S3_RSt8ios_basewT_+0x104>
 801ffe2:	f1ba 0308 	subs.w	r3, sl, #8
 801ffe6:	bf18      	it	ne
 801ffe8:	2301      	movne	r3, #1
 801ffea:	60fb      	str	r3, [r7, #12]
 801ffec:	68fb      	ldr	r3, [r7, #12]
 801ffee:	e9cd 5301 	strd	r5, r3, [sp, #4]
 801fff2:	68bb      	ldr	r3, [r7, #8]
 801fff4:	9300      	str	r3, [sp, #0]
 801fff6:	f10b 00a0 	add.w	r0, fp, #160	; 0xa0
 801fffa:	e9d7 3200 	ldrd	r3, r2, [r7]
 801fffe:	f7fe ff16 	bl	801ee2e <_ZSt13__int_to_charIwyEiPT_T0_PKS0_St13_Ios_Fmtflagsb>
 8020002:	7c22      	ldrb	r2, [r4, #16]
 8020004:	61f8      	str	r0, [r7, #28]
 8020006:	f1c0 0328 	rsb	r3, r0, #40	; 0x28
 802000a:	eb0b 0383 	add.w	r3, fp, r3, lsl #2
 802000e:	b192      	cbz	r2, 8020036 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIyEES3_S3_RSt8ios_basewT_+0x98>
 8020010:	00c0      	lsls	r0, r0, #3
 8020012:	3008      	adds	r0, #8
 8020014:	ebad 0d00 	sub.w	sp, sp, r0
 8020018:	f10d 0b18 	add.w	fp, sp, #24
 802001c:	f107 021c 	add.w	r2, r7, #28
 8020020:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8020024:	e9cd 6b00 	strd	r6, fp, [sp]
 8020028:	4648      	mov	r0, r9
 802002a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802002c:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8020030:	f7fe feb3 	bl	801ed9a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE12_M_group_intEPKcjwRSt8ios_basePwS9_Ri>
 8020034:	465b      	mov	r3, fp
 8020036:	68fa      	ldr	r2, [r7, #12]
 8020038:	b97a      	cbnz	r2, 802005a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIyEES3_S3_RSt8ios_basewT_+0xbc>
 802003a:	05aa      	lsls	r2, r5, #22
 802003c:	d50d      	bpl.n	802005a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIyEES3_S3_RSt8ios_basewT_+0xbc>
 802003e:	e9d7 1200 	ldrd	r1, r2, [r7]
 8020042:	430a      	orrs	r2, r1
 8020044:	d009      	beq.n	802005a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIyEES3_S3_RSt8ios_basewT_+0xbc>
 8020046:	f1ba 0f40 	cmp.w	sl, #64	; 0x40
 802004a:	69fa      	ldr	r2, [r7, #28]
 802004c:	d12b      	bne.n	80200a6 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIyEES3_S3_RSt8ios_basewT_+0x108>
 802004e:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8020050:	f843 1c04 	str.w	r1, [r3, #-4]
 8020054:	3201      	adds	r2, #1
 8020056:	61fa      	str	r2, [r7, #28]
 8020058:	3b04      	subs	r3, #4
 802005a:	68b2      	ldr	r2, [r6, #8]
 802005c:	69f9      	ldr	r1, [r7, #28]
 802005e:	4291      	cmp	r1, r2
 8020060:	da11      	bge.n	8020086 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIyEES3_S3_RSt8ios_basewT_+0xe8>
 8020062:	0091      	lsls	r1, r2, #2
 8020064:	3107      	adds	r1, #7
 8020066:	f021 0107 	bic.w	r1, r1, #7
 802006a:	ebad 0d01 	sub.w	sp, sp, r1
 802006e:	ac04      	add	r4, sp, #16
 8020070:	f107 011c 	add.w	r1, r7, #28
 8020074:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8020078:	9400      	str	r4, [sp, #0]
 802007a:	4633      	mov	r3, r6
 802007c:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 802007e:	4648      	mov	r0, r9
 8020080:	f7ff fcc5 	bl	801fa0e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6_M_padEwiRSt8ios_basePwPKwRi>
 8020084:	4623      	mov	r3, r4
 8020086:	2200      	movs	r2, #0
 8020088:	60b2      	str	r2, [r6, #8]
 802008a:	69fa      	ldr	r2, [r7, #28]
 802008c:	9200      	str	r2, [sp, #0]
 802008e:	4640      	mov	r0, r8
 8020090:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8020094:	f7f5 fb7c 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 8020098:	4640      	mov	r0, r8
 802009a:	3724      	adds	r7, #36	; 0x24
 802009c:	46bd      	mov	sp, r7
 802009e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80200a2:	2300      	movs	r3, #0
 80200a4:	e7a1      	b.n	801ffea <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIyEES3_S3_RSt8ios_basewT_+0x4c>
 80200a6:	f3c5 3580 	ubfx	r5, r5, #14, #1
 80200aa:	68b9      	ldr	r1, [r7, #8]
 80200ac:	3502      	adds	r5, #2
 80200ae:	3202      	adds	r2, #2
 80200b0:	f851 1025 	ldr.w	r1, [r1, r5, lsl #2]
 80200b4:	f843 1c04 	str.w	r1, [r3, #-4]
 80200b8:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80200ba:	f843 1c08 	str.w	r1, [r3, #-8]
 80200be:	61fa      	str	r2, [r7, #28]
 80200c0:	3b08      	subs	r3, #8
 80200c2:	e7ca      	b.n	802005a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIyEES3_S3_RSt8ios_basewT_+0xbc>

080200c4 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewy>:
 80200c4:	b530      	push	{r4, r5, lr}
 80200c6:	b087      	sub	sp, #28
 80200c8:	ac04      	add	r4, sp, #16
 80200ca:	e884 000c 	stmia.w	r4, {r2, r3}
 80200ce:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80200d2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80200d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80200d8:	9301      	str	r3, [sp, #4]
 80200da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80200dc:	9300      	str	r3, [sp, #0]
 80200de:	e894 000c 	ldmia.w	r4, {r2, r3}
 80200e2:	4605      	mov	r5, r0
 80200e4:	f7ff ff5b 	bl	801ff9e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE13_M_insert_intIyEES3_S3_RSt8ios_basewT_>
 80200e8:	4628      	mov	r0, r5
 80200ea:	b007      	add	sp, #28
 80200ec:	bd30      	pop	{r4, r5, pc}

080200ee <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_>:
 80200ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200f2:	ed2d 8b02 	vpush	{d8}
 80200f6:	eeb0 8a40 	vmov.f32	s16, s0
 80200fa:	eef0 8a60 	vmov.f32	s17, s1
 80200fe:	b091      	sub	sp, #68	; 0x44
 8020100:	af04      	add	r7, sp, #16
 8020102:	468a      	mov	sl, r1
 8020104:	6e3d      	ldr	r5, [r7, #96]	; 0x60
 8020106:	f107 0108 	add.w	r1, r7, #8
 802010a:	f105 0b6c 	add.w	fp, r5, #108	; 0x6c
 802010e:	e881 000c 	stmia.w	r1, {r2, r3}
 8020112:	4681      	mov	r9, r0
 8020114:	4659      	mov	r1, fp
 8020116:	f107 0014 	add.w	r0, r7, #20
 802011a:	f7ff fbef 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 802011e:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8020122:	f897 2068 	ldrb.w	r2, [r7, #104]	; 0x68
 8020126:	f1b8 0f00 	cmp.w	r8, #0
 802012a:	4606      	mov	r6, r0
 802012c:	f107 0120 	add.w	r1, r7, #32
 8020130:	4628      	mov	r0, r5
 8020132:	bfb8      	it	lt
 8020134:	f04f 0806 	movlt.w	r8, #6
 8020138:	f004 fcc7 	bl	8024aca <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc>
 802013c:	68eb      	ldr	r3, [r5, #12]
 802013e:	f403 7382 	and.w	r3, r3, #260	; 0x104
 8020142:	b08c      	sub	sp, #48	; 0x30
 8020144:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8020148:	607b      	str	r3, [r7, #4]
 802014a:	ac04      	add	r4, sp, #16
 802014c:	f000 80ad 	beq.w	80202aa <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x1bc>
 8020150:	f7ec f8c4 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8020154:	f107 0320 	add.w	r3, r7, #32
 8020158:	61f8      	str	r0, [r7, #28]
 802015a:	222d      	movs	r2, #45	; 0x2d
 802015c:	ed8d 8b02 	vstr	d8, [sp, #8]
 8020160:	f8cd 8000 	str.w	r8, [sp]
 8020164:	4621      	mov	r1, r4
 8020166:	f107 001c 	add.w	r0, r7, #28
 802016a:	f7f1 f9af 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 802016e:	61b8      	str	r0, [r7, #24]
 8020170:	69bb      	ldr	r3, [r7, #24]
 8020172:	2b2c      	cmp	r3, #44	; 0x2c
 8020174:	dd1c      	ble.n	80201b0 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0xc2>
 8020176:	1c5a      	adds	r2, r3, #1
 8020178:	3308      	adds	r3, #8
 802017a:	f023 0307 	bic.w	r3, r3, #7
 802017e:	ebad 0d03 	sub.w	sp, sp, r3
 8020182:	687b      	ldr	r3, [r7, #4]
 8020184:	607a      	str	r2, [r7, #4]
 8020186:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 802018a:	ac04      	add	r4, sp, #16
 802018c:	f000 809b 	beq.w	80202c6 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x1d8>
 8020190:	f7ec f8a4 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8020194:	61f8      	str	r0, [r7, #28]
 8020196:	ed8d 8b02 	vstr	d8, [sp, #8]
 802019a:	f8cd 8000 	str.w	r8, [sp]
 802019e:	687a      	ldr	r2, [r7, #4]
 80201a0:	f107 0320 	add.w	r3, r7, #32
 80201a4:	4621      	mov	r1, r4
 80201a6:	f107 001c 	add.w	r0, r7, #28
 80201aa:	f7f1 f98f 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 80201ae:	61b8      	str	r0, [r7, #24]
 80201b0:	4658      	mov	r0, fp
 80201b2:	f7fe fc55 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 80201b6:	69ba      	ldr	r2, [r7, #24]
 80201b8:	0093      	lsls	r3, r2, #2
 80201ba:	3307      	adds	r3, #7
 80201bc:	f023 0307 	bic.w	r3, r3, #7
 80201c0:	ebad 0d03 	sub.w	sp, sp, r3
 80201c4:	f10d 0b10 	add.w	fp, sp, #16
 80201c8:	4422      	add	r2, r4
 80201ca:	465b      	mov	r3, fp
 80201cc:	4621      	mov	r1, r4
 80201ce:	f7f5 fad5 	bl	801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>
 80201d2:	69ba      	ldr	r2, [r7, #24]
 80201d4:	2a00      	cmp	r2, #0
 80201d6:	f000 8084 	beq.w	80202e2 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x1f4>
 80201da:	212e      	movs	r1, #46	; 0x2e
 80201dc:	4620      	mov	r0, r4
 80201de:	607a      	str	r2, [r7, #4]
 80201e0:	f7df fff6 	bl	80001d0 <memchr>
 80201e4:	687a      	ldr	r2, [r7, #4]
 80201e6:	b128      	cbz	r0, 80201f4 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x106>
 80201e8:	1b01      	subs	r1, r0, r4
 80201ea:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80201ec:	f84b 3021 	str.w	r3, [fp, r1, lsl #2]
 80201f0:	eb0b 0081 	add.w	r0, fp, r1, lsl #2
 80201f4:	7c33      	ldrb	r3, [r6, #16]
 80201f6:	b383      	cbz	r3, 802025a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x16c>
 80201f8:	b948      	cbnz	r0, 802020e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x120>
 80201fa:	2a02      	cmp	r2, #2
 80201fc:	dd07      	ble.n	802020e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x120>
 80201fe:	7863      	ldrb	r3, [r4, #1]
 8020200:	3b30      	subs	r3, #48	; 0x30
 8020202:	2b09      	cmp	r3, #9
 8020204:	d829      	bhi.n	802025a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x16c>
 8020206:	78a3      	ldrb	r3, [r4, #2]
 8020208:	3b30      	subs	r3, #48	; 0x30
 802020a:	2b09      	cmp	r3, #9
 802020c:	d825      	bhi.n	802025a <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x16c>
 802020e:	466b      	mov	r3, sp
 8020210:	eba3 03c2 	sub.w	r3, r3, r2, lsl #3
 8020214:	469d      	mov	sp, r3
 8020216:	7823      	ldrb	r3, [r4, #0]
 8020218:	2b2d      	cmp	r3, #45	; 0x2d
 802021a:	f10d 0810 	add.w	r8, sp, #16
 802021e:	d001      	beq.n	8020224 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x136>
 8020220:	2b2b      	cmp	r3, #43	; 0x2b
 8020222:	d160      	bne.n	80202e6 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x1f8>
 8020224:	f8db 3000 	ldr.w	r3, [fp]
 8020228:	f8c8 3000 	str.w	r3, [r8]
 802022c:	3a01      	subs	r2, #1
 802022e:	61ba      	str	r2, [r7, #24]
 8020230:	2401      	movs	r4, #1
 8020232:	f107 0318 	add.w	r3, r7, #24
 8020236:	9303      	str	r3, [sp, #12]
 8020238:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 802023c:	9302      	str	r3, [sp, #8]
 802023e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8020242:	e9cd 0300 	strd	r0, r3, [sp]
 8020246:	4650      	mov	r0, sl
 8020248:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 802024a:	e9d6 1202 	ldrd	r1, r2, [r6, #8]
 802024e:	f7fe fd80 	bl	801ed52 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE14_M_group_floatEPKcjwPKwPwS9_Ri>
 8020252:	69bb      	ldr	r3, [r7, #24]
 8020254:	4423      	add	r3, r4
 8020256:	61bb      	str	r3, [r7, #24]
 8020258:	46c3      	mov	fp, r8
 802025a:	68aa      	ldr	r2, [r5, #8]
 802025c:	69bb      	ldr	r3, [r7, #24]
 802025e:	4293      	cmp	r3, r2
 8020260:	da11      	bge.n	8020286 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x198>
 8020262:	0093      	lsls	r3, r2, #2
 8020264:	3307      	adds	r3, #7
 8020266:	f023 0307 	bic.w	r3, r3, #7
 802026a:	ebad 0d03 	sub.w	sp, sp, r3
 802026e:	f107 0318 	add.w	r3, r7, #24
 8020272:	e9cd b301 	strd	fp, r3, [sp, #4]
 8020276:	ac04      	add	r4, sp, #16
 8020278:	9400      	str	r4, [sp, #0]
 802027a:	6e79      	ldr	r1, [r7, #100]	; 0x64
 802027c:	462b      	mov	r3, r5
 802027e:	4650      	mov	r0, sl
 8020280:	f7ff fbc5 	bl	801fa0e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6_M_padEwiRSt8ios_basePwPKwRi>
 8020284:	46a3      	mov	fp, r4
 8020286:	2300      	movs	r3, #0
 8020288:	60ab      	str	r3, [r5, #8]
 802028a:	69bb      	ldr	r3, [r7, #24]
 802028c:	9300      	str	r3, [sp, #0]
 802028e:	f107 0208 	add.w	r2, r7, #8
 8020292:	4648      	mov	r0, r9
 8020294:	ca06      	ldmia	r2, {r1, r2}
 8020296:	465b      	mov	r3, fp
 8020298:	f7f5 fa7a 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 802029c:	4648      	mov	r0, r9
 802029e:	3734      	adds	r7, #52	; 0x34
 80202a0:	46bd      	mov	sp, r7
 80202a2:	ecbd 8b02 	vpop	{d8}
 80202a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80202aa:	f7ec f817 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 80202ae:	f107 0320 	add.w	r3, r7, #32
 80202b2:	61f8      	str	r0, [r7, #28]
 80202b4:	222d      	movs	r2, #45	; 0x2d
 80202b6:	ed8d 8b00 	vstr	d8, [sp]
 80202ba:	4621      	mov	r1, r4
 80202bc:	f107 001c 	add.w	r0, r7, #28
 80202c0:	f7f1 f904 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 80202c4:	e753      	b.n	802016e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x80>
 80202c6:	f7ec f809 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 80202ca:	61f8      	str	r0, [r7, #28]
 80202cc:	ed8d 8b00 	vstr	d8, [sp]
 80202d0:	687a      	ldr	r2, [r7, #4]
 80202d2:	f107 0320 	add.w	r3, r7, #32
 80202d6:	4621      	mov	r1, r4
 80202d8:	f107 001c 	add.w	r0, r7, #28
 80202dc:	f7f1 f8f6 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 80202e0:	e765      	b.n	80201ae <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0xc0>
 80202e2:	4610      	mov	r0, r2
 80202e4:	e786      	b.n	80201f4 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x106>
 80202e6:	2400      	movs	r4, #0
 80202e8:	e7a3      	b.n	8020232 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_+0x144>

080202ea <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewd>:
 80202ea:	b530      	push	{r4, r5, lr}
 80202ec:	b087      	sub	sp, #28
 80202ee:	ac04      	add	r4, sp, #16
 80202f0:	e884 000c 	stmia.w	r4, {r2, r3}
 80202f4:	2300      	movs	r3, #0
 80202f6:	9302      	str	r3, [sp, #8]
 80202f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80202fa:	9301      	str	r3, [sp, #4]
 80202fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80202fe:	9300      	str	r3, [sp, #0]
 8020300:	e894 000c 	ldmia.w	r4, {r2, r3}
 8020304:	4605      	mov	r5, r0
 8020306:	f7ff fef2 	bl	80200ee <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIdEES3_S3_RSt8ios_basewcT_>
 802030a:	4628      	mov	r0, r5
 802030c:	b007      	add	sp, #28
 802030e:	bd30      	pop	{r4, r5, pc}

08020310 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_>:
 8020310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020314:	ed2d 8b02 	vpush	{d8}
 8020318:	eeb0 8a40 	vmov.f32	s16, s0
 802031c:	eef0 8a60 	vmov.f32	s17, s1
 8020320:	b091      	sub	sp, #68	; 0x44
 8020322:	af04      	add	r7, sp, #16
 8020324:	468a      	mov	sl, r1
 8020326:	6e3d      	ldr	r5, [r7, #96]	; 0x60
 8020328:	f107 0108 	add.w	r1, r7, #8
 802032c:	f105 0b6c 	add.w	fp, r5, #108	; 0x6c
 8020330:	e881 000c 	stmia.w	r1, {r2, r3}
 8020334:	4681      	mov	r9, r0
 8020336:	4659      	mov	r1, fp
 8020338:	f107 0014 	add.w	r0, r7, #20
 802033c:	f7ff fade 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 8020340:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8020344:	f897 2068 	ldrb.w	r2, [r7, #104]	; 0x68
 8020348:	f1b8 0f00 	cmp.w	r8, #0
 802034c:	4606      	mov	r6, r0
 802034e:	f107 0120 	add.w	r1, r7, #32
 8020352:	4628      	mov	r0, r5
 8020354:	bfb8      	it	lt
 8020356:	f04f 0806 	movlt.w	r8, #6
 802035a:	f004 fbb6 	bl	8024aca <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc>
 802035e:	68eb      	ldr	r3, [r5, #12]
 8020360:	f403 7382 	and.w	r3, r3, #260	; 0x104
 8020364:	b08c      	sub	sp, #48	; 0x30
 8020366:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 802036a:	607b      	str	r3, [r7, #4]
 802036c:	ac04      	add	r4, sp, #16
 802036e:	f000 80ad 	beq.w	80204cc <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x1bc>
 8020372:	f7eb ffb3 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8020376:	f107 0320 	add.w	r3, r7, #32
 802037a:	61f8      	str	r0, [r7, #28]
 802037c:	222d      	movs	r2, #45	; 0x2d
 802037e:	ed8d 8b02 	vstr	d8, [sp, #8]
 8020382:	f8cd 8000 	str.w	r8, [sp]
 8020386:	4621      	mov	r1, r4
 8020388:	f107 001c 	add.w	r0, r7, #28
 802038c:	f7f1 f89e 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 8020390:	61b8      	str	r0, [r7, #24]
 8020392:	69bb      	ldr	r3, [r7, #24]
 8020394:	2b2c      	cmp	r3, #44	; 0x2c
 8020396:	dd1c      	ble.n	80203d2 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0xc2>
 8020398:	1c5a      	adds	r2, r3, #1
 802039a:	3308      	adds	r3, #8
 802039c:	f023 0307 	bic.w	r3, r3, #7
 80203a0:	ebad 0d03 	sub.w	sp, sp, r3
 80203a4:	687b      	ldr	r3, [r7, #4]
 80203a6:	607a      	str	r2, [r7, #4]
 80203a8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80203ac:	ac04      	add	r4, sp, #16
 80203ae:	f000 809b 	beq.w	80204e8 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x1d8>
 80203b2:	f7eb ff93 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 80203b6:	61f8      	str	r0, [r7, #28]
 80203b8:	ed8d 8b02 	vstr	d8, [sp, #8]
 80203bc:	f8cd 8000 	str.w	r8, [sp]
 80203c0:	687a      	ldr	r2, [r7, #4]
 80203c2:	f107 0320 	add.w	r3, r7, #32
 80203c6:	4621      	mov	r1, r4
 80203c8:	f107 001c 	add.w	r0, r7, #28
 80203cc:	f7f1 f87e 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 80203d0:	61b8      	str	r0, [r7, #24]
 80203d2:	4658      	mov	r0, fp
 80203d4:	f7fe fb44 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 80203d8:	69ba      	ldr	r2, [r7, #24]
 80203da:	0093      	lsls	r3, r2, #2
 80203dc:	3307      	adds	r3, #7
 80203de:	f023 0307 	bic.w	r3, r3, #7
 80203e2:	ebad 0d03 	sub.w	sp, sp, r3
 80203e6:	f10d 0b10 	add.w	fp, sp, #16
 80203ea:	4422      	add	r2, r4
 80203ec:	465b      	mov	r3, fp
 80203ee:	4621      	mov	r1, r4
 80203f0:	f7f5 f9c4 	bl	801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>
 80203f4:	69ba      	ldr	r2, [r7, #24]
 80203f6:	2a00      	cmp	r2, #0
 80203f8:	f000 8084 	beq.w	8020504 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x1f4>
 80203fc:	212e      	movs	r1, #46	; 0x2e
 80203fe:	4620      	mov	r0, r4
 8020400:	607a      	str	r2, [r7, #4]
 8020402:	f7df fee5 	bl	80001d0 <memchr>
 8020406:	687a      	ldr	r2, [r7, #4]
 8020408:	b128      	cbz	r0, 8020416 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x106>
 802040a:	1b01      	subs	r1, r0, r4
 802040c:	6a73      	ldr	r3, [r6, #36]	; 0x24
 802040e:	f84b 3021 	str.w	r3, [fp, r1, lsl #2]
 8020412:	eb0b 0081 	add.w	r0, fp, r1, lsl #2
 8020416:	7c33      	ldrb	r3, [r6, #16]
 8020418:	b383      	cbz	r3, 802047c <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x16c>
 802041a:	b948      	cbnz	r0, 8020430 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x120>
 802041c:	2a02      	cmp	r2, #2
 802041e:	dd07      	ble.n	8020430 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x120>
 8020420:	7863      	ldrb	r3, [r4, #1]
 8020422:	3b30      	subs	r3, #48	; 0x30
 8020424:	2b09      	cmp	r3, #9
 8020426:	d829      	bhi.n	802047c <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x16c>
 8020428:	78a3      	ldrb	r3, [r4, #2]
 802042a:	3b30      	subs	r3, #48	; 0x30
 802042c:	2b09      	cmp	r3, #9
 802042e:	d825      	bhi.n	802047c <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x16c>
 8020430:	466b      	mov	r3, sp
 8020432:	eba3 03c2 	sub.w	r3, r3, r2, lsl #3
 8020436:	469d      	mov	sp, r3
 8020438:	7823      	ldrb	r3, [r4, #0]
 802043a:	2b2d      	cmp	r3, #45	; 0x2d
 802043c:	f10d 0810 	add.w	r8, sp, #16
 8020440:	d001      	beq.n	8020446 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x136>
 8020442:	2b2b      	cmp	r3, #43	; 0x2b
 8020444:	d160      	bne.n	8020508 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x1f8>
 8020446:	f8db 3000 	ldr.w	r3, [fp]
 802044a:	f8c8 3000 	str.w	r3, [r8]
 802044e:	3a01      	subs	r2, #1
 8020450:	61ba      	str	r2, [r7, #24]
 8020452:	2401      	movs	r4, #1
 8020454:	f107 0318 	add.w	r3, r7, #24
 8020458:	9303      	str	r3, [sp, #12]
 802045a:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 802045e:	9302      	str	r3, [sp, #8]
 8020460:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8020464:	e9cd 0300 	strd	r0, r3, [sp]
 8020468:	4650      	mov	r0, sl
 802046a:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 802046c:	e9d6 1202 	ldrd	r1, r2, [r6, #8]
 8020470:	f7fe fc6f 	bl	801ed52 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE14_M_group_floatEPKcjwPKwPwS9_Ri>
 8020474:	69bb      	ldr	r3, [r7, #24]
 8020476:	4423      	add	r3, r4
 8020478:	61bb      	str	r3, [r7, #24]
 802047a:	46c3      	mov	fp, r8
 802047c:	68aa      	ldr	r2, [r5, #8]
 802047e:	69bb      	ldr	r3, [r7, #24]
 8020480:	4293      	cmp	r3, r2
 8020482:	da11      	bge.n	80204a8 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x198>
 8020484:	0093      	lsls	r3, r2, #2
 8020486:	3307      	adds	r3, #7
 8020488:	f023 0307 	bic.w	r3, r3, #7
 802048c:	ebad 0d03 	sub.w	sp, sp, r3
 8020490:	f107 0318 	add.w	r3, r7, #24
 8020494:	e9cd b301 	strd	fp, r3, [sp, #4]
 8020498:	ac04      	add	r4, sp, #16
 802049a:	9400      	str	r4, [sp, #0]
 802049c:	6e79      	ldr	r1, [r7, #100]	; 0x64
 802049e:	462b      	mov	r3, r5
 80204a0:	4650      	mov	r0, sl
 80204a2:	f7ff fab4 	bl	801fa0e <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6_M_padEwiRSt8ios_basePwPKwRi>
 80204a6:	46a3      	mov	fp, r4
 80204a8:	2300      	movs	r3, #0
 80204aa:	60ab      	str	r3, [r5, #8]
 80204ac:	69bb      	ldr	r3, [r7, #24]
 80204ae:	9300      	str	r3, [sp, #0]
 80204b0:	f107 0208 	add.w	r2, r7, #8
 80204b4:	4648      	mov	r0, r9
 80204b6:	ca06      	ldmia	r2, {r1, r2}
 80204b8:	465b      	mov	r3, fp
 80204ba:	f7f5 f969 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 80204be:	4648      	mov	r0, r9
 80204c0:	3734      	adds	r7, #52	; 0x34
 80204c2:	46bd      	mov	sp, r7
 80204c4:	ecbd 8b02 	vpop	{d8}
 80204c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80204cc:	f7eb ff06 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 80204d0:	f107 0320 	add.w	r3, r7, #32
 80204d4:	61f8      	str	r0, [r7, #28]
 80204d6:	222d      	movs	r2, #45	; 0x2d
 80204d8:	ed8d 8b00 	vstr	d8, [sp]
 80204dc:	4621      	mov	r1, r4
 80204de:	f107 001c 	add.w	r0, r7, #28
 80204e2:	f7f0 fff3 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 80204e6:	e753      	b.n	8020390 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x80>
 80204e8:	f7eb fef8 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 80204ec:	61f8      	str	r0, [r7, #28]
 80204ee:	ed8d 8b00 	vstr	d8, [sp]
 80204f2:	687a      	ldr	r2, [r7, #4]
 80204f4:	f107 0320 	add.w	r3, r7, #32
 80204f8:	4621      	mov	r1, r4
 80204fa:	f107 001c 	add.w	r0, r7, #28
 80204fe:	f7f0 ffe5 	bl	80114cc <_ZSt16__convert_from_vRKPiPciPKcz>
 8020502:	e765      	b.n	80203d0 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0xc0>
 8020504:	4610      	mov	r0, r2
 8020506:	e786      	b.n	8020416 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x106>
 8020508:	2400      	movs	r4, #0
 802050a:	e7a3      	b.n	8020454 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_+0x144>

0802050c <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewe>:
 802050c:	b530      	push	{r4, r5, lr}
 802050e:	b087      	sub	sp, #28
 8020510:	ac04      	add	r4, sp, #16
 8020512:	e884 000c 	stmia.w	r4, {r2, r3}
 8020516:	234c      	movs	r3, #76	; 0x4c
 8020518:	9302      	str	r3, [sp, #8]
 802051a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802051c:	9301      	str	r3, [sp, #4]
 802051e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020520:	9300      	str	r3, [sp, #0]
 8020522:	e894 000c 	ldmia.w	r4, {r2, r3}
 8020526:	4605      	mov	r5, r0
 8020528:	f7ff fef2 	bl	8020310 <_ZNKSt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE15_M_insert_floatIeEES3_S3_RSt8ios_basewcT_>
 802052c:	4628      	mov	r0, r5
 802052e:	b007      	add	sp, #28
 8020530:	bd30      	pop	{r4, r5, pc}

08020532 <_ZNKSt8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewPK2tmcc>:
 8020532:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8020536:	f5ad 7d09 	sub.w	sp, sp, #548	; 0x224
 802053a:	4604      	mov	r4, r0
 802053c:	9e90      	ldr	r6, [sp, #576]	; 0x240
 802053e:	f89d 924c 	ldrb.w	r9, [sp, #588]	; 0x24c
 8020542:	f89d 7250 	ldrb.w	r7, [sp, #592]	; 0x250
 8020546:	366c      	adds	r6, #108	; 0x6c
 8020548:	4630      	mov	r0, r6
 802054a:	ad02      	add	r5, sp, #8
 802054c:	e885 000c 	stmia.w	r5, {r2, r3}
 8020550:	f7fe fa86 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8020554:	4680      	mov	r8, r0
 8020556:	4630      	mov	r0, r6
 8020558:	f7fe fb36 	bl	801ebc8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale>
 802055c:	2125      	movs	r1, #37	; 0x25
 802055e:	4606      	mov	r6, r0
 8020560:	4640      	mov	r0, r8
 8020562:	f7f5 fc0c 	bl	8015d7e <_ZNKSt21__ctype_abstract_baseIwE5widenEc>
 8020566:	9004      	str	r0, [sp, #16]
 8020568:	b9c7      	cbnz	r7, 802059c <_ZNKSt8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewPK2tmcc+0x6a>
 802056a:	e9cd 9705 	strd	r9, r7, [sp, #20]
 802056e:	9b92      	ldr	r3, [sp, #584]	; 0x248
 8020570:	9300      	str	r3, [sp, #0]
 8020572:	a908      	add	r1, sp, #32
 8020574:	ab04      	add	r3, sp, #16
 8020576:	2280      	movs	r2, #128	; 0x80
 8020578:	4630      	mov	r0, r6
 802057a:	f004 fc69 	bl	8024e50 <_ZNKSt11__timepunctIwE6_M_putEPwjPKwPK2tm>
 802057e:	a808      	add	r0, sp, #32
 8020580:	f009 ff60 	bl	802a444 <wcslen>
 8020584:	9000      	str	r0, [sp, #0]
 8020586:	e895 0006 	ldmia.w	r5, {r1, r2}
 802058a:	4620      	mov	r0, r4
 802058c:	ab08      	add	r3, sp, #32
 802058e:	f7f5 f8ff 	bl	8015790 <_ZSt7__writeIwESt19ostreambuf_iteratorIT_St11char_traitsIS1_EES4_PKS1_i>
 8020592:	4620      	mov	r0, r4
 8020594:	f50d 7d09 	add.w	sp, sp, #548	; 0x224
 8020598:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802059c:	2300      	movs	r3, #0
 802059e:	e9cd 7905 	strd	r7, r9, [sp, #20]
 80205a2:	9307      	str	r3, [sp, #28]
 80205a4:	e7e3      	b.n	802056e <_ZNKSt8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE6do_putES3_RSt8ios_basewPK2tmcc+0x3c>

080205a6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>:
 80205a6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80205aa:	4605      	mov	r5, r0
 80205ac:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 80205b0:	a902      	add	r1, sp, #8
 80205b2:	306c      	adds	r0, #108	; 0x6c
 80205b4:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 80205b8:	e901 000c 	stmdb	r1, {r2, r3}
 80205bc:	f7fe fa50 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 80205c0:	f1b9 0f02 	cmp.w	r9, #2
 80205c4:	4682      	mov	sl, r0
 80205c6:	d02f      	beq.n	8020628 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x82>
 80205c8:	f1b9 0f04 	cmp.w	r9, #4
 80205cc:	bf0c      	ite	eq
 80205ce:	f44f 777a 	moveq.w	r7, #1000	; 0x3e8
 80205d2:	2701      	movne	r7, #1
 80205d4:	2400      	movs	r4, #0
 80205d6:	46a0      	mov	r8, r4
 80205d8:	f04f 0b0a 	mov.w	fp, #10
 80205dc:	a90c      	add	r1, sp, #48	; 0x30
 80205de:	4668      	mov	r0, sp
 80205e0:	f7f5 fbf2 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80205e4:	b310      	cbz	r0, 802062c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x86>
 80205e6:	45c8      	cmp	r8, r9
 80205e8:	d022      	beq.n	8020630 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x8a>
 80205ea:	4668      	mov	r0, sp
 80205ec:	f7f5 fbca 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80205f0:	222a      	movs	r2, #42	; 0x2a
 80205f2:	4601      	mov	r1, r0
 80205f4:	4650      	mov	r0, sl
 80205f6:	f7f5 fbbc 	bl	8015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>
 80205fa:	3830      	subs	r0, #48	; 0x30
 80205fc:	b2c2      	uxtb	r2, r0
 80205fe:	2a09      	cmp	r2, #9
 8020600:	d821      	bhi.n	8020646 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 8020602:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020604:	fb0b 0404 	mla	r4, fp, r4, r0
 8020608:	fb04 f207 	mul.w	r2, r4, r7
 802060c:	429a      	cmp	r2, r3
 802060e:	dc1a      	bgt.n	8020646 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 8020610:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020612:	443a      	add	r2, r7
 8020614:	429a      	cmp	r2, r3
 8020616:	dd16      	ble.n	8020646 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 8020618:	fbb7 f7fb 	udiv	r7, r7, fp
 802061c:	4668      	mov	r0, sp
 802061e:	f7fe fe71 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 8020622:	f108 0801 	add.w	r8, r8, #1
 8020626:	e7d9      	b.n	80205dc <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x36>
 8020628:	270a      	movs	r7, #10
 802062a:	e7d3      	b.n	80205d4 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x2e>
 802062c:	45c8      	cmp	r8, r9
 802062e:	d10a      	bne.n	8020646 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xa0>
 8020630:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020632:	601c      	str	r4, [r3, #0]
 8020634:	ab02      	add	r3, sp, #8
 8020636:	e913 0003 	ldmdb	r3, {r0, r1}
 802063a:	e885 0003 	stmia.w	r5, {r0, r1}
 802063e:	4628      	mov	r0, r5
 8020640:	b003      	add	sp, #12
 8020642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020646:	f1b9 0f04 	cmp.w	r9, #4
 802064a:	d104      	bne.n	8020656 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xb0>
 802064c:	f1b8 0f02 	cmp.w	r8, #2
 8020650:	d101      	bne.n	8020656 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0xb0>
 8020652:	3c64      	subs	r4, #100	; 0x64
 8020654:	e7ec      	b.n	8020630 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x8a>
 8020656:	6833      	ldr	r3, [r6, #0]
 8020658:	f043 0304 	orr.w	r3, r3, #4
 802065c:	6033      	str	r3, [r6, #0]
 802065e:	e7e9      	b.n	8020634 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate+0x8e>

08020660 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>:
 8020660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020664:	b085      	sub	sp, #20
 8020666:	af00      	add	r7, sp, #0
 8020668:	4680      	mov	r8, r0
 802066a:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 802066c:	f8d7 9044 	ldr.w	r9, [r7, #68]	; 0x44
 8020670:	f107 0408 	add.w	r4, r7, #8
 8020674:	306c      	adds	r0, #108	; 0x6c
 8020676:	e884 000c 	stmia.w	r4, {r2, r3}
 802067a:	f7fe f9f1 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 802067e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8020680:	009b      	lsls	r3, r3, #2
 8020682:	3307      	adds	r3, #7
 8020684:	f023 0307 	bic.w	r3, r3, #7
 8020688:	4682      	mov	sl, r0
 802068a:	ebad 0d03 	sub.w	sp, sp, r3
 802068e:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8020692:	4620      	mov	r0, r4
 8020694:	466e      	mov	r6, sp
 8020696:	f7f5 fb97 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 802069a:	2800      	cmp	r0, #0
 802069c:	d07f      	beq.n	802079e <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x13e>
 802069e:	4620      	mov	r0, r4
 80206a0:	f7f5 fb70 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80206a4:	f04f 0b00 	mov.w	fp, #0
 80206a8:	4602      	mov	r2, r0
 80206aa:	465d      	mov	r5, fp
 80206ac:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80206ae:	459b      	cmp	fp, r3
 80206b0:	d012      	beq.n	80206d8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x78>
 80206b2:	f859 102b 	ldr.w	r1, [r9, fp, lsl #2]
 80206b6:	6809      	ldr	r1, [r1, #0]
 80206b8:	4291      	cmp	r1, r2
 80206ba:	d105      	bne.n	80206c8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x68>
 80206bc:	f846 b025 	str.w	fp, [r6, r5, lsl #2]
 80206c0:	3501      	adds	r5, #1
 80206c2:	f10b 0b01 	add.w	fp, fp, #1
 80206c6:	e7f1      	b.n	80206ac <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x4c>
 80206c8:	4650      	mov	r0, sl
 80206ca:	607a      	str	r2, [r7, #4]
 80206cc:	f7f5 fb54 	bl	8015d78 <_ZNKSt21__ctype_abstract_baseIwE7toupperEw>
 80206d0:	687a      	ldr	r2, [r7, #4]
 80206d2:	4290      	cmp	r0, r2
 80206d4:	d1f5      	bne.n	80206c2 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x62>
 80206d6:	e7f1      	b.n	80206bc <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x5c>
 80206d8:	f04f 0a00 	mov.w	sl, #0
 80206dc:	2d01      	cmp	r5, #1
 80206de:	d940      	bls.n	8020762 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x102>
 80206e0:	6833      	ldr	r3, [r6, #0]
 80206e2:	f859 0023 	ldr.w	r0, [r9, r3, lsl #2]
 80206e6:	f009 fead 	bl	802a444 <wcslen>
 80206ea:	2201      	movs	r2, #1
 80206ec:	4683      	mov	fp, r0
 80206ee:	f856 1022 	ldr.w	r1, [r6, r2, lsl #2]
 80206f2:	607a      	str	r2, [r7, #4]
 80206f4:	f859 0021 	ldr.w	r0, [r9, r1, lsl #2]
 80206f8:	f009 fea4 	bl	802a444 <wcslen>
 80206fc:	687a      	ldr	r2, [r7, #4]
 80206fe:	4583      	cmp	fp, r0
 8020700:	f102 0201 	add.w	r2, r2, #1
 8020704:	bf28      	it	cs
 8020706:	4683      	movcs	fp, r0
 8020708:	4295      	cmp	r5, r2
 802070a:	d1f0      	bne.n	80206ee <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x8e>
 802070c:	4620      	mov	r0, r4
 802070e:	f10a 0a01 	add.w	sl, sl, #1
 8020712:	f7fe fdf7 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 8020716:	45da      	cmp	sl, fp
 8020718:	d241      	bcs.n	802079e <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x13e>
 802071a:	f107 0138 	add.w	r1, r7, #56	; 0x38
 802071e:	4620      	mov	r0, r4
 8020720:	f7f5 fb52 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8020724:	2800      	cmp	r0, #0
 8020726:	d03a      	beq.n	802079e <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x13e>
 8020728:	ea4f 028a 	mov.w	r2, sl, lsl #2
 802072c:	f04f 0b00 	mov.w	fp, #0
 8020730:	f856 102b 	ldr.w	r1, [r6, fp, lsl #2]
 8020734:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8020738:	5889      	ldr	r1, [r1, r2]
 802073a:	4620      	mov	r0, r4
 802073c:	e9c7 2100 	strd	r2, r1, [r7]
 8020740:	f7f5 fb20 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020744:	6879      	ldr	r1, [r7, #4]
 8020746:	683a      	ldr	r2, [r7, #0]
 8020748:	4281      	cmp	r1, r0
 802074a:	bf17      	itett	ne
 802074c:	f105 35ff 	addne.w	r5, r5, #4294967295	; 0xffffffff
 8020750:	f10b 0b01 	addeq.w	fp, fp, #1
 8020754:	f856 1025 	ldrne.w	r1, [r6, r5, lsl #2]
 8020758:	f846 102b 	strne.w	r1, [r6, fp, lsl #2]
 802075c:	455d      	cmp	r5, fp
 802075e:	d8e7      	bhi.n	8020730 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xd0>
 8020760:	e7bc      	b.n	80206dc <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x7c>
 8020762:	d11c      	bne.n	802079e <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x13e>
 8020764:	4620      	mov	r0, r4
 8020766:	f7fe fdcd 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 802076a:	6836      	ldr	r6, [r6, #0]
 802076c:	f859 9026 	ldr.w	r9, [r9, r6, lsl #2]
 8020770:	4648      	mov	r0, r9
 8020772:	f009 fe67 	bl	802a444 <wcslen>
 8020776:	f10a 0a01 	add.w	sl, sl, #1
 802077a:	4605      	mov	r5, r0
 802077c:	45aa      	cmp	sl, r5
 802077e:	d21d      	bcs.n	80207bc <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x15c>
 8020780:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8020784:	4620      	mov	r0, r4
 8020786:	f7f5 fb1f 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 802078a:	b140      	cbz	r0, 802079e <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x13e>
 802078c:	f859 302a 	ldr.w	r3, [r9, sl, lsl #2]
 8020790:	607b      	str	r3, [r7, #4]
 8020792:	4620      	mov	r0, r4
 8020794:	f7f5 faf6 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020798:	687b      	ldr	r3, [r7, #4]
 802079a:	4283      	cmp	r3, r0
 802079c:	d012      	beq.n	80207c4 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x164>
 802079e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80207a0:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 80207a2:	681b      	ldr	r3, [r3, #0]
 80207a4:	f043 0304 	orr.w	r3, r3, #4
 80207a8:	6013      	str	r3, [r2, #0]
 80207aa:	e894 0003 	ldmia.w	r4, {r0, r1}
 80207ae:	3714      	adds	r7, #20
 80207b0:	e888 0003 	stmia.w	r8, {r0, r1}
 80207b4:	4640      	mov	r0, r8
 80207b6:	46bd      	mov	sp, r7
 80207b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80207bc:	d1ef      	bne.n	802079e <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x13e>
 80207be:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80207c0:	601e      	str	r6, [r3, #0]
 80207c2:	e7f2      	b.n	80207aa <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x14a>
 80207c4:	4620      	mov	r0, r4
 80207c6:	f7fe fd9d 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 80207ca:	f10a 0a01 	add.w	sl, sl, #1
 80207ce:	e7d5      	b.n	802077c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x11c>

080207d0 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>:
 80207d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207d4:	b085      	sub	sp, #20
 80207d6:	af00      	add	r7, sp, #0
 80207d8:	4680      	mov	r8, r0
 80207da:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80207dc:	f8d7 a044 	ldr.w	sl, [r7, #68]	; 0x44
 80207e0:	f107 0908 	add.w	r9, r7, #8
 80207e4:	306c      	adds	r0, #108	; 0x6c
 80207e6:	e889 000c 	stmia.w	r9, {r2, r3}
 80207ea:	f7fe f939 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 80207ee:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80207f0:	466a      	mov	r2, sp
 80207f2:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 80207f6:	4683      	mov	fp, r0
 80207f8:	469d      	mov	sp, r3
 80207fa:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80207fe:	4648      	mov	r0, r9
 8020800:	466c      	mov	r4, sp
 8020802:	f7f5 fae1 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8020806:	b3b0      	cbz	r0, 8020876 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xa6>
 8020808:	4648      	mov	r0, r9
 802080a:	f7f5 fabb 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 802080e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8020810:	2600      	movs	r6, #0
 8020812:	4603      	mov	r3, r0
 8020814:	0052      	lsls	r2, r2, #1
 8020816:	4635      	mov	r5, r6
 8020818:	42b2      	cmp	r2, r6
 802081a:	d013      	beq.n	8020844 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x74>
 802081c:	f85a 1026 	ldr.w	r1, [sl, r6, lsl #2]
 8020820:	6809      	ldr	r1, [r1, #0]
 8020822:	4299      	cmp	r1, r3
 8020824:	d104      	bne.n	8020830 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x60>
 8020826:	f844 6025 	str.w	r6, [r4, r5, lsl #2]
 802082a:	3501      	adds	r5, #1
 802082c:	3601      	adds	r6, #1
 802082e:	e7f3      	b.n	8020818 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x48>
 8020830:	4658      	mov	r0, fp
 8020832:	e9c7 3200 	strd	r3, r2, [r7]
 8020836:	f7f5 fa9f 	bl	8015d78 <_ZNKSt21__ctype_abstract_baseIwE7toupperEw>
 802083a:	683b      	ldr	r3, [r7, #0]
 802083c:	687a      	ldr	r2, [r7, #4]
 802083e:	4298      	cmp	r0, r3
 8020840:	d1f4      	bne.n	802082c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x5c>
 8020842:	e7f0      	b.n	8020826 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x56>
 8020844:	b1bd      	cbz	r5, 8020876 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xa6>
 8020846:	4648      	mov	r0, r9
 8020848:	f7fe fd5c 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 802084c:	00ab      	lsls	r3, r5, #2
 802084e:	3307      	adds	r3, #7
 8020850:	f023 0307 	bic.w	r3, r3, #7
 8020854:	ebad 0d03 	sub.w	sp, sp, r3
 8020858:	46e9      	mov	r9, sp
 802085a:	2600      	movs	r6, #0
 802085c:	f854 3026 	ldr.w	r3, [r4, r6, lsl #2]
 8020860:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8020864:	f009 fdee 	bl	802a444 <wcslen>
 8020868:	f849 0026 	str.w	r0, [r9, r6, lsl #2]
 802086c:	3601      	adds	r6, #1
 802086e:	42b5      	cmp	r5, r6
 8020870:	d1f4      	bne.n	802085c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x8c>
 8020872:	2501      	movs	r5, #1
 8020874:	e002      	b.n	802087c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xac>
 8020876:	2600      	movs	r6, #0
 8020878:	4635      	mov	r5, r6
 802087a:	46b1      	mov	r9, r6
 802087c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8020880:	f107 0008 	add.w	r0, r7, #8
 8020884:	f7f5 faa0 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8020888:	b370      	cbz	r0, 80208e8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x118>
 802088a:	f107 0008 	add.w	r0, r7, #8
 802088e:	f7f5 fa79 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020892:	2300      	movs	r3, #0
 8020894:	4683      	mov	fp, r0
 8020896:	ea4f 0e85 	mov.w	lr, r5, lsl #2
 802089a:	4619      	mov	r1, r3
 802089c:	429e      	cmp	r6, r3
 802089e:	d91b      	bls.n	80208d8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x108>
 80208a0:	f859 2023 	ldr.w	r2, [r9, r3, lsl #2]
 80208a4:	42aa      	cmp	r2, r5
 80208a6:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 80208aa:	eb09 0083 	add.w	r0, r9, r3, lsl #2
 80208ae:	d802      	bhi.n	80208b6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xe6>
 80208b0:	3101      	adds	r1, #1
 80208b2:	3301      	adds	r3, #1
 80208b4:	e7f2      	b.n	802089c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xcc>
 80208b6:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
 80208ba:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 80208be:	f852 200e 	ldr.w	r2, [r2, lr]
 80208c2:	455a      	cmp	r2, fp
 80208c4:	d0f5      	beq.n	80208b2 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xe2>
 80208c6:	3e01      	subs	r6, #1
 80208c8:	f854 2026 	ldr.w	r2, [r4, r6, lsl #2]
 80208cc:	f844 200c 	str.w	r2, [r4, ip]
 80208d0:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 80208d4:	6002      	str	r2, [r0, #0]
 80208d6:	e7e1      	b.n	802089c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xcc>
 80208d8:	428e      	cmp	r6, r1
 80208da:	d005      	beq.n	80208e8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x118>
 80208dc:	f107 0008 	add.w	r0, r7, #8
 80208e0:	f7fe fd10 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 80208e4:	3501      	adds	r5, #1
 80208e6:	e7c9      	b.n	802087c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0xac>
 80208e8:	2e01      	cmp	r6, #1
 80208ea:	d115      	bne.n	8020918 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x148>
 80208ec:	f8d9 3000 	ldr.w	r3, [r9]
 80208f0:	42ab      	cmp	r3, r5
 80208f2:	d11a      	bne.n	802092a <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x15a>
 80208f4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80208f6:	6823      	ldr	r3, [r4, #0]
 80208f8:	4293      	cmp	r3, r2
 80208fa:	bfa8      	it	ge
 80208fc:	1a9b      	subge	r3, r3, r2
 80208fe:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8020900:	6013      	str	r3, [r2, #0]
 8020902:	f107 0310 	add.w	r3, r7, #16
 8020906:	e913 0003 	ldmdb	r3, {r0, r1}
 802090a:	3714      	adds	r7, #20
 802090c:	e888 0003 	stmia.w	r8, {r0, r1}
 8020910:	4640      	mov	r0, r8
 8020912:	46bd      	mov	sp, r7
 8020914:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020918:	2e02      	cmp	r6, #2
 802091a:	d106      	bne.n	802092a <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x15a>
 802091c:	f8d9 3000 	ldr.w	r3, [r9]
 8020920:	42ab      	cmp	r3, r5
 8020922:	d0e7      	beq.n	80208f4 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x124>
 8020924:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8020928:	e7e2      	b.n	80208f0 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x120>
 802092a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 802092c:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 802092e:	681b      	ldr	r3, [r3, #0]
 8020930:	f043 0304 	orr.w	r3, r3, #4
 8020934:	e7e4      	b.n	8020900 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate+0x130>
	...

08020938 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw>:
 8020938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802093c:	b09f      	sub	sp, #124	; 0x7c
 802093e:	460c      	mov	r4, r1
 8020940:	f8dd a0a8 	ldr.w	sl, [sp, #168]	; 0xa8
 8020944:	900b      	str	r0, [sp, #44]	; 0x2c
 8020946:	f10a 056c 	add.w	r5, sl, #108	; 0x6c
 802094a:	a90e      	add	r1, sp, #56	; 0x38
 802094c:	4628      	mov	r0, r5
 802094e:	e881 000c 	stmia.w	r1, {r2, r3}
 8020952:	f8dd 80b0 	ldr.w	r8, [sp, #176]	; 0xb0
 8020956:	f7fe f937 	bl	801ebc8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale>
 802095a:	4683      	mov	fp, r0
 802095c:	4628      	mov	r0, r5
 802095e:	f7fe f87f 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8020962:	4605      	mov	r5, r0
 8020964:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8020966:	f009 fd6d 	bl	802a444 <wcslen>
 802096a:	2600      	movs	r6, #0
 802096c:	900a      	str	r0, [sp, #40]	; 0x28
 802096e:	9610      	str	r6, [sp, #64]	; 0x40
 8020970:	a928      	add	r1, sp, #160	; 0xa0
 8020972:	a80e      	add	r0, sp, #56	; 0x38
 8020974:	f7f5 fa28 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8020978:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
 802097c:	2800      	cmp	r0, #0
 802097e:	d065      	beq.n	8020a4c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x114>
 8020980:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020982:	429e      	cmp	r6, r3
 8020984:	d262      	bcs.n	8020a4c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x114>
 8020986:	f1b9 0f00 	cmp.w	r9, #0
 802098a:	d163      	bne.n	8020a54 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x11c>
 802098c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 802098e:	464a      	mov	r2, r9
 8020990:	f853 1026 	ldr.w	r1, [r3, r6, lsl #2]
 8020994:	4628      	mov	r0, r5
 8020996:	eb03 0786 	add.w	r7, r3, r6, lsl #2
 802099a:	f7f5 f9ea 	bl	8015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>
 802099e:	2825      	cmp	r0, #37	; 0x25
 80209a0:	f040 82a5 	bne.w	8020eee <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5b6>
 80209a4:	1c73      	adds	r3, r6, #1
 80209a6:	6879      	ldr	r1, [r7, #4]
 80209a8:	9309      	str	r3, [sp, #36]	; 0x24
 80209aa:	464a      	mov	r2, r9
 80209ac:	4628      	mov	r0, r5
 80209ae:	f7f5 f9e0 	bl	8015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>
 80209b2:	2845      	cmp	r0, #69	; 0x45
 80209b4:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
 80209b8:	d001      	beq.n	80209be <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x86>
 80209ba:	284f      	cmp	r0, #79	; 0x4f
 80209bc:	d106      	bne.n	80209cc <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x94>
 80209be:	1cb3      	adds	r3, r6, #2
 80209c0:	68b9      	ldr	r1, [r7, #8]
 80209c2:	9309      	str	r3, [sp, #36]	; 0x24
 80209c4:	2200      	movs	r2, #0
 80209c6:	4628      	mov	r0, r5
 80209c8:	f7f5 f9d3 	bl	8015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>
 80209cc:	3841      	subs	r0, #65	; 0x41
 80209ce:	ae0e      	add	r6, sp, #56	; 0x38
 80209d0:	2838      	cmp	r0, #56	; 0x38
 80209d2:	f200 8287 	bhi.w	8020ee4 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5ac>
 80209d6:	e8df f010 	tbh	[pc, r0, lsl #1]
 80209da:	006a      	.short	0x006a
 80209dc:	01d80095 	.word	0x01d80095
 80209e0:	028500f0 	.word	0x028500f0
 80209e4:	02850285 	.word	0x02850285
 80209e8:	011a00f6 	.word	0x011a00f6
 80209ec:	02850285 	.word	0x02850285
 80209f0:	01490285 	.word	0x01490285
 80209f4:	02850285 	.word	0x02850285
 80209f8:	02850285 	.word	0x02850285
 80209fc:	019c017d 	.word	0x019c017d
 8020a00:	028501ca 	.word	0x028501ca
 8020a04:	02850285 	.word	0x02850285
 8020a08:	01d801d3 	.word	0x01d801d3
 8020a0c:	02850202 	.word	0x02850202
 8020a10:	02850285 	.word	0x02850285
 8020a14:	02850285 	.word	0x02850285
 8020a18:	00440285 	.word	0x00440285
 8020a1c:	009b0070 	.word	0x009b0070
 8020a20:	00c600a3 	.word	0x00c600a3
 8020a24:	02850285 	.word	0x02850285
 8020a28:	02850070 	.word	0x02850070
 8020a2c:	02850285 	.word	0x02850285
 8020a30:	01250285 	.word	0x01250285
 8020a34:	0285016e 	.word	0x0285016e
 8020a38:	02850285 	.word	0x02850285
 8020a3c:	02850285 	.word	0x02850285
 8020a40:	028501c0 	.word	0x028501c0
 8020a44:	02850285 	.word	0x02850285
 8020a48:	01d801ce 	.word	0x01d801ce
 8020a4c:	f1b9 0f00 	cmp.w	r9, #0
 8020a50:	f000 825e 	beq.w	8020f10 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5d8>
 8020a54:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020a56:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8020a58:	681b      	ldr	r3, [r3, #0]
 8020a5a:	f043 0304 	orr.w	r3, r3, #4
 8020a5e:	6013      	str	r3, [r2, #0]
 8020a60:	e25a      	b.n	8020f18 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5e0>
 8020a62:	ae12      	add	r6, sp, #72	; 0x48
 8020a64:	4631      	mov	r1, r6
 8020a66:	4658      	mov	r0, fp
 8020a68:	f7fd fee6 	bl	801e838 <_ZNKSt11__timepunctIwE19_M_days_abbreviatedEPPKw>
 8020a6c:	ab10      	add	r3, sp, #64	; 0x40
 8020a6e:	e9cd a305 	strd	sl, r3, [sp, #20]
 8020a72:	2307      	movs	r3, #7
 8020a74:	e9cd 6303 	strd	r6, r3, [sp, #12]
 8020a78:	ab11      	add	r3, sp, #68	; 0x44
 8020a7a:	9302      	str	r3, [sp, #8]
 8020a7c:	ab28      	add	r3, sp, #160	; 0xa0
 8020a7e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020a82:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020a86:	af0c      	add	r7, sp, #48	; 0x30
 8020a88:	ae0e      	add	r6, sp, #56	; 0x38
 8020a8a:	e896 000c 	ldmia.w	r6, {r2, r3}
 8020a8e:	4621      	mov	r1, r4
 8020a90:	4638      	mov	r0, r7
 8020a92:	f7ff fde5 	bl	8020660 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>
 8020a96:	e897 0003 	ldmia.w	r7, {r0, r1}
 8020a9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020a9c:	e886 0003 	stmia.w	r6, {r0, r1}
 8020aa0:	b913      	cbnz	r3, 8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020aa2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020aa4:	f8c8 3018 	str.w	r3, [r8, #24]
 8020aa8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8020aaa:	3601      	adds	r6, #1
 8020aac:	e760      	b.n	8020970 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x38>
 8020aae:	ae12      	add	r6, sp, #72	; 0x48
 8020ab0:	4631      	mov	r1, r6
 8020ab2:	4658      	mov	r0, fp
 8020ab4:	f7fd feb0 	bl	801e818 <_ZNKSt11__timepunctIwE7_M_daysEPPKw>
 8020ab8:	e7d8      	b.n	8020a6c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x134>
 8020aba:	ae12      	add	r6, sp, #72	; 0x48
 8020abc:	4631      	mov	r1, r6
 8020abe:	4658      	mov	r0, fp
 8020ac0:	f7fd fee9 	bl	801e896 <_ZNKSt11__timepunctIwE21_M_months_abbreviatedEPPKw>
 8020ac4:	ab10      	add	r3, sp, #64	; 0x40
 8020ac6:	e9cd a305 	strd	sl, r3, [sp, #20]
 8020aca:	230c      	movs	r3, #12
 8020acc:	e9cd 6303 	strd	r6, r3, [sp, #12]
 8020ad0:	ab11      	add	r3, sp, #68	; 0x44
 8020ad2:	9302      	str	r3, [sp, #8]
 8020ad4:	ab28      	add	r3, sp, #160	; 0xa0
 8020ad6:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020ada:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020ade:	af0c      	add	r7, sp, #48	; 0x30
 8020ae0:	ae0e      	add	r6, sp, #56	; 0x38
 8020ae2:	e896 000c 	ldmia.w	r6, {r2, r3}
 8020ae6:	4621      	mov	r1, r4
 8020ae8:	4638      	mov	r0, r7
 8020aea:	f7ff fdb9 	bl	8020660 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>
 8020aee:	e897 0003 	ldmia.w	r7, {r0, r1}
 8020af2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020af4:	e886 0003 	stmia.w	r6, {r0, r1}
 8020af8:	2b00      	cmp	r3, #0
 8020afa:	d1d5      	bne.n	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020afc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020afe:	f8c8 3010 	str.w	r3, [r8, #16]
 8020b02:	e7d1      	b.n	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020b04:	ae12      	add	r6, sp, #72	; 0x48
 8020b06:	4631      	mov	r1, r6
 8020b08:	4658      	mov	r0, fp
 8020b0a:	f7fd fea5 	bl	801e858 <_ZNKSt11__timepunctIwE9_M_monthsEPPKw>
 8020b0e:	e7d9      	b.n	8020ac4 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x18c>
 8020b10:	a912      	add	r1, sp, #72	; 0x48
 8020b12:	4658      	mov	r0, fp
 8020b14:	f7fd fe7a 	bl	801e80c <_ZNKSt11__timepunctIwE20_M_date_time_formatsEPPKw>
 8020b18:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020b1a:	9305      	str	r3, [sp, #20]
 8020b1c:	af0c      	add	r7, sp, #48	; 0x30
 8020b1e:	e0e2      	b.n	8020ce6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x3ae>
 8020b20:	ab10      	add	r3, sp, #64	; 0x40
 8020b22:	e9cd a306 	strd	sl, r3, [sp, #24]
 8020b26:	2002      	movs	r0, #2
 8020b28:	231f      	movs	r3, #31
 8020b2a:	e9cd 3004 	strd	r3, r0, [sp, #16]
 8020b2e:	2301      	movs	r3, #1
 8020b30:	9303      	str	r3, [sp, #12]
 8020b32:	ab11      	add	r3, sp, #68	; 0x44
 8020b34:	9302      	str	r3, [sp, #8]
 8020b36:	ab28      	add	r3, sp, #160	; 0xa0
 8020b38:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020b3c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020b40:	af0c      	add	r7, sp, #48	; 0x30
 8020b42:	ae0e      	add	r6, sp, #56	; 0x38
 8020b44:	e896 000c 	ldmia.w	r6, {r2, r3}
 8020b48:	4621      	mov	r1, r4
 8020b4a:	4638      	mov	r0, r7
 8020b4c:	f7ff fd2b 	bl	80205a6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8020b50:	e897 0003 	ldmia.w	r7, {r0, r1}
 8020b54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020b56:	e886 0003 	stmia.w	r6, {r0, r1}
 8020b5a:	2b00      	cmp	r3, #0
 8020b5c:	d1a4      	bne.n	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020b5e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020b60:	f8c8 300c 	str.w	r3, [r8, #12]
 8020b64:	e7a0      	b.n	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020b66:	4630      	mov	r0, r6
 8020b68:	f7f5 f90c 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020b6c:	2108      	movs	r1, #8
 8020b6e:	4602      	mov	r2, r0
 8020b70:	4628      	mov	r0, r5
 8020b72:	f7f4 fe0a 	bl	801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>
 8020b76:	b1b0      	cbz	r0, 8020ba6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x26e>
 8020b78:	980e      	ldr	r0, [sp, #56]	; 0x38
 8020b7a:	f7fd fc97 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8020b7e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8020b82:	930f      	str	r3, [sp, #60]	; 0x3c
 8020b84:	ab10      	add	r3, sp, #64	; 0x40
 8020b86:	e9cd a306 	strd	sl, r3, [sp, #24]
 8020b8a:	2209      	movs	r2, #9
 8020b8c:	2301      	movs	r3, #1
 8020b8e:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8020b92:	af0c      	add	r7, sp, #48	; 0x30
 8020b94:	9303      	str	r3, [sp, #12]
 8020b96:	ab11      	add	r3, sp, #68	; 0x44
 8020b98:	9302      	str	r3, [sp, #8]
 8020b9a:	ab28      	add	r3, sp, #160	; 0xa0
 8020b9c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020ba0:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020ba4:	e7ce      	b.n	8020b44 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x20c>
 8020ba6:	ab10      	add	r3, sp, #64	; 0x40
 8020ba8:	e9cd a306 	strd	sl, r3, [sp, #24]
 8020bac:	2102      	movs	r1, #2
 8020bae:	231f      	movs	r3, #31
 8020bb0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020bb4:	af0c      	add	r7, sp, #48	; 0x30
 8020bb6:	230a      	movs	r3, #10
 8020bb8:	e7ec      	b.n	8020b94 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x25c>
 8020bba:	ae12      	add	r6, sp, #72	; 0x48
 8020bbc:	4ac5      	ldr	r2, [pc, #788]	; (8020ed4 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x59c>)
 8020bbe:	4633      	mov	r3, r6
 8020bc0:	f1a2 0109 	sub.w	r1, r2, #9
 8020bc4:	e08a      	b.n	8020cdc <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x3a4>
 8020bc6:	ab10      	add	r3, sp, #64	; 0x40
 8020bc8:	e9cd a306 	strd	sl, r3, [sp, #24]
 8020bcc:	2202      	movs	r2, #2
 8020bce:	2317      	movs	r3, #23
 8020bd0:	e9cd 3204 	strd	r3, r2, [sp, #16]
 8020bd4:	af0c      	add	r7, sp, #48	; 0x30
 8020bd6:	2300      	movs	r3, #0
 8020bd8:	9303      	str	r3, [sp, #12]
 8020bda:	ab11      	add	r3, sp, #68	; 0x44
 8020bdc:	9302      	str	r3, [sp, #8]
 8020bde:	ab28      	add	r3, sp, #160	; 0xa0
 8020be0:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020be4:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020be8:	ae0e      	add	r6, sp, #56	; 0x38
 8020bea:	e896 000c 	ldmia.w	r6, {r2, r3}
 8020bee:	4621      	mov	r1, r4
 8020bf0:	4638      	mov	r0, r7
 8020bf2:	f7ff fcd8 	bl	80205a6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8020bf6:	e897 0003 	ldmia.w	r7, {r0, r1}
 8020bfa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020bfc:	e886 0003 	stmia.w	r6, {r0, r1}
 8020c00:	2b00      	cmp	r3, #0
 8020c02:	f47f af51 	bne.w	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020c06:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020c08:	f8c8 3008 	str.w	r3, [r8, #8]
 8020c0c:	e74c      	b.n	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020c0e:	ab10      	add	r3, sp, #64	; 0x40
 8020c10:	e9cd a306 	strd	sl, r3, [sp, #24]
 8020c14:	f04f 0902 	mov.w	r9, #2
 8020c18:	230c      	movs	r3, #12
 8020c1a:	e9cd 3904 	strd	r3, r9, [sp, #16]
 8020c1e:	af0c      	add	r7, sp, #48	; 0x30
 8020c20:	2301      	movs	r3, #1
 8020c22:	e7d9      	b.n	8020bd8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x2a0>
 8020c24:	ab10      	add	r3, sp, #64	; 0x40
 8020c26:	e9cd a306 	strd	sl, r3, [sp, #24]
 8020c2a:	f04f 0e02 	mov.w	lr, #2
 8020c2e:	230c      	movs	r3, #12
 8020c30:	e9cd 3e04 	strd	r3, lr, [sp, #16]
 8020c34:	2301      	movs	r3, #1
 8020c36:	9303      	str	r3, [sp, #12]
 8020c38:	ab11      	add	r3, sp, #68	; 0x44
 8020c3a:	9302      	str	r3, [sp, #8]
 8020c3c:	ab28      	add	r3, sp, #160	; 0xa0
 8020c3e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020c42:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020c46:	af0c      	add	r7, sp, #48	; 0x30
 8020c48:	ae0e      	add	r6, sp, #56	; 0x38
 8020c4a:	e896 000c 	ldmia.w	r6, {r2, r3}
 8020c4e:	4621      	mov	r1, r4
 8020c50:	4638      	mov	r0, r7
 8020c52:	f7ff fca8 	bl	80205a6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8020c56:	e897 0003 	ldmia.w	r7, {r0, r1}
 8020c5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020c5c:	e886 0003 	stmia.w	r6, {r0, r1}
 8020c60:	2b00      	cmp	r3, #0
 8020c62:	f47f af21 	bne.w	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020c66:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020c68:	3b01      	subs	r3, #1
 8020c6a:	e748      	b.n	8020afe <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x1c6>
 8020c6c:	ab10      	add	r3, sp, #64	; 0x40
 8020c6e:	e9cd a306 	strd	sl, r3, [sp, #24]
 8020c72:	f04f 0c02 	mov.w	ip, #2
 8020c76:	233b      	movs	r3, #59	; 0x3b
 8020c78:	e9cd 3c04 	strd	r3, ip, [sp, #16]
 8020c7c:	2300      	movs	r3, #0
 8020c7e:	9303      	str	r3, [sp, #12]
 8020c80:	ab11      	add	r3, sp, #68	; 0x44
 8020c82:	9302      	str	r3, [sp, #8]
 8020c84:	ab28      	add	r3, sp, #160	; 0xa0
 8020c86:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020c8a:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020c8e:	af0c      	add	r7, sp, #48	; 0x30
 8020c90:	ae0e      	add	r6, sp, #56	; 0x38
 8020c92:	e896 000c 	ldmia.w	r6, {r2, r3}
 8020c96:	4621      	mov	r1, r4
 8020c98:	4638      	mov	r0, r7
 8020c9a:	f7ff fc84 	bl	80205a6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8020c9e:	e897 0003 	ldmia.w	r7, {r0, r1}
 8020ca2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020ca4:	e886 0003 	stmia.w	r6, {r0, r1}
 8020ca8:	2b00      	cmp	r3, #0
 8020caa:	f47f aefd 	bne.w	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020cae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020cb0:	f8c8 3004 	str.w	r3, [r8, #4]
 8020cb4:	e6f8      	b.n	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020cb6:	4630      	mov	r0, r6
 8020cb8:	f7f5 f864 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020cbc:	2200      	movs	r2, #0
 8020cbe:	4601      	mov	r1, r0
 8020cc0:	4628      	mov	r0, r5
 8020cc2:	f7f5 f856 	bl	8015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>
 8020cc6:	280a      	cmp	r0, #10
 8020cc8:	f040 810c 	bne.w	8020ee4 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5ac>
 8020ccc:	4630      	mov	r0, r6
 8020cce:	f7fe fb19 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 8020cd2:	e6e9      	b.n	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020cd4:	4a80      	ldr	r2, [pc, #512]	; (8020ed8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5a0>)
 8020cd6:	ae12      	add	r6, sp, #72	; 0x48
 8020cd8:	4633      	mov	r3, r6
 8020cda:	1f91      	subs	r1, r2, #6
 8020cdc:	4628      	mov	r0, r5
 8020cde:	f7f4 fd4d 	bl	801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>
 8020ce2:	af0c      	add	r7, sp, #48	; 0x30
 8020ce4:	9605      	str	r6, [sp, #20]
 8020ce6:	ab10      	add	r3, sp, #64	; 0x40
 8020ce8:	e9cd a302 	strd	sl, r3, [sp, #8]
 8020cec:	f8cd 8010 	str.w	r8, [sp, #16]
 8020cf0:	ab28      	add	r3, sp, #160	; 0xa0
 8020cf2:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020cf6:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020cfa:	ae0e      	add	r6, sp, #56	; 0x38
 8020cfc:	4621      	mov	r1, r4
 8020cfe:	4638      	mov	r0, r7
 8020d00:	e896 000c 	ldmia.w	r6, {r2, r3}
 8020d04:	f7ff fe18 	bl	8020938 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw>
 8020d08:	e897 0003 	ldmia.w	r7, {r0, r1}
 8020d0c:	e886 0003 	stmia.w	r6, {r0, r1}
 8020d10:	e6ca      	b.n	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020d12:	ab10      	add	r3, sp, #64	; 0x40
 8020d14:	e9cd a306 	strd	sl, r3, [sp, #24]
 8020d18:	2602      	movs	r6, #2
 8020d1a:	233d      	movs	r3, #61	; 0x3d
 8020d1c:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8020d20:	2300      	movs	r3, #0
 8020d22:	9303      	str	r3, [sp, #12]
 8020d24:	ab11      	add	r3, sp, #68	; 0x44
 8020d26:	9302      	str	r3, [sp, #8]
 8020d28:	ab28      	add	r3, sp, #160	; 0xa0
 8020d2a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020d2e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020d32:	af0c      	add	r7, sp, #48	; 0x30
 8020d34:	ae0e      	add	r6, sp, #56	; 0x38
 8020d36:	e896 000c 	ldmia.w	r6, {r2, r3}
 8020d3a:	4621      	mov	r1, r4
 8020d3c:	4638      	mov	r0, r7
 8020d3e:	f7ff fc32 	bl	80205a6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8020d42:	e897 0003 	ldmia.w	r7, {r0, r1}
 8020d46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020d48:	e886 0003 	stmia.w	r6, {r0, r1}
 8020d4c:	2b00      	cmp	r3, #0
 8020d4e:	f47f aeab 	bne.w	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020d52:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020d54:	f8c8 3000 	str.w	r3, [r8]
 8020d58:	e6a6      	b.n	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020d5a:	4630      	mov	r0, r6
 8020d5c:	f7f5 f812 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020d60:	2200      	movs	r2, #0
 8020d62:	4601      	mov	r1, r0
 8020d64:	4628      	mov	r0, r5
 8020d66:	f7f5 f804 	bl	8015d72 <_ZNKSt21__ctype_abstract_baseIwE6narrowEwc>
 8020d6a:	2809      	cmp	r0, #9
 8020d6c:	e7ac      	b.n	8020cc8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x390>
 8020d6e:	ae12      	add	r6, sp, #72	; 0x48
 8020d70:	4a5a      	ldr	r2, [pc, #360]	; (8020edc <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5a4>)
 8020d72:	4633      	mov	r3, r6
 8020d74:	e724      	b.n	8020bc0 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x288>
 8020d76:	a912      	add	r1, sp, #72	; 0x48
 8020d78:	4658      	mov	r0, fp
 8020d7a:	f7fd fd3b 	bl	801e7f4 <_ZNKSt11__timepunctIwE15_M_date_formatsEPPKw>
 8020d7e:	e6cb      	b.n	8020b18 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x1e0>
 8020d80:	a912      	add	r1, sp, #72	; 0x48
 8020d82:	4658      	mov	r0, fp
 8020d84:	f7fd fd3c 	bl	801e800 <_ZNKSt11__timepunctIwE15_M_time_formatsEPPKw>
 8020d88:	e6c6      	b.n	8020b18 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x1e0>
 8020d8a:	ab10      	add	r3, sp, #64	; 0x40
 8020d8c:	e9cd a306 	strd	sl, r3, [sp, #24]
 8020d90:	2004      	movs	r0, #4
 8020d92:	f242 730f 	movw	r3, #9999	; 0x270f
 8020d96:	e9cd 3004 	strd	r3, r0, [sp, #16]
 8020d9a:	2300      	movs	r3, #0
 8020d9c:	9303      	str	r3, [sp, #12]
 8020d9e:	ab11      	add	r3, sp, #68	; 0x44
 8020da0:	9302      	str	r3, [sp, #8]
 8020da2:	ab28      	add	r3, sp, #160	; 0xa0
 8020da4:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020da8:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020dac:	af0c      	add	r7, sp, #48	; 0x30
 8020dae:	ae0e      	add	r6, sp, #56	; 0x38
 8020db0:	e896 000c 	ldmia.w	r6, {r2, r3}
 8020db4:	4621      	mov	r1, r4
 8020db6:	4638      	mov	r0, r7
 8020db8:	f7ff fbf5 	bl	80205a6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8020dbc:	e897 0003 	ldmia.w	r7, {r0, r1}
 8020dc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020dc2:	e886 0003 	stmia.w	r6, {r0, r1}
 8020dc6:	2b00      	cmp	r3, #0
 8020dc8:	f47f ae6e 	bne.w	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020dcc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020dce:	2b00      	cmp	r3, #0
 8020dd0:	bfb4      	ite	lt
 8020dd2:	3364      	addlt	r3, #100	; 0x64
 8020dd4:	f2a3 736c 	subwge	r3, r3, #1900	; 0x76c
 8020dd8:	f8c8 3014 	str.w	r3, [r8, #20]
 8020ddc:	e664      	b.n	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020dde:	4630      	mov	r0, r6
 8020de0:	f7f4 ffd0 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020de4:	2101      	movs	r1, #1
 8020de6:	4602      	mov	r2, r0
 8020de8:	4628      	mov	r0, r5
 8020dea:	f7f4 fcce 	bl	801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>
 8020dee:	2800      	cmp	r0, #0
 8020df0:	d078      	beq.n	8020ee4 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5ac>
 8020df2:	ab10      	add	r3, sp, #64	; 0x40
 8020df4:	e9cd a305 	strd	sl, r3, [sp, #20]
 8020df8:	230e      	movs	r3, #14
 8020dfa:	9304      	str	r3, [sp, #16]
 8020dfc:	4b38      	ldr	r3, [pc, #224]	; (8020ee0 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5a8>)
 8020dfe:	9303      	str	r3, [sp, #12]
 8020e00:	ab12      	add	r3, sp, #72	; 0x48
 8020e02:	9302      	str	r3, [sp, #8]
 8020e04:	ab28      	add	r3, sp, #160	; 0xa0
 8020e06:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020e0a:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020e0e:	af0c      	add	r7, sp, #48	; 0x30
 8020e10:	4621      	mov	r1, r4
 8020e12:	4638      	mov	r0, r7
 8020e14:	e896 000c 	ldmia.w	r6, {r2, r3}
 8020e18:	f7ff fc22 	bl	8020660 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>
 8020e1c:	e897 0003 	ldmia.w	r7, {r0, r1}
 8020e20:	e886 0003 	stmia.w	r6, {r0, r1}
 8020e24:	a928      	add	r1, sp, #160	; 0xa0
 8020e26:	4630      	mov	r0, r6
 8020e28:	f7f4 ffce 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8020e2c:	2800      	cmp	r0, #0
 8020e2e:	f43f ae3b 	beq.w	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020e32:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8020e34:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020e36:	4313      	orrs	r3, r2
 8020e38:	f47f ae36 	bne.w	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020e3c:	4630      	mov	r0, r6
 8020e3e:	f7f4 ffa1 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020e42:	212d      	movs	r1, #45	; 0x2d
 8020e44:	4607      	mov	r7, r0
 8020e46:	4628      	mov	r0, r5
 8020e48:	f7f4 ff99 	bl	8015d7e <_ZNKSt21__ctype_abstract_baseIwE5widenEc>
 8020e4c:	42b8      	cmp	r0, r7
 8020e4e:	d134      	bne.n	8020eba <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x582>
 8020e50:	af10      	add	r7, sp, #64	; 0x40
 8020e52:	2317      	movs	r3, #23
 8020e54:	2202      	movs	r2, #2
 8020e56:	e9cd 3204 	strd	r3, r2, [sp, #16]
 8020e5a:	e9cd a706 	strd	sl, r7, [sp, #24]
 8020e5e:	2300      	movs	r3, #0
 8020e60:	9303      	str	r3, [sp, #12]
 8020e62:	ab12      	add	r3, sp, #72	; 0x48
 8020e64:	9302      	str	r3, [sp, #8]
 8020e66:	ab28      	add	r3, sp, #160	; 0xa0
 8020e68:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020e6c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020e70:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8020e74:	ae0e      	add	r6, sp, #56	; 0x38
 8020e76:	e896 000c 	ldmia.w	r6, {r2, r3}
 8020e7a:	4621      	mov	r1, r4
 8020e7c:	4648      	mov	r0, r9
 8020e7e:	f7ff fb92 	bl	80205a6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8020e82:	e899 0003 	ldmia.w	r9, {r0, r1}
 8020e86:	233b      	movs	r3, #59	; 0x3b
 8020e88:	e886 0003 	stmia.w	r6, {r0, r1}
 8020e8c:	2102      	movs	r1, #2
 8020e8e:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020e92:	e9cd a706 	strd	sl, r7, [sp, #24]
 8020e96:	2300      	movs	r3, #0
 8020e98:	9303      	str	r3, [sp, #12]
 8020e9a:	ab12      	add	r3, sp, #72	; 0x48
 8020e9c:	9302      	str	r3, [sp, #8]
 8020e9e:	ab28      	add	r3, sp, #160	; 0xa0
 8020ea0:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020ea4:	e88d 0003 	stmia.w	sp, {r0, r1}
 8020ea8:	4621      	mov	r1, r4
 8020eaa:	4648      	mov	r0, r9
 8020eac:	e896 000c 	ldmia.w	r6, {r2, r3}
 8020eb0:	f7ff fb79 	bl	80205a6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8020eb4:	e899 0003 	ldmia.w	r9, {r0, r1}
 8020eb8:	e728      	b.n	8020d0c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x3d4>
 8020eba:	4630      	mov	r0, r6
 8020ebc:	f7f4 ff62 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020ec0:	212b      	movs	r1, #43	; 0x2b
 8020ec2:	4606      	mov	r6, r0
 8020ec4:	4628      	mov	r0, r5
 8020ec6:	f7f4 ff5a 	bl	8015d7e <_ZNKSt21__ctype_abstract_baseIwE5widenEc>
 8020eca:	42b0      	cmp	r0, r6
 8020ecc:	f47f adec 	bne.w	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020ed0:	e7be      	b.n	8020e50 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x518>
 8020ed2:	bf00      	nop
 8020ed4:	0802f801 	.word	0x0802f801
 8020ed8:	0802f807 	.word	0x0802f807
 8020edc:	0802f810 	.word	0x0802f810
 8020ee0:	20000078 	.word	0x20000078
 8020ee4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020ee6:	f043 0304 	orr.w	r3, r3, #4
 8020eea:	9310      	str	r3, [sp, #64]	; 0x40
 8020eec:	e5dc      	b.n	8020aa8 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x170>
 8020eee:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8020ef0:	a80e      	add	r0, sp, #56	; 0x38
 8020ef2:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
 8020ef6:	f7f4 ff45 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020efa:	4287      	cmp	r7, r0
 8020efc:	d103      	bne.n	8020f06 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x5ce>
 8020efe:	a80e      	add	r0, sp, #56	; 0x38
 8020f00:	f7fe fa00 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 8020f04:	e5d1      	b.n	8020aaa <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x172>
 8020f06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020f08:	f043 0304 	orr.w	r3, r3, #4
 8020f0c:	9310      	str	r3, [sp, #64]	; 0x40
 8020f0e:	e5cc      	b.n	8020aaa <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x172>
 8020f10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020f12:	429e      	cmp	r6, r3
 8020f14:	f47f ad9e 	bne.w	8020a54 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw+0x11c>
 8020f18:	ab0e      	add	r3, sp, #56	; 0x38
 8020f1a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020f1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020f20:	e883 0003 	stmia.w	r3, {r0, r1}
 8020f24:	4618      	mov	r0, r3
 8020f26:	b01f      	add	sp, #124	; 0x7c
 8020f28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020f2c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>:
 8020f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f30:	b08b      	sub	sp, #44	; 0x2c
 8020f32:	ae04      	add	r6, sp, #16
 8020f34:	9916      	ldr	r1, [sp, #88]	; 0x58
 8020f36:	9002      	str	r0, [sp, #8]
 8020f38:	316c      	adds	r1, #108	; 0x6c
 8020f3a:	a807      	add	r0, sp, #28
 8020f3c:	e886 000c 	stmia.w	r6, {r2, r3}
 8020f40:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8020f44:	f7fe fcda 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 8020f48:	2300      	movs	r3, #0
 8020f4a:	4604      	mov	r4, r0
 8020f4c:	a914      	add	r1, sp, #80	; 0x50
 8020f4e:	4630      	mov	r0, r6
 8020f50:	9308      	str	r3, [sp, #32]
 8020f52:	f7f4 ff26 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8020f56:	4681      	mov	r9, r0
 8020f58:	2800      	cmp	r0, #0
 8020f5a:	d151      	bne.n	8021000 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xd4>
 8020f5c:	4630      	mov	r0, r6
 8020f5e:	f7f4 ff11 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020f62:	f8d4 10c0 	ldr.w	r1, [r4, #192]	; 0xc0
 8020f66:	9008      	str	r0, [sp, #32]
 8020f68:	4281      	cmp	r1, r0
 8020f6a:	d003      	beq.n	8020f74 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x48>
 8020f6c:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8020f70:	4283      	cmp	r3, r0
 8020f72:	d11d      	bne.n	8020fb0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x84>
 8020f74:	7c23      	ldrb	r3, [r4, #16]
 8020f76:	b113      	cbz	r3, 8020f7e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x52>
 8020f78:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8020f7a:	4283      	cmp	r3, r0
 8020f7c:	d018      	beq.n	8020fb0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x84>
 8020f7e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8020f80:	4283      	cmp	r3, r0
 8020f82:	d015      	beq.n	8020fb0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x84>
 8020f84:	4281      	cmp	r1, r0
 8020f86:	bf0c      	ite	eq
 8020f88:	212b      	moveq	r1, #43	; 0x2b
 8020f8a:	212d      	movne	r1, #45	; 0x2d
 8020f8c:	4640      	mov	r0, r8
 8020f8e:	f7ef fa4e 	bl	801042e <_ZNSs9push_backEc>
 8020f92:	9804      	ldr	r0, [sp, #16]
 8020f94:	f7fd fa8a 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8020f98:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8020f9c:	a914      	add	r1, sp, #80	; 0x50
 8020f9e:	4630      	mov	r0, r6
 8020fa0:	9305      	str	r3, [sp, #20]
 8020fa2:	f7f4 ff11 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8020fa6:	b358      	cbz	r0, 8021000 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xd4>
 8020fa8:	4630      	mov	r0, r6
 8020faa:	f7f4 feeb 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020fae:	9008      	str	r0, [sp, #32]
 8020fb0:	2700      	movs	r7, #0
 8020fb2:	46bb      	mov	fp, r7
 8020fb4:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8020fb8:	7c22      	ldrb	r2, [r4, #16]
 8020fba:	9b08      	ldr	r3, [sp, #32]
 8020fbc:	b112      	cbz	r2, 8020fc4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x98>
 8020fbe:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8020fc0:	429a      	cmp	r2, r3
 8020fc2:	d022      	beq.n	802100a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xde>
 8020fc4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8020fc6:	429a      	cmp	r2, r3
 8020fc8:	d01f      	beq.n	802100a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xde>
 8020fca:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 8020fce:	429a      	cmp	r2, r3
 8020fd0:	d11b      	bne.n	802100a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xde>
 8020fd2:	b91f      	cbnz	r7, 8020fdc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xb0>
 8020fd4:	2130      	movs	r1, #48	; 0x30
 8020fd6:	4640      	mov	r0, r8
 8020fd8:	f7ef fa29 	bl	801042e <_ZNSs9push_backEc>
 8020fdc:	9804      	ldr	r0, [sp, #16]
 8020fde:	f7fd fa65 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8020fe2:	a914      	add	r1, sp, #80	; 0x50
 8020fe4:	4630      	mov	r0, r6
 8020fe6:	9505      	str	r5, [sp, #20]
 8020fe8:	f7f4 feee 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8020fec:	f10b 0b01 	add.w	fp, fp, #1
 8020ff0:	4607      	mov	r7, r0
 8020ff2:	2800      	cmp	r0, #0
 8020ff4:	d050      	beq.n	8021098 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x16c>
 8020ff6:	4630      	mov	r0, r6
 8020ff8:	f7f4 fec4 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8020ffc:	9008      	str	r0, [sp, #32]
 8020ffe:	e7db      	b.n	8020fb8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8c>
 8021000:	f04f 0b00 	mov.w	fp, #0
 8021004:	465f      	mov	r7, fp
 8021006:	f04f 0901 	mov.w	r9, #1
 802100a:	4baa      	ldr	r3, [pc, #680]	; (80212b4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x388>)
 802100c:	9309      	str	r3, [sp, #36]	; 0x24
 802100e:	7c23      	ldrb	r3, [r4, #16]
 8021010:	b11b      	cbz	r3, 802101a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xee>
 8021012:	2120      	movs	r1, #32
 8021014:	a809      	add	r0, sp, #36	; 0x24
 8021016:	f7ef f93c 	bl	8010292 <_ZNSs7reserveEj>
 802101a:	f894 a124 	ldrb.w	sl, [r4, #292]	; 0x124
 802101e:	f1ba 0f00 	cmp.w	sl, #0
 8021022:	d061      	beq.n	80210e8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1bc>
 8021024:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
 8021028:	2500      	movs	r5, #0
 802102a:	9301      	str	r3, [sp, #4]
 802102c:	9500      	str	r5, [sp, #0]
 802102e:	f1b9 0f00 	cmp.w	r9, #0
 8021032:	f040 80a7 	bne.w	8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 8021036:	7c22      	ldrb	r2, [r4, #16]
 8021038:	9b08      	ldr	r3, [sp, #32]
 802103a:	2a00      	cmp	r2, #0
 802103c:	f000 80c3 	beq.w	80211c6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x29a>
 8021040:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8021042:	429a      	cmp	r2, r3
 8021044:	f040 80bf 	bne.w	80211c6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x29a>
 8021048:	9b00      	ldr	r3, [sp, #0]
 802104a:	2b00      	cmp	r3, #0
 802104c:	f040 809a 	bne.w	8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 8021050:	2d00      	cmp	r5, #0
 8021052:	f040 8097 	bne.w	8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 8021056:	f1bb 0f00 	cmp.w	fp, #0
 802105a:	f000 8090 	beq.w	802117e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x252>
 802105e:	fa5f f18b 	uxtb.w	r1, fp
 8021062:	a809      	add	r0, sp, #36	; 0x24
 8021064:	f7ef f9e3 	bl	801042e <_ZNSs9push_backEc>
 8021068:	9b00      	ldr	r3, [sp, #0]
 802106a:	46b9      	mov	r9, r7
 802106c:	469b      	mov	fp, r3
 802106e:	9804      	ldr	r0, [sp, #16]
 8021070:	9303      	str	r3, [sp, #12]
 8021072:	f7fd fa1b 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8021076:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 802107a:	a914      	add	r1, sp, #80	; 0x50
 802107c:	4630      	mov	r0, r6
 802107e:	9305      	str	r3, [sp, #20]
 8021080:	f7f4 fea2 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8021084:	9b03      	ldr	r3, [sp, #12]
 8021086:	2800      	cmp	r0, #0
 8021088:	d077      	beq.n	802117a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x24e>
 802108a:	4630      	mov	r0, r6
 802108c:	f7f4 fe7a 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8021090:	2500      	movs	r5, #0
 8021092:	9b03      	ldr	r3, [sp, #12]
 8021094:	9008      	str	r0, [sp, #32]
 8021096:	e06a      	b.n	802116e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x242>
 8021098:	f04f 0901 	mov.w	r9, #1
 802109c:	464f      	mov	r7, r9
 802109e:	e7b4      	b.n	802100a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xde>
 80210a0:	46a9      	mov	r9, r5
 80210a2:	4655      	mov	r5, sl
 80210a4:	4657      	mov	r7, sl
 80210a6:	f1b9 0f00 	cmp.w	r9, #0
 80210aa:	d16b      	bne.n	8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 80210ac:	9908      	ldr	r1, [sp, #32]
 80210ae:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 80210b2:	2b09      	cmp	r3, #9
 80210b4:	d81c      	bhi.n	80210f0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1c4>
 80210b6:	b2c9      	uxtb	r1, r1
 80210b8:	4640      	mov	r0, r8
 80210ba:	f7ef f9b8 	bl	801042e <_ZNSs9push_backEc>
 80210be:	f04f 0a01 	mov.w	sl, #1
 80210c2:	9804      	ldr	r0, [sp, #16]
 80210c4:	f7fd f9f2 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 80210c8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80210cc:	a914      	add	r1, sp, #80	; 0x50
 80210ce:	4630      	mov	r0, r6
 80210d0:	9305      	str	r3, [sp, #20]
 80210d2:	f7f4 fe79 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80210d6:	b120      	cbz	r0, 80210e2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1b6>
 80210d8:	4630      	mov	r0, r6
 80210da:	f7f4 fe53 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80210de:	9008      	str	r0, [sp, #32]
 80210e0:	e7e0      	b.n	80210a4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x178>
 80210e2:	f04f 0901 	mov.w	r9, #1
 80210e6:	e7dd      	b.n	80210a4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x178>
 80210e8:	4655      	mov	r5, sl
 80210ea:	f8cd a000 	str.w	sl, [sp]
 80210ee:	e7da      	b.n	80210a6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x17a>
 80210f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80210f2:	4299      	cmp	r1, r3
 80210f4:	d10a      	bne.n	802110c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1e0>
 80210f6:	9b00      	ldr	r3, [sp, #0]
 80210f8:	b943      	cbnz	r3, 802110c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1e0>
 80210fa:	b93d      	cbnz	r5, 802110c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1e0>
 80210fc:	212e      	movs	r1, #46	; 0x2e
 80210fe:	4640      	mov	r0, r8
 8021100:	f7ef f995 	bl	801042e <_ZNSs9push_backEc>
 8021104:	2301      	movs	r3, #1
 8021106:	46ba      	mov	sl, r7
 8021108:	9300      	str	r3, [sp, #0]
 802110a:	e7da      	b.n	80210c2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x196>
 802110c:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 8021110:	4299      	cmp	r1, r3
 8021112:	d003      	beq.n	802111c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1f0>
 8021114:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8021118:	4299      	cmp	r1, r3
 802111a:	d133      	bne.n	8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 802111c:	bb95      	cbnz	r5, 8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 802111e:	b38f      	cbz	r7, 8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 8021120:	2165      	movs	r1, #101	; 0x65
 8021122:	4640      	mov	r0, r8
 8021124:	f7ef f983 	bl	801042e <_ZNSs9push_backEc>
 8021128:	9804      	ldr	r0, [sp, #16]
 802112a:	f7fd f9bf 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 802112e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8021132:	a914      	add	r1, sp, #80	; 0x50
 8021134:	4630      	mov	r0, r6
 8021136:	9305      	str	r3, [sp, #20]
 8021138:	f7f4 fe46 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 802113c:	4682      	mov	sl, r0
 802113e:	2800      	cmp	r0, #0
 8021140:	f000 80b6 	beq.w	80212b0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x384>
 8021144:	4630      	mov	r0, r6
 8021146:	f7f4 fe1d 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 802114a:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 802114e:	9008      	str	r0, [sp, #32]
 8021150:	4283      	cmp	r3, r0
 8021152:	d009      	beq.n	8021168 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x23c>
 8021154:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8021158:	4283      	cmp	r3, r0
 802115a:	d1a1      	bne.n	80210a0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x174>
 802115c:	212d      	movs	r1, #45	; 0x2d
 802115e:	4640      	mov	r0, r8
 8021160:	f7ef f965 	bl	801042e <_ZNSs9push_backEc>
 8021164:	4655      	mov	r5, sl
 8021166:	e7ac      	b.n	80210c2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x196>
 8021168:	212b      	movs	r1, #43	; 0x2b
 802116a:	e7f8      	b.n	802115e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x232>
 802116c:	4699      	mov	r9, r3
 802116e:	464f      	mov	r7, r9
 8021170:	46a9      	mov	r9, r5
 8021172:	461d      	mov	r5, r3
 8021174:	e75b      	b.n	802102e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x102>
 8021176:	464b      	mov	r3, r9
 8021178:	e7f9      	b.n	802116e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x242>
 802117a:	4655      	mov	r5, sl
 802117c:	e7f7      	b.n	802116e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x242>
 802117e:	4640      	mov	r0, r8
 8021180:	f7ee ff4a 	bl	8010018 <_ZNSs5clearEv>
 8021184:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021186:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 802118a:	b183      	cbz	r3, 80211ae <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x282>
 802118c:	9b00      	ldr	r3, [sp, #0]
 802118e:	b92b      	cbnz	r3, 802119c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x270>
 8021190:	b925      	cbnz	r5, 802119c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x270>
 8021192:	fa5f f18b 	uxtb.w	r1, fp
 8021196:	a809      	add	r0, sp, #36	; 0x24
 8021198:	f7ef f949 	bl	801042e <_ZNSs9push_backEc>
 802119c:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 80211a0:	aa09      	add	r2, sp, #36	; 0x24
 80211a2:	f003 fd03 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 80211a6:	b910      	cbnz	r0, 80211ae <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x282>
 80211a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80211aa:	2204      	movs	r2, #4
 80211ac:	601a      	str	r2, [r3, #0]
 80211ae:	e896 0003 	ldmia.w	r6, {r0, r1}
 80211b2:	9b02      	ldr	r3, [sp, #8]
 80211b4:	e883 0003 	stmia.w	r3, {r0, r1}
 80211b8:	a809      	add	r0, sp, #36	; 0x24
 80211ba:	f7ee ff23 	bl	8010004 <_ZNSsD1Ev>
 80211be:	9802      	ldr	r0, [sp, #8]
 80211c0:	b00b      	add	sp, #44	; 0x2c
 80211c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80211c6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80211c8:	429a      	cmp	r2, r3
 80211ca:	d116      	bne.n	80211fa <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2ce>
 80211cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80211ce:	9a00      	ldr	r2, [sp, #0]
 80211d0:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 80211d4:	2a00      	cmp	r2, #0
 80211d6:	d1d5      	bne.n	8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 80211d8:	2d00      	cmp	r5, #0
 80211da:	d1d3      	bne.n	8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 80211dc:	b123      	cbz	r3, 80211e8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2bc>
 80211de:	fa5f f18b 	uxtb.w	r1, fp
 80211e2:	a809      	add	r0, sp, #36	; 0x24
 80211e4:	f7ef f923 	bl	801042e <_ZNSs9push_backEc>
 80211e8:	212e      	movs	r1, #46	; 0x2e
 80211ea:	4640      	mov	r0, r8
 80211ec:	f7ef f91f 	bl	801042e <_ZNSs9push_backEc>
 80211f0:	46b9      	mov	r9, r7
 80211f2:	2300      	movs	r3, #0
 80211f4:	f8cd a000 	str.w	sl, [sp]
 80211f8:	e739      	b.n	802106e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x142>
 80211fa:	9801      	ldr	r0, [sp, #4]
 80211fc:	aa08      	add	r2, sp, #32
 80211fe:	210a      	movs	r1, #10
 8021200:	f7ef f98b 	bl	801051a <_ZNSt11char_traitsIwE4findEPKwjRS1_>
 8021204:	b160      	cbz	r0, 8021220 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2f4>
 8021206:	9b01      	ldr	r3, [sp, #4]
 8021208:	1ac1      	subs	r1, r0, r3
 802120a:	1089      	asrs	r1, r1, #2
 802120c:	3130      	adds	r1, #48	; 0x30
 802120e:	b2c9      	uxtb	r1, r1
 8021210:	4640      	mov	r0, r8
 8021212:	f7ef f90c 	bl	801042e <_ZNSs9push_backEc>
 8021216:	f10b 0b01 	add.w	fp, fp, #1
 802121a:	462b      	mov	r3, r5
 802121c:	46d1      	mov	r9, sl
 802121e:	e726      	b.n	802106e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x142>
 8021220:	9b08      	ldr	r3, [sp, #32]
 8021222:	f8d4 2104 	ldr.w	r2, [r4, #260]	; 0x104
 8021226:	429a      	cmp	r2, r3
 8021228:	d003      	beq.n	8021232 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x306>
 802122a:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 802122e:	4293      	cmp	r3, r2
 8021230:	d1a8      	bne.n	8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 8021232:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021234:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 8021238:	2d00      	cmp	r5, #0
 802123a:	d1a3      	bne.n	8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 802123c:	2f00      	cmp	r7, #0
 802123e:	d0a1      	beq.n	8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 8021240:	b133      	cbz	r3, 8021250 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x324>
 8021242:	9b00      	ldr	r3, [sp, #0]
 8021244:	b923      	cbnz	r3, 8021250 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x324>
 8021246:	fa5f f18b 	uxtb.w	r1, fp
 802124a:	a809      	add	r0, sp, #36	; 0x24
 802124c:	f7ef f8ef 	bl	801042e <_ZNSs9push_backEc>
 8021250:	2165      	movs	r1, #101	; 0x65
 8021252:	4640      	mov	r0, r8
 8021254:	f7ef f8eb 	bl	801042e <_ZNSs9push_backEc>
 8021258:	9804      	ldr	r0, [sp, #16]
 802125a:	f7fd f927 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 802125e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8021262:	a914      	add	r1, sp, #80	; 0x50
 8021264:	4630      	mov	r0, r6
 8021266:	9305      	str	r3, [sp, #20]
 8021268:	f7f4 fdae 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 802126c:	4681      	mov	r9, r0
 802126e:	b1f8      	cbz	r0, 80212b0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x384>
 8021270:	4630      	mov	r0, r6
 8021272:	f7f4 fd87 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8021276:	f8d4 10c0 	ldr.w	r1, [r4, #192]	; 0xc0
 802127a:	9008      	str	r0, [sp, #32]
 802127c:	4281      	cmp	r1, r0
 802127e:	d004      	beq.n	802128a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x35e>
 8021280:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8021284:	4283      	cmp	r3, r0
 8021286:	f47f af76 	bne.w	8021176 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x24a>
 802128a:	7c23      	ldrb	r3, [r4, #16]
 802128c:	b11b      	cbz	r3, 8021296 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x36a>
 802128e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8021290:	4282      	cmp	r2, r0
 8021292:	f43f af6b 	beq.w	802116c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x240>
 8021296:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021298:	4283      	cmp	r3, r0
 802129a:	f43f af6c 	beq.w	8021176 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x24a>
 802129e:	4281      	cmp	r1, r0
 80212a0:	bf0c      	ite	eq
 80212a2:	212b      	moveq	r1, #43	; 0x2b
 80212a4:	212d      	movne	r1, #45	; 0x2d
 80212a6:	4640      	mov	r0, r8
 80212a8:	f7ef f8c1 	bl	801042e <_ZNSs9push_backEc>
 80212ac:	464b      	mov	r3, r9
 80212ae:	e6de      	b.n	802106e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x142>
 80212b0:	463d      	mov	r5, r7
 80212b2:	e767      	b.n	8021184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x258>
 80212b4:	20003bf0 	.word	0x20003bf0

080212b8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRf>:
 80212b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80212bc:	b08d      	sub	sp, #52	; 0x34
 80212be:	ac08      	add	r4, sp, #32
 80212c0:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 80212c2:	af0a      	add	r7, sp, #40	; 0x28
 80212c4:	e884 000c 	stmia.w	r4, {r2, r3}
 80212c8:	4689      	mov	r9, r1
 80212ca:	4b1d      	ldr	r3, [pc, #116]	; (8021340 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRf+0x88>)
 80212cc:	930a      	str	r3, [sp, #40]	; 0x28
 80212ce:	2120      	movs	r1, #32
 80212d0:	4605      	mov	r5, r0
 80212d2:	4638      	mov	r0, r7
 80212d4:	f7ee ffdd 	bl	8010292 <_ZNSs7reserveEj>
 80212d8:	e9cd 6703 	strd	r6, r7, [sp, #12]
 80212dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80212de:	9302      	str	r3, [sp, #8]
 80212e0:	ab14      	add	r3, sp, #80	; 0x50
 80212e2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80212e6:	e88d 0003 	stmia.w	sp, {r0, r1}
 80212ea:	f10d 0818 	add.w	r8, sp, #24
 80212ee:	e894 000c 	ldmia.w	r4, {r2, r3}
 80212f2:	4640      	mov	r0, r8
 80212f4:	4649      	mov	r1, r9
 80212f6:	f7ff fe19 	bl	8020f2c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 80212fa:	e898 0003 	ldmia.w	r8, {r0, r1}
 80212fe:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8021302:	e884 0003 	stmia.w	r4, {r0, r1}
 8021306:	f7ea ffe9 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 802130a:	9918      	ldr	r1, [sp, #96]	; 0x60
 802130c:	900b      	str	r0, [sp, #44]	; 0x2c
 802130e:	ab0b      	add	r3, sp, #44	; 0x2c
 8021310:	4640      	mov	r0, r8
 8021312:	4632      	mov	r2, r6
 8021314:	f003 f930 	bl	8024578 <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi>
 8021318:	a914      	add	r1, sp, #80	; 0x50
 802131a:	4620      	mov	r0, r4
 802131c:	f7f4 fd41 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8021320:	b118      	cbz	r0, 802132a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRf+0x72>
 8021322:	6833      	ldr	r3, [r6, #0]
 8021324:	f043 0302 	orr.w	r3, r3, #2
 8021328:	6033      	str	r3, [r6, #0]
 802132a:	e894 0003 	ldmia.w	r4, {r0, r1}
 802132e:	e885 0003 	stmia.w	r5, {r0, r1}
 8021332:	4638      	mov	r0, r7
 8021334:	f7ee fe66 	bl	8010004 <_ZNSsD1Ev>
 8021338:	4628      	mov	r0, r5
 802133a:	b00d      	add	sp, #52	; 0x34
 802133c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021340:	20003bf0 	.word	0x20003bf0

08021344 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRd>:
 8021344:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8021348:	b08d      	sub	sp, #52	; 0x34
 802134a:	ac08      	add	r4, sp, #32
 802134c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 802134e:	af0a      	add	r7, sp, #40	; 0x28
 8021350:	e884 000c 	stmia.w	r4, {r2, r3}
 8021354:	4689      	mov	r9, r1
 8021356:	4b1d      	ldr	r3, [pc, #116]	; (80213cc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRd+0x88>)
 8021358:	930a      	str	r3, [sp, #40]	; 0x28
 802135a:	2120      	movs	r1, #32
 802135c:	4605      	mov	r5, r0
 802135e:	4638      	mov	r0, r7
 8021360:	f7ee ff97 	bl	8010292 <_ZNSs7reserveEj>
 8021364:	e9cd 6703 	strd	r6, r7, [sp, #12]
 8021368:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802136a:	9302      	str	r3, [sp, #8]
 802136c:	ab14      	add	r3, sp, #80	; 0x50
 802136e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8021372:	e88d 0003 	stmia.w	sp, {r0, r1}
 8021376:	f10d 0818 	add.w	r8, sp, #24
 802137a:	e894 000c 	ldmia.w	r4, {r2, r3}
 802137e:	4640      	mov	r0, r8
 8021380:	4649      	mov	r1, r9
 8021382:	f7ff fdd3 	bl	8020f2c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 8021386:	e898 0003 	ldmia.w	r8, {r0, r1}
 802138a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802138e:	e884 0003 	stmia.w	r4, {r0, r1}
 8021392:	f7ea ffa3 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8021396:	9918      	ldr	r1, [sp, #96]	; 0x60
 8021398:	900b      	str	r0, [sp, #44]	; 0x2c
 802139a:	ab0b      	add	r3, sp, #44	; 0x2c
 802139c:	4640      	mov	r0, r8
 802139e:	4632      	mov	r2, r6
 80213a0:	f003 f938 	bl	8024614 <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi>
 80213a4:	a914      	add	r1, sp, #80	; 0x50
 80213a6:	4620      	mov	r0, r4
 80213a8:	f7f4 fcfb 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 80213ac:	b118      	cbz	r0, 80213b6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRd+0x72>
 80213ae:	6833      	ldr	r3, [r6, #0]
 80213b0:	f043 0302 	orr.w	r3, r3, #2
 80213b4:	6033      	str	r3, [r6, #0]
 80213b6:	e894 0003 	ldmia.w	r4, {r0, r1}
 80213ba:	e885 0003 	stmia.w	r5, {r0, r1}
 80213be:	4638      	mov	r0, r7
 80213c0:	f7ee fe20 	bl	8010004 <_ZNSsD1Ev>
 80213c4:	4628      	mov	r0, r5
 80213c6:	b00d      	add	sp, #52	; 0x34
 80213c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80213cc:	20003bf0 	.word	0x20003bf0

080213d0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRe>:
 80213d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80213d4:	b08d      	sub	sp, #52	; 0x34
 80213d6:	ac08      	add	r4, sp, #32
 80213d8:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 80213da:	af0a      	add	r7, sp, #40	; 0x28
 80213dc:	e884 000c 	stmia.w	r4, {r2, r3}
 80213e0:	4689      	mov	r9, r1
 80213e2:	4b1d      	ldr	r3, [pc, #116]	; (8021458 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRe+0x88>)
 80213e4:	930a      	str	r3, [sp, #40]	; 0x28
 80213e6:	2120      	movs	r1, #32
 80213e8:	4605      	mov	r5, r0
 80213ea:	4638      	mov	r0, r7
 80213ec:	f7ee ff51 	bl	8010292 <_ZNSs7reserveEj>
 80213f0:	e9cd 6703 	strd	r6, r7, [sp, #12]
 80213f4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80213f6:	9302      	str	r3, [sp, #8]
 80213f8:	ab14      	add	r3, sp, #80	; 0x50
 80213fa:	e893 0003 	ldmia.w	r3, {r0, r1}
 80213fe:	e88d 0003 	stmia.w	sp, {r0, r1}
 8021402:	f10d 0818 	add.w	r8, sp, #24
 8021406:	e894 000c 	ldmia.w	r4, {r2, r3}
 802140a:	4640      	mov	r0, r8
 802140c:	4649      	mov	r1, r9
 802140e:	f7ff fd8d 	bl	8020f2c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16_M_extract_floatES3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 8021412:	e898 0003 	ldmia.w	r8, {r0, r1}
 8021416:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802141a:	e884 0003 	stmia.w	r4, {r0, r1}
 802141e:	f7ea ff5d 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8021422:	9918      	ldr	r1, [sp, #96]	; 0x60
 8021424:	900b      	str	r0, [sp, #44]	; 0x2c
 8021426:	ab0b      	add	r3, sp, #44	; 0x2c
 8021428:	4640      	mov	r0, r8
 802142a:	4632      	mov	r2, r6
 802142c:	f003 f94c 	bl	80246c8 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi>
 8021430:	a914      	add	r1, sp, #80	; 0x50
 8021432:	4620      	mov	r0, r4
 8021434:	f7f4 fcb5 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8021438:	b118      	cbz	r0, 8021442 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRe+0x72>
 802143a:	6833      	ldr	r3, [r6, #0]
 802143c:	f043 0302 	orr.w	r3, r3, #2
 8021440:	6033      	str	r3, [r6, #0]
 8021442:	e894 0003 	ldmia.w	r4, {r0, r1}
 8021446:	e885 0003 	stmia.w	r5, {r0, r1}
 802144a:	4638      	mov	r0, r7
 802144c:	f7ee fdda 	bl	8010004 <_ZNSsD1Ev>
 8021450:	4628      	mov	r0, r5
 8021452:	b00d      	add	sp, #52	; 0x34
 8021454:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021458:	20003bf0 	.word	0x20003bf0

0802145c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>:
 802145c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021460:	ed2d 8b02 	vpush	{d8}
 8021464:	b08d      	sub	sp, #52	; 0x34
 8021466:	f10d 0a18 	add.w	sl, sp, #24
 802146a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802146c:	9005      	str	r0, [sp, #20]
 802146e:	f105 016c 	add.w	r1, r5, #108	; 0x6c
 8021472:	a809      	add	r0, sp, #36	; 0x24
 8021474:	e88a 000c 	stmia.w	sl, {r2, r3}
 8021478:	f7fe fa40 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 802147c:	68ef      	ldr	r7, [r5, #12]
 802147e:	f007 074a 	and.w	r7, r7, #74	; 0x4a
 8021482:	2300      	movs	r3, #0
 8021484:	2f40      	cmp	r7, #64	; 0x40
 8021486:	4604      	mov	r4, r0
 8021488:	930a      	str	r3, [sp, #40]	; 0x28
 802148a:	d04d      	beq.n	8021528 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xcc>
 802148c:	2f08      	cmp	r7, #8
 802148e:	bf0c      	ite	eq
 8021490:	f04f 0810 	moveq.w	r8, #16
 8021494:	f04f 080a 	movne.w	r8, #10
 8021498:	a918      	add	r1, sp, #96	; 0x60
 802149a:	4650      	mov	r0, sl
 802149c:	f7f4 fc81 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 80214a0:	4681      	mov	r9, r0
 80214a2:	2800      	cmp	r0, #0
 80214a4:	d179      	bne.n	802159a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x13e>
 80214a6:	4650      	mov	r0, sl
 80214a8:	f7f4 fc6c 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80214ac:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80214b0:	900a      	str	r0, [sp, #40]	; 0x28
 80214b2:	4283      	cmp	r3, r0
 80214b4:	bf0c      	ite	eq
 80214b6:	f04f 0b01 	moveq.w	fp, #1
 80214ba:	f04f 0b00 	movne.w	fp, #0
 80214be:	d003      	beq.n	80214c8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x6c>
 80214c0:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80214c4:	4283      	cmp	r3, r0
 80214c6:	d119      	bne.n	80214fc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa0>
 80214c8:	7c23      	ldrb	r3, [r4, #16]
 80214ca:	b113      	cbz	r3, 80214d2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x76>
 80214cc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80214ce:	4283      	cmp	r3, r0
 80214d0:	d014      	beq.n	80214fc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa0>
 80214d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80214d4:	4283      	cmp	r3, r0
 80214d6:	d011      	beq.n	80214fc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa0>
 80214d8:	9806      	ldr	r0, [sp, #24]
 80214da:	f7fc ffe7 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 80214de:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80214e2:	a918      	add	r1, sp, #96	; 0x60
 80214e4:	4650      	mov	r0, sl
 80214e6:	9307      	str	r3, [sp, #28]
 80214e8:	f7f4 fc6e 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80214ec:	4605      	mov	r5, r0
 80214ee:	2800      	cmp	r0, #0
 80214f0:	f000 809d 	beq.w	802162e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1d2>
 80214f4:	4650      	mov	r0, sl
 80214f6:	f7f4 fc45 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80214fa:	900a      	str	r0, [sp, #40]	; 0x28
 80214fc:	2500      	movs	r5, #0
 80214fe:	462e      	mov	r6, r5
 8021500:	7c22      	ldrb	r2, [r4, #16]
 8021502:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021504:	b112      	cbz	r2, 802150c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xb0>
 8021506:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8021508:	429a      	cmp	r2, r3
 802150a:	d04a      	beq.n	80215a2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x146>
 802150c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 802150e:	429a      	cmp	r2, r3
 8021510:	d047      	beq.n	80215a2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x146>
 8021512:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 8021516:	429a      	cmp	r2, r3
 8021518:	d110      	bne.n	802153c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe0>
 802151a:	b145      	cbz	r5, 802152e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd2>
 802151c:	f1b8 0f0a 	cmp.w	r8, #10
 8021520:	d10d      	bne.n	802153e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe2>
 8021522:	b947      	cbnz	r7, 8021536 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xda>
 8021524:	463e      	mov	r6, r7
 8021526:	e02e      	b.n	8021586 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x12a>
 8021528:	f04f 0808 	mov.w	r8, #8
 802152c:	e7b4      	b.n	8021498 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x3c>
 802152e:	b347      	cbz	r7, 8021582 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x126>
 8021530:	f1b8 0f08 	cmp.w	r8, #8
 8021534:	d02a      	beq.n	802158c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x130>
 8021536:	3601      	adds	r6, #1
 8021538:	2501      	movs	r5, #1
 802153a:	e00e      	b.n	802155a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xfe>
 802153c:	b1fd      	cbz	r5, 802157e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x122>
 802153e:	f8d4 20c4 	ldr.w	r2, [r4, #196]	; 0xc4
 8021542:	429a      	cmp	r2, r3
 8021544:	d003      	beq.n	802154e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf2>
 8021546:	f8d4 20c8 	ldr.w	r2, [r4, #200]	; 0xc8
 802154a:	429a      	cmp	r2, r3
 802154c:	d173      	bne.n	8021636 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1da>
 802154e:	b1ff      	cbz	r7, 8021590 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x134>
 8021550:	f1b8 0f10 	cmp.w	r8, #16
 8021554:	d174      	bne.n	8021640 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e4>
 8021556:	2600      	movs	r6, #0
 8021558:	4635      	mov	r5, r6
 802155a:	9806      	ldr	r0, [sp, #24]
 802155c:	f7fc ffa6 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8021560:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8021564:	a918      	add	r1, sp, #96	; 0x60
 8021566:	4650      	mov	r0, sl
 8021568:	9307      	str	r3, [sp, #28]
 802156a:	f7f4 fc2d 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 802156e:	2800      	cmp	r0, #0
 8021570:	d063      	beq.n	802163a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1de>
 8021572:	4650      	mov	r0, sl
 8021574:	f7f4 fc06 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8021578:	900a      	str	r0, [sp, #40]	; 0x28
 802157a:	2d00      	cmp	r5, #0
 802157c:	d1c0      	bne.n	8021500 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa4>
 802157e:	46a9      	mov	r9, r5
 8021580:	e00f      	b.n	80215a2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x146>
 8021582:	463e      	mov	r6, r7
 8021584:	2501      	movs	r5, #1
 8021586:	f04f 0808 	mov.w	r8, #8
 802158a:	e7e6      	b.n	802155a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xfe>
 802158c:	462e      	mov	r6, r5
 802158e:	e7d3      	b.n	8021538 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xdc>
 8021590:	463e      	mov	r6, r7
 8021592:	463d      	mov	r5, r7
 8021594:	f04f 0810 	mov.w	r8, #16
 8021598:	e7df      	b.n	802155a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xfe>
 802159a:	f04f 0b00 	mov.w	fp, #0
 802159e:	465e      	mov	r6, fp
 80215a0:	465d      	mov	r5, fp
 80215a2:	f1b8 0f10 	cmp.w	r8, #16
 80215a6:	bf14      	ite	ne
 80215a8:	4643      	movne	r3, r8
 80215aa:	2316      	moveq	r3, #22
 80215ac:	ee08 3a10 	vmov	s16, r3
 80215b0:	4b77      	ldr	r3, [pc, #476]	; (8021790 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x334>)
 80215b2:	930b      	str	r3, [sp, #44]	; 0x2c
 80215b4:	7c23      	ldrb	r3, [r4, #16]
 80215b6:	b11b      	cbz	r3, 80215c0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x164>
 80215b8:	2120      	movs	r1, #32
 80215ba:	a80b      	add	r0, sp, #44	; 0x2c
 80215bc:	f7ee fe69 	bl	8010292 <_ZNSs7reserveEj>
 80215c0:	f1bb 0f00 	cmp.w	fp, #0
 80215c4:	bf14      	ite	ne
 80215c6:	f04f 4300 	movne.w	r3, #2147483648	; 0x80000000
 80215ca:	f06f 4300 	mvneq.w	r3, #2147483648	; 0x80000000
 80215ce:	9302      	str	r3, [sp, #8]
 80215d0:	fbb3 f3f8 	udiv	r3, r3, r8
 80215d4:	9303      	str	r3, [sp, #12]
 80215d6:	f894 3124 	ldrb.w	r3, [r4, #292]	; 0x124
 80215da:	9301      	str	r3, [sp, #4]
 80215dc:	2b00      	cmp	r3, #0
 80215de:	d05c      	beq.n	802169a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x23e>
 80215e0:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
 80215e4:	2700      	movs	r7, #0
 80215e6:	9304      	str	r3, [sp, #16]
 80215e8:	46ba      	mov	sl, r7
 80215ea:	f1b9 0f00 	cmp.w	r9, #0
 80215ee:	d12d      	bne.n	802164c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f0>
 80215f0:	7c23      	ldrb	r3, [r4, #16]
 80215f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80215f4:	2b00      	cmp	r3, #0
 80215f6:	f000 8081 	beq.w	80216fc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2a0>
 80215fa:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80215fc:	428a      	cmp	r2, r1
 80215fe:	d17d      	bne.n	80216fc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2a0>
 8021600:	b32e      	cbz	r6, 802164e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f2>
 8021602:	b2f1      	uxtb	r1, r6
 8021604:	a80b      	add	r0, sp, #44	; 0x2c
 8021606:	f7ee ff12 	bl	801042e <_ZNSs9push_backEc>
 802160a:	2600      	movs	r6, #0
 802160c:	9806      	ldr	r0, [sp, #24]
 802160e:	f7fc ff4d 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8021612:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8021616:	a918      	add	r1, sp, #96	; 0x60
 8021618:	a806      	add	r0, sp, #24
 802161a:	9307      	str	r3, [sp, #28]
 802161c:	f7f4 fbd4 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8021620:	2800      	cmp	r0, #0
 8021622:	d068      	beq.n	80216f6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x29a>
 8021624:	a806      	add	r0, sp, #24
 8021626:	f7f4 fbad 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 802162a:	900a      	str	r0, [sp, #40]	; 0x28
 802162c:	e7e0      	b.n	80215f0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x194>
 802162e:	f04f 0901 	mov.w	r9, #1
 8021632:	4606      	mov	r6, r0
 8021634:	e7b5      	b.n	80215a2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x146>
 8021636:	2501      	movs	r5, #1
 8021638:	e7b3      	b.n	80215a2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x146>
 802163a:	f04f 0901 	mov.w	r9, #1
 802163e:	e7b0      	b.n	80215a2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x146>
 8021640:	ee08 8a10 	vmov	s16, r8
 8021644:	2501      	movs	r5, #1
 8021646:	e7b3      	b.n	80215b0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x154>
 8021648:	f04f 0901 	mov.w	r9, #1
 802164c:	2300      	movs	r3, #0
 802164e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021650:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 8021654:	b172      	cbz	r2, 8021674 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x218>
 8021656:	b2f1      	uxtb	r1, r6
 8021658:	a80b      	add	r0, sp, #44	; 0x2c
 802165a:	9301      	str	r3, [sp, #4]
 802165c:	f7ee fee7 	bl	801042e <_ZNSs9push_backEc>
 8021660:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 8021664:	aa0b      	add	r2, sp, #44	; 0x2c
 8021666:	f003 faa1 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 802166a:	9b01      	ldr	r3, [sp, #4]
 802166c:	b910      	cbnz	r0, 8021674 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x218>
 802166e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8021670:	2204      	movs	r2, #4
 8021672:	600a      	str	r2, [r1, #0]
 8021674:	b92e      	cbnz	r6, 8021682 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x226>
 8021676:	b925      	cbnz	r5, 8021682 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x226>
 8021678:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802167a:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 802167e:	2a00      	cmp	r2, #0
 8021680:	d060      	beq.n	8021744 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2e8>
 8021682:	2b00      	cmp	r3, #0
 8021684:	d15e      	bne.n	8021744 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2e8>
 8021686:	f1ba 0f00 	cmp.w	sl, #0
 802168a:	d178      	bne.n	802177e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x322>
 802168c:	f1bb 0f00 	cmp.w	fp, #0
 8021690:	d000      	beq.n	8021694 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x238>
 8021692:	427f      	negs	r7, r7
 8021694:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021696:	601f      	str	r7, [r3, #0]
 8021698:	e05a      	b.n	8021750 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f4>
 802169a:	f8dd a004 	ldr.w	sl, [sp, #4]
 802169e:	4657      	mov	r7, sl
 80216a0:	f1b9 0f00 	cmp.w	r9, #0
 80216a4:	d1d2      	bne.n	802164c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f0>
 80216a6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80216a8:	ee18 0a10 	vmov	r0, s16
 80216ac:	f7fc ff08 	bl	801e4c0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>
 80216b0:	1c43      	adds	r3, r0, #1
 80216b2:	d0cb      	beq.n	802164c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f0>
 80216b4:	9b03      	ldr	r3, [sp, #12]
 80216b6:	429f      	cmp	r7, r3
 80216b8:	d81a      	bhi.n	80216f0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x294>
 80216ba:	9b02      	ldr	r3, [sp, #8]
 80216bc:	fb07 f708 	mul.w	r7, r7, r8
 80216c0:	1a1b      	subs	r3, r3, r0
 80216c2:	42bb      	cmp	r3, r7
 80216c4:	bf38      	it	cc
 80216c6:	f04a 0a01 	orrcc.w	sl, sl, #1
 80216ca:	3601      	adds	r6, #1
 80216cc:	4407      	add	r7, r0
 80216ce:	9806      	ldr	r0, [sp, #24]
 80216d0:	f7fc feec 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 80216d4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80216d8:	a918      	add	r1, sp, #96	; 0x60
 80216da:	a806      	add	r0, sp, #24
 80216dc:	9307      	str	r3, [sp, #28]
 80216de:	f7f4 fb73 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80216e2:	2800      	cmp	r0, #0
 80216e4:	d0b0      	beq.n	8021648 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1ec>
 80216e6:	a806      	add	r0, sp, #24
 80216e8:	f7f4 fb4c 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80216ec:	900a      	str	r0, [sp, #40]	; 0x28
 80216ee:	e7da      	b.n	80216a6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x24a>
 80216f0:	f04f 0a01 	mov.w	sl, #1
 80216f4:	e7eb      	b.n	80216ce <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x272>
 80216f6:	f8dd 9004 	ldr.w	r9, [sp, #4]
 80216fa:	e776      	b.n	80215ea <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x18e>
 80216fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80216fe:	429a      	cmp	r2, r3
 8021700:	d0a4      	beq.n	802164c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f0>
 8021702:	ee18 1a10 	vmov	r1, s16
 8021706:	9804      	ldr	r0, [sp, #16]
 8021708:	aa0a      	add	r2, sp, #40	; 0x28
 802170a:	f7ee ff06 	bl	801051a <_ZNSt11char_traitsIwE4findEPKwjRS1_>
 802170e:	b1b8      	cbz	r0, 8021740 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2e4>
 8021710:	9b04      	ldr	r3, [sp, #16]
 8021712:	9a03      	ldr	r2, [sp, #12]
 8021714:	1ac0      	subs	r0, r0, r3
 8021716:	283c      	cmp	r0, #60	; 0x3c
 8021718:	ea4f 03a0 	mov.w	r3, r0, asr #2
 802171c:	bfc8      	it	gt
 802171e:	3b06      	subgt	r3, #6
 8021720:	4297      	cmp	r7, r2
 8021722:	d80a      	bhi.n	802173a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2de>
 8021724:	9a02      	ldr	r2, [sp, #8]
 8021726:	fb07 f708 	mul.w	r7, r7, r8
 802172a:	1ad2      	subs	r2, r2, r3
 802172c:	42ba      	cmp	r2, r7
 802172e:	bf38      	it	cc
 8021730:	f04a 0a01 	orrcc.w	sl, sl, #1
 8021734:	3601      	adds	r6, #1
 8021736:	441f      	add	r7, r3
 8021738:	e768      	b.n	802160c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1b0>
 802173a:	f8dd a004 	ldr.w	sl, [sp, #4]
 802173e:	e765      	b.n	802160c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1b0>
 8021740:	4603      	mov	r3, r0
 8021742:	e784      	b.n	802164e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f2>
 8021744:	2300      	movs	r3, #0
 8021746:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8021748:	6013      	str	r3, [r2, #0]
 802174a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 802174c:	2304      	movs	r3, #4
 802174e:	6013      	str	r3, [r2, #0]
 8021750:	f1b9 0f00 	cmp.w	r9, #0
 8021754:	d005      	beq.n	8021762 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x306>
 8021756:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021758:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 802175a:	681b      	ldr	r3, [r3, #0]
 802175c:	f043 0302 	orr.w	r3, r3, #2
 8021760:	6013      	str	r3, [r2, #0]
 8021762:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8021766:	9b05      	ldr	r3, [sp, #20]
 8021768:	e883 0003 	stmia.w	r3, {r0, r1}
 802176c:	a80b      	add	r0, sp, #44	; 0x2c
 802176e:	f7ee fc49 	bl	8010004 <_ZNSsD1Ev>
 8021772:	9805      	ldr	r0, [sp, #20]
 8021774:	b00d      	add	sp, #52	; 0x34
 8021776:	ecbd 8b02 	vpop	{d8}
 802177a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802177e:	f1bb 0f00 	cmp.w	fp, #0
 8021782:	bf14      	ite	ne
 8021784:	f04f 4300 	movne.w	r3, #2147483648	; 0x80000000
 8021788:	f06f 4300 	mvneq.w	r3, #2147483648	; 0x80000000
 802178c:	e7db      	b.n	8021746 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2ea>
 802178e:	bf00      	nop
 8021790:	20003bf0 	.word	0x20003bf0

08021794 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRl>:
 8021794:	b570      	push	{r4, r5, r6, lr}
 8021796:	b088      	sub	sp, #32
 8021798:	ad06      	add	r5, sp, #24
 802179a:	e885 000c 	stmia.w	r5, {r2, r3}
 802179e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80217a0:	9304      	str	r3, [sp, #16]
 80217a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80217a4:	9303      	str	r3, [sp, #12]
 80217a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80217a8:	9302      	str	r3, [sp, #8]
 80217aa:	ab0c      	add	r3, sp, #48	; 0x30
 80217ac:	4604      	mov	r4, r0
 80217ae:	460e      	mov	r6, r1
 80217b0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80217b4:	e88d 0003 	stmia.w	sp, {r0, r1}
 80217b8:	4620      	mov	r0, r4
 80217ba:	e895 000c 	ldmia.w	r5, {r2, r3}
 80217be:	4631      	mov	r1, r6
 80217c0:	f7ff fe4c 	bl	802145c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 80217c4:	4620      	mov	r0, r4
 80217c6:	b008      	add	sp, #32
 80217c8:	bd70      	pop	{r4, r5, r6, pc}

080217ca <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb>:
 80217ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80217ce:	b08f      	sub	sp, #60	; 0x3c
 80217d0:	460e      	mov	r6, r1
 80217d2:	e9dd 191a 	ldrd	r1, r9, [sp, #104]	; 0x68
 80217d6:	ad0a      	add	r5, sp, #40	; 0x28
 80217d8:	e885 000c 	stmia.w	r5, {r2, r3}
 80217dc:	68ca      	ldr	r2, [r1, #12]
 80217de:	9006      	str	r0, [sp, #24]
 80217e0:	f012 0f01 	tst.w	r2, #1
 80217e4:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
 80217e8:	a80d      	add	r0, sp, #52	; 0x34
 80217ea:	d138      	bne.n	802185e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x94>
 80217ec:	e9cd 9003 	strd	r9, r0, [sp, #12]
 80217f0:	9102      	str	r1, [sp, #8]
 80217f2:	ab18      	add	r3, sp, #96	; 0x60
 80217f4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80217f8:	e88d 0003 	stmia.w	sp, {r0, r1}
 80217fc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8021800:	ac08      	add	r4, sp, #32
 8021802:	920d      	str	r2, [sp, #52]	; 0x34
 8021804:	4631      	mov	r1, r6
 8021806:	e895 000c 	ldmia.w	r5, {r2, r3}
 802180a:	4620      	mov	r0, r4
 802180c:	f7ff fe26 	bl	802145c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIlEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 8021810:	e894 0003 	ldmia.w	r4, {r0, r1}
 8021814:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021816:	2b01      	cmp	r3, #1
 8021818:	e885 0003 	stmia.w	r5, {r0, r1}
 802181c:	d80c      	bhi.n	8021838 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x6e>
 802181e:	f003 0301 	and.w	r3, r3, #1
 8021822:	f88a 3000 	strb.w	r3, [sl]
 8021826:	e895 0003 	ldmia.w	r5, {r0, r1}
 802182a:	9b06      	ldr	r3, [sp, #24]
 802182c:	e883 0003 	stmia.w	r3, {r0, r1}
 8021830:	4618      	mov	r0, r3
 8021832:	b00f      	add	sp, #60	; 0x3c
 8021834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021838:	2301      	movs	r3, #1
 802183a:	f88a 3000 	strb.w	r3, [sl]
 802183e:	2304      	movs	r3, #4
 8021840:	f8c9 3000 	str.w	r3, [r9]
 8021844:	a918      	add	r1, sp, #96	; 0x60
 8021846:	4628      	mov	r0, r5
 8021848:	f7f4 faab 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 802184c:	2800      	cmp	r0, #0
 802184e:	d0ea      	beq.n	8021826 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x5c>
 8021850:	f8d9 3000 	ldr.w	r3, [r9]
 8021854:	f043 0302 	orr.w	r3, r3, #2
 8021858:	f8c9 3000 	str.w	r3, [r9]
 802185c:	e7e3      	b.n	8021826 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x5c>
 802185e:	316c      	adds	r1, #108	; 0x6c
 8021860:	f7fe f84c 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 8021864:	6a06      	ldr	r6, [r0, #32]
 8021866:	6984      	ldr	r4, [r0, #24]
 8021868:	fab6 f686 	clz	r6, r6
 802186c:	fab4 f484 	clz	r4, r4
 8021870:	f04f 0b01 	mov.w	fp, #1
 8021874:	4680      	mov	r8, r0
 8021876:	0976      	lsrs	r6, r6, #5
 8021878:	0964      	lsrs	r4, r4, #5
 802187a:	2700      	movs	r7, #0
 802187c:	465a      	mov	r2, fp
 802187e:	b10e      	cbz	r6, 8021884 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xba>
 8021880:	2c00      	cmp	r4, #0
 8021882:	d147      	bne.n	8021914 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x14a>
 8021884:	a918      	add	r1, sp, #96	; 0x60
 8021886:	4628      	mov	r0, r5
 8021888:	9207      	str	r2, [sp, #28]
 802188a:	f7f4 fa8a 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 802188e:	9a07      	ldr	r2, [sp, #28]
 8021890:	2800      	cmp	r0, #0
 8021892:	d151      	bne.n	8021938 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x16e>
 8021894:	4628      	mov	r0, r5
 8021896:	f7f4 fa75 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 802189a:	9a07      	ldr	r2, [sp, #28]
 802189c:	b966      	cbnz	r6, 80218b8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xee>
 802189e:	f8d8 201c 	ldr.w	r2, [r8, #28]
 80218a2:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 80218a6:	4282      	cmp	r2, r0
 80218a8:	d008      	beq.n	80218bc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xf2>
 80218aa:	b14c      	cbz	r4, 80218c0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xf6>
 80218ac:	2400      	movs	r4, #0
 80218ae:	e033      	b.n	8021918 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x14e>
 80218b0:	2101      	movs	r1, #1
 80218b2:	4622      	mov	r2, r4
 80218b4:	460c      	mov	r4, r1
 80218b6:	e7e2      	b.n	802187e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xb4>
 80218b8:	2a00      	cmp	r2, #0
 80218ba:	d0f6      	beq.n	80218aa <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xe0>
 80218bc:	bb04      	cbnz	r4, 8021900 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x136>
 80218be:	2401      	movs	r4, #1
 80218c0:	f8d8 3014 	ldr.w	r3, [r8, #20]
 80218c4:	f853 3027 	ldr.w	r3, [r3, r7, lsl #2]
 80218c8:	4283      	cmp	r3, r0
 80218ca:	d01e      	beq.n	802190a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x140>
 80218cc:	2e00      	cmp	r6, #0
 80218ce:	d150      	bne.n	8021972 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x1a8>
 80218d0:	2c00      	cmp	r4, #0
 80218d2:	d047      	beq.n	8021964 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x19a>
 80218d4:	46b3      	mov	fp, r6
 80218d6:	4628      	mov	r0, r5
 80218d8:	3701      	adds	r7, #1
 80218da:	f7fd fd13 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 80218de:	b1bc      	cbz	r4, 8021910 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x146>
 80218e0:	f8d8 6020 	ldr.w	r6, [r8, #32]
 80218e4:	42be      	cmp	r6, r7
 80218e6:	bf8c      	ite	hi
 80218e8:	2600      	movhi	r6, #0
 80218ea:	2601      	movls	r6, #1
 80218ec:	f1bb 0f00 	cmp.w	fp, #0
 80218f0:	d0de      	beq.n	80218b0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xe6>
 80218f2:	f8d8 1018 	ldr.w	r1, [r8, #24]
 80218f6:	42b9      	cmp	r1, r7
 80218f8:	bf8c      	ite	hi
 80218fa:	2100      	movhi	r1, #0
 80218fc:	2101      	movls	r1, #1
 80218fe:	e7d8      	b.n	80218b2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0xe8>
 8021900:	f1bb 0f00 	cmp.w	fp, #0
 8021904:	d0e2      	beq.n	80218cc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x102>
 8021906:	465c      	mov	r4, fp
 8021908:	e7e5      	b.n	80218d6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x10c>
 802190a:	f04f 0b01 	mov.w	fp, #1
 802190e:	e7e2      	b.n	80218d6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x10c>
 8021910:	2601      	movs	r6, #1
 8021912:	e7eb      	b.n	80218ec <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x122>
 8021914:	2400      	movs	r4, #0
 8021916:	b99a      	cbnz	r2, 8021940 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x176>
 8021918:	f1bb 0f00 	cmp.w	fp, #0
 802191c:	d022      	beq.n	8021964 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x19a>
 802191e:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8021922:	42bb      	cmp	r3, r7
 8021924:	d11e      	bne.n	8021964 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x19a>
 8021926:	b1ef      	cbz	r7, 8021964 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x19a>
 8021928:	2301      	movs	r3, #1
 802192a:	f88a 3000 	strb.w	r3, [sl]
 802192e:	2c00      	cmp	r4, #0
 8021930:	bf14      	ite	ne
 8021932:	2302      	movne	r3, #2
 8021934:	2300      	moveq	r3, #0
 8021936:	e78f      	b.n	8021858 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x8e>
 8021938:	4604      	mov	r4, r0
 802193a:	e7ec      	b.n	8021916 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x14c>
 802193c:	2400      	movs	r4, #0
 802193e:	46a3      	mov	fp, r4
 8021940:	f8d8 2020 	ldr.w	r2, [r8, #32]
 8021944:	42ba      	cmp	r2, r7
 8021946:	d1e7      	bne.n	8021918 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x14e>
 8021948:	2f00      	cmp	r7, #0
 802194a:	d0e5      	beq.n	8021918 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x14e>
 802194c:	2200      	movs	r2, #0
 802194e:	f88a 2000 	strb.w	r2, [sl]
 8021952:	f1bb 0f00 	cmp.w	fp, #0
 8021956:	d0ea      	beq.n	802192e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x164>
 8021958:	f8d8 3018 	ldr.w	r3, [r8, #24]
 802195c:	42bb      	cmp	r3, r7
 802195e:	d1e6      	bne.n	802192e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x164>
 8021960:	2304      	movs	r3, #4
 8021962:	e779      	b.n	8021858 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x8e>
 8021964:	2300      	movs	r3, #0
 8021966:	f88a 3000 	strb.w	r3, [sl]
 802196a:	2c00      	cmp	r4, #0
 802196c:	d0f8      	beq.n	8021960 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x196>
 802196e:	2306      	movs	r3, #6
 8021970:	e772      	b.n	8021858 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x8e>
 8021972:	2c00      	cmp	r4, #0
 8021974:	d1e2      	bne.n	802193c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x172>
 8021976:	f88a 4000 	strb.w	r4, [sl]
 802197a:	e7f1      	b.n	8021960 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRb+0x196>

0802197c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>:
 802197c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021980:	ed2d 8b02 	vpush	{d8}
 8021984:	b08b      	sub	sp, #44	; 0x2c
 8021986:	f10d 0a10 	add.w	sl, sp, #16
 802198a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802198c:	9003      	str	r0, [sp, #12]
 802198e:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 8021992:	a807      	add	r0, sp, #28
 8021994:	e88a 000c 	stmia.w	sl, {r2, r3}
 8021998:	f7fd ffb0 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 802199c:	68e4      	ldr	r4, [r4, #12]
 802199e:	f004 044a 	and.w	r4, r4, #74	; 0x4a
 80219a2:	2300      	movs	r3, #0
 80219a4:	2c40      	cmp	r4, #64	; 0x40
 80219a6:	4605      	mov	r5, r0
 80219a8:	9308      	str	r3, [sp, #32]
 80219aa:	d04c      	beq.n	8021a46 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xca>
 80219ac:	2c08      	cmp	r4, #8
 80219ae:	bf0c      	ite	eq
 80219b0:	f04f 0810 	moveq.w	r8, #16
 80219b4:	f04f 080a 	movne.w	r8, #10
 80219b8:	a916      	add	r1, sp, #88	; 0x58
 80219ba:	4650      	mov	r0, sl
 80219bc:	f7f4 f9f1 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 80219c0:	4681      	mov	r9, r0
 80219c2:	2800      	cmp	r0, #0
 80219c4:	d178      	bne.n	8021ab8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x13c>
 80219c6:	4650      	mov	r0, sl
 80219c8:	f7f4 f9dc 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80219cc:	f8d5 30bc 	ldr.w	r3, [r5, #188]	; 0xbc
 80219d0:	9008      	str	r0, [sp, #32]
 80219d2:	4283      	cmp	r3, r0
 80219d4:	bf0c      	ite	eq
 80219d6:	2301      	moveq	r3, #1
 80219d8:	2300      	movne	r3, #0
 80219da:	9300      	str	r3, [sp, #0]
 80219dc:	d003      	beq.n	80219e6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x6a>
 80219de:	f8d5 30c0 	ldr.w	r3, [r5, #192]	; 0xc0
 80219e2:	4283      	cmp	r3, r0
 80219e4:	d119      	bne.n	8021a1a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9e>
 80219e6:	7c2b      	ldrb	r3, [r5, #16]
 80219e8:	b113      	cbz	r3, 80219f0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x74>
 80219ea:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80219ec:	4283      	cmp	r3, r0
 80219ee:	d014      	beq.n	8021a1a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9e>
 80219f0:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80219f2:	4283      	cmp	r3, r0
 80219f4:	d011      	beq.n	8021a1a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9e>
 80219f6:	9804      	ldr	r0, [sp, #16]
 80219f8:	f7fc fd58 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 80219fc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8021a00:	a916      	add	r1, sp, #88	; 0x58
 8021a02:	4650      	mov	r0, sl
 8021a04:	9305      	str	r3, [sp, #20]
 8021a06:	f7f4 f9df 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8021a0a:	4606      	mov	r6, r0
 8021a0c:	2800      	cmp	r0, #0
 8021a0e:	f000 8097 	beq.w	8021b40 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1c4>
 8021a12:	4650      	mov	r0, sl
 8021a14:	f7f4 f9b6 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8021a18:	9008      	str	r0, [sp, #32]
 8021a1a:	2600      	movs	r6, #0
 8021a1c:	4637      	mov	r7, r6
 8021a1e:	7c2a      	ldrb	r2, [r5, #16]
 8021a20:	9b08      	ldr	r3, [sp, #32]
 8021a22:	b112      	cbz	r2, 8021a2a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xae>
 8021a24:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 8021a26:	429a      	cmp	r2, r3
 8021a28:	d04a      	beq.n	8021ac0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 8021a2a:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8021a2c:	429a      	cmp	r2, r3
 8021a2e:	d047      	beq.n	8021ac0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 8021a30:	f8d5 20cc 	ldr.w	r2, [r5, #204]	; 0xcc
 8021a34:	429a      	cmp	r2, r3
 8021a36:	d110      	bne.n	8021a5a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xde>
 8021a38:	b146      	cbz	r6, 8021a4c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd0>
 8021a3a:	f1b8 0f0a 	cmp.w	r8, #10
 8021a3e:	d10d      	bne.n	8021a5c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe0>
 8021a40:	b944      	cbnz	r4, 8021a54 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd8>
 8021a42:	4627      	mov	r7, r4
 8021a44:	e02e      	b.n	8021aa4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x128>
 8021a46:	f04f 0808 	mov.w	r8, #8
 8021a4a:	e7b5      	b.n	80219b8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x3c>
 8021a4c:	b344      	cbz	r4, 8021aa0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x124>
 8021a4e:	f1b8 0f08 	cmp.w	r8, #8
 8021a52:	d02a      	beq.n	8021aaa <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x12e>
 8021a54:	3701      	adds	r7, #1
 8021a56:	2601      	movs	r6, #1
 8021a58:	e00e      	b.n	8021a78 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xfc>
 8021a5a:	b1fe      	cbz	r6, 8021a9c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x120>
 8021a5c:	f8d5 20c4 	ldr.w	r2, [r5, #196]	; 0xc4
 8021a60:	429a      	cmp	r2, r3
 8021a62:	d003      	beq.n	8021a6c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf0>
 8021a64:	f8d5 20c8 	ldr.w	r2, [r5, #200]	; 0xc8
 8021a68:	429a      	cmp	r2, r3
 8021a6a:	d16d      	bne.n	8021b48 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1cc>
 8021a6c:	b1fc      	cbz	r4, 8021aae <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x132>
 8021a6e:	f1b8 0f10 	cmp.w	r8, #16
 8021a72:	d16e      	bne.n	8021b52 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1d6>
 8021a74:	2700      	movs	r7, #0
 8021a76:	463e      	mov	r6, r7
 8021a78:	9804      	ldr	r0, [sp, #16]
 8021a7a:	f7fc fd17 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8021a7e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8021a82:	a916      	add	r1, sp, #88	; 0x58
 8021a84:	4650      	mov	r0, sl
 8021a86:	9305      	str	r3, [sp, #20]
 8021a88:	f7f4 f99e 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8021a8c:	2800      	cmp	r0, #0
 8021a8e:	d05d      	beq.n	8021b4c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1d0>
 8021a90:	4650      	mov	r0, sl
 8021a92:	f7f4 f977 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8021a96:	9008      	str	r0, [sp, #32]
 8021a98:	2e00      	cmp	r6, #0
 8021a9a:	d1c0      	bne.n	8021a1e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa2>
 8021a9c:	46b1      	mov	r9, r6
 8021a9e:	e00f      	b.n	8021ac0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 8021aa0:	4627      	mov	r7, r4
 8021aa2:	2601      	movs	r6, #1
 8021aa4:	f04f 0808 	mov.w	r8, #8
 8021aa8:	e7e6      	b.n	8021a78 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xfc>
 8021aaa:	4637      	mov	r7, r6
 8021aac:	e7d3      	b.n	8021a56 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xda>
 8021aae:	4627      	mov	r7, r4
 8021ab0:	4626      	mov	r6, r4
 8021ab2:	f04f 0810 	mov.w	r8, #16
 8021ab6:	e7df      	b.n	8021a78 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xfc>
 8021ab8:	2300      	movs	r3, #0
 8021aba:	9300      	str	r3, [sp, #0]
 8021abc:	461f      	mov	r7, r3
 8021abe:	461e      	mov	r6, r3
 8021ac0:	f1b8 0f10 	cmp.w	r8, #16
 8021ac4:	bf14      	ite	ne
 8021ac6:	4643      	movne	r3, r8
 8021ac8:	2316      	moveq	r3, #22
 8021aca:	ee08 3a10 	vmov	s16, r3
 8021ace:	4b74      	ldr	r3, [pc, #464]	; (8021ca0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x324>)
 8021ad0:	9309      	str	r3, [sp, #36]	; 0x24
 8021ad2:	7c2b      	ldrb	r3, [r5, #16]
 8021ad4:	b11b      	cbz	r3, 8021ade <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x162>
 8021ad6:	2120      	movs	r1, #32
 8021ad8:	a809      	add	r0, sp, #36	; 0x24
 8021ada:	f7ee fbda 	bl	8010292 <_ZNSs7reserveEj>
 8021ade:	f895 b124 	ldrb.w	fp, [r5, #292]	; 0x124
 8021ae2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8021ae6:	fbb3 f3f8 	udiv	r3, r3, r8
 8021aea:	9301      	str	r3, [sp, #4]
 8021aec:	f1bb 0f00 	cmp.w	fp, #0
 8021af0:	d05c      	beq.n	8021bac <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x230>
 8021af2:	f105 03cc 	add.w	r3, r5, #204	; 0xcc
 8021af6:	2400      	movs	r4, #0
 8021af8:	9302      	str	r3, [sp, #8]
 8021afa:	46a2      	mov	sl, r4
 8021afc:	f1b9 0f00 	cmp.w	r9, #0
 8021b00:	d12d      	bne.n	8021b5e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 8021b02:	7c2b      	ldrb	r3, [r5, #16]
 8021b04:	9a08      	ldr	r2, [sp, #32]
 8021b06:	2b00      	cmp	r3, #0
 8021b08:	f000 8083 	beq.w	8021c12 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x296>
 8021b0c:	6aa9      	ldr	r1, [r5, #40]	; 0x28
 8021b0e:	428a      	cmp	r2, r1
 8021b10:	d17f      	bne.n	8021c12 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x296>
 8021b12:	b32f      	cbz	r7, 8021b60 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e4>
 8021b14:	b2f9      	uxtb	r1, r7
 8021b16:	a809      	add	r0, sp, #36	; 0x24
 8021b18:	f7ee fc89 	bl	801042e <_ZNSs9push_backEc>
 8021b1c:	2700      	movs	r7, #0
 8021b1e:	9804      	ldr	r0, [sp, #16]
 8021b20:	f7fc fcc4 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8021b24:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8021b28:	a916      	add	r1, sp, #88	; 0x58
 8021b2a:	a804      	add	r0, sp, #16
 8021b2c:	9305      	str	r3, [sp, #20]
 8021b2e:	f7f4 f94b 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8021b32:	2800      	cmp	r0, #0
 8021b34:	d06b      	beq.n	8021c0e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x292>
 8021b36:	a804      	add	r0, sp, #16
 8021b38:	f7f4 f924 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8021b3c:	9008      	str	r0, [sp, #32]
 8021b3e:	e7e0      	b.n	8021b02 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x186>
 8021b40:	f04f 0901 	mov.w	r9, #1
 8021b44:	4607      	mov	r7, r0
 8021b46:	e7bb      	b.n	8021ac0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 8021b48:	2601      	movs	r6, #1
 8021b4a:	e7b9      	b.n	8021ac0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 8021b4c:	f04f 0901 	mov.w	r9, #1
 8021b50:	e7b6      	b.n	8021ac0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 8021b52:	ee08 8a10 	vmov	s16, r8
 8021b56:	2601      	movs	r6, #1
 8021b58:	e7b9      	b.n	8021ace <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x152>
 8021b5a:	f04f 0901 	mov.w	r9, #1
 8021b5e:	2300      	movs	r3, #0
 8021b60:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021b62:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 8021b66:	b172      	cbz	r2, 8021b86 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20a>
 8021b68:	b2f9      	uxtb	r1, r7
 8021b6a:	a809      	add	r0, sp, #36	; 0x24
 8021b6c:	9301      	str	r3, [sp, #4]
 8021b6e:	f7ee fc5e 	bl	801042e <_ZNSs9push_backEc>
 8021b72:	e9d5 0102 	ldrd	r0, r1, [r5, #8]
 8021b76:	aa09      	add	r2, sp, #36	; 0x24
 8021b78:	f003 f818 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 8021b7c:	9b01      	ldr	r3, [sp, #4]
 8021b7e:	b910      	cbnz	r0, 8021b86 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20a>
 8021b80:	9919      	ldr	r1, [sp, #100]	; 0x64
 8021b82:	2204      	movs	r2, #4
 8021b84:	600a      	str	r2, [r1, #0]
 8021b86:	b92f      	cbnz	r7, 8021b94 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x218>
 8021b88:	b926      	cbnz	r6, 8021b94 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x218>
 8021b8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021b8c:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 8021b90:	2a00      	cmp	r2, #0
 8021b92:	d064      	beq.n	8021c5e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2e2>
 8021b94:	2b00      	cmp	r3, #0
 8021b96:	d162      	bne.n	8021c5e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2e2>
 8021b98:	f1ba 0f00 	cmp.w	sl, #0
 8021b9c:	d17c      	bne.n	8021c98 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x31c>
 8021b9e:	9b00      	ldr	r3, [sp, #0]
 8021ba0:	b10b      	cbz	r3, 8021ba6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x22a>
 8021ba2:	4264      	negs	r4, r4
 8021ba4:	b2a4      	uxth	r4, r4
 8021ba6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8021ba8:	801c      	strh	r4, [r3, #0]
 8021baa:	e05e      	b.n	8021c6a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2ee>
 8021bac:	46da      	mov	sl, fp
 8021bae:	465c      	mov	r4, fp
 8021bb0:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
 8021bb4:	f1b9 0f00 	cmp.w	r9, #0
 8021bb8:	d1d1      	bne.n	8021b5e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 8021bba:	9908      	ldr	r1, [sp, #32]
 8021bbc:	ee18 0a10 	vmov	r0, s16
 8021bc0:	f7fc fc7e 	bl	801e4c0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>
 8021bc4:	1c43      	adds	r3, r0, #1
 8021bc6:	d0ca      	beq.n	8021b5e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 8021bc8:	9b01      	ldr	r3, [sp, #4]
 8021bca:	429c      	cmp	r4, r3
 8021bcc:	d81c      	bhi.n	8021c08 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x28c>
 8021bce:	fb18 f304 	smulbb	r3, r8, r4
 8021bd2:	b29c      	uxth	r4, r3
 8021bd4:	f5c0 437f 	rsb	r3, r0, #65280	; 0xff00
 8021bd8:	33ff      	adds	r3, #255	; 0xff
 8021bda:	429c      	cmp	r4, r3
 8021bdc:	bfc8      	it	gt
 8021bde:	f04a 0a01 	orrgt.w	sl, sl, #1
 8021be2:	4404      	add	r4, r0
 8021be4:	b2a4      	uxth	r4, r4
 8021be6:	3701      	adds	r7, #1
 8021be8:	9804      	ldr	r0, [sp, #16]
 8021bea:	f7fc fc5f 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8021bee:	a916      	add	r1, sp, #88	; 0x58
 8021bf0:	a804      	add	r0, sp, #16
 8021bf2:	f8cd b014 	str.w	fp, [sp, #20]
 8021bf6:	f7f4 f8e7 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8021bfa:	2800      	cmp	r0, #0
 8021bfc:	d0ad      	beq.n	8021b5a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1de>
 8021bfe:	a804      	add	r0, sp, #16
 8021c00:	f7f4 f8c0 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8021c04:	9008      	str	r0, [sp, #32]
 8021c06:	e7d8      	b.n	8021bba <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x23e>
 8021c08:	f04f 0a01 	mov.w	sl, #1
 8021c0c:	e7ec      	b.n	8021be8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x26c>
 8021c0e:	46d9      	mov	r9, fp
 8021c10:	e774      	b.n	8021afc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x180>
 8021c12:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8021c14:	429a      	cmp	r2, r3
 8021c16:	d0a2      	beq.n	8021b5e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 8021c18:	ee18 1a10 	vmov	r1, s16
 8021c1c:	9802      	ldr	r0, [sp, #8]
 8021c1e:	aa08      	add	r2, sp, #32
 8021c20:	f7ee fc7b 	bl	801051a <_ZNSt11char_traitsIwE4findEPKwjRS1_>
 8021c24:	b1c8      	cbz	r0, 8021c5a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2de>
 8021c26:	9b02      	ldr	r3, [sp, #8]
 8021c28:	9a01      	ldr	r2, [sp, #4]
 8021c2a:	1ac0      	subs	r0, r0, r3
 8021c2c:	283c      	cmp	r0, #60	; 0x3c
 8021c2e:	ea4f 03a0 	mov.w	r3, r0, asr #2
 8021c32:	bfc8      	it	gt
 8021c34:	3b06      	subgt	r3, #6
 8021c36:	4294      	cmp	r4, r2
 8021c38:	d80d      	bhi.n	8021c56 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2da>
 8021c3a:	fb18 f404 	smulbb	r4, r8, r4
 8021c3e:	f5c3 427f 	rsb	r2, r3, #65280	; 0xff00
 8021c42:	b2a4      	uxth	r4, r4
 8021c44:	32ff      	adds	r2, #255	; 0xff
 8021c46:	4294      	cmp	r4, r2
 8021c48:	bfc8      	it	gt
 8021c4a:	f04a 0a01 	orrgt.w	sl, sl, #1
 8021c4e:	441c      	add	r4, r3
 8021c50:	b2a4      	uxth	r4, r4
 8021c52:	3701      	adds	r7, #1
 8021c54:	e763      	b.n	8021b1e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1a2>
 8021c56:	46da      	mov	sl, fp
 8021c58:	e761      	b.n	8021b1e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1a2>
 8021c5a:	4603      	mov	r3, r0
 8021c5c:	e780      	b.n	8021b60 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e4>
 8021c5e:	2300      	movs	r3, #0
 8021c60:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8021c62:	8013      	strh	r3, [r2, #0]
 8021c64:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8021c66:	2304      	movs	r3, #4
 8021c68:	6013      	str	r3, [r2, #0]
 8021c6a:	f1b9 0f00 	cmp.w	r9, #0
 8021c6e:	d005      	beq.n	8021c7c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x300>
 8021c70:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021c72:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8021c74:	681b      	ldr	r3, [r3, #0]
 8021c76:	f043 0302 	orr.w	r3, r3, #2
 8021c7a:	6013      	str	r3, [r2, #0]
 8021c7c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8021c80:	9b03      	ldr	r3, [sp, #12]
 8021c82:	e883 0003 	stmia.w	r3, {r0, r1}
 8021c86:	a809      	add	r0, sp, #36	; 0x24
 8021c88:	f7ee f9bc 	bl	8010004 <_ZNSsD1Ev>
 8021c8c:	9803      	ldr	r0, [sp, #12]
 8021c8e:	b00b      	add	sp, #44	; 0x2c
 8021c90:	ecbd 8b02 	vpop	{d8}
 8021c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021c98:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8021c9c:	e7e0      	b.n	8021c60 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2e4>
 8021c9e:	bf00      	nop
 8021ca0:	20003bf0 	.word	0x20003bf0

08021ca4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRt>:
 8021ca4:	b570      	push	{r4, r5, r6, lr}
 8021ca6:	b088      	sub	sp, #32
 8021ca8:	ad06      	add	r5, sp, #24
 8021caa:	e885 000c 	stmia.w	r5, {r2, r3}
 8021cae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021cb0:	9304      	str	r3, [sp, #16]
 8021cb2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021cb4:	9303      	str	r3, [sp, #12]
 8021cb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021cb8:	9302      	str	r3, [sp, #8]
 8021cba:	ab0c      	add	r3, sp, #48	; 0x30
 8021cbc:	4604      	mov	r4, r0
 8021cbe:	460e      	mov	r6, r1
 8021cc0:	e893 0003 	ldmia.w	r3, {r0, r1}
 8021cc4:	e88d 0003 	stmia.w	sp, {r0, r1}
 8021cc8:	4620      	mov	r0, r4
 8021cca:	e895 000c 	ldmia.w	r5, {r2, r3}
 8021cce:	4631      	mov	r1, r6
 8021cd0:	f7ff fe54 	bl	802197c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intItEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 8021cd4:	4620      	mov	r0, r4
 8021cd6:	b008      	add	sp, #32
 8021cd8:	bd70      	pop	{r4, r5, r6, pc}
	...

08021cdc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>:
 8021cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ce0:	ed2d 8b02 	vpush	{d8}
 8021ce4:	b08d      	sub	sp, #52	; 0x34
 8021ce6:	f10d 0918 	add.w	r9, sp, #24
 8021cea:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8021cec:	9005      	str	r0, [sp, #20]
 8021cee:	f105 016c 	add.w	r1, r5, #108	; 0x6c
 8021cf2:	a809      	add	r0, sp, #36	; 0x24
 8021cf4:	e889 000c 	stmia.w	r9, {r2, r3}
 8021cf8:	f7fd fe00 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 8021cfc:	68ee      	ldr	r6, [r5, #12]
 8021cfe:	f006 064a 	and.w	r6, r6, #74	; 0x4a
 8021d02:	2300      	movs	r3, #0
 8021d04:	2e40      	cmp	r6, #64	; 0x40
 8021d06:	4604      	mov	r4, r0
 8021d08:	930a      	str	r3, [sp, #40]	; 0x28
 8021d0a:	d049      	beq.n	8021da0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xc4>
 8021d0c:	2e08      	cmp	r6, #8
 8021d0e:	bf0c      	ite	eq
 8021d10:	2710      	moveq	r7, #16
 8021d12:	270a      	movne	r7, #10
 8021d14:	a918      	add	r1, sp, #96	; 0x60
 8021d16:	4648      	mov	r0, r9
 8021d18:	f7f4 f843 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8021d1c:	4680      	mov	r8, r0
 8021d1e:	2800      	cmp	r0, #0
 8021d20:	d174      	bne.n	8021e0c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x130>
 8021d22:	4648      	mov	r0, r9
 8021d24:	f7f4 f82e 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8021d28:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8021d2c:	900a      	str	r0, [sp, #40]	; 0x28
 8021d2e:	4283      	cmp	r3, r0
 8021d30:	bf0c      	ite	eq
 8021d32:	2301      	moveq	r3, #1
 8021d34:	2300      	movne	r3, #0
 8021d36:	9302      	str	r3, [sp, #8]
 8021d38:	d003      	beq.n	8021d42 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x66>
 8021d3a:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8021d3e:	4283      	cmp	r3, r0
 8021d40:	d119      	bne.n	8021d76 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9a>
 8021d42:	7c23      	ldrb	r3, [r4, #16]
 8021d44:	b113      	cbz	r3, 8021d4c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x70>
 8021d46:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8021d48:	4283      	cmp	r3, r0
 8021d4a:	d014      	beq.n	8021d76 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9a>
 8021d4c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021d4e:	4283      	cmp	r3, r0
 8021d50:	d011      	beq.n	8021d76 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9a>
 8021d52:	9806      	ldr	r0, [sp, #24]
 8021d54:	f7fc fbaa 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8021d58:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8021d5c:	a918      	add	r1, sp, #96	; 0x60
 8021d5e:	4648      	mov	r0, r9
 8021d60:	9307      	str	r3, [sp, #28]
 8021d62:	f7f4 f831 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8021d66:	4605      	mov	r5, r0
 8021d68:	2800      	cmp	r0, #0
 8021d6a:	f000 8099 	beq.w	8021ea0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1c4>
 8021d6e:	4648      	mov	r0, r9
 8021d70:	f7f4 f808 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8021d74:	900a      	str	r0, [sp, #40]	; 0x28
 8021d76:	2500      	movs	r5, #0
 8021d78:	46aa      	mov	sl, r5
 8021d7a:	7c21      	ldrb	r1, [r4, #16]
 8021d7c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021d7e:	b111      	cbz	r1, 8021d86 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xaa>
 8021d80:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8021d82:	4291      	cmp	r1, r2
 8021d84:	d046      	beq.n	8021e14 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 8021d86:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8021d88:	4291      	cmp	r1, r2
 8021d8a:	d043      	beq.n	8021e14 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 8021d8c:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
 8021d90:	4291      	cmp	r1, r2
 8021d92:	d10e      	bne.n	8021db2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd6>
 8021d94:	b135      	cbz	r5, 8021da4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xc8>
 8021d96:	2f0a      	cmp	r7, #10
 8021d98:	d10c      	bne.n	8021db4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd8>
 8021d9a:	b936      	cbnz	r6, 8021daa <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xce>
 8021d9c:	46b2      	mov	sl, r6
 8021d9e:	e02d      	b.n	8021dfc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x120>
 8021da0:	2708      	movs	r7, #8
 8021da2:	e7b7      	b.n	8021d14 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x38>
 8021da4:	b346      	cbz	r6, 8021df8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x11c>
 8021da6:	2f08      	cmp	r7, #8
 8021da8:	d02a      	beq.n	8021e00 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x124>
 8021daa:	f10a 0a01 	add.w	sl, sl, #1
 8021dae:	2501      	movs	r5, #1
 8021db0:	e00e      	b.n	8021dd0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf4>
 8021db2:	b1fd      	cbz	r5, 8021df4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x118>
 8021db4:	f8d4 10c4 	ldr.w	r1, [r4, #196]	; 0xc4
 8021db8:	4291      	cmp	r1, r2
 8021dba:	d003      	beq.n	8021dc4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe8>
 8021dbc:	f8d4 10c8 	ldr.w	r1, [r4, #200]	; 0xc8
 8021dc0:	4291      	cmp	r1, r2
 8021dc2:	d171      	bne.n	8021ea8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1cc>
 8021dc4:	b1f6      	cbz	r6, 8021e04 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x128>
 8021dc6:	2f10      	cmp	r7, #16
 8021dc8:	d173      	bne.n	8021eb2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1d6>
 8021dca:	f04f 0a00 	mov.w	sl, #0
 8021dce:	4655      	mov	r5, sl
 8021dd0:	9806      	ldr	r0, [sp, #24]
 8021dd2:	f7fc fb6b 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8021dd6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8021dda:	a918      	add	r1, sp, #96	; 0x60
 8021ddc:	4648      	mov	r0, r9
 8021dde:	9207      	str	r2, [sp, #28]
 8021de0:	f7f3 fff2 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8021de4:	2800      	cmp	r0, #0
 8021de6:	d061      	beq.n	8021eac <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1d0>
 8021de8:	4648      	mov	r0, r9
 8021dea:	f7f3 ffcb 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8021dee:	900a      	str	r0, [sp, #40]	; 0x28
 8021df0:	2d00      	cmp	r5, #0
 8021df2:	d1c2      	bne.n	8021d7a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9e>
 8021df4:	46a8      	mov	r8, r5
 8021df6:	e00d      	b.n	8021e14 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 8021df8:	46b2      	mov	sl, r6
 8021dfa:	2501      	movs	r5, #1
 8021dfc:	2708      	movs	r7, #8
 8021dfe:	e7e7      	b.n	8021dd0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf4>
 8021e00:	46aa      	mov	sl, r5
 8021e02:	e7d4      	b.n	8021dae <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd2>
 8021e04:	46b2      	mov	sl, r6
 8021e06:	4635      	mov	r5, r6
 8021e08:	2710      	movs	r7, #16
 8021e0a:	e7e1      	b.n	8021dd0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf4>
 8021e0c:	2300      	movs	r3, #0
 8021e0e:	9302      	str	r3, [sp, #8]
 8021e10:	469a      	mov	sl, r3
 8021e12:	461d      	mov	r5, r3
 8021e14:	2f10      	cmp	r7, #16
 8021e16:	bf14      	ite	ne
 8021e18:	463b      	movne	r3, r7
 8021e1a:	2316      	moveq	r3, #22
 8021e1c:	ee08 3a10 	vmov	s16, r3
 8021e20:	4a74      	ldr	r2, [pc, #464]	; (8021ff4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x318>)
 8021e22:	920b      	str	r2, [sp, #44]	; 0x2c
 8021e24:	7c22      	ldrb	r2, [r4, #16]
 8021e26:	b11a      	cbz	r2, 8021e30 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x154>
 8021e28:	2120      	movs	r1, #32
 8021e2a:	a80b      	add	r0, sp, #44	; 0x2c
 8021e2c:	f7ee fa31 	bl	8010292 <_ZNSs7reserveEj>
 8021e30:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
 8021e34:	fbbb f3f7 	udiv	r3, fp, r7
 8021e38:	9303      	str	r3, [sp, #12]
 8021e3a:	f894 3124 	ldrb.w	r3, [r4, #292]	; 0x124
 8021e3e:	9301      	str	r3, [sp, #4]
 8021e40:	2b00      	cmp	r3, #0
 8021e42:	d065      	beq.n	8021f10 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x234>
 8021e44:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
 8021e48:	2600      	movs	r6, #0
 8021e4a:	9304      	str	r3, [sp, #16]
 8021e4c:	46b1      	mov	r9, r6
 8021e4e:	f1b8 0f00 	cmp.w	r8, #0
 8021e52:	d134      	bne.n	8021ebe <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 8021e54:	f894 b010 	ldrb.w	fp, [r4, #16]
 8021e58:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021e5a:	f1bb 0f00 	cmp.w	fp, #0
 8021e5e:	f000 8086 	beq.w	8021f6e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x292>
 8021e62:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8021e64:	428a      	cmp	r2, r1
 8021e66:	f040 8082 	bne.w	8021f6e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x292>
 8021e6a:	f1ba 0f00 	cmp.w	sl, #0
 8021e6e:	d028      	beq.n	8021ec2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e6>
 8021e70:	fa5f f18a 	uxtb.w	r1, sl
 8021e74:	a80b      	add	r0, sp, #44	; 0x2c
 8021e76:	f7ee fada 	bl	801042e <_ZNSs9push_backEc>
 8021e7a:	f04f 0a00 	mov.w	sl, #0
 8021e7e:	9806      	ldr	r0, [sp, #24]
 8021e80:	f7fc fb14 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8021e84:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8021e88:	a918      	add	r1, sp, #96	; 0x60
 8021e8a:	a806      	add	r0, sp, #24
 8021e8c:	9207      	str	r2, [sp, #28]
 8021e8e:	f7f3 ff9b 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8021e92:	2800      	cmp	r0, #0
 8021e94:	d068      	beq.n	8021f68 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x28c>
 8021e96:	a806      	add	r0, sp, #24
 8021e98:	f7f3 ff74 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8021e9c:	900a      	str	r0, [sp, #40]	; 0x28
 8021e9e:	e7d9      	b.n	8021e54 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x178>
 8021ea0:	f04f 0801 	mov.w	r8, #1
 8021ea4:	4682      	mov	sl, r0
 8021ea6:	e7b5      	b.n	8021e14 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 8021ea8:	2501      	movs	r5, #1
 8021eaa:	e7b3      	b.n	8021e14 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 8021eac:	f04f 0801 	mov.w	r8, #1
 8021eb0:	e7b0      	b.n	8021e14 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 8021eb2:	ee08 7a10 	vmov	s16, r7
 8021eb6:	2501      	movs	r5, #1
 8021eb8:	e7b2      	b.n	8021e20 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 8021eba:	f04f 0801 	mov.w	r8, #1
 8021ebe:	f04f 0b00 	mov.w	fp, #0
 8021ec2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021ec4:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 8021ec8:	b16a      	cbz	r2, 8021ee6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20a>
 8021eca:	fa5f f18a 	uxtb.w	r1, sl
 8021ece:	a80b      	add	r0, sp, #44	; 0x2c
 8021ed0:	f7ee faad 	bl	801042e <_ZNSs9push_backEc>
 8021ed4:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 8021ed8:	aa0b      	add	r2, sp, #44	; 0x2c
 8021eda:	f002 fe67 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 8021ede:	b910      	cbnz	r0, 8021ee6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20a>
 8021ee0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021ee2:	2204      	movs	r2, #4
 8021ee4:	601a      	str	r2, [r3, #0]
 8021ee6:	f1ba 0f00 	cmp.w	sl, #0
 8021eea:	d105      	bne.n	8021ef8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x21c>
 8021eec:	b925      	cbnz	r5, 8021ef8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x21c>
 8021eee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021ef0:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 8021ef4:	2b00      	cmp	r3, #0
 8021ef6:	d05d      	beq.n	8021fb4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2d8>
 8021ef8:	f1bb 0f00 	cmp.w	fp, #0
 8021efc:	d15a      	bne.n	8021fb4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2d8>
 8021efe:	f1b9 0f00 	cmp.w	r9, #0
 8021f02:	d174      	bne.n	8021fee <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x312>
 8021f04:	9b02      	ldr	r3, [sp, #8]
 8021f06:	b103      	cbz	r3, 8021f0a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x22e>
 8021f08:	4276      	negs	r6, r6
 8021f0a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021f0c:	601e      	str	r6, [r3, #0]
 8021f0e:	e057      	b.n	8021fc0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2e4>
 8021f10:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8021f14:	464e      	mov	r6, r9
 8021f16:	f1b8 0f00 	cmp.w	r8, #0
 8021f1a:	d1d0      	bne.n	8021ebe <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 8021f1c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021f1e:	ee18 0a10 	vmov	r0, s16
 8021f22:	f7fc facd 	bl	801e4c0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>
 8021f26:	1c43      	adds	r3, r0, #1
 8021f28:	d0c9      	beq.n	8021ebe <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 8021f2a:	9b03      	ldr	r3, [sp, #12]
 8021f2c:	429e      	cmp	r6, r3
 8021f2e:	d818      	bhi.n	8021f62 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x286>
 8021f30:	437e      	muls	r6, r7
 8021f32:	43c2      	mvns	r2, r0
 8021f34:	42b2      	cmp	r2, r6
 8021f36:	bf38      	it	cc
 8021f38:	f049 0901 	orrcc.w	r9, r9, #1
 8021f3c:	f10a 0a01 	add.w	sl, sl, #1
 8021f40:	4406      	add	r6, r0
 8021f42:	9806      	ldr	r0, [sp, #24]
 8021f44:	f7fc fab2 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8021f48:	a918      	add	r1, sp, #96	; 0x60
 8021f4a:	a806      	add	r0, sp, #24
 8021f4c:	f8cd b01c 	str.w	fp, [sp, #28]
 8021f50:	f7f3 ff3a 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8021f54:	2800      	cmp	r0, #0
 8021f56:	d0b0      	beq.n	8021eba <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1de>
 8021f58:	a806      	add	r0, sp, #24
 8021f5a:	f7f3 ff13 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8021f5e:	900a      	str	r0, [sp, #40]	; 0x28
 8021f60:	e7dc      	b.n	8021f1c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x240>
 8021f62:	f04f 0901 	mov.w	r9, #1
 8021f66:	e7ec      	b.n	8021f42 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x266>
 8021f68:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8021f6c:	e76f      	b.n	8021e4e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x172>
 8021f6e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8021f70:	428a      	cmp	r2, r1
 8021f72:	d0a4      	beq.n	8021ebe <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 8021f74:	ee18 1a10 	vmov	r1, s16
 8021f78:	9804      	ldr	r0, [sp, #16]
 8021f7a:	aa0a      	add	r2, sp, #40	; 0x28
 8021f7c:	f7ee facd 	bl	801051a <_ZNSt11char_traitsIwE4findEPKwjRS1_>
 8021f80:	b1b0      	cbz	r0, 8021fb0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2d4>
 8021f82:	9b04      	ldr	r3, [sp, #16]
 8021f84:	1ac0      	subs	r0, r0, r3
 8021f86:	9b03      	ldr	r3, [sp, #12]
 8021f88:	283c      	cmp	r0, #60	; 0x3c
 8021f8a:	ea4f 02a0 	mov.w	r2, r0, asr #2
 8021f8e:	bfc8      	it	gt
 8021f90:	3a06      	subgt	r2, #6
 8021f92:	429e      	cmp	r6, r3
 8021f94:	d809      	bhi.n	8021faa <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2ce>
 8021f96:	437e      	muls	r6, r7
 8021f98:	43d1      	mvns	r1, r2
 8021f9a:	42b1      	cmp	r1, r6
 8021f9c:	bf38      	it	cc
 8021f9e:	f049 0901 	orrcc.w	r9, r9, #1
 8021fa2:	f10a 0a01 	add.w	sl, sl, #1
 8021fa6:	4416      	add	r6, r2
 8021fa8:	e769      	b.n	8021e7e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1a2>
 8021faa:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8021fae:	e766      	b.n	8021e7e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1a2>
 8021fb0:	4683      	mov	fp, r0
 8021fb2:	e786      	b.n	8021ec2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e6>
 8021fb4:	2300      	movs	r3, #0
 8021fb6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8021fb8:	6013      	str	r3, [r2, #0]
 8021fba:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8021fbc:	2304      	movs	r3, #4
 8021fbe:	6013      	str	r3, [r2, #0]
 8021fc0:	f1b8 0f00 	cmp.w	r8, #0
 8021fc4:	d005      	beq.n	8021fd2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f6>
 8021fc6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021fc8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8021fca:	681b      	ldr	r3, [r3, #0]
 8021fcc:	f043 0302 	orr.w	r3, r3, #2
 8021fd0:	6013      	str	r3, [r2, #0]
 8021fd2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8021fd6:	9b05      	ldr	r3, [sp, #20]
 8021fd8:	e883 0003 	stmia.w	r3, {r0, r1}
 8021fdc:	a80b      	add	r0, sp, #44	; 0x2c
 8021fde:	f7ee f811 	bl	8010004 <_ZNSsD1Ev>
 8021fe2:	9805      	ldr	r0, [sp, #20]
 8021fe4:	b00d      	add	sp, #52	; 0x34
 8021fe6:	ecbd 8b02 	vpop	{d8}
 8021fea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021fee:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8021ff2:	e7e0      	b.n	8021fb6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2da>
 8021ff4:	20003bf0 	.word	0x20003bf0

08021ff8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRj>:
 8021ff8:	b570      	push	{r4, r5, r6, lr}
 8021ffa:	b088      	sub	sp, #32
 8021ffc:	ad06      	add	r5, sp, #24
 8021ffe:	e885 000c 	stmia.w	r5, {r2, r3}
 8022002:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022004:	9304      	str	r3, [sp, #16]
 8022006:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022008:	9303      	str	r3, [sp, #12]
 802200a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802200c:	9302      	str	r3, [sp, #8]
 802200e:	ab0c      	add	r3, sp, #48	; 0x30
 8022010:	4604      	mov	r4, r0
 8022012:	460e      	mov	r6, r1
 8022014:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022018:	e88d 0003 	stmia.w	sp, {r0, r1}
 802201c:	4620      	mov	r0, r4
 802201e:	e895 000c 	ldmia.w	r5, {r2, r3}
 8022022:	4631      	mov	r1, r6
 8022024:	f7ff fe5a 	bl	8021cdc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIjEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 8022028:	4620      	mov	r0, r4
 802202a:	b008      	add	sp, #32
 802202c:	bd70      	pop	{r4, r5, r6, pc}
	...

08022030 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>:
 8022030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022034:	ed2d 8b02 	vpush	{d8}
 8022038:	b08d      	sub	sp, #52	; 0x34
 802203a:	f10d 0918 	add.w	r9, sp, #24
 802203e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8022040:	9005      	str	r0, [sp, #20]
 8022042:	f105 016c 	add.w	r1, r5, #108	; 0x6c
 8022046:	a809      	add	r0, sp, #36	; 0x24
 8022048:	e889 000c 	stmia.w	r9, {r2, r3}
 802204c:	f7fd fc56 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 8022050:	68ee      	ldr	r6, [r5, #12]
 8022052:	f006 064a 	and.w	r6, r6, #74	; 0x4a
 8022056:	2300      	movs	r3, #0
 8022058:	2e40      	cmp	r6, #64	; 0x40
 802205a:	4604      	mov	r4, r0
 802205c:	930a      	str	r3, [sp, #40]	; 0x28
 802205e:	d049      	beq.n	80220f4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xc4>
 8022060:	2e08      	cmp	r6, #8
 8022062:	bf0c      	ite	eq
 8022064:	2710      	moveq	r7, #16
 8022066:	270a      	movne	r7, #10
 8022068:	a918      	add	r1, sp, #96	; 0x60
 802206a:	4648      	mov	r0, r9
 802206c:	f7f3 fe99 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8022070:	4680      	mov	r8, r0
 8022072:	2800      	cmp	r0, #0
 8022074:	d174      	bne.n	8022160 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x130>
 8022076:	4648      	mov	r0, r9
 8022078:	f7f3 fe84 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 802207c:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8022080:	900a      	str	r0, [sp, #40]	; 0x28
 8022082:	4283      	cmp	r3, r0
 8022084:	bf0c      	ite	eq
 8022086:	2301      	moveq	r3, #1
 8022088:	2300      	movne	r3, #0
 802208a:	9302      	str	r3, [sp, #8]
 802208c:	d003      	beq.n	8022096 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x66>
 802208e:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8022092:	4283      	cmp	r3, r0
 8022094:	d119      	bne.n	80220ca <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9a>
 8022096:	7c23      	ldrb	r3, [r4, #16]
 8022098:	b113      	cbz	r3, 80220a0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x70>
 802209a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802209c:	4283      	cmp	r3, r0
 802209e:	d014      	beq.n	80220ca <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9a>
 80220a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80220a2:	4283      	cmp	r3, r0
 80220a4:	d011      	beq.n	80220ca <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9a>
 80220a6:	9806      	ldr	r0, [sp, #24]
 80220a8:	f7fc fa00 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 80220ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80220b0:	a918      	add	r1, sp, #96	; 0x60
 80220b2:	4648      	mov	r0, r9
 80220b4:	9307      	str	r3, [sp, #28]
 80220b6:	f7f3 fe87 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80220ba:	4605      	mov	r5, r0
 80220bc:	2800      	cmp	r0, #0
 80220be:	f000 8099 	beq.w	80221f4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1c4>
 80220c2:	4648      	mov	r0, r9
 80220c4:	f7f3 fe5e 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80220c8:	900a      	str	r0, [sp, #40]	; 0x28
 80220ca:	2500      	movs	r5, #0
 80220cc:	46aa      	mov	sl, r5
 80220ce:	7c21      	ldrb	r1, [r4, #16]
 80220d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80220d2:	b111      	cbz	r1, 80220da <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xaa>
 80220d4:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80220d6:	4291      	cmp	r1, r2
 80220d8:	d046      	beq.n	8022168 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 80220da:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80220dc:	4291      	cmp	r1, r2
 80220de:	d043      	beq.n	8022168 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 80220e0:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
 80220e4:	4291      	cmp	r1, r2
 80220e6:	d10e      	bne.n	8022106 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd6>
 80220e8:	b135      	cbz	r5, 80220f8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xc8>
 80220ea:	2f0a      	cmp	r7, #10
 80220ec:	d10c      	bne.n	8022108 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd8>
 80220ee:	b936      	cbnz	r6, 80220fe <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xce>
 80220f0:	46b2      	mov	sl, r6
 80220f2:	e02d      	b.n	8022150 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x120>
 80220f4:	2708      	movs	r7, #8
 80220f6:	e7b7      	b.n	8022068 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x38>
 80220f8:	b346      	cbz	r6, 802214c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x11c>
 80220fa:	2f08      	cmp	r7, #8
 80220fc:	d02a      	beq.n	8022154 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x124>
 80220fe:	f10a 0a01 	add.w	sl, sl, #1
 8022102:	2501      	movs	r5, #1
 8022104:	e00e      	b.n	8022124 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf4>
 8022106:	b1fd      	cbz	r5, 8022148 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x118>
 8022108:	f8d4 10c4 	ldr.w	r1, [r4, #196]	; 0xc4
 802210c:	4291      	cmp	r1, r2
 802210e:	d003      	beq.n	8022118 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe8>
 8022110:	f8d4 10c8 	ldr.w	r1, [r4, #200]	; 0xc8
 8022114:	4291      	cmp	r1, r2
 8022116:	d171      	bne.n	80221fc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1cc>
 8022118:	b1f6      	cbz	r6, 8022158 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x128>
 802211a:	2f10      	cmp	r7, #16
 802211c:	d173      	bne.n	8022206 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1d6>
 802211e:	f04f 0a00 	mov.w	sl, #0
 8022122:	4655      	mov	r5, sl
 8022124:	9806      	ldr	r0, [sp, #24]
 8022126:	f7fc f9c1 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 802212a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 802212e:	a918      	add	r1, sp, #96	; 0x60
 8022130:	4648      	mov	r0, r9
 8022132:	9207      	str	r2, [sp, #28]
 8022134:	f7f3 fe48 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8022138:	2800      	cmp	r0, #0
 802213a:	d061      	beq.n	8022200 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1d0>
 802213c:	4648      	mov	r0, r9
 802213e:	f7f3 fe21 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8022142:	900a      	str	r0, [sp, #40]	; 0x28
 8022144:	2d00      	cmp	r5, #0
 8022146:	d1c2      	bne.n	80220ce <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9e>
 8022148:	46a8      	mov	r8, r5
 802214a:	e00d      	b.n	8022168 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 802214c:	46b2      	mov	sl, r6
 802214e:	2501      	movs	r5, #1
 8022150:	2708      	movs	r7, #8
 8022152:	e7e7      	b.n	8022124 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf4>
 8022154:	46aa      	mov	sl, r5
 8022156:	e7d4      	b.n	8022102 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd2>
 8022158:	46b2      	mov	sl, r6
 802215a:	4635      	mov	r5, r6
 802215c:	2710      	movs	r7, #16
 802215e:	e7e1      	b.n	8022124 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf4>
 8022160:	2300      	movs	r3, #0
 8022162:	9302      	str	r3, [sp, #8]
 8022164:	469a      	mov	sl, r3
 8022166:	461d      	mov	r5, r3
 8022168:	2f10      	cmp	r7, #16
 802216a:	bf14      	ite	ne
 802216c:	463b      	movne	r3, r7
 802216e:	2316      	moveq	r3, #22
 8022170:	ee08 3a10 	vmov	s16, r3
 8022174:	4a74      	ldr	r2, [pc, #464]	; (8022348 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x318>)
 8022176:	920b      	str	r2, [sp, #44]	; 0x2c
 8022178:	7c22      	ldrb	r2, [r4, #16]
 802217a:	b11a      	cbz	r2, 8022184 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x154>
 802217c:	2120      	movs	r1, #32
 802217e:	a80b      	add	r0, sp, #44	; 0x2c
 8022180:	f7ee f887 	bl	8010292 <_ZNSs7reserveEj>
 8022184:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
 8022188:	fbbb f3f7 	udiv	r3, fp, r7
 802218c:	9303      	str	r3, [sp, #12]
 802218e:	f894 3124 	ldrb.w	r3, [r4, #292]	; 0x124
 8022192:	9301      	str	r3, [sp, #4]
 8022194:	2b00      	cmp	r3, #0
 8022196:	d065      	beq.n	8022264 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x234>
 8022198:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
 802219c:	2600      	movs	r6, #0
 802219e:	9304      	str	r3, [sp, #16]
 80221a0:	46b1      	mov	r9, r6
 80221a2:	f1b8 0f00 	cmp.w	r8, #0
 80221a6:	d134      	bne.n	8022212 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 80221a8:	f894 b010 	ldrb.w	fp, [r4, #16]
 80221ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80221ae:	f1bb 0f00 	cmp.w	fp, #0
 80221b2:	f000 8086 	beq.w	80222c2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x292>
 80221b6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80221b8:	428a      	cmp	r2, r1
 80221ba:	f040 8082 	bne.w	80222c2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x292>
 80221be:	f1ba 0f00 	cmp.w	sl, #0
 80221c2:	d028      	beq.n	8022216 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e6>
 80221c4:	fa5f f18a 	uxtb.w	r1, sl
 80221c8:	a80b      	add	r0, sp, #44	; 0x2c
 80221ca:	f7ee f930 	bl	801042e <_ZNSs9push_backEc>
 80221ce:	f04f 0a00 	mov.w	sl, #0
 80221d2:	9806      	ldr	r0, [sp, #24]
 80221d4:	f7fc f96a 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 80221d8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80221dc:	a918      	add	r1, sp, #96	; 0x60
 80221de:	a806      	add	r0, sp, #24
 80221e0:	9207      	str	r2, [sp, #28]
 80221e2:	f7f3 fdf1 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80221e6:	2800      	cmp	r0, #0
 80221e8:	d068      	beq.n	80222bc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x28c>
 80221ea:	a806      	add	r0, sp, #24
 80221ec:	f7f3 fdca 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80221f0:	900a      	str	r0, [sp, #40]	; 0x28
 80221f2:	e7d9      	b.n	80221a8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x178>
 80221f4:	f04f 0801 	mov.w	r8, #1
 80221f8:	4682      	mov	sl, r0
 80221fa:	e7b5      	b.n	8022168 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 80221fc:	2501      	movs	r5, #1
 80221fe:	e7b3      	b.n	8022168 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 8022200:	f04f 0801 	mov.w	r8, #1
 8022204:	e7b0      	b.n	8022168 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x138>
 8022206:	ee08 7a10 	vmov	s16, r7
 802220a:	2501      	movs	r5, #1
 802220c:	e7b2      	b.n	8022174 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 802220e:	f04f 0801 	mov.w	r8, #1
 8022212:	f04f 0b00 	mov.w	fp, #0
 8022216:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022218:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 802221c:	b16a      	cbz	r2, 802223a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20a>
 802221e:	fa5f f18a 	uxtb.w	r1, sl
 8022222:	a80b      	add	r0, sp, #44	; 0x2c
 8022224:	f7ee f903 	bl	801042e <_ZNSs9push_backEc>
 8022228:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 802222c:	aa0b      	add	r2, sp, #44	; 0x2c
 802222e:	f002 fcbd 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 8022232:	b910      	cbnz	r0, 802223a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20a>
 8022234:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022236:	2204      	movs	r2, #4
 8022238:	601a      	str	r2, [r3, #0]
 802223a:	f1ba 0f00 	cmp.w	sl, #0
 802223e:	d105      	bne.n	802224c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x21c>
 8022240:	b925      	cbnz	r5, 802224c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x21c>
 8022242:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022244:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 8022248:	2b00      	cmp	r3, #0
 802224a:	d05d      	beq.n	8022308 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2d8>
 802224c:	f1bb 0f00 	cmp.w	fp, #0
 8022250:	d15a      	bne.n	8022308 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2d8>
 8022252:	f1b9 0f00 	cmp.w	r9, #0
 8022256:	d174      	bne.n	8022342 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x312>
 8022258:	9b02      	ldr	r3, [sp, #8]
 802225a:	b103      	cbz	r3, 802225e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x22e>
 802225c:	4276      	negs	r6, r6
 802225e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022260:	601e      	str	r6, [r3, #0]
 8022262:	e057      	b.n	8022314 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2e4>
 8022264:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8022268:	464e      	mov	r6, r9
 802226a:	f1b8 0f00 	cmp.w	r8, #0
 802226e:	d1d0      	bne.n	8022212 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 8022270:	990a      	ldr	r1, [sp, #40]	; 0x28
 8022272:	ee18 0a10 	vmov	r0, s16
 8022276:	f7fc f923 	bl	801e4c0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>
 802227a:	1c43      	adds	r3, r0, #1
 802227c:	d0c9      	beq.n	8022212 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 802227e:	9b03      	ldr	r3, [sp, #12]
 8022280:	429e      	cmp	r6, r3
 8022282:	d818      	bhi.n	80222b6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x286>
 8022284:	437e      	muls	r6, r7
 8022286:	43c2      	mvns	r2, r0
 8022288:	42b2      	cmp	r2, r6
 802228a:	bf38      	it	cc
 802228c:	f049 0901 	orrcc.w	r9, r9, #1
 8022290:	f10a 0a01 	add.w	sl, sl, #1
 8022294:	4406      	add	r6, r0
 8022296:	9806      	ldr	r0, [sp, #24]
 8022298:	f7fc f908 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 802229c:	a918      	add	r1, sp, #96	; 0x60
 802229e:	a806      	add	r0, sp, #24
 80222a0:	f8cd b01c 	str.w	fp, [sp, #28]
 80222a4:	f7f3 fd90 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80222a8:	2800      	cmp	r0, #0
 80222aa:	d0b0      	beq.n	802220e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1de>
 80222ac:	a806      	add	r0, sp, #24
 80222ae:	f7f3 fd69 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80222b2:	900a      	str	r0, [sp, #40]	; 0x28
 80222b4:	e7dc      	b.n	8022270 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x240>
 80222b6:	f04f 0901 	mov.w	r9, #1
 80222ba:	e7ec      	b.n	8022296 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x266>
 80222bc:	f8dd 8004 	ldr.w	r8, [sp, #4]
 80222c0:	e76f      	b.n	80221a2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x172>
 80222c2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80222c4:	428a      	cmp	r2, r1
 80222c6:	d0a4      	beq.n	8022212 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e2>
 80222c8:	ee18 1a10 	vmov	r1, s16
 80222cc:	9804      	ldr	r0, [sp, #16]
 80222ce:	aa0a      	add	r2, sp, #40	; 0x28
 80222d0:	f7ee f923 	bl	801051a <_ZNSt11char_traitsIwE4findEPKwjRS1_>
 80222d4:	b1b0      	cbz	r0, 8022304 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2d4>
 80222d6:	9b04      	ldr	r3, [sp, #16]
 80222d8:	1ac0      	subs	r0, r0, r3
 80222da:	9b03      	ldr	r3, [sp, #12]
 80222dc:	283c      	cmp	r0, #60	; 0x3c
 80222de:	ea4f 02a0 	mov.w	r2, r0, asr #2
 80222e2:	bfc8      	it	gt
 80222e4:	3a06      	subgt	r2, #6
 80222e6:	429e      	cmp	r6, r3
 80222e8:	d809      	bhi.n	80222fe <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2ce>
 80222ea:	437e      	muls	r6, r7
 80222ec:	43d1      	mvns	r1, r2
 80222ee:	42b1      	cmp	r1, r6
 80222f0:	bf38      	it	cc
 80222f2:	f049 0901 	orrcc.w	r9, r9, #1
 80222f6:	f10a 0a01 	add.w	sl, sl, #1
 80222fa:	4416      	add	r6, r2
 80222fc:	e769      	b.n	80221d2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1a2>
 80222fe:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8022302:	e766      	b.n	80221d2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1a2>
 8022304:	4683      	mov	fp, r0
 8022306:	e786      	b.n	8022216 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e6>
 8022308:	2300      	movs	r3, #0
 802230a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 802230c:	6013      	str	r3, [r2, #0]
 802230e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8022310:	2304      	movs	r3, #4
 8022312:	6013      	str	r3, [r2, #0]
 8022314:	f1b8 0f00 	cmp.w	r8, #0
 8022318:	d005      	beq.n	8022326 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2f6>
 802231a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802231c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 802231e:	681b      	ldr	r3, [r3, #0]
 8022320:	f043 0302 	orr.w	r3, r3, #2
 8022324:	6013      	str	r3, [r2, #0]
 8022326:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802232a:	9b05      	ldr	r3, [sp, #20]
 802232c:	e883 0003 	stmia.w	r3, {r0, r1}
 8022330:	a80b      	add	r0, sp, #44	; 0x2c
 8022332:	f7ed fe67 	bl	8010004 <_ZNSsD1Ev>
 8022336:	9805      	ldr	r0, [sp, #20]
 8022338:	b00d      	add	sp, #52	; 0x34
 802233a:	ecbd 8b02 	vpop	{d8}
 802233e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022342:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8022346:	e7e0      	b.n	802230a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2da>
 8022348:	20003bf0 	.word	0x20003bf0

0802234c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRm>:
 802234c:	b570      	push	{r4, r5, r6, lr}
 802234e:	b088      	sub	sp, #32
 8022350:	ad06      	add	r5, sp, #24
 8022352:	e885 000c 	stmia.w	r5, {r2, r3}
 8022356:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022358:	9304      	str	r3, [sp, #16]
 802235a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802235c:	9303      	str	r3, [sp, #12]
 802235e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022360:	9302      	str	r3, [sp, #8]
 8022362:	ab0c      	add	r3, sp, #48	; 0x30
 8022364:	4604      	mov	r4, r0
 8022366:	460e      	mov	r6, r1
 8022368:	e893 0003 	ldmia.w	r3, {r0, r1}
 802236c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8022370:	4620      	mov	r0, r4
 8022372:	e895 000c 	ldmia.w	r5, {r2, r3}
 8022376:	4631      	mov	r1, r6
 8022378:	f7ff fe5a 	bl	8022030 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 802237c:	4620      	mov	r0, r4
 802237e:	b008      	add	sp, #32
 8022380:	bd70      	pop	{r4, r5, r6, pc}

08022382 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRPv>:
 8022382:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022386:	b08c      	sub	sp, #48	; 0x30
 8022388:	ac08      	add	r4, sp, #32
 802238a:	9e14      	ldr	r6, [sp, #80]	; 0x50
 802238c:	f8d6 800c 	ldr.w	r8, [r6, #12]
 8022390:	e884 000c 	stmia.w	r4, {r2, r3}
 8022394:	f028 034a 	bic.w	r3, r8, #74	; 0x4a
 8022398:	f043 0308 	orr.w	r3, r3, #8
 802239c:	60f3      	str	r3, [r6, #12]
 802239e:	ab0b      	add	r3, sp, #44	; 0x2c
 80223a0:	9304      	str	r3, [sp, #16]
 80223a2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80223a4:	e9cd 6302 	strd	r6, r3, [sp, #8]
 80223a8:	ab12      	add	r3, sp, #72	; 0x48
 80223aa:	4605      	mov	r5, r0
 80223ac:	468c      	mov	ip, r1
 80223ae:	e893 0003 	ldmia.w	r3, {r0, r1}
 80223b2:	e88d 0003 	stmia.w	sp, {r0, r1}
 80223b6:	af06      	add	r7, sp, #24
 80223b8:	e894 000c 	ldmia.w	r4, {r2, r3}
 80223bc:	4661      	mov	r1, ip
 80223be:	4638      	mov	r0, r7
 80223c0:	f7ff fe36 	bl	8022030 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intImEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 80223c4:	e897 0003 	ldmia.w	r7, {r0, r1}
 80223c8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80223ca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80223cc:	f8c6 800c 	str.w	r8, [r6, #12]
 80223d0:	e884 0003 	stmia.w	r4, {r0, r1}
 80223d4:	e885 0003 	stmia.w	r5, {r0, r1}
 80223d8:	4628      	mov	r0, r5
 80223da:	601a      	str	r2, [r3, #0]
 80223dc:	b00c      	add	sp, #48	; 0x30
 80223de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080223e4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>:
 80223e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80223e8:	ed2d 8b02 	vpush	{d8}
 80223ec:	b08f      	sub	sp, #60	; 0x3c
 80223ee:	f10d 0a20 	add.w	sl, sp, #32
 80223f2:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80223f4:	9005      	str	r0, [sp, #20]
 80223f6:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 80223fa:	a80b      	add	r0, sp, #44	; 0x2c
 80223fc:	e88a 000c 	stmia.w	sl, {r2, r3}
 8022400:	f7fd fa7c 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 8022404:	68e4      	ldr	r4, [r4, #12]
 8022406:	f004 044a 	and.w	r4, r4, #74	; 0x4a
 802240a:	2300      	movs	r3, #0
 802240c:	2c40      	cmp	r4, #64	; 0x40
 802240e:	4605      	mov	r5, r0
 8022410:	930c      	str	r3, [sp, #48]	; 0x30
 8022412:	d04c      	beq.n	80224ae <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xca>
 8022414:	2c08      	cmp	r4, #8
 8022416:	bf0c      	ite	eq
 8022418:	f04f 0810 	moveq.w	r8, #16
 802241c:	f04f 080a 	movne.w	r8, #10
 8022420:	a91a      	add	r1, sp, #104	; 0x68
 8022422:	4650      	mov	r0, sl
 8022424:	f7f3 fcbd 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8022428:	4681      	mov	r9, r0
 802242a:	2800      	cmp	r0, #0
 802242c:	d17a      	bne.n	8022524 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x140>
 802242e:	4650      	mov	r0, sl
 8022430:	f7f3 fca8 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8022434:	f8d5 30bc 	ldr.w	r3, [r5, #188]	; 0xbc
 8022438:	900c      	str	r0, [sp, #48]	; 0x30
 802243a:	4283      	cmp	r3, r0
 802243c:	bf0c      	ite	eq
 802243e:	2301      	moveq	r3, #1
 8022440:	2300      	movne	r3, #0
 8022442:	9300      	str	r3, [sp, #0]
 8022444:	d003      	beq.n	802244e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x6a>
 8022446:	f8d5 30c0 	ldr.w	r3, [r5, #192]	; 0xc0
 802244a:	4283      	cmp	r3, r0
 802244c:	d119      	bne.n	8022482 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9e>
 802244e:	7c2b      	ldrb	r3, [r5, #16]
 8022450:	b113      	cbz	r3, 8022458 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x74>
 8022452:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8022454:	4283      	cmp	r3, r0
 8022456:	d014      	beq.n	8022482 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9e>
 8022458:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 802245a:	4283      	cmp	r3, r0
 802245c:	d011      	beq.n	8022482 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9e>
 802245e:	9808      	ldr	r0, [sp, #32]
 8022460:	f7fc f824 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8022464:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8022468:	a91a      	add	r1, sp, #104	; 0x68
 802246a:	4650      	mov	r0, sl
 802246c:	9309      	str	r3, [sp, #36]	; 0x24
 802246e:	f7f3 fcab 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8022472:	4606      	mov	r6, r0
 8022474:	2800      	cmp	r0, #0
 8022476:	f000 80ac 	beq.w	80225d2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1ee>
 802247a:	4650      	mov	r0, sl
 802247c:	f7f3 fc82 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8022480:	900c      	str	r0, [sp, #48]	; 0x30
 8022482:	2600      	movs	r6, #0
 8022484:	4637      	mov	r7, r6
 8022486:	7c2a      	ldrb	r2, [r5, #16]
 8022488:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802248a:	b112      	cbz	r2, 8022492 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xae>
 802248c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 802248e:	429a      	cmp	r2, r3
 8022490:	d04c      	beq.n	802252c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x148>
 8022492:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8022494:	429a      	cmp	r2, r3
 8022496:	d049      	beq.n	802252c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x148>
 8022498:	f8d5 20cc 	ldr.w	r2, [r5, #204]	; 0xcc
 802249c:	429a      	cmp	r2, r3
 802249e:	d110      	bne.n	80224c2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xde>
 80224a0:	b146      	cbz	r6, 80224b4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd0>
 80224a2:	f1b8 0f0a 	cmp.w	r8, #10
 80224a6:	d10d      	bne.n	80224c4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe0>
 80224a8:	b944      	cbnz	r4, 80224bc <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd8>
 80224aa:	4627      	mov	r7, r4
 80224ac:	e030      	b.n	8022510 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x12c>
 80224ae:	f04f 0808 	mov.w	r8, #8
 80224b2:	e7b5      	b.n	8022420 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x3c>
 80224b4:	b354      	cbz	r4, 802250c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x128>
 80224b6:	f1b8 0f08 	cmp.w	r8, #8
 80224ba:	d02c      	beq.n	8022516 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x132>
 80224bc:	3701      	adds	r7, #1
 80224be:	2601      	movs	r6, #1
 80224c0:	e010      	b.n	80224e4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x100>
 80224c2:	b30e      	cbz	r6, 8022508 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x124>
 80224c4:	f8d5 20c4 	ldr.w	r2, [r5, #196]	; 0xc4
 80224c8:	429a      	cmp	r2, r3
 80224ca:	d004      	beq.n	80224d6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf2>
 80224cc:	f8d5 20c8 	ldr.w	r2, [r5, #200]	; 0xc8
 80224d0:	429a      	cmp	r2, r3
 80224d2:	f040 8082 	bne.w	80225da <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f6>
 80224d6:	b304      	cbz	r4, 802251a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x136>
 80224d8:	f1b8 0f10 	cmp.w	r8, #16
 80224dc:	f040 8082 	bne.w	80225e4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x200>
 80224e0:	2700      	movs	r7, #0
 80224e2:	463e      	mov	r6, r7
 80224e4:	9808      	ldr	r0, [sp, #32]
 80224e6:	f7fb ffe1 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 80224ea:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80224ee:	a91a      	add	r1, sp, #104	; 0x68
 80224f0:	4650      	mov	r0, sl
 80224f2:	9309      	str	r3, [sp, #36]	; 0x24
 80224f4:	f7f3 fc68 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80224f8:	2800      	cmp	r0, #0
 80224fa:	d070      	beq.n	80225de <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1fa>
 80224fc:	4650      	mov	r0, sl
 80224fe:	f7f3 fc41 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8022502:	900c      	str	r0, [sp, #48]	; 0x30
 8022504:	2e00      	cmp	r6, #0
 8022506:	d1be      	bne.n	8022486 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa2>
 8022508:	46b1      	mov	r9, r6
 802250a:	e00f      	b.n	802252c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x148>
 802250c:	4627      	mov	r7, r4
 802250e:	2601      	movs	r6, #1
 8022510:	f04f 0808 	mov.w	r8, #8
 8022514:	e7e6      	b.n	80224e4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x100>
 8022516:	4637      	mov	r7, r6
 8022518:	e7d1      	b.n	80224be <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xda>
 802251a:	4627      	mov	r7, r4
 802251c:	4626      	mov	r6, r4
 802251e:	f04f 0810 	mov.w	r8, #16
 8022522:	e7df      	b.n	80224e4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x100>
 8022524:	2300      	movs	r3, #0
 8022526:	9300      	str	r3, [sp, #0]
 8022528:	461f      	mov	r7, r3
 802252a:	461e      	mov	r6, r3
 802252c:	f1b8 0f10 	cmp.w	r8, #16
 8022530:	bf14      	ite	ne
 8022532:	4643      	movne	r3, r8
 8022534:	2316      	moveq	r3, #22
 8022536:	ee08 3a10 	vmov	s16, r3
 802253a:	4b8e      	ldr	r3, [pc, #568]	; (8022774 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x390>)
 802253c:	930d      	str	r3, [sp, #52]	; 0x34
 802253e:	7c2b      	ldrb	r3, [r5, #16]
 8022540:	b11b      	cbz	r3, 802254a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x166>
 8022542:	2120      	movs	r1, #32
 8022544:	a80d      	add	r0, sp, #52	; 0x34
 8022546:	f7ed fea4 	bl	8010292 <_ZNSs7reserveEj>
 802254a:	9b00      	ldr	r3, [sp, #0]
 802254c:	2b00      	cmp	r3, #0
 802254e:	bf14      	ite	ne
 8022550:	2300      	movne	r3, #0
 8022552:	f04f 33ff 	moveq.w	r3, #4294967295	; 0xffffffff
 8022556:	9302      	str	r3, [sp, #8]
 8022558:	bf14      	ite	ne
 802255a:	f04f 4300 	movne.w	r3, #2147483648	; 0x80000000
 802255e:	f06f 4300 	mvneq.w	r3, #2147483648	; 0x80000000
 8022562:	9303      	str	r3, [sp, #12]
 8022564:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8022568:	ea4f 73e8 	mov.w	r3, r8, asr #31
 802256c:	4642      	mov	r2, r8
 802256e:	f7de fb95 	bl	8000c9c <__aeabi_uldivmod>
 8022572:	f895 3124 	ldrb.w	r3, [r5, #292]	; 0x124
 8022576:	9301      	str	r3, [sp, #4]
 8022578:	e9cd 0106 	strd	r0, r1, [sp, #24]
 802257c:	2b00      	cmp	r3, #0
 802257e:	d061      	beq.n	8022644 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x260>
 8022580:	2400      	movs	r4, #0
 8022582:	f105 03cc 	add.w	r3, r5, #204	; 0xcc
 8022586:	9304      	str	r3, [sp, #16]
 8022588:	46a2      	mov	sl, r4
 802258a:	46a3      	mov	fp, r4
 802258c:	f1b9 0f00 	cmp.w	r9, #0
 8022590:	d12e      	bne.n	80225f0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20c>
 8022592:	7c2b      	ldrb	r3, [r5, #16]
 8022594:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022596:	2b00      	cmp	r3, #0
 8022598:	f000 8092 	beq.w	80226c0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2dc>
 802259c:	6aa9      	ldr	r1, [r5, #40]	; 0x28
 802259e:	428a      	cmp	r2, r1
 80225a0:	f040 808e 	bne.w	80226c0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2dc>
 80225a4:	b32f      	cbz	r7, 80225f2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20e>
 80225a6:	b2f9      	uxtb	r1, r7
 80225a8:	a80d      	add	r0, sp, #52	; 0x34
 80225aa:	f7ed ff40 	bl	801042e <_ZNSs9push_backEc>
 80225ae:	2700      	movs	r7, #0
 80225b0:	9808      	ldr	r0, [sp, #32]
 80225b2:	f7fb ff7b 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 80225b6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80225ba:	a91a      	add	r1, sp, #104	; 0x68
 80225bc:	a808      	add	r0, sp, #32
 80225be:	9309      	str	r3, [sp, #36]	; 0x24
 80225c0:	f7f3 fc02 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80225c4:	2800      	cmp	r0, #0
 80225c6:	d078      	beq.n	80226ba <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2d6>
 80225c8:	a808      	add	r0, sp, #32
 80225ca:	f7f3 fbdb 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80225ce:	900c      	str	r0, [sp, #48]	; 0x30
 80225d0:	e7df      	b.n	8022592 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1ae>
 80225d2:	f04f 0901 	mov.w	r9, #1
 80225d6:	4607      	mov	r7, r0
 80225d8:	e7a8      	b.n	802252c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x148>
 80225da:	2601      	movs	r6, #1
 80225dc:	e7a6      	b.n	802252c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x148>
 80225de:	f04f 0901 	mov.w	r9, #1
 80225e2:	e7a3      	b.n	802252c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x148>
 80225e4:	ee08 8a10 	vmov	s16, r8
 80225e8:	2601      	movs	r6, #1
 80225ea:	e7a6      	b.n	802253a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x156>
 80225ec:	f04f 0901 	mov.w	r9, #1
 80225f0:	2300      	movs	r3, #0
 80225f2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80225f4:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 80225f8:	b172      	cbz	r2, 8022618 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x234>
 80225fa:	b2f9      	uxtb	r1, r7
 80225fc:	a80d      	add	r0, sp, #52	; 0x34
 80225fe:	9301      	str	r3, [sp, #4]
 8022600:	f7ed ff15 	bl	801042e <_ZNSs9push_backEc>
 8022604:	e9d5 0102 	ldrd	r0, r1, [r5, #8]
 8022608:	aa0d      	add	r2, sp, #52	; 0x34
 802260a:	f002 facf 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 802260e:	9b01      	ldr	r3, [sp, #4]
 8022610:	b910      	cbnz	r0, 8022618 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x234>
 8022612:	991d      	ldr	r1, [sp, #116]	; 0x74
 8022614:	2204      	movs	r2, #4
 8022616:	600a      	str	r2, [r1, #0]
 8022618:	b92f      	cbnz	r7, 8022626 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x242>
 802261a:	b926      	cbnz	r6, 8022626 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x242>
 802261c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802261e:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 8022622:	2a00      	cmp	r2, #0
 8022624:	d07c      	beq.n	8022720 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x33c>
 8022626:	2b00      	cmp	r3, #0
 8022628:	d17a      	bne.n	8022720 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x33c>
 802262a:	f1bb 0f00 	cmp.w	fp, #0
 802262e:	f040 8096 	bne.w	802275e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x37a>
 8022632:	9b00      	ldr	r3, [sp, #0]
 8022634:	b113      	cbz	r3, 802263c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x258>
 8022636:	4264      	negs	r4, r4
 8022638:	eb6a 0a4a 	sbc.w	sl, sl, sl, lsl #1
 802263c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802263e:	e9c3 4a00 	strd	r4, sl, [r3]
 8022642:	e075      	b.n	8022730 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x34c>
 8022644:	f8dd b004 	ldr.w	fp, [sp, #4]
 8022648:	465c      	mov	r4, fp
 802264a:	46da      	mov	sl, fp
 802264c:	f1b9 0f00 	cmp.w	r9, #0
 8022650:	d1ce      	bne.n	80225f0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20c>
 8022652:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022654:	ee18 0a10 	vmov	r0, s16
 8022658:	f7fb ff32 	bl	801e4c0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>
 802265c:	1c43      	adds	r3, r0, #1
 802265e:	d0c7      	beq.n	80225f0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20c>
 8022660:	9b06      	ldr	r3, [sp, #24]
 8022662:	42a3      	cmp	r3, r4
 8022664:	9b07      	ldr	r3, [sp, #28]
 8022666:	eb73 030a 	sbcs.w	r3, r3, sl
 802266a:	d323      	bcc.n	80226b4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2d0>
 802266c:	fba8 4304 	umull	r4, r3, r8, r4
 8022670:	fb08 3a0a 	mla	sl, r8, sl, r3
 8022674:	9b02      	ldr	r3, [sp, #8]
 8022676:	1a1a      	subs	r2, r3, r0
 8022678:	9b03      	ldr	r3, [sp, #12]
 802267a:	eb63 73e0 	sbc.w	r3, r3, r0, asr #31
 802267e:	42a2      	cmp	r2, r4
 8022680:	eb73 030a 	sbcs.w	r3, r3, sl
 8022684:	bf38      	it	cc
 8022686:	f04b 0b01 	orrcc.w	fp, fp, #1
 802268a:	1904      	adds	r4, r0, r4
 802268c:	eb4a 7ae0 	adc.w	sl, sl, r0, asr #31
 8022690:	3701      	adds	r7, #1
 8022692:	9808      	ldr	r0, [sp, #32]
 8022694:	f7fb ff0a 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8022698:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 802269c:	a91a      	add	r1, sp, #104	; 0x68
 802269e:	a808      	add	r0, sp, #32
 80226a0:	9309      	str	r3, [sp, #36]	; 0x24
 80226a2:	f7f3 fb91 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80226a6:	2800      	cmp	r0, #0
 80226a8:	d0a0      	beq.n	80225ec <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x208>
 80226aa:	a808      	add	r0, sp, #32
 80226ac:	f7f3 fb6a 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80226b0:	900c      	str	r0, [sp, #48]	; 0x30
 80226b2:	e7ce      	b.n	8022652 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x26e>
 80226b4:	f04f 0b01 	mov.w	fp, #1
 80226b8:	e7eb      	b.n	8022692 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2ae>
 80226ba:	f8dd 9004 	ldr.w	r9, [sp, #4]
 80226be:	e765      	b.n	802258c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1a8>
 80226c0:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80226c2:	429a      	cmp	r2, r3
 80226c4:	d094      	beq.n	80225f0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20c>
 80226c6:	ee18 1a10 	vmov	r1, s16
 80226ca:	9804      	ldr	r0, [sp, #16]
 80226cc:	aa0c      	add	r2, sp, #48	; 0x30
 80226ce:	f7ed ff24 	bl	801051a <_ZNSt11char_traitsIwE4findEPKwjRS1_>
 80226d2:	b318      	cbz	r0, 802271c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x338>
 80226d4:	9b04      	ldr	r3, [sp, #16]
 80226d6:	1ac0      	subs	r0, r0, r3
 80226d8:	9b06      	ldr	r3, [sp, #24]
 80226da:	283c      	cmp	r0, #60	; 0x3c
 80226dc:	ea4f 02a0 	mov.w	r2, r0, asr #2
 80226e0:	bfc8      	it	gt
 80226e2:	3a06      	subgt	r2, #6
 80226e4:	42a3      	cmp	r3, r4
 80226e6:	9b07      	ldr	r3, [sp, #28]
 80226e8:	eb73 030a 	sbcs.w	r3, r3, sl
 80226ec:	d313      	bcc.n	8022716 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x332>
 80226ee:	fba8 4304 	umull	r4, r3, r8, r4
 80226f2:	fb08 3a0a 	mla	sl, r8, sl, r3
 80226f6:	9b02      	ldr	r3, [sp, #8]
 80226f8:	1a99      	subs	r1, r3, r2
 80226fa:	9b03      	ldr	r3, [sp, #12]
 80226fc:	eb63 73e2 	sbc.w	r3, r3, r2, asr #31
 8022700:	42a1      	cmp	r1, r4
 8022702:	eb73 030a 	sbcs.w	r3, r3, sl
 8022706:	bf38      	it	cc
 8022708:	f04b 0b01 	orrcc.w	fp, fp, #1
 802270c:	1914      	adds	r4, r2, r4
 802270e:	eb4a 7ae2 	adc.w	sl, sl, r2, asr #31
 8022712:	3701      	adds	r7, #1
 8022714:	e74c      	b.n	80225b0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1cc>
 8022716:	f8dd b004 	ldr.w	fp, [sp, #4]
 802271a:	e749      	b.n	80225b0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1cc>
 802271c:	4603      	mov	r3, r0
 802271e:	e768      	b.n	80225f2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x20e>
 8022720:	2200      	movs	r2, #0
 8022722:	2300      	movs	r3, #0
 8022724:	991e      	ldr	r1, [sp, #120]	; 0x78
 8022726:	e9c1 2300 	strd	r2, r3, [r1]
 802272a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 802272c:	2304      	movs	r3, #4
 802272e:	6013      	str	r3, [r2, #0]
 8022730:	f1b9 0f00 	cmp.w	r9, #0
 8022734:	d005      	beq.n	8022742 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x35e>
 8022736:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022738:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 802273a:	681b      	ldr	r3, [r3, #0]
 802273c:	f043 0302 	orr.w	r3, r3, #2
 8022740:	6013      	str	r3, [r2, #0]
 8022742:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8022746:	9b05      	ldr	r3, [sp, #20]
 8022748:	e883 0003 	stmia.w	r3, {r0, r1}
 802274c:	a80d      	add	r0, sp, #52	; 0x34
 802274e:	f7ed fc59 	bl	8010004 <_ZNSsD1Ev>
 8022752:	9805      	ldr	r0, [sp, #20]
 8022754:	b00f      	add	sp, #60	; 0x3c
 8022756:	ecbd 8b02 	vpop	{d8}
 802275a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802275e:	9b00      	ldr	r3, [sp, #0]
 8022760:	b923      	cbnz	r3, 802276c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x388>
 8022762:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8022766:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 802276a:	e7db      	b.n	8022724 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x340>
 802276c:	2200      	movs	r2, #0
 802276e:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8022772:	e7d7      	b.n	8022724 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x340>
 8022774:	20003bf0 	.word	0x20003bf0

08022778 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRx>:
 8022778:	b570      	push	{r4, r5, r6, lr}
 802277a:	b088      	sub	sp, #32
 802277c:	ad06      	add	r5, sp, #24
 802277e:	e885 000c 	stmia.w	r5, {r2, r3}
 8022782:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022784:	9304      	str	r3, [sp, #16]
 8022786:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022788:	9303      	str	r3, [sp, #12]
 802278a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802278c:	9302      	str	r3, [sp, #8]
 802278e:	ab0c      	add	r3, sp, #48	; 0x30
 8022790:	4604      	mov	r4, r0
 8022792:	460e      	mov	r6, r1
 8022794:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022798:	e88d 0003 	stmia.w	sp, {r0, r1}
 802279c:	4620      	mov	r0, r4
 802279e:	e895 000c 	ldmia.w	r5, {r2, r3}
 80227a2:	4631      	mov	r1, r6
 80227a4:	f7ff fe1e 	bl	80223e4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIxEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 80227a8:	4620      	mov	r0, r4
 80227aa:	b008      	add	sp, #32
 80227ac:	bd70      	pop	{r4, r5, r6, pc}
	...

080227b0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>:
 80227b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80227b4:	ed2d 8b02 	vpush	{d8}
 80227b8:	b08d      	sub	sp, #52	; 0x34
 80227ba:	f10d 0918 	add.w	r9, sp, #24
 80227be:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 80227c0:	9003      	str	r0, [sp, #12]
 80227c2:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 80227c6:	a809      	add	r0, sp, #36	; 0x24
 80227c8:	e889 000c 	stmia.w	r9, {r2, r3}
 80227cc:	f7fd f896 	bl	801f8fc <_ZNKSt11__use_cacheISt16__numpunct_cacheIwEEclERKSt6locale>
 80227d0:	68e4      	ldr	r4, [r4, #12]
 80227d2:	f004 044a 	and.w	r4, r4, #74	; 0x4a
 80227d6:	2300      	movs	r3, #0
 80227d8:	2c40      	cmp	r4, #64	; 0x40
 80227da:	4605      	mov	r5, r0
 80227dc:	930a      	str	r3, [sp, #40]	; 0x28
 80227de:	d04c      	beq.n	802287a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xca>
 80227e0:	2c08      	cmp	r4, #8
 80227e2:	bf0c      	ite	eq
 80227e4:	f04f 0810 	moveq.w	r8, #16
 80227e8:	f04f 080a 	movne.w	r8, #10
 80227ec:	a918      	add	r1, sp, #96	; 0x60
 80227ee:	4648      	mov	r0, r9
 80227f0:	f7f3 fad7 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 80227f4:	4682      	mov	sl, r0
 80227f6:	2800      	cmp	r0, #0
 80227f8:	d178      	bne.n	80228ec <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x13c>
 80227fa:	4648      	mov	r0, r9
 80227fc:	f7f3 fac2 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8022800:	f8d5 30bc 	ldr.w	r3, [r5, #188]	; 0xbc
 8022804:	900a      	str	r0, [sp, #40]	; 0x28
 8022806:	4283      	cmp	r3, r0
 8022808:	bf0c      	ite	eq
 802280a:	2301      	moveq	r3, #1
 802280c:	2300      	movne	r3, #0
 802280e:	9301      	str	r3, [sp, #4]
 8022810:	d003      	beq.n	802281a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x6a>
 8022812:	f8d5 30c0 	ldr.w	r3, [r5, #192]	; 0xc0
 8022816:	4283      	cmp	r3, r0
 8022818:	d119      	bne.n	802284e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9e>
 802281a:	7c2b      	ldrb	r3, [r5, #16]
 802281c:	b113      	cbz	r3, 8022824 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x74>
 802281e:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8022820:	4283      	cmp	r3, r0
 8022822:	d014      	beq.n	802284e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9e>
 8022824:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8022826:	4283      	cmp	r3, r0
 8022828:	d011      	beq.n	802284e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x9e>
 802282a:	9806      	ldr	r0, [sp, #24]
 802282c:	f7fb fe3e 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8022830:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8022834:	a918      	add	r1, sp, #96	; 0x60
 8022836:	4648      	mov	r0, r9
 8022838:	9307      	str	r3, [sp, #28]
 802283a:	f7f3 fac5 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 802283e:	4606      	mov	r6, r0
 8022840:	2800      	cmp	r0, #0
 8022842:	f000 809f 	beq.w	8022984 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1d4>
 8022846:	4648      	mov	r0, r9
 8022848:	f7f3 fa9c 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 802284c:	900a      	str	r0, [sp, #40]	; 0x28
 802284e:	2600      	movs	r6, #0
 8022850:	4637      	mov	r7, r6
 8022852:	7c2a      	ldrb	r2, [r5, #16]
 8022854:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022856:	b112      	cbz	r2, 802285e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xae>
 8022858:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 802285a:	429a      	cmp	r2, r3
 802285c:	d04a      	beq.n	80228f4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 802285e:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8022860:	429a      	cmp	r2, r3
 8022862:	d047      	beq.n	80228f4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 8022864:	f8d5 20cc 	ldr.w	r2, [r5, #204]	; 0xcc
 8022868:	429a      	cmp	r2, r3
 802286a:	d110      	bne.n	802288e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xde>
 802286c:	b146      	cbz	r6, 8022880 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd0>
 802286e:	f1b8 0f0a 	cmp.w	r8, #10
 8022872:	d10d      	bne.n	8022890 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xe0>
 8022874:	b944      	cbnz	r4, 8022888 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xd8>
 8022876:	4627      	mov	r7, r4
 8022878:	e02e      	b.n	80228d8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x128>
 802287a:	f04f 0808 	mov.w	r8, #8
 802287e:	e7b5      	b.n	80227ec <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x3c>
 8022880:	b344      	cbz	r4, 80228d4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x124>
 8022882:	f1b8 0f08 	cmp.w	r8, #8
 8022886:	d02a      	beq.n	80228de <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x12e>
 8022888:	3701      	adds	r7, #1
 802288a:	2601      	movs	r6, #1
 802288c:	e00e      	b.n	80228ac <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xfc>
 802288e:	b1fe      	cbz	r6, 80228d0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x120>
 8022890:	f8d5 20c4 	ldr.w	r2, [r5, #196]	; 0xc4
 8022894:	429a      	cmp	r2, r3
 8022896:	d003      	beq.n	80228a0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xf0>
 8022898:	f8d5 20c8 	ldr.w	r2, [r5, #200]	; 0xc8
 802289c:	429a      	cmp	r2, r3
 802289e:	d175      	bne.n	802298c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1dc>
 80228a0:	b1fc      	cbz	r4, 80228e2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x132>
 80228a2:	f1b8 0f10 	cmp.w	r8, #16
 80228a6:	d176      	bne.n	8022996 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e6>
 80228a8:	2700      	movs	r7, #0
 80228aa:	463e      	mov	r6, r7
 80228ac:	9806      	ldr	r0, [sp, #24]
 80228ae:	f7fb fdfd 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 80228b2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80228b6:	a918      	add	r1, sp, #96	; 0x60
 80228b8:	4648      	mov	r0, r9
 80228ba:	9307      	str	r3, [sp, #28]
 80228bc:	f7f3 fa84 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80228c0:	2800      	cmp	r0, #0
 80228c2:	d065      	beq.n	8022990 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1e0>
 80228c4:	4648      	mov	r0, r9
 80228c6:	f7f3 fa5d 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80228ca:	900a      	str	r0, [sp, #40]	; 0x28
 80228cc:	2e00      	cmp	r6, #0
 80228ce:	d1c0      	bne.n	8022852 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xa2>
 80228d0:	46b2      	mov	sl, r6
 80228d2:	e00f      	b.n	80228f4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 80228d4:	4627      	mov	r7, r4
 80228d6:	2601      	movs	r6, #1
 80228d8:	f04f 0808 	mov.w	r8, #8
 80228dc:	e7e6      	b.n	80228ac <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xfc>
 80228de:	4637      	mov	r7, r6
 80228e0:	e7d3      	b.n	802288a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xda>
 80228e2:	4627      	mov	r7, r4
 80228e4:	4626      	mov	r6, r4
 80228e6:	f04f 0810 	mov.w	r8, #16
 80228ea:	e7df      	b.n	80228ac <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0xfc>
 80228ec:	2300      	movs	r3, #0
 80228ee:	9301      	str	r3, [sp, #4]
 80228f0:	461f      	mov	r7, r3
 80228f2:	461e      	mov	r6, r3
 80228f4:	f1b8 0f10 	cmp.w	r8, #16
 80228f8:	bf14      	ite	ne
 80228fa:	4643      	movne	r3, r8
 80228fc:	2316      	moveq	r3, #22
 80228fe:	ee08 3a10 	vmov	s16, r3
 8022902:	4b85      	ldr	r3, [pc, #532]	; (8022b18 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x368>)
 8022904:	930b      	str	r3, [sp, #44]	; 0x2c
 8022906:	7c2b      	ldrb	r3, [r5, #16]
 8022908:	b11b      	cbz	r3, 8022912 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x162>
 802290a:	2120      	movs	r1, #32
 802290c:	a80b      	add	r0, sp, #44	; 0x2c
 802290e:	f7ed fcc0 	bl	8010292 <_ZNSs7reserveEj>
 8022912:	ea4f 73e8 	mov.w	r3, r8, asr #31
 8022916:	4642      	mov	r2, r8
 8022918:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802291c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8022920:	f7de f9bc 	bl	8000c9c <__aeabi_uldivmod>
 8022924:	f895 3124 	ldrb.w	r3, [r5, #292]	; 0x124
 8022928:	9300      	str	r3, [sp, #0]
 802292a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802292e:	2b00      	cmp	r3, #0
 8022930:	d061      	beq.n	80229f6 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x246>
 8022932:	2400      	movs	r4, #0
 8022934:	f105 03cc 	add.w	r3, r5, #204	; 0xcc
 8022938:	9302      	str	r3, [sp, #8]
 802293a:	46a1      	mov	r9, r4
 802293c:	46a3      	mov	fp, r4
 802293e:	f1ba 0f00 	cmp.w	sl, #0
 8022942:	d12e      	bne.n	80229a2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f2>
 8022944:	7c2b      	ldrb	r3, [r5, #16]
 8022946:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8022948:	2b00      	cmp	r3, #0
 802294a:	f000 8091 	beq.w	8022a70 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2c0>
 802294e:	6aa9      	ldr	r1, [r5, #40]	; 0x28
 8022950:	428a      	cmp	r2, r1
 8022952:	f040 808d 	bne.w	8022a70 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2c0>
 8022956:	b32f      	cbz	r7, 80229a4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f4>
 8022958:	b2f9      	uxtb	r1, r7
 802295a:	a80b      	add	r0, sp, #44	; 0x2c
 802295c:	f7ed fd67 	bl	801042e <_ZNSs9push_backEc>
 8022960:	2700      	movs	r7, #0
 8022962:	9806      	ldr	r0, [sp, #24]
 8022964:	f7fb fda2 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8022968:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 802296c:	a918      	add	r1, sp, #96	; 0x60
 802296e:	a806      	add	r0, sp, #24
 8022970:	9307      	str	r3, [sp, #28]
 8022972:	f7f3 fa29 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8022976:	2800      	cmp	r0, #0
 8022978:	d077      	beq.n	8022a6a <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2ba>
 802297a:	a806      	add	r0, sp, #24
 802297c:	f7f3 fa02 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8022980:	900a      	str	r0, [sp, #40]	; 0x28
 8022982:	e7df      	b.n	8022944 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x194>
 8022984:	f04f 0a01 	mov.w	sl, #1
 8022988:	4607      	mov	r7, r0
 802298a:	e7b3      	b.n	80228f4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 802298c:	2601      	movs	r6, #1
 802298e:	e7b1      	b.n	80228f4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 8022990:	f04f 0a01 	mov.w	sl, #1
 8022994:	e7ae      	b.n	80228f4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x144>
 8022996:	ee08 8a10 	vmov	s16, r8
 802299a:	2601      	movs	r6, #1
 802299c:	e7b1      	b.n	8022902 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x152>
 802299e:	f04f 0a01 	mov.w	sl, #1
 80229a2:	2300      	movs	r3, #0
 80229a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80229a6:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 80229aa:	b172      	cbz	r2, 80229ca <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x21a>
 80229ac:	b2f9      	uxtb	r1, r7
 80229ae:	a80b      	add	r0, sp, #44	; 0x2c
 80229b0:	9300      	str	r3, [sp, #0]
 80229b2:	f7ed fd3c 	bl	801042e <_ZNSs9push_backEc>
 80229b6:	e9d5 0102 	ldrd	r0, r1, [r5, #8]
 80229ba:	aa0b      	add	r2, sp, #44	; 0x2c
 80229bc:	f002 f8f6 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 80229c0:	9b00      	ldr	r3, [sp, #0]
 80229c2:	b910      	cbnz	r0, 80229ca <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x21a>
 80229c4:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80229c6:	2204      	movs	r2, #4
 80229c8:	600a      	str	r2, [r1, #0]
 80229ca:	b92f      	cbnz	r7, 80229d8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x228>
 80229cc:	b926      	cbnz	r6, 80229d8 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x228>
 80229ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80229d0:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 80229d4:	2a00      	cmp	r2, #0
 80229d6:	d07a      	beq.n	8022ace <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x31e>
 80229d8:	2b00      	cmp	r3, #0
 80229da:	d178      	bne.n	8022ace <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x31e>
 80229dc:	f1bb 0f00 	cmp.w	fp, #0
 80229e0:	f040 8094 	bne.w	8022b0c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x35c>
 80229e4:	9b01      	ldr	r3, [sp, #4]
 80229e6:	b113      	cbz	r3, 80229ee <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x23e>
 80229e8:	4264      	negs	r4, r4
 80229ea:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
 80229ee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80229f0:	e9c3 4900 	strd	r4, r9, [r3]
 80229f4:	e073      	b.n	8022ade <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x32e>
 80229f6:	f8dd b000 	ldr.w	fp, [sp]
 80229fa:	465c      	mov	r4, fp
 80229fc:	46d9      	mov	r9, fp
 80229fe:	f1ba 0f00 	cmp.w	sl, #0
 8022a02:	d1ce      	bne.n	80229a2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f2>
 8022a04:	990a      	ldr	r1, [sp, #40]	; 0x28
 8022a06:	ee18 0a10 	vmov	r0, s16
 8022a0a:	f7fb fd59 	bl	801e4c0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE7_M_findIwEEN9__gnu_cxx11__enable_ifIXsrSt9__is_charIT_E7__valueEiE6__typeEPKS9_jS9_.isra.0>
 8022a0e:	1c43      	adds	r3, r0, #1
 8022a10:	d0c7      	beq.n	80229a2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f2>
 8022a12:	9b04      	ldr	r3, [sp, #16]
 8022a14:	42a3      	cmp	r3, r4
 8022a16:	9b05      	ldr	r3, [sp, #20]
 8022a18:	eb73 0309 	sbcs.w	r3, r3, r9
 8022a1c:	d322      	bcc.n	8022a64 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x2b4>
 8022a1e:	fba8 4304 	umull	r4, r3, r8, r4
 8022a22:	fb08 3909 	mla	r9, r8, r9, r3
 8022a26:	43c1      	mvns	r1, r0
 8022a28:	17c3      	asrs	r3, r0, #31
 8022a2a:	42a1      	cmp	r1, r4
 8022a2c:	ea6f 0203 	mvn.w	r2, r3
 8022a30:	eb72 0209 	sbcs.w	r2, r2, r9
 8022a34:	bf38      	it	cc
 8022a36:	f04b 0b01 	orrcc.w	fp, fp, #1
 8022a3a:	1904      	adds	r4, r0, r4
 8022a3c:	eb49 0903 	adc.w	r9, r9, r3
 8022a40:	3701      	adds	r7, #1
 8022a42:	9806      	ldr	r0, [sp, #24]
 8022a44:	f7fb fd32 	bl	801e4ac <_ZNSt15basic_streambufIwSt11char_traitsIwEE6sbumpcEv.isra.0>
 8022a48:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8022a4c:	a918      	add	r1, sp, #96	; 0x60
 8022a4e:	a806      	add	r0, sp, #24
 8022a50:	9307      	str	r3, [sp, #28]
 8022a52:	f7f3 f9b9 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8022a56:	2800      	cmp	r0, #0
 8022a58:	d0a1      	beq.n	802299e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1ee>
 8022a5a:	a806      	add	r0, sp, #24
 8022a5c:	f7f3 f992 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8022a60:	900a      	str	r0, [sp, #40]	; 0x28
 8022a62:	e7cf      	b.n	8022a04 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x254>
 8022a64:	f04f 0b01 	mov.w	fp, #1
 8022a68:	e7eb      	b.n	8022a42 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x292>
 8022a6a:	f8dd a000 	ldr.w	sl, [sp]
 8022a6e:	e766      	b.n	802293e <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x18e>
 8022a70:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8022a72:	429a      	cmp	r2, r3
 8022a74:	d095      	beq.n	80229a2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f2>
 8022a76:	ee18 1a10 	vmov	r1, s16
 8022a7a:	9802      	ldr	r0, [sp, #8]
 8022a7c:	aa0a      	add	r2, sp, #40	; 0x28
 8022a7e:	f7ed fd4c 	bl	801051a <_ZNSt11char_traitsIwE4findEPKwjRS1_>
 8022a82:	b310      	cbz	r0, 8022aca <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x31a>
 8022a84:	9b02      	ldr	r3, [sp, #8]
 8022a86:	9a04      	ldr	r2, [sp, #16]
 8022a88:	1ac0      	subs	r0, r0, r3
 8022a8a:	283c      	cmp	r0, #60	; 0x3c
 8022a8c:	ea4f 03a0 	mov.w	r3, r0, asr #2
 8022a90:	bfc8      	it	gt
 8022a92:	3b06      	subgt	r3, #6
 8022a94:	42a2      	cmp	r2, r4
 8022a96:	9a05      	ldr	r2, [sp, #20]
 8022a98:	eb72 0209 	sbcs.w	r2, r2, r9
 8022a9c:	d312      	bcc.n	8022ac4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x314>
 8022a9e:	fba8 4204 	umull	r4, r2, r8, r4
 8022aa2:	fb08 2909 	mla	r9, r8, r9, r2
 8022aa6:	43d8      	mvns	r0, r3
 8022aa8:	17da      	asrs	r2, r3, #31
 8022aaa:	42a0      	cmp	r0, r4
 8022aac:	ea6f 0102 	mvn.w	r1, r2
 8022ab0:	eb71 0109 	sbcs.w	r1, r1, r9
 8022ab4:	bf38      	it	cc
 8022ab6:	f04b 0b01 	orrcc.w	fp, fp, #1
 8022aba:	191c      	adds	r4, r3, r4
 8022abc:	eb49 0902 	adc.w	r9, r9, r2
 8022ac0:	3701      	adds	r7, #1
 8022ac2:	e74e      	b.n	8022962 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1b2>
 8022ac4:	f8dd b000 	ldr.w	fp, [sp]
 8022ac8:	e74b      	b.n	8022962 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1b2>
 8022aca:	4603      	mov	r3, r0
 8022acc:	e76a      	b.n	80229a4 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x1f4>
 8022ace:	2200      	movs	r2, #0
 8022ad0:	2300      	movs	r3, #0
 8022ad2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8022ad4:	e9c1 2300 	strd	r2, r3, [r1]
 8022ad8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8022ada:	2304      	movs	r3, #4
 8022adc:	6013      	str	r3, [r2, #0]
 8022ade:	f1ba 0f00 	cmp.w	sl, #0
 8022ae2:	d005      	beq.n	8022af0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x340>
 8022ae4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022ae6:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8022ae8:	681b      	ldr	r3, [r3, #0]
 8022aea:	f043 0302 	orr.w	r3, r3, #2
 8022aee:	6013      	str	r3, [r2, #0]
 8022af0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8022af4:	9b03      	ldr	r3, [sp, #12]
 8022af6:	e883 0003 	stmia.w	r3, {r0, r1}
 8022afa:	a80b      	add	r0, sp, #44	; 0x2c
 8022afc:	f7ed fa82 	bl	8010004 <_ZNSsD1Ev>
 8022b00:	9803      	ldr	r0, [sp, #12]
 8022b02:	b00d      	add	sp, #52	; 0x34
 8022b04:	ecbd 8b02 	vpop	{d8}
 8022b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022b0c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8022b10:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8022b14:	e7dd      	b.n	8022ad2 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_+0x322>
 8022b16:	bf00      	nop
 8022b18:	20003bf0 	.word	0x20003bf0

08022b1c <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_RSt8ios_baseRSt12_Ios_IostateRy>:
 8022b1c:	b570      	push	{r4, r5, r6, lr}
 8022b1e:	b088      	sub	sp, #32
 8022b20:	ad06      	add	r5, sp, #24
 8022b22:	e885 000c 	stmia.w	r5, {r2, r3}
 8022b26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022b28:	9304      	str	r3, [sp, #16]
 8022b2a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022b2c:	9303      	str	r3, [sp, #12]
 8022b2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022b30:	9302      	str	r3, [sp, #8]
 8022b32:	ab0c      	add	r3, sp, #48	; 0x30
 8022b34:	4604      	mov	r4, r0
 8022b36:	460e      	mov	r6, r1
 8022b38:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022b3c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8022b40:	4620      	mov	r0, r4
 8022b42:	e895 000c 	ldmia.w	r5, {r2, r3}
 8022b46:	4631      	mov	r1, r6
 8022b48:	f7ff fe32 	bl	80227b0 <_ZNKSt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_intIyEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRT_>
 8022b4c:	4620      	mov	r0, r4
 8022b4e:	b008      	add	sp, #32
 8022b50:	bd70      	pop	{r4, r5, r6, pc}

08022b52 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_yearES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8022b52:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022b54:	b08f      	sub	sp, #60	; 0x3c
 8022b56:	ac0a      	add	r4, sp, #40	; 0x28
 8022b58:	e884 000c 	stmia.w	r4, {r2, r3}
 8022b5c:	aa0d      	add	r2, sp, #52	; 0x34
 8022b5e:	9207      	str	r2, [sp, #28]
 8022b60:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8022b62:	9206      	str	r2, [sp, #24]
 8022b64:	468c      	mov	ip, r1
 8022b66:	f242 720f 	movw	r2, #9999	; 0x270f
 8022b6a:	2104      	movs	r1, #4
 8022b6c:	e9cd 2104 	strd	r2, r1, [sp, #16]
 8022b70:	2300      	movs	r3, #0
 8022b72:	9303      	str	r3, [sp, #12]
 8022b74:	930d      	str	r3, [sp, #52]	; 0x34
 8022b76:	ab0c      	add	r3, sp, #48	; 0x30
 8022b78:	9302      	str	r3, [sp, #8]
 8022b7a:	ab14      	add	r3, sp, #80	; 0x50
 8022b7c:	4605      	mov	r5, r0
 8022b7e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022b82:	e88d 0003 	stmia.w	sp, {r0, r1}
 8022b86:	af08      	add	r7, sp, #32
 8022b88:	e894 000c 	ldmia.w	r4, {r2, r3}
 8022b8c:	4661      	mov	r1, ip
 8022b8e:	4638      	mov	r0, r7
 8022b90:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8022b92:	f7fd fd08 	bl	80205a6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14_M_extract_numES3_S3_RiiijRSt8ios_baseRSt12_Ios_Iostate>
 8022b96:	e897 0003 	ldmia.w	r7, {r0, r1}
 8022b9a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022b9c:	e884 0003 	stmia.w	r4, {r0, r1}
 8022ba0:	b9bb      	cbnz	r3, 8022bd2 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_yearES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x80>
 8022ba2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022ba4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022ba6:	2b00      	cmp	r3, #0
 8022ba8:	bfb4      	ite	lt
 8022baa:	3364      	addlt	r3, #100	; 0x64
 8022bac:	f2a3 736c 	subwge	r3, r3, #1900	; 0x76c
 8022bb0:	6153      	str	r3, [r2, #20]
 8022bb2:	a914      	add	r1, sp, #80	; 0x50
 8022bb4:	4620      	mov	r0, r4
 8022bb6:	f7f3 f8f4 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8022bba:	b118      	cbz	r0, 8022bc4 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_yearES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x72>
 8022bbc:	6833      	ldr	r3, [r6, #0]
 8022bbe:	f043 0302 	orr.w	r3, r3, #2
 8022bc2:	6033      	str	r3, [r6, #0]
 8022bc4:	e894 0003 	ldmia.w	r4, {r0, r1}
 8022bc8:	e885 0003 	stmia.w	r5, {r0, r1}
 8022bcc:	4628      	mov	r0, r5
 8022bce:	b00f      	add	sp, #60	; 0x3c
 8022bd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022bd2:	6833      	ldr	r3, [r6, #0]
 8022bd4:	f043 0304 	orr.w	r3, r3, #4
 8022bd8:	6033      	str	r3, [r6, #0]
 8022bda:	e7ea      	b.n	8022bb2 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_yearES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x60>

08022bdc <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14do_get_weekdayES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8022bdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022be0:	b09c      	sub	sp, #112	; 0x70
 8022be2:	e9dd 9626 	ldrd	r9, r6, [sp, #152]	; 0x98
 8022be6:	ac0a      	add	r4, sp, #40	; 0x28
 8022be8:	4605      	mov	r5, r0
 8022bea:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 8022bee:	e884 000c 	stmia.w	r4, {r2, r3}
 8022bf2:	4688      	mov	r8, r1
 8022bf4:	f7fb ffe8 	bl	801ebc8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale>
 8022bf8:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 8022bfc:	4607      	mov	r7, r0
 8022bfe:	4651      	mov	r1, sl
 8022c00:	f7fb fe1a 	bl	801e838 <_ZNKSt11__timepunctIwE19_M_days_abbreviatedEPPKw>
 8022c04:	4638      	mov	r0, r7
 8022c06:	a915      	add	r1, sp, #84	; 0x54
 8022c08:	f7fb fe06 	bl	801e818 <_ZNKSt11__timepunctIwE7_M_daysEPPKw>
 8022c0c:	2300      	movs	r3, #0
 8022c0e:	930d      	str	r3, [sp, #52]	; 0x34
 8022c10:	ab0d      	add	r3, sp, #52	; 0x34
 8022c12:	e9cd 9305 	strd	r9, r3, [sp, #20]
 8022c16:	2307      	movs	r3, #7
 8022c18:	e9cd a303 	strd	sl, r3, [sp, #12]
 8022c1c:	ab0c      	add	r3, sp, #48	; 0x30
 8022c1e:	9302      	str	r3, [sp, #8]
 8022c20:	ab24      	add	r3, sp, #144	; 0x90
 8022c22:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022c26:	e88d 0003 	stmia.w	sp, {r0, r1}
 8022c2a:	af08      	add	r7, sp, #32
 8022c2c:	e894 000c 	ldmia.w	r4, {r2, r3}
 8022c30:	4641      	mov	r1, r8
 8022c32:	4638      	mov	r0, r7
 8022c34:	f7fd fdcc 	bl	80207d0 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>
 8022c38:	e897 0003 	ldmia.w	r7, {r0, r1}
 8022c3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022c3e:	e884 0003 	stmia.w	r4, {r0, r1}
 8022c42:	b99b      	cbnz	r3, 8022c6c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14do_get_weekdayES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x90>
 8022c44:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022c46:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022c48:	619a      	str	r2, [r3, #24]
 8022c4a:	a924      	add	r1, sp, #144	; 0x90
 8022c4c:	4620      	mov	r0, r4
 8022c4e:	f7f3 f8a8 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8022c52:	b118      	cbz	r0, 8022c5c <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14do_get_weekdayES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x80>
 8022c54:	6833      	ldr	r3, [r6, #0]
 8022c56:	f043 0302 	orr.w	r3, r3, #2
 8022c5a:	6033      	str	r3, [r6, #0]
 8022c5c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8022c60:	e885 0003 	stmia.w	r5, {r0, r1}
 8022c64:	4628      	mov	r0, r5
 8022c66:	b01c      	add	sp, #112	; 0x70
 8022c68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022c6c:	6833      	ldr	r3, [r6, #0]
 8022c6e:	f043 0304 	orr.w	r3, r3, #4
 8022c72:	6033      	str	r3, [r6, #0]
 8022c74:	e7e9      	b.n	8022c4a <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14do_get_weekdayES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x6e>

08022c76 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16do_get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8022c76:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022c7a:	b0a6      	sub	sp, #152	; 0x98
 8022c7c:	e9dd 9630 	ldrd	r9, r6, [sp, #192]	; 0xc0
 8022c80:	ac0a      	add	r4, sp, #40	; 0x28
 8022c82:	4605      	mov	r5, r0
 8022c84:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 8022c88:	e884 000c 	stmia.w	r4, {r2, r3}
 8022c8c:	4688      	mov	r8, r1
 8022c8e:	f7fb ff9b 	bl	801ebc8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale>
 8022c92:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
 8022c96:	4607      	mov	r7, r0
 8022c98:	4651      	mov	r1, sl
 8022c9a:	f7fb fdfc 	bl	801e896 <_ZNKSt11__timepunctIwE21_M_months_abbreviatedEPPKw>
 8022c9e:	4638      	mov	r0, r7
 8022ca0:	a91a      	add	r1, sp, #104	; 0x68
 8022ca2:	f7fb fdd9 	bl	801e858 <_ZNKSt11__timepunctIwE9_M_monthsEPPKw>
 8022ca6:	2300      	movs	r3, #0
 8022ca8:	930d      	str	r3, [sp, #52]	; 0x34
 8022caa:	ab0d      	add	r3, sp, #52	; 0x34
 8022cac:	e9cd 9305 	strd	r9, r3, [sp, #20]
 8022cb0:	230c      	movs	r3, #12
 8022cb2:	e9cd a303 	strd	sl, r3, [sp, #12]
 8022cb6:	ab0c      	add	r3, sp, #48	; 0x30
 8022cb8:	9302      	str	r3, [sp, #8]
 8022cba:	ab2e      	add	r3, sp, #184	; 0xb8
 8022cbc:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022cc0:	e88d 0003 	stmia.w	sp, {r0, r1}
 8022cc4:	af08      	add	r7, sp, #32
 8022cc6:	e894 000c 	ldmia.w	r4, {r2, r3}
 8022cca:	4641      	mov	r1, r8
 8022ccc:	4638      	mov	r0, r7
 8022cce:	f7fd fd7f 	bl	80207d0 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate>
 8022cd2:	e897 0003 	ldmia.w	r7, {r0, r1}
 8022cd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022cd8:	e884 0003 	stmia.w	r4, {r0, r1}
 8022cdc:	b99b      	cbnz	r3, 8022d06 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16do_get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x90>
 8022cde:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8022ce0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022ce2:	611a      	str	r2, [r3, #16]
 8022ce4:	a92e      	add	r1, sp, #184	; 0xb8
 8022ce6:	4620      	mov	r0, r4
 8022ce8:	f7f3 f85b 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8022cec:	b118      	cbz	r0, 8022cf6 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16do_get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x80>
 8022cee:	6833      	ldr	r3, [r6, #0]
 8022cf0:	f043 0302 	orr.w	r3, r3, #2
 8022cf4:	6033      	str	r3, [r6, #0]
 8022cf6:	e894 0003 	ldmia.w	r4, {r0, r1}
 8022cfa:	e885 0003 	stmia.w	r5, {r0, r1}
 8022cfe:	4628      	mov	r0, r5
 8022d00:	b026      	add	sp, #152	; 0x98
 8022d02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022d06:	6833      	ldr	r3, [r6, #0]
 8022d08:	f043 0304 	orr.w	r3, r3, #4
 8022d0c:	6033      	str	r3, [r6, #0]
 8022d0e:	e7e9      	b.n	8022ce4 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16do_get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x6e>

08022d10 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_timeES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8022d10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022d14:	b08d      	sub	sp, #52	; 0x34
 8022d16:	e9dd 9616 	ldrd	r9, r6, [sp, #88]	; 0x58
 8022d1a:	ac08      	add	r4, sp, #32
 8022d1c:	4605      	mov	r5, r0
 8022d1e:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 8022d22:	e884 000c 	stmia.w	r4, {r2, r3}
 8022d26:	4688      	mov	r8, r1
 8022d28:	f7fb ff4e 	bl	801ebc8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale>
 8022d2c:	a90a      	add	r1, sp, #40	; 0x28
 8022d2e:	f7fb fd67 	bl	801e800 <_ZNKSt11__timepunctIwE15_M_time_formatsEPPKw>
 8022d32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022d34:	9305      	str	r3, [sp, #20]
 8022d36:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022d38:	f8cd 9008 	str.w	r9, [sp, #8]
 8022d3c:	e9cd 6303 	strd	r6, r3, [sp, #12]
 8022d40:	ab14      	add	r3, sp, #80	; 0x50
 8022d42:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022d46:	e88d 0003 	stmia.w	sp, {r0, r1}
 8022d4a:	af06      	add	r7, sp, #24
 8022d4c:	4641      	mov	r1, r8
 8022d4e:	4638      	mov	r0, r7
 8022d50:	e894 000c 	ldmia.w	r4, {r2, r3}
 8022d54:	f7fd fdf0 	bl	8020938 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw>
 8022d58:	e897 0003 	ldmia.w	r7, {r0, r1}
 8022d5c:	e884 0003 	stmia.w	r4, {r0, r1}
 8022d60:	a914      	add	r1, sp, #80	; 0x50
 8022d62:	4620      	mov	r0, r4
 8022d64:	f7f3 f81d 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8022d68:	b118      	cbz	r0, 8022d72 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_timeES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x62>
 8022d6a:	6833      	ldr	r3, [r6, #0]
 8022d6c:	f043 0302 	orr.w	r3, r3, #2
 8022d70:	6033      	str	r3, [r6, #0]
 8022d72:	e894 0003 	ldmia.w	r4, {r0, r1}
 8022d76:	e885 0003 	stmia.w	r5, {r0, r1}
 8022d7a:	4628      	mov	r0, r5
 8022d7c:	b00d      	add	sp, #52	; 0x34
 8022d7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08022d82 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_dateES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm>:
 8022d82:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022d86:	b08d      	sub	sp, #52	; 0x34
 8022d88:	e9dd 9616 	ldrd	r9, r6, [sp, #88]	; 0x58
 8022d8c:	ac08      	add	r4, sp, #32
 8022d8e:	4605      	mov	r5, r0
 8022d90:	f109 006c 	add.w	r0, r9, #108	; 0x6c
 8022d94:	e884 000c 	stmia.w	r4, {r2, r3}
 8022d98:	4688      	mov	r8, r1
 8022d9a:	f7fb ff15 	bl	801ebc8 <_ZSt9use_facetISt11__timepunctIwEERKT_RKSt6locale>
 8022d9e:	a90a      	add	r1, sp, #40	; 0x28
 8022da0:	f7fb fd28 	bl	801e7f4 <_ZNKSt11__timepunctIwE15_M_date_formatsEPPKw>
 8022da4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022da6:	9305      	str	r3, [sp, #20]
 8022da8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022daa:	f8cd 9008 	str.w	r9, [sp, #8]
 8022dae:	e9cd 6303 	strd	r6, r3, [sp, #12]
 8022db2:	ab14      	add	r3, sp, #80	; 0x50
 8022db4:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022db8:	e88d 0003 	stmia.w	sp, {r0, r1}
 8022dbc:	af06      	add	r7, sp, #24
 8022dbe:	4641      	mov	r1, r8
 8022dc0:	4638      	mov	r0, r7
 8022dc2:	e894 000c 	ldmia.w	r4, {r2, r3}
 8022dc6:	f7fd fdb7 	bl	8020938 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw>
 8022dca:	e897 0003 	ldmia.w	r7, {r0, r1}
 8022dce:	e884 0003 	stmia.w	r4, {r0, r1}
 8022dd2:	a914      	add	r1, sp, #80	; 0x50
 8022dd4:	4620      	mov	r0, r4
 8022dd6:	f7f2 ffe4 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8022dda:	b118      	cbz	r0, 8022de4 <_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE11do_get_dateES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm+0x62>
 8022ddc:	6833      	ldr	r3, [r6, #0]
 8022dde:	f043 0302 	orr.w	r3, r3, #2
 8022de2:	6033      	str	r3, [r6, #0]
 8022de4:	e894 0003 	ldmia.w	r4, {r0, r1}
 8022de8:	e885 0003 	stmia.w	r5, {r0, r1}
 8022dec:	4628      	mov	r0, r5
 8022dee:	b00d      	add	sp, #52	; 0x34
 8022df0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08022df4 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>:
 8022df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022df8:	ed2d 8b02 	vpush	{d8}
 8022dfc:	b08d      	sub	sp, #52	; 0x34
 8022dfe:	a906      	add	r1, sp, #24
 8022e00:	e881 000c 	stmia.w	r1, {r2, r3}
 8022e04:	e9dd 381a 	ldrd	r3, r8, [sp, #104]	; 0x68
 8022e08:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 8022e0c:	9004      	str	r0, [sp, #16]
 8022e0e:	4620      	mov	r0, r4
 8022e10:	f7fb fe26 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8022e14:	ee08 0a10 	vmov	s16, r0
 8022e18:	4620      	mov	r0, r4
 8022e1a:	f7fc f9c7 	bl	801f1ac <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb1EEEclERKSt6locale.isra.0>
 8022e1e:	f100 0340 	add.w	r3, r0, #64	; 0x40
 8022e22:	9305      	str	r3, [sp, #20]
 8022e24:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8022e26:	4604      	mov	r4, r0
 8022e28:	b11b      	cbz	r3, 8022e32 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3e>
 8022e2a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8022e2c:	3b00      	subs	r3, #0
 8022e2e:	bf18      	it	ne
 8022e30:	2301      	movne	r3, #1
 8022e32:	9301      	str	r3, [sp, #4]
 8022e34:	7c23      	ldrb	r3, [r4, #16]
 8022e36:	4d9c      	ldr	r5, [pc, #624]	; (80230a8 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2b4>)
 8022e38:	9508      	str	r5, [sp, #32]
 8022e3a:	b123      	cbz	r3, 8022e46 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x52>
 8022e3c:	2120      	movs	r1, #32
 8022e3e:	eb0d 0001 	add.w	r0, sp, r1
 8022e42:	f7ed fa26 	bl	8010292 <_ZNSs7reserveEj>
 8022e46:	2120      	movs	r1, #32
 8022e48:	a809      	add	r0, sp, #36	; 0x24
 8022e4a:	9509      	str	r5, [sp, #36]	; 0x24
 8022e4c:	f7ed fa21 	bl	8010292 <_ZNSs7reserveEj>
 8022e50:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8022e54:	2500      	movs	r5, #0
 8022e56:	ee08 3a90 	vmov	s17, r3
 8022e5a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8022e5c:	930a      	str	r3, [sp, #40]	; 0x28
 8022e5e:	462f      	mov	r7, r5
 8022e60:	462e      	mov	r6, r5
 8022e62:	9502      	str	r5, [sp, #8]
 8022e64:	46a9      	mov	r9, r5
 8022e66:	9500      	str	r5, [sp, #0]
 8022e68:	ab0a      	add	r3, sp, #40	; 0x28
 8022e6a:	5d5b      	ldrb	r3, [r3, r5]
 8022e6c:	2b04      	cmp	r3, #4
 8022e6e:	d840      	bhi.n	8022ef2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfe>
 8022e70:	e8df f013 	tbh	[pc, r3, lsl #1]
 8022e74:	012e015f 	.word	0x012e015f
 8022e78:	00a0002b 	.word	0x00a0002b
 8022e7c:	00da      	.short	0x00da
 8022e7e:	f1bb 0f00 	cmp.w	fp, #0
 8022e82:	d1f1      	bne.n	8022e68 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x74>
 8022e84:	f8d8 3000 	ldr.w	r3, [r8]
 8022e88:	f043 0304 	orr.w	r3, r3, #4
 8022e8c:	f8c8 3000 	str.w	r3, [r8]
 8022e90:	ac06      	add	r4, sp, #24
 8022e92:	a918      	add	r1, sp, #96	; 0x60
 8022e94:	4620      	mov	r0, r4
 8022e96:	f7f2 ff84 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8022e9a:	b128      	cbz	r0, 8022ea8 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xb4>
 8022e9c:	f8d8 3000 	ldr.w	r3, [r8]
 8022ea0:	f043 0302 	orr.w	r3, r3, #2
 8022ea4:	f8c8 3000 	str.w	r3, [r8]
 8022ea8:	e894 0003 	ldmia.w	r4, {r0, r1}
 8022eac:	9b04      	ldr	r3, [sp, #16]
 8022eae:	e883 0003 	stmia.w	r3, {r0, r1}
 8022eb2:	a809      	add	r0, sp, #36	; 0x24
 8022eb4:	f7ed f8a6 	bl	8010004 <_ZNSsD1Ev>
 8022eb8:	a808      	add	r0, sp, #32
 8022eba:	f7ed f8a3 	bl	8010004 <_ZNSsD1Ev>
 8022ebe:	9804      	ldr	r0, [sp, #16]
 8022ec0:	b00d      	add	sp, #52	; 0x34
 8022ec2:	ecbd 8b02 	vpop	{d8}
 8022ec6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022eca:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8022ecc:	68db      	ldr	r3, [r3, #12]
 8022ece:	059a      	lsls	r2, r3, #22
 8022ed0:	d41e      	bmi.n	8022f10 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 8022ed2:	f1b9 0f01 	cmp.w	r9, #1
 8022ed6:	d81b      	bhi.n	8022f10 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 8022ed8:	b1d5      	cbz	r5, 8022f10 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 8022eda:	2d01      	cmp	r5, #1
 8022edc:	d10c      	bne.n	8022ef8 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x104>
 8022ede:	9b01      	ldr	r3, [sp, #4]
 8022ee0:	b9b3      	cbnz	r3, 8022f10 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 8022ee2:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8022ee6:	2b03      	cmp	r3, #3
 8022ee8:	d012      	beq.n	8022f10 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 8022eea:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 8022eee:	2b01      	cmp	r3, #1
 8022ef0:	d00e      	beq.n	8022f10 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 8022ef2:	f04f 0b01 	mov.w	fp, #1
 8022ef6:	e02b      	b.n	8022f50 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 8022ef8:	2d02      	cmp	r5, #2
 8022efa:	d1fa      	bne.n	8022ef2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfe>
 8022efc:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
 8022f00:	2b04      	cmp	r3, #4
 8022f02:	d005      	beq.n	8022f10 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 8022f04:	9a01      	ldr	r2, [sp, #4]
 8022f06:	2a00      	cmp	r2, #0
 8022f08:	d0f3      	beq.n	8022ef2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfe>
 8022f0a:	2b03      	cmp	r3, #3
 8022f0c:	f040 8114 	bne.w	8023138 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x344>
 8022f10:	6a23      	ldr	r3, [r4, #32]
 8022f12:	9303      	str	r3, [sp, #12]
 8022f14:	f04f 0a00 	mov.w	sl, #0
 8022f18:	a918      	add	r1, sp, #96	; 0x60
 8022f1a:	a806      	add	r0, sp, #24
 8022f1c:	f7f2 ff54 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8022f20:	9b03      	ldr	r3, [sp, #12]
 8022f22:	4683      	mov	fp, r0
 8022f24:	2800      	cmp	r0, #0
 8022f26:	d03c      	beq.n	8022fa2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1ae>
 8022f28:	459a      	cmp	sl, r3
 8022f2a:	d011      	beq.n	8022f50 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 8022f2c:	a806      	add	r0, sp, #24
 8022f2e:	f7f2 ff29 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8022f32:	69e3      	ldr	r3, [r4, #28]
 8022f34:	f853 302a 	ldr.w	r3, [r3, sl, lsl #2]
 8022f38:	4283      	cmp	r3, r0
 8022f3a:	d035      	beq.n	8022fa8 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1b4>
 8022f3c:	f1ba 0f00 	cmp.w	sl, #0
 8022f40:	f040 80fd 	bne.w	802313e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x34a>
 8022f44:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8022f46:	68db      	ldr	r3, [r3, #12]
 8022f48:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 8022f4c:	f3c3 2b40 	ubfx	fp, r3, #9, #1
 8022f50:	3501      	adds	r5, #1
 8022f52:	2d04      	cmp	r5, #4
 8022f54:	d193      	bne.n	8022e7e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8a>
 8022f56:	f1b9 0f01 	cmp.w	r9, #1
 8022f5a:	f240 8142 	bls.w	80231e2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ee>
 8022f5e:	f1bb 0f00 	cmp.w	fp, #0
 8022f62:	d08f      	beq.n	8022e84 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 8022f64:	9b00      	ldr	r3, [sp, #0]
 8022f66:	2b00      	cmp	r3, #0
 8022f68:	f000 80ec 	beq.w	8023144 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x350>
 8022f6c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 8022f6e:	f04f 0b01 	mov.w	fp, #1
 8022f72:	a918      	add	r1, sp, #96	; 0x60
 8022f74:	a806      	add	r0, sp, #24
 8022f76:	f7f2 ff27 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8022f7a:	2800      	cmp	r0, #0
 8022f7c:	f000 80e4 	beq.w	8023148 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x354>
 8022f80:	45d9      	cmp	r9, fp
 8022f82:	f000 80e4 	beq.w	802314e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x35a>
 8022f86:	a806      	add	r0, sp, #24
 8022f88:	f7f2 fefc 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8022f8c:	f855 302b 	ldr.w	r3, [r5, fp, lsl #2]
 8022f90:	4283      	cmp	r3, r0
 8022f92:	f47f af77 	bne.w	8022e84 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 8022f96:	a806      	add	r0, sp, #24
 8022f98:	f7fc f9b4 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 8022f9c:	f10b 0b01 	add.w	fp, fp, #1
 8022fa0:	e7e7      	b.n	8022f72 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x17e>
 8022fa2:	459a      	cmp	sl, r3
 8022fa4:	d1ca      	bne.n	8022f3c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x148>
 8022fa6:	e7a4      	b.n	8022ef2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfe>
 8022fa8:	a806      	add	r0, sp, #24
 8022faa:	f7fc f9ab 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 8022fae:	f10a 0a01 	add.w	sl, sl, #1
 8022fb2:	e7b1      	b.n	8022f18 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x124>
 8022fb4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8022fb6:	b9b3      	cbnz	r3, 8022fe6 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1f2>
 8022fb8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8022fba:	b343      	cbz	r3, 802300e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21a>
 8022fbc:	a918      	add	r1, sp, #96	; 0x60
 8022fbe:	a806      	add	r0, sp, #24
 8022fc0:	f7f2 ff02 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8022fc4:	4683      	mov	fp, r0
 8022fc6:	b310      	cbz	r0, 802300e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21a>
 8022fc8:	a806      	add	r0, sp, #24
 8022fca:	f7f2 fedb 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8022fce:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8022fd0:	6812      	ldr	r2, [r2, #0]
 8022fd2:	4282      	cmp	r2, r0
 8022fd4:	d11b      	bne.n	802300e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21a>
 8022fd6:	a806      	add	r0, sp, #24
 8022fd8:	f8d4 9030 	ldr.w	r9, [r4, #48]	; 0x30
 8022fdc:	f7fc f992 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 8022fe0:	f8cd b000 	str.w	fp, [sp]
 8022fe4:	e7b4      	b.n	8022f50 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 8022fe6:	a918      	add	r1, sp, #96	; 0x60
 8022fe8:	a806      	add	r0, sp, #24
 8022fea:	f7f2 feed 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8022fee:	4683      	mov	fp, r0
 8022ff0:	2800      	cmp	r0, #0
 8022ff2:	d0e1      	beq.n	8022fb8 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1c4>
 8022ff4:	a806      	add	r0, sp, #24
 8022ff6:	f7f2 fec5 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8022ffa:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8022ffc:	6812      	ldr	r2, [r2, #0]
 8022ffe:	4282      	cmp	r2, r0
 8023000:	d1da      	bne.n	8022fb8 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1c4>
 8023002:	a806      	add	r0, sp, #24
 8023004:	f8d4 9028 	ldr.w	r9, [r4, #40]	; 0x28
 8023008:	f7fc f97c 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 802300c:	e7a0      	b.n	8022f50 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 802300e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8023010:	b91b      	cbnz	r3, 802301a <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x226>
 8023012:	9b01      	ldr	r3, [sp, #4]
 8023014:	f083 0b01 	eor.w	fp, r3, #1
 8023018:	e79a      	b.n	8022f50 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 802301a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802301c:	2b00      	cmp	r3, #0
 802301e:	d1f8      	bne.n	8023012 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21e>
 8023020:	2301      	movs	r3, #1
 8023022:	9300      	str	r3, [sp, #0]
 8023024:	469b      	mov	fp, r3
 8023026:	e793      	b.n	8022f50 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 8023028:	a918      	add	r1, sp, #96	; 0x60
 802302a:	a806      	add	r0, sp, #24
 802302c:	f7f2 fecc 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8023030:	4683      	mov	fp, r0
 8023032:	2800      	cmp	r0, #0
 8023034:	d049      	beq.n	80230ca <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2d6>
 8023036:	a806      	add	r0, sp, #24
 8023038:	f7f2 fea4 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 802303c:	aa0b      	add	r2, sp, #44	; 0x2c
 802303e:	900b      	str	r0, [sp, #44]	; 0x2c
 8023040:	210a      	movs	r1, #10
 8023042:	ee18 0a90 	vmov	r0, s17
 8023046:	f7ed fa68 	bl	801051a <_ZNSt11char_traitsIwE4findEPKwjRS1_>
 802304a:	b1a0      	cbz	r0, 8023076 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x282>
 802304c:	9b05      	ldr	r3, [sp, #20]
 802304e:	eba0 0b03 	sub.w	fp, r0, r3
 8023052:	4b16      	ldr	r3, [pc, #88]	; (80230ac <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2b8>)
 8023054:	ea4f 0bab 	mov.w	fp, fp, asr #2
 8023058:	681b      	ldr	r3, [r3, #0]
 802305a:	a809      	add	r0, sp, #36	; 0x24
 802305c:	f813 100b 	ldrb.w	r1, [r3, fp]
 8023060:	f7ed f9e5 	bl	801042e <_ZNSs9push_backEc>
 8023064:	f106 0b01 	add.w	fp, r6, #1
 8023068:	9e02      	ldr	r6, [sp, #8]
 802306a:	a806      	add	r0, sp, #24
 802306c:	f7fc f94a 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 8023070:	9602      	str	r6, [sp, #8]
 8023072:	465e      	mov	r6, fp
 8023074:	e7d8      	b.n	8023028 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x234>
 8023076:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8023078:	6962      	ldr	r2, [r4, #20]
 802307a:	428a      	cmp	r2, r1
 802307c:	d106      	bne.n	802308c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x298>
 802307e:	b92f      	cbnz	r7, 802308c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x298>
 8023080:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8023082:	2a00      	cmp	r2, #0
 8023084:	dd15      	ble.n	80230b2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2be>
 8023086:	465f      	mov	r7, fp
 8023088:	4683      	mov	fp, r0
 802308a:	e7ee      	b.n	802306a <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x276>
 802308c:	7c22      	ldrb	r2, [r4, #16]
 802308e:	b182      	cbz	r2, 80230b2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2be>
 8023090:	69a3      	ldr	r3, [r4, #24]
 8023092:	4299      	cmp	r1, r3
 8023094:	d10c      	bne.n	80230b0 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2bc>
 8023096:	b9a7      	cbnz	r7, 80230c2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2ce>
 8023098:	b1ae      	cbz	r6, 80230c6 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2d2>
 802309a:	b2f1      	uxtb	r1, r6
 802309c:	a808      	add	r0, sp, #32
 802309e:	f7ed f9c6 	bl	801042e <_ZNSs9push_backEc>
 80230a2:	46bb      	mov	fp, r7
 80230a4:	9e02      	ldr	r6, [sp, #8]
 80230a6:	e7e0      	b.n	802306a <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x276>
 80230a8:	20003bf0 	.word	0x20003bf0
 80230ac:	2000003c 	.word	0x2000003c
 80230b0:	4693      	mov	fp, r2
 80230b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80230b4:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 80230b8:	2a00      	cmp	r2, #0
 80230ba:	bf08      	it	eq
 80230bc:	f04f 0b00 	moveq.w	fp, #0
 80230c0:	e746      	b.n	8022f50 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 80230c2:	46bb      	mov	fp, r7
 80230c4:	e7f5      	b.n	80230b2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2be>
 80230c6:	46b3      	mov	fp, r6
 80230c8:	e7f3      	b.n	80230b2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2be>
 80230ca:	f04f 0b01 	mov.w	fp, #1
 80230ce:	e7f0      	b.n	80230b2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2be>
 80230d0:	a918      	add	r1, sp, #96	; 0x60
 80230d2:	a806      	add	r0, sp, #24
 80230d4:	f7f2 fe78 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80230d8:	b9d8      	cbnz	r0, 8023112 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x31e>
 80230da:	f04f 0b00 	mov.w	fp, #0
 80230de:	2d03      	cmp	r5, #3
 80230e0:	f43f af36 	beq.w	8022f50 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 80230e4:	a918      	add	r1, sp, #96	; 0x60
 80230e6:	a806      	add	r0, sp, #24
 80230e8:	f7f2 fe6e 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80230ec:	2800      	cmp	r0, #0
 80230ee:	f43f af2f 	beq.w	8022f50 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 80230f2:	a806      	add	r0, sp, #24
 80230f4:	f7f2 fe46 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80230f8:	2108      	movs	r1, #8
 80230fa:	4602      	mov	r2, r0
 80230fc:	ee18 0a10 	vmov	r0, s16
 8023100:	f7f2 fb43 	bl	801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>
 8023104:	2800      	cmp	r0, #0
 8023106:	f43f af23 	beq.w	8022f50 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 802310a:	a806      	add	r0, sp, #24
 802310c:	f7fc f8fa 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 8023110:	e7e8      	b.n	80230e4 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2f0>
 8023112:	a806      	add	r0, sp, #24
 8023114:	f7f2 fe36 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8023118:	2108      	movs	r1, #8
 802311a:	4602      	mov	r2, r0
 802311c:	ee18 0a10 	vmov	r0, s16
 8023120:	f7f2 fb33 	bl	801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>
 8023124:	4683      	mov	fp, r0
 8023126:	2800      	cmp	r0, #0
 8023128:	d0d7      	beq.n	80230da <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2e6>
 802312a:	a806      	add	r0, sp, #24
 802312c:	f7fc f8ea 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 8023130:	e7d5      	b.n	80230de <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2ea>
 8023132:	f04f 0b01 	mov.w	fp, #1
 8023136:	e7d2      	b.n	80230de <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2ea>
 8023138:	f8dd b004 	ldr.w	fp, [sp, #4]
 802313c:	e708      	b.n	8022f50 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 802313e:	f04f 0b00 	mov.w	fp, #0
 8023142:	e705      	b.n	8022f50 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 8023144:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8023146:	e712      	b.n	8022f6e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x17a>
 8023148:	45d9      	cmp	r9, fp
 802314a:	f47f ae9b 	bne.w	8022e84 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 802314e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023150:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 8023154:	2b01      	cmp	r3, #1
 8023156:	d913      	bls.n	8023180 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x38c>
 8023158:	2200      	movs	r2, #0
 802315a:	2130      	movs	r1, #48	; 0x30
 802315c:	a809      	add	r0, sp, #36	; 0x24
 802315e:	f7ec feb8 	bl	800fed2 <_ZNKSs17find_first_not_ofEcj>
 8023162:	4602      	mov	r2, r0
 8023164:	b160      	cbz	r0, 8023180 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x38c>
 8023166:	1c43      	adds	r3, r0, #1
 8023168:	bf04      	itt	eq
 802316a:	9b09      	ldreq	r3, [sp, #36]	; 0x24
 802316c:	f853 2c0c 	ldreq.w	r2, [r3, #-12]
 8023170:	f04f 0100 	mov.w	r1, #0
 8023174:	bf08      	it	eq
 8023176:	f102 32ff 	addeq.w	r2, r2, #4294967295	; 0xffffffff
 802317a:	a809      	add	r0, sp, #36	; 0x24
 802317c:	f7fb f9c0 	bl	801e500 <_ZNSs5eraseEjj.isra.0>
 8023180:	9b00      	ldr	r3, [sp, #0]
 8023182:	b173      	cbz	r3, 80231a2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ae>
 8023184:	a809      	add	r0, sp, #36	; 0x24
 8023186:	f7ec ffbf 	bl	8010108 <_ZNSs7_M_leakEv>
 802318a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802318c:	781b      	ldrb	r3, [r3, #0]
 802318e:	2b30      	cmp	r3, #48	; 0x30
 8023190:	d007      	beq.n	80231a2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ae>
 8023192:	a809      	add	r0, sp, #36	; 0x24
 8023194:	f7ec ffc1 	bl	801011a <_ZNSs5beginEv>
 8023198:	222d      	movs	r2, #45	; 0x2d
 802319a:	4601      	mov	r1, r0
 802319c:	a809      	add	r0, sp, #36	; 0x24
 802319e:	f7ec fff7 	bl	8010190 <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc>
 80231a2:	9b08      	ldr	r3, [sp, #32]
 80231a4:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 80231a8:	b18b      	cbz	r3, 80231ce <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3da>
 80231aa:	b1f7      	cbz	r7, 80231ea <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3f6>
 80231ac:	f89d 1008 	ldrb.w	r1, [sp, #8]
 80231b0:	a808      	add	r0, sp, #32
 80231b2:	f7ed f93c 	bl	801042e <_ZNSs9push_backEc>
 80231b6:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 80231ba:	aa08      	add	r2, sp, #32
 80231bc:	f001 fcf6 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 80231c0:	b928      	cbnz	r0, 80231ce <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3da>
 80231c2:	f8d8 3000 	ldr.w	r3, [r8]
 80231c6:	f043 0304 	orr.w	r3, r3, #4
 80231ca:	f8c8 3000 	str.w	r3, [r8]
 80231ce:	b11f      	cbz	r7, 80231d8 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3e4>
 80231d0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80231d2:	42b3      	cmp	r3, r6
 80231d4:	f47f ae56 	bne.w	8022e84 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 80231d8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80231da:	a909      	add	r1, sp, #36	; 0x24
 80231dc:	f7ec fe64 	bl	800fea8 <_ZNSs4swapERSs>
 80231e0:	e656      	b.n	8022e90 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x9c>
 80231e2:	f1bb 0f00 	cmp.w	fp, #0
 80231e6:	d1b2      	bne.n	802314e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x35a>
 80231e8:	e64c      	b.n	8022e84 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 80231ea:	b2f1      	uxtb	r1, r6
 80231ec:	e7e0      	b.n	80231b0 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3bc>
 80231ee:	bf00      	nop

080231f0 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>:
 80231f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80231f4:	ed2d 8b02 	vpush	{d8}
 80231f8:	b08d      	sub	sp, #52	; 0x34
 80231fa:	a906      	add	r1, sp, #24
 80231fc:	e881 000c 	stmia.w	r1, {r2, r3}
 8023200:	e9dd 381a 	ldrd	r3, r8, [sp, #104]	; 0x68
 8023204:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 8023208:	9004      	str	r0, [sp, #16]
 802320a:	4620      	mov	r0, r4
 802320c:	f7fb fc28 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8023210:	ee08 0a10 	vmov	s16, r0
 8023214:	4620      	mov	r0, r4
 8023216:	f7fb ff01 	bl	801f01c <_ZNKSt11__use_cacheISt18__moneypunct_cacheIwLb0EEEclERKSt6locale.isra.0>
 802321a:	f100 0340 	add.w	r3, r0, #64	; 0x40
 802321e:	9305      	str	r3, [sp, #20]
 8023220:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8023222:	4604      	mov	r4, r0
 8023224:	b11b      	cbz	r3, 802322e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3e>
 8023226:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8023228:	3b00      	subs	r3, #0
 802322a:	bf18      	it	ne
 802322c:	2301      	movne	r3, #1
 802322e:	9301      	str	r3, [sp, #4]
 8023230:	7c23      	ldrb	r3, [r4, #16]
 8023232:	4d9c      	ldr	r5, [pc, #624]	; (80234a4 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2b4>)
 8023234:	9508      	str	r5, [sp, #32]
 8023236:	b123      	cbz	r3, 8023242 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x52>
 8023238:	2120      	movs	r1, #32
 802323a:	eb0d 0001 	add.w	r0, sp, r1
 802323e:	f7ed f828 	bl	8010292 <_ZNSs7reserveEj>
 8023242:	2120      	movs	r1, #32
 8023244:	a809      	add	r0, sp, #36	; 0x24
 8023246:	9509      	str	r5, [sp, #36]	; 0x24
 8023248:	f7ed f823 	bl	8010292 <_ZNSs7reserveEj>
 802324c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8023250:	2500      	movs	r5, #0
 8023252:	ee08 3a90 	vmov	s17, r3
 8023256:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8023258:	930a      	str	r3, [sp, #40]	; 0x28
 802325a:	462f      	mov	r7, r5
 802325c:	462e      	mov	r6, r5
 802325e:	9502      	str	r5, [sp, #8]
 8023260:	46a9      	mov	r9, r5
 8023262:	9500      	str	r5, [sp, #0]
 8023264:	ab0a      	add	r3, sp, #40	; 0x28
 8023266:	5d5b      	ldrb	r3, [r3, r5]
 8023268:	2b04      	cmp	r3, #4
 802326a:	d840      	bhi.n	80232ee <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfe>
 802326c:	e8df f013 	tbh	[pc, r3, lsl #1]
 8023270:	012e015f 	.word	0x012e015f
 8023274:	00a0002b 	.word	0x00a0002b
 8023278:	00da      	.short	0x00da
 802327a:	f1bb 0f00 	cmp.w	fp, #0
 802327e:	d1f1      	bne.n	8023264 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x74>
 8023280:	f8d8 3000 	ldr.w	r3, [r8]
 8023284:	f043 0304 	orr.w	r3, r3, #4
 8023288:	f8c8 3000 	str.w	r3, [r8]
 802328c:	ac06      	add	r4, sp, #24
 802328e:	a918      	add	r1, sp, #96	; 0x60
 8023290:	4620      	mov	r0, r4
 8023292:	f7f2 fd86 	bl	8015da2 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE5equalERKS2_>
 8023296:	b128      	cbz	r0, 80232a4 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xb4>
 8023298:	f8d8 3000 	ldr.w	r3, [r8]
 802329c:	f043 0302 	orr.w	r3, r3, #2
 80232a0:	f8c8 3000 	str.w	r3, [r8]
 80232a4:	e894 0003 	ldmia.w	r4, {r0, r1}
 80232a8:	9b04      	ldr	r3, [sp, #16]
 80232aa:	e883 0003 	stmia.w	r3, {r0, r1}
 80232ae:	a809      	add	r0, sp, #36	; 0x24
 80232b0:	f7ec fea8 	bl	8010004 <_ZNSsD1Ev>
 80232b4:	a808      	add	r0, sp, #32
 80232b6:	f7ec fea5 	bl	8010004 <_ZNSsD1Ev>
 80232ba:	9804      	ldr	r0, [sp, #16]
 80232bc:	b00d      	add	sp, #52	; 0x34
 80232be:	ecbd 8b02 	vpop	{d8}
 80232c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80232c6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80232c8:	68db      	ldr	r3, [r3, #12]
 80232ca:	059a      	lsls	r2, r3, #22
 80232cc:	d41e      	bmi.n	802330c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 80232ce:	f1b9 0f01 	cmp.w	r9, #1
 80232d2:	d81b      	bhi.n	802330c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 80232d4:	b1d5      	cbz	r5, 802330c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 80232d6:	2d01      	cmp	r5, #1
 80232d8:	d10c      	bne.n	80232f4 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x104>
 80232da:	9b01      	ldr	r3, [sp, #4]
 80232dc:	b9b3      	cbnz	r3, 802330c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 80232de:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 80232e2:	2b03      	cmp	r3, #3
 80232e4:	d012      	beq.n	802330c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 80232e6:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 80232ea:	2b01      	cmp	r3, #1
 80232ec:	d00e      	beq.n	802330c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 80232ee:	f04f 0b01 	mov.w	fp, #1
 80232f2:	e02b      	b.n	802334c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 80232f4:	2d02      	cmp	r5, #2
 80232f6:	d1fa      	bne.n	80232ee <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfe>
 80232f8:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
 80232fc:	2b04      	cmp	r3, #4
 80232fe:	d005      	beq.n	802330c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x11c>
 8023300:	9a01      	ldr	r2, [sp, #4]
 8023302:	2a00      	cmp	r2, #0
 8023304:	d0f3      	beq.n	80232ee <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfe>
 8023306:	2b03      	cmp	r3, #3
 8023308:	f040 8114 	bne.w	8023534 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x344>
 802330c:	6a23      	ldr	r3, [r4, #32]
 802330e:	9303      	str	r3, [sp, #12]
 8023310:	f04f 0a00 	mov.w	sl, #0
 8023314:	a918      	add	r1, sp, #96	; 0x60
 8023316:	a806      	add	r0, sp, #24
 8023318:	f7f2 fd56 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 802331c:	9b03      	ldr	r3, [sp, #12]
 802331e:	4683      	mov	fp, r0
 8023320:	2800      	cmp	r0, #0
 8023322:	d03c      	beq.n	802339e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1ae>
 8023324:	459a      	cmp	sl, r3
 8023326:	d011      	beq.n	802334c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 8023328:	a806      	add	r0, sp, #24
 802332a:	f7f2 fd2b 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 802332e:	69e3      	ldr	r3, [r4, #28]
 8023330:	f853 302a 	ldr.w	r3, [r3, sl, lsl #2]
 8023334:	4283      	cmp	r3, r0
 8023336:	d035      	beq.n	80233a4 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1b4>
 8023338:	f1ba 0f00 	cmp.w	sl, #0
 802333c:	f040 80fd 	bne.w	802353a <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x34a>
 8023340:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8023342:	68db      	ldr	r3, [r3, #12]
 8023344:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 8023348:	f3c3 2b40 	ubfx	fp, r3, #9, #1
 802334c:	3501      	adds	r5, #1
 802334e:	2d04      	cmp	r5, #4
 8023350:	d193      	bne.n	802327a <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x8a>
 8023352:	f1b9 0f01 	cmp.w	r9, #1
 8023356:	f240 8142 	bls.w	80235de <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ee>
 802335a:	f1bb 0f00 	cmp.w	fp, #0
 802335e:	d08f      	beq.n	8023280 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 8023360:	9b00      	ldr	r3, [sp, #0]
 8023362:	2b00      	cmp	r3, #0
 8023364:	f000 80ec 	beq.w	8023540 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x350>
 8023368:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 802336a:	f04f 0b01 	mov.w	fp, #1
 802336e:	a918      	add	r1, sp, #96	; 0x60
 8023370:	a806      	add	r0, sp, #24
 8023372:	f7f2 fd29 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 8023376:	2800      	cmp	r0, #0
 8023378:	f000 80e4 	beq.w	8023544 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x354>
 802337c:	45d9      	cmp	r9, fp
 802337e:	f000 80e4 	beq.w	802354a <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x35a>
 8023382:	a806      	add	r0, sp, #24
 8023384:	f7f2 fcfe 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8023388:	f855 302b 	ldr.w	r3, [r5, fp, lsl #2]
 802338c:	4283      	cmp	r3, r0
 802338e:	f47f af77 	bne.w	8023280 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 8023392:	a806      	add	r0, sp, #24
 8023394:	f7fb ffb6 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 8023398:	f10b 0b01 	add.w	fp, fp, #1
 802339c:	e7e7      	b.n	802336e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x17e>
 802339e:	459a      	cmp	sl, r3
 80233a0:	d1ca      	bne.n	8023338 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x148>
 80233a2:	e7a4      	b.n	80232ee <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0xfe>
 80233a4:	a806      	add	r0, sp, #24
 80233a6:	f7fb ffad 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 80233aa:	f10a 0a01 	add.w	sl, sl, #1
 80233ae:	e7b1      	b.n	8023314 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x124>
 80233b0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80233b2:	b9b3      	cbnz	r3, 80233e2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1f2>
 80233b4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80233b6:	b343      	cbz	r3, 802340a <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21a>
 80233b8:	a918      	add	r1, sp, #96	; 0x60
 80233ba:	a806      	add	r0, sp, #24
 80233bc:	f7f2 fd04 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80233c0:	4683      	mov	fp, r0
 80233c2:	b310      	cbz	r0, 802340a <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21a>
 80233c4:	a806      	add	r0, sp, #24
 80233c6:	f7f2 fcdd 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80233ca:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80233cc:	6812      	ldr	r2, [r2, #0]
 80233ce:	4282      	cmp	r2, r0
 80233d0:	d11b      	bne.n	802340a <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21a>
 80233d2:	a806      	add	r0, sp, #24
 80233d4:	f8d4 9030 	ldr.w	r9, [r4, #48]	; 0x30
 80233d8:	f7fb ff94 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 80233dc:	f8cd b000 	str.w	fp, [sp]
 80233e0:	e7b4      	b.n	802334c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 80233e2:	a918      	add	r1, sp, #96	; 0x60
 80233e4:	a806      	add	r0, sp, #24
 80233e6:	f7f2 fcef 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80233ea:	4683      	mov	fp, r0
 80233ec:	2800      	cmp	r0, #0
 80233ee:	d0e1      	beq.n	80233b4 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1c4>
 80233f0:	a806      	add	r0, sp, #24
 80233f2:	f7f2 fcc7 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80233f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80233f8:	6812      	ldr	r2, [r2, #0]
 80233fa:	4282      	cmp	r2, r0
 80233fc:	d1da      	bne.n	80233b4 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x1c4>
 80233fe:	a806      	add	r0, sp, #24
 8023400:	f8d4 9028 	ldr.w	r9, [r4, #40]	; 0x28
 8023404:	f7fb ff7e 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 8023408:	e7a0      	b.n	802334c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 802340a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802340c:	b91b      	cbnz	r3, 8023416 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x226>
 802340e:	9b01      	ldr	r3, [sp, #4]
 8023410:	f083 0b01 	eor.w	fp, r3, #1
 8023414:	e79a      	b.n	802334c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 8023416:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8023418:	2b00      	cmp	r3, #0
 802341a:	d1f8      	bne.n	802340e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x21e>
 802341c:	2301      	movs	r3, #1
 802341e:	9300      	str	r3, [sp, #0]
 8023420:	469b      	mov	fp, r3
 8023422:	e793      	b.n	802334c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 8023424:	a918      	add	r1, sp, #96	; 0x60
 8023426:	a806      	add	r0, sp, #24
 8023428:	f7f2 fcce 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 802342c:	4683      	mov	fp, r0
 802342e:	2800      	cmp	r0, #0
 8023430:	d049      	beq.n	80234c6 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2d6>
 8023432:	a806      	add	r0, sp, #24
 8023434:	f7f2 fca6 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8023438:	aa0b      	add	r2, sp, #44	; 0x2c
 802343a:	900b      	str	r0, [sp, #44]	; 0x2c
 802343c:	210a      	movs	r1, #10
 802343e:	ee18 0a90 	vmov	r0, s17
 8023442:	f7ed f86a 	bl	801051a <_ZNSt11char_traitsIwE4findEPKwjRS1_>
 8023446:	b1a0      	cbz	r0, 8023472 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x282>
 8023448:	9b05      	ldr	r3, [sp, #20]
 802344a:	eba0 0b03 	sub.w	fp, r0, r3
 802344e:	4b16      	ldr	r3, [pc, #88]	; (80234a8 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2b8>)
 8023450:	ea4f 0bab 	mov.w	fp, fp, asr #2
 8023454:	681b      	ldr	r3, [r3, #0]
 8023456:	a809      	add	r0, sp, #36	; 0x24
 8023458:	f813 100b 	ldrb.w	r1, [r3, fp]
 802345c:	f7ec ffe7 	bl	801042e <_ZNSs9push_backEc>
 8023460:	f106 0b01 	add.w	fp, r6, #1
 8023464:	9e02      	ldr	r6, [sp, #8]
 8023466:	a806      	add	r0, sp, #24
 8023468:	f7fb ff4c 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 802346c:	9602      	str	r6, [sp, #8]
 802346e:	465e      	mov	r6, fp
 8023470:	e7d8      	b.n	8023424 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x234>
 8023472:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8023474:	6962      	ldr	r2, [r4, #20]
 8023476:	428a      	cmp	r2, r1
 8023478:	d106      	bne.n	8023488 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x298>
 802347a:	b92f      	cbnz	r7, 8023488 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x298>
 802347c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802347e:	2a00      	cmp	r2, #0
 8023480:	dd15      	ble.n	80234ae <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2be>
 8023482:	465f      	mov	r7, fp
 8023484:	4683      	mov	fp, r0
 8023486:	e7ee      	b.n	8023466 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x276>
 8023488:	7c22      	ldrb	r2, [r4, #16]
 802348a:	b182      	cbz	r2, 80234ae <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2be>
 802348c:	69a3      	ldr	r3, [r4, #24]
 802348e:	4299      	cmp	r1, r3
 8023490:	d10c      	bne.n	80234ac <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2bc>
 8023492:	b9a7      	cbnz	r7, 80234be <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2ce>
 8023494:	b1ae      	cbz	r6, 80234c2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2d2>
 8023496:	b2f1      	uxtb	r1, r6
 8023498:	a808      	add	r0, sp, #32
 802349a:	f7ec ffc8 	bl	801042e <_ZNSs9push_backEc>
 802349e:	46bb      	mov	fp, r7
 80234a0:	9e02      	ldr	r6, [sp, #8]
 80234a2:	e7e0      	b.n	8023466 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x276>
 80234a4:	20003bf0 	.word	0x20003bf0
 80234a8:	2000003c 	.word	0x2000003c
 80234ac:	4693      	mov	fp, r2
 80234ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80234b0:	f852 2c0c 	ldr.w	r2, [r2, #-12]
 80234b4:	2a00      	cmp	r2, #0
 80234b6:	bf08      	it	eq
 80234b8:	f04f 0b00 	moveq.w	fp, #0
 80234bc:	e746      	b.n	802334c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 80234be:	46bb      	mov	fp, r7
 80234c0:	e7f5      	b.n	80234ae <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2be>
 80234c2:	46b3      	mov	fp, r6
 80234c4:	e7f3      	b.n	80234ae <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2be>
 80234c6:	f04f 0b01 	mov.w	fp, #1
 80234ca:	e7f0      	b.n	80234ae <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2be>
 80234cc:	a918      	add	r1, sp, #96	; 0x60
 80234ce:	a806      	add	r0, sp, #24
 80234d0:	f7f2 fc7a 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80234d4:	b9d8      	cbnz	r0, 802350e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x31e>
 80234d6:	f04f 0b00 	mov.w	fp, #0
 80234da:	2d03      	cmp	r5, #3
 80234dc:	f43f af36 	beq.w	802334c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 80234e0:	a918      	add	r1, sp, #96	; 0x60
 80234e2:	a806      	add	r0, sp, #24
 80234e4:	f7f2 fc70 	bl	8015dc8 <_ZStneIwSt11char_traitsIwEEbRKSt19istreambuf_iteratorIT_T0_ES7_>
 80234e8:	2800      	cmp	r0, #0
 80234ea:	f43f af2f 	beq.w	802334c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 80234ee:	a806      	add	r0, sp, #24
 80234f0:	f7f2 fc48 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 80234f4:	2108      	movs	r1, #8
 80234f6:	4602      	mov	r2, r0
 80234f8:	ee18 0a10 	vmov	r0, s16
 80234fc:	f7f2 f945 	bl	801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>
 8023500:	2800      	cmp	r0, #0
 8023502:	f43f af23 	beq.w	802334c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 8023506:	a806      	add	r0, sp, #24
 8023508:	f7fb fefc 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 802350c:	e7e8      	b.n	80234e0 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2f0>
 802350e:	a806      	add	r0, sp, #24
 8023510:	f7f2 fc38 	bl	8015d84 <_ZNKSt19istreambuf_iteratorIwSt11char_traitsIwEE6_M_getEv>
 8023514:	2108      	movs	r1, #8
 8023516:	4602      	mov	r2, r0
 8023518:	ee18 0a10 	vmov	r0, s16
 802351c:	f7f2 f935 	bl	801578a <_ZNKSt21__ctype_abstract_baseIwE2isEcw>
 8023520:	4683      	mov	fp, r0
 8023522:	2800      	cmp	r0, #0
 8023524:	d0d7      	beq.n	80234d6 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2e6>
 8023526:	a806      	add	r0, sp, #24
 8023528:	f7fb feec 	bl	801f304 <_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv>
 802352c:	e7d5      	b.n	80234da <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2ea>
 802352e:	f04f 0b01 	mov.w	fp, #1
 8023532:	e7d2      	b.n	80234da <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x2ea>
 8023534:	f8dd b004 	ldr.w	fp, [sp, #4]
 8023538:	e708      	b.n	802334c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 802353a:	f04f 0b00 	mov.w	fp, #0
 802353e:	e705      	b.n	802334c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x15c>
 8023540:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8023542:	e712      	b.n	802336a <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x17a>
 8023544:	45d9      	cmp	r9, fp
 8023546:	f47f ae9b 	bne.w	8023280 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 802354a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802354c:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 8023550:	2b01      	cmp	r3, #1
 8023552:	d913      	bls.n	802357c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x38c>
 8023554:	2200      	movs	r2, #0
 8023556:	2130      	movs	r1, #48	; 0x30
 8023558:	a809      	add	r0, sp, #36	; 0x24
 802355a:	f7ec fcba 	bl	800fed2 <_ZNKSs17find_first_not_ofEcj>
 802355e:	4602      	mov	r2, r0
 8023560:	b160      	cbz	r0, 802357c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x38c>
 8023562:	1c43      	adds	r3, r0, #1
 8023564:	bf04      	itt	eq
 8023566:	9b09      	ldreq	r3, [sp, #36]	; 0x24
 8023568:	f853 2c0c 	ldreq.w	r2, [r3, #-12]
 802356c:	f04f 0100 	mov.w	r1, #0
 8023570:	bf08      	it	eq
 8023572:	f102 32ff 	addeq.w	r2, r2, #4294967295	; 0xffffffff
 8023576:	a809      	add	r0, sp, #36	; 0x24
 8023578:	f7fa ffc2 	bl	801e500 <_ZNSs5eraseEjj.isra.0>
 802357c:	9b00      	ldr	r3, [sp, #0]
 802357e:	b173      	cbz	r3, 802359e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ae>
 8023580:	a809      	add	r0, sp, #36	; 0x24
 8023582:	f7ec fdc1 	bl	8010108 <_ZNSs7_M_leakEv>
 8023586:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023588:	781b      	ldrb	r3, [r3, #0]
 802358a:	2b30      	cmp	r3, #48	; 0x30
 802358c:	d007      	beq.n	802359e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3ae>
 802358e:	a809      	add	r0, sp, #36	; 0x24
 8023590:	f7ec fdc3 	bl	801011a <_ZNSs5beginEv>
 8023594:	222d      	movs	r2, #45	; 0x2d
 8023596:	4601      	mov	r1, r0
 8023598:	a809      	add	r0, sp, #36	; 0x24
 802359a:	f7ec fdf9 	bl	8010190 <_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc>
 802359e:	9b08      	ldr	r3, [sp, #32]
 80235a0:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 80235a4:	b18b      	cbz	r3, 80235ca <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3da>
 80235a6:	b1f7      	cbz	r7, 80235e6 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3f6>
 80235a8:	f89d 1008 	ldrb.w	r1, [sp, #8]
 80235ac:	a808      	add	r0, sp, #32
 80235ae:	f7ec ff3e 	bl	801042e <_ZNSs9push_backEc>
 80235b2:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 80235b6:	aa08      	add	r2, sp, #32
 80235b8:	f001 faf8 	bl	8024bac <_ZSt17__verify_groupingPKcjRKSs>
 80235bc:	b928      	cbnz	r0, 80235ca <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3da>
 80235be:	f8d8 3000 	ldr.w	r3, [r8]
 80235c2:	f043 0304 	orr.w	r3, r3, #4
 80235c6:	f8c8 3000 	str.w	r3, [r8]
 80235ca:	b11f      	cbz	r7, 80235d4 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3e4>
 80235cc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80235ce:	42b3      	cmp	r3, r6
 80235d0:	f47f ae56 	bne.w	8023280 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 80235d4:	981c      	ldr	r0, [sp, #112]	; 0x70
 80235d6:	a909      	add	r1, sp, #36	; 0x24
 80235d8:	f7ec fc66 	bl	800fea8 <_ZNSs4swapERSs>
 80235dc:	e656      	b.n	802328c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x9c>
 80235de:	f1bb 0f00 	cmp.w	fp, #0
 80235e2:	d1b2      	bne.n	802354a <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x35a>
 80235e4:	e64c      	b.n	8023280 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x90>
 80235e6:	b2f1      	uxtb	r1, r6
 80235e8:	e7e0      	b.n	80235ac <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs+0x3bc>
 80235ea:	bf00      	nop

080235ec <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRe>:
 80235ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80235f0:	b08c      	sub	sp, #48	; 0x30
 80235f2:	ac08      	add	r4, sp, #32
 80235f4:	e884 000c 	stmia.w	r4, {r2, r3}
 80235f8:	e9dd 3815 	ldrd	r3, r8, [sp, #84]	; 0x54
 80235fc:	af0a      	add	r7, sp, #40	; 0x28
 80235fe:	e9cd 8703 	strd	r8, r7, [sp, #12]
 8023602:	9302      	str	r3, [sp, #8]
 8023604:	468c      	mov	ip, r1
 8023606:	ab12      	add	r3, sp, #72	; 0x48
 8023608:	4918      	ldr	r1, [pc, #96]	; (802366c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRe+0x80>)
 802360a:	910a      	str	r1, [sp, #40]	; 0x28
 802360c:	4606      	mov	r6, r0
 802360e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8023612:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8023616:	e88d 0003 	stmia.w	sp, {r0, r1}
 802361a:	ad06      	add	r5, sp, #24
 802361c:	b1f2      	cbz	r2, 802365c <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRe+0x70>
 802361e:	e894 000c 	ldmia.w	r4, {r2, r3}
 8023622:	4661      	mov	r1, ip
 8023624:	4628      	mov	r0, r5
 8023626:	f7ff fbe5 	bl	8022df4 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 802362a:	e895 0003 	ldmia.w	r5, {r0, r1}
 802362e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8023630:	e884 0003 	stmia.w	r4, {r0, r1}
 8023634:	f7e8 fe52 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8023638:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802363a:	900b      	str	r0, [sp, #44]	; 0x2c
 802363c:	ab0b      	add	r3, sp, #44	; 0x2c
 802363e:	4642      	mov	r2, r8
 8023640:	4628      	mov	r0, r5
 8023642:	f001 f841 	bl	80246c8 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi>
 8023646:	e894 0003 	ldmia.w	r4, {r0, r1}
 802364a:	e886 0003 	stmia.w	r6, {r0, r1}
 802364e:	4638      	mov	r0, r7
 8023650:	f7ec fcd8 	bl	8010004 <_ZNSsD1Ev>
 8023654:	4630      	mov	r0, r6
 8023656:	b00c      	add	sp, #48	; 0x30
 8023658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802365c:	e894 000c 	ldmia.w	r4, {r2, r3}
 8023660:	4661      	mov	r1, ip
 8023662:	4628      	mov	r0, r5
 8023664:	f7ff fdc4 	bl	80231f0 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 8023668:	e7df      	b.n	802362a <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRe+0x3e>
 802366a:	bf00      	nop
 802366c:	20003bf0 	.word	0x20003bf0

08023670 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSbIwS2_SaIwEE>:
 8023670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023674:	b08f      	sub	sp, #60	; 0x3c
 8023676:	ac0a      	add	r4, sp, #40	; 0x28
 8023678:	e884 000c 	stmia.w	r4, {r2, r3}
 802367c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802367e:	f89d b068 	ldrb.w	fp, [sp, #104]	; 0x68
 8023682:	f8dd 9074 	ldr.w	r9, [sp, #116]	; 0x74
 8023686:	4606      	mov	r6, r0
 8023688:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 802368c:	468a      	mov	sl, r1
 802368e:	f7fb f9e7 	bl	801ea60 <_ZSt9use_facetISt5ctypeIwEERKT_RKSt6locale>
 8023692:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023694:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8023696:	491f      	ldr	r1, [pc, #124]	; (8023714 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSbIwS2_SaIwEE+0xa4>)
 8023698:	910d      	str	r1, [sp, #52]	; 0x34
 802369a:	e9cd 3202 	strd	r3, r2, [sp, #8]
 802369e:	af0d      	add	r7, sp, #52	; 0x34
 80236a0:	9704      	str	r7, [sp, #16]
 80236a2:	ab18      	add	r3, sp, #96	; 0x60
 80236a4:	4680      	mov	r8, r0
 80236a6:	e893 0003 	ldmia.w	r3, {r0, r1}
 80236aa:	e88d 0003 	stmia.w	sp, {r0, r1}
 80236ae:	ad08      	add	r5, sp, #32
 80236b0:	e894 000c 	ldmia.w	r4, {r2, r3}
 80236b4:	4651      	mov	r1, sl
 80236b6:	4628      	mov	r0, r5
 80236b8:	f1bb 0f00 	cmp.w	fp, #0
 80236bc:	d027      	beq.n	802370e <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSbIwS2_SaIwEE+0x9e>
 80236be:	f7ff fb99 	bl	8022df4 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb1EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 80236c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80236c4:	e895 0003 	ldmia.w	r5, {r0, r1}
 80236c8:	f853 5c0c 	ldr.w	r5, [r3, #-12]
 80236cc:	e884 0003 	stmia.w	r4, {r0, r1}
 80236d0:	b195      	cbz	r5, 80236f8 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSbIwS2_SaIwEE+0x88>
 80236d2:	4629      	mov	r1, r5
 80236d4:	4648      	mov	r0, r9
 80236d6:	f7ed fa29 	bl	8010b2c <_ZNSbIwSt11char_traitsIwESaIwEE6resizeEj>
 80236da:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 80236de:	4648      	mov	r0, r9
 80236e0:	eb0a 0205 	add.w	r2, sl, r5
 80236e4:	9207      	str	r2, [sp, #28]
 80236e6:	f7ed f8a7 	bl	8010838 <_ZNSbIwSt11char_traitsIwESaIwEE7_M_leakEv>
 80236ea:	f8d9 3000 	ldr.w	r3, [r9]
 80236ee:	9a07      	ldr	r2, [sp, #28]
 80236f0:	4651      	mov	r1, sl
 80236f2:	4640      	mov	r0, r8
 80236f4:	f7f2 f842 	bl	801577c <_ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw>
 80236f8:	e894 0003 	ldmia.w	r4, {r0, r1}
 80236fc:	e886 0003 	stmia.w	r6, {r0, r1}
 8023700:	4638      	mov	r0, r7
 8023702:	f7ec fc7f 	bl	8010004 <_ZNSsD1Ev>
 8023706:	4630      	mov	r0, r6
 8023708:	b00f      	add	sp, #60	; 0x3c
 802370a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802370e:	f7ff fd6f 	bl	80231f0 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE10_M_extractILb0EEES3_S3_S3_RSt8ios_baseRSt12_Ios_IostateRSs>
 8023712:	e7d6      	b.n	80236c2 <_ZNKSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE6do_getES3_S3_bRSt8ios_baseRSt12_Ios_IostateRSbIwS2_SaIwEE+0x52>
 8023714:	20003bf0 	.word	0x20003bf0

08023718 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj>:
 8023718:	4b24      	ldr	r3, [pc, #144]	; (80237ac <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x94>)
 802371a:	681a      	ldr	r2, [r3, #0]
 802371c:	07d0      	lsls	r0, r2, #31
 802371e:	bf5c      	itt	pl
 8023720:	2201      	movpl	r2, #1
 8023722:	601a      	strpl	r2, [r3, #0]
 8023724:	4b22      	ldr	r3, [pc, #136]	; (80237b0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x98>)
 8023726:	681a      	ldr	r2, [r3, #0]
 8023728:	07d1      	lsls	r1, r2, #31
 802372a:	bf5c      	itt	pl
 802372c:	2201      	movpl	r2, #1
 802372e:	601a      	strpl	r2, [r3, #0]
 8023730:	4b20      	ldr	r3, [pc, #128]	; (80237b4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x9c>)
 8023732:	681a      	ldr	r2, [r3, #0]
 8023734:	07d2      	lsls	r2, r2, #31
 8023736:	bf5c      	itt	pl
 8023738:	2201      	movpl	r2, #1
 802373a:	601a      	strpl	r2, [r3, #0]
 802373c:	4b1e      	ldr	r3, [pc, #120]	; (80237b8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa0>)
 802373e:	681a      	ldr	r2, [r3, #0]
 8023740:	07d0      	lsls	r0, r2, #31
 8023742:	bf5c      	itt	pl
 8023744:	2201      	movpl	r2, #1
 8023746:	601a      	strpl	r2, [r3, #0]
 8023748:	4b1c      	ldr	r3, [pc, #112]	; (80237bc <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa4>)
 802374a:	681a      	ldr	r2, [r3, #0]
 802374c:	07d1      	lsls	r1, r2, #31
 802374e:	bf5c      	itt	pl
 8023750:	2201      	movpl	r2, #1
 8023752:	601a      	strpl	r2, [r3, #0]
 8023754:	4b1a      	ldr	r3, [pc, #104]	; (80237c0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xa8>)
 8023756:	681a      	ldr	r2, [r3, #0]
 8023758:	07d2      	lsls	r2, r2, #31
 802375a:	bf5c      	itt	pl
 802375c:	2201      	movpl	r2, #1
 802375e:	601a      	strpl	r2, [r3, #0]
 8023760:	4b18      	ldr	r3, [pc, #96]	; (80237c4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xac>)
 8023762:	681a      	ldr	r2, [r3, #0]
 8023764:	07d0      	lsls	r0, r2, #31
 8023766:	bf5c      	itt	pl
 8023768:	2201      	movpl	r2, #1
 802376a:	601a      	strpl	r2, [r3, #0]
 802376c:	4b16      	ldr	r3, [pc, #88]	; (80237c8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb0>)
 802376e:	681a      	ldr	r2, [r3, #0]
 8023770:	07d1      	lsls	r1, r2, #31
 8023772:	bf5c      	itt	pl
 8023774:	2201      	movpl	r2, #1
 8023776:	601a      	strpl	r2, [r3, #0]
 8023778:	4b14      	ldr	r3, [pc, #80]	; (80237cc <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb4>)
 802377a:	681a      	ldr	r2, [r3, #0]
 802377c:	07d2      	lsls	r2, r2, #31
 802377e:	bf5c      	itt	pl
 8023780:	2201      	movpl	r2, #1
 8023782:	601a      	strpl	r2, [r3, #0]
 8023784:	4b12      	ldr	r3, [pc, #72]	; (80237d0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xb8>)
 8023786:	681a      	ldr	r2, [r3, #0]
 8023788:	07d0      	lsls	r0, r2, #31
 802378a:	bf5c      	itt	pl
 802378c:	2201      	movpl	r2, #1
 802378e:	601a      	strpl	r2, [r3, #0]
 8023790:	4b10      	ldr	r3, [pc, #64]	; (80237d4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xbc>)
 8023792:	681a      	ldr	r2, [r3, #0]
 8023794:	07d1      	lsls	r1, r2, #31
 8023796:	bf5c      	itt	pl
 8023798:	2201      	movpl	r2, #1
 802379a:	601a      	strpl	r2, [r3, #0]
 802379c:	4b0e      	ldr	r3, [pc, #56]	; (80237d8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xc0>)
 802379e:	681a      	ldr	r2, [r3, #0]
 80237a0:	07d2      	lsls	r2, r2, #31
 80237a2:	bf5c      	itt	pl
 80237a4:	2201      	movpl	r2, #1
 80237a6:	601a      	strpl	r2, [r3, #0]
 80237a8:	4770      	bx	lr
 80237aa:	bf00      	nop
 80237ac:	20003d1c 	.word	0x20003d1c
 80237b0:	20003d18 	.word	0x20003d18
 80237b4:	20003d14 	.word	0x20003d14
 80237b8:	20003d10 	.word	0x20003d10
 80237bc:	20003d0c 	.word	0x20003d0c
 80237c0:	20003d08 	.word	0x20003d08
 80237c4:	20003d04 	.word	0x20003d04
 80237c8:	20003d00 	.word	0x20003d00
 80237cc:	20003cfc 	.word	0x20003cfc
 80237d0:	20003cf8 	.word	0x20003cf8
 80237d4:	20003cf4 	.word	0x20003cf4
 80237d8:	20003cf0 	.word	0x20003cf0

080237dc <_ZNSt11char_traitsIwE4copyEPwPKwj.isra.0>:
 80237dc:	b10a      	cbz	r2, 80237e2 <_ZNSt11char_traitsIwE4copyEPwPKwj.isra.0+0x6>
 80237de:	f006 bfba 	b.w	802a756 <wmemcpy>
 80237e2:	4770      	bx	lr

080237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>:
 80237e4:	6803      	ldr	r3, [r0, #0]
 80237e6:	6041      	str	r1, [r0, #4]
 80237e8:	2200      	movs	r2, #0
 80237ea:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 80237ee:	4770      	bx	lr

080237f0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj>:
 80237f0:	b508      	push	{r3, lr}
 80237f2:	680b      	ldr	r3, [r1, #0]
 80237f4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80237f8:	d302      	bcc.n	8023800 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj+0x10>
 80237fa:	480e      	ldr	r0, [pc, #56]	; (8023834 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj+0x44>)
 80237fc:	f7f4 f819 	bl	8017832 <_ZSt20__throw_length_errorPKc>
 8023800:	4293      	cmp	r3, r2
 8023802:	d90b      	bls.n	802381c <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj+0x2c>
 8023804:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8023808:	ea4f 0042 	mov.w	r0, r2, lsl #1
 802380c:	d206      	bcs.n	802381c <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj+0x2c>
 802380e:	f1b0 5f80 	cmp.w	r0, #268435456	; 0x10000000
 8023812:	bf2a      	itet	cs
 8023814:	f06f 4370 	mvncs.w	r3, #4026531840	; 0xf0000000
 8023818:	6008      	strcc	r0, [r1, #0]
 802381a:	600b      	strcs	r3, [r1, #0]
 802381c:	6808      	ldr	r0, [r1, #0]
 802381e:	3001      	adds	r0, #1
 8023820:	f1b0 5f00 	cmp.w	r0, #536870912	; 0x20000000
 8023824:	d301      	bcc.n	802382a <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj+0x3a>
 8023826:	f7f3 fffb 	bl	8017820 <_ZSt17__throw_bad_allocv>
 802382a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 802382e:	0080      	lsls	r0, r0, #2
 8023830:	f7e8 bb86 	b.w	800bf40 <_Znwj>
 8023834:	08031086 	.word	0x08031086

08023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>:
 8023838:	f850 3b08 	ldr.w	r3, [r0], #8
 802383c:	4283      	cmp	r3, r0
 802383e:	d002      	beq.n	8023846 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv+0xe>
 8023840:	4618      	mov	r0, r3
 8023842:	f000 bb43 	b.w	8023ecc <_ZdlPv>
 8023846:	4770      	bx	lr

08023848 <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE8_M_checkEjPKc>:
 8023848:	b508      	push	{r3, lr}
 802384a:	4603      	mov	r3, r0
 802384c:	4608      	mov	r0, r1
 802384e:	685b      	ldr	r3, [r3, #4]
 8023850:	4298      	cmp	r0, r3
 8023852:	4611      	mov	r1, r2
 8023854:	d903      	bls.n	802385e <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE8_M_checkEjPKc+0x16>
 8023856:	4602      	mov	r2, r0
 8023858:	4801      	ldr	r0, [pc, #4]	; (8023860 <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE8_M_checkEjPKc+0x18>)
 802385a:	f7f3 ffed 	bl	8017838 <_ZSt24__throw_out_of_range_fmtPKcz>
 802385e:	bd08      	pop	{r3, pc}
 8023860:	0802f5dc 	.word	0x0802f5dc

08023864 <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc>:
 8023864:	6840      	ldr	r0, [r0, #4]
 8023866:	f101 5180 	add.w	r1, r1, #268435456	; 0x10000000
 802386a:	3901      	subs	r1, #1
 802386c:	1a09      	subs	r1, r1, r0
 802386e:	4291      	cmp	r1, r2
 8023870:	b508      	push	{r3, lr}
 8023872:	d202      	bcs.n	802387a <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc+0x16>
 8023874:	4618      	mov	r0, r3
 8023876:	f7f3 ffdc 	bl	8017832 <_ZSt20__throw_length_errorPKc>
 802387a:	bd08      	pop	{r3, pc}

0802387c <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE11_M_disjunctEPKw>:
 802387c:	6803      	ldr	r3, [r0, #0]
 802387e:	428b      	cmp	r3, r1
 8023880:	d807      	bhi.n	8023892 <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE11_M_disjunctEPKw+0x16>
 8023882:	6840      	ldr	r0, [r0, #4]
 8023884:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8023888:	4281      	cmp	r1, r0
 802388a:	bf94      	ite	ls
 802388c:	2000      	movls	r0, #0
 802388e:	2001      	movhi	r0, #1
 8023890:	4770      	bx	lr
 8023892:	2001      	movs	r0, #1
 8023894:	4770      	bx	lr

08023896 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj>:
 8023896:	2a01      	cmp	r2, #1
 8023898:	b410      	push	{r4}
 802389a:	d104      	bne.n	80238a6 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj+0x10>
 802389c:	680a      	ldr	r2, [r1, #0]
 802389e:	f85d 4b04 	ldr.w	r4, [sp], #4
 80238a2:	6002      	str	r2, [r0, #0]
 80238a4:	4770      	bx	lr
 80238a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80238aa:	f7ff bf97 	b.w	80237dc <_ZNSt11char_traitsIwE4copyEPwPKwj.isra.0>

080238ae <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_moveEPwPKwj>:
 80238ae:	2a01      	cmp	r2, #1
 80238b0:	b430      	push	{r4, r5}
 80238b2:	d103      	bne.n	80238bc <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_moveEPwPKwj+0xe>
 80238b4:	680b      	ldr	r3, [r1, #0]
 80238b6:	6003      	str	r3, [r0, #0]
 80238b8:	bc30      	pop	{r4, r5}
 80238ba:	4770      	bx	lr
 80238bc:	2a00      	cmp	r2, #0
 80238be:	d0fb      	beq.n	80238b8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_moveEPwPKwj+0xa>
 80238c0:	bc30      	pop	{r4, r5}
 80238c2:	f006 bf4b 	b.w	802a75c <wmemmove>

080238c6 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_S_assignEPwjw>:
 80238c6:	460b      	mov	r3, r1
 80238c8:	2b01      	cmp	r3, #1
 80238ca:	b410      	push	{r4}
 80238cc:	4611      	mov	r1, r2
 80238ce:	4604      	mov	r4, r0
 80238d0:	d103      	bne.n	80238da <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_S_assignEPwjw+0x14>
 80238d2:	6022      	str	r2, [r4, #0]
 80238d4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80238d8:	4770      	bx	lr
 80238da:	2b00      	cmp	r3, #0
 80238dc:	d0fa      	beq.n	80238d4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_S_assignEPwjw+0xe>
 80238de:	f85d 4b04 	ldr.w	r4, [sp], #4
 80238e2:	461a      	mov	r2, r3
 80238e4:	f006 bf3d 	b.w	802a762 <wmemset>

080238e8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructEjw>:
 80238e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80238ea:	2903      	cmp	r1, #3
 80238ec:	4604      	mov	r4, r0
 80238ee:	9101      	str	r1, [sp, #4]
 80238f0:	4615      	mov	r5, r2
 80238f2:	d906      	bls.n	8023902 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructEjw+0x1a>
 80238f4:	2200      	movs	r2, #0
 80238f6:	a901      	add	r1, sp, #4
 80238f8:	f7ff ff7a 	bl	80237f0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj>
 80238fc:	9b01      	ldr	r3, [sp, #4]
 80238fe:	6020      	str	r0, [r4, #0]
 8023900:	60a3      	str	r3, [r4, #8]
 8023902:	9901      	ldr	r1, [sp, #4]
 8023904:	b119      	cbz	r1, 802390e <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructEjw+0x26>
 8023906:	6820      	ldr	r0, [r4, #0]
 8023908:	462a      	mov	r2, r5
 802390a:	f7ff ffdc 	bl	80238c6 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_S_assignEPwjw>
 802390e:	9901      	ldr	r1, [sp, #4]
 8023910:	4620      	mov	r0, r4
 8023912:	f7ff ff67 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 8023916:	b003      	add	sp, #12
 8023918:	bd30      	pop	{r4, r5, pc}

0802391a <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwS5_S5_>:
 802391a:	b508      	push	{r3, lr}
 802391c:	1a52      	subs	r2, r2, r1
 802391e:	1092      	asrs	r2, r2, #2
 8023920:	f7ff ffb9 	bl	8023896 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj>
 8023924:	bd08      	pop	{r3, pc}

08023926 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwPKwS7_>:
 8023926:	b508      	push	{r3, lr}
 8023928:	1a52      	subs	r2, r2, r1
 802392a:	1092      	asrs	r2, r2, #2
 802392c:	f7ff ffb3 	bl	8023896 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj>
 8023930:	bd08      	pop	{r3, pc}

08023932 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_mutateEjjPKwj>:
 8023932:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8023936:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8023938:	461f      	mov	r7, r3
 802393a:	6843      	ldr	r3, [r0, #4]
 802393c:	eb01 0802 	add.w	r8, r1, r2
 8023940:	1ab2      	subs	r2, r6, r2
 8023942:	441a      	add	r2, r3
 8023944:	eba3 0908 	sub.w	r9, r3, r8
 8023948:	4603      	mov	r3, r0
 802394a:	9201      	str	r2, [sp, #4]
 802394c:	f853 2b08 	ldr.w	r2, [r3], #8
 8023950:	429a      	cmp	r2, r3
 8023952:	bf18      	it	ne
 8023954:	6882      	ldrne	r2, [r0, #8]
 8023956:	460d      	mov	r5, r1
 8023958:	bf08      	it	eq
 802395a:	2203      	moveq	r2, #3
 802395c:	a901      	add	r1, sp, #4
 802395e:	4604      	mov	r4, r0
 8023960:	f7ff ff46 	bl	80237f0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj>
 8023964:	4682      	mov	sl, r0
 8023966:	b11d      	cbz	r5, 8023970 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_mutateEjjPKwj+0x3e>
 8023968:	6821      	ldr	r1, [r4, #0]
 802396a:	462a      	mov	r2, r5
 802396c:	f7ff ff93 	bl	8023896 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj>
 8023970:	b137      	cbz	r7, 8023980 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_mutateEjjPKwj+0x4e>
 8023972:	b12e      	cbz	r6, 8023980 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_mutateEjjPKwj+0x4e>
 8023974:	4632      	mov	r2, r6
 8023976:	4639      	mov	r1, r7
 8023978:	eb0a 0085 	add.w	r0, sl, r5, lsl #2
 802397c:	f7ff ff8b 	bl	8023896 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj>
 8023980:	f1b9 0f00 	cmp.w	r9, #0
 8023984:	d008      	beq.n	8023998 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_mutateEjjPKwj+0x66>
 8023986:	6821      	ldr	r1, [r4, #0]
 8023988:	4435      	add	r5, r6
 802398a:	464a      	mov	r2, r9
 802398c:	eb01 0188 	add.w	r1, r1, r8, lsl #2
 8023990:	eb0a 0085 	add.w	r0, sl, r5, lsl #2
 8023994:	f7ff ff7f 	bl	8023896 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj>
 8023998:	4620      	mov	r0, r4
 802399a:	f7ff ff4d 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 802399e:	9b01      	ldr	r3, [sp, #4]
 80239a0:	f8c4 a000 	str.w	sl, [r4]
 80239a4:	60a3      	str	r3, [r4, #8]
 80239a6:	b002      	add	sp, #8
 80239a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080239ac <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEaSEOS4_>:
 80239ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80239ae:	460c      	mov	r4, r1
 80239b0:	f851 3b08 	ldr.w	r3, [r1], #8
 80239b4:	6862      	ldr	r2, [r4, #4]
 80239b6:	4299      	cmp	r1, r3
 80239b8:	4605      	mov	r5, r0
 80239ba:	6800      	ldr	r0, [r0, #0]
 80239bc:	d10c      	bne.n	80239d8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEaSEOS4_+0x2c>
 80239be:	b10a      	cbz	r2, 80239c4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEaSEOS4_+0x18>
 80239c0:	f7ff ff69 	bl	8023896 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj>
 80239c4:	6861      	ldr	r1, [r4, #4]
 80239c6:	4628      	mov	r0, r5
 80239c8:	f7ff ff0c 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 80239cc:	6822      	ldr	r2, [r4, #0]
 80239ce:	2300      	movs	r3, #0
 80239d0:	6063      	str	r3, [r4, #4]
 80239d2:	4628      	mov	r0, r5
 80239d4:	6013      	str	r3, [r2, #0]
 80239d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80239d8:	f105 0708 	add.w	r7, r5, #8
 80239dc:	42b8      	cmp	r0, r7
 80239de:	e9c5 3200 	strd	r3, r2, [r5]
 80239e2:	bf08      	it	eq
 80239e4:	2000      	moveq	r0, #0
 80239e6:	68a3      	ldr	r3, [r4, #8]
 80239e8:	bf18      	it	ne
 80239ea:	68ae      	ldrne	r6, [r5, #8]
 80239ec:	60ab      	str	r3, [r5, #8]
 80239ee:	b110      	cbz	r0, 80239f6 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEaSEOS4_+0x4a>
 80239f0:	6020      	str	r0, [r4, #0]
 80239f2:	60a6      	str	r6, [r4, #8]
 80239f4:	e7ea      	b.n	80239cc <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEaSEOS4_+0x20>
 80239f6:	6021      	str	r1, [r4, #0]
 80239f8:	e7e8      	b.n	80239cc <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEaSEOS4_+0x20>

080239fa <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7reserveEj>:
 80239fa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80239fc:	4605      	mov	r5, r0
 80239fe:	6843      	ldr	r3, [r0, #4]
 8023a00:	4299      	cmp	r1, r3
 8023a02:	bf2c      	ite	cs
 8023a04:	9101      	strcs	r1, [sp, #4]
 8023a06:	9301      	strcc	r3, [sp, #4]
 8023a08:	f855 1b08 	ldr.w	r1, [r5], #8
 8023a0c:	428d      	cmp	r5, r1
 8023a0e:	bf18      	it	ne
 8023a10:	6882      	ldrne	r2, [r0, #8]
 8023a12:	4604      	mov	r4, r0
 8023a14:	9801      	ldr	r0, [sp, #4]
 8023a16:	bf08      	it	eq
 8023a18:	2203      	moveq	r2, #3
 8023a1a:	4290      	cmp	r0, r2
 8023a1c:	d012      	beq.n	8023a44 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7reserveEj+0x4a>
 8023a1e:	d801      	bhi.n	8023a24 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7reserveEj+0x2a>
 8023a20:	2803      	cmp	r0, #3
 8023a22:	d911      	bls.n	8023a48 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7reserveEj+0x4e>
 8023a24:	a901      	add	r1, sp, #4
 8023a26:	4620      	mov	r0, r4
 8023a28:	f7ff fee2 	bl	80237f0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj>
 8023a2c:	6862      	ldr	r2, [r4, #4]
 8023a2e:	6821      	ldr	r1, [r4, #0]
 8023a30:	3201      	adds	r2, #1
 8023a32:	4605      	mov	r5, r0
 8023a34:	f7ff ff2f 	bl	8023896 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj>
 8023a38:	4620      	mov	r0, r4
 8023a3a:	f7ff fefd 	bl	8023838 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_disposeEv>
 8023a3e:	9b01      	ldr	r3, [sp, #4]
 8023a40:	6025      	str	r5, [r4, #0]
 8023a42:	60a3      	str	r3, [r4, #8]
 8023a44:	b003      	add	sp, #12
 8023a46:	bd30      	pop	{r4, r5, pc}
 8023a48:	428d      	cmp	r5, r1
 8023a4a:	d0fb      	beq.n	8023a44 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7reserveEj+0x4a>
 8023a4c:	1c5a      	adds	r2, r3, #1
 8023a4e:	4628      	mov	r0, r5
 8023a50:	f7ff ff21 	bl	8023896 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj>
 8023a54:	6820      	ldr	r0, [r4, #0]
 8023a56:	f000 fa39 	bl	8023ecc <_ZdlPv>
 8023a5a:	6025      	str	r5, [r4, #0]
 8023a5c:	e7f2      	b.n	8023a44 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7reserveEj+0x4a>

08023a5e <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9push_backEw>:
 8023a5e:	4603      	mov	r3, r0
 8023a60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023a62:	f853 2b08 	ldr.w	r2, [r3], #8
 8023a66:	6845      	ldr	r5, [r0, #4]
 8023a68:	429a      	cmp	r2, r3
 8023a6a:	bf18      	it	ne
 8023a6c:	6883      	ldrne	r3, [r0, #8]
 8023a6e:	f105 0701 	add.w	r7, r5, #1
 8023a72:	bf08      	it	eq
 8023a74:	2303      	moveq	r3, #3
 8023a76:	429f      	cmp	r7, r3
 8023a78:	4604      	mov	r4, r0
 8023a7a:	460e      	mov	r6, r1
 8023a7c:	d906      	bls.n	8023a8c <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9push_backEw+0x2e>
 8023a7e:	2301      	movs	r3, #1
 8023a80:	9300      	str	r3, [sp, #0]
 8023a82:	2300      	movs	r3, #0
 8023a84:	461a      	mov	r2, r3
 8023a86:	4629      	mov	r1, r5
 8023a88:	f7ff ff53 	bl	8023932 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_mutateEjjPKwj>
 8023a8c:	6823      	ldr	r3, [r4, #0]
 8023a8e:	4639      	mov	r1, r7
 8023a90:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 8023a94:	4620      	mov	r0, r4
 8023a96:	f7ff fea5 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 8023a9a:	b003      	add	sp, #12
 8023a9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08023aa0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw>:
 8023aa0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8023aa4:	4616      	mov	r6, r2
 8023aa6:	461d      	mov	r5, r3
 8023aa8:	4604      	mov	r4, r0
 8023aaa:	4b1c      	ldr	r3, [pc, #112]	; (8023b1c <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw+0x7c>)
 8023aac:	462a      	mov	r2, r5
 8023aae:	460f      	mov	r7, r1
 8023ab0:	4631      	mov	r1, r6
 8023ab2:	f7ff fed7 	bl	8023864 <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc>
 8023ab6:	4623      	mov	r3, r4
 8023ab8:	6862      	ldr	r2, [r4, #4]
 8023aba:	f853 0b08 	ldr.w	r0, [r3], #8
 8023abe:	4298      	cmp	r0, r3
 8023ac0:	bf18      	it	ne
 8023ac2:	68a3      	ldrne	r3, [r4, #8]
 8023ac4:	eba5 0806 	sub.w	r8, r5, r6
 8023ac8:	4490      	add	r8, r2
 8023aca:	bf08      	it	eq
 8023acc:	2303      	moveq	r3, #3
 8023ace:	4543      	cmp	r3, r8
 8023ad0:	d31c      	bcc.n	8023b0c <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw+0x6c>
 8023ad2:	19f3      	adds	r3, r6, r7
 8023ad4:	1ad2      	subs	r2, r2, r3
 8023ad6:	d009      	beq.n	8023aec <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw+0x4c>
 8023ad8:	42ae      	cmp	r6, r5
 8023ada:	d007      	beq.n	8023aec <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw+0x4c>
 8023adc:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 8023ae0:	eb00 0186 	add.w	r1, r0, r6, lsl #2
 8023ae4:	eb00 0085 	add.w	r0, r0, r5, lsl #2
 8023ae8:	f7ff fee1 	bl	80238ae <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_moveEPwPKwj>
 8023aec:	b135      	cbz	r5, 8023afc <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw+0x5c>
 8023aee:	6820      	ldr	r0, [r4, #0]
 8023af0:	9a08      	ldr	r2, [sp, #32]
 8023af2:	4629      	mov	r1, r5
 8023af4:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 8023af8:	f7ff fee5 	bl	80238c6 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_S_assignEPwjw>
 8023afc:	4620      	mov	r0, r4
 8023afe:	4641      	mov	r1, r8
 8023b00:	f7ff fe70 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 8023b04:	4620      	mov	r0, r4
 8023b06:	b002      	add	sp, #8
 8023b08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023b0c:	9500      	str	r5, [sp, #0]
 8023b0e:	2300      	movs	r3, #0
 8023b10:	4632      	mov	r2, r6
 8023b12:	4639      	mov	r1, r7
 8023b14:	4620      	mov	r0, r4
 8023b16:	f7ff ff0c 	bl	8023932 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_mutateEjjPKwj>
 8023b1a:	e7e7      	b.n	8023aec <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw+0x4c>
 8023b1c:	0802f652 	.word	0x0802f652

08023b20 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEjw>:
 8023b20:	b507      	push	{r0, r1, r2, lr}
 8023b22:	9200      	str	r2, [sp, #0]
 8023b24:	460b      	mov	r3, r1
 8023b26:	2200      	movs	r2, #0
 8023b28:	6841      	ldr	r1, [r0, #4]
 8023b2a:	f7ff ffb9 	bl	8023aa0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw>
 8023b2e:	b003      	add	sp, #12
 8023b30:	f85d fb04 	ldr.w	pc, [sp], #4

08023b34 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6resizeEjw>:
 8023b34:	b510      	push	{r4, lr}
 8023b36:	6844      	ldr	r4, [r0, #4]
 8023b38:	428c      	cmp	r4, r1
 8023b3a:	d203      	bcs.n	8023b44 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6resizeEjw+0x10>
 8023b3c:	1b09      	subs	r1, r1, r4
 8023b3e:	f7ff ffef 	bl	8023b20 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEjw>
 8023b42:	bd10      	pop	{r4, pc}
 8023b44:	d9fd      	bls.n	8023b42 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6resizeEjw+0xe>
 8023b46:	f7ff fe4d 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 8023b4a:	e7fa      	b.n	8023b42 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6resizeEjw+0xe>

08023b4c <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6resizeEj>:
 8023b4c:	b508      	push	{r3, lr}
 8023b4e:	2200      	movs	r2, #0
 8023b50:	f7ff fff0 	bl	8023b34 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6resizeEjw>
 8023b54:	bd08      	pop	{r3, pc}
	...

08023b58 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj>:
 8023b58:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023b5c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023b5e:	4614      	mov	r4, r2
 8023b60:	4680      	mov	r8, r0
 8023b62:	462a      	mov	r2, r5
 8023b64:	4689      	mov	r9, r1
 8023b66:	461f      	mov	r7, r3
 8023b68:	4621      	mov	r1, r4
 8023b6a:	4b3e      	ldr	r3, [pc, #248]	; (8023c64 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0x10c>)
 8023b6c:	f7ff fe7a 	bl	8023864 <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc>
 8023b70:	4642      	mov	r2, r8
 8023b72:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8023b76:	f852 6b08 	ldr.w	r6, [r2], #8
 8023b7a:	4296      	cmp	r6, r2
 8023b7c:	bf18      	it	ne
 8023b7e:	f8d8 2008 	ldrne.w	r2, [r8, #8]
 8023b82:	eba5 0b04 	sub.w	fp, r5, r4
 8023b86:	eb03 0a0b 	add.w	sl, r3, fp
 8023b8a:	bf08      	it	eq
 8023b8c:	2203      	moveq	r2, #3
 8023b8e:	4552      	cmp	r2, sl
 8023b90:	d35b      	bcc.n	8023c4a <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0xf2>
 8023b92:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 8023b96:	4639      	mov	r1, r7
 8023b98:	44a1      	add	r9, r4
 8023b9a:	4640      	mov	r0, r8
 8023b9c:	eba3 0909 	sub.w	r9, r3, r9
 8023ba0:	f7ff fe6c 	bl	802387c <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE11_M_disjunctEPKw>
 8023ba4:	b190      	cbz	r0, 8023bcc <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0x74>
 8023ba6:	f1b9 0f00 	cmp.w	r9, #0
 8023baa:	d008      	beq.n	8023bbe <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0x66>
 8023bac:	42ac      	cmp	r4, r5
 8023bae:	d006      	beq.n	8023bbe <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0x66>
 8023bb0:	464a      	mov	r2, r9
 8023bb2:	eb06 0184 	add.w	r1, r6, r4, lsl #2
 8023bb6:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 8023bba:	f7ff fe78 	bl	80238ae <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_moveEPwPKwj>
 8023bbe:	b345      	cbz	r5, 8023c12 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0xba>
 8023bc0:	462a      	mov	r2, r5
 8023bc2:	4639      	mov	r1, r7
 8023bc4:	4630      	mov	r0, r6
 8023bc6:	f7ff fe66 	bl	8023896 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj>
 8023bca:	e022      	b.n	8023c12 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0xba>
 8023bcc:	b135      	cbz	r5, 8023bdc <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0x84>
 8023bce:	42ac      	cmp	r4, r5
 8023bd0:	d343      	bcc.n	8023c5a <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0x102>
 8023bd2:	462a      	mov	r2, r5
 8023bd4:	4639      	mov	r1, r7
 8023bd6:	4630      	mov	r0, r6
 8023bd8:	f7ff fe69 	bl	80238ae <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_moveEPwPKwj>
 8023bdc:	f1b9 0f00 	cmp.w	r9, #0
 8023be0:	d017      	beq.n	8023c12 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0xba>
 8023be2:	42ac      	cmp	r4, r5
 8023be4:	d015      	beq.n	8023c12 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0xba>
 8023be6:	464a      	mov	r2, r9
 8023be8:	eb06 0184 	add.w	r1, r6, r4, lsl #2
 8023bec:	eb06 0085 	add.w	r0, r6, r5, lsl #2
 8023bf0:	f7ff fe5d 	bl	80238ae <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_moveEPwPKwj>
 8023bf4:	42ac      	cmp	r4, r5
 8023bf6:	d20c      	bcs.n	8023c12 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0xba>
 8023bf8:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 8023bfc:	eb07 0385 	add.w	r3, r7, r5, lsl #2
 8023c00:	429c      	cmp	r4, r3
 8023c02:	ea4f 0985 	mov.w	r9, r5, lsl #2
 8023c06:	d30c      	bcc.n	8023c22 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0xca>
 8023c08:	462a      	mov	r2, r5
 8023c0a:	4639      	mov	r1, r7
 8023c0c:	4630      	mov	r0, r6
 8023c0e:	f7ff fe4e 	bl	80238ae <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_moveEPwPKwj>
 8023c12:	4640      	mov	r0, r8
 8023c14:	4651      	mov	r1, sl
 8023c16:	f7ff fde5 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 8023c1a:	4640      	mov	r0, r8
 8023c1c:	b003      	add	sp, #12
 8023c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023c22:	42bc      	cmp	r4, r7
 8023c24:	d803      	bhi.n	8023c2e <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0xd6>
 8023c26:	462a      	mov	r2, r5
 8023c28:	eb07 018b 	add.w	r1, r7, fp, lsl #2
 8023c2c:	e7ca      	b.n	8023bc4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0x6c>
 8023c2e:	1be4      	subs	r4, r4, r7
 8023c30:	ea4f 0ba4 	mov.w	fp, r4, asr #2
 8023c34:	465a      	mov	r2, fp
 8023c36:	4639      	mov	r1, r7
 8023c38:	4630      	mov	r0, r6
 8023c3a:	f7ff fe38 	bl	80238ae <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_moveEPwPKwj>
 8023c3e:	eba5 020b 	sub.w	r2, r5, fp
 8023c42:	eb06 0109 	add.w	r1, r6, r9
 8023c46:	1930      	adds	r0, r6, r4
 8023c48:	e7bd      	b.n	8023bc6 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0x6e>
 8023c4a:	9500      	str	r5, [sp, #0]
 8023c4c:	463b      	mov	r3, r7
 8023c4e:	4622      	mov	r2, r4
 8023c50:	4649      	mov	r1, r9
 8023c52:	4640      	mov	r0, r8
 8023c54:	f7ff fe6d 	bl	8023932 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_mutateEjjPKwj>
 8023c58:	e7db      	b.n	8023c12 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0xba>
 8023c5a:	f1b9 0f00 	cmp.w	r9, #0
 8023c5e:	d0cb      	beq.n	8023bf8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0xa0>
 8023c60:	e7c1      	b.n	8023be6 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE10_M_replaceEjjPKwj+0x8e>
 8023c62:	bf00      	nop
 8023c64:	0803109e 	.word	0x0803109e

08023c68 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwj>:
 8023c68:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023c6a:	4604      	mov	r4, r0
 8023c6c:	4623      	mov	r3, r4
 8023c6e:	6840      	ldr	r0, [r0, #4]
 8023c70:	f853 6b08 	ldr.w	r6, [r3], #8
 8023c74:	429e      	cmp	r6, r3
 8023c76:	bf18      	it	ne
 8023c78:	68a3      	ldrne	r3, [r4, #8]
 8023c7a:	eb00 0502 	add.w	r5, r0, r2
 8023c7e:	bf08      	it	eq
 8023c80:	2303      	moveq	r3, #3
 8023c82:	429d      	cmp	r5, r3
 8023c84:	d80b      	bhi.n	8023c9e <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwj+0x36>
 8023c86:	b11a      	cbz	r2, 8023c90 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwj+0x28>
 8023c88:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8023c8c:	f7ff fe03 	bl	8023896 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj>
 8023c90:	4620      	mov	r0, r4
 8023c92:	4629      	mov	r1, r5
 8023c94:	f7ff fda6 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 8023c98:	4620      	mov	r0, r4
 8023c9a:	b002      	add	sp, #8
 8023c9c:	bd70      	pop	{r4, r5, r6, pc}
 8023c9e:	9200      	str	r2, [sp, #0]
 8023ca0:	460b      	mov	r3, r1
 8023ca2:	2200      	movs	r2, #0
 8023ca4:	4601      	mov	r1, r0
 8023ca6:	4620      	mov	r0, r4
 8023ca8:	f7ff fe43 	bl	8023932 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_mutateEjjPKwj>
 8023cac:	e7f0      	b.n	8023c90 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwj+0x28>
	...

08023cb0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEPKwj>:
 8023cb0:	b570      	push	{r4, r5, r6, lr}
 8023cb2:	4b06      	ldr	r3, [pc, #24]	; (8023ccc <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6appendEPKwj+0x1c>)
 8023cb4:	4604      	mov	r4, r0
 8023cb6:	460d      	mov	r5, r1
 8023cb8:	4616      	mov	r6, r2
 8023cba:	2100      	movs	r1, #0
 8023cbc:	f7ff fdd2 	bl	8023864 <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc>
 8023cc0:	4632      	mov	r2, r6
 8023cc2:	4629      	mov	r1, r5
 8023cc4:	4620      	mov	r0, r4
 8023cc6:	f7ff ffcf 	bl	8023c68 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_appendEPKwj>
 8023cca:	bd70      	pop	{r4, r5, r6, pc}
 8023ccc:	0802f684 	.word	0x0802f684

08023cd0 <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE4copyEPwjj>:
 8023cd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023cd4:	4607      	mov	r7, r0
 8023cd6:	4691      	mov	r9, r2
 8023cd8:	4688      	mov	r8, r1
 8023cda:	4a0a      	ldr	r2, [pc, #40]	; (8023d04 <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE4copyEPwjj+0x34>)
 8023cdc:	4619      	mov	r1, r3
 8023cde:	461e      	mov	r6, r3
 8023ce0:	f7ff fdb2 	bl	8023848 <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE8_M_checkEjPKc>
 8023ce4:	687d      	ldr	r5, [r7, #4]
 8023ce6:	1bac      	subs	r4, r5, r6
 8023ce8:	454c      	cmp	r4, r9
 8023cea:	bf28      	it	cs
 8023cec:	464c      	movcs	r4, r9
 8023cee:	b134      	cbz	r4, 8023cfe <_ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE4copyEPwjj+0x2e>
 8023cf0:	6839      	ldr	r1, [r7, #0]
 8023cf2:	4622      	mov	r2, r4
 8023cf4:	eb01 0186 	add.w	r1, r1, r6, lsl #2
 8023cf8:	4640      	mov	r0, r8
 8023cfa:	f7ff fdcc 	bl	8023896 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE7_S_copyEPwPKwj>
 8023cfe:	4620      	mov	r0, r4
 8023d00:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023d04:	0802f613 	.word	0x0802f613

08023d08 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_tag>:
 8023d08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023d0a:	4604      	mov	r4, r0
 8023d0c:	4616      	mov	r6, r2
 8023d0e:	460d      	mov	r5, r1
 8023d10:	b919      	cbnz	r1, 8023d1a <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_tag+0x12>
 8023d12:	b112      	cbz	r2, 8023d1a <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_tag+0x12>
 8023d14:	480d      	ldr	r0, [pc, #52]	; (8023d4c <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_tag+0x44>)
 8023d16:	f7f3 fd89 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 8023d1a:	1b73      	subs	r3, r6, r5
 8023d1c:	109a      	asrs	r2, r3, #2
 8023d1e:	2b0c      	cmp	r3, #12
 8023d20:	9201      	str	r2, [sp, #4]
 8023d22:	d907      	bls.n	8023d34 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_tag+0x2c>
 8023d24:	2200      	movs	r2, #0
 8023d26:	a901      	add	r1, sp, #4
 8023d28:	4620      	mov	r0, r4
 8023d2a:	f7ff fd61 	bl	80237f0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj>
 8023d2e:	9b01      	ldr	r3, [sp, #4]
 8023d30:	6020      	str	r0, [r4, #0]
 8023d32:	60a3      	str	r3, [r4, #8]
 8023d34:	6820      	ldr	r0, [r4, #0]
 8023d36:	4632      	mov	r2, r6
 8023d38:	4629      	mov	r1, r5
 8023d3a:	f7ff fdee 	bl	802391a <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwS5_S5_>
 8023d3e:	9901      	ldr	r1, [sp, #4]
 8023d40:	4620      	mov	r0, r4
 8023d42:	f7ff fd4f 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 8023d46:	b002      	add	sp, #8
 8023d48:	bd70      	pop	{r4, r5, r6, pc}
 8023d4a:	bf00      	nop
 8023d4c:	0802f810 	.word	0x0802f810

08023d50 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1ERKS4_>:
 8023d50:	b538      	push	{r3, r4, r5, lr}
 8023d52:	f100 0308 	add.w	r3, r0, #8
 8023d56:	6003      	str	r3, [r0, #0]
 8023d58:	e9d1 5200 	ldrd	r5, r2, [r1]
 8023d5c:	4604      	mov	r4, r0
 8023d5e:	f04f 0300 	mov.w	r3, #0
 8023d62:	eb05 0282 	add.w	r2, r5, r2, lsl #2
 8023d66:	4629      	mov	r1, r5
 8023d68:	f7ff ffce 	bl	8023d08 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_tag>
 8023d6c:	4620      	mov	r0, r4
 8023d6e:	bd38      	pop	{r3, r4, r5, pc}

08023d70 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag>:
 8023d70:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023d72:	4604      	mov	r4, r0
 8023d74:	4616      	mov	r6, r2
 8023d76:	460d      	mov	r5, r1
 8023d78:	b919      	cbnz	r1, 8023d82 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag+0x12>
 8023d7a:	b112      	cbz	r2, 8023d82 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag+0x12>
 8023d7c:	480d      	ldr	r0, [pc, #52]	; (8023db4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag+0x44>)
 8023d7e:	f7f3 fd55 	bl	801782c <_ZSt19__throw_logic_errorPKc>
 8023d82:	1b73      	subs	r3, r6, r5
 8023d84:	109a      	asrs	r2, r3, #2
 8023d86:	2b0c      	cmp	r3, #12
 8023d88:	9201      	str	r2, [sp, #4]
 8023d8a:	d907      	bls.n	8023d9c <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag+0x2c>
 8023d8c:	2200      	movs	r2, #0
 8023d8e:	a901      	add	r1, sp, #4
 8023d90:	4620      	mov	r0, r4
 8023d92:	f7ff fd2d 	bl	80237f0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERjj>
 8023d96:	9b01      	ldr	r3, [sp, #4]
 8023d98:	6020      	str	r0, [r4, #0]
 8023d9a:	60a3      	str	r3, [r4, #8]
 8023d9c:	6820      	ldr	r0, [r4, #0]
 8023d9e:	4632      	mov	r2, r6
 8023da0:	4629      	mov	r1, r5
 8023da2:	f7ff fdc0 	bl	8023926 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwPKwS7_>
 8023da6:	9901      	ldr	r1, [sp, #4]
 8023da8:	4620      	mov	r0, r4
 8023daa:	f7ff fd1b 	bl	80237e4 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_M_set_lengthEj>
 8023dae:	b002      	add	sp, #8
 8023db0:	bd70      	pop	{r4, r5, r6, pc}
 8023db2:	bf00      	nop
 8023db4:	0802f810 	.word	0x0802f810

08023db8 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EPKwRKS3_>:
 8023db8:	b538      	push	{r3, r4, r5, lr}
 8023dba:	f100 0308 	add.w	r3, r0, #8
 8023dbe:	4604      	mov	r4, r0
 8023dc0:	6003      	str	r3, [r0, #0]
 8023dc2:	460d      	mov	r5, r1
 8023dc4:	b161      	cbz	r1, 8023de0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EPKwRKS3_+0x28>
 8023dc6:	4608      	mov	r0, r1
 8023dc8:	f006 fb3c 	bl	802a444 <wcslen>
 8023dcc:	eb05 0280 	add.w	r2, r5, r0, lsl #2
 8023dd0:	4620      	mov	r0, r4
 8023dd2:	f04f 0300 	mov.w	r3, #0
 8023dd6:	4629      	mov	r1, r5
 8023dd8:	f7ff ffca 	bl	8023d70 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag>
 8023ddc:	4620      	mov	r0, r4
 8023dde:	bd38      	pop	{r3, r4, r5, pc}
 8023de0:	2204      	movs	r2, #4
 8023de2:	e7f5      	b.n	8023dd0 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EPKwRKS3_+0x18>

08023de4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 8023de4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8023de6:	2400      	movs	r4, #0
 8023de8:	2310      	movs	r3, #16
 8023dea:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8023dee:	6803      	ldr	r3, [r0, #0]
 8023df0:	4615      	mov	r5, r2
 8023df2:	699e      	ldr	r6, [r3, #24]
 8023df4:	6812      	ldr	r2, [r2, #0]
 8023df6:	466b      	mov	r3, sp
 8023df8:	e9cd 4400 	strd	r4, r4, [sp]
 8023dfc:	47b0      	blx	r6
 8023dfe:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8023e02:	f003 0306 	and.w	r3, r3, #6
 8023e06:	2b06      	cmp	r3, #6
 8023e08:	bf03      	ittte	eq
 8023e0a:	9b00      	ldreq	r3, [sp, #0]
 8023e0c:	602b      	streq	r3, [r5, #0]
 8023e0e:	2001      	moveq	r0, #1
 8023e10:	4620      	movne	r0, r4
 8023e12:	b004      	add	sp, #16
 8023e14:	bd70      	pop	{r4, r5, r6, pc}

08023e16 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 8023e16:	9800      	ldr	r0, [sp, #0]
 8023e18:	4290      	cmp	r0, r2
 8023e1a:	bf14      	ite	ne
 8023e1c:	2001      	movne	r0, #1
 8023e1e:	2006      	moveq	r0, #6
 8023e20:	4770      	bx	lr
	...

08023e24 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 8023e24:	b510      	push	{r4, lr}
 8023e26:	4b03      	ldr	r3, [pc, #12]	; (8023e34 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x10>)
 8023e28:	6003      	str	r3, [r0, #0]
 8023e2a:	4604      	mov	r4, r0
 8023e2c:	f000 f957 	bl	80240de <_ZNSt9type_infoD1Ev>
 8023e30:	4620      	mov	r0, r4
 8023e32:	bd10      	pop	{r4, pc}
 8023e34:	080316ec 	.word	0x080316ec

08023e38 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 8023e38:	b510      	push	{r4, lr}
 8023e3a:	4604      	mov	r4, r0
 8023e3c:	f7ff fff2 	bl	8023e24 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 8023e40:	4620      	mov	r0, r4
 8023e42:	2108      	movs	r1, #8
 8023e44:	f7e8 f87a 	bl	800bf3c <_ZdlPvj>
 8023e48:	4620      	mov	r0, r4
 8023e4a:	bd10      	pop	{r4, pc}

08023e4c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 8023e4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023e50:	461f      	mov	r7, r3
 8023e52:	e9dd 3408 	ldrd	r3, r4, [sp, #32]
 8023e56:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8023e5a:	4598      	cmp	r8, r3
 8023e5c:	4606      	mov	r6, r0
 8023e5e:	4615      	mov	r5, r2
 8023e60:	d107      	bne.n	8023e72 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x26>
 8023e62:	9907      	ldr	r1, [sp, #28]
 8023e64:	f000 f93e 	bl	80240e4 <_ZNKSt9type_infoeqERKS_>
 8023e68:	b118      	cbz	r0, 8023e72 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x26>
 8023e6a:	7165      	strb	r5, [r4, #5]
 8023e6c:	2000      	movs	r0, #0
 8023e6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023e72:	4639      	mov	r1, r7
 8023e74:	4630      	mov	r0, r6
 8023e76:	f000 f935 	bl	80240e4 <_ZNKSt9type_infoeqERKS_>
 8023e7a:	2800      	cmp	r0, #0
 8023e7c:	d0f6      	beq.n	8023e6c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x20>
 8023e7e:	2301      	movs	r3, #1
 8023e80:	f8c4 8000 	str.w	r8, [r4]
 8023e84:	7125      	strb	r5, [r4, #4]
 8023e86:	71a3      	strb	r3, [r4, #6]
 8023e88:	e7f0      	b.n	8023e6c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x20>

08023e8a <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 8023e8a:	b538      	push	{r3, r4, r5, lr}
 8023e8c:	4615      	mov	r5, r2
 8023e8e:	461c      	mov	r4, r3
 8023e90:	f000 f928 	bl	80240e4 <_ZNKSt9type_infoeqERKS_>
 8023e94:	b120      	cbz	r0, 8023ea0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x16>
 8023e96:	2308      	movs	r3, #8
 8023e98:	60e3      	str	r3, [r4, #12]
 8023e9a:	2306      	movs	r3, #6
 8023e9c:	6025      	str	r5, [r4, #0]
 8023e9e:	7123      	strb	r3, [r4, #4]
 8023ea0:	bd38      	pop	{r3, r4, r5, pc}

08023ea2 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 8023ea2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023ea4:	4605      	mov	r5, r0
 8023ea6:	460c      	mov	r4, r1
 8023ea8:	9201      	str	r2, [sp, #4]
 8023eaa:	461e      	mov	r6, r3
 8023eac:	f000 f91a 	bl	80240e4 <_ZNKSt9type_infoeqERKS_>
 8023eb0:	b950      	cbnz	r0, 8023ec8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x26>
 8023eb2:	2e03      	cmp	r6, #3
 8023eb4:	d808      	bhi.n	8023ec8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x26>
 8023eb6:	6823      	ldr	r3, [r4, #0]
 8023eb8:	9a01      	ldr	r2, [sp, #4]
 8023eba:	695b      	ldr	r3, [r3, #20]
 8023ebc:	4629      	mov	r1, r5
 8023ebe:	4620      	mov	r0, r4
 8023ec0:	b002      	add	sp, #8
 8023ec2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8023ec6:	4718      	bx	r3
 8023ec8:	b002      	add	sp, #8
 8023eca:	bd70      	pop	{r4, r5, r6, pc}

08023ecc <_ZdlPv>:
 8023ecc:	f001 bfc6 	b.w	8025e5c <free>

08023ed0 <_ZdaPv>:
 8023ed0:	f7ff bffc 	b.w	8023ecc <_ZdlPv>

08023ed4 <__dynamic_cast>:
 8023ed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023ed8:	4616      	mov	r6, r2
 8023eda:	6802      	ldr	r2, [r0, #0]
 8023edc:	b088      	sub	sp, #32
 8023ede:	f852 cc04 	ldr.w	ip, [r2, #-4]
 8023ee2:	461d      	mov	r5, r3
 8023ee4:	f852 3c08 	ldr.w	r3, [r2, #-8]
 8023ee8:	2200      	movs	r2, #0
 8023eea:	e9cd 2205 	strd	r2, r2, [sp, #20]
 8023eee:	460f      	mov	r7, r1
 8023ef0:	18c1      	adds	r1, r0, r3
 8023ef2:	58c3      	ldr	r3, [r0, r3]
 8023ef4:	4604      	mov	r4, r0
 8023ef6:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8023efa:	2210      	movs	r2, #16
 8023efc:	4560      	cmp	r0, ip
 8023efe:	9207      	str	r2, [sp, #28]
 8023f00:	d003      	beq.n	8023f0a <__dynamic_cast+0x36>
 8023f02:	2000      	movs	r0, #0
 8023f04:	b008      	add	sp, #32
 8023f06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023f0a:	aa05      	add	r2, sp, #20
 8023f0c:	6803      	ldr	r3, [r0, #0]
 8023f0e:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8023f12:	e9cd 1700 	strd	r1, r7, [sp]
 8023f16:	2206      	movs	r2, #6
 8023f18:	f8d3 801c 	ldr.w	r8, [r3, #28]
 8023f1c:	4629      	mov	r1, r5
 8023f1e:	4633      	mov	r3, r6
 8023f20:	47c0      	blx	r8
 8023f22:	9805      	ldr	r0, [sp, #20]
 8023f24:	2800      	cmp	r0, #0
 8023f26:	d0ec      	beq.n	8023f02 <__dynamic_cast+0x2e>
 8023f28:	f89d 101a 	ldrb.w	r1, [sp, #26]
 8023f2c:	f001 0306 	and.w	r3, r1, #6
 8023f30:	2b06      	cmp	r3, #6
 8023f32:	d0e7      	beq.n	8023f04 <__dynamic_cast+0x30>
 8023f34:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8023f38:	f89d 2018 	ldrb.w	r2, [sp, #24]
 8023f3c:	401a      	ands	r2, r3
 8023f3e:	f002 0206 	and.w	r2, r2, #6
 8023f42:	2a06      	cmp	r2, #6
 8023f44:	d0de      	beq.n	8023f04 <__dynamic_cast+0x30>
 8023f46:	f003 0305 	and.w	r3, r3, #5
 8023f4a:	2b04      	cmp	r3, #4
 8023f4c:	d0d9      	beq.n	8023f02 <__dynamic_cast+0x2e>
 8023f4e:	2900      	cmp	r1, #0
 8023f50:	d1d7      	bne.n	8023f02 <__dynamic_cast+0x2e>
 8023f52:	2d00      	cmp	r5, #0
 8023f54:	db0a      	blt.n	8023f6c <__dynamic_cast+0x98>
 8023f56:	4428      	add	r0, r5
 8023f58:	4284      	cmp	r4, r0
 8023f5a:	bf14      	ite	ne
 8023f5c:	2001      	movne	r0, #1
 8023f5e:	2006      	moveq	r0, #6
 8023f60:	f000 0006 	and.w	r0, r0, #6
 8023f64:	2806      	cmp	r0, #6
 8023f66:	d1cc      	bne.n	8023f02 <__dynamic_cast+0x2e>
 8023f68:	9805      	ldr	r0, [sp, #20]
 8023f6a:	e7cb      	b.n	8023f04 <__dynamic_cast+0x30>
 8023f6c:	1cab      	adds	r3, r5, #2
 8023f6e:	d008      	beq.n	8023f82 <__dynamic_cast+0xae>
 8023f70:	6833      	ldr	r3, [r6, #0]
 8023f72:	9400      	str	r4, [sp, #0]
 8023f74:	6a1c      	ldr	r4, [r3, #32]
 8023f76:	4602      	mov	r2, r0
 8023f78:	463b      	mov	r3, r7
 8023f7a:	4629      	mov	r1, r5
 8023f7c:	4630      	mov	r0, r6
 8023f7e:	47a0      	blx	r4
 8023f80:	e7ee      	b.n	8023f60 <__dynamic_cast+0x8c>
 8023f82:	2001      	movs	r0, #1
 8023f84:	e7ec      	b.n	8023f60 <__dynamic_cast+0x8c>

08023f86 <__cxa_bad_cast>:
 8023f86:	b508      	push	{r3, lr}
 8023f88:	f001 f94d 	bl	8025226 <abort>

08023f8c <_ZN10__cxxabiv111__terminateEPFvvE>:
 8023f8c:	b508      	push	{r3, lr}
 8023f8e:	4780      	blx	r0
 8023f90:	f001 f949 	bl	8025226 <abort>

08023f94 <_ZSt13get_terminatev>:
 8023f94:	4b02      	ldr	r3, [pc, #8]	; (8023fa0 <_ZSt13get_terminatev+0xc>)
 8023f96:	6818      	ldr	r0, [r3, #0]
 8023f98:	f3bf 8f5b 	dmb	ish
 8023f9c:	4770      	bx	lr
 8023f9e:	bf00      	nop
 8023fa0:	200000b8 	.word	0x200000b8

08023fa4 <_ZSt9terminatev>:
 8023fa4:	b508      	push	{r3, lr}
 8023fa6:	f7ff fff5 	bl	8023f94 <_ZSt13get_terminatev>
 8023faa:	f7ff ffef 	bl	8023f8c <_ZN10__cxxabiv111__terminateEPFvvE>

08023fae <__cxa_guard_acquire>:
 8023fae:	6803      	ldr	r3, [r0, #0]
 8023fb0:	07db      	lsls	r3, r3, #31
 8023fb2:	d406      	bmi.n	8023fc2 <__cxa_guard_acquire+0x14>
 8023fb4:	7843      	ldrb	r3, [r0, #1]
 8023fb6:	b103      	cbz	r3, 8023fba <__cxa_guard_acquire+0xc>
 8023fb8:	deff      	udf	#255	; 0xff
 8023fba:	2301      	movs	r3, #1
 8023fbc:	7043      	strb	r3, [r0, #1]
 8023fbe:	4618      	mov	r0, r3
 8023fc0:	4770      	bx	lr
 8023fc2:	2000      	movs	r0, #0
 8023fc4:	4770      	bx	lr

08023fc6 <__cxa_guard_release>:
 8023fc6:	2301      	movs	r3, #1
 8023fc8:	6003      	str	r3, [r0, #0]
 8023fca:	4770      	bx	lr

08023fcc <_ZSt15get_new_handlerv>:
 8023fcc:	4b02      	ldr	r3, [pc, #8]	; (8023fd8 <_ZSt15get_new_handlerv+0xc>)
 8023fce:	6818      	ldr	r0, [r3, #0]
 8023fd0:	f3bf 8f5b 	dmb	ish
 8023fd4:	4770      	bx	lr
 8023fd6:	bf00      	nop
 8023fd8:	20003d50 	.word	0x20003d50

08023fdc <_Znaj>:
 8023fdc:	f7e7 bfb0 	b.w	800bf40 <_Znwj>

08023fe0 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 8023fe0:	b510      	push	{r4, lr}
 8023fe2:	4b03      	ldr	r3, [pc, #12]	; (8023ff0 <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x10>)
 8023fe4:	6003      	str	r3, [r0, #0]
 8023fe6:	4604      	mov	r4, r0
 8023fe8:	f7ff ff1c 	bl	8023e24 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 8023fec:	4620      	mov	r0, r4
 8023fee:	bd10      	pop	{r4, pc}
 8023ff0:	0803174c 	.word	0x0803174c

08023ff4 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 8023ff4:	b510      	push	{r4, lr}
 8023ff6:	4604      	mov	r4, r0
 8023ff8:	f7ff fff2 	bl	8023fe0 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>
 8023ffc:	4620      	mov	r0, r4
 8023ffe:	210c      	movs	r1, #12
 8024000:	f7e7 ff9c 	bl	800bf3c <_ZdlPvj>
 8024004:	4620      	mov	r0, r4
 8024006:	bd10      	pop	{r4, pc}

08024008 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 8024008:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802400a:	9f08      	ldr	r7, [sp, #32]
 802400c:	4297      	cmp	r7, r2
 802400e:	4605      	mov	r5, r0
 8024010:	460e      	mov	r6, r1
 8024012:	4614      	mov	r4, r2
 8024014:	d00a      	beq.n	802402c <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
 8024016:	68a8      	ldr	r0, [r5, #8]
 8024018:	6802      	ldr	r2, [r0, #0]
 802401a:	9708      	str	r7, [sp, #32]
 802401c:	6a15      	ldr	r5, [r2, #32]
 802401e:	4631      	mov	r1, r6
 8024020:	4622      	mov	r2, r4
 8024022:	46ac      	mov	ip, r5
 8024024:	b003      	add	sp, #12
 8024026:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 802402a:	4760      	bx	ip
 802402c:	4619      	mov	r1, r3
 802402e:	9301      	str	r3, [sp, #4]
 8024030:	f000 f858 	bl	80240e4 <_ZNKSt9type_infoeqERKS_>
 8024034:	9b01      	ldr	r3, [sp, #4]
 8024036:	2800      	cmp	r0, #0
 8024038:	d0ed      	beq.n	8024016 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xe>
 802403a:	2006      	movs	r0, #6
 802403c:	b003      	add	sp, #12
 802403e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08024040 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 8024040:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024044:	460d      	mov	r5, r1
 8024046:	4619      	mov	r1, r3
 8024048:	e9dd 4b0a 	ldrd	r4, fp, [sp, #40]	; 0x28
 802404c:	e9dd a60c 	ldrd	sl, r6, [sp, #48]	; 0x30
 8024050:	4681      	mov	r9, r0
 8024052:	4617      	mov	r7, r2
 8024054:	4698      	mov	r8, r3
 8024056:	f000 f845 	bl	80240e4 <_ZNKSt9type_infoeqERKS_>
 802405a:	b190      	cbz	r0, 8024082 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x42>
 802405c:	2d00      	cmp	r5, #0
 802405e:	6034      	str	r4, [r6, #0]
 8024060:	7137      	strb	r7, [r6, #4]
 8024062:	db09      	blt.n	8024078 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x38>
 8024064:	1961      	adds	r1, r4, r5
 8024066:	458a      	cmp	sl, r1
 8024068:	bf0c      	ite	eq
 802406a:	2106      	moveq	r1, #6
 802406c:	2101      	movne	r1, #1
 802406e:	71b1      	strb	r1, [r6, #6]
 8024070:	2000      	movs	r0, #0
 8024072:	b001      	add	sp, #4
 8024074:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024078:	3502      	adds	r5, #2
 802407a:	d1f9      	bne.n	8024070 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30>
 802407c:	2301      	movs	r3, #1
 802407e:	71b3      	strb	r3, [r6, #6]
 8024080:	e7f6      	b.n	8024070 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30>
 8024082:	4554      	cmp	r4, sl
 8024084:	d106      	bne.n	8024094 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x54>
 8024086:	4659      	mov	r1, fp
 8024088:	4648      	mov	r0, r9
 802408a:	f000 f82b 	bl	80240e4 <_ZNKSt9type_infoeqERKS_>
 802408e:	b108      	cbz	r0, 8024094 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x54>
 8024090:	7177      	strb	r7, [r6, #5]
 8024092:	e7ed      	b.n	8024070 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30>
 8024094:	f8d9 0008 	ldr.w	r0, [r9, #8]
 8024098:	6803      	ldr	r3, [r0, #0]
 802409a:	e9cd a60c 	strd	sl, r6, [sp, #48]	; 0x30
 802409e:	e9cd 4b0a 	strd	r4, fp, [sp, #40]	; 0x28
 80240a2:	69dc      	ldr	r4, [r3, #28]
 80240a4:	463a      	mov	r2, r7
 80240a6:	4643      	mov	r3, r8
 80240a8:	4629      	mov	r1, r5
 80240aa:	46a4      	mov	ip, r4
 80240ac:	b001      	add	sp, #4
 80240ae:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240b2:	4760      	bx	ip

080240b4 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 80240b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80240b8:	4607      	mov	r7, r0
 80240ba:	460c      	mov	r4, r1
 80240bc:	4615      	mov	r5, r2
 80240be:	461e      	mov	r6, r3
 80240c0:	f7ff fee3 	bl	8023e8a <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 80240c4:	b948      	cbnz	r0, 80240da <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x26>
 80240c6:	68b8      	ldr	r0, [r7, #8]
 80240c8:	6803      	ldr	r3, [r0, #0]
 80240ca:	699f      	ldr	r7, [r3, #24]
 80240cc:	462a      	mov	r2, r5
 80240ce:	4633      	mov	r3, r6
 80240d0:	4621      	mov	r1, r4
 80240d2:	46bc      	mov	ip, r7
 80240d4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80240d8:	4760      	bx	ip
 80240da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080240de <_ZNSt9type_infoD1Ev>:
 80240de:	4770      	bx	lr

080240e0 <_ZNKSt9type_info14__is_pointer_pEv>:
 80240e0:	2000      	movs	r0, #0
 80240e2:	4770      	bx	lr

080240e4 <_ZNKSt9type_infoeqERKS_>:
 80240e4:	4281      	cmp	r1, r0
 80240e6:	b508      	push	{r3, lr}
 80240e8:	d00e      	beq.n	8024108 <_ZNKSt9type_infoeqERKS_+0x24>
 80240ea:	6840      	ldr	r0, [r0, #4]
 80240ec:	7803      	ldrb	r3, [r0, #0]
 80240ee:	2b2a      	cmp	r3, #42	; 0x2a
 80240f0:	d00c      	beq.n	802410c <_ZNKSt9type_infoeqERKS_+0x28>
 80240f2:	6849      	ldr	r1, [r1, #4]
 80240f4:	780b      	ldrb	r3, [r1, #0]
 80240f6:	2b2a      	cmp	r3, #42	; 0x2a
 80240f8:	bf08      	it	eq
 80240fa:	3101      	addeq	r1, #1
 80240fc:	f7dc f8b8 	bl	8000270 <strcmp>
 8024100:	fab0 f080 	clz	r0, r0
 8024104:	0940      	lsrs	r0, r0, #5
 8024106:	bd08      	pop	{r3, pc}
 8024108:	2001      	movs	r0, #1
 802410a:	e7fc      	b.n	8024106 <_ZNKSt9type_infoeqERKS_+0x22>
 802410c:	2000      	movs	r0, #0
 802410e:	e7fa      	b.n	8024106 <_ZNKSt9type_infoeqERKS_+0x22>

08024110 <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev>:
 8024110:	b510      	push	{r4, lr}
 8024112:	4b03      	ldr	r3, [pc, #12]	; (8024120 <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev+0x10>)
 8024114:	6003      	str	r3, [r0, #0]
 8024116:	4604      	mov	r4, r0
 8024118:	f7ff fe84 	bl	8023e24 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 802411c:	4620      	mov	r0, r4
 802411e:	bd10      	pop	{r4, pc}
 8024120:	080317c4 	.word	0x080317c4

08024124 <_ZN10__cxxabiv121__vmi_class_type_infoD0Ev>:
 8024124:	b510      	push	{r4, lr}
 8024126:	4604      	mov	r4, r0
 8024128:	f7ff fff2 	bl	8024110 <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev>
 802412c:	4620      	mov	r0, r4
 802412e:	2118      	movs	r1, #24
 8024130:	f7e7 ff04 	bl	800bf3c <_ZdlPvj>
 8024134:	4620      	mov	r0, r4
 8024136:	bd10      	pop	{r4, pc}

08024138 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 8024138:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802413c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8024140:	454a      	cmp	r2, r9
 8024142:	4604      	mov	r4, r0
 8024144:	460f      	mov	r7, r1
 8024146:	4616      	mov	r6, r2
 8024148:	469a      	mov	sl, r3
 802414a:	d024      	beq.n	8024196 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x5e>
 802414c:	f8d4 800c 	ldr.w	r8, [r4, #12]
 8024150:	eb04 04c8 	add.w	r4, r4, r8, lsl #3
 8024154:	f1b8 0f00 	cmp.w	r8, #0
 8024158:	d028      	beq.n	80241ac <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x74>
 802415a:	68e5      	ldr	r5, [r4, #12]
 802415c:	07aa      	lsls	r2, r5, #30
 802415e:	d521      	bpl.n	80241a4 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x6c>
 8024160:	122a      	asrs	r2, r5, #8
 8024162:	f015 0501 	ands.w	r5, r5, #1
 8024166:	d003      	beq.n	8024170 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x38>
 8024168:	1cfb      	adds	r3, r7, #3
 802416a:	d01b      	beq.n	80241a4 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x6c>
 802416c:	6833      	ldr	r3, [r6, #0]
 802416e:	589a      	ldr	r2, [r3, r2]
 8024170:	68a0      	ldr	r0, [r4, #8]
 8024172:	6803      	ldr	r3, [r0, #0]
 8024174:	f8cd 9000 	str.w	r9, [sp]
 8024178:	f8d3 b020 	ldr.w	fp, [r3, #32]
 802417c:	4432      	add	r2, r6
 802417e:	4653      	mov	r3, sl
 8024180:	4639      	mov	r1, r7
 8024182:	47d8      	blx	fp
 8024184:	2803      	cmp	r0, #3
 8024186:	d90d      	bls.n	80241a4 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x6c>
 8024188:	b115      	cbz	r5, 8024190 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x58>
 802418a:	f040 0001 	orr.w	r0, r0, #1
 802418e:	b2c0      	uxtb	r0, r0
 8024190:	b003      	add	sp, #12
 8024192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024196:	4619      	mov	r1, r3
 8024198:	f7ff ffa4 	bl	80240e4 <_ZNKSt9type_infoeqERKS_>
 802419c:	2800      	cmp	r0, #0
 802419e:	d0d5      	beq.n	802414c <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x14>
 80241a0:	2006      	movs	r0, #6
 80241a2:	e7f5      	b.n	8024190 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x58>
 80241a4:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 80241a8:	3c08      	subs	r4, #8
 80241aa:	e7d3      	b.n	8024154 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x1c>
 80241ac:	2001      	movs	r0, #1
 80241ae:	e7ef      	b.n	8024190 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x58>

080241b0 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_>:
 80241b0:	b4f0      	push	{r4, r5, r6, r7}
 80241b2:	1e0d      	subs	r5, r1, #0
 80241b4:	9c04      	ldr	r4, [sp, #16]
 80241b6:	db06      	blt.n	80241c6 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_+0x16>
 80241b8:	1950      	adds	r0, r2, r5
 80241ba:	4284      	cmp	r4, r0
 80241bc:	bf14      	ite	ne
 80241be:	2001      	movne	r0, #1
 80241c0:	2006      	moveq	r0, #6
 80241c2:	bcf0      	pop	{r4, r5, r6, r7}
 80241c4:	4770      	bx	lr
 80241c6:	3502      	adds	r5, #2
 80241c8:	d005      	beq.n	80241d6 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_+0x26>
 80241ca:	6805      	ldr	r5, [r0, #0]
 80241cc:	9404      	str	r4, [sp, #16]
 80241ce:	6a2c      	ldr	r4, [r5, #32]
 80241d0:	46a4      	mov	ip, r4
 80241d2:	bcf0      	pop	{r4, r5, r6, r7}
 80241d4:	4760      	bx	ip
 80241d6:	2001      	movs	r0, #1
 80241d8:	e7f3      	b.n	80241c2 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_+0x12>

080241da <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 80241da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80241de:	b091      	sub	sp, #68	; 0x44
 80241e0:	469a      	mov	sl, r3
 80241e2:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 80241e4:	9206      	str	r2, [sp, #24]
 80241e6:	68a3      	ldr	r3, [r4, #8]
 80241e8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80241ea:	4688      	mov	r8, r1
 80241ec:	06d9      	lsls	r1, r3, #27
 80241ee:	bf44      	itt	mi
 80241f0:	6883      	ldrmi	r3, [r0, #8]
 80241f2:	60a3      	strmi	r3, [r4, #8]
 80241f4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80241f6:	4293      	cmp	r3, r2
 80241f8:	4681      	mov	r9, r0
 80241fa:	d107      	bne.n	802420c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x32>
 80241fc:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80241fe:	f7ff ff71 	bl	80240e4 <_ZNKSt9type_infoeqERKS_>
 8024202:	b118      	cbz	r0, 802420c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x32>
 8024204:	9b06      	ldr	r3, [sp, #24]
 8024206:	7163      	strb	r3, [r4, #5]
 8024208:	2700      	movs	r7, #0
 802420a:	e07f      	b.n	802430c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x132>
 802420c:	4651      	mov	r1, sl
 802420e:	4648      	mov	r0, r9
 8024210:	f7ff ff68 	bl	80240e4 <_ZNKSt9type_infoeqERKS_>
 8024214:	b1c0      	cbz	r0, 8024248 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x6e>
 8024216:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024218:	6023      	str	r3, [r4, #0]
 802421a:	f1b8 0f00 	cmp.w	r8, #0
 802421e:	9b06      	ldr	r3, [sp, #24]
 8024220:	7123      	strb	r3, [r4, #4]
 8024222:	db0b      	blt.n	802423c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x62>
 8024224:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024226:	4498      	add	r8, r3
 8024228:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802422a:	4543      	cmp	r3, r8
 802422c:	bf0c      	ite	eq
 802422e:	f04f 0806 	moveq.w	r8, #6
 8024232:	f04f 0801 	movne.w	r8, #1
 8024236:	f884 8006 	strb.w	r8, [r4, #6]
 802423a:	e7e5      	b.n	8024208 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e>
 802423c:	f118 0f02 	cmn.w	r8, #2
 8024240:	d1e2      	bne.n	8024208 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e>
 8024242:	2301      	movs	r3, #1
 8024244:	71a3      	strb	r3, [r4, #6]
 8024246:	e7df      	b.n	8024208 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e>
 8024248:	f1b8 0f00 	cmp.w	r8, #0
 802424c:	bfa9      	itett	ge
 802424e:	9b1c      	ldrge	r3, [sp, #112]	; 0x70
 8024250:	9007      	strlt	r0, [sp, #28]
 8024252:	eba3 0308 	subge.w	r3, r3, r8
 8024256:	9307      	strge	r3, [sp, #28]
 8024258:	2700      	movs	r7, #0
 802425a:	2302      	movs	r3, #2
 802425c:	e9cd 7309 	strd	r7, r3, [sp, #36]	; 0x24
 8024260:	2301      	movs	r3, #1
 8024262:	9308      	str	r3, [sp, #32]
 8024264:	9b06      	ldr	r3, [sp, #24]
 8024266:	f043 0301 	orr.w	r3, r3, #1
 802426a:	930b      	str	r3, [sp, #44]	; 0x2c
 802426c:	f8d9 b00c 	ldr.w	fp, [r9, #12]
 8024270:	eb09 03cb 	add.w	r3, r9, fp, lsl #3
 8024274:	9305      	str	r3, [sp, #20]
 8024276:	f1bb 0f00 	cmp.w	fp, #0
 802427a:	f000 80d4 	beq.w	8024426 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x24c>
 802427e:	2300      	movs	r3, #0
 8024280:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
 8024284:	9b05      	ldr	r3, [sp, #20]
 8024286:	68a5      	ldr	r5, [r4, #8]
 8024288:	68db      	ldr	r3, [r3, #12]
 802428a:	950f      	str	r5, [sp, #60]	; 0x3c
 802428c:	07da      	lsls	r2, r3, #31
 802428e:	bf43      	ittte	mi
 8024290:	981a      	ldrmi	r0, [sp, #104]	; 0x68
 8024292:	9a0b      	ldrmi	r2, [sp, #44]	; 0x2c
 8024294:	6800      	ldrmi	r0, [r0, #0]
 8024296:	9a06      	ldrpl	r2, [sp, #24]
 8024298:	ea4f 2123 	mov.w	r1, r3, asr #8
 802429c:	bf48      	it	mi
 802429e:	5841      	ldrmi	r1, [r0, r1]
 80242a0:	981a      	ldr	r0, [sp, #104]	; 0x68
 80242a2:	4401      	add	r1, r0
 80242a4:	9807      	ldr	r0, [sp, #28]
 80242a6:	b138      	cbz	r0, 80242b8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xde>
 80242a8:	4288      	cmp	r0, r1
 80242aa:	9e08      	ldr	r6, [sp, #32]
 80242ac:	bf2c      	ite	cs
 80242ae:	2000      	movcs	r0, #0
 80242b0:	2001      	movcc	r0, #1
 80242b2:	42b0      	cmp	r0, r6
 80242b4:	f000 80b3 	beq.w	802441e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x244>
 80242b8:	079b      	lsls	r3, r3, #30
 80242ba:	d407      	bmi.n	80242cc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xf2>
 80242bc:	f118 0f02 	cmn.w	r8, #2
 80242c0:	d102      	bne.n	80242c8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xee>
 80242c2:	07ae      	lsls	r6, r5, #30
 80242c4:	f000 80ad 	beq.w	8024422 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x248>
 80242c8:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
 80242cc:	9b05      	ldr	r3, [sp, #20]
 80242ce:	6898      	ldr	r0, [r3, #8]
 80242d0:	ad0d      	add	r5, sp, #52	; 0x34
 80242d2:	6803      	ldr	r3, [r0, #0]
 80242d4:	9503      	str	r5, [sp, #12]
 80242d6:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 80242d8:	9502      	str	r5, [sp, #8]
 80242da:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 80242dc:	e9cd 1500 	strd	r1, r5, [sp]
 80242e0:	4641      	mov	r1, r8
 80242e2:	69dd      	ldr	r5, [r3, #28]
 80242e4:	4653      	mov	r3, sl
 80242e6:	47a8      	blx	r5
 80242e8:	7963      	ldrb	r3, [r4, #5]
 80242ea:	f89d 2039 	ldrb.w	r2, [sp, #57]	; 0x39
 80242ee:	f89d 503a 	ldrb.w	r5, [sp, #58]	; 0x3a
 80242f2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80242f4:	4313      	orrs	r3, r2
 80242f6:	2d06      	cmp	r5, #6
 80242f8:	7163      	strb	r3, [r4, #5]
 80242fa:	d001      	beq.n	8024300 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x126>
 80242fc:	2d02      	cmp	r5, #2
 80242fe:	d109      	bne.n	8024314 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x13a>
 8024300:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
 8024304:	6021      	str	r1, [r4, #0]
 8024306:	7123      	strb	r3, [r4, #4]
 8024308:	71a5      	strb	r5, [r4, #6]
 802430a:	4607      	mov	r7, r0
 802430c:	4638      	mov	r0, r7
 802430e:	b011      	add	sp, #68	; 0x44
 8024310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024314:	6822      	ldr	r2, [r4, #0]
 8024316:	b9a7      	cbnz	r7, 8024342 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x168>
 8024318:	b9aa      	cbnz	r2, 8024346 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x16c>
 802431a:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802431e:	6021      	str	r1, [r4, #0]
 8024320:	7122      	strb	r2, [r4, #4]
 8024322:	b121      	cbz	r1, 802432e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
 8024324:	b11b      	cbz	r3, 802432e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
 8024326:	f8d9 3008 	ldr.w	r3, [r9, #8]
 802432a:	07dd      	lsls	r5, r3, #31
 802432c:	d5ed      	bpl.n	802430a <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x130>
 802432e:	7963      	ldrb	r3, [r4, #5]
 8024330:	2b04      	cmp	r3, #4
 8024332:	d0ea      	beq.n	802430a <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x130>
 8024334:	9b05      	ldr	r3, [sp, #20]
 8024336:	3b08      	subs	r3, #8
 8024338:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 802433c:	9305      	str	r3, [sp, #20]
 802433e:	4607      	mov	r7, r0
 8024340:	e799      	b.n	8024276 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x9c>
 8024342:	2a00      	cmp	r2, #0
 8024344:	d037      	beq.n	80243b6 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1dc>
 8024346:	4291      	cmp	r1, r2
 8024348:	d106      	bne.n	8024358 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x17e>
 802434a:	7923      	ldrb	r3, [r4, #4]
 802434c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024350:	4313      	orrs	r3, r2
 8024352:	7123      	strb	r3, [r4, #4]
 8024354:	4638      	mov	r0, r7
 8024356:	e7ea      	b.n	802432e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
 8024358:	b909      	cbnz	r1, 802435e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x184>
 802435a:	2800      	cmp	r0, #0
 802435c:	d0fa      	beq.n	8024354 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x17a>
 802435e:	2b03      	cmp	r3, #3
 8024360:	79a6      	ldrb	r6, [r4, #6]
 8024362:	d904      	bls.n	802436e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x194>
 8024364:	07d9      	lsls	r1, r3, #31
 8024366:	d529      	bpl.n	80243bc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1e2>
 8024368:	68a3      	ldr	r3, [r4, #8]
 802436a:	079b      	lsls	r3, r3, #30
 802436c:	d526      	bpl.n	80243bc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1e2>
 802436e:	b97e      	cbnz	r6, 8024390 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1b6>
 8024370:	2d03      	cmp	r5, #3
 8024372:	d905      	bls.n	8024380 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1a6>
 8024374:	07ee      	lsls	r6, r5, #31
 8024376:	d541      	bpl.n	80243fc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x222>
 8024378:	f8d9 3008 	ldr.w	r3, [r9, #8]
 802437c:	0798      	lsls	r0, r3, #30
 802437e:	d53d      	bpl.n	80243fc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x222>
 8024380:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024382:	9300      	str	r3, [sp, #0]
 8024384:	4641      	mov	r1, r8
 8024386:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024388:	4650      	mov	r0, sl
 802438a:	f7ff ff11 	bl	80241b0 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_>
 802438e:	4606      	mov	r6, r0
 8024390:	b9e5      	cbnz	r5, 80243cc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1f2>
 8024392:	2e03      	cmp	r6, #3
 8024394:	d905      	bls.n	80243a2 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1c8>
 8024396:	07f1      	lsls	r1, r6, #31
 8024398:	d532      	bpl.n	8024400 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x226>
 802439a:	f8d9 3008 	ldr.w	r3, [r9, #8]
 802439e:	079a      	lsls	r2, r3, #30
 80243a0:	d52e      	bpl.n	8024400 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x226>
 80243a2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80243a4:	9300      	str	r3, [sp, #0]
 80243a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80243a8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80243aa:	4641      	mov	r1, r8
 80243ac:	4650      	mov	r0, sl
 80243ae:	f7ff feff 	bl	80241b0 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_>
 80243b2:	4605      	mov	r5, r0
 80243b4:	e00a      	b.n	80243cc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1f2>
 80243b6:	2900      	cmp	r1, #0
 80243b8:	d1d1      	bne.n	802435e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x184>
 80243ba:	e7cb      	b.n	8024354 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x17a>
 80243bc:	2e01      	cmp	r6, #1
 80243be:	bf38      	it	cc
 80243c0:	2601      	movcc	r6, #1
 80243c2:	2d01      	cmp	r5, #1
 80243c4:	bf38      	it	cc
 80243c6:	2501      	movcc	r5, #1
 80243c8:	b2f6      	uxtb	r6, r6
 80243ca:	b2ed      	uxtb	r5, r5
 80243cc:	ea85 0306 	eor.w	r3, r5, r6
 80243d0:	b2db      	uxtb	r3, r3
 80243d2:	2b03      	cmp	r3, #3
 80243d4:	d916      	bls.n	8024404 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x22a>
 80243d6:	2d03      	cmp	r5, #3
 80243d8:	bf81      	itttt	hi
 80243da:	9b0d      	ldrhi	r3, [sp, #52]	; 0x34
 80243dc:	6023      	strhi	r3, [r4, #0]
 80243de:	462e      	movhi	r6, r5
 80243e0:	f89d 3038 	ldrbhi.w	r3, [sp, #56]	; 0x38
 80243e4:	bf86      	itte	hi
 80243e6:	7123      	strbhi	r3, [r4, #4]
 80243e8:	2000      	movhi	r0, #0
 80243ea:	4638      	movls	r0, r7
 80243ec:	07b3      	lsls	r3, r6, #30
 80243ee:	71a6      	strb	r6, [r4, #6]
 80243f0:	d402      	bmi.n	80243f8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x21e>
 80243f2:	f016 0601 	ands.w	r6, r6, #1
 80243f6:	d19a      	bne.n	802432e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
 80243f8:	2000      	movs	r0, #0
 80243fa:	e786      	b.n	802430a <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x130>
 80243fc:	2601      	movs	r6, #1
 80243fe:	e7e5      	b.n	80243cc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1f2>
 8024400:	2501      	movs	r5, #1
 8024402:	e7e3      	b.n	80243cc <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1f2>
 8024404:	4035      	ands	r5, r6
 8024406:	b2ed      	uxtb	r5, r5
 8024408:	2300      	movs	r3, #0
 802440a:	2d03      	cmp	r5, #3
 802440c:	6023      	str	r3, [r4, #0]
 802440e:	d903      	bls.n	8024418 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x23e>
 8024410:	2302      	movs	r3, #2
 8024412:	71a3      	strb	r3, [r4, #6]
 8024414:	2001      	movs	r0, #1
 8024416:	e778      	b.n	802430a <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x130>
 8024418:	2001      	movs	r0, #1
 802441a:	71a0      	strb	r0, [r4, #6]
 802441c:	e787      	b.n	802432e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
 802441e:	2301      	movs	r3, #1
 8024420:	9309      	str	r3, [sp, #36]	; 0x24
 8024422:	4638      	mov	r0, r7
 8024424:	e786      	b.n	8024334 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x15a>
 8024426:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024428:	2b00      	cmp	r3, #0
 802442a:	f43f af6f 	beq.w	802430c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x132>
 802442e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024430:	2b01      	cmp	r3, #1
 8024432:	f43f af6b 	beq.w	802430c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x132>
 8024436:	2301      	movs	r3, #1
 8024438:	930a      	str	r3, [sp, #40]	; 0x28
 802443a:	f8cd b020 	str.w	fp, [sp, #32]
 802443e:	e715      	b.n	802426c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x92>

08024440 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 8024440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024444:	ed2d 8b02 	vpush	{d8}
 8024448:	b089      	sub	sp, #36	; 0x24
 802444a:	ee08 1a10 	vmov	s16, r1
 802444e:	4606      	mov	r6, r0
 8024450:	4617      	mov	r7, r2
 8024452:	461c      	mov	r4, r3
 8024454:	f7ff fd19 	bl	8023e8a <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 8024458:	4605      	mov	r5, r0
 802445a:	2800      	cmp	r0, #0
 802445c:	d15f      	bne.n	802451e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xde>
 802445e:	f8d4 9008 	ldr.w	r9, [r4, #8]
 8024462:	f8d6 a00c 	ldr.w	sl, [r6, #12]
 8024466:	f019 0f10 	tst.w	r9, #16
 802446a:	bf18      	it	ne
 802446c:	f8d6 9008 	ldrne.w	r9, [r6, #8]
 8024470:	f009 0301 	and.w	r3, r9, #1
 8024474:	eb06 08ca 	add.w	r8, r6, sl, lsl #3
 8024478:	9303      	str	r3, [sp, #12]
 802447a:	f10d 0b10 	add.w	fp, sp, #16
 802447e:	f1ba 0f00 	cmp.w	sl, #0
 8024482:	d074      	beq.n	802456e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x12e>
 8024484:	2300      	movs	r3, #0
 8024486:	f8d8 200c 	ldr.w	r2, [r8, #12]
 802448a:	9304      	str	r3, [sp, #16]
 802448c:	f88d 3014 	strb.w	r3, [sp, #20]
 8024490:	2300      	movs	r3, #0
 8024492:	9307      	str	r3, [sp, #28]
 8024494:	f002 0301 	and.w	r3, r2, #1
 8024498:	9301      	str	r3, [sp, #4]
 802449a:	f002 0302 	and.w	r3, r2, #2
 802449e:	9302      	str	r3, [sp, #8]
 80244a0:	e9dd 1302 	ldrd	r1, r3, [sp, #8]
 80244a4:	430b      	orrs	r3, r1
 80244a6:	f8cd 9018 	str.w	r9, [sp, #24]
 80244aa:	d104      	bne.n	80244b6 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x76>
 80244ac:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 80244b0:	f1a8 0808 	sub.w	r8, r8, #8
 80244b4:	e7e3      	b.n	802447e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x3e>
 80244b6:	2f00      	cmp	r7, #0
 80244b8:	d037      	beq.n	802452a <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xea>
 80244ba:	9b01      	ldr	r3, [sp, #4]
 80244bc:	1212      	asrs	r2, r2, #8
 80244be:	b10b      	cbz	r3, 80244c4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x84>
 80244c0:	683b      	ldr	r3, [r7, #0]
 80244c2:	589a      	ldr	r2, [r3, r2]
 80244c4:	443a      	add	r2, r7
 80244c6:	f8d8 0008 	ldr.w	r0, [r8, #8]
 80244ca:	6803      	ldr	r3, [r0, #0]
 80244cc:	ee18 1a10 	vmov	r1, s16
 80244d0:	699d      	ldr	r5, [r3, #24]
 80244d2:	465b      	mov	r3, fp
 80244d4:	47a8      	blx	r5
 80244d6:	4605      	mov	r5, r0
 80244d8:	2800      	cmp	r0, #0
 80244da:	d0e7      	beq.n	80244ac <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x6c>
 80244dc:	9b07      	ldr	r3, [sp, #28]
 80244de:	2b08      	cmp	r3, #8
 80244e0:	d104      	bne.n	80244ec <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xac>
 80244e2:	9b01      	ldr	r3, [sp, #4]
 80244e4:	b113      	cbz	r3, 80244ec <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xac>
 80244e6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80244ea:	9307      	str	r3, [sp, #28]
 80244ec:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80244f0:	2b03      	cmp	r3, #3
 80244f2:	d905      	bls.n	8024500 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xc0>
 80244f4:	9a02      	ldr	r2, [sp, #8]
 80244f6:	b91a      	cbnz	r2, 8024500 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xc0>
 80244f8:	f023 0302 	bic.w	r3, r3, #2
 80244fc:	f88d 3014 	strb.w	r3, [sp, #20]
 8024500:	68e1      	ldr	r1, [r4, #12]
 8024502:	b9d1      	cbnz	r1, 802453a <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xfa>
 8024504:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
 8024508:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 802450c:	7923      	ldrb	r3, [r4, #4]
 802450e:	2b03      	cmp	r3, #3
 8024510:	d905      	bls.n	802451e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xde>
 8024512:	079a      	lsls	r2, r3, #30
 8024514:	d50b      	bpl.n	802452e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xee>
 8024516:	68b3      	ldr	r3, [r6, #8]
 8024518:	f013 0f01 	tst.w	r3, #1
 802451c:	d1c6      	bne.n	80244ac <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x6c>
 802451e:	4628      	mov	r0, r5
 8024520:	b009      	add	sp, #36	; 0x24
 8024522:	ecbd 8b02 	vpop	{d8}
 8024526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802452a:	463a      	mov	r2, r7
 802452c:	e7cb      	b.n	80244c6 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x86>
 802452e:	07db      	lsls	r3, r3, #31
 8024530:	d5f5      	bpl.n	802451e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xde>
 8024532:	68b3      	ldr	r3, [r6, #8]
 8024534:	f013 0f02 	tst.w	r3, #2
 8024538:	e7f0      	b.n	802451c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xdc>
 802453a:	6823      	ldr	r3, [r4, #0]
 802453c:	9a04      	ldr	r2, [sp, #16]
 802453e:	4293      	cmp	r3, r2
 8024540:	d004      	beq.n	802454c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x10c>
 8024542:	2300      	movs	r3, #0
 8024544:	6023      	str	r3, [r4, #0]
 8024546:	2302      	movs	r3, #2
 8024548:	7123      	strb	r3, [r4, #4]
 802454a:	e7e8      	b.n	802451e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xde>
 802454c:	b12b      	cbz	r3, 802455a <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x11a>
 802454e:	7923      	ldrb	r3, [r4, #4]
 8024550:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8024554:	4313      	orrs	r3, r2
 8024556:	7123      	strb	r3, [r4, #4]
 8024558:	e7a8      	b.n	80244ac <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x6c>
 802455a:	9807      	ldr	r0, [sp, #28]
 802455c:	2808      	cmp	r0, #8
 802455e:	d0f2      	beq.n	8024546 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x106>
 8024560:	2908      	cmp	r1, #8
 8024562:	d0f0      	beq.n	8024546 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x106>
 8024564:	f7ff fdbe 	bl	80240e4 <_ZNKSt9type_infoeqERKS_>
 8024568:	2800      	cmp	r0, #0
 802456a:	d1f0      	bne.n	802454e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x10e>
 802456c:	e7eb      	b.n	8024546 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x106>
 802456e:	7925      	ldrb	r5, [r4, #4]
 8024570:	3d00      	subs	r5, #0
 8024572:	bf18      	it	ne
 8024574:	2501      	movne	r5, #1
 8024576:	e7d2      	b.n	802451e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xde>

08024578 <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi>:
 8024578:	b5f0      	push	{r4, r5, r6, r7, lr}
 802457a:	460c      	mov	r4, r1
 802457c:	2100      	movs	r1, #0
 802457e:	b085      	sub	sp, #20
 8024580:	4607      	mov	r7, r0
 8024582:	4608      	mov	r0, r1
 8024584:	4616      	mov	r6, r2
 8024586:	f001 fbef 	bl	8025d68 <setlocale>
 802458a:	9001      	str	r0, [sp, #4]
 802458c:	f7db fe7a 	bl	8000284 <strlen>
 8024590:	1c42      	adds	r2, r0, #1
 8024592:	4610      	mov	r0, r2
 8024594:	9200      	str	r2, [sp, #0]
 8024596:	f7ff fd21 	bl	8023fdc <_Znaj>
 802459a:	e9dd 2100 	ldrd	r2, r1, [sp]
 802459e:	4605      	mov	r5, r0
 80245a0:	f001 fcae 	bl	8025f00 <memcpy>
 80245a4:	4917      	ldr	r1, [pc, #92]	; (8024604 <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi+0x8c>)
 80245a6:	2000      	movs	r0, #0
 80245a8:	f001 fbde 	bl	8025d68 <setlocale>
 80245ac:	a903      	add	r1, sp, #12
 80245ae:	4638      	mov	r0, r7
 80245b0:	f004 fc8e 	bl	8028ed0 <strtof>
 80245b4:	9b03      	ldr	r3, [sp, #12]
 80245b6:	ed84 0a00 	vstr	s0, [r4]
 80245ba:	42bb      	cmp	r3, r7
 80245bc:	d001      	beq.n	80245c2 <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi+0x4a>
 80245be:	781b      	ldrb	r3, [r3, #0]
 80245c0:	b163      	cbz	r3, 80245dc <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi+0x64>
 80245c2:	2300      	movs	r3, #0
 80245c4:	6023      	str	r3, [r4, #0]
 80245c6:	2304      	movs	r3, #4
 80245c8:	6033      	str	r3, [r6, #0]
 80245ca:	4629      	mov	r1, r5
 80245cc:	2000      	movs	r0, #0
 80245ce:	f001 fbcb 	bl	8025d68 <setlocale>
 80245d2:	4628      	mov	r0, r5
 80245d4:	f7ff fc7c 	bl	8023ed0 <_ZdaPv>
 80245d8:	b005      	add	sp, #20
 80245da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80245dc:	eddf 7a0a 	vldr	s15, [pc, #40]	; 8024608 <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi+0x90>
 80245e0:	eeb4 0a67 	vcmp.f32	s0, s15
 80245e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80245e8:	d009      	beq.n	80245fe <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi+0x86>
 80245ea:	eddf 7a08 	vldr	s15, [pc, #32]	; 802460c <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi+0x94>
 80245ee:	eeb4 0a67 	vcmp.f32	s0, s15
 80245f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80245f6:	d1e8      	bne.n	80245ca <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi+0x52>
 80245f8:	f46f 0300 	mvn.w	r3, #8388608	; 0x800000
 80245fc:	e7e2      	b.n	80245c4 <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi+0x4c>
 80245fe:	4b04      	ldr	r3, [pc, #16]	; (8024610 <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi+0x98>)
 8024600:	e7e0      	b.n	80245c4 <_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi+0x4c>
 8024602:	bf00      	nop
 8024604:	0802f7f0 	.word	0x0802f7f0
 8024608:	7f800000 	.word	0x7f800000
 802460c:	ff800000 	.word	0xff800000
 8024610:	7f7fffff 	.word	0x7f7fffff

08024614 <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi>:
 8024614:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024618:	460c      	mov	r4, r1
 802461a:	2100      	movs	r1, #0
 802461c:	b085      	sub	sp, #20
 802461e:	4681      	mov	r9, r0
 8024620:	4608      	mov	r0, r1
 8024622:	4690      	mov	r8, r2
 8024624:	f001 fba0 	bl	8025d68 <setlocale>
 8024628:	9001      	str	r0, [sp, #4]
 802462a:	f7db fe2b 	bl	8000284 <strlen>
 802462e:	1c42      	adds	r2, r0, #1
 8024630:	4610      	mov	r0, r2
 8024632:	9200      	str	r2, [sp, #0]
 8024634:	f7ff fcd2 	bl	8023fdc <_Znaj>
 8024638:	e9dd 2100 	ldrd	r2, r1, [sp]
 802463c:	4605      	mov	r5, r0
 802463e:	f001 fc5f 	bl	8025f00 <memcpy>
 8024642:	491d      	ldr	r1, [pc, #116]	; (80246b8 <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi+0xa4>)
 8024644:	2000      	movs	r0, #0
 8024646:	f001 fb8f 	bl	8025d68 <setlocale>
 802464a:	a903      	add	r1, sp, #12
 802464c:	4648      	mov	r0, r9
 802464e:	f004 fc33 	bl	8028eb8 <strtod>
 8024652:	9b03      	ldr	r3, [sp, #12]
 8024654:	454b      	cmp	r3, r9
 8024656:	ed84 0b00 	vstr	d0, [r4]
 802465a:	ec57 6b10 	vmov	r6, r7, d0
 802465e:	f04f 0200 	mov.w	r2, #0
 8024662:	d001      	beq.n	8024668 <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi+0x54>
 8024664:	781b      	ldrb	r3, [r3, #0]
 8024666:	b17b      	cbz	r3, 8024688 <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi+0x74>
 8024668:	2300      	movs	r3, #0
 802466a:	e9c4 2300 	strd	r2, r3, [r4]
 802466e:	2304      	movs	r3, #4
 8024670:	f8c8 3000 	str.w	r3, [r8]
 8024674:	4629      	mov	r1, r5
 8024676:	2000      	movs	r0, #0
 8024678:	f001 fb76 	bl	8025d68 <setlocale>
 802467c:	4628      	mov	r0, r5
 802467e:	f7ff fc27 	bl	8023ed0 <_ZdaPv>
 8024682:	b005      	add	sp, #20
 8024684:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024688:	4b0c      	ldr	r3, [pc, #48]	; (80246bc <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi+0xa8>)
 802468a:	ee10 0a10 	vmov	r0, s0
 802468e:	4639      	mov	r1, r7
 8024690:	f7dc fa24 	bl	8000adc <__aeabi_dcmpeq>
 8024694:	b960      	cbnz	r0, 80246b0 <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi+0x9c>
 8024696:	4b0a      	ldr	r3, [pc, #40]	; (80246c0 <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi+0xac>)
 8024698:	2200      	movs	r2, #0
 802469a:	4630      	mov	r0, r6
 802469c:	4639      	mov	r1, r7
 802469e:	f7dc fa1d 	bl	8000adc <__aeabi_dcmpeq>
 80246a2:	2800      	cmp	r0, #0
 80246a4:	d0e6      	beq.n	8024674 <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi+0x60>
 80246a6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80246aa:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
 80246ae:	e7dc      	b.n	802466a <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi+0x56>
 80246b0:	4b04      	ldr	r3, [pc, #16]	; (80246c4 <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi+0xb0>)
 80246b2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80246b6:	e7d8      	b.n	802466a <_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi+0x56>
 80246b8:	0802f7f0 	.word	0x0802f7f0
 80246bc:	7ff00000 	.word	0x7ff00000
 80246c0:	fff00000 	.word	0xfff00000
 80246c4:	7fefffff 	.word	0x7fefffff

080246c8 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi>:
 80246c8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80246cc:	460c      	mov	r4, r1
 80246ce:	2100      	movs	r1, #0
 80246d0:	4607      	mov	r7, r0
 80246d2:	4608      	mov	r0, r1
 80246d4:	4616      	mov	r6, r2
 80246d6:	f001 fb47 	bl	8025d68 <setlocale>
 80246da:	9001      	str	r0, [sp, #4]
 80246dc:	f7db fdd2 	bl	8000284 <strlen>
 80246e0:	1c42      	adds	r2, r0, #1
 80246e2:	4610      	mov	r0, r2
 80246e4:	9200      	str	r2, [sp, #0]
 80246e6:	f7ff fc79 	bl	8023fdc <_Znaj>
 80246ea:	e9dd 2100 	ldrd	r2, r1, [sp]
 80246ee:	4605      	mov	r5, r0
 80246f0:	f001 fc06 	bl	8025f00 <memcpy>
 80246f4:	491a      	ldr	r1, [pc, #104]	; (8024760 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi+0x98>)
 80246f6:	2000      	movs	r0, #0
 80246f8:	f001 fb36 	bl	8025d68 <setlocale>
 80246fc:	4919      	ldr	r1, [pc, #100]	; (8024764 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi+0x9c>)
 80246fe:	4622      	mov	r2, r4
 8024700:	4638      	mov	r0, r7
 8024702:	f002 fe0b 	bl	802731c <siscanf>
 8024706:	3001      	adds	r0, #1
 8024708:	2801      	cmp	r0, #1
 802470a:	d80f      	bhi.n	802472c <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi+0x64>
 802470c:	2200      	movs	r2, #0
 802470e:	2300      	movs	r3, #0
 8024710:	e9c4 2300 	strd	r2, r3, [r4]
 8024714:	2304      	movs	r3, #4
 8024716:	6033      	str	r3, [r6, #0]
 8024718:	4629      	mov	r1, r5
 802471a:	2000      	movs	r0, #0
 802471c:	f001 fb24 	bl	8025d68 <setlocale>
 8024720:	4628      	mov	r0, r5
 8024722:	b003      	add	sp, #12
 8024724:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024728:	f7ff bbd2 	b.w	8023ed0 <_ZdaPv>
 802472c:	e9d4 8900 	ldrd	r8, r9, [r4]
 8024730:	4b0d      	ldr	r3, [pc, #52]	; (8024768 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi+0xa0>)
 8024732:	2200      	movs	r2, #0
 8024734:	4640      	mov	r0, r8
 8024736:	4649      	mov	r1, r9
 8024738:	f7dc f9d0 	bl	8000adc <__aeabi_dcmpeq>
 802473c:	b960      	cbnz	r0, 8024758 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi+0x90>
 802473e:	4b0b      	ldr	r3, [pc, #44]	; (802476c <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi+0xa4>)
 8024740:	2200      	movs	r2, #0
 8024742:	4640      	mov	r0, r8
 8024744:	4649      	mov	r1, r9
 8024746:	f7dc f9c9 	bl	8000adc <__aeabi_dcmpeq>
 802474a:	2800      	cmp	r0, #0
 802474c:	d0e4      	beq.n	8024718 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi+0x50>
 802474e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8024752:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
 8024756:	e7db      	b.n	8024710 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi+0x48>
 8024758:	4b05      	ldr	r3, [pc, #20]	; (8024770 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi+0xa8>)
 802475a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 802475e:	e7d7      	b.n	8024710 <_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi+0x48>
 8024760:	0802f7f0 	.word	0x0802f7f0
 8024764:	080317e8 	.word	0x080317e8
 8024768:	7ff00000 	.word	0x7ff00000
 802476c:	fff00000 	.word	0xfff00000
 8024770:	7fefffff 	.word	0x7fefffff

08024774 <_ZNSt6locale5facet18_S_create_c_localeERPiPKcS1_>:
 8024774:	b508      	push	{r3, lr}
 8024776:	4603      	mov	r3, r0
 8024778:	2200      	movs	r2, #0
 802477a:	4608      	mov	r0, r1
 802477c:	601a      	str	r2, [r3, #0]
 802477e:	4904      	ldr	r1, [pc, #16]	; (8024790 <_ZNSt6locale5facet18_S_create_c_localeERPiPKcS1_+0x1c>)
 8024780:	f7db fd76 	bl	8000270 <strcmp>
 8024784:	b110      	cbz	r0, 802478c <_ZNSt6locale5facet18_S_create_c_localeERPiPKcS1_+0x18>
 8024786:	4803      	ldr	r0, [pc, #12]	; (8024794 <_ZNSt6locale5facet18_S_create_c_localeERPiPKcS1_+0x20>)
 8024788:	f7f3 f872 	bl	8017870 <_ZSt21__throw_runtime_errorPKc>
 802478c:	bd08      	pop	{r3, pc}
 802478e:	bf00      	nop
 8024790:	0802f7f0 	.word	0x0802f7f0
 8024794:	080317ec 	.word	0x080317ec

08024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>:
 8024798:	2300      	movs	r3, #0
 802479a:	6003      	str	r3, [r0, #0]
 802479c:	4770      	bx	lr

0802479e <_ZNKSt7codecvtIcc10_mbstate_tE6do_outERS0_PKcS4_RS4_PcS6_RS6_>:
 802479e:	9b00      	ldr	r3, [sp, #0]
 80247a0:	601a      	str	r2, [r3, #0]
 80247a2:	9b03      	ldr	r3, [sp, #12]
 80247a4:	9a01      	ldr	r2, [sp, #4]
 80247a6:	601a      	str	r2, [r3, #0]
 80247a8:	2003      	movs	r0, #3
 80247aa:	4770      	bx	lr

080247ac <_ZNKSt7codecvtIcc10_mbstate_tE10do_unshiftERS0_PcS3_RS3_>:
 80247ac:	9b00      	ldr	r3, [sp, #0]
 80247ae:	2003      	movs	r0, #3
 80247b0:	601a      	str	r2, [r3, #0]
 80247b2:	4770      	bx	lr

080247b4 <_ZNKSt7codecvtIcc10_mbstate_tE5do_inERS0_PKcS4_RS4_PcS6_RS6_>:
 80247b4:	9b00      	ldr	r3, [sp, #0]
 80247b6:	601a      	str	r2, [r3, #0]
 80247b8:	9b03      	ldr	r3, [sp, #12]
 80247ba:	9a01      	ldr	r2, [sp, #4]
 80247bc:	601a      	str	r2, [r3, #0]
 80247be:	2003      	movs	r0, #3
 80247c0:	4770      	bx	lr

080247c2 <_ZNKSt7codecvtIcc10_mbstate_tE11do_encodingEv>:
 80247c2:	2001      	movs	r0, #1
 80247c4:	4770      	bx	lr

080247c6 <_ZNKSt7codecvtIcc10_mbstate_tE16do_always_noconvEv>:
 80247c6:	2001      	movs	r0, #1
 80247c8:	4770      	bx	lr

080247ca <_ZNKSt7codecvtIcc10_mbstate_tE9do_lengthERS0_PKcS4_j>:
 80247ca:	9800      	ldr	r0, [sp, #0]
 80247cc:	1a9a      	subs	r2, r3, r2
 80247ce:	4290      	cmp	r0, r2
 80247d0:	bf28      	it	cs
 80247d2:	4610      	movcs	r0, r2
 80247d4:	4770      	bx	lr

080247d6 <_ZNKSt7codecvtIwc10_mbstate_tE10do_unshiftERS0_PcS3_RS3_>:
 80247d6:	9b00      	ldr	r3, [sp, #0]
 80247d8:	2003      	movs	r0, #3
 80247da:	601a      	str	r2, [r3, #0]
 80247dc:	4770      	bx	lr

080247de <_ZNKSt7codecvtIwc10_mbstate_tE16do_always_noconvEv>:
 80247de:	2000      	movs	r0, #0
 80247e0:	4770      	bx	lr
	...

080247e4 <_ZNSt7codecvtIcc10_mbstate_tED1Ev>:
 80247e4:	b510      	push	{r4, lr}
 80247e6:	4b06      	ldr	r3, [pc, #24]	; (8024800 <_ZNSt7codecvtIcc10_mbstate_tED1Ev+0x1c>)
 80247e8:	4604      	mov	r4, r0
 80247ea:	f840 3b08 	str.w	r3, [r0], #8
 80247ee:	f7ff ffd3 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 80247f2:	4b04      	ldr	r3, [pc, #16]	; (8024804 <_ZNSt7codecvtIcc10_mbstate_tED1Ev+0x20>)
 80247f4:	6023      	str	r3, [r4, #0]
 80247f6:	4620      	mov	r0, r4
 80247f8:	f7e7 fd4e 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 80247fc:	4620      	mov	r0, r4
 80247fe:	bd10      	pop	{r4, pc}
 8024800:	08031878 	.word	0x08031878
 8024804:	08030a58 	.word	0x08030a58

08024808 <_ZNSt7codecvtIcc10_mbstate_tED0Ev>:
 8024808:	b510      	push	{r4, lr}
 802480a:	4604      	mov	r4, r0
 802480c:	f7ff ffea 	bl	80247e4 <_ZNSt7codecvtIcc10_mbstate_tED1Ev>
 8024810:	4620      	mov	r0, r4
 8024812:	f7ff fb5b 	bl	8023ecc <_ZdlPv>
 8024816:	4620      	mov	r0, r4
 8024818:	bd10      	pop	{r4, pc}
	...

0802481c <_ZNSt7codecvtIwc10_mbstate_tED1Ev>:
 802481c:	b510      	push	{r4, lr}
 802481e:	4b06      	ldr	r3, [pc, #24]	; (8024838 <_ZNSt7codecvtIwc10_mbstate_tED1Ev+0x1c>)
 8024820:	4604      	mov	r4, r0
 8024822:	f840 3b08 	str.w	r3, [r0], #8
 8024826:	f7ff ffb7 	bl	8024798 <_ZNSt6locale5facet19_S_destroy_c_localeERPi>
 802482a:	4b04      	ldr	r3, [pc, #16]	; (802483c <_ZNSt7codecvtIwc10_mbstate_tED1Ev+0x20>)
 802482c:	6023      	str	r3, [r4, #0]
 802482e:	4620      	mov	r0, r4
 8024830:	f7e7 fd32 	bl	800c298 <_ZNSt6locale5facetD1Ev>
 8024834:	4620      	mov	r0, r4
 8024836:	bd10      	pop	{r4, pc}
 8024838:	080318a4 	.word	0x080318a4
 802483c:	08031250 	.word	0x08031250

08024840 <_ZNSt7codecvtIwc10_mbstate_tED0Ev>:
 8024840:	b510      	push	{r4, lr}
 8024842:	4604      	mov	r4, r0
 8024844:	f7ff ffea 	bl	802481c <_ZNSt7codecvtIwc10_mbstate_tED1Ev>
 8024848:	4620      	mov	r0, r4
 802484a:	f7ff fb3f 	bl	8023ecc <_ZdlPv>
 802484e:	4620      	mov	r0, r4
 8024850:	bd10      	pop	{r4, pc}
	...

08024854 <_ZNSt7codecvtIcc10_mbstate_tEC1Ej>:
 8024854:	3900      	subs	r1, #0
 8024856:	b510      	push	{r4, lr}
 8024858:	4b05      	ldr	r3, [pc, #20]	; (8024870 <_ZNSt7codecvtIcc10_mbstate_tEC1Ej+0x1c>)
 802485a:	6003      	str	r3, [r0, #0]
 802485c:	bf18      	it	ne
 802485e:	2101      	movne	r1, #1
 8024860:	6041      	str	r1, [r0, #4]
 8024862:	4604      	mov	r4, r0
 8024864:	f7e7 fd3a 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8024868:	60a0      	str	r0, [r4, #8]
 802486a:	4620      	mov	r0, r4
 802486c:	bd10      	pop	{r4, pc}
 802486e:	bf00      	nop
 8024870:	08031878 	.word	0x08031878

08024874 <_ZNSt7codecvtIwc10_mbstate_tEC1Ej>:
 8024874:	3900      	subs	r1, #0
 8024876:	b510      	push	{r4, lr}
 8024878:	4b05      	ldr	r3, [pc, #20]	; (8024890 <_ZNSt7codecvtIwc10_mbstate_tEC1Ej+0x1c>)
 802487a:	6003      	str	r3, [r0, #0]
 802487c:	bf18      	it	ne
 802487e:	2101      	movne	r1, #1
 8024880:	6041      	str	r1, [r0, #4]
 8024882:	4604      	mov	r4, r0
 8024884:	f7e7 fd2a 	bl	800c2dc <_ZNSt6locale5facet15_S_get_c_localeEv>
 8024888:	60a0      	str	r0, [r4, #8]
 802488a:	4620      	mov	r0, r4
 802488c:	bd10      	pop	{r4, pc}
 802488e:	bf00      	nop
 8024890:	080318a4 	.word	0x080318a4

08024894 <_ZNKSt7codecvtIwc10_mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_>:
 8024894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024898:	460f      	mov	r7, r1
 802489a:	e9d1 0100 	ldrd	r0, r1, [r1]
 802489e:	b085      	sub	sp, #20
 80248a0:	e9dd 6b0f 	ldrd	r6, fp, [sp, #60]	; 0x3c
 80248a4:	f10d 0808 	add.w	r8, sp, #8
 80248a8:	461d      	mov	r5, r3
 80248aa:	4614      	mov	r4, r2
 80248ac:	e888 0003 	stmia.w	r8, {r0, r1}
 80248b0:	f001 fa54 	bl	8025d5c <__locale_mb_cur_max>
 80248b4:	1b2a      	subs	r2, r5, r4
 80248b6:	1092      	asrs	r2, r2, #2
 80248b8:	eba6 030b 	sub.w	r3, r6, fp
 80248bc:	fb00 3002 	mla	r0, r0, r2, r3
 80248c0:	2800      	cmp	r0, #0
 80248c2:	dc13      	bgt.n	80248ec <_ZNKSt7codecvtIwc10_mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_+0x58>
 80248c4:	42ac      	cmp	r4, r5
 80248c6:	46a2      	mov	sl, r4
 80248c8:	d230      	bcs.n	802492c <_ZNKSt7codecvtIwc10_mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_+0x98>
 80248ca:	4642      	mov	r2, r8
 80248cc:	f8da 1000 	ldr.w	r1, [sl]
 80248d0:	4630      	mov	r0, r6
 80248d2:	f005 f863 	bl	802999c <wcrtomb>
 80248d6:	1c42      	adds	r2, r0, #1
 80248d8:	f104 0404 	add.w	r4, r4, #4
 80248dc:	4603      	mov	r3, r0
 80248de:	d031      	beq.n	8024944 <_ZNKSt7codecvtIwc10_mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_+0xb0>
 80248e0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80248e4:	441e      	add	r6, r3
 80248e6:	e887 0003 	stmia.w	r7, {r0, r1}
 80248ea:	e7eb      	b.n	80248c4 <_ZNKSt7codecvtIwc10_mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_+0x30>
 80248ec:	42ac      	cmp	r4, r5
 80248ee:	46a2      	mov	sl, r4
 80248f0:	d21c      	bcs.n	802492c <_ZNKSt7codecvtIwc10_mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_+0x98>
 80248f2:	455e      	cmp	r6, fp
 80248f4:	d21a      	bcs.n	802492c <_ZNKSt7codecvtIwc10_mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_+0x98>
 80248f6:	f8da 1000 	ldr.w	r1, [sl]
 80248fa:	4642      	mov	r2, r8
 80248fc:	a801      	add	r0, sp, #4
 80248fe:	f005 f84d 	bl	802999c <wcrtomb>
 8024902:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8024906:	f104 0404 	add.w	r4, r4, #4
 802490a:	4681      	mov	r9, r0
 802490c:	d01a      	beq.n	8024944 <_ZNKSt7codecvtIwc10_mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_+0xb0>
 802490e:	ebab 0306 	sub.w	r3, fp, r6
 8024912:	4283      	cmp	r3, r0
 8024914:	d318      	bcc.n	8024948 <_ZNKSt7codecvtIwc10_mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_+0xb4>
 8024916:	4602      	mov	r2, r0
 8024918:	a901      	add	r1, sp, #4
 802491a:	4630      	mov	r0, r6
 802491c:	f001 faf0 	bl	8025f00 <memcpy>
 8024920:	e898 0003 	ldmia.w	r8, {r0, r1}
 8024924:	444e      	add	r6, r9
 8024926:	e887 0003 	stmia.w	r7, {r0, r1}
 802492a:	e7df      	b.n	80248ec <_ZNKSt7codecvtIwc10_mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_+0x58>
 802492c:	4555      	cmp	r5, sl
 802492e:	bf94      	ite	ls
 8024930:	2000      	movls	r0, #0
 8024932:	2001      	movhi	r0, #1
 8024934:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024936:	f8c3 a000 	str.w	sl, [r3]
 802493a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802493c:	601e      	str	r6, [r3, #0]
 802493e:	b005      	add	sp, #20
 8024940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024944:	2002      	movs	r0, #2
 8024946:	e7f5      	b.n	8024934 <_ZNKSt7codecvtIwc10_mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_+0xa0>
 8024948:	2001      	movs	r0, #1
 802494a:	e7f3      	b.n	8024934 <_ZNKSt7codecvtIwc10_mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_+0xa0>

0802494c <_ZNKSt7codecvtIwc10_mbstate_tE5do_inERS0_PKcS4_RS4_PwS6_RS6_>:
 802494c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8024950:	4688      	mov	r8, r1
 8024952:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024956:	46e9      	mov	r9, sp
 8024958:	e9dd 760b 	ldrd	r7, r6, [sp, #44]	; 0x2c
 802495c:	e889 0003 	stmia.w	r9, {r0, r1}
 8024960:	4615      	mov	r5, r2
 8024962:	461c      	mov	r4, r3
 8024964:	42a5      	cmp	r5, r4
 8024966:	d220      	bcs.n	80249aa <_ZNKSt7codecvtIwc10_mbstate_tE5do_inERS0_PKcS4_RS4_PwS6_RS6_+0x5e>
 8024968:	42b7      	cmp	r7, r6
 802496a:	d21e      	bcs.n	80249aa <_ZNKSt7codecvtIwc10_mbstate_tE5do_inERS0_PKcS4_RS4_PwS6_RS6_+0x5e>
 802496c:	1b62      	subs	r2, r4, r5
 802496e:	4629      	mov	r1, r5
 8024970:	464b      	mov	r3, r9
 8024972:	4638      	mov	r0, r7
 8024974:	f001 fa94 	bl	8025ea0 <mbrtowc>
 8024978:	1c41      	adds	r1, r0, #1
 802497a:	4602      	mov	r2, r0
 802497c:	d00b      	beq.n	8024996 <_ZNKSt7codecvtIwc10_mbstate_tE5do_inERS0_PKcS4_RS4_PwS6_RS6_+0x4a>
 802497e:	1c83      	adds	r3, r0, #2
 8024980:	d011      	beq.n	80249a6 <_ZNKSt7codecvtIwc10_mbstate_tE5do_inERS0_PKcS4_RS4_PwS6_RS6_+0x5a>
 8024982:	b908      	cbnz	r0, 8024988 <_ZNKSt7codecvtIwc10_mbstate_tE5do_inERS0_PKcS4_RS4_PwS6_RS6_+0x3c>
 8024984:	6038      	str	r0, [r7, #0]
 8024986:	2201      	movs	r2, #1
 8024988:	e899 0003 	ldmia.w	r9, {r0, r1}
 802498c:	3704      	adds	r7, #4
 802498e:	e888 0003 	stmia.w	r8, {r0, r1}
 8024992:	4415      	add	r5, r2
 8024994:	e7e6      	b.n	8024964 <_ZNKSt7codecvtIwc10_mbstate_tE5do_inERS0_PKcS4_RS4_PwS6_RS6_+0x18>
 8024996:	2002      	movs	r0, #2
 8024998:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802499a:	601d      	str	r5, [r3, #0]
 802499c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802499e:	601f      	str	r7, [r3, #0]
 80249a0:	b003      	add	sp, #12
 80249a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80249a6:	2001      	movs	r0, #1
 80249a8:	e7f6      	b.n	8024998 <_ZNKSt7codecvtIwc10_mbstate_tE5do_inERS0_PKcS4_RS4_PwS6_RS6_+0x4c>
 80249aa:	42a5      	cmp	r5, r4
 80249ac:	bf2c      	ite	cs
 80249ae:	2000      	movcs	r0, #0
 80249b0:	2001      	movcc	r0, #1
 80249b2:	e7f1      	b.n	8024998 <_ZNKSt7codecvtIwc10_mbstate_tE5do_inERS0_PKcS4_RS4_PwS6_RS6_+0x4c>

080249b4 <_ZNKSt7codecvtIwc10_mbstate_tE11do_encodingEv>:
 80249b4:	b508      	push	{r3, lr}
 80249b6:	f001 f9d1 	bl	8025d5c <__locale_mb_cur_max>
 80249ba:	1e43      	subs	r3, r0, #1
 80249bc:	4258      	negs	r0, r3
 80249be:	4158      	adcs	r0, r3
 80249c0:	bd08      	pop	{r3, pc}

080249c2 <_ZNKSt7codecvtIwc10_mbstate_tE13do_max_lengthEv>:
 80249c2:	f001 b9cb 	b.w	8025d5c <__locale_mb_cur_max>

080249c6 <_ZNKSt7codecvtIwc10_mbstate_tE9do_lengthERS0_PKcS4_j>:
 80249c6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80249ca:	460e      	mov	r6, r1
 80249cc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80249d0:	46ea      	mov	sl, sp
 80249d2:	e88a 0003 	stmia.w	sl, {r0, r1}
 80249d6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80249da:	4615      	mov	r5, r2
 80249dc:	461f      	mov	r7, r3
 80249de:	f04f 0800 	mov.w	r8, #0
 80249e2:	42bd      	cmp	r5, r7
 80249e4:	d217      	bcs.n	8024a16 <_ZNKSt7codecvtIwc10_mbstate_tE9do_lengthERS0_PKcS4_j+0x50>
 80249e6:	f1b9 0f00 	cmp.w	r9, #0
 80249ea:	d014      	beq.n	8024a16 <_ZNKSt7codecvtIwc10_mbstate_tE9do_lengthERS0_PKcS4_j+0x50>
 80249ec:	4653      	mov	r3, sl
 80249ee:	1b7a      	subs	r2, r7, r5
 80249f0:	4629      	mov	r1, r5
 80249f2:	2000      	movs	r0, #0
 80249f4:	f001 fa54 	bl	8025ea0 <mbrtowc>
 80249f8:	1cc3      	adds	r3, r0, #3
 80249fa:	d80c      	bhi.n	8024a16 <_ZNKSt7codecvtIwc10_mbstate_tE9do_lengthERS0_PKcS4_j+0x50>
 80249fc:	2801      	cmp	r0, #1
 80249fe:	bf38      	it	cc
 8024a00:	2001      	movcc	r0, #1
 8024a02:	4604      	mov	r4, r0
 8024a04:	e89a 0003 	ldmia.w	sl, {r0, r1}
 8024a08:	4425      	add	r5, r4
 8024a0a:	e886 0003 	stmia.w	r6, {r0, r1}
 8024a0e:	44a0      	add	r8, r4
 8024a10:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8024a14:	e7e5      	b.n	80249e2 <_ZNKSt7codecvtIwc10_mbstate_tE9do_lengthERS0_PKcS4_j+0x1c>
 8024a16:	4640      	mov	r0, r8
 8024a18:	b002      	add	sp, #8
 8024a1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08024a1e <_ZNKSt7__cxx117collateIcE10_M_compareEPKcS3_>:
 8024a1e:	b508      	push	{r3, lr}
 8024a20:	4608      	mov	r0, r1
 8024a22:	4611      	mov	r1, r2
 8024a24:	f002 fceb 	bl	80273fe <strcoll>
 8024a28:	1e03      	subs	r3, r0, #0
 8024a2a:	bf18      	it	ne
 8024a2c:	2301      	movne	r3, #1
 8024a2e:	ea43 70a0 	orr.w	r0, r3, r0, asr #30
 8024a32:	bd08      	pop	{r3, pc}

08024a34 <_ZNKSt7__cxx117collateIcE12_M_transformEPcPKcj>:
 8024a34:	4608      	mov	r0, r1
 8024a36:	4611      	mov	r1, r2
 8024a38:	461a      	mov	r2, r3
 8024a3a:	f004 bc0d 	b.w	8029258 <strxfrm>

08024a3e <_ZNKSt7__cxx117collateIwE10_M_compareEPKwS3_>:
 8024a3e:	b508      	push	{r3, lr}
 8024a40:	4608      	mov	r0, r1
 8024a42:	4611      	mov	r1, r2
 8024a44:	f004 ffb4 	bl	80299b0 <wcscoll>
 8024a48:	1e03      	subs	r3, r0, #0
 8024a4a:	bf18      	it	ne
 8024a4c:	2301      	movne	r3, #1
 8024a4e:	ea43 70a0 	orr.w	r0, r3, r0, asr #30
 8024a52:	bd08      	pop	{r3, pc}

08024a54 <_ZNKSt7__cxx117collateIwE12_M_transformEPwPKwj>:
 8024a54:	4608      	mov	r0, r1
 8024a56:	4611      	mov	r1, r2
 8024a58:	461a      	mov	r2, r3
 8024a5a:	f005 bd87 	b.w	802a56c <wcsxfrm>

08024a5e <_ZNKSt7collateIcE10_M_compareEPKcS2_>:
 8024a5e:	b508      	push	{r3, lr}
 8024a60:	4608      	mov	r0, r1
 8024a62:	4611      	mov	r1, r2
 8024a64:	f002 fccb 	bl	80273fe <strcoll>
 8024a68:	1e03      	subs	r3, r0, #0
 8024a6a:	bf18      	it	ne
 8024a6c:	2301      	movne	r3, #1
 8024a6e:	ea43 70a0 	orr.w	r0, r3, r0, asr #30
 8024a72:	bd08      	pop	{r3, pc}

08024a74 <_ZNKSt7collateIcE12_M_transformEPcPKcj>:
 8024a74:	4608      	mov	r0, r1
 8024a76:	4611      	mov	r1, r2
 8024a78:	461a      	mov	r2, r3
 8024a7a:	f004 bbed 	b.w	8029258 <strxfrm>

08024a7e <_ZNKSt7collateIwE10_M_compareEPKwS2_>:
 8024a7e:	b508      	push	{r3, lr}
 8024a80:	4608      	mov	r0, r1
 8024a82:	4611      	mov	r1, r2
 8024a84:	f004 ff94 	bl	80299b0 <wcscoll>
 8024a88:	1e03      	subs	r3, r0, #0
 8024a8a:	bf18      	it	ne
 8024a8c:	2301      	movne	r3, #1
 8024a8e:	ea43 70a0 	orr.w	r0, r3, r0, asr #30
 8024a92:	bd08      	pop	{r3, pc}

08024a94 <_ZNKSt7collateIwE12_M_transformEPwPKwj>:
 8024a94:	4608      	mov	r0, r1
 8024a96:	4611      	mov	r1, r2
 8024a98:	461a      	mov	r2, r3
 8024a9a:	f005 bd67 	b.w	802a56c <wcsxfrm>

08024a9e <_ZNSt8ios_base7_M_initEv>:
 8024a9e:	b513      	push	{r0, r1, r4, lr}
 8024aa0:	2206      	movs	r2, #6
 8024aa2:	2300      	movs	r3, #0
 8024aa4:	e9c0 2301 	strd	r2, r3, [r0, #4]
 8024aa8:	f241 0302 	movw	r3, #4098	; 0x1002
 8024aac:	60c3      	str	r3, [r0, #12]
 8024aae:	4604      	mov	r4, r0
 8024ab0:	a801      	add	r0, sp, #4
 8024ab2:	f7e8 f963 	bl	800cd7c <_ZNSt6localeC1Ev>
 8024ab6:	a901      	add	r1, sp, #4
 8024ab8:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 8024abc:	f7e7 fc72 	bl	800c3a4 <_ZNSt6localeaSERKS_>
 8024ac0:	a801      	add	r0, sp, #4
 8024ac2:	f7e7 fc61 	bl	800c388 <_ZNSt6localeD1Ev>
 8024ac6:	b002      	add	sp, #8
 8024ac8:	bd10      	pop	{r4, pc}

08024aca <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc>:
 8024aca:	b530      	push	{r4, r5, lr}
 8024acc:	68c4      	ldr	r4, [r0, #12]
 8024ace:	2325      	movs	r3, #37	; 0x25
 8024ad0:	0520      	lsls	r0, r4, #20
 8024ad2:	700b      	strb	r3, [r1, #0]
 8024ad4:	bf43      	ittte	mi
 8024ad6:	232b      	movmi	r3, #43	; 0x2b
 8024ad8:	704b      	strbmi	r3, [r1, #1]
 8024ada:	1c88      	addmi	r0, r1, #2
 8024adc:	1c48      	addpl	r0, r1, #1
 8024ade:	0563      	lsls	r3, r4, #21
 8024ae0:	bf44      	itt	mi
 8024ae2:	2323      	movmi	r3, #35	; 0x23
 8024ae4:	f800 3b01 	strbmi.w	r3, [r0], #1
 8024ae8:	f404 7182 	and.w	r1, r4, #260	; 0x104
 8024aec:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 8024af0:	4603      	mov	r3, r0
 8024af2:	d02b      	beq.n	8024b4c <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc+0x82>
 8024af4:	252e      	movs	r5, #46	; 0x2e
 8024af6:	f803 5b02 	strb.w	r5, [r3], #2
 8024afa:	252a      	movs	r5, #42	; 0x2a
 8024afc:	7045      	strb	r5, [r0, #1]
 8024afe:	b10a      	cbz	r2, 8024b04 <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc+0x3a>
 8024b00:	f803 2b01 	strb.w	r2, [r3], #1
 8024b04:	2904      	cmp	r1, #4
 8024b06:	f103 0201 	add.w	r2, r3, #1
 8024b0a:	d102      	bne.n	8024b12 <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc+0x48>
 8024b0c:	2166      	movs	r1, #102	; 0x66
 8024b0e:	7019      	strb	r1, [r3, #0]
 8024b10:	e014      	b.n	8024b3c <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc+0x72>
 8024b12:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8024b16:	f404 4080 	and.w	r0, r4, #16384	; 0x4000
 8024b1a:	d104      	bne.n	8024b26 <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc+0x5c>
 8024b1c:	2800      	cmp	r0, #0
 8024b1e:	bf14      	ite	ne
 8024b20:	2145      	movne	r1, #69	; 0x45
 8024b22:	2165      	moveq	r1, #101	; 0x65
 8024b24:	e7f3      	b.n	8024b0e <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc+0x44>
 8024b26:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 8024b2a:	d10a      	bne.n	8024b42 <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc+0x78>
 8024b2c:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8024b30:	461a      	mov	r2, r3
 8024b32:	bf14      	ite	ne
 8024b34:	2141      	movne	r1, #65	; 0x41
 8024b36:	2161      	moveq	r1, #97	; 0x61
 8024b38:	f802 1b01 	strb.w	r1, [r2], #1
 8024b3c:	2300      	movs	r3, #0
 8024b3e:	7013      	strb	r3, [r2, #0]
 8024b40:	bd30      	pop	{r4, r5, pc}
 8024b42:	2800      	cmp	r0, #0
 8024b44:	bf14      	ite	ne
 8024b46:	2147      	movne	r1, #71	; 0x47
 8024b48:	2167      	moveq	r1, #103	; 0x67
 8024b4a:	e7e0      	b.n	8024b0e <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc+0x44>
 8024b4c:	2a00      	cmp	r2, #0
 8024b4e:	d1d7      	bne.n	8024b00 <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc+0x36>
 8024b50:	e7ec      	b.n	8024b2c <_ZNSt10__num_base15_S_format_floatERKSt8ios_basePcc+0x62>

08024b52 <_ZSt22__verify_grouping_implPKcjS0_j>:
 8024b52:	b5f0      	push	{r4, r5, r6, r7, lr}
 8024b54:	3b01      	subs	r3, #1
 8024b56:	1e4c      	subs	r4, r1, #1
 8024b58:	429c      	cmp	r4, r3
 8024b5a:	bf28      	it	cs
 8024b5c:	461c      	movcs	r4, r3
 8024b5e:	4605      	mov	r5, r0
 8024b60:	4606      	mov	r6, r0
 8024b62:	1907      	adds	r7, r0, r4
 8024b64:	2001      	movs	r0, #1
 8024b66:	42be      	cmp	r6, r7
 8024b68:	d00b      	beq.n	8024b82 <_ZSt22__verify_grouping_implPKcjS0_j+0x30>
 8024b6a:	b150      	cbz	r0, 8024b82 <_ZSt22__verify_grouping_implPKcjS0_j+0x30>
 8024b6c:	f816 0b01 	ldrb.w	r0, [r6], #1
 8024b70:	5cd1      	ldrb	r1, [r2, r3]
 8024b72:	eba1 0c00 	sub.w	ip, r1, r0
 8024b76:	f1dc 0000 	rsbs	r0, ip, #0
 8024b7a:	eb40 000c 	adc.w	r0, r0, ip
 8024b7e:	3b01      	subs	r3, #1
 8024b80:	e7f1      	b.n	8024b66 <_ZSt22__verify_grouping_implPKcjS0_j+0x14>
 8024b82:	5d29      	ldrb	r1, [r5, r4]
 8024b84:	4413      	add	r3, r2
 8024b86:	4293      	cmp	r3, r2
 8024b88:	d006      	beq.n	8024b98 <_ZSt22__verify_grouping_implPKcjS0_j+0x46>
 8024b8a:	b128      	cbz	r0, 8024b98 <_ZSt22__verify_grouping_implPKcjS0_j+0x46>
 8024b8c:	f813 0901 	ldrb.w	r0, [r3], #-1
 8024b90:	1a44      	subs	r4, r0, r1
 8024b92:	4260      	negs	r0, r4
 8024b94:	4160      	adcs	r0, r4
 8024b96:	e7f6      	b.n	8024b86 <_ZSt22__verify_grouping_implPKcjS0_j+0x34>
 8024b98:	b24b      	sxtb	r3, r1
 8024b9a:	2b00      	cmp	r3, #0
 8024b9c:	dd05      	ble.n	8024baa <_ZSt22__verify_grouping_implPKcjS0_j+0x58>
 8024b9e:	7813      	ldrb	r3, [r2, #0]
 8024ba0:	428b      	cmp	r3, r1
 8024ba2:	bf8c      	ite	hi
 8024ba4:	2000      	movhi	r0, #0
 8024ba6:	f000 0001 	andls.w	r0, r0, #1
 8024baa:	bdf0      	pop	{r4, r5, r6, r7, pc}

08024bac <_ZSt17__verify_groupingPKcjRKSs>:
 8024bac:	6812      	ldr	r2, [r2, #0]
 8024bae:	f852 3c0c 	ldr.w	r3, [r2, #-12]
 8024bb2:	f7ff bfce 	b.w	8024b52 <_ZSt22__verify_grouping_implPKcjS0_j>

08024bb6 <_ZNKSt7__cxx118messagesIcE6do_getEiiiRKNS_12basic_stringIcSt11char_traitsIcESaIcEEE>:
 8024bb6:	b510      	push	{r4, lr}
 8024bb8:	9903      	ldr	r1, [sp, #12]
 8024bba:	4604      	mov	r4, r0
 8024bbc:	f7f9 f9cc 	bl	801df58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8024bc0:	4620      	mov	r0, r4
 8024bc2:	bd10      	pop	{r4, pc}

08024bc4 <_ZNKSt7__cxx118messagesIwE6do_getEiiiRKNS_12basic_stringIwSt11char_traitsIwESaIwEEE>:
 8024bc4:	b510      	push	{r4, lr}
 8024bc6:	9903      	ldr	r1, [sp, #12]
 8024bc8:	4604      	mov	r4, r0
 8024bca:	f7ff f8c1 	bl	8023d50 <_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1ERKS4_>
 8024bce:	4620      	mov	r0, r4
 8024bd0:	bd10      	pop	{r4, pc}

08024bd2 <_ZNKSt8messagesIcE6do_getEiiiRKSs>:
 8024bd2:	b510      	push	{r4, lr}
 8024bd4:	9903      	ldr	r1, [sp, #12]
 8024bd6:	4604      	mov	r4, r0
 8024bd8:	f7eb fc52 	bl	8010480 <_ZNSsC1ERKSs>
 8024bdc:	4620      	mov	r0, r4
 8024bde:	bd10      	pop	{r4, pc}

08024be0 <_ZNKSt8messagesIwE6do_getEiiiRKSbIwSt11char_traitsIwESaIwEE>:
 8024be0:	b510      	push	{r4, lr}
 8024be2:	9903      	ldr	r1, [sp, #12]
 8024be4:	4604      	mov	r4, r0
 8024be6:	f7eb ffcf 	bl	8010b88 <_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS2_>
 8024bea:	4620      	mov	r0, r4
 8024bec:	bd10      	pop	{r4, pc}

08024bee <_ZSt17__verify_groupingPKcjRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 8024bee:	e9d2 2300 	ldrd	r2, r3, [r2]
 8024bf2:	f7ff bfae 	b.w	8024b52 <_ZSt22__verify_grouping_implPKcjS0_j>

08024bf6 <_ZNKSt11__timepunctIcE6_M_putEPcjPKcPK2tm>:
 8024bf6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8024bfa:	460c      	mov	r4, r1
 8024bfc:	2100      	movs	r1, #0
 8024bfe:	4680      	mov	r8, r0
 8024c00:	4608      	mov	r0, r1
 8024c02:	461f      	mov	r7, r3
 8024c04:	4615      	mov	r5, r2
 8024c06:	f001 f8af 	bl	8025d68 <setlocale>
 8024c0a:	9001      	str	r0, [sp, #4]
 8024c0c:	f7db fb3a 	bl	8000284 <strlen>
 8024c10:	1c42      	adds	r2, r0, #1
 8024c12:	4610      	mov	r0, r2
 8024c14:	9200      	str	r2, [sp, #0]
 8024c16:	f7ff f9e1 	bl	8023fdc <_Znaj>
 8024c1a:	e9dd 2100 	ldrd	r2, r1, [sp]
 8024c1e:	4606      	mov	r6, r0
 8024c20:	f001 f96e 	bl	8025f00 <memcpy>
 8024c24:	f8d8 1010 	ldr.w	r1, [r8, #16]
 8024c28:	2000      	movs	r0, #0
 8024c2a:	f001 f89d 	bl	8025d68 <setlocale>
 8024c2e:	4629      	mov	r1, r5
 8024c30:	9b08      	ldr	r3, [sp, #32]
 8024c32:	463a      	mov	r2, r7
 8024c34:	4620      	mov	r0, r4
 8024c36:	f003 fb15 	bl	8028264 <strftime>
 8024c3a:	4631      	mov	r1, r6
 8024c3c:	4605      	mov	r5, r0
 8024c3e:	2000      	movs	r0, #0
 8024c40:	f001 f892 	bl	8025d68 <setlocale>
 8024c44:	4630      	mov	r0, r6
 8024c46:	f7ff f943 	bl	8023ed0 <_ZdaPv>
 8024c4a:	b905      	cbnz	r5, 8024c4e <_ZNKSt11__timepunctIcE6_M_putEPcjPKcPK2tm+0x58>
 8024c4c:	7025      	strb	r5, [r4, #0]
 8024c4e:	b002      	add	sp, #8
 8024c50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08024c54 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi>:
 8024c54:	b538      	push	{r3, r4, r5, lr}
 8024c56:	6884      	ldr	r4, [r0, #8]
 8024c58:	4605      	mov	r5, r0
 8024c5a:	bbc4      	cbnz	r4, 8024cce <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x7a>
 8024c5c:	20c8      	movs	r0, #200	; 0xc8
 8024c5e:	f7e7 f96f 	bl	800bf40 <_Znwj>
 8024c62:	4b50      	ldr	r3, [pc, #320]	; (8024da4 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x150>)
 8024c64:	6044      	str	r4, [r0, #4]
 8024c66:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8024c6a:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8024c6e:	e9c0 4406 	strd	r4, r4, [r0, #24]
 8024c72:	e9c0 4408 	strd	r4, r4, [r0, #32]
 8024c76:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 8024c7a:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 8024c7e:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 8024c82:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 8024c86:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8024c8a:	e9c0 4414 	strd	r4, r4, [r0, #80]	; 0x50
 8024c8e:	e9c0 4416 	strd	r4, r4, [r0, #88]	; 0x58
 8024c92:	e9c0 4418 	strd	r4, r4, [r0, #96]	; 0x60
 8024c96:	e9c0 441a 	strd	r4, r4, [r0, #104]	; 0x68
 8024c9a:	e9c0 441c 	strd	r4, r4, [r0, #112]	; 0x70
 8024c9e:	e9c0 441e 	strd	r4, r4, [r0, #120]	; 0x78
 8024ca2:	6003      	str	r3, [r0, #0]
 8024ca4:	e9c0 4420 	strd	r4, r4, [r0, #128]	; 0x80
 8024ca8:	e9c0 4422 	strd	r4, r4, [r0, #136]	; 0x88
 8024cac:	e9c0 4424 	strd	r4, r4, [r0, #144]	; 0x90
 8024cb0:	e9c0 4426 	strd	r4, r4, [r0, #152]	; 0x98
 8024cb4:	e9c0 4428 	strd	r4, r4, [r0, #160]	; 0xa0
 8024cb8:	e9c0 442a 	strd	r4, r4, [r0, #168]	; 0xa8
 8024cbc:	e9c0 442c 	strd	r4, r4, [r0, #176]	; 0xb0
 8024cc0:	e9c0 442e 	strd	r4, r4, [r0, #184]	; 0xb8
 8024cc4:	f8c0 40c0 	str.w	r4, [r0, #192]	; 0xc0
 8024cc8:	f880 40c4 	strb.w	r4, [r0, #196]	; 0xc4
 8024ccc:	60a8      	str	r0, [r5, #8]
 8024cce:	68ab      	ldr	r3, [r5, #8]
 8024cd0:	4a35      	ldr	r2, [pc, #212]	; (8024da8 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x154>)
 8024cd2:	4936      	ldr	r1, [pc, #216]	; (8024dac <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x158>)
 8024cd4:	6219      	str	r1, [r3, #32]
 8024cd6:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8024cda:	4a35      	ldr	r2, [pc, #212]	; (8024db0 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x15c>)
 8024cdc:	4935      	ldr	r1, [pc, #212]	; (8024db4 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x160>)
 8024cde:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8024ce2:	4a35      	ldr	r2, [pc, #212]	; (8024db8 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x164>)
 8024ce4:	e9c3 1209 	strd	r1, r2, [r3, #36]	; 0x24
 8024ce8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8024cec:	4a33      	ldr	r2, [pc, #204]	; (8024dbc <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x168>)
 8024cee:	62da      	str	r2, [r3, #44]	; 0x2c
 8024cf0:	4a33      	ldr	r2, [pc, #204]	; (8024dc0 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x16c>)
 8024cf2:	631a      	str	r2, [r3, #48]	; 0x30
 8024cf4:	4a33      	ldr	r2, [pc, #204]	; (8024dc4 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x170>)
 8024cf6:	635a      	str	r2, [r3, #52]	; 0x34
 8024cf8:	4a33      	ldr	r2, [pc, #204]	; (8024dc8 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x174>)
 8024cfa:	639a      	str	r2, [r3, #56]	; 0x38
 8024cfc:	4a33      	ldr	r2, [pc, #204]	; (8024dcc <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x178>)
 8024cfe:	63da      	str	r2, [r3, #60]	; 0x3c
 8024d00:	4a33      	ldr	r2, [pc, #204]	; (8024dd0 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x17c>)
 8024d02:	641a      	str	r2, [r3, #64]	; 0x40
 8024d04:	4a33      	ldr	r2, [pc, #204]	; (8024dd4 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x180>)
 8024d06:	645a      	str	r2, [r3, #68]	; 0x44
 8024d08:	4a33      	ldr	r2, [pc, #204]	; (8024dd8 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x184>)
 8024d0a:	649a      	str	r2, [r3, #72]	; 0x48
 8024d0c:	4a33      	ldr	r2, [pc, #204]	; (8024ddc <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x188>)
 8024d0e:	64da      	str	r2, [r3, #76]	; 0x4c
 8024d10:	4a33      	ldr	r2, [pc, #204]	; (8024de0 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x18c>)
 8024d12:	651a      	str	r2, [r3, #80]	; 0x50
 8024d14:	4a33      	ldr	r2, [pc, #204]	; (8024de4 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x190>)
 8024d16:	655a      	str	r2, [r3, #84]	; 0x54
 8024d18:	4a33      	ldr	r2, [pc, #204]	; (8024de8 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x194>)
 8024d1a:	659a      	str	r2, [r3, #88]	; 0x58
 8024d1c:	4a33      	ldr	r2, [pc, #204]	; (8024dec <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x198>)
 8024d1e:	65da      	str	r2, [r3, #92]	; 0x5c
 8024d20:	4a33      	ldr	r2, [pc, #204]	; (8024df0 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x19c>)
 8024d22:	661a      	str	r2, [r3, #96]	; 0x60
 8024d24:	4a33      	ldr	r2, [pc, #204]	; (8024df4 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1a0>)
 8024d26:	4934      	ldr	r1, [pc, #208]	; (8024df8 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1a4>)
 8024d28:	665a      	str	r2, [r3, #100]	; 0x64
 8024d2a:	4a34      	ldr	r2, [pc, #208]	; (8024dfc <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1a8>)
 8024d2c:	669a      	str	r2, [r3, #104]	; 0x68
 8024d2e:	6799      	str	r1, [r3, #120]	; 0x78
 8024d30:	4a33      	ldr	r2, [pc, #204]	; (8024e00 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1ac>)
 8024d32:	4934      	ldr	r1, [pc, #208]	; (8024e04 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1b0>)
 8024d34:	66da      	str	r2, [r3, #108]	; 0x6c
 8024d36:	67d9      	str	r1, [r3, #124]	; 0x7c
 8024d38:	4a33      	ldr	r2, [pc, #204]	; (8024e08 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1b4>)
 8024d3a:	4934      	ldr	r1, [pc, #208]	; (8024e0c <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1b8>)
 8024d3c:	671a      	str	r2, [r3, #112]	; 0x70
 8024d3e:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
 8024d42:	4a33      	ldr	r2, [pc, #204]	; (8024e10 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1bc>)
 8024d44:	4933      	ldr	r1, [pc, #204]	; (8024e14 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1c0>)
 8024d46:	675a      	str	r2, [r3, #116]	; 0x74
 8024d48:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
 8024d4c:	4932      	ldr	r1, [pc, #200]	; (8024e18 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1c4>)
 8024d4e:	f8c3 1088 	str.w	r1, [r3, #136]	; 0x88
 8024d52:	4932      	ldr	r1, [pc, #200]	; (8024e1c <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1c8>)
 8024d54:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
 8024d58:	4931      	ldr	r1, [pc, #196]	; (8024e20 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1cc>)
 8024d5a:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
 8024d5e:	4931      	ldr	r1, [pc, #196]	; (8024e24 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1d0>)
 8024d60:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
 8024d64:	4930      	ldr	r1, [pc, #192]	; (8024e28 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1d4>)
 8024d66:	f8c3 1098 	str.w	r1, [r3, #152]	; 0x98
 8024d6a:	4930      	ldr	r1, [pc, #192]	; (8024e2c <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1d8>)
 8024d6c:	f8c3 109c 	str.w	r1, [r3, #156]	; 0x9c
 8024d70:	492f      	ldr	r1, [pc, #188]	; (8024e30 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1dc>)
 8024d72:	e9c3 1228 	strd	r1, r2, [r3, #160]	; 0xa0
 8024d76:	4a2f      	ldr	r2, [pc, #188]	; (8024e34 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1e0>)
 8024d78:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 8024d7c:	4a2e      	ldr	r2, [pc, #184]	; (8024e38 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1e4>)
 8024d7e:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 8024d82:	4a2e      	ldr	r2, [pc, #184]	; (8024e3c <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1e8>)
 8024d84:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 8024d88:	4a2d      	ldr	r2, [pc, #180]	; (8024e40 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1ec>)
 8024d8a:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 8024d8e:	4a2d      	ldr	r2, [pc, #180]	; (8024e44 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1f0>)
 8024d90:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 8024d94:	4a2c      	ldr	r2, [pc, #176]	; (8024e48 <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1f4>)
 8024d96:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 8024d9a:	4a2c      	ldr	r2, [pc, #176]	; (8024e4c <_ZNSt11__timepunctIcE23_M_initialize_timepunctEPi+0x1f8>)
 8024d9c:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 8024da0:	bd38      	pop	{r3, r4, r5, pc}
 8024da2:	bf00      	nop
 8024da4:	080309b4 	.word	0x080309b4
 8024da8:	0802f7f8 	.word	0x0802f7f8
 8024dac:	08031a24 	.word	0x08031a24
 8024db0:	0802f807 	.word	0x0802f807
 8024db4:	08031a27 	.word	0x08031a27
 8024db8:	08032cb9 	.word	0x08032cb9
 8024dbc:	08031a2a 	.word	0x08031a2a
 8024dc0:	08031a31 	.word	0x08031a31
 8024dc4:	08031a38 	.word	0x08031a38
 8024dc8:	08031a40 	.word	0x08031a40
 8024dcc:	08031a4a 	.word	0x08031a4a
 8024dd0:	08031a53 	.word	0x08031a53
 8024dd4:	08031a5a 	.word	0x08031a5a
 8024dd8:	08031a63 	.word	0x08031a63
 8024ddc:	08031a67 	.word	0x08031a67
 8024de0:	08031a6b 	.word	0x08031a6b
 8024de4:	08031a6f 	.word	0x08031a6f
 8024de8:	08031a73 	.word	0x08031a73
 8024dec:	08031a77 	.word	0x08031a77
 8024df0:	08031a7b 	.word	0x08031a7b
 8024df4:	08031a7f 	.word	0x08031a7f
 8024df8:	08031aa0 	.word	0x08031aa0
 8024dfc:	08031a87 	.word	0x08031a87
 8024e00:	08031a90 	.word	0x08031a90
 8024e04:	08031aa5 	.word	0x08031aa5
 8024e08:	08031a96 	.word	0x08031a96
 8024e0c:	08031aaa 	.word	0x08031aaa
 8024e10:	08031a9c 	.word	0x08031a9c
 8024e14:	08031ab1 	.word	0x08031ab1
 8024e18:	08031abb 	.word	0x08031abb
 8024e1c:	08031ac3 	.word	0x08031ac3
 8024e20:	08031acc 	.word	0x08031acc
 8024e24:	08031ad5 	.word	0x08031ad5
 8024e28:	08031ad9 	.word	0x08031ad9
 8024e2c:	08031add 	.word	0x08031add
 8024e30:	08031ae1 	.word	0x08031ae1
 8024e34:	08031ae5 	.word	0x08031ae5
 8024e38:	08031ae9 	.word	0x08031ae9
 8024e3c:	08031aed 	.word	0x08031aed
 8024e40:	08031af1 	.word	0x08031af1
 8024e44:	08031af5 	.word	0x08031af5
 8024e48:	08031af9 	.word	0x08031af9
 8024e4c:	08031afd 	.word	0x08031afd

08024e50 <_ZNKSt11__timepunctIwE6_M_putEPwjPKwPK2tm>:
 8024e50:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8024e54:	460c      	mov	r4, r1
 8024e56:	2100      	movs	r1, #0
 8024e58:	4680      	mov	r8, r0
 8024e5a:	4608      	mov	r0, r1
 8024e5c:	461f      	mov	r7, r3
 8024e5e:	4615      	mov	r5, r2
 8024e60:	f000 ff82 	bl	8025d68 <setlocale>
 8024e64:	9001      	str	r0, [sp, #4]
 8024e66:	f7db fa0d 	bl	8000284 <strlen>
 8024e6a:	1c42      	adds	r2, r0, #1
 8024e6c:	4610      	mov	r0, r2
 8024e6e:	9200      	str	r2, [sp, #0]
 8024e70:	f7ff f8b4 	bl	8023fdc <_Znaj>
 8024e74:	e9dd 2100 	ldrd	r2, r1, [sp]
 8024e78:	4606      	mov	r6, r0
 8024e7a:	f001 f841 	bl	8025f00 <memcpy>
 8024e7e:	f8d8 1010 	ldr.w	r1, [r8, #16]
 8024e82:	2000      	movs	r0, #0
 8024e84:	f000 ff70 	bl	8025d68 <setlocale>
 8024e88:	4629      	mov	r1, r5
 8024e8a:	9b08      	ldr	r3, [sp, #32]
 8024e8c:	463a      	mov	r2, r7
 8024e8e:	4620      	mov	r0, r4
 8024e90:	f005 fad6 	bl	802a440 <wcsftime>
 8024e94:	4631      	mov	r1, r6
 8024e96:	4605      	mov	r5, r0
 8024e98:	2000      	movs	r0, #0
 8024e9a:	f000 ff65 	bl	8025d68 <setlocale>
 8024e9e:	4630      	mov	r0, r6
 8024ea0:	f7ff f816 	bl	8023ed0 <_ZdaPv>
 8024ea4:	b905      	cbnz	r5, 8024ea8 <_ZNKSt11__timepunctIwE6_M_putEPwjPKwPK2tm+0x58>
 8024ea6:	6025      	str	r5, [r4, #0]
 8024ea8:	b002      	add	sp, #8
 8024eaa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08024eb0 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi>:
 8024eb0:	b538      	push	{r3, r4, r5, lr}
 8024eb2:	6884      	ldr	r4, [r0, #8]
 8024eb4:	4605      	mov	r5, r0
 8024eb6:	bbc4      	cbnz	r4, 8024f2a <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x7a>
 8024eb8:	20c8      	movs	r0, #200	; 0xc8
 8024eba:	f7e7 f841 	bl	800bf40 <_Znwj>
 8024ebe:	4b50      	ldr	r3, [pc, #320]	; (8025000 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x150>)
 8024ec0:	6044      	str	r4, [r0, #4]
 8024ec2:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8024ec6:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8024eca:	e9c0 4406 	strd	r4, r4, [r0, #24]
 8024ece:	e9c0 4408 	strd	r4, r4, [r0, #32]
 8024ed2:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 8024ed6:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 8024eda:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 8024ede:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 8024ee2:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8024ee6:	e9c0 4414 	strd	r4, r4, [r0, #80]	; 0x50
 8024eea:	e9c0 4416 	strd	r4, r4, [r0, #88]	; 0x58
 8024eee:	e9c0 4418 	strd	r4, r4, [r0, #96]	; 0x60
 8024ef2:	e9c0 441a 	strd	r4, r4, [r0, #104]	; 0x68
 8024ef6:	e9c0 441c 	strd	r4, r4, [r0, #112]	; 0x70
 8024efa:	e9c0 441e 	strd	r4, r4, [r0, #120]	; 0x78
 8024efe:	6003      	str	r3, [r0, #0]
 8024f00:	e9c0 4420 	strd	r4, r4, [r0, #128]	; 0x80
 8024f04:	e9c0 4422 	strd	r4, r4, [r0, #136]	; 0x88
 8024f08:	e9c0 4424 	strd	r4, r4, [r0, #144]	; 0x90
 8024f0c:	e9c0 4426 	strd	r4, r4, [r0, #152]	; 0x98
 8024f10:	e9c0 4428 	strd	r4, r4, [r0, #160]	; 0xa0
 8024f14:	e9c0 442a 	strd	r4, r4, [r0, #168]	; 0xa8
 8024f18:	e9c0 442c 	strd	r4, r4, [r0, #176]	; 0xb0
 8024f1c:	e9c0 442e 	strd	r4, r4, [r0, #184]	; 0xb8
 8024f20:	f8c0 40c0 	str.w	r4, [r0, #192]	; 0xc0
 8024f24:	f880 40c4 	strb.w	r4, [r0, #196]	; 0xc4
 8024f28:	60a8      	str	r0, [r5, #8]
 8024f2a:	68ab      	ldr	r3, [r5, #8]
 8024f2c:	4a35      	ldr	r2, [pc, #212]	; (8025004 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x154>)
 8024f2e:	4936      	ldr	r1, [pc, #216]	; (8025008 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x158>)
 8024f30:	6219      	str	r1, [r3, #32]
 8024f32:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8024f36:	4a35      	ldr	r2, [pc, #212]	; (802500c <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x15c>)
 8024f38:	4935      	ldr	r1, [pc, #212]	; (8025010 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x160>)
 8024f3a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8024f3e:	4a35      	ldr	r2, [pc, #212]	; (8025014 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x164>)
 8024f40:	e9c3 1209 	strd	r1, r2, [r3, #36]	; 0x24
 8024f44:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8024f48:	4a33      	ldr	r2, [pc, #204]	; (8025018 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x168>)
 8024f4a:	62da      	str	r2, [r3, #44]	; 0x2c
 8024f4c:	4a33      	ldr	r2, [pc, #204]	; (802501c <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x16c>)
 8024f4e:	631a      	str	r2, [r3, #48]	; 0x30
 8024f50:	4a33      	ldr	r2, [pc, #204]	; (8025020 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x170>)
 8024f52:	635a      	str	r2, [r3, #52]	; 0x34
 8024f54:	4a33      	ldr	r2, [pc, #204]	; (8025024 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x174>)
 8024f56:	639a      	str	r2, [r3, #56]	; 0x38
 8024f58:	4a33      	ldr	r2, [pc, #204]	; (8025028 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x178>)
 8024f5a:	63da      	str	r2, [r3, #60]	; 0x3c
 8024f5c:	4a33      	ldr	r2, [pc, #204]	; (802502c <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x17c>)
 8024f5e:	641a      	str	r2, [r3, #64]	; 0x40
 8024f60:	4a33      	ldr	r2, [pc, #204]	; (8025030 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x180>)
 8024f62:	645a      	str	r2, [r3, #68]	; 0x44
 8024f64:	4a33      	ldr	r2, [pc, #204]	; (8025034 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x184>)
 8024f66:	649a      	str	r2, [r3, #72]	; 0x48
 8024f68:	4a33      	ldr	r2, [pc, #204]	; (8025038 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x188>)
 8024f6a:	64da      	str	r2, [r3, #76]	; 0x4c
 8024f6c:	4a33      	ldr	r2, [pc, #204]	; (802503c <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x18c>)
 8024f6e:	651a      	str	r2, [r3, #80]	; 0x50
 8024f70:	4a33      	ldr	r2, [pc, #204]	; (8025040 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x190>)
 8024f72:	655a      	str	r2, [r3, #84]	; 0x54
 8024f74:	4a33      	ldr	r2, [pc, #204]	; (8025044 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x194>)
 8024f76:	659a      	str	r2, [r3, #88]	; 0x58
 8024f78:	4a33      	ldr	r2, [pc, #204]	; (8025048 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x198>)
 8024f7a:	65da      	str	r2, [r3, #92]	; 0x5c
 8024f7c:	4a33      	ldr	r2, [pc, #204]	; (802504c <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x19c>)
 8024f7e:	661a      	str	r2, [r3, #96]	; 0x60
 8024f80:	4a33      	ldr	r2, [pc, #204]	; (8025050 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1a0>)
 8024f82:	4934      	ldr	r1, [pc, #208]	; (8025054 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1a4>)
 8024f84:	665a      	str	r2, [r3, #100]	; 0x64
 8024f86:	4a34      	ldr	r2, [pc, #208]	; (8025058 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1a8>)
 8024f88:	669a      	str	r2, [r3, #104]	; 0x68
 8024f8a:	6799      	str	r1, [r3, #120]	; 0x78
 8024f8c:	4a33      	ldr	r2, [pc, #204]	; (802505c <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1ac>)
 8024f8e:	4934      	ldr	r1, [pc, #208]	; (8025060 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1b0>)
 8024f90:	66da      	str	r2, [r3, #108]	; 0x6c
 8024f92:	67d9      	str	r1, [r3, #124]	; 0x7c
 8024f94:	4a33      	ldr	r2, [pc, #204]	; (8025064 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1b4>)
 8024f96:	4934      	ldr	r1, [pc, #208]	; (8025068 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1b8>)
 8024f98:	671a      	str	r2, [r3, #112]	; 0x70
 8024f9a:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
 8024f9e:	4a33      	ldr	r2, [pc, #204]	; (802506c <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1bc>)
 8024fa0:	4933      	ldr	r1, [pc, #204]	; (8025070 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1c0>)
 8024fa2:	675a      	str	r2, [r3, #116]	; 0x74
 8024fa4:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
 8024fa8:	4932      	ldr	r1, [pc, #200]	; (8025074 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1c4>)
 8024faa:	f8c3 1088 	str.w	r1, [r3, #136]	; 0x88
 8024fae:	4932      	ldr	r1, [pc, #200]	; (8025078 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1c8>)
 8024fb0:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
 8024fb4:	4931      	ldr	r1, [pc, #196]	; (802507c <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1cc>)
 8024fb6:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
 8024fba:	4931      	ldr	r1, [pc, #196]	; (8025080 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1d0>)
 8024fbc:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
 8024fc0:	4930      	ldr	r1, [pc, #192]	; (8025084 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1d4>)
 8024fc2:	f8c3 1098 	str.w	r1, [r3, #152]	; 0x98
 8024fc6:	4930      	ldr	r1, [pc, #192]	; (8025088 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1d8>)
 8024fc8:	f8c3 109c 	str.w	r1, [r3, #156]	; 0x9c
 8024fcc:	492f      	ldr	r1, [pc, #188]	; (802508c <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1dc>)
 8024fce:	e9c3 1228 	strd	r1, r2, [r3, #160]	; 0xa0
 8024fd2:	4a2f      	ldr	r2, [pc, #188]	; (8025090 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1e0>)
 8024fd4:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 8024fd8:	4a2e      	ldr	r2, [pc, #184]	; (8025094 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1e4>)
 8024fda:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 8024fde:	4a2e      	ldr	r2, [pc, #184]	; (8025098 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1e8>)
 8024fe0:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 8024fe4:	4a2d      	ldr	r2, [pc, #180]	; (802509c <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1ec>)
 8024fe6:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 8024fea:	4a2d      	ldr	r2, [pc, #180]	; (80250a0 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1f0>)
 8024fec:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 8024ff0:	4a2c      	ldr	r2, [pc, #176]	; (80250a4 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1f4>)
 8024ff2:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 8024ff6:	4a2c      	ldr	r2, [pc, #176]	; (80250a8 <_ZNSt11__timepunctIwE23_M_initialize_timepunctEPi+0x1f8>)
 8024ff8:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 8024ffc:	bd38      	pop	{r3, r4, r5, pc}
 8024ffe:	bf00      	nop
 8025000:	080311ac 	.word	0x080311ac
 8025004:	08031b04 	.word	0x08031b04
 8025008:	08031b4c 	.word	0x08031b4c
 802500c:	08031b28 	.word	0x08031b28
 8025010:	08031b58 	.word	0x08031b58
 8025014:	08033054 	.word	0x08033054
 8025018:	08031b64 	.word	0x08031b64
 802501c:	08031b80 	.word	0x08031b80
 8025020:	08031b9c 	.word	0x08031b9c
 8025024:	08031bbc 	.word	0x08031bbc
 8025028:	08031be4 	.word	0x08031be4
 802502c:	08031c08 	.word	0x08031c08
 8025030:	08031c24 	.word	0x08031c24
 8025034:	08031c48 	.word	0x08031c48
 8025038:	08031c58 	.word	0x08031c58
 802503c:	08031c68 	.word	0x08031c68
 8025040:	08031c78 	.word	0x08031c78
 8025044:	08031c88 	.word	0x08031c88
 8025048:	08031c98 	.word	0x08031c98
 802504c:	08031ca8 	.word	0x08031ca8
 8025050:	08031cb8 	.word	0x08031cb8
 8025054:	08031d3c 	.word	0x08031d3c
 8025058:	08031cd8 	.word	0x08031cd8
 802505c:	08031cfc 	.word	0x08031cfc
 8025060:	08031d50 	.word	0x08031d50
 8025064:	08031d14 	.word	0x08031d14
 8025068:	08031d64 	.word	0x08031d64
 802506c:	08031d2c 	.word	0x08031d2c
 8025070:	08031d80 	.word	0x08031d80
 8025074:	08031da8 	.word	0x08031da8
 8025078:	08031dc8 	.word	0x08031dc8
 802507c:	08031dec 	.word	0x08031dec
 8025080:	08031e10 	.word	0x08031e10
 8025084:	08031e20 	.word	0x08031e20
 8025088:	08031e30 	.word	0x08031e30
 802508c:	08031e40 	.word	0x08031e40
 8025090:	08031e50 	.word	0x08031e50
 8025094:	08031e60 	.word	0x08031e60
 8025098:	08031e70 	.word	0x08031e70
 802509c:	08031e80 	.word	0x08031e80
 80250a0:	08031e90 	.word	0x08031e90
 80250a4:	08031ea0 	.word	0x08031ea0
 80250a8:	08031eb0 	.word	0x08031eb0

080250ac <_ZSt19__throw_ios_failurePKc>:
 80250ac:	b508      	push	{r3, lr}
 80250ae:	f000 f8ba 	bl	8025226 <abort>
	...

080250b4 <_ZNK12_GLOBAL__N_122generic_error_category4nameEv>:
 80250b4:	4800      	ldr	r0, [pc, #0]	; (80250b8 <_ZNK12_GLOBAL__N_122generic_error_category4nameEv+0x4>)
 80250b6:	4770      	bx	lr
 80250b8:	08031ec0 	.word	0x08031ec0

080250bc <_ZNK12_GLOBAL__N_121system_error_category4nameEv>:
 80250bc:	4800      	ldr	r0, [pc, #0]	; (80250c0 <_ZNK12_GLOBAL__N_121system_error_category4nameEv+0x4>)
 80250be:	4770      	bx	lr
 80250c0:	0803247d 	.word	0x0803247d

080250c4 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi>:
 80250c4:	2a74      	cmp	r2, #116	; 0x74
 80250c6:	dc22      	bgt.n	802510e <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x4a>
 80250c8:	2a57      	cmp	r2, #87	; 0x57
 80250ca:	dc0b      	bgt.n	80250e4 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x20>
 80250cc:	2a4d      	cmp	r2, #77	; 0x4d
 80250ce:	dc28      	bgt.n	8025122 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x5e>
 80250d0:	2a3b      	cmp	r2, #59	; 0x3b
 80250d2:	dc0d      	bgt.n	80250f0 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x2c>
 80250d4:	2a24      	cmp	r2, #36	; 0x24
 80250d6:	dc16      	bgt.n	8025106 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x42>
 80250d8:	2a0f      	cmp	r2, #15
 80250da:	dc10      	bgt.n	80250fe <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x3a>
 80250dc:	1e53      	subs	r3, r2, #1
 80250de:	2b0d      	cmp	r3, #13
 80250e0:	d81f      	bhi.n	8025122 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x5e>
 80250e2:	e00c      	b.n	80250fe <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x3a>
 80250e4:	f1a2 0358 	sub.w	r3, r2, #88	; 0x58
 80250e8:	2101      	movs	r1, #1
 80250ea:	4099      	lsls	r1, r3
 80250ec:	4b0e      	ldr	r3, [pc, #56]	; (8025128 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x64>)
 80250ee:	e015      	b.n	802511c <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x58>
 80250f0:	f1a2 013c 	sub.w	r1, r2, #60	; 0x3c
 80250f4:	2301      	movs	r3, #1
 80250f6:	408b      	lsls	r3, r1
 80250f8:	490c      	ldr	r1, [pc, #48]	; (802512c <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x68>)
 80250fa:	420b      	tst	r3, r1
 80250fc:	d011      	beq.n	8025122 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x5e>
 80250fe:	4b0c      	ldr	r3, [pc, #48]	; (8025130 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x6c>)
 8025100:	6002      	str	r2, [r0, #0]
 8025102:	6043      	str	r3, [r0, #4]
 8025104:	4770      	bx	lr
 8025106:	f1a2 032d 	sub.w	r3, r2, #45	; 0x2d
 802510a:	2b01      	cmp	r3, #1
 802510c:	e7e8      	b.n	80250e0 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x1c>
 802510e:	f1a2 0376 	sub.w	r3, r2, #118	; 0x76
 8025112:	2b18      	cmp	r3, #24
 8025114:	d805      	bhi.n	8025122 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x5e>
 8025116:	2101      	movs	r1, #1
 8025118:	4099      	lsls	r1, r3
 802511a:	4b06      	ldr	r3, [pc, #24]	; (8025134 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x70>)
 802511c:	400b      	ands	r3, r1
 802511e:	2b00      	cmp	r3, #0
 8025120:	d1ed      	bne.n	80250fe <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x3a>
 8025122:	4b05      	ldr	r3, [pc, #20]	; (8025138 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x74>)
 8025124:	6002      	str	r2, [r0, #0]
 8025126:	e7ec      	b.n	8025102 <_ZNK12_GLOBAL__N_121system_error_category23default_error_conditionEi+0x3e>
 8025128:	1fbf009d 	.word	0x1fbf009d
 802512c:	0002088f 	.word	0x0002088f
 8025130:	200000b4 	.word	0x200000b4
 8025134:	01f107bf 	.word	0x01f107bf
 8025138:	200000b0 	.word	0x200000b0

0802513c <_ZNKSt3_V214error_category23default_error_conditionEi>:
 802513c:	e9c0 2100 	strd	r2, r1, [r0]
 8025140:	4770      	bx	lr

08025142 <_ZNKSt3_V214error_category10equivalentEiRKSt15error_condition>:
 8025142:	b513      	push	{r0, r1, r4, lr}
 8025144:	6803      	ldr	r3, [r0, #0]
 8025146:	4614      	mov	r4, r2
 8025148:	695b      	ldr	r3, [r3, #20]
 802514a:	460a      	mov	r2, r1
 802514c:	4601      	mov	r1, r0
 802514e:	4668      	mov	r0, sp
 8025150:	4798      	blx	r3
 8025152:	6863      	ldr	r3, [r4, #4]
 8025154:	9a01      	ldr	r2, [sp, #4]
 8025156:	429a      	cmp	r2, r3
 8025158:	d106      	bne.n	8025168 <_ZNKSt3_V214error_category10equivalentEiRKSt15error_condition+0x26>
 802515a:	9800      	ldr	r0, [sp, #0]
 802515c:	6823      	ldr	r3, [r4, #0]
 802515e:	1ac3      	subs	r3, r0, r3
 8025160:	4258      	negs	r0, r3
 8025162:	4158      	adcs	r0, r3
 8025164:	b002      	add	sp, #8
 8025166:	bd10      	pop	{r4, pc}
 8025168:	2000      	movs	r0, #0
 802516a:	e7fb      	b.n	8025164 <_ZNKSt3_V214error_category10equivalentEiRKSt15error_condition+0x22>

0802516c <_ZNKSt3_V214error_category10equivalentERKSt10error_codei>:
 802516c:	684b      	ldr	r3, [r1, #4]
 802516e:	4283      	cmp	r3, r0
 8025170:	d104      	bne.n	802517c <_ZNKSt3_V214error_category10equivalentERKSt10error_codei+0x10>
 8025172:	6808      	ldr	r0, [r1, #0]
 8025174:	1a83      	subs	r3, r0, r2
 8025176:	4258      	negs	r0, r3
 8025178:	4158      	adcs	r0, r3
 802517a:	4770      	bx	lr
 802517c:	2000      	movs	r0, #0
 802517e:	4770      	bx	lr

08025180 <_ZN12_GLOBAL__N_121system_error_categoryD1Ev>:
 8025180:	4770      	bx	lr

08025182 <_ZN12_GLOBAL__N_122generic_error_categoryD1Ev>:
 8025182:	4770      	bx	lr

08025184 <_ZN12_GLOBAL__N_121system_error_categoryD0Ev>:
 8025184:	b510      	push	{r4, lr}
 8025186:	4604      	mov	r4, r0
 8025188:	f7fe fea0 	bl	8023ecc <_ZdlPv>
 802518c:	4620      	mov	r0, r4
 802518e:	bd10      	pop	{r4, pc}

08025190 <_ZN12_GLOBAL__N_122generic_error_categoryD0Ev>:
 8025190:	b510      	push	{r4, lr}
 8025192:	4604      	mov	r4, r0
 8025194:	f7fe fe9a 	bl	8023ecc <_ZdlPv>
 8025198:	4620      	mov	r0, r4
 802519a:	bd10      	pop	{r4, pc}

0802519c <_ZNK12_GLOBAL__N_121system_error_category7messageB5cxx11Ei>:
 802519c:	b513      	push	{r0, r1, r4, lr}
 802519e:	4604      	mov	r4, r0
 80251a0:	4610      	mov	r0, r2
 80251a2:	f002 fb1d 	bl	80277e0 <strerror>
 80251a6:	aa01      	add	r2, sp, #4
 80251a8:	4601      	mov	r1, r0
 80251aa:	4620      	mov	r0, r4
 80251ac:	f7f8 ff08 	bl	801dfc0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80251b0:	4620      	mov	r0, r4
 80251b2:	b002      	add	sp, #8
 80251b4:	bd10      	pop	{r4, pc}

080251b6 <_ZNKSt3_V214error_category10_M_messageB5cxx11Ei>:
 80251b6:	b510      	push	{r4, lr}
 80251b8:	680b      	ldr	r3, [r1, #0]
 80251ba:	b086      	sub	sp, #24
 80251bc:	691b      	ldr	r3, [r3, #16]
 80251be:	4604      	mov	r4, r0
 80251c0:	4668      	mov	r0, sp
 80251c2:	4798      	blx	r3
 80251c4:	e9dd 1200 	ldrd	r1, r2, [sp]
 80251c8:	4620      	mov	r0, r4
 80251ca:	f000 f824 	bl	8025216 <_ZNSt12__cow_stringC1EPKcj>
 80251ce:	4668      	mov	r0, sp
 80251d0:	f7f8 fba4 	bl	801d91c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80251d4:	4620      	mov	r0, r4
 80251d6:	b006      	add	sp, #24
 80251d8:	bd10      	pop	{r4, pc}
	...

080251dc <_GLOBAL__sub_I__ZSt20__throw_system_errori>:
 80251dc:	b508      	push	{r3, lr}
 80251de:	4a06      	ldr	r2, [pc, #24]	; (80251f8 <_GLOBAL__sub_I__ZSt20__throw_system_errori+0x1c>)
 80251e0:	4906      	ldr	r1, [pc, #24]	; (80251fc <_GLOBAL__sub_I__ZSt20__throw_system_errori+0x20>)
 80251e2:	4807      	ldr	r0, [pc, #28]	; (8025200 <_GLOBAL__sub_I__ZSt20__throw_system_errori+0x24>)
 80251e4:	f000 f812 	bl	802520c <__aeabi_atexit>
 80251e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80251ec:	4a02      	ldr	r2, [pc, #8]	; (80251f8 <_GLOBAL__sub_I__ZSt20__throw_system_errori+0x1c>)
 80251ee:	4905      	ldr	r1, [pc, #20]	; (8025204 <_GLOBAL__sub_I__ZSt20__throw_system_errori+0x28>)
 80251f0:	4805      	ldr	r0, [pc, #20]	; (8025208 <_GLOBAL__sub_I__ZSt20__throw_system_errori+0x2c>)
 80251f2:	f000 b80b 	b.w	802520c <__aeabi_atexit>
 80251f6:	bf00      	nop
 80251f8:	20000000 	.word	0x20000000
 80251fc:	08025183 	.word	0x08025183
 8025200:	200000b4 	.word	0x200000b4
 8025204:	08025181 	.word	0x08025181
 8025208:	200000b0 	.word	0x200000b0

0802520c <__aeabi_atexit>:
 802520c:	460b      	mov	r3, r1
 802520e:	4601      	mov	r1, r0
 8025210:	4618      	mov	r0, r3
 8025212:	f000 b85d 	b.w	80252d0 <__cxa_atexit>

08025216 <_ZNSt12__cow_stringC1EPKcj>:
 8025216:	b513      	push	{r0, r1, r4, lr}
 8025218:	ab01      	add	r3, sp, #4
 802521a:	4604      	mov	r4, r0
 802521c:	f7eb f94e 	bl	80104bc <_ZNSsC1EPKcjRKSaIcE>
 8025220:	4620      	mov	r0, r4
 8025222:	b002      	add	sp, #8
 8025224:	bd10      	pop	{r4, pc}

08025226 <abort>:
 8025226:	b508      	push	{r3, lr}
 8025228:	2006      	movs	r0, #6
 802522a:	f002 f83b 	bl	80272a4 <raise>
 802522e:	2001      	movs	r0, #1
 8025230:	f7dd febc 	bl	8002fac <_exit>

08025234 <atoi>:
 8025234:	220a      	movs	r2, #10
 8025236:	2100      	movs	r1, #0
 8025238:	f003 bf86 	b.w	8029148 <strtol>

0802523c <btowc>:
 802523c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802523e:	1c43      	adds	r3, r0, #1
 8025240:	b087      	sub	sp, #28
 8025242:	d103      	bne.n	802524c <btowc+0x10>
 8025244:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8025248:	b007      	add	sp, #28
 802524a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802524c:	4d1c      	ldr	r5, [pc, #112]	; (80252c0 <btowc+0x84>)
 802524e:	f88d 000b 	strb.w	r0, [sp, #11]
 8025252:	ae04      	add	r6, sp, #16
 8025254:	2208      	movs	r2, #8
 8025256:	2100      	movs	r1, #0
 8025258:	4630      	mov	r0, r6
 802525a:	f000 fe79 	bl	8025f50 <memset>
 802525e:	682f      	ldr	r7, [r5, #0]
 8025260:	6dbc      	ldr	r4, [r7, #88]	; 0x58
 8025262:	b9fc      	cbnz	r4, 80252a4 <btowc+0x68>
 8025264:	2050      	movs	r0, #80	; 0x50
 8025266:	f000 fdf1 	bl	8025e4c <malloc>
 802526a:	4602      	mov	r2, r0
 802526c:	65b8      	str	r0, [r7, #88]	; 0x58
 802526e:	b920      	cbnz	r0, 802527a <btowc+0x3e>
 8025270:	4b14      	ldr	r3, [pc, #80]	; (80252c4 <btowc+0x88>)
 8025272:	4815      	ldr	r0, [pc, #84]	; (80252c8 <btowc+0x8c>)
 8025274:	2118      	movs	r1, #24
 8025276:	f005 fb01 	bl	802a87c <__assert_func>
 802527a:	682b      	ldr	r3, [r5, #0]
 802527c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 802527e:	e9c3 4400 	strd	r4, r4, [r3]
 8025282:	e9c3 4402 	strd	r4, r4, [r3, #8]
 8025286:	e9c3 4404 	strd	r4, r4, [r3, #16]
 802528a:	e9c3 440a 	strd	r4, r4, [r3, #40]	; 0x28
 802528e:	e9c3 440c 	strd	r4, r4, [r3, #48]	; 0x30
 8025292:	e9c3 440e 	strd	r4, r4, [r3, #56]	; 0x38
 8025296:	e9c3 4410 	strd	r4, r4, [r3, #64]	; 0x40
 802529a:	e9c3 4412 	strd	r4, r4, [r3, #72]	; 0x48
 802529e:	619c      	str	r4, [r3, #24]
 80252a0:	771c      	strb	r4, [r3, #28]
 80252a2:	625c      	str	r4, [r3, #36]	; 0x24
 80252a4:	4b09      	ldr	r3, [pc, #36]	; (80252cc <btowc+0x90>)
 80252a6:	9600      	str	r6, [sp, #0]
 80252a8:	f8d3 40e4 	ldr.w	r4, [r3, #228]	; 0xe4
 80252ac:	6828      	ldr	r0, [r5, #0]
 80252ae:	2301      	movs	r3, #1
 80252b0:	f10d 020b 	add.w	r2, sp, #11
 80252b4:	a903      	add	r1, sp, #12
 80252b6:	47a0      	blx	r4
 80252b8:	2801      	cmp	r0, #1
 80252ba:	d8c3      	bhi.n	8025244 <btowc+0x8>
 80252bc:	9803      	ldr	r0, [sp, #12]
 80252be:	e7c3      	b.n	8025248 <btowc+0xc>
 80252c0:	200000bc 	.word	0x200000bc
 80252c4:	08031fa4 	.word	0x08031fa4
 80252c8:	08031fbb 	.word	0x08031fbb
 80252cc:	20000120 	.word	0x20000120

080252d0 <__cxa_atexit>:
 80252d0:	b510      	push	{r4, lr}
 80252d2:	4c05      	ldr	r4, [pc, #20]	; (80252e8 <__cxa_atexit+0x18>)
 80252d4:	4613      	mov	r3, r2
 80252d6:	b12c      	cbz	r4, 80252e4 <__cxa_atexit+0x14>
 80252d8:	460a      	mov	r2, r1
 80252da:	4601      	mov	r1, r0
 80252dc:	2002      	movs	r0, #2
 80252de:	f3af 8000 	nop.w
 80252e2:	bd10      	pop	{r4, pc}
 80252e4:	4620      	mov	r0, r4
 80252e6:	e7fc      	b.n	80252e2 <__cxa_atexit+0x12>
 80252e8:	00000000 	.word	0x00000000

080252ec <__errno>:
 80252ec:	4b01      	ldr	r3, [pc, #4]	; (80252f4 <__errno+0x8>)
 80252ee:	6818      	ldr	r0, [r3, #0]
 80252f0:	4770      	bx	lr
 80252f2:	bf00      	nop
 80252f4:	200000bc 	.word	0x200000bc

080252f8 <__sflush_r>:
 80252f8:	898a      	ldrh	r2, [r1, #12]
 80252fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80252fe:	4605      	mov	r5, r0
 8025300:	0710      	lsls	r0, r2, #28
 8025302:	460c      	mov	r4, r1
 8025304:	d458      	bmi.n	80253b8 <__sflush_r+0xc0>
 8025306:	684b      	ldr	r3, [r1, #4]
 8025308:	2b00      	cmp	r3, #0
 802530a:	dc05      	bgt.n	8025318 <__sflush_r+0x20>
 802530c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802530e:	2b00      	cmp	r3, #0
 8025310:	dc02      	bgt.n	8025318 <__sflush_r+0x20>
 8025312:	2000      	movs	r0, #0
 8025314:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025318:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802531a:	2e00      	cmp	r6, #0
 802531c:	d0f9      	beq.n	8025312 <__sflush_r+0x1a>
 802531e:	2300      	movs	r3, #0
 8025320:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8025324:	682f      	ldr	r7, [r5, #0]
 8025326:	602b      	str	r3, [r5, #0]
 8025328:	d032      	beq.n	8025390 <__sflush_r+0x98>
 802532a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802532c:	89a3      	ldrh	r3, [r4, #12]
 802532e:	075a      	lsls	r2, r3, #29
 8025330:	d505      	bpl.n	802533e <__sflush_r+0x46>
 8025332:	6863      	ldr	r3, [r4, #4]
 8025334:	1ac0      	subs	r0, r0, r3
 8025336:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8025338:	b10b      	cbz	r3, 802533e <__sflush_r+0x46>
 802533a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802533c:	1ac0      	subs	r0, r0, r3
 802533e:	2300      	movs	r3, #0
 8025340:	4602      	mov	r2, r0
 8025342:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8025344:	6a21      	ldr	r1, [r4, #32]
 8025346:	4628      	mov	r0, r5
 8025348:	47b0      	blx	r6
 802534a:	1c43      	adds	r3, r0, #1
 802534c:	89a3      	ldrh	r3, [r4, #12]
 802534e:	d106      	bne.n	802535e <__sflush_r+0x66>
 8025350:	6829      	ldr	r1, [r5, #0]
 8025352:	291d      	cmp	r1, #29
 8025354:	d82c      	bhi.n	80253b0 <__sflush_r+0xb8>
 8025356:	4a2a      	ldr	r2, [pc, #168]	; (8025400 <__sflush_r+0x108>)
 8025358:	40ca      	lsrs	r2, r1
 802535a:	07d6      	lsls	r6, r2, #31
 802535c:	d528      	bpl.n	80253b0 <__sflush_r+0xb8>
 802535e:	2200      	movs	r2, #0
 8025360:	6062      	str	r2, [r4, #4]
 8025362:	04d9      	lsls	r1, r3, #19
 8025364:	6922      	ldr	r2, [r4, #16]
 8025366:	6022      	str	r2, [r4, #0]
 8025368:	d504      	bpl.n	8025374 <__sflush_r+0x7c>
 802536a:	1c42      	adds	r2, r0, #1
 802536c:	d101      	bne.n	8025372 <__sflush_r+0x7a>
 802536e:	682b      	ldr	r3, [r5, #0]
 8025370:	b903      	cbnz	r3, 8025374 <__sflush_r+0x7c>
 8025372:	6560      	str	r0, [r4, #84]	; 0x54
 8025374:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8025376:	602f      	str	r7, [r5, #0]
 8025378:	2900      	cmp	r1, #0
 802537a:	d0ca      	beq.n	8025312 <__sflush_r+0x1a>
 802537c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8025380:	4299      	cmp	r1, r3
 8025382:	d002      	beq.n	802538a <__sflush_r+0x92>
 8025384:	4628      	mov	r0, r5
 8025386:	f000 fdeb 	bl	8025f60 <_free_r>
 802538a:	2000      	movs	r0, #0
 802538c:	6360      	str	r0, [r4, #52]	; 0x34
 802538e:	e7c1      	b.n	8025314 <__sflush_r+0x1c>
 8025390:	6a21      	ldr	r1, [r4, #32]
 8025392:	2301      	movs	r3, #1
 8025394:	4628      	mov	r0, r5
 8025396:	47b0      	blx	r6
 8025398:	1c41      	adds	r1, r0, #1
 802539a:	d1c7      	bne.n	802532c <__sflush_r+0x34>
 802539c:	682b      	ldr	r3, [r5, #0]
 802539e:	2b00      	cmp	r3, #0
 80253a0:	d0c4      	beq.n	802532c <__sflush_r+0x34>
 80253a2:	2b1d      	cmp	r3, #29
 80253a4:	d001      	beq.n	80253aa <__sflush_r+0xb2>
 80253a6:	2b16      	cmp	r3, #22
 80253a8:	d101      	bne.n	80253ae <__sflush_r+0xb6>
 80253aa:	602f      	str	r7, [r5, #0]
 80253ac:	e7b1      	b.n	8025312 <__sflush_r+0x1a>
 80253ae:	89a3      	ldrh	r3, [r4, #12]
 80253b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80253b4:	81a3      	strh	r3, [r4, #12]
 80253b6:	e7ad      	b.n	8025314 <__sflush_r+0x1c>
 80253b8:	690f      	ldr	r7, [r1, #16]
 80253ba:	2f00      	cmp	r7, #0
 80253bc:	d0a9      	beq.n	8025312 <__sflush_r+0x1a>
 80253be:	0793      	lsls	r3, r2, #30
 80253c0:	680e      	ldr	r6, [r1, #0]
 80253c2:	bf08      	it	eq
 80253c4:	694b      	ldreq	r3, [r1, #20]
 80253c6:	600f      	str	r7, [r1, #0]
 80253c8:	bf18      	it	ne
 80253ca:	2300      	movne	r3, #0
 80253cc:	eba6 0807 	sub.w	r8, r6, r7
 80253d0:	608b      	str	r3, [r1, #8]
 80253d2:	f1b8 0f00 	cmp.w	r8, #0
 80253d6:	dd9c      	ble.n	8025312 <__sflush_r+0x1a>
 80253d8:	6a21      	ldr	r1, [r4, #32]
 80253da:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80253dc:	4643      	mov	r3, r8
 80253de:	463a      	mov	r2, r7
 80253e0:	4628      	mov	r0, r5
 80253e2:	47b0      	blx	r6
 80253e4:	2800      	cmp	r0, #0
 80253e6:	dc06      	bgt.n	80253f6 <__sflush_r+0xfe>
 80253e8:	89a3      	ldrh	r3, [r4, #12]
 80253ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80253ee:	81a3      	strh	r3, [r4, #12]
 80253f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80253f4:	e78e      	b.n	8025314 <__sflush_r+0x1c>
 80253f6:	4407      	add	r7, r0
 80253f8:	eba8 0800 	sub.w	r8, r8, r0
 80253fc:	e7e9      	b.n	80253d2 <__sflush_r+0xda>
 80253fe:	bf00      	nop
 8025400:	20400001 	.word	0x20400001

08025404 <_fflush_r>:
 8025404:	b538      	push	{r3, r4, r5, lr}
 8025406:	690b      	ldr	r3, [r1, #16]
 8025408:	4605      	mov	r5, r0
 802540a:	460c      	mov	r4, r1
 802540c:	b913      	cbnz	r3, 8025414 <_fflush_r+0x10>
 802540e:	2500      	movs	r5, #0
 8025410:	4628      	mov	r0, r5
 8025412:	bd38      	pop	{r3, r4, r5, pc}
 8025414:	b118      	cbz	r0, 802541e <_fflush_r+0x1a>
 8025416:	6983      	ldr	r3, [r0, #24]
 8025418:	b90b      	cbnz	r3, 802541e <_fflush_r+0x1a>
 802541a:	f000 f899 	bl	8025550 <__sinit>
 802541e:	4b14      	ldr	r3, [pc, #80]	; (8025470 <_fflush_r+0x6c>)
 8025420:	429c      	cmp	r4, r3
 8025422:	d11b      	bne.n	802545c <_fflush_r+0x58>
 8025424:	686c      	ldr	r4, [r5, #4]
 8025426:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802542a:	2b00      	cmp	r3, #0
 802542c:	d0ef      	beq.n	802540e <_fflush_r+0xa>
 802542e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8025430:	07d0      	lsls	r0, r2, #31
 8025432:	d404      	bmi.n	802543e <_fflush_r+0x3a>
 8025434:	0599      	lsls	r1, r3, #22
 8025436:	d402      	bmi.n	802543e <_fflush_r+0x3a>
 8025438:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802543a:	f000 fc9f 	bl	8025d7c <__retarget_lock_acquire_recursive>
 802543e:	4628      	mov	r0, r5
 8025440:	4621      	mov	r1, r4
 8025442:	f7ff ff59 	bl	80252f8 <__sflush_r>
 8025446:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025448:	07da      	lsls	r2, r3, #31
 802544a:	4605      	mov	r5, r0
 802544c:	d4e0      	bmi.n	8025410 <_fflush_r+0xc>
 802544e:	89a3      	ldrh	r3, [r4, #12]
 8025450:	059b      	lsls	r3, r3, #22
 8025452:	d4dd      	bmi.n	8025410 <_fflush_r+0xc>
 8025454:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025456:	f000 fc93 	bl	8025d80 <__retarget_lock_release_recursive>
 802545a:	e7d9      	b.n	8025410 <_fflush_r+0xc>
 802545c:	4b05      	ldr	r3, [pc, #20]	; (8025474 <_fflush_r+0x70>)
 802545e:	429c      	cmp	r4, r3
 8025460:	d101      	bne.n	8025466 <_fflush_r+0x62>
 8025462:	68ac      	ldr	r4, [r5, #8]
 8025464:	e7df      	b.n	8025426 <_fflush_r+0x22>
 8025466:	4b04      	ldr	r3, [pc, #16]	; (8025478 <_fflush_r+0x74>)
 8025468:	429c      	cmp	r4, r3
 802546a:	bf08      	it	eq
 802546c:	68ec      	ldreq	r4, [r5, #12]
 802546e:	e7da      	b.n	8025426 <_fflush_r+0x22>
 8025470:	08032138 	.word	0x08032138
 8025474:	08032158 	.word	0x08032158
 8025478:	08032118 	.word	0x08032118

0802547c <fflush>:
 802547c:	4601      	mov	r1, r0
 802547e:	b920      	cbnz	r0, 802548a <fflush+0xe>
 8025480:	4b04      	ldr	r3, [pc, #16]	; (8025494 <fflush+0x18>)
 8025482:	4905      	ldr	r1, [pc, #20]	; (8025498 <fflush+0x1c>)
 8025484:	6818      	ldr	r0, [r3, #0]
 8025486:	f000 baba 	b.w	80259fe <_fwalk_reent>
 802548a:	4b04      	ldr	r3, [pc, #16]	; (802549c <fflush+0x20>)
 802548c:	6818      	ldr	r0, [r3, #0]
 802548e:	f7ff bfb9 	b.w	8025404 <_fflush_r>
 8025492:	bf00      	nop
 8025494:	08032178 	.word	0x08032178
 8025498:	08025405 	.word	0x08025405
 802549c:	200000bc 	.word	0x200000bc

080254a0 <std>:
 80254a0:	2300      	movs	r3, #0
 80254a2:	b510      	push	{r4, lr}
 80254a4:	4604      	mov	r4, r0
 80254a6:	e9c0 3300 	strd	r3, r3, [r0]
 80254aa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80254ae:	6083      	str	r3, [r0, #8]
 80254b0:	8181      	strh	r1, [r0, #12]
 80254b2:	6643      	str	r3, [r0, #100]	; 0x64
 80254b4:	81c2      	strh	r2, [r0, #14]
 80254b6:	6183      	str	r3, [r0, #24]
 80254b8:	4619      	mov	r1, r3
 80254ba:	2208      	movs	r2, #8
 80254bc:	305c      	adds	r0, #92	; 0x5c
 80254be:	f000 fd47 	bl	8025f50 <memset>
 80254c2:	4b05      	ldr	r3, [pc, #20]	; (80254d8 <std+0x38>)
 80254c4:	6263      	str	r3, [r4, #36]	; 0x24
 80254c6:	4b05      	ldr	r3, [pc, #20]	; (80254dc <std+0x3c>)
 80254c8:	62a3      	str	r3, [r4, #40]	; 0x28
 80254ca:	4b05      	ldr	r3, [pc, #20]	; (80254e0 <std+0x40>)
 80254cc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80254ce:	4b05      	ldr	r3, [pc, #20]	; (80254e4 <std+0x44>)
 80254d0:	6224      	str	r4, [r4, #32]
 80254d2:	6323      	str	r3, [r4, #48]	; 0x30
 80254d4:	bd10      	pop	{r4, pc}
 80254d6:	bf00      	nop
 80254d8:	08027375 	.word	0x08027375
 80254dc:	0802739b 	.word	0x0802739b
 80254e0:	080273d3 	.word	0x080273d3
 80254e4:	080273f7 	.word	0x080273f7

080254e8 <_cleanup_r>:
 80254e8:	4901      	ldr	r1, [pc, #4]	; (80254f0 <_cleanup_r+0x8>)
 80254ea:	f000 ba88 	b.w	80259fe <_fwalk_reent>
 80254ee:	bf00      	nop
 80254f0:	08025405 	.word	0x08025405

080254f4 <__sfmoreglue>:
 80254f4:	b570      	push	{r4, r5, r6, lr}
 80254f6:	2268      	movs	r2, #104	; 0x68
 80254f8:	1e4d      	subs	r5, r1, #1
 80254fa:	4355      	muls	r5, r2
 80254fc:	460e      	mov	r6, r1
 80254fe:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8025502:	f000 fd99 	bl	8026038 <_malloc_r>
 8025506:	4604      	mov	r4, r0
 8025508:	b140      	cbz	r0, 802551c <__sfmoreglue+0x28>
 802550a:	2100      	movs	r1, #0
 802550c:	e9c0 1600 	strd	r1, r6, [r0]
 8025510:	300c      	adds	r0, #12
 8025512:	60a0      	str	r0, [r4, #8]
 8025514:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8025518:	f000 fd1a 	bl	8025f50 <memset>
 802551c:	4620      	mov	r0, r4
 802551e:	bd70      	pop	{r4, r5, r6, pc}

08025520 <__sfp_lock_acquire>:
 8025520:	4801      	ldr	r0, [pc, #4]	; (8025528 <__sfp_lock_acquire+0x8>)
 8025522:	f000 bc2b 	b.w	8025d7c <__retarget_lock_acquire_recursive>
 8025526:	bf00      	nop
 8025528:	200042c6 	.word	0x200042c6

0802552c <__sfp_lock_release>:
 802552c:	4801      	ldr	r0, [pc, #4]	; (8025534 <__sfp_lock_release+0x8>)
 802552e:	f000 bc27 	b.w	8025d80 <__retarget_lock_release_recursive>
 8025532:	bf00      	nop
 8025534:	200042c6 	.word	0x200042c6

08025538 <__sinit_lock_acquire>:
 8025538:	4801      	ldr	r0, [pc, #4]	; (8025540 <__sinit_lock_acquire+0x8>)
 802553a:	f000 bc1f 	b.w	8025d7c <__retarget_lock_acquire_recursive>
 802553e:	bf00      	nop
 8025540:	200042c7 	.word	0x200042c7

08025544 <__sinit_lock_release>:
 8025544:	4801      	ldr	r0, [pc, #4]	; (802554c <__sinit_lock_release+0x8>)
 8025546:	f000 bc1b 	b.w	8025d80 <__retarget_lock_release_recursive>
 802554a:	bf00      	nop
 802554c:	200042c7 	.word	0x200042c7

08025550 <__sinit>:
 8025550:	b510      	push	{r4, lr}
 8025552:	4604      	mov	r4, r0
 8025554:	f7ff fff0 	bl	8025538 <__sinit_lock_acquire>
 8025558:	69a3      	ldr	r3, [r4, #24]
 802555a:	b11b      	cbz	r3, 8025564 <__sinit+0x14>
 802555c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025560:	f7ff bff0 	b.w	8025544 <__sinit_lock_release>
 8025564:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8025568:	6523      	str	r3, [r4, #80]	; 0x50
 802556a:	4b13      	ldr	r3, [pc, #76]	; (80255b8 <__sinit+0x68>)
 802556c:	4a13      	ldr	r2, [pc, #76]	; (80255bc <__sinit+0x6c>)
 802556e:	681b      	ldr	r3, [r3, #0]
 8025570:	62a2      	str	r2, [r4, #40]	; 0x28
 8025572:	42a3      	cmp	r3, r4
 8025574:	bf04      	itt	eq
 8025576:	2301      	moveq	r3, #1
 8025578:	61a3      	streq	r3, [r4, #24]
 802557a:	4620      	mov	r0, r4
 802557c:	f000 f820 	bl	80255c0 <__sfp>
 8025580:	6060      	str	r0, [r4, #4]
 8025582:	4620      	mov	r0, r4
 8025584:	f000 f81c 	bl	80255c0 <__sfp>
 8025588:	60a0      	str	r0, [r4, #8]
 802558a:	4620      	mov	r0, r4
 802558c:	f000 f818 	bl	80255c0 <__sfp>
 8025590:	2200      	movs	r2, #0
 8025592:	60e0      	str	r0, [r4, #12]
 8025594:	2104      	movs	r1, #4
 8025596:	6860      	ldr	r0, [r4, #4]
 8025598:	f7ff ff82 	bl	80254a0 <std>
 802559c:	68a0      	ldr	r0, [r4, #8]
 802559e:	2201      	movs	r2, #1
 80255a0:	2109      	movs	r1, #9
 80255a2:	f7ff ff7d 	bl	80254a0 <std>
 80255a6:	68e0      	ldr	r0, [r4, #12]
 80255a8:	2202      	movs	r2, #2
 80255aa:	2112      	movs	r1, #18
 80255ac:	f7ff ff78 	bl	80254a0 <std>
 80255b0:	2301      	movs	r3, #1
 80255b2:	61a3      	str	r3, [r4, #24]
 80255b4:	e7d2      	b.n	802555c <__sinit+0xc>
 80255b6:	bf00      	nop
 80255b8:	08032178 	.word	0x08032178
 80255bc:	080254e9 	.word	0x080254e9

080255c0 <__sfp>:
 80255c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80255c2:	4607      	mov	r7, r0
 80255c4:	f7ff ffac 	bl	8025520 <__sfp_lock_acquire>
 80255c8:	4b1e      	ldr	r3, [pc, #120]	; (8025644 <__sfp+0x84>)
 80255ca:	681e      	ldr	r6, [r3, #0]
 80255cc:	69b3      	ldr	r3, [r6, #24]
 80255ce:	b913      	cbnz	r3, 80255d6 <__sfp+0x16>
 80255d0:	4630      	mov	r0, r6
 80255d2:	f7ff ffbd 	bl	8025550 <__sinit>
 80255d6:	3648      	adds	r6, #72	; 0x48
 80255d8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80255dc:	3b01      	subs	r3, #1
 80255de:	d503      	bpl.n	80255e8 <__sfp+0x28>
 80255e0:	6833      	ldr	r3, [r6, #0]
 80255e2:	b30b      	cbz	r3, 8025628 <__sfp+0x68>
 80255e4:	6836      	ldr	r6, [r6, #0]
 80255e6:	e7f7      	b.n	80255d8 <__sfp+0x18>
 80255e8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80255ec:	b9d5      	cbnz	r5, 8025624 <__sfp+0x64>
 80255ee:	4b16      	ldr	r3, [pc, #88]	; (8025648 <__sfp+0x88>)
 80255f0:	60e3      	str	r3, [r4, #12]
 80255f2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80255f6:	6665      	str	r5, [r4, #100]	; 0x64
 80255f8:	f000 fbbe 	bl	8025d78 <__retarget_lock_init_recursive>
 80255fc:	f7ff ff96 	bl	802552c <__sfp_lock_release>
 8025600:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8025604:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8025608:	6025      	str	r5, [r4, #0]
 802560a:	61a5      	str	r5, [r4, #24]
 802560c:	2208      	movs	r2, #8
 802560e:	4629      	mov	r1, r5
 8025610:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8025614:	f000 fc9c 	bl	8025f50 <memset>
 8025618:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802561c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8025620:	4620      	mov	r0, r4
 8025622:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025624:	3468      	adds	r4, #104	; 0x68
 8025626:	e7d9      	b.n	80255dc <__sfp+0x1c>
 8025628:	2104      	movs	r1, #4
 802562a:	4638      	mov	r0, r7
 802562c:	f7ff ff62 	bl	80254f4 <__sfmoreglue>
 8025630:	4604      	mov	r4, r0
 8025632:	6030      	str	r0, [r6, #0]
 8025634:	2800      	cmp	r0, #0
 8025636:	d1d5      	bne.n	80255e4 <__sfp+0x24>
 8025638:	f7ff ff78 	bl	802552c <__sfp_lock_release>
 802563c:	230c      	movs	r3, #12
 802563e:	603b      	str	r3, [r7, #0]
 8025640:	e7ee      	b.n	8025620 <__sfp+0x60>
 8025642:	bf00      	nop
 8025644:	08032178 	.word	0x08032178
 8025648:	ffff0001 	.word	0xffff0001

0802564c <_fread_r>:
 802564c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025650:	461f      	mov	r7, r3
 8025652:	4613      	mov	r3, r2
 8025654:	437b      	muls	r3, r7
 8025656:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8025658:	4606      	mov	r6, r0
 802565a:	468a      	mov	sl, r1
 802565c:	4691      	mov	r9, r2
 802565e:	469b      	mov	fp, r3
 8025660:	d05f      	beq.n	8025722 <_fread_r+0xd6>
 8025662:	b118      	cbz	r0, 802566c <_fread_r+0x20>
 8025664:	6983      	ldr	r3, [r0, #24]
 8025666:	b90b      	cbnz	r3, 802566c <_fread_r+0x20>
 8025668:	f7ff ff72 	bl	8025550 <__sinit>
 802566c:	4b2e      	ldr	r3, [pc, #184]	; (8025728 <_fread_r+0xdc>)
 802566e:	429c      	cmp	r4, r3
 8025670:	d128      	bne.n	80256c4 <_fread_r+0x78>
 8025672:	6874      	ldr	r4, [r6, #4]
 8025674:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025676:	07db      	lsls	r3, r3, #31
 8025678:	d405      	bmi.n	8025686 <_fread_r+0x3a>
 802567a:	89a3      	ldrh	r3, [r4, #12]
 802567c:	059d      	lsls	r5, r3, #22
 802567e:	d402      	bmi.n	8025686 <_fread_r+0x3a>
 8025680:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025682:	f000 fb7b 	bl	8025d7c <__retarget_lock_acquire_recursive>
 8025686:	6863      	ldr	r3, [r4, #4]
 8025688:	2b00      	cmp	r3, #0
 802568a:	da01      	bge.n	8025690 <_fread_r+0x44>
 802568c:	2300      	movs	r3, #0
 802568e:	6063      	str	r3, [r4, #4]
 8025690:	46d8      	mov	r8, fp
 8025692:	e9d4 1500 	ldrd	r1, r5, [r4]
 8025696:	4545      	cmp	r5, r8
 8025698:	d31e      	bcc.n	80256d8 <_fread_r+0x8c>
 802569a:	4642      	mov	r2, r8
 802569c:	4650      	mov	r0, sl
 802569e:	f000 fc2f 	bl	8025f00 <memcpy>
 80256a2:	6862      	ldr	r2, [r4, #4]
 80256a4:	6821      	ldr	r1, [r4, #0]
 80256a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80256a8:	eba2 0208 	sub.w	r2, r2, r8
 80256ac:	6062      	str	r2, [r4, #4]
 80256ae:	4441      	add	r1, r8
 80256b0:	07da      	lsls	r2, r3, #31
 80256b2:	6021      	str	r1, [r4, #0]
 80256b4:	d42f      	bmi.n	8025716 <_fread_r+0xca>
 80256b6:	89a3      	ldrh	r3, [r4, #12]
 80256b8:	059b      	lsls	r3, r3, #22
 80256ba:	d42c      	bmi.n	8025716 <_fread_r+0xca>
 80256bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80256be:	f000 fb5f 	bl	8025d80 <__retarget_lock_release_recursive>
 80256c2:	e028      	b.n	8025716 <_fread_r+0xca>
 80256c4:	4b19      	ldr	r3, [pc, #100]	; (802572c <_fread_r+0xe0>)
 80256c6:	429c      	cmp	r4, r3
 80256c8:	d101      	bne.n	80256ce <_fread_r+0x82>
 80256ca:	68b4      	ldr	r4, [r6, #8]
 80256cc:	e7d2      	b.n	8025674 <_fread_r+0x28>
 80256ce:	4b18      	ldr	r3, [pc, #96]	; (8025730 <_fread_r+0xe4>)
 80256d0:	429c      	cmp	r4, r3
 80256d2:	bf08      	it	eq
 80256d4:	68f4      	ldreq	r4, [r6, #12]
 80256d6:	e7cd      	b.n	8025674 <_fread_r+0x28>
 80256d8:	462a      	mov	r2, r5
 80256da:	4650      	mov	r0, sl
 80256dc:	f000 fc10 	bl	8025f00 <memcpy>
 80256e0:	6823      	ldr	r3, [r4, #0]
 80256e2:	442b      	add	r3, r5
 80256e4:	6023      	str	r3, [r4, #0]
 80256e6:	4621      	mov	r1, r4
 80256e8:	eba8 0305 	sub.w	r3, r8, r5
 80256ec:	4630      	mov	r0, r6
 80256ee:	9301      	str	r3, [sp, #4]
 80256f0:	f001 fce4 	bl	80270bc <__srefill_r>
 80256f4:	44aa      	add	sl, r5
 80256f6:	9b01      	ldr	r3, [sp, #4]
 80256f8:	b188      	cbz	r0, 802571e <_fread_r+0xd2>
 80256fa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80256fc:	07d8      	lsls	r0, r3, #31
 80256fe:	d405      	bmi.n	802570c <_fread_r+0xc0>
 8025700:	89a3      	ldrh	r3, [r4, #12]
 8025702:	0599      	lsls	r1, r3, #22
 8025704:	d402      	bmi.n	802570c <_fread_r+0xc0>
 8025706:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025708:	f000 fb3a 	bl	8025d80 <__retarget_lock_release_recursive>
 802570c:	445d      	add	r5, fp
 802570e:	eba5 0308 	sub.w	r3, r5, r8
 8025712:	fbb3 f7f9 	udiv	r7, r3, r9
 8025716:	4638      	mov	r0, r7
 8025718:	b003      	add	sp, #12
 802571a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802571e:	4698      	mov	r8, r3
 8025720:	e7b7      	b.n	8025692 <_fread_r+0x46>
 8025722:	461f      	mov	r7, r3
 8025724:	e7f7      	b.n	8025716 <_fread_r+0xca>
 8025726:	bf00      	nop
 8025728:	08032138 	.word	0x08032138
 802572c:	08032158 	.word	0x08032158
 8025730:	08032118 	.word	0x08032118

08025734 <fread>:
 8025734:	b507      	push	{r0, r1, r2, lr}
 8025736:	9300      	str	r3, [sp, #0]
 8025738:	4613      	mov	r3, r2
 802573a:	460a      	mov	r2, r1
 802573c:	4601      	mov	r1, r0
 802573e:	4803      	ldr	r0, [pc, #12]	; (802574c <fread+0x18>)
 8025740:	6800      	ldr	r0, [r0, #0]
 8025742:	f7ff ff83 	bl	802564c <_fread_r>
 8025746:	b003      	add	sp, #12
 8025748:	f85d fb04 	ldr.w	pc, [sp], #4
 802574c:	200000bc 	.word	0x200000bc

08025750 <fseek>:
 8025750:	4613      	mov	r3, r2
 8025752:	460a      	mov	r2, r1
 8025754:	4601      	mov	r1, r0
 8025756:	4802      	ldr	r0, [pc, #8]	; (8025760 <fseek+0x10>)
 8025758:	6800      	ldr	r0, [r0, #0]
 802575a:	f000 b803 	b.w	8025764 <_fseeko_r>
 802575e:	bf00      	nop
 8025760:	200000bc 	.word	0x200000bc

08025764 <_fseeko_r>:
 8025764:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025768:	460c      	mov	r4, r1
 802576a:	4617      	mov	r7, r2
 802576c:	461d      	mov	r5, r3
 802576e:	4606      	mov	r6, r0
 8025770:	b118      	cbz	r0, 802577a <_fseeko_r+0x16>
 8025772:	6983      	ldr	r3, [r0, #24]
 8025774:	b90b      	cbnz	r3, 802577a <_fseeko_r+0x16>
 8025776:	f7ff feeb 	bl	8025550 <__sinit>
 802577a:	4b51      	ldr	r3, [pc, #324]	; (80258c0 <_fseeko_r+0x15c>)
 802577c:	429c      	cmp	r4, r3
 802577e:	d122      	bne.n	80257c6 <_fseeko_r+0x62>
 8025780:	6874      	ldr	r4, [r6, #4]
 8025782:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025784:	07d9      	lsls	r1, r3, #31
 8025786:	d405      	bmi.n	8025794 <_fseeko_r+0x30>
 8025788:	89a3      	ldrh	r3, [r4, #12]
 802578a:	059a      	lsls	r2, r3, #22
 802578c:	d402      	bmi.n	8025794 <_fseeko_r+0x30>
 802578e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025790:	f000 faf4 	bl	8025d7c <__retarget_lock_acquire_recursive>
 8025794:	89a3      	ldrh	r3, [r4, #12]
 8025796:	f403 7384 	and.w	r3, r3, #264	; 0x108
 802579a:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
 802579e:	d103      	bne.n	80257a8 <_fseeko_r+0x44>
 80257a0:	4621      	mov	r1, r4
 80257a2:	4630      	mov	r0, r6
 80257a4:	f7ff fe2e 	bl	8025404 <_fflush_r>
 80257a8:	f8d4 802c 	ldr.w	r8, [r4, #44]	; 0x2c
 80257ac:	f1b8 0f00 	cmp.w	r8, #0
 80257b0:	d113      	bne.n	80257da <_fseeko_r+0x76>
 80257b2:	231d      	movs	r3, #29
 80257b4:	6033      	str	r3, [r6, #0]
 80257b6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80257b8:	07d9      	lsls	r1, r3, #31
 80257ba:	d578      	bpl.n	80258ae <_fseeko_r+0x14a>
 80257bc:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80257c0:	4628      	mov	r0, r5
 80257c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80257c6:	4b3f      	ldr	r3, [pc, #252]	; (80258c4 <_fseeko_r+0x160>)
 80257c8:	429c      	cmp	r4, r3
 80257ca:	d101      	bne.n	80257d0 <_fseeko_r+0x6c>
 80257cc:	68b4      	ldr	r4, [r6, #8]
 80257ce:	e7d8      	b.n	8025782 <_fseeko_r+0x1e>
 80257d0:	4b3d      	ldr	r3, [pc, #244]	; (80258c8 <_fseeko_r+0x164>)
 80257d2:	429c      	cmp	r4, r3
 80257d4:	bf08      	it	eq
 80257d6:	68f4      	ldreq	r4, [r6, #12]
 80257d8:	e7d3      	b.n	8025782 <_fseeko_r+0x1e>
 80257da:	2d01      	cmp	r5, #1
 80257dc:	d036      	beq.n	802584c <_fseeko_r+0xe8>
 80257de:	f035 0302 	bics.w	r3, r5, #2
 80257e2:	d162      	bne.n	80258aa <_fseeko_r+0x146>
 80257e4:	6923      	ldr	r3, [r4, #16]
 80257e6:	b91b      	cbnz	r3, 80257f0 <_fseeko_r+0x8c>
 80257e8:	4621      	mov	r1, r4
 80257ea:	4630      	mov	r0, r6
 80257ec:	f000 faee 	bl	8025dcc <__smakebuf_r>
 80257f0:	4621      	mov	r1, r4
 80257f2:	4630      	mov	r0, r6
 80257f4:	f7ff fe06 	bl	8025404 <_fflush_r>
 80257f8:	2800      	cmp	r0, #0
 80257fa:	d1dc      	bne.n	80257b6 <_fseeko_r+0x52>
 80257fc:	6a21      	ldr	r1, [r4, #32]
 80257fe:	462b      	mov	r3, r5
 8025800:	463a      	mov	r2, r7
 8025802:	4630      	mov	r0, r6
 8025804:	47c0      	blx	r8
 8025806:	3001      	adds	r0, #1
 8025808:	d0d5      	beq.n	80257b6 <_fseeko_r+0x52>
 802580a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802580c:	b141      	cbz	r1, 8025820 <_fseeko_r+0xbc>
 802580e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8025812:	4299      	cmp	r1, r3
 8025814:	d002      	beq.n	802581c <_fseeko_r+0xb8>
 8025816:	4630      	mov	r0, r6
 8025818:	f000 fba2 	bl	8025f60 <_free_r>
 802581c:	2300      	movs	r3, #0
 802581e:	6363      	str	r3, [r4, #52]	; 0x34
 8025820:	6923      	ldr	r3, [r4, #16]
 8025822:	6023      	str	r3, [r4, #0]
 8025824:	89a3      	ldrh	r3, [r4, #12]
 8025826:	2600      	movs	r6, #0
 8025828:	f423 6302 	bic.w	r3, r3, #2080	; 0x820
 802582c:	6066      	str	r6, [r4, #4]
 802582e:	81a3      	strh	r3, [r4, #12]
 8025830:	2208      	movs	r2, #8
 8025832:	4631      	mov	r1, r6
 8025834:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8025838:	f000 fb8a 	bl	8025f50 <memset>
 802583c:	6e65      	ldr	r5, [r4, #100]	; 0x64
 802583e:	f015 0501 	ands.w	r5, r5, #1
 8025842:	d13b      	bne.n	80258bc <_fseeko_r+0x158>
 8025844:	89a3      	ldrh	r3, [r4, #12]
 8025846:	059b      	lsls	r3, r3, #22
 8025848:	d4ba      	bmi.n	80257c0 <_fseeko_r+0x5c>
 802584a:	e021      	b.n	8025890 <_fseeko_r+0x12c>
 802584c:	4621      	mov	r1, r4
 802584e:	4630      	mov	r0, r6
 8025850:	f7ff fdd8 	bl	8025404 <_fflush_r>
 8025854:	89a2      	ldrh	r2, [r4, #12]
 8025856:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802585a:	d00c      	beq.n	8025876 <_fseeko_r+0x112>
 802585c:	6d65      	ldr	r5, [r4, #84]	; 0x54
 802585e:	89a3      	ldrh	r3, [r4, #12]
 8025860:	075a      	lsls	r2, r3, #29
 8025862:	d519      	bpl.n	8025898 <_fseeko_r+0x134>
 8025864:	6863      	ldr	r3, [r4, #4]
 8025866:	1aed      	subs	r5, r5, r3
 8025868:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802586a:	b10b      	cbz	r3, 8025870 <_fseeko_r+0x10c>
 802586c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802586e:	1aed      	subs	r5, r5, r3
 8025870:	442f      	add	r7, r5
 8025872:	2500      	movs	r5, #0
 8025874:	e7b6      	b.n	80257e4 <_fseeko_r+0x80>
 8025876:	462b      	mov	r3, r5
 8025878:	6a21      	ldr	r1, [r4, #32]
 802587a:	4630      	mov	r0, r6
 802587c:	47c0      	blx	r8
 802587e:	1c43      	adds	r3, r0, #1
 8025880:	4605      	mov	r5, r0
 8025882:	d1ec      	bne.n	802585e <_fseeko_r+0xfa>
 8025884:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025886:	07d8      	lsls	r0, r3, #31
 8025888:	d498      	bmi.n	80257bc <_fseeko_r+0x58>
 802588a:	89a3      	ldrh	r3, [r4, #12]
 802588c:	0599      	lsls	r1, r3, #22
 802588e:	d495      	bmi.n	80257bc <_fseeko_r+0x58>
 8025890:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025892:	f000 fa75 	bl	8025d80 <__retarget_lock_release_recursive>
 8025896:	e793      	b.n	80257c0 <_fseeko_r+0x5c>
 8025898:	0718      	lsls	r0, r3, #28
 802589a:	d5e9      	bpl.n	8025870 <_fseeko_r+0x10c>
 802589c:	6823      	ldr	r3, [r4, #0]
 802589e:	6922      	ldr	r2, [r4, #16]
 80258a0:	2b00      	cmp	r3, #0
 80258a2:	d0e5      	beq.n	8025870 <_fseeko_r+0x10c>
 80258a4:	1a9b      	subs	r3, r3, r2
 80258a6:	441d      	add	r5, r3
 80258a8:	e7e2      	b.n	8025870 <_fseeko_r+0x10c>
 80258aa:	2316      	movs	r3, #22
 80258ac:	e782      	b.n	80257b4 <_fseeko_r+0x50>
 80258ae:	89a3      	ldrh	r3, [r4, #12]
 80258b0:	059a      	lsls	r2, r3, #22
 80258b2:	d483      	bmi.n	80257bc <_fseeko_r+0x58>
 80258b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80258b6:	f000 fa63 	bl	8025d80 <__retarget_lock_release_recursive>
 80258ba:	e77f      	b.n	80257bc <_fseeko_r+0x58>
 80258bc:	4635      	mov	r5, r6
 80258be:	e77f      	b.n	80257c0 <_fseeko_r+0x5c>
 80258c0:	08032138 	.word	0x08032138
 80258c4:	08032158 	.word	0x08032158
 80258c8:	08032118 	.word	0x08032118

080258cc <ftell>:
 80258cc:	4b02      	ldr	r3, [pc, #8]	; (80258d8 <ftell+0xc>)
 80258ce:	4601      	mov	r1, r0
 80258d0:	6818      	ldr	r0, [r3, #0]
 80258d2:	f000 b803 	b.w	80258dc <_ftello_r>
 80258d6:	bf00      	nop
 80258d8:	200000bc 	.word	0x200000bc

080258dc <_ftello_r>:
 80258dc:	b570      	push	{r4, r5, r6, lr}
 80258de:	460c      	mov	r4, r1
 80258e0:	4605      	mov	r5, r0
 80258e2:	b118      	cbz	r0, 80258ec <_ftello_r+0x10>
 80258e4:	6983      	ldr	r3, [r0, #24]
 80258e6:	b90b      	cbnz	r3, 80258ec <_ftello_r+0x10>
 80258e8:	f7ff fe32 	bl	8025550 <__sinit>
 80258ec:	4b32      	ldr	r3, [pc, #200]	; (80259b8 <_ftello_r+0xdc>)
 80258ee:	429c      	cmp	r4, r3
 80258f0:	d114      	bne.n	802591c <_ftello_r+0x40>
 80258f2:	686c      	ldr	r4, [r5, #4]
 80258f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80258f6:	07da      	lsls	r2, r3, #31
 80258f8:	d405      	bmi.n	8025906 <_ftello_r+0x2a>
 80258fa:	89a3      	ldrh	r3, [r4, #12]
 80258fc:	059b      	lsls	r3, r3, #22
 80258fe:	d402      	bmi.n	8025906 <_ftello_r+0x2a>
 8025900:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025902:	f000 fa3b 	bl	8025d7c <__retarget_lock_acquire_recursive>
 8025906:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8025908:	b9ce      	cbnz	r6, 802593e <_ftello_r+0x62>
 802590a:	231d      	movs	r3, #29
 802590c:	602b      	str	r3, [r5, #0]
 802590e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025910:	07de      	lsls	r6, r3, #31
 8025912:	d50d      	bpl.n	8025930 <_ftello_r+0x54>
 8025914:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8025918:	4628      	mov	r0, r5
 802591a:	bd70      	pop	{r4, r5, r6, pc}
 802591c:	4b27      	ldr	r3, [pc, #156]	; (80259bc <_ftello_r+0xe0>)
 802591e:	429c      	cmp	r4, r3
 8025920:	d101      	bne.n	8025926 <_ftello_r+0x4a>
 8025922:	68ac      	ldr	r4, [r5, #8]
 8025924:	e7e6      	b.n	80258f4 <_ftello_r+0x18>
 8025926:	4b26      	ldr	r3, [pc, #152]	; (80259c0 <_ftello_r+0xe4>)
 8025928:	429c      	cmp	r4, r3
 802592a:	bf08      	it	eq
 802592c:	68ec      	ldreq	r4, [r5, #12]
 802592e:	e7e1      	b.n	80258f4 <_ftello_r+0x18>
 8025930:	89a3      	ldrh	r3, [r4, #12]
 8025932:	059d      	lsls	r5, r3, #22
 8025934:	d4ee      	bmi.n	8025914 <_ftello_r+0x38>
 8025936:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025938:	f000 fa22 	bl	8025d80 <__retarget_lock_release_recursive>
 802593c:	e7ea      	b.n	8025914 <_ftello_r+0x38>
 802593e:	89a2      	ldrh	r2, [r4, #12]
 8025940:	f002 030c 	and.w	r3, r2, #12
 8025944:	2b08      	cmp	r3, #8
 8025946:	d119      	bne.n	802597c <_ftello_r+0xa0>
 8025948:	6823      	ldr	r3, [r4, #0]
 802594a:	b1bb      	cbz	r3, 802597c <_ftello_r+0xa0>
 802594c:	6921      	ldr	r1, [r4, #16]
 802594e:	1a5b      	subs	r3, r3, r1
 8025950:	2b00      	cmp	r3, #0
 8025952:	dd13      	ble.n	802597c <_ftello_r+0xa0>
 8025954:	05d0      	lsls	r0, r2, #23
 8025956:	d511      	bpl.n	802597c <_ftello_r+0xa0>
 8025958:	2302      	movs	r3, #2
 802595a:	2200      	movs	r2, #0
 802595c:	6a21      	ldr	r1, [r4, #32]
 802595e:	4628      	mov	r0, r5
 8025960:	47b0      	blx	r6
 8025962:	1c41      	adds	r1, r0, #1
 8025964:	4605      	mov	r5, r0
 8025966:	d10d      	bne.n	8025984 <_ftello_r+0xa8>
 8025968:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802596a:	07da      	lsls	r2, r3, #31
 802596c:	d4d2      	bmi.n	8025914 <_ftello_r+0x38>
 802596e:	89a3      	ldrh	r3, [r4, #12]
 8025970:	059b      	lsls	r3, r3, #22
 8025972:	d4cf      	bmi.n	8025914 <_ftello_r+0x38>
 8025974:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025976:	f000 fa03 	bl	8025d80 <__retarget_lock_release_recursive>
 802597a:	e7cd      	b.n	8025918 <_ftello_r+0x3c>
 802597c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8025980:	d00f      	beq.n	80259a2 <_ftello_r+0xc6>
 8025982:	6d65      	ldr	r5, [r4, #84]	; 0x54
 8025984:	89a2      	ldrh	r2, [r4, #12]
 8025986:	0756      	lsls	r6, r2, #29
 8025988:	d50d      	bpl.n	80259a6 <_ftello_r+0xca>
 802598a:	6863      	ldr	r3, [r4, #4]
 802598c:	1aed      	subs	r5, r5, r3
 802598e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8025990:	b10b      	cbz	r3, 8025996 <_ftello_r+0xba>
 8025992:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8025994:	1aed      	subs	r5, r5, r3
 8025996:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025998:	07d9      	lsls	r1, r3, #31
 802599a:	d4bd      	bmi.n	8025918 <_ftello_r+0x3c>
 802599c:	0593      	lsls	r3, r2, #22
 802599e:	d4bb      	bmi.n	8025918 <_ftello_r+0x3c>
 80259a0:	e7e8      	b.n	8025974 <_ftello_r+0x98>
 80259a2:	2301      	movs	r3, #1
 80259a4:	e7da      	b.n	802595c <_ftello_r+0x80>
 80259a6:	0710      	lsls	r0, r2, #28
 80259a8:	d5f5      	bpl.n	8025996 <_ftello_r+0xba>
 80259aa:	6823      	ldr	r3, [r4, #0]
 80259ac:	2b00      	cmp	r3, #0
 80259ae:	d0f2      	beq.n	8025996 <_ftello_r+0xba>
 80259b0:	6921      	ldr	r1, [r4, #16]
 80259b2:	1a5b      	subs	r3, r3, r1
 80259b4:	441d      	add	r5, r3
 80259b6:	e7ee      	b.n	8025996 <_ftello_r+0xba>
 80259b8:	08032138 	.word	0x08032138
 80259bc:	08032158 	.word	0x08032158
 80259c0:	08032118 	.word	0x08032118

080259c4 <_fwalk>:
 80259c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80259c8:	460f      	mov	r7, r1
 80259ca:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80259ce:	2600      	movs	r6, #0
 80259d0:	e9d4 8501 	ldrd	r8, r5, [r4, #4]
 80259d4:	f1b8 0801 	subs.w	r8, r8, #1
 80259d8:	d505      	bpl.n	80259e6 <_fwalk+0x22>
 80259da:	6824      	ldr	r4, [r4, #0]
 80259dc:	2c00      	cmp	r4, #0
 80259de:	d1f7      	bne.n	80259d0 <_fwalk+0xc>
 80259e0:	4630      	mov	r0, r6
 80259e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80259e6:	89ab      	ldrh	r3, [r5, #12]
 80259e8:	2b01      	cmp	r3, #1
 80259ea:	d906      	bls.n	80259fa <_fwalk+0x36>
 80259ec:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80259f0:	3301      	adds	r3, #1
 80259f2:	d002      	beq.n	80259fa <_fwalk+0x36>
 80259f4:	4628      	mov	r0, r5
 80259f6:	47b8      	blx	r7
 80259f8:	4306      	orrs	r6, r0
 80259fa:	3568      	adds	r5, #104	; 0x68
 80259fc:	e7ea      	b.n	80259d4 <_fwalk+0x10>

080259fe <_fwalk_reent>:
 80259fe:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025a02:	4606      	mov	r6, r0
 8025a04:	4688      	mov	r8, r1
 8025a06:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8025a0a:	2700      	movs	r7, #0
 8025a0c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8025a10:	f1b9 0901 	subs.w	r9, r9, #1
 8025a14:	d505      	bpl.n	8025a22 <_fwalk_reent+0x24>
 8025a16:	6824      	ldr	r4, [r4, #0]
 8025a18:	2c00      	cmp	r4, #0
 8025a1a:	d1f7      	bne.n	8025a0c <_fwalk_reent+0xe>
 8025a1c:	4638      	mov	r0, r7
 8025a1e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025a22:	89ab      	ldrh	r3, [r5, #12]
 8025a24:	2b01      	cmp	r3, #1
 8025a26:	d907      	bls.n	8025a38 <_fwalk_reent+0x3a>
 8025a28:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8025a2c:	3301      	adds	r3, #1
 8025a2e:	d003      	beq.n	8025a38 <_fwalk_reent+0x3a>
 8025a30:	4629      	mov	r1, r5
 8025a32:	4630      	mov	r0, r6
 8025a34:	47c0      	blx	r8
 8025a36:	4307      	orrs	r7, r0
 8025a38:	3568      	adds	r5, #104	; 0x68
 8025a3a:	e7e9      	b.n	8025a10 <_fwalk_reent+0x12>

08025a3c <_fwrite_r>:
 8025a3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025a40:	9c08      	ldr	r4, [sp, #32]
 8025a42:	468a      	mov	sl, r1
 8025a44:	4690      	mov	r8, r2
 8025a46:	fb02 f903 	mul.w	r9, r2, r3
 8025a4a:	4605      	mov	r5, r0
 8025a4c:	b118      	cbz	r0, 8025a56 <_fwrite_r+0x1a>
 8025a4e:	6983      	ldr	r3, [r0, #24]
 8025a50:	b90b      	cbnz	r3, 8025a56 <_fwrite_r+0x1a>
 8025a52:	f7ff fd7d 	bl	8025550 <__sinit>
 8025a56:	4b26      	ldr	r3, [pc, #152]	; (8025af0 <_fwrite_r+0xb4>)
 8025a58:	429c      	cmp	r4, r3
 8025a5a:	d123      	bne.n	8025aa4 <_fwrite_r+0x68>
 8025a5c:	686c      	ldr	r4, [r5, #4]
 8025a5e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025a60:	07de      	lsls	r6, r3, #31
 8025a62:	d405      	bmi.n	8025a70 <_fwrite_r+0x34>
 8025a64:	89a3      	ldrh	r3, [r4, #12]
 8025a66:	0598      	lsls	r0, r3, #22
 8025a68:	d402      	bmi.n	8025a70 <_fwrite_r+0x34>
 8025a6a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025a6c:	f000 f986 	bl	8025d7c <__retarget_lock_acquire_recursive>
 8025a70:	89a3      	ldrh	r3, [r4, #12]
 8025a72:	0719      	lsls	r1, r3, #28
 8025a74:	d520      	bpl.n	8025ab8 <_fwrite_r+0x7c>
 8025a76:	6923      	ldr	r3, [r4, #16]
 8025a78:	b1f3      	cbz	r3, 8025ab8 <_fwrite_r+0x7c>
 8025a7a:	2600      	movs	r6, #0
 8025a7c:	454e      	cmp	r6, r9
 8025a7e:	d029      	beq.n	8025ad4 <_fwrite_r+0x98>
 8025a80:	68a7      	ldr	r7, [r4, #8]
 8025a82:	f81a 1006 	ldrb.w	r1, [sl, r6]
 8025a86:	3f01      	subs	r7, #1
 8025a88:	2f00      	cmp	r7, #0
 8025a8a:	60a7      	str	r7, [r4, #8]
 8025a8c:	da04      	bge.n	8025a98 <_fwrite_r+0x5c>
 8025a8e:	69a3      	ldr	r3, [r4, #24]
 8025a90:	429f      	cmp	r7, r3
 8025a92:	db19      	blt.n	8025ac8 <_fwrite_r+0x8c>
 8025a94:	290a      	cmp	r1, #10
 8025a96:	d017      	beq.n	8025ac8 <_fwrite_r+0x8c>
 8025a98:	6823      	ldr	r3, [r4, #0]
 8025a9a:	1c5a      	adds	r2, r3, #1
 8025a9c:	6022      	str	r2, [r4, #0]
 8025a9e:	7019      	strb	r1, [r3, #0]
 8025aa0:	3601      	adds	r6, #1
 8025aa2:	e7eb      	b.n	8025a7c <_fwrite_r+0x40>
 8025aa4:	4b13      	ldr	r3, [pc, #76]	; (8025af4 <_fwrite_r+0xb8>)
 8025aa6:	429c      	cmp	r4, r3
 8025aa8:	d101      	bne.n	8025aae <_fwrite_r+0x72>
 8025aaa:	68ac      	ldr	r4, [r5, #8]
 8025aac:	e7d7      	b.n	8025a5e <_fwrite_r+0x22>
 8025aae:	4b12      	ldr	r3, [pc, #72]	; (8025af8 <_fwrite_r+0xbc>)
 8025ab0:	429c      	cmp	r4, r3
 8025ab2:	bf08      	it	eq
 8025ab4:	68ec      	ldreq	r4, [r5, #12]
 8025ab6:	e7d2      	b.n	8025a5e <_fwrite_r+0x22>
 8025ab8:	4621      	mov	r1, r4
 8025aba:	4628      	mov	r0, r5
 8025abc:	f004 fe6c 	bl	802a798 <__swsetup_r>
 8025ac0:	2800      	cmp	r0, #0
 8025ac2:	d0da      	beq.n	8025a7a <_fwrite_r+0x3e>
 8025ac4:	2600      	movs	r6, #0
 8025ac6:	e005      	b.n	8025ad4 <_fwrite_r+0x98>
 8025ac8:	4622      	mov	r2, r4
 8025aca:	4628      	mov	r0, r5
 8025acc:	f003 fefe 	bl	80298cc <__swbuf_r>
 8025ad0:	3001      	adds	r0, #1
 8025ad2:	d1e5      	bne.n	8025aa0 <_fwrite_r+0x64>
 8025ad4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025ad6:	07da      	lsls	r2, r3, #31
 8025ad8:	d405      	bmi.n	8025ae6 <_fwrite_r+0xaa>
 8025ada:	89a3      	ldrh	r3, [r4, #12]
 8025adc:	059b      	lsls	r3, r3, #22
 8025ade:	d402      	bmi.n	8025ae6 <_fwrite_r+0xaa>
 8025ae0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025ae2:	f000 f94d 	bl	8025d80 <__retarget_lock_release_recursive>
 8025ae6:	fbb6 f0f8 	udiv	r0, r6, r8
 8025aea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025aee:	bf00      	nop
 8025af0:	08032138 	.word	0x08032138
 8025af4:	08032158 	.word	0x08032158
 8025af8:	08032118 	.word	0x08032118

08025afc <fwrite>:
 8025afc:	b507      	push	{r0, r1, r2, lr}
 8025afe:	9300      	str	r3, [sp, #0]
 8025b00:	4613      	mov	r3, r2
 8025b02:	460a      	mov	r2, r1
 8025b04:	4601      	mov	r1, r0
 8025b06:	4803      	ldr	r0, [pc, #12]	; (8025b14 <fwrite+0x18>)
 8025b08:	6800      	ldr	r0, [r0, #0]
 8025b0a:	f7ff ff97 	bl	8025a3c <_fwrite_r>
 8025b0e:	b003      	add	sp, #12
 8025b10:	f85d fb04 	ldr.w	pc, [sp], #4
 8025b14:	200000bc 	.word	0x200000bc

08025b18 <getc>:
 8025b18:	b538      	push	{r3, r4, r5, lr}
 8025b1a:	4b1d      	ldr	r3, [pc, #116]	; (8025b90 <getc+0x78>)
 8025b1c:	681d      	ldr	r5, [r3, #0]
 8025b1e:	4604      	mov	r4, r0
 8025b20:	b125      	cbz	r5, 8025b2c <getc+0x14>
 8025b22:	69ab      	ldr	r3, [r5, #24]
 8025b24:	b913      	cbnz	r3, 8025b2c <getc+0x14>
 8025b26:	4628      	mov	r0, r5
 8025b28:	f7ff fd12 	bl	8025550 <__sinit>
 8025b2c:	4b19      	ldr	r3, [pc, #100]	; (8025b94 <getc+0x7c>)
 8025b2e:	429c      	cmp	r4, r3
 8025b30:	d11e      	bne.n	8025b70 <getc+0x58>
 8025b32:	686c      	ldr	r4, [r5, #4]
 8025b34:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025b36:	07d8      	lsls	r0, r3, #31
 8025b38:	d405      	bmi.n	8025b46 <getc+0x2e>
 8025b3a:	89a3      	ldrh	r3, [r4, #12]
 8025b3c:	0599      	lsls	r1, r3, #22
 8025b3e:	d402      	bmi.n	8025b46 <getc+0x2e>
 8025b40:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025b42:	f000 f91b 	bl	8025d7c <__retarget_lock_acquire_recursive>
 8025b46:	6863      	ldr	r3, [r4, #4]
 8025b48:	3b01      	subs	r3, #1
 8025b4a:	2b00      	cmp	r3, #0
 8025b4c:	6063      	str	r3, [r4, #4]
 8025b4e:	da19      	bge.n	8025b84 <getc+0x6c>
 8025b50:	4628      	mov	r0, r5
 8025b52:	4621      	mov	r1, r4
 8025b54:	f001 fb3c 	bl	80271d0 <__srget_r>
 8025b58:	4605      	mov	r5, r0
 8025b5a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025b5c:	07da      	lsls	r2, r3, #31
 8025b5e:	d405      	bmi.n	8025b6c <getc+0x54>
 8025b60:	89a3      	ldrh	r3, [r4, #12]
 8025b62:	059b      	lsls	r3, r3, #22
 8025b64:	d402      	bmi.n	8025b6c <getc+0x54>
 8025b66:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025b68:	f000 f90a 	bl	8025d80 <__retarget_lock_release_recursive>
 8025b6c:	4628      	mov	r0, r5
 8025b6e:	bd38      	pop	{r3, r4, r5, pc}
 8025b70:	4b09      	ldr	r3, [pc, #36]	; (8025b98 <getc+0x80>)
 8025b72:	429c      	cmp	r4, r3
 8025b74:	d101      	bne.n	8025b7a <getc+0x62>
 8025b76:	68ac      	ldr	r4, [r5, #8]
 8025b78:	e7dc      	b.n	8025b34 <getc+0x1c>
 8025b7a:	4b08      	ldr	r3, [pc, #32]	; (8025b9c <getc+0x84>)
 8025b7c:	429c      	cmp	r4, r3
 8025b7e:	bf08      	it	eq
 8025b80:	68ec      	ldreq	r4, [r5, #12]
 8025b82:	e7d7      	b.n	8025b34 <getc+0x1c>
 8025b84:	6823      	ldr	r3, [r4, #0]
 8025b86:	1c5a      	adds	r2, r3, #1
 8025b88:	6022      	str	r2, [r4, #0]
 8025b8a:	781d      	ldrb	r5, [r3, #0]
 8025b8c:	e7e5      	b.n	8025b5a <getc+0x42>
 8025b8e:	bf00      	nop
 8025b90:	200000bc 	.word	0x200000bc
 8025b94:	08032138 	.word	0x08032138
 8025b98:	08032158 	.word	0x08032158
 8025b9c:	08032118 	.word	0x08032118

08025ba0 <getwc>:
 8025ba0:	f005 bd72 	b.w	802b688 <fgetwc>

08025ba4 <__libc_init_array>:
 8025ba4:	b570      	push	{r4, r5, r6, lr}
 8025ba6:	4d0d      	ldr	r5, [pc, #52]	; (8025bdc <__libc_init_array+0x38>)
 8025ba8:	4c0d      	ldr	r4, [pc, #52]	; (8025be0 <__libc_init_array+0x3c>)
 8025baa:	1b64      	subs	r4, r4, r5
 8025bac:	10a4      	asrs	r4, r4, #2
 8025bae:	2600      	movs	r6, #0
 8025bb0:	42a6      	cmp	r6, r4
 8025bb2:	d109      	bne.n	8025bc8 <__libc_init_array+0x24>
 8025bb4:	4d0b      	ldr	r5, [pc, #44]	; (8025be4 <__libc_init_array+0x40>)
 8025bb6:	4c0c      	ldr	r4, [pc, #48]	; (8025be8 <__libc_init_array+0x44>)
 8025bb8:	f008 fcf8 	bl	802e5ac <_init>
 8025bbc:	1b64      	subs	r4, r4, r5
 8025bbe:	10a4      	asrs	r4, r4, #2
 8025bc0:	2600      	movs	r6, #0
 8025bc2:	42a6      	cmp	r6, r4
 8025bc4:	d105      	bne.n	8025bd2 <__libc_init_array+0x2e>
 8025bc6:	bd70      	pop	{r4, r5, r6, pc}
 8025bc8:	f855 3b04 	ldr.w	r3, [r5], #4
 8025bcc:	4798      	blx	r3
 8025bce:	3601      	adds	r6, #1
 8025bd0:	e7ee      	b.n	8025bb0 <__libc_init_array+0xc>
 8025bd2:	f855 3b04 	ldr.w	r3, [r5], #4
 8025bd6:	4798      	blx	r3
 8025bd8:	3601      	adds	r6, #1
 8025bda:	e7f2      	b.n	8025bc2 <__libc_init_array+0x1e>
 8025bdc:	080330e0 	.word	0x080330e0
 8025be0:	080330e0 	.word	0x080330e0
 8025be4:	080330e0 	.word	0x080330e0
 8025be8:	080330fc 	.word	0x080330fc

08025bec <iswctype>:
 8025bec:	3901      	subs	r1, #1
 8025bee:	290b      	cmp	r1, #11
 8025bf0:	d81f      	bhi.n	8025c32 <iswctype+0x46>
 8025bf2:	e8df f001 	tbb	[pc, r1]
 8025bf6:	0806      	.short	0x0806
 8025bf8:	100e0c0a 	.word	0x100e0c0a
 8025bfc:	18161412 	.word	0x18161412
 8025c00:	1c1a      	.short	0x1c1a
 8025c02:	f006 b9db 	b.w	802bfbc <iswalnum>
 8025c06:	f006 b9e7 	b.w	802bfd8 <iswalpha>
 8025c0a:	f006 b9f3 	b.w	802bff4 <iswblank>
 8025c0e:	f006 ba07 	b.w	802c020 <iswcntrl>
 8025c12:	f000 b810 	b.w	8025c36 <iswdigit>
 8025c16:	f000 b814 	b.w	8025c42 <iswgraph>
 8025c1a:	f000 b823 	b.w	8025c64 <iswlower>
 8025c1e:	f000 b833 	b.w	8025c88 <iswprint>
 8025c22:	f000 b83f 	b.w	8025ca4 <iswpunct>
 8025c26:	f000 b84b 	b.w	8025cc0 <iswspace>
 8025c2a:	f000 b857 	b.w	8025cdc <iswupper>
 8025c2e:	f000 b867 	b.w	8025d00 <iswxdigit>
 8025c32:	2000      	movs	r0, #0
 8025c34:	4770      	bx	lr

08025c36 <iswdigit>:
 8025c36:	3830      	subs	r0, #48	; 0x30
 8025c38:	2809      	cmp	r0, #9
 8025c3a:	bf8c      	ite	hi
 8025c3c:	2000      	movhi	r0, #0
 8025c3e:	2001      	movls	r0, #1
 8025c40:	4770      	bx	lr

08025c42 <iswgraph>:
 8025c42:	2100      	movs	r1, #0
 8025c44:	f000 b800 	b.w	8025c48 <iswgraph_l>

08025c48 <iswgraph_l>:
 8025c48:	b538      	push	{r3, r4, r5, lr}
 8025c4a:	4604      	mov	r4, r0
 8025c4c:	460d      	mov	r5, r1
 8025c4e:	f000 f81f 	bl	8025c90 <iswprint_l>
 8025c52:	b130      	cbz	r0, 8025c62 <iswgraph_l+0x1a>
 8025c54:	4629      	mov	r1, r5
 8025c56:	4620      	mov	r0, r4
 8025c58:	f000 f836 	bl	8025cc8 <iswspace_l>
 8025c5c:	fab0 f080 	clz	r0, r0
 8025c60:	0940      	lsrs	r0, r0, #5
 8025c62:	bd38      	pop	{r3, r4, r5, pc}

08025c64 <iswlower>:
 8025c64:	2100      	movs	r1, #0
 8025c66:	f000 b801 	b.w	8025c6c <iswlower_l>
	...

08025c6c <iswlower_l>:
 8025c6c:	28ff      	cmp	r0, #255	; 0xff
 8025c6e:	d807      	bhi.n	8025c80 <iswlower_l+0x14>
 8025c70:	4b04      	ldr	r3, [pc, #16]	; (8025c84 <iswlower_l+0x18>)
 8025c72:	5cc0      	ldrb	r0, [r0, r3]
 8025c74:	f000 0003 	and.w	r0, r0, #3
 8025c78:	1e83      	subs	r3, r0, #2
 8025c7a:	4258      	negs	r0, r3
 8025c7c:	4158      	adcs	r0, r3
 8025c7e:	4770      	bx	lr
 8025c80:	2000      	movs	r0, #0
 8025c82:	4770      	bx	lr
 8025c84:	08032018 	.word	0x08032018

08025c88 <iswprint>:
 8025c88:	2100      	movs	r1, #0
 8025c8a:	f000 b801 	b.w	8025c90 <iswprint_l>
	...

08025c90 <iswprint_l>:
 8025c90:	28ff      	cmp	r0, #255	; 0xff
 8025c92:	bf9d      	ittte	ls
 8025c94:	4b02      	ldrls	r3, [pc, #8]	; (8025ca0 <iswprint_l+0x10>)
 8025c96:	5cc0      	ldrbls	r0, [r0, r3]
 8025c98:	f000 0097 	andls.w	r0, r0, #151	; 0x97
 8025c9c:	2000      	movhi	r0, #0
 8025c9e:	4770      	bx	lr
 8025ca0:	08032018 	.word	0x08032018

08025ca4 <iswpunct>:
 8025ca4:	2100      	movs	r1, #0
 8025ca6:	f000 b801 	b.w	8025cac <iswpunct_l>
	...

08025cac <iswpunct_l>:
 8025cac:	28ff      	cmp	r0, #255	; 0xff
 8025cae:	bf9d      	ittte	ls
 8025cb0:	4b02      	ldrls	r3, [pc, #8]	; (8025cbc <iswpunct_l+0x10>)
 8025cb2:	5cc0      	ldrbls	r0, [r0, r3]
 8025cb4:	f000 0010 	andls.w	r0, r0, #16
 8025cb8:	2000      	movhi	r0, #0
 8025cba:	4770      	bx	lr
 8025cbc:	08032018 	.word	0x08032018

08025cc0 <iswspace>:
 8025cc0:	2100      	movs	r1, #0
 8025cc2:	f000 b801 	b.w	8025cc8 <iswspace_l>
	...

08025cc8 <iswspace_l>:
 8025cc8:	28ff      	cmp	r0, #255	; 0xff
 8025cca:	bf9d      	ittte	ls
 8025ccc:	4b02      	ldrls	r3, [pc, #8]	; (8025cd8 <iswspace_l+0x10>)
 8025cce:	5cc0      	ldrbls	r0, [r0, r3]
 8025cd0:	f000 0008 	andls.w	r0, r0, #8
 8025cd4:	2000      	movhi	r0, #0
 8025cd6:	4770      	bx	lr
 8025cd8:	08032018 	.word	0x08032018

08025cdc <iswupper>:
 8025cdc:	2100      	movs	r1, #0
 8025cde:	f000 b801 	b.w	8025ce4 <iswupper_l>
	...

08025ce4 <iswupper_l>:
 8025ce4:	28ff      	cmp	r0, #255	; 0xff
 8025ce6:	d807      	bhi.n	8025cf8 <iswupper_l+0x14>
 8025ce8:	4b04      	ldr	r3, [pc, #16]	; (8025cfc <iswupper_l+0x18>)
 8025cea:	5cc0      	ldrb	r0, [r0, r3]
 8025cec:	f000 0003 	and.w	r0, r0, #3
 8025cf0:	1e43      	subs	r3, r0, #1
 8025cf2:	4258      	negs	r0, r3
 8025cf4:	4158      	adcs	r0, r3
 8025cf6:	4770      	bx	lr
 8025cf8:	2000      	movs	r0, #0
 8025cfa:	4770      	bx	lr
 8025cfc:	08032018 	.word	0x08032018

08025d00 <iswxdigit>:
 8025d00:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8025d04:	2b09      	cmp	r3, #9
 8025d06:	d907      	bls.n	8025d18 <iswxdigit+0x18>
 8025d08:	f020 0020 	bic.w	r0, r0, #32
 8025d0c:	3841      	subs	r0, #65	; 0x41
 8025d0e:	2805      	cmp	r0, #5
 8025d10:	bf8c      	ite	hi
 8025d12:	2000      	movhi	r0, #0
 8025d14:	2001      	movls	r0, #1
 8025d16:	4770      	bx	lr
 8025d18:	2001      	movs	r0, #1
 8025d1a:	4770      	bx	lr

08025d1c <_setlocale_r>:
 8025d1c:	b510      	push	{r4, lr}
 8025d1e:	4614      	mov	r4, r2
 8025d20:	b90a      	cbnz	r2, 8025d26 <_setlocale_r+0xa>
 8025d22:	480b      	ldr	r0, [pc, #44]	; (8025d50 <_setlocale_r+0x34>)
 8025d24:	bd10      	pop	{r4, pc}
 8025d26:	490b      	ldr	r1, [pc, #44]	; (8025d54 <_setlocale_r+0x38>)
 8025d28:	4610      	mov	r0, r2
 8025d2a:	f7da faa1 	bl	8000270 <strcmp>
 8025d2e:	2800      	cmp	r0, #0
 8025d30:	d0f7      	beq.n	8025d22 <_setlocale_r+0x6>
 8025d32:	4907      	ldr	r1, [pc, #28]	; (8025d50 <_setlocale_r+0x34>)
 8025d34:	4620      	mov	r0, r4
 8025d36:	f7da fa9b 	bl	8000270 <strcmp>
 8025d3a:	2800      	cmp	r0, #0
 8025d3c:	d0f1      	beq.n	8025d22 <_setlocale_r+0x6>
 8025d3e:	4906      	ldr	r1, [pc, #24]	; (8025d58 <_setlocale_r+0x3c>)
 8025d40:	4620      	mov	r0, r4
 8025d42:	f7da fa95 	bl	8000270 <strcmp>
 8025d46:	2800      	cmp	r0, #0
 8025d48:	d0eb      	beq.n	8025d22 <_setlocale_r+0x6>
 8025d4a:	2000      	movs	r0, #0
 8025d4c:	e7ea      	b.n	8025d24 <_setlocale_r+0x8>
 8025d4e:	bf00      	nop
 8025d50:	0802f7f0 	.word	0x0802f7f0
 8025d54:	0803217c 	.word	0x0803217c
 8025d58:	08032cb9 	.word	0x08032cb9

08025d5c <__locale_mb_cur_max>:
 8025d5c:	4b01      	ldr	r3, [pc, #4]	; (8025d64 <__locale_mb_cur_max+0x8>)
 8025d5e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
 8025d62:	4770      	bx	lr
 8025d64:	20000120 	.word	0x20000120

08025d68 <setlocale>:
 8025d68:	4b02      	ldr	r3, [pc, #8]	; (8025d74 <setlocale+0xc>)
 8025d6a:	460a      	mov	r2, r1
 8025d6c:	4601      	mov	r1, r0
 8025d6e:	6818      	ldr	r0, [r3, #0]
 8025d70:	f7ff bfd4 	b.w	8025d1c <_setlocale_r>
 8025d74:	200000bc 	.word	0x200000bc

08025d78 <__retarget_lock_init_recursive>:
 8025d78:	4770      	bx	lr

08025d7a <__retarget_lock_acquire>:
 8025d7a:	4770      	bx	lr

08025d7c <__retarget_lock_acquire_recursive>:
 8025d7c:	4770      	bx	lr

08025d7e <__retarget_lock_release>:
 8025d7e:	4770      	bx	lr

08025d80 <__retarget_lock_release_recursive>:
 8025d80:	4770      	bx	lr

08025d82 <__swhatbuf_r>:
 8025d82:	b570      	push	{r4, r5, r6, lr}
 8025d84:	460e      	mov	r6, r1
 8025d86:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025d8a:	2900      	cmp	r1, #0
 8025d8c:	b096      	sub	sp, #88	; 0x58
 8025d8e:	4614      	mov	r4, r2
 8025d90:	461d      	mov	r5, r3
 8025d92:	da08      	bge.n	8025da6 <__swhatbuf_r+0x24>
 8025d94:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8025d98:	2200      	movs	r2, #0
 8025d9a:	602a      	str	r2, [r5, #0]
 8025d9c:	061a      	lsls	r2, r3, #24
 8025d9e:	d410      	bmi.n	8025dc2 <__swhatbuf_r+0x40>
 8025da0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8025da4:	e00e      	b.n	8025dc4 <__swhatbuf_r+0x42>
 8025da6:	466a      	mov	r2, sp
 8025da8:	f005 fd2e 	bl	802b808 <_fstat_r>
 8025dac:	2800      	cmp	r0, #0
 8025dae:	dbf1      	blt.n	8025d94 <__swhatbuf_r+0x12>
 8025db0:	9a01      	ldr	r2, [sp, #4]
 8025db2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8025db6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8025dba:	425a      	negs	r2, r3
 8025dbc:	415a      	adcs	r2, r3
 8025dbe:	602a      	str	r2, [r5, #0]
 8025dc0:	e7ee      	b.n	8025da0 <__swhatbuf_r+0x1e>
 8025dc2:	2340      	movs	r3, #64	; 0x40
 8025dc4:	2000      	movs	r0, #0
 8025dc6:	6023      	str	r3, [r4, #0]
 8025dc8:	b016      	add	sp, #88	; 0x58
 8025dca:	bd70      	pop	{r4, r5, r6, pc}

08025dcc <__smakebuf_r>:
 8025dcc:	898b      	ldrh	r3, [r1, #12]
 8025dce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8025dd0:	079d      	lsls	r5, r3, #30
 8025dd2:	4606      	mov	r6, r0
 8025dd4:	460c      	mov	r4, r1
 8025dd6:	d507      	bpl.n	8025de8 <__smakebuf_r+0x1c>
 8025dd8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8025ddc:	6023      	str	r3, [r4, #0]
 8025dde:	6123      	str	r3, [r4, #16]
 8025de0:	2301      	movs	r3, #1
 8025de2:	6163      	str	r3, [r4, #20]
 8025de4:	b002      	add	sp, #8
 8025de6:	bd70      	pop	{r4, r5, r6, pc}
 8025de8:	ab01      	add	r3, sp, #4
 8025dea:	466a      	mov	r2, sp
 8025dec:	f7ff ffc9 	bl	8025d82 <__swhatbuf_r>
 8025df0:	9900      	ldr	r1, [sp, #0]
 8025df2:	4605      	mov	r5, r0
 8025df4:	4630      	mov	r0, r6
 8025df6:	f000 f91f 	bl	8026038 <_malloc_r>
 8025dfa:	b948      	cbnz	r0, 8025e10 <__smakebuf_r+0x44>
 8025dfc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025e00:	059a      	lsls	r2, r3, #22
 8025e02:	d4ef      	bmi.n	8025de4 <__smakebuf_r+0x18>
 8025e04:	f023 0303 	bic.w	r3, r3, #3
 8025e08:	f043 0302 	orr.w	r3, r3, #2
 8025e0c:	81a3      	strh	r3, [r4, #12]
 8025e0e:	e7e3      	b.n	8025dd8 <__smakebuf_r+0xc>
 8025e10:	4b0d      	ldr	r3, [pc, #52]	; (8025e48 <__smakebuf_r+0x7c>)
 8025e12:	62b3      	str	r3, [r6, #40]	; 0x28
 8025e14:	89a3      	ldrh	r3, [r4, #12]
 8025e16:	6020      	str	r0, [r4, #0]
 8025e18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8025e1c:	81a3      	strh	r3, [r4, #12]
 8025e1e:	9b00      	ldr	r3, [sp, #0]
 8025e20:	6163      	str	r3, [r4, #20]
 8025e22:	9b01      	ldr	r3, [sp, #4]
 8025e24:	6120      	str	r0, [r4, #16]
 8025e26:	b15b      	cbz	r3, 8025e40 <__smakebuf_r+0x74>
 8025e28:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025e2c:	4630      	mov	r0, r6
 8025e2e:	f006 f8b5 	bl	802bf9c <_isatty_r>
 8025e32:	b128      	cbz	r0, 8025e40 <__smakebuf_r+0x74>
 8025e34:	89a3      	ldrh	r3, [r4, #12]
 8025e36:	f023 0303 	bic.w	r3, r3, #3
 8025e3a:	f043 0301 	orr.w	r3, r3, #1
 8025e3e:	81a3      	strh	r3, [r4, #12]
 8025e40:	89a0      	ldrh	r0, [r4, #12]
 8025e42:	4305      	orrs	r5, r0
 8025e44:	81a5      	strh	r5, [r4, #12]
 8025e46:	e7cd      	b.n	8025de4 <__smakebuf_r+0x18>
 8025e48:	080254e9 	.word	0x080254e9

08025e4c <malloc>:
 8025e4c:	4b02      	ldr	r3, [pc, #8]	; (8025e58 <malloc+0xc>)
 8025e4e:	4601      	mov	r1, r0
 8025e50:	6818      	ldr	r0, [r3, #0]
 8025e52:	f000 b8f1 	b.w	8026038 <_malloc_r>
 8025e56:	bf00      	nop
 8025e58:	200000bc 	.word	0x200000bc

08025e5c <free>:
 8025e5c:	4b02      	ldr	r3, [pc, #8]	; (8025e68 <free+0xc>)
 8025e5e:	4601      	mov	r1, r0
 8025e60:	6818      	ldr	r0, [r3, #0]
 8025e62:	f000 b87d 	b.w	8025f60 <_free_r>
 8025e66:	bf00      	nop
 8025e68:	200000bc 	.word	0x200000bc

08025e6c <_mbrtowc_r>:
 8025e6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8025e6e:	4c0a      	ldr	r4, [pc, #40]	; (8025e98 <_mbrtowc_r+0x2c>)
 8025e70:	9e08      	ldr	r6, [sp, #32]
 8025e72:	f8d4 70e4 	ldr.w	r7, [r4, #228]	; 0xe4
 8025e76:	9600      	str	r6, [sp, #0]
 8025e78:	4605      	mov	r5, r0
 8025e7a:	4614      	mov	r4, r2
 8025e7c:	b912      	cbnz	r2, 8025e84 <_mbrtowc_r+0x18>
 8025e7e:	4a07      	ldr	r2, [pc, #28]	; (8025e9c <_mbrtowc_r+0x30>)
 8025e80:	2301      	movs	r3, #1
 8025e82:	4621      	mov	r1, r4
 8025e84:	47b8      	blx	r7
 8025e86:	1c43      	adds	r3, r0, #1
 8025e88:	bf01      	itttt	eq
 8025e8a:	2300      	moveq	r3, #0
 8025e8c:	6033      	streq	r3, [r6, #0]
 8025e8e:	238a      	moveq	r3, #138	; 0x8a
 8025e90:	602b      	streq	r3, [r5, #0]
 8025e92:	b003      	add	sp, #12
 8025e94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025e96:	bf00      	nop
 8025e98:	20000120 	.word	0x20000120
 8025e9c:	08032cb9 	.word	0x08032cb9

08025ea0 <mbrtowc>:
 8025ea0:	b507      	push	{r0, r1, r2, lr}
 8025ea2:	9300      	str	r3, [sp, #0]
 8025ea4:	4613      	mov	r3, r2
 8025ea6:	460a      	mov	r2, r1
 8025ea8:	4601      	mov	r1, r0
 8025eaa:	4803      	ldr	r0, [pc, #12]	; (8025eb8 <mbrtowc+0x18>)
 8025eac:	6800      	ldr	r0, [r0, #0]
 8025eae:	f7ff ffdd 	bl	8025e6c <_mbrtowc_r>
 8025eb2:	b003      	add	sp, #12
 8025eb4:	f85d fb04 	ldr.w	pc, [sp], #4
 8025eb8:	200000bc 	.word	0x200000bc

08025ebc <__ascii_mbtowc>:
 8025ebc:	b082      	sub	sp, #8
 8025ebe:	b901      	cbnz	r1, 8025ec2 <__ascii_mbtowc+0x6>
 8025ec0:	a901      	add	r1, sp, #4
 8025ec2:	b142      	cbz	r2, 8025ed6 <__ascii_mbtowc+0x1a>
 8025ec4:	b14b      	cbz	r3, 8025eda <__ascii_mbtowc+0x1e>
 8025ec6:	7813      	ldrb	r3, [r2, #0]
 8025ec8:	600b      	str	r3, [r1, #0]
 8025eca:	7812      	ldrb	r2, [r2, #0]
 8025ecc:	1e10      	subs	r0, r2, #0
 8025ece:	bf18      	it	ne
 8025ed0:	2001      	movne	r0, #1
 8025ed2:	b002      	add	sp, #8
 8025ed4:	4770      	bx	lr
 8025ed6:	4610      	mov	r0, r2
 8025ed8:	e7fb      	b.n	8025ed2 <__ascii_mbtowc+0x16>
 8025eda:	f06f 0001 	mvn.w	r0, #1
 8025ede:	e7f8      	b.n	8025ed2 <__ascii_mbtowc+0x16>

08025ee0 <memcmp>:
 8025ee0:	b510      	push	{r4, lr}
 8025ee2:	3901      	subs	r1, #1
 8025ee4:	4402      	add	r2, r0
 8025ee6:	4290      	cmp	r0, r2
 8025ee8:	d101      	bne.n	8025eee <memcmp+0xe>
 8025eea:	2000      	movs	r0, #0
 8025eec:	e005      	b.n	8025efa <memcmp+0x1a>
 8025eee:	7803      	ldrb	r3, [r0, #0]
 8025ef0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8025ef4:	42a3      	cmp	r3, r4
 8025ef6:	d001      	beq.n	8025efc <memcmp+0x1c>
 8025ef8:	1b18      	subs	r0, r3, r4
 8025efa:	bd10      	pop	{r4, pc}
 8025efc:	3001      	adds	r0, #1
 8025efe:	e7f2      	b.n	8025ee6 <memcmp+0x6>

08025f00 <memcpy>:
 8025f00:	440a      	add	r2, r1
 8025f02:	4291      	cmp	r1, r2
 8025f04:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8025f08:	d100      	bne.n	8025f0c <memcpy+0xc>
 8025f0a:	4770      	bx	lr
 8025f0c:	b510      	push	{r4, lr}
 8025f0e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8025f12:	f803 4f01 	strb.w	r4, [r3, #1]!
 8025f16:	4291      	cmp	r1, r2
 8025f18:	d1f9      	bne.n	8025f0e <memcpy+0xe>
 8025f1a:	bd10      	pop	{r4, pc}

08025f1c <memmove>:
 8025f1c:	4288      	cmp	r0, r1
 8025f1e:	b510      	push	{r4, lr}
 8025f20:	eb01 0402 	add.w	r4, r1, r2
 8025f24:	d902      	bls.n	8025f2c <memmove+0x10>
 8025f26:	4284      	cmp	r4, r0
 8025f28:	4623      	mov	r3, r4
 8025f2a:	d807      	bhi.n	8025f3c <memmove+0x20>
 8025f2c:	1e43      	subs	r3, r0, #1
 8025f2e:	42a1      	cmp	r1, r4
 8025f30:	d008      	beq.n	8025f44 <memmove+0x28>
 8025f32:	f811 2b01 	ldrb.w	r2, [r1], #1
 8025f36:	f803 2f01 	strb.w	r2, [r3, #1]!
 8025f3a:	e7f8      	b.n	8025f2e <memmove+0x12>
 8025f3c:	4402      	add	r2, r0
 8025f3e:	4601      	mov	r1, r0
 8025f40:	428a      	cmp	r2, r1
 8025f42:	d100      	bne.n	8025f46 <memmove+0x2a>
 8025f44:	bd10      	pop	{r4, pc}
 8025f46:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8025f4a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8025f4e:	e7f7      	b.n	8025f40 <memmove+0x24>

08025f50 <memset>:
 8025f50:	4402      	add	r2, r0
 8025f52:	4603      	mov	r3, r0
 8025f54:	4293      	cmp	r3, r2
 8025f56:	d100      	bne.n	8025f5a <memset+0xa>
 8025f58:	4770      	bx	lr
 8025f5a:	f803 1b01 	strb.w	r1, [r3], #1
 8025f5e:	e7f9      	b.n	8025f54 <memset+0x4>

08025f60 <_free_r>:
 8025f60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8025f62:	2900      	cmp	r1, #0
 8025f64:	d044      	beq.n	8025ff0 <_free_r+0x90>
 8025f66:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8025f6a:	9001      	str	r0, [sp, #4]
 8025f6c:	2b00      	cmp	r3, #0
 8025f6e:	f1a1 0404 	sub.w	r4, r1, #4
 8025f72:	bfb8      	it	lt
 8025f74:	18e4      	addlt	r4, r4, r3
 8025f76:	f006 f889 	bl	802c08c <__malloc_lock>
 8025f7a:	4a1e      	ldr	r2, [pc, #120]	; (8025ff4 <_free_r+0x94>)
 8025f7c:	9801      	ldr	r0, [sp, #4]
 8025f7e:	6813      	ldr	r3, [r2, #0]
 8025f80:	b933      	cbnz	r3, 8025f90 <_free_r+0x30>
 8025f82:	6063      	str	r3, [r4, #4]
 8025f84:	6014      	str	r4, [r2, #0]
 8025f86:	b003      	add	sp, #12
 8025f88:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8025f8c:	f006 b884 	b.w	802c098 <__malloc_unlock>
 8025f90:	42a3      	cmp	r3, r4
 8025f92:	d908      	bls.n	8025fa6 <_free_r+0x46>
 8025f94:	6825      	ldr	r5, [r4, #0]
 8025f96:	1961      	adds	r1, r4, r5
 8025f98:	428b      	cmp	r3, r1
 8025f9a:	bf01      	itttt	eq
 8025f9c:	6819      	ldreq	r1, [r3, #0]
 8025f9e:	685b      	ldreq	r3, [r3, #4]
 8025fa0:	1949      	addeq	r1, r1, r5
 8025fa2:	6021      	streq	r1, [r4, #0]
 8025fa4:	e7ed      	b.n	8025f82 <_free_r+0x22>
 8025fa6:	461a      	mov	r2, r3
 8025fa8:	685b      	ldr	r3, [r3, #4]
 8025faa:	b10b      	cbz	r3, 8025fb0 <_free_r+0x50>
 8025fac:	42a3      	cmp	r3, r4
 8025fae:	d9fa      	bls.n	8025fa6 <_free_r+0x46>
 8025fb0:	6811      	ldr	r1, [r2, #0]
 8025fb2:	1855      	adds	r5, r2, r1
 8025fb4:	42a5      	cmp	r5, r4
 8025fb6:	d10b      	bne.n	8025fd0 <_free_r+0x70>
 8025fb8:	6824      	ldr	r4, [r4, #0]
 8025fba:	4421      	add	r1, r4
 8025fbc:	1854      	adds	r4, r2, r1
 8025fbe:	42a3      	cmp	r3, r4
 8025fc0:	6011      	str	r1, [r2, #0]
 8025fc2:	d1e0      	bne.n	8025f86 <_free_r+0x26>
 8025fc4:	681c      	ldr	r4, [r3, #0]
 8025fc6:	685b      	ldr	r3, [r3, #4]
 8025fc8:	6053      	str	r3, [r2, #4]
 8025fca:	4421      	add	r1, r4
 8025fcc:	6011      	str	r1, [r2, #0]
 8025fce:	e7da      	b.n	8025f86 <_free_r+0x26>
 8025fd0:	d902      	bls.n	8025fd8 <_free_r+0x78>
 8025fd2:	230c      	movs	r3, #12
 8025fd4:	6003      	str	r3, [r0, #0]
 8025fd6:	e7d6      	b.n	8025f86 <_free_r+0x26>
 8025fd8:	6825      	ldr	r5, [r4, #0]
 8025fda:	1961      	adds	r1, r4, r5
 8025fdc:	428b      	cmp	r3, r1
 8025fde:	bf04      	itt	eq
 8025fe0:	6819      	ldreq	r1, [r3, #0]
 8025fe2:	685b      	ldreq	r3, [r3, #4]
 8025fe4:	6063      	str	r3, [r4, #4]
 8025fe6:	bf04      	itt	eq
 8025fe8:	1949      	addeq	r1, r1, r5
 8025fea:	6021      	streq	r1, [r4, #0]
 8025fec:	6054      	str	r4, [r2, #4]
 8025fee:	e7ca      	b.n	8025f86 <_free_r+0x26>
 8025ff0:	b003      	add	sp, #12
 8025ff2:	bd30      	pop	{r4, r5, pc}
 8025ff4:	200042cc 	.word	0x200042cc

08025ff8 <sbrk_aligned>:
 8025ff8:	b570      	push	{r4, r5, r6, lr}
 8025ffa:	4e0e      	ldr	r6, [pc, #56]	; (8026034 <sbrk_aligned+0x3c>)
 8025ffc:	460c      	mov	r4, r1
 8025ffe:	6831      	ldr	r1, [r6, #0]
 8026000:	4605      	mov	r5, r0
 8026002:	b911      	cbnz	r1, 802600a <sbrk_aligned+0x12>
 8026004:	f001 f910 	bl	8027228 <_sbrk_r>
 8026008:	6030      	str	r0, [r6, #0]
 802600a:	4621      	mov	r1, r4
 802600c:	4628      	mov	r0, r5
 802600e:	f001 f90b 	bl	8027228 <_sbrk_r>
 8026012:	1c43      	adds	r3, r0, #1
 8026014:	d00a      	beq.n	802602c <sbrk_aligned+0x34>
 8026016:	1cc4      	adds	r4, r0, #3
 8026018:	f024 0403 	bic.w	r4, r4, #3
 802601c:	42a0      	cmp	r0, r4
 802601e:	d007      	beq.n	8026030 <sbrk_aligned+0x38>
 8026020:	1a21      	subs	r1, r4, r0
 8026022:	4628      	mov	r0, r5
 8026024:	f001 f900 	bl	8027228 <_sbrk_r>
 8026028:	3001      	adds	r0, #1
 802602a:	d101      	bne.n	8026030 <sbrk_aligned+0x38>
 802602c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8026030:	4620      	mov	r0, r4
 8026032:	bd70      	pop	{r4, r5, r6, pc}
 8026034:	200042d0 	.word	0x200042d0

08026038 <_malloc_r>:
 8026038:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802603c:	1ccd      	adds	r5, r1, #3
 802603e:	f025 0503 	bic.w	r5, r5, #3
 8026042:	3508      	adds	r5, #8
 8026044:	2d0c      	cmp	r5, #12
 8026046:	bf38      	it	cc
 8026048:	250c      	movcc	r5, #12
 802604a:	2d00      	cmp	r5, #0
 802604c:	4607      	mov	r7, r0
 802604e:	db01      	blt.n	8026054 <_malloc_r+0x1c>
 8026050:	42a9      	cmp	r1, r5
 8026052:	d905      	bls.n	8026060 <_malloc_r+0x28>
 8026054:	230c      	movs	r3, #12
 8026056:	603b      	str	r3, [r7, #0]
 8026058:	2600      	movs	r6, #0
 802605a:	4630      	mov	r0, r6
 802605c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026060:	4e2e      	ldr	r6, [pc, #184]	; (802611c <_malloc_r+0xe4>)
 8026062:	f006 f813 	bl	802c08c <__malloc_lock>
 8026066:	6833      	ldr	r3, [r6, #0]
 8026068:	461c      	mov	r4, r3
 802606a:	bb34      	cbnz	r4, 80260ba <_malloc_r+0x82>
 802606c:	4629      	mov	r1, r5
 802606e:	4638      	mov	r0, r7
 8026070:	f7ff ffc2 	bl	8025ff8 <sbrk_aligned>
 8026074:	1c43      	adds	r3, r0, #1
 8026076:	4604      	mov	r4, r0
 8026078:	d14d      	bne.n	8026116 <_malloc_r+0xde>
 802607a:	6834      	ldr	r4, [r6, #0]
 802607c:	4626      	mov	r6, r4
 802607e:	2e00      	cmp	r6, #0
 8026080:	d140      	bne.n	8026104 <_malloc_r+0xcc>
 8026082:	6823      	ldr	r3, [r4, #0]
 8026084:	4631      	mov	r1, r6
 8026086:	4638      	mov	r0, r7
 8026088:	eb04 0803 	add.w	r8, r4, r3
 802608c:	f001 f8cc 	bl	8027228 <_sbrk_r>
 8026090:	4580      	cmp	r8, r0
 8026092:	d13a      	bne.n	802610a <_malloc_r+0xd2>
 8026094:	6821      	ldr	r1, [r4, #0]
 8026096:	3503      	adds	r5, #3
 8026098:	1a6d      	subs	r5, r5, r1
 802609a:	f025 0503 	bic.w	r5, r5, #3
 802609e:	3508      	adds	r5, #8
 80260a0:	2d0c      	cmp	r5, #12
 80260a2:	bf38      	it	cc
 80260a4:	250c      	movcc	r5, #12
 80260a6:	4629      	mov	r1, r5
 80260a8:	4638      	mov	r0, r7
 80260aa:	f7ff ffa5 	bl	8025ff8 <sbrk_aligned>
 80260ae:	3001      	adds	r0, #1
 80260b0:	d02b      	beq.n	802610a <_malloc_r+0xd2>
 80260b2:	6823      	ldr	r3, [r4, #0]
 80260b4:	442b      	add	r3, r5
 80260b6:	6023      	str	r3, [r4, #0]
 80260b8:	e00e      	b.n	80260d8 <_malloc_r+0xa0>
 80260ba:	6822      	ldr	r2, [r4, #0]
 80260bc:	1b52      	subs	r2, r2, r5
 80260be:	d41e      	bmi.n	80260fe <_malloc_r+0xc6>
 80260c0:	2a0b      	cmp	r2, #11
 80260c2:	d916      	bls.n	80260f2 <_malloc_r+0xba>
 80260c4:	1961      	adds	r1, r4, r5
 80260c6:	42a3      	cmp	r3, r4
 80260c8:	6025      	str	r5, [r4, #0]
 80260ca:	bf18      	it	ne
 80260cc:	6059      	strne	r1, [r3, #4]
 80260ce:	6863      	ldr	r3, [r4, #4]
 80260d0:	bf08      	it	eq
 80260d2:	6031      	streq	r1, [r6, #0]
 80260d4:	5162      	str	r2, [r4, r5]
 80260d6:	604b      	str	r3, [r1, #4]
 80260d8:	4638      	mov	r0, r7
 80260da:	f104 060b 	add.w	r6, r4, #11
 80260de:	f005 ffdb 	bl	802c098 <__malloc_unlock>
 80260e2:	f026 0607 	bic.w	r6, r6, #7
 80260e6:	1d23      	adds	r3, r4, #4
 80260e8:	1af2      	subs	r2, r6, r3
 80260ea:	d0b6      	beq.n	802605a <_malloc_r+0x22>
 80260ec:	1b9b      	subs	r3, r3, r6
 80260ee:	50a3      	str	r3, [r4, r2]
 80260f0:	e7b3      	b.n	802605a <_malloc_r+0x22>
 80260f2:	6862      	ldr	r2, [r4, #4]
 80260f4:	42a3      	cmp	r3, r4
 80260f6:	bf0c      	ite	eq
 80260f8:	6032      	streq	r2, [r6, #0]
 80260fa:	605a      	strne	r2, [r3, #4]
 80260fc:	e7ec      	b.n	80260d8 <_malloc_r+0xa0>
 80260fe:	4623      	mov	r3, r4
 8026100:	6864      	ldr	r4, [r4, #4]
 8026102:	e7b2      	b.n	802606a <_malloc_r+0x32>
 8026104:	4634      	mov	r4, r6
 8026106:	6876      	ldr	r6, [r6, #4]
 8026108:	e7b9      	b.n	802607e <_malloc_r+0x46>
 802610a:	230c      	movs	r3, #12
 802610c:	603b      	str	r3, [r7, #0]
 802610e:	4638      	mov	r0, r7
 8026110:	f005 ffc2 	bl	802c098 <__malloc_unlock>
 8026114:	e7a1      	b.n	802605a <_malloc_r+0x22>
 8026116:	6025      	str	r5, [r4, #0]
 8026118:	e7de      	b.n	80260d8 <_malloc_r+0xa0>
 802611a:	bf00      	nop
 802611c:	200042cc 	.word	0x200042cc

08026120 <__cvt>:
 8026120:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8026124:	ec55 4b10 	vmov	r4, r5, d0
 8026128:	2d00      	cmp	r5, #0
 802612a:	460e      	mov	r6, r1
 802612c:	4619      	mov	r1, r3
 802612e:	462b      	mov	r3, r5
 8026130:	bfbb      	ittet	lt
 8026132:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8026136:	461d      	movlt	r5, r3
 8026138:	2300      	movge	r3, #0
 802613a:	232d      	movlt	r3, #45	; 0x2d
 802613c:	700b      	strb	r3, [r1, #0]
 802613e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026140:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8026144:	4691      	mov	r9, r2
 8026146:	f023 0820 	bic.w	r8, r3, #32
 802614a:	bfbc      	itt	lt
 802614c:	4622      	movlt	r2, r4
 802614e:	4614      	movlt	r4, r2
 8026150:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8026154:	d005      	beq.n	8026162 <__cvt+0x42>
 8026156:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 802615a:	d100      	bne.n	802615e <__cvt+0x3e>
 802615c:	3601      	adds	r6, #1
 802615e:	2102      	movs	r1, #2
 8026160:	e000      	b.n	8026164 <__cvt+0x44>
 8026162:	2103      	movs	r1, #3
 8026164:	ab03      	add	r3, sp, #12
 8026166:	9301      	str	r3, [sp, #4]
 8026168:	ab02      	add	r3, sp, #8
 802616a:	9300      	str	r3, [sp, #0]
 802616c:	ec45 4b10 	vmov	d0, r4, r5
 8026170:	4653      	mov	r3, sl
 8026172:	4632      	mov	r2, r6
 8026174:	f004 fc3c 	bl	802a9f0 <_dtoa_r>
 8026178:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 802617c:	4607      	mov	r7, r0
 802617e:	d102      	bne.n	8026186 <__cvt+0x66>
 8026180:	f019 0f01 	tst.w	r9, #1
 8026184:	d022      	beq.n	80261cc <__cvt+0xac>
 8026186:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 802618a:	eb07 0906 	add.w	r9, r7, r6
 802618e:	d110      	bne.n	80261b2 <__cvt+0x92>
 8026190:	783b      	ldrb	r3, [r7, #0]
 8026192:	2b30      	cmp	r3, #48	; 0x30
 8026194:	d10a      	bne.n	80261ac <__cvt+0x8c>
 8026196:	2200      	movs	r2, #0
 8026198:	2300      	movs	r3, #0
 802619a:	4620      	mov	r0, r4
 802619c:	4629      	mov	r1, r5
 802619e:	f7da fc9d 	bl	8000adc <__aeabi_dcmpeq>
 80261a2:	b918      	cbnz	r0, 80261ac <__cvt+0x8c>
 80261a4:	f1c6 0601 	rsb	r6, r6, #1
 80261a8:	f8ca 6000 	str.w	r6, [sl]
 80261ac:	f8da 3000 	ldr.w	r3, [sl]
 80261b0:	4499      	add	r9, r3
 80261b2:	2200      	movs	r2, #0
 80261b4:	2300      	movs	r3, #0
 80261b6:	4620      	mov	r0, r4
 80261b8:	4629      	mov	r1, r5
 80261ba:	f7da fc8f 	bl	8000adc <__aeabi_dcmpeq>
 80261be:	b108      	cbz	r0, 80261c4 <__cvt+0xa4>
 80261c0:	f8cd 900c 	str.w	r9, [sp, #12]
 80261c4:	2230      	movs	r2, #48	; 0x30
 80261c6:	9b03      	ldr	r3, [sp, #12]
 80261c8:	454b      	cmp	r3, r9
 80261ca:	d307      	bcc.n	80261dc <__cvt+0xbc>
 80261cc:	9b03      	ldr	r3, [sp, #12]
 80261ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80261d0:	1bdb      	subs	r3, r3, r7
 80261d2:	4638      	mov	r0, r7
 80261d4:	6013      	str	r3, [r2, #0]
 80261d6:	b004      	add	sp, #16
 80261d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80261dc:	1c59      	adds	r1, r3, #1
 80261de:	9103      	str	r1, [sp, #12]
 80261e0:	701a      	strb	r2, [r3, #0]
 80261e2:	e7f0      	b.n	80261c6 <__cvt+0xa6>

080261e4 <__exponent>:
 80261e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80261e6:	4603      	mov	r3, r0
 80261e8:	2900      	cmp	r1, #0
 80261ea:	bfb8      	it	lt
 80261ec:	4249      	neglt	r1, r1
 80261ee:	f803 2b02 	strb.w	r2, [r3], #2
 80261f2:	bfb4      	ite	lt
 80261f4:	222d      	movlt	r2, #45	; 0x2d
 80261f6:	222b      	movge	r2, #43	; 0x2b
 80261f8:	2909      	cmp	r1, #9
 80261fa:	7042      	strb	r2, [r0, #1]
 80261fc:	dd2a      	ble.n	8026254 <__exponent+0x70>
 80261fe:	f10d 0407 	add.w	r4, sp, #7
 8026202:	46a4      	mov	ip, r4
 8026204:	270a      	movs	r7, #10
 8026206:	46a6      	mov	lr, r4
 8026208:	460a      	mov	r2, r1
 802620a:	fb91 f6f7 	sdiv	r6, r1, r7
 802620e:	fb07 1516 	mls	r5, r7, r6, r1
 8026212:	3530      	adds	r5, #48	; 0x30
 8026214:	2a63      	cmp	r2, #99	; 0x63
 8026216:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 802621a:	f80e 5c01 	strb.w	r5, [lr, #-1]
 802621e:	4631      	mov	r1, r6
 8026220:	dcf1      	bgt.n	8026206 <__exponent+0x22>
 8026222:	3130      	adds	r1, #48	; 0x30
 8026224:	f1ae 0502 	sub.w	r5, lr, #2
 8026228:	f804 1c01 	strb.w	r1, [r4, #-1]
 802622c:	1c44      	adds	r4, r0, #1
 802622e:	4629      	mov	r1, r5
 8026230:	4561      	cmp	r1, ip
 8026232:	d30a      	bcc.n	802624a <__exponent+0x66>
 8026234:	f10d 0209 	add.w	r2, sp, #9
 8026238:	eba2 020e 	sub.w	r2, r2, lr
 802623c:	4565      	cmp	r5, ip
 802623e:	bf88      	it	hi
 8026240:	2200      	movhi	r2, #0
 8026242:	4413      	add	r3, r2
 8026244:	1a18      	subs	r0, r3, r0
 8026246:	b003      	add	sp, #12
 8026248:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802624a:	f811 2b01 	ldrb.w	r2, [r1], #1
 802624e:	f804 2f01 	strb.w	r2, [r4, #1]!
 8026252:	e7ed      	b.n	8026230 <__exponent+0x4c>
 8026254:	2330      	movs	r3, #48	; 0x30
 8026256:	3130      	adds	r1, #48	; 0x30
 8026258:	7083      	strb	r3, [r0, #2]
 802625a:	70c1      	strb	r1, [r0, #3]
 802625c:	1d03      	adds	r3, r0, #4
 802625e:	e7f1      	b.n	8026244 <__exponent+0x60>

08026260 <_printf_float>:
 8026260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026264:	ed2d 8b02 	vpush	{d8}
 8026268:	b08d      	sub	sp, #52	; 0x34
 802626a:	460c      	mov	r4, r1
 802626c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8026270:	4616      	mov	r6, r2
 8026272:	461f      	mov	r7, r3
 8026274:	4605      	mov	r5, r0
 8026276:	f005 fee5 	bl	802c044 <_localeconv_r>
 802627a:	f8d0 a000 	ldr.w	sl, [r0]
 802627e:	4650      	mov	r0, sl
 8026280:	f7da f800 	bl	8000284 <strlen>
 8026284:	2300      	movs	r3, #0
 8026286:	930a      	str	r3, [sp, #40]	; 0x28
 8026288:	6823      	ldr	r3, [r4, #0]
 802628a:	9305      	str	r3, [sp, #20]
 802628c:	f8d8 3000 	ldr.w	r3, [r8]
 8026290:	f894 b018 	ldrb.w	fp, [r4, #24]
 8026294:	3307      	adds	r3, #7
 8026296:	f023 0307 	bic.w	r3, r3, #7
 802629a:	f103 0208 	add.w	r2, r3, #8
 802629e:	f8c8 2000 	str.w	r2, [r8]
 80262a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80262a6:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80262aa:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 80262ae:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80262b2:	9307      	str	r3, [sp, #28]
 80262b4:	f8cd 8018 	str.w	r8, [sp, #24]
 80262b8:	ee08 0a10 	vmov	s16, r0
 80262bc:	4b9f      	ldr	r3, [pc, #636]	; (802653c <_printf_float+0x2dc>)
 80262be:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80262c2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80262c6:	f7da fc3b 	bl	8000b40 <__aeabi_dcmpun>
 80262ca:	bb88      	cbnz	r0, 8026330 <_printf_float+0xd0>
 80262cc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80262d0:	4b9a      	ldr	r3, [pc, #616]	; (802653c <_printf_float+0x2dc>)
 80262d2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80262d6:	f7da fc15 	bl	8000b04 <__aeabi_dcmple>
 80262da:	bb48      	cbnz	r0, 8026330 <_printf_float+0xd0>
 80262dc:	2200      	movs	r2, #0
 80262de:	2300      	movs	r3, #0
 80262e0:	4640      	mov	r0, r8
 80262e2:	4649      	mov	r1, r9
 80262e4:	f7da fc04 	bl	8000af0 <__aeabi_dcmplt>
 80262e8:	b110      	cbz	r0, 80262f0 <_printf_float+0x90>
 80262ea:	232d      	movs	r3, #45	; 0x2d
 80262ec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80262f0:	4b93      	ldr	r3, [pc, #588]	; (8026540 <_printf_float+0x2e0>)
 80262f2:	4894      	ldr	r0, [pc, #592]	; (8026544 <_printf_float+0x2e4>)
 80262f4:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 80262f8:	bf94      	ite	ls
 80262fa:	4698      	movls	r8, r3
 80262fc:	4680      	movhi	r8, r0
 80262fe:	2303      	movs	r3, #3
 8026300:	6123      	str	r3, [r4, #16]
 8026302:	9b05      	ldr	r3, [sp, #20]
 8026304:	f023 0204 	bic.w	r2, r3, #4
 8026308:	6022      	str	r2, [r4, #0]
 802630a:	f04f 0900 	mov.w	r9, #0
 802630e:	9700      	str	r7, [sp, #0]
 8026310:	4633      	mov	r3, r6
 8026312:	aa0b      	add	r2, sp, #44	; 0x2c
 8026314:	4621      	mov	r1, r4
 8026316:	4628      	mov	r0, r5
 8026318:	f000 f9d8 	bl	80266cc <_printf_common>
 802631c:	3001      	adds	r0, #1
 802631e:	f040 8090 	bne.w	8026442 <_printf_float+0x1e2>
 8026322:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026326:	b00d      	add	sp, #52	; 0x34
 8026328:	ecbd 8b02 	vpop	{d8}
 802632c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026330:	4642      	mov	r2, r8
 8026332:	464b      	mov	r3, r9
 8026334:	4640      	mov	r0, r8
 8026336:	4649      	mov	r1, r9
 8026338:	f7da fc02 	bl	8000b40 <__aeabi_dcmpun>
 802633c:	b140      	cbz	r0, 8026350 <_printf_float+0xf0>
 802633e:	464b      	mov	r3, r9
 8026340:	2b00      	cmp	r3, #0
 8026342:	bfbc      	itt	lt
 8026344:	232d      	movlt	r3, #45	; 0x2d
 8026346:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 802634a:	487f      	ldr	r0, [pc, #508]	; (8026548 <_printf_float+0x2e8>)
 802634c:	4b7f      	ldr	r3, [pc, #508]	; (802654c <_printf_float+0x2ec>)
 802634e:	e7d1      	b.n	80262f4 <_printf_float+0x94>
 8026350:	6863      	ldr	r3, [r4, #4]
 8026352:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8026356:	9206      	str	r2, [sp, #24]
 8026358:	1c5a      	adds	r2, r3, #1
 802635a:	d13f      	bne.n	80263dc <_printf_float+0x17c>
 802635c:	2306      	movs	r3, #6
 802635e:	6063      	str	r3, [r4, #4]
 8026360:	9b05      	ldr	r3, [sp, #20]
 8026362:	6861      	ldr	r1, [r4, #4]
 8026364:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8026368:	2300      	movs	r3, #0
 802636a:	9303      	str	r3, [sp, #12]
 802636c:	ab0a      	add	r3, sp, #40	; 0x28
 802636e:	e9cd b301 	strd	fp, r3, [sp, #4]
 8026372:	ab09      	add	r3, sp, #36	; 0x24
 8026374:	ec49 8b10 	vmov	d0, r8, r9
 8026378:	9300      	str	r3, [sp, #0]
 802637a:	6022      	str	r2, [r4, #0]
 802637c:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8026380:	4628      	mov	r0, r5
 8026382:	f7ff fecd 	bl	8026120 <__cvt>
 8026386:	9b06      	ldr	r3, [sp, #24]
 8026388:	9909      	ldr	r1, [sp, #36]	; 0x24
 802638a:	2b47      	cmp	r3, #71	; 0x47
 802638c:	4680      	mov	r8, r0
 802638e:	d108      	bne.n	80263a2 <_printf_float+0x142>
 8026390:	1cc8      	adds	r0, r1, #3
 8026392:	db02      	blt.n	802639a <_printf_float+0x13a>
 8026394:	6863      	ldr	r3, [r4, #4]
 8026396:	4299      	cmp	r1, r3
 8026398:	dd41      	ble.n	802641e <_printf_float+0x1be>
 802639a:	f1ab 0b02 	sub.w	fp, fp, #2
 802639e:	fa5f fb8b 	uxtb.w	fp, fp
 80263a2:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80263a6:	d820      	bhi.n	80263ea <_printf_float+0x18a>
 80263a8:	3901      	subs	r1, #1
 80263aa:	465a      	mov	r2, fp
 80263ac:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80263b0:	9109      	str	r1, [sp, #36]	; 0x24
 80263b2:	f7ff ff17 	bl	80261e4 <__exponent>
 80263b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80263b8:	1813      	adds	r3, r2, r0
 80263ba:	2a01      	cmp	r2, #1
 80263bc:	4681      	mov	r9, r0
 80263be:	6123      	str	r3, [r4, #16]
 80263c0:	dc02      	bgt.n	80263c8 <_printf_float+0x168>
 80263c2:	6822      	ldr	r2, [r4, #0]
 80263c4:	07d2      	lsls	r2, r2, #31
 80263c6:	d501      	bpl.n	80263cc <_printf_float+0x16c>
 80263c8:	3301      	adds	r3, #1
 80263ca:	6123      	str	r3, [r4, #16]
 80263cc:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80263d0:	2b00      	cmp	r3, #0
 80263d2:	d09c      	beq.n	802630e <_printf_float+0xae>
 80263d4:	232d      	movs	r3, #45	; 0x2d
 80263d6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80263da:	e798      	b.n	802630e <_printf_float+0xae>
 80263dc:	9a06      	ldr	r2, [sp, #24]
 80263de:	2a47      	cmp	r2, #71	; 0x47
 80263e0:	d1be      	bne.n	8026360 <_printf_float+0x100>
 80263e2:	2b00      	cmp	r3, #0
 80263e4:	d1bc      	bne.n	8026360 <_printf_float+0x100>
 80263e6:	2301      	movs	r3, #1
 80263e8:	e7b9      	b.n	802635e <_printf_float+0xfe>
 80263ea:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 80263ee:	d118      	bne.n	8026422 <_printf_float+0x1c2>
 80263f0:	2900      	cmp	r1, #0
 80263f2:	6863      	ldr	r3, [r4, #4]
 80263f4:	dd0b      	ble.n	802640e <_printf_float+0x1ae>
 80263f6:	6121      	str	r1, [r4, #16]
 80263f8:	b913      	cbnz	r3, 8026400 <_printf_float+0x1a0>
 80263fa:	6822      	ldr	r2, [r4, #0]
 80263fc:	07d0      	lsls	r0, r2, #31
 80263fe:	d502      	bpl.n	8026406 <_printf_float+0x1a6>
 8026400:	3301      	adds	r3, #1
 8026402:	440b      	add	r3, r1
 8026404:	6123      	str	r3, [r4, #16]
 8026406:	65a1      	str	r1, [r4, #88]	; 0x58
 8026408:	f04f 0900 	mov.w	r9, #0
 802640c:	e7de      	b.n	80263cc <_printf_float+0x16c>
 802640e:	b913      	cbnz	r3, 8026416 <_printf_float+0x1b6>
 8026410:	6822      	ldr	r2, [r4, #0]
 8026412:	07d2      	lsls	r2, r2, #31
 8026414:	d501      	bpl.n	802641a <_printf_float+0x1ba>
 8026416:	3302      	adds	r3, #2
 8026418:	e7f4      	b.n	8026404 <_printf_float+0x1a4>
 802641a:	2301      	movs	r3, #1
 802641c:	e7f2      	b.n	8026404 <_printf_float+0x1a4>
 802641e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8026422:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026424:	4299      	cmp	r1, r3
 8026426:	db05      	blt.n	8026434 <_printf_float+0x1d4>
 8026428:	6823      	ldr	r3, [r4, #0]
 802642a:	6121      	str	r1, [r4, #16]
 802642c:	07d8      	lsls	r0, r3, #31
 802642e:	d5ea      	bpl.n	8026406 <_printf_float+0x1a6>
 8026430:	1c4b      	adds	r3, r1, #1
 8026432:	e7e7      	b.n	8026404 <_printf_float+0x1a4>
 8026434:	2900      	cmp	r1, #0
 8026436:	bfd4      	ite	le
 8026438:	f1c1 0202 	rsble	r2, r1, #2
 802643c:	2201      	movgt	r2, #1
 802643e:	4413      	add	r3, r2
 8026440:	e7e0      	b.n	8026404 <_printf_float+0x1a4>
 8026442:	6823      	ldr	r3, [r4, #0]
 8026444:	055a      	lsls	r2, r3, #21
 8026446:	d407      	bmi.n	8026458 <_printf_float+0x1f8>
 8026448:	6923      	ldr	r3, [r4, #16]
 802644a:	4642      	mov	r2, r8
 802644c:	4631      	mov	r1, r6
 802644e:	4628      	mov	r0, r5
 8026450:	47b8      	blx	r7
 8026452:	3001      	adds	r0, #1
 8026454:	d12c      	bne.n	80264b0 <_printf_float+0x250>
 8026456:	e764      	b.n	8026322 <_printf_float+0xc2>
 8026458:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 802645c:	f240 80e0 	bls.w	8026620 <_printf_float+0x3c0>
 8026460:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8026464:	2200      	movs	r2, #0
 8026466:	2300      	movs	r3, #0
 8026468:	f7da fb38 	bl	8000adc <__aeabi_dcmpeq>
 802646c:	2800      	cmp	r0, #0
 802646e:	d034      	beq.n	80264da <_printf_float+0x27a>
 8026470:	4a37      	ldr	r2, [pc, #220]	; (8026550 <_printf_float+0x2f0>)
 8026472:	2301      	movs	r3, #1
 8026474:	4631      	mov	r1, r6
 8026476:	4628      	mov	r0, r5
 8026478:	47b8      	blx	r7
 802647a:	3001      	adds	r0, #1
 802647c:	f43f af51 	beq.w	8026322 <_printf_float+0xc2>
 8026480:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026484:	429a      	cmp	r2, r3
 8026486:	db02      	blt.n	802648e <_printf_float+0x22e>
 8026488:	6823      	ldr	r3, [r4, #0]
 802648a:	07d8      	lsls	r0, r3, #31
 802648c:	d510      	bpl.n	80264b0 <_printf_float+0x250>
 802648e:	ee18 3a10 	vmov	r3, s16
 8026492:	4652      	mov	r2, sl
 8026494:	4631      	mov	r1, r6
 8026496:	4628      	mov	r0, r5
 8026498:	47b8      	blx	r7
 802649a:	3001      	adds	r0, #1
 802649c:	f43f af41 	beq.w	8026322 <_printf_float+0xc2>
 80264a0:	f04f 0800 	mov.w	r8, #0
 80264a4:	f104 091a 	add.w	r9, r4, #26
 80264a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80264aa:	3b01      	subs	r3, #1
 80264ac:	4543      	cmp	r3, r8
 80264ae:	dc09      	bgt.n	80264c4 <_printf_float+0x264>
 80264b0:	6823      	ldr	r3, [r4, #0]
 80264b2:	079b      	lsls	r3, r3, #30
 80264b4:	f100 8105 	bmi.w	80266c2 <_printf_float+0x462>
 80264b8:	68e0      	ldr	r0, [r4, #12]
 80264ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80264bc:	4298      	cmp	r0, r3
 80264be:	bfb8      	it	lt
 80264c0:	4618      	movlt	r0, r3
 80264c2:	e730      	b.n	8026326 <_printf_float+0xc6>
 80264c4:	2301      	movs	r3, #1
 80264c6:	464a      	mov	r2, r9
 80264c8:	4631      	mov	r1, r6
 80264ca:	4628      	mov	r0, r5
 80264cc:	47b8      	blx	r7
 80264ce:	3001      	adds	r0, #1
 80264d0:	f43f af27 	beq.w	8026322 <_printf_float+0xc2>
 80264d4:	f108 0801 	add.w	r8, r8, #1
 80264d8:	e7e6      	b.n	80264a8 <_printf_float+0x248>
 80264da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80264dc:	2b00      	cmp	r3, #0
 80264de:	dc39      	bgt.n	8026554 <_printf_float+0x2f4>
 80264e0:	4a1b      	ldr	r2, [pc, #108]	; (8026550 <_printf_float+0x2f0>)
 80264e2:	2301      	movs	r3, #1
 80264e4:	4631      	mov	r1, r6
 80264e6:	4628      	mov	r0, r5
 80264e8:	47b8      	blx	r7
 80264ea:	3001      	adds	r0, #1
 80264ec:	f43f af19 	beq.w	8026322 <_printf_float+0xc2>
 80264f0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80264f4:	4313      	orrs	r3, r2
 80264f6:	d102      	bne.n	80264fe <_printf_float+0x29e>
 80264f8:	6823      	ldr	r3, [r4, #0]
 80264fa:	07d9      	lsls	r1, r3, #31
 80264fc:	d5d8      	bpl.n	80264b0 <_printf_float+0x250>
 80264fe:	ee18 3a10 	vmov	r3, s16
 8026502:	4652      	mov	r2, sl
 8026504:	4631      	mov	r1, r6
 8026506:	4628      	mov	r0, r5
 8026508:	47b8      	blx	r7
 802650a:	3001      	adds	r0, #1
 802650c:	f43f af09 	beq.w	8026322 <_printf_float+0xc2>
 8026510:	f04f 0900 	mov.w	r9, #0
 8026514:	f104 0a1a 	add.w	sl, r4, #26
 8026518:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802651a:	425b      	negs	r3, r3
 802651c:	454b      	cmp	r3, r9
 802651e:	dc01      	bgt.n	8026524 <_printf_float+0x2c4>
 8026520:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026522:	e792      	b.n	802644a <_printf_float+0x1ea>
 8026524:	2301      	movs	r3, #1
 8026526:	4652      	mov	r2, sl
 8026528:	4631      	mov	r1, r6
 802652a:	4628      	mov	r0, r5
 802652c:	47b8      	blx	r7
 802652e:	3001      	adds	r0, #1
 8026530:	f43f aef7 	beq.w	8026322 <_printf_float+0xc2>
 8026534:	f109 0901 	add.w	r9, r9, #1
 8026538:	e7ee      	b.n	8026518 <_printf_float+0x2b8>
 802653a:	bf00      	nop
 802653c:	7fefffff 	.word	0x7fefffff
 8026540:	08032184 	.word	0x08032184
 8026544:	08032188 	.word	0x08032188
 8026548:	08032190 	.word	0x08032190
 802654c:	0803218c 	.word	0x0803218c
 8026550:	08032f11 	.word	0x08032f11
 8026554:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026556:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8026558:	429a      	cmp	r2, r3
 802655a:	bfa8      	it	ge
 802655c:	461a      	movge	r2, r3
 802655e:	2a00      	cmp	r2, #0
 8026560:	4691      	mov	r9, r2
 8026562:	dc37      	bgt.n	80265d4 <_printf_float+0x374>
 8026564:	f04f 0b00 	mov.w	fp, #0
 8026568:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 802656c:	f104 021a 	add.w	r2, r4, #26
 8026570:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8026572:	9305      	str	r3, [sp, #20]
 8026574:	eba3 0309 	sub.w	r3, r3, r9
 8026578:	455b      	cmp	r3, fp
 802657a:	dc33      	bgt.n	80265e4 <_printf_float+0x384>
 802657c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026580:	429a      	cmp	r2, r3
 8026582:	db3b      	blt.n	80265fc <_printf_float+0x39c>
 8026584:	6823      	ldr	r3, [r4, #0]
 8026586:	07da      	lsls	r2, r3, #31
 8026588:	d438      	bmi.n	80265fc <_printf_float+0x39c>
 802658a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802658c:	9a05      	ldr	r2, [sp, #20]
 802658e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026590:	1a9a      	subs	r2, r3, r2
 8026592:	eba3 0901 	sub.w	r9, r3, r1
 8026596:	4591      	cmp	r9, r2
 8026598:	bfa8      	it	ge
 802659a:	4691      	movge	r9, r2
 802659c:	f1b9 0f00 	cmp.w	r9, #0
 80265a0:	dc35      	bgt.n	802660e <_printf_float+0x3ae>
 80265a2:	f04f 0800 	mov.w	r8, #0
 80265a6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80265aa:	f104 0a1a 	add.w	sl, r4, #26
 80265ae:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80265b2:	1a9b      	subs	r3, r3, r2
 80265b4:	eba3 0309 	sub.w	r3, r3, r9
 80265b8:	4543      	cmp	r3, r8
 80265ba:	f77f af79 	ble.w	80264b0 <_printf_float+0x250>
 80265be:	2301      	movs	r3, #1
 80265c0:	4652      	mov	r2, sl
 80265c2:	4631      	mov	r1, r6
 80265c4:	4628      	mov	r0, r5
 80265c6:	47b8      	blx	r7
 80265c8:	3001      	adds	r0, #1
 80265ca:	f43f aeaa 	beq.w	8026322 <_printf_float+0xc2>
 80265ce:	f108 0801 	add.w	r8, r8, #1
 80265d2:	e7ec      	b.n	80265ae <_printf_float+0x34e>
 80265d4:	4613      	mov	r3, r2
 80265d6:	4631      	mov	r1, r6
 80265d8:	4642      	mov	r2, r8
 80265da:	4628      	mov	r0, r5
 80265dc:	47b8      	blx	r7
 80265de:	3001      	adds	r0, #1
 80265e0:	d1c0      	bne.n	8026564 <_printf_float+0x304>
 80265e2:	e69e      	b.n	8026322 <_printf_float+0xc2>
 80265e4:	2301      	movs	r3, #1
 80265e6:	4631      	mov	r1, r6
 80265e8:	4628      	mov	r0, r5
 80265ea:	9205      	str	r2, [sp, #20]
 80265ec:	47b8      	blx	r7
 80265ee:	3001      	adds	r0, #1
 80265f0:	f43f ae97 	beq.w	8026322 <_printf_float+0xc2>
 80265f4:	9a05      	ldr	r2, [sp, #20]
 80265f6:	f10b 0b01 	add.w	fp, fp, #1
 80265fa:	e7b9      	b.n	8026570 <_printf_float+0x310>
 80265fc:	ee18 3a10 	vmov	r3, s16
 8026600:	4652      	mov	r2, sl
 8026602:	4631      	mov	r1, r6
 8026604:	4628      	mov	r0, r5
 8026606:	47b8      	blx	r7
 8026608:	3001      	adds	r0, #1
 802660a:	d1be      	bne.n	802658a <_printf_float+0x32a>
 802660c:	e689      	b.n	8026322 <_printf_float+0xc2>
 802660e:	9a05      	ldr	r2, [sp, #20]
 8026610:	464b      	mov	r3, r9
 8026612:	4442      	add	r2, r8
 8026614:	4631      	mov	r1, r6
 8026616:	4628      	mov	r0, r5
 8026618:	47b8      	blx	r7
 802661a:	3001      	adds	r0, #1
 802661c:	d1c1      	bne.n	80265a2 <_printf_float+0x342>
 802661e:	e680      	b.n	8026322 <_printf_float+0xc2>
 8026620:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026622:	2a01      	cmp	r2, #1
 8026624:	dc01      	bgt.n	802662a <_printf_float+0x3ca>
 8026626:	07db      	lsls	r3, r3, #31
 8026628:	d538      	bpl.n	802669c <_printf_float+0x43c>
 802662a:	2301      	movs	r3, #1
 802662c:	4642      	mov	r2, r8
 802662e:	4631      	mov	r1, r6
 8026630:	4628      	mov	r0, r5
 8026632:	47b8      	blx	r7
 8026634:	3001      	adds	r0, #1
 8026636:	f43f ae74 	beq.w	8026322 <_printf_float+0xc2>
 802663a:	ee18 3a10 	vmov	r3, s16
 802663e:	4652      	mov	r2, sl
 8026640:	4631      	mov	r1, r6
 8026642:	4628      	mov	r0, r5
 8026644:	47b8      	blx	r7
 8026646:	3001      	adds	r0, #1
 8026648:	f43f ae6b 	beq.w	8026322 <_printf_float+0xc2>
 802664c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8026650:	2200      	movs	r2, #0
 8026652:	2300      	movs	r3, #0
 8026654:	f7da fa42 	bl	8000adc <__aeabi_dcmpeq>
 8026658:	b9d8      	cbnz	r0, 8026692 <_printf_float+0x432>
 802665a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802665c:	f108 0201 	add.w	r2, r8, #1
 8026660:	3b01      	subs	r3, #1
 8026662:	4631      	mov	r1, r6
 8026664:	4628      	mov	r0, r5
 8026666:	47b8      	blx	r7
 8026668:	3001      	adds	r0, #1
 802666a:	d10e      	bne.n	802668a <_printf_float+0x42a>
 802666c:	e659      	b.n	8026322 <_printf_float+0xc2>
 802666e:	2301      	movs	r3, #1
 8026670:	4652      	mov	r2, sl
 8026672:	4631      	mov	r1, r6
 8026674:	4628      	mov	r0, r5
 8026676:	47b8      	blx	r7
 8026678:	3001      	adds	r0, #1
 802667a:	f43f ae52 	beq.w	8026322 <_printf_float+0xc2>
 802667e:	f108 0801 	add.w	r8, r8, #1
 8026682:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026684:	3b01      	subs	r3, #1
 8026686:	4543      	cmp	r3, r8
 8026688:	dcf1      	bgt.n	802666e <_printf_float+0x40e>
 802668a:	464b      	mov	r3, r9
 802668c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8026690:	e6dc      	b.n	802644c <_printf_float+0x1ec>
 8026692:	f04f 0800 	mov.w	r8, #0
 8026696:	f104 0a1a 	add.w	sl, r4, #26
 802669a:	e7f2      	b.n	8026682 <_printf_float+0x422>
 802669c:	2301      	movs	r3, #1
 802669e:	4642      	mov	r2, r8
 80266a0:	e7df      	b.n	8026662 <_printf_float+0x402>
 80266a2:	2301      	movs	r3, #1
 80266a4:	464a      	mov	r2, r9
 80266a6:	4631      	mov	r1, r6
 80266a8:	4628      	mov	r0, r5
 80266aa:	47b8      	blx	r7
 80266ac:	3001      	adds	r0, #1
 80266ae:	f43f ae38 	beq.w	8026322 <_printf_float+0xc2>
 80266b2:	f108 0801 	add.w	r8, r8, #1
 80266b6:	68e3      	ldr	r3, [r4, #12]
 80266b8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80266ba:	1a5b      	subs	r3, r3, r1
 80266bc:	4543      	cmp	r3, r8
 80266be:	dcf0      	bgt.n	80266a2 <_printf_float+0x442>
 80266c0:	e6fa      	b.n	80264b8 <_printf_float+0x258>
 80266c2:	f04f 0800 	mov.w	r8, #0
 80266c6:	f104 0919 	add.w	r9, r4, #25
 80266ca:	e7f4      	b.n	80266b6 <_printf_float+0x456>

080266cc <_printf_common>:
 80266cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80266d0:	4616      	mov	r6, r2
 80266d2:	4699      	mov	r9, r3
 80266d4:	688a      	ldr	r2, [r1, #8]
 80266d6:	690b      	ldr	r3, [r1, #16]
 80266d8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80266dc:	4293      	cmp	r3, r2
 80266de:	bfb8      	it	lt
 80266e0:	4613      	movlt	r3, r2
 80266e2:	6033      	str	r3, [r6, #0]
 80266e4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80266e8:	4607      	mov	r7, r0
 80266ea:	460c      	mov	r4, r1
 80266ec:	b10a      	cbz	r2, 80266f2 <_printf_common+0x26>
 80266ee:	3301      	adds	r3, #1
 80266f0:	6033      	str	r3, [r6, #0]
 80266f2:	6823      	ldr	r3, [r4, #0]
 80266f4:	0699      	lsls	r1, r3, #26
 80266f6:	bf42      	ittt	mi
 80266f8:	6833      	ldrmi	r3, [r6, #0]
 80266fa:	3302      	addmi	r3, #2
 80266fc:	6033      	strmi	r3, [r6, #0]
 80266fe:	6825      	ldr	r5, [r4, #0]
 8026700:	f015 0506 	ands.w	r5, r5, #6
 8026704:	d106      	bne.n	8026714 <_printf_common+0x48>
 8026706:	f104 0a19 	add.w	sl, r4, #25
 802670a:	68e3      	ldr	r3, [r4, #12]
 802670c:	6832      	ldr	r2, [r6, #0]
 802670e:	1a9b      	subs	r3, r3, r2
 8026710:	42ab      	cmp	r3, r5
 8026712:	dc26      	bgt.n	8026762 <_printf_common+0x96>
 8026714:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8026718:	1e13      	subs	r3, r2, #0
 802671a:	6822      	ldr	r2, [r4, #0]
 802671c:	bf18      	it	ne
 802671e:	2301      	movne	r3, #1
 8026720:	0692      	lsls	r2, r2, #26
 8026722:	d42b      	bmi.n	802677c <_printf_common+0xb0>
 8026724:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8026728:	4649      	mov	r1, r9
 802672a:	4638      	mov	r0, r7
 802672c:	47c0      	blx	r8
 802672e:	3001      	adds	r0, #1
 8026730:	d01e      	beq.n	8026770 <_printf_common+0xa4>
 8026732:	6823      	ldr	r3, [r4, #0]
 8026734:	68e5      	ldr	r5, [r4, #12]
 8026736:	6832      	ldr	r2, [r6, #0]
 8026738:	f003 0306 	and.w	r3, r3, #6
 802673c:	2b04      	cmp	r3, #4
 802673e:	bf08      	it	eq
 8026740:	1aad      	subeq	r5, r5, r2
 8026742:	68a3      	ldr	r3, [r4, #8]
 8026744:	6922      	ldr	r2, [r4, #16]
 8026746:	bf0c      	ite	eq
 8026748:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802674c:	2500      	movne	r5, #0
 802674e:	4293      	cmp	r3, r2
 8026750:	bfc4      	itt	gt
 8026752:	1a9b      	subgt	r3, r3, r2
 8026754:	18ed      	addgt	r5, r5, r3
 8026756:	2600      	movs	r6, #0
 8026758:	341a      	adds	r4, #26
 802675a:	42b5      	cmp	r5, r6
 802675c:	d11a      	bne.n	8026794 <_printf_common+0xc8>
 802675e:	2000      	movs	r0, #0
 8026760:	e008      	b.n	8026774 <_printf_common+0xa8>
 8026762:	2301      	movs	r3, #1
 8026764:	4652      	mov	r2, sl
 8026766:	4649      	mov	r1, r9
 8026768:	4638      	mov	r0, r7
 802676a:	47c0      	blx	r8
 802676c:	3001      	adds	r0, #1
 802676e:	d103      	bne.n	8026778 <_printf_common+0xac>
 8026770:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026774:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026778:	3501      	adds	r5, #1
 802677a:	e7c6      	b.n	802670a <_printf_common+0x3e>
 802677c:	18e1      	adds	r1, r4, r3
 802677e:	1c5a      	adds	r2, r3, #1
 8026780:	2030      	movs	r0, #48	; 0x30
 8026782:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8026786:	4422      	add	r2, r4
 8026788:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802678c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8026790:	3302      	adds	r3, #2
 8026792:	e7c7      	b.n	8026724 <_printf_common+0x58>
 8026794:	2301      	movs	r3, #1
 8026796:	4622      	mov	r2, r4
 8026798:	4649      	mov	r1, r9
 802679a:	4638      	mov	r0, r7
 802679c:	47c0      	blx	r8
 802679e:	3001      	adds	r0, #1
 80267a0:	d0e6      	beq.n	8026770 <_printf_common+0xa4>
 80267a2:	3601      	adds	r6, #1
 80267a4:	e7d9      	b.n	802675a <_printf_common+0x8e>
	...

080267a8 <_printf_i>:
 80267a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80267ac:	7e0f      	ldrb	r7, [r1, #24]
 80267ae:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80267b0:	2f78      	cmp	r7, #120	; 0x78
 80267b2:	4691      	mov	r9, r2
 80267b4:	4680      	mov	r8, r0
 80267b6:	460c      	mov	r4, r1
 80267b8:	469a      	mov	sl, r3
 80267ba:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80267be:	d807      	bhi.n	80267d0 <_printf_i+0x28>
 80267c0:	2f62      	cmp	r7, #98	; 0x62
 80267c2:	d80a      	bhi.n	80267da <_printf_i+0x32>
 80267c4:	2f00      	cmp	r7, #0
 80267c6:	f000 80d8 	beq.w	802697a <_printf_i+0x1d2>
 80267ca:	2f58      	cmp	r7, #88	; 0x58
 80267cc:	f000 80a3 	beq.w	8026916 <_printf_i+0x16e>
 80267d0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80267d4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80267d8:	e03a      	b.n	8026850 <_printf_i+0xa8>
 80267da:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80267de:	2b15      	cmp	r3, #21
 80267e0:	d8f6      	bhi.n	80267d0 <_printf_i+0x28>
 80267e2:	a101      	add	r1, pc, #4	; (adr r1, 80267e8 <_printf_i+0x40>)
 80267e4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80267e8:	08026841 	.word	0x08026841
 80267ec:	08026855 	.word	0x08026855
 80267f0:	080267d1 	.word	0x080267d1
 80267f4:	080267d1 	.word	0x080267d1
 80267f8:	080267d1 	.word	0x080267d1
 80267fc:	080267d1 	.word	0x080267d1
 8026800:	08026855 	.word	0x08026855
 8026804:	080267d1 	.word	0x080267d1
 8026808:	080267d1 	.word	0x080267d1
 802680c:	080267d1 	.word	0x080267d1
 8026810:	080267d1 	.word	0x080267d1
 8026814:	08026961 	.word	0x08026961
 8026818:	08026885 	.word	0x08026885
 802681c:	08026943 	.word	0x08026943
 8026820:	080267d1 	.word	0x080267d1
 8026824:	080267d1 	.word	0x080267d1
 8026828:	08026983 	.word	0x08026983
 802682c:	080267d1 	.word	0x080267d1
 8026830:	08026885 	.word	0x08026885
 8026834:	080267d1 	.word	0x080267d1
 8026838:	080267d1 	.word	0x080267d1
 802683c:	0802694b 	.word	0x0802694b
 8026840:	682b      	ldr	r3, [r5, #0]
 8026842:	1d1a      	adds	r2, r3, #4
 8026844:	681b      	ldr	r3, [r3, #0]
 8026846:	602a      	str	r2, [r5, #0]
 8026848:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802684c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8026850:	2301      	movs	r3, #1
 8026852:	e0a3      	b.n	802699c <_printf_i+0x1f4>
 8026854:	6820      	ldr	r0, [r4, #0]
 8026856:	6829      	ldr	r1, [r5, #0]
 8026858:	0606      	lsls	r6, r0, #24
 802685a:	f101 0304 	add.w	r3, r1, #4
 802685e:	d50a      	bpl.n	8026876 <_printf_i+0xce>
 8026860:	680e      	ldr	r6, [r1, #0]
 8026862:	602b      	str	r3, [r5, #0]
 8026864:	2e00      	cmp	r6, #0
 8026866:	da03      	bge.n	8026870 <_printf_i+0xc8>
 8026868:	232d      	movs	r3, #45	; 0x2d
 802686a:	4276      	negs	r6, r6
 802686c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026870:	485e      	ldr	r0, [pc, #376]	; (80269ec <_printf_i+0x244>)
 8026872:	230a      	movs	r3, #10
 8026874:	e019      	b.n	80268aa <_printf_i+0x102>
 8026876:	680e      	ldr	r6, [r1, #0]
 8026878:	602b      	str	r3, [r5, #0]
 802687a:	f010 0f40 	tst.w	r0, #64	; 0x40
 802687e:	bf18      	it	ne
 8026880:	b236      	sxthne	r6, r6
 8026882:	e7ef      	b.n	8026864 <_printf_i+0xbc>
 8026884:	682b      	ldr	r3, [r5, #0]
 8026886:	6820      	ldr	r0, [r4, #0]
 8026888:	1d19      	adds	r1, r3, #4
 802688a:	6029      	str	r1, [r5, #0]
 802688c:	0601      	lsls	r1, r0, #24
 802688e:	d501      	bpl.n	8026894 <_printf_i+0xec>
 8026890:	681e      	ldr	r6, [r3, #0]
 8026892:	e002      	b.n	802689a <_printf_i+0xf2>
 8026894:	0646      	lsls	r6, r0, #25
 8026896:	d5fb      	bpl.n	8026890 <_printf_i+0xe8>
 8026898:	881e      	ldrh	r6, [r3, #0]
 802689a:	4854      	ldr	r0, [pc, #336]	; (80269ec <_printf_i+0x244>)
 802689c:	2f6f      	cmp	r7, #111	; 0x6f
 802689e:	bf0c      	ite	eq
 80268a0:	2308      	moveq	r3, #8
 80268a2:	230a      	movne	r3, #10
 80268a4:	2100      	movs	r1, #0
 80268a6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80268aa:	6865      	ldr	r5, [r4, #4]
 80268ac:	60a5      	str	r5, [r4, #8]
 80268ae:	2d00      	cmp	r5, #0
 80268b0:	bfa2      	ittt	ge
 80268b2:	6821      	ldrge	r1, [r4, #0]
 80268b4:	f021 0104 	bicge.w	r1, r1, #4
 80268b8:	6021      	strge	r1, [r4, #0]
 80268ba:	b90e      	cbnz	r6, 80268c0 <_printf_i+0x118>
 80268bc:	2d00      	cmp	r5, #0
 80268be:	d04d      	beq.n	802695c <_printf_i+0x1b4>
 80268c0:	4615      	mov	r5, r2
 80268c2:	fbb6 f1f3 	udiv	r1, r6, r3
 80268c6:	fb03 6711 	mls	r7, r3, r1, r6
 80268ca:	5dc7      	ldrb	r7, [r0, r7]
 80268cc:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80268d0:	4637      	mov	r7, r6
 80268d2:	42bb      	cmp	r3, r7
 80268d4:	460e      	mov	r6, r1
 80268d6:	d9f4      	bls.n	80268c2 <_printf_i+0x11a>
 80268d8:	2b08      	cmp	r3, #8
 80268da:	d10b      	bne.n	80268f4 <_printf_i+0x14c>
 80268dc:	6823      	ldr	r3, [r4, #0]
 80268de:	07de      	lsls	r6, r3, #31
 80268e0:	d508      	bpl.n	80268f4 <_printf_i+0x14c>
 80268e2:	6923      	ldr	r3, [r4, #16]
 80268e4:	6861      	ldr	r1, [r4, #4]
 80268e6:	4299      	cmp	r1, r3
 80268e8:	bfde      	ittt	le
 80268ea:	2330      	movle	r3, #48	; 0x30
 80268ec:	f805 3c01 	strble.w	r3, [r5, #-1]
 80268f0:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80268f4:	1b52      	subs	r2, r2, r5
 80268f6:	6122      	str	r2, [r4, #16]
 80268f8:	f8cd a000 	str.w	sl, [sp]
 80268fc:	464b      	mov	r3, r9
 80268fe:	aa03      	add	r2, sp, #12
 8026900:	4621      	mov	r1, r4
 8026902:	4640      	mov	r0, r8
 8026904:	f7ff fee2 	bl	80266cc <_printf_common>
 8026908:	3001      	adds	r0, #1
 802690a:	d14c      	bne.n	80269a6 <_printf_i+0x1fe>
 802690c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8026910:	b004      	add	sp, #16
 8026912:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026916:	4835      	ldr	r0, [pc, #212]	; (80269ec <_printf_i+0x244>)
 8026918:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 802691c:	6829      	ldr	r1, [r5, #0]
 802691e:	6823      	ldr	r3, [r4, #0]
 8026920:	f851 6b04 	ldr.w	r6, [r1], #4
 8026924:	6029      	str	r1, [r5, #0]
 8026926:	061d      	lsls	r5, r3, #24
 8026928:	d514      	bpl.n	8026954 <_printf_i+0x1ac>
 802692a:	07df      	lsls	r7, r3, #31
 802692c:	bf44      	itt	mi
 802692e:	f043 0320 	orrmi.w	r3, r3, #32
 8026932:	6023      	strmi	r3, [r4, #0]
 8026934:	b91e      	cbnz	r6, 802693e <_printf_i+0x196>
 8026936:	6823      	ldr	r3, [r4, #0]
 8026938:	f023 0320 	bic.w	r3, r3, #32
 802693c:	6023      	str	r3, [r4, #0]
 802693e:	2310      	movs	r3, #16
 8026940:	e7b0      	b.n	80268a4 <_printf_i+0xfc>
 8026942:	6823      	ldr	r3, [r4, #0]
 8026944:	f043 0320 	orr.w	r3, r3, #32
 8026948:	6023      	str	r3, [r4, #0]
 802694a:	2378      	movs	r3, #120	; 0x78
 802694c:	4828      	ldr	r0, [pc, #160]	; (80269f0 <_printf_i+0x248>)
 802694e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8026952:	e7e3      	b.n	802691c <_printf_i+0x174>
 8026954:	0659      	lsls	r1, r3, #25
 8026956:	bf48      	it	mi
 8026958:	b2b6      	uxthmi	r6, r6
 802695a:	e7e6      	b.n	802692a <_printf_i+0x182>
 802695c:	4615      	mov	r5, r2
 802695e:	e7bb      	b.n	80268d8 <_printf_i+0x130>
 8026960:	682b      	ldr	r3, [r5, #0]
 8026962:	6826      	ldr	r6, [r4, #0]
 8026964:	6961      	ldr	r1, [r4, #20]
 8026966:	1d18      	adds	r0, r3, #4
 8026968:	6028      	str	r0, [r5, #0]
 802696a:	0635      	lsls	r5, r6, #24
 802696c:	681b      	ldr	r3, [r3, #0]
 802696e:	d501      	bpl.n	8026974 <_printf_i+0x1cc>
 8026970:	6019      	str	r1, [r3, #0]
 8026972:	e002      	b.n	802697a <_printf_i+0x1d2>
 8026974:	0670      	lsls	r0, r6, #25
 8026976:	d5fb      	bpl.n	8026970 <_printf_i+0x1c8>
 8026978:	8019      	strh	r1, [r3, #0]
 802697a:	2300      	movs	r3, #0
 802697c:	6123      	str	r3, [r4, #16]
 802697e:	4615      	mov	r5, r2
 8026980:	e7ba      	b.n	80268f8 <_printf_i+0x150>
 8026982:	682b      	ldr	r3, [r5, #0]
 8026984:	1d1a      	adds	r2, r3, #4
 8026986:	602a      	str	r2, [r5, #0]
 8026988:	681d      	ldr	r5, [r3, #0]
 802698a:	6862      	ldr	r2, [r4, #4]
 802698c:	2100      	movs	r1, #0
 802698e:	4628      	mov	r0, r5
 8026990:	f7d9 fc1e 	bl	80001d0 <memchr>
 8026994:	b108      	cbz	r0, 802699a <_printf_i+0x1f2>
 8026996:	1b40      	subs	r0, r0, r5
 8026998:	6060      	str	r0, [r4, #4]
 802699a:	6863      	ldr	r3, [r4, #4]
 802699c:	6123      	str	r3, [r4, #16]
 802699e:	2300      	movs	r3, #0
 80269a0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80269a4:	e7a8      	b.n	80268f8 <_printf_i+0x150>
 80269a6:	6923      	ldr	r3, [r4, #16]
 80269a8:	462a      	mov	r2, r5
 80269aa:	4649      	mov	r1, r9
 80269ac:	4640      	mov	r0, r8
 80269ae:	47d0      	blx	sl
 80269b0:	3001      	adds	r0, #1
 80269b2:	d0ab      	beq.n	802690c <_printf_i+0x164>
 80269b4:	6823      	ldr	r3, [r4, #0]
 80269b6:	079b      	lsls	r3, r3, #30
 80269b8:	d413      	bmi.n	80269e2 <_printf_i+0x23a>
 80269ba:	68e0      	ldr	r0, [r4, #12]
 80269bc:	9b03      	ldr	r3, [sp, #12]
 80269be:	4298      	cmp	r0, r3
 80269c0:	bfb8      	it	lt
 80269c2:	4618      	movlt	r0, r3
 80269c4:	e7a4      	b.n	8026910 <_printf_i+0x168>
 80269c6:	2301      	movs	r3, #1
 80269c8:	4632      	mov	r2, r6
 80269ca:	4649      	mov	r1, r9
 80269cc:	4640      	mov	r0, r8
 80269ce:	47d0      	blx	sl
 80269d0:	3001      	adds	r0, #1
 80269d2:	d09b      	beq.n	802690c <_printf_i+0x164>
 80269d4:	3501      	adds	r5, #1
 80269d6:	68e3      	ldr	r3, [r4, #12]
 80269d8:	9903      	ldr	r1, [sp, #12]
 80269da:	1a5b      	subs	r3, r3, r1
 80269dc:	42ab      	cmp	r3, r5
 80269de:	dcf2      	bgt.n	80269c6 <_printf_i+0x21e>
 80269e0:	e7eb      	b.n	80269ba <_printf_i+0x212>
 80269e2:	2500      	movs	r5, #0
 80269e4:	f104 0619 	add.w	r6, r4, #25
 80269e8:	e7f5      	b.n	80269d6 <_printf_i+0x22e>
 80269ea:	bf00      	nop
 80269ec:	080318dc 	.word	0x080318dc
 80269f0:	08032194 	.word	0x08032194

080269f4 <_scanf_float>:
 80269f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80269f8:	b087      	sub	sp, #28
 80269fa:	4617      	mov	r7, r2
 80269fc:	9303      	str	r3, [sp, #12]
 80269fe:	688b      	ldr	r3, [r1, #8]
 8026a00:	1e5a      	subs	r2, r3, #1
 8026a02:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8026a06:	bf83      	ittte	hi
 8026a08:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8026a0c:	195b      	addhi	r3, r3, r5
 8026a0e:	9302      	strhi	r3, [sp, #8]
 8026a10:	2300      	movls	r3, #0
 8026a12:	bf86      	itte	hi
 8026a14:	f240 135d 	movwhi	r3, #349	; 0x15d
 8026a18:	608b      	strhi	r3, [r1, #8]
 8026a1a:	9302      	strls	r3, [sp, #8]
 8026a1c:	680b      	ldr	r3, [r1, #0]
 8026a1e:	468b      	mov	fp, r1
 8026a20:	2500      	movs	r5, #0
 8026a22:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8026a26:	f84b 3b1c 	str.w	r3, [fp], #28
 8026a2a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8026a2e:	4680      	mov	r8, r0
 8026a30:	460c      	mov	r4, r1
 8026a32:	465e      	mov	r6, fp
 8026a34:	46aa      	mov	sl, r5
 8026a36:	46a9      	mov	r9, r5
 8026a38:	9501      	str	r5, [sp, #4]
 8026a3a:	68a2      	ldr	r2, [r4, #8]
 8026a3c:	b152      	cbz	r2, 8026a54 <_scanf_float+0x60>
 8026a3e:	683b      	ldr	r3, [r7, #0]
 8026a40:	781b      	ldrb	r3, [r3, #0]
 8026a42:	2b4e      	cmp	r3, #78	; 0x4e
 8026a44:	d864      	bhi.n	8026b10 <_scanf_float+0x11c>
 8026a46:	2b40      	cmp	r3, #64	; 0x40
 8026a48:	d83c      	bhi.n	8026ac4 <_scanf_float+0xd0>
 8026a4a:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8026a4e:	b2c8      	uxtb	r0, r1
 8026a50:	280e      	cmp	r0, #14
 8026a52:	d93a      	bls.n	8026aca <_scanf_float+0xd6>
 8026a54:	f1b9 0f00 	cmp.w	r9, #0
 8026a58:	d003      	beq.n	8026a62 <_scanf_float+0x6e>
 8026a5a:	6823      	ldr	r3, [r4, #0]
 8026a5c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8026a60:	6023      	str	r3, [r4, #0]
 8026a62:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8026a66:	f1ba 0f01 	cmp.w	sl, #1
 8026a6a:	f200 8113 	bhi.w	8026c94 <_scanf_float+0x2a0>
 8026a6e:	455e      	cmp	r6, fp
 8026a70:	f200 8105 	bhi.w	8026c7e <_scanf_float+0x28a>
 8026a74:	2501      	movs	r5, #1
 8026a76:	4628      	mov	r0, r5
 8026a78:	b007      	add	sp, #28
 8026a7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026a7e:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8026a82:	2a0d      	cmp	r2, #13
 8026a84:	d8e6      	bhi.n	8026a54 <_scanf_float+0x60>
 8026a86:	a101      	add	r1, pc, #4	; (adr r1, 8026a8c <_scanf_float+0x98>)
 8026a88:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8026a8c:	08026bcb 	.word	0x08026bcb
 8026a90:	08026a55 	.word	0x08026a55
 8026a94:	08026a55 	.word	0x08026a55
 8026a98:	08026a55 	.word	0x08026a55
 8026a9c:	08026c2b 	.word	0x08026c2b
 8026aa0:	08026c03 	.word	0x08026c03
 8026aa4:	08026a55 	.word	0x08026a55
 8026aa8:	08026a55 	.word	0x08026a55
 8026aac:	08026bd9 	.word	0x08026bd9
 8026ab0:	08026a55 	.word	0x08026a55
 8026ab4:	08026a55 	.word	0x08026a55
 8026ab8:	08026a55 	.word	0x08026a55
 8026abc:	08026a55 	.word	0x08026a55
 8026ac0:	08026b91 	.word	0x08026b91
 8026ac4:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8026ac8:	e7db      	b.n	8026a82 <_scanf_float+0x8e>
 8026aca:	290e      	cmp	r1, #14
 8026acc:	d8c2      	bhi.n	8026a54 <_scanf_float+0x60>
 8026ace:	a001      	add	r0, pc, #4	; (adr r0, 8026ad4 <_scanf_float+0xe0>)
 8026ad0:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8026ad4:	08026b83 	.word	0x08026b83
 8026ad8:	08026a55 	.word	0x08026a55
 8026adc:	08026b83 	.word	0x08026b83
 8026ae0:	08026c17 	.word	0x08026c17
 8026ae4:	08026a55 	.word	0x08026a55
 8026ae8:	08026b31 	.word	0x08026b31
 8026aec:	08026b6d 	.word	0x08026b6d
 8026af0:	08026b6d 	.word	0x08026b6d
 8026af4:	08026b6d 	.word	0x08026b6d
 8026af8:	08026b6d 	.word	0x08026b6d
 8026afc:	08026b6d 	.word	0x08026b6d
 8026b00:	08026b6d 	.word	0x08026b6d
 8026b04:	08026b6d 	.word	0x08026b6d
 8026b08:	08026b6d 	.word	0x08026b6d
 8026b0c:	08026b6d 	.word	0x08026b6d
 8026b10:	2b6e      	cmp	r3, #110	; 0x6e
 8026b12:	d809      	bhi.n	8026b28 <_scanf_float+0x134>
 8026b14:	2b60      	cmp	r3, #96	; 0x60
 8026b16:	d8b2      	bhi.n	8026a7e <_scanf_float+0x8a>
 8026b18:	2b54      	cmp	r3, #84	; 0x54
 8026b1a:	d077      	beq.n	8026c0c <_scanf_float+0x218>
 8026b1c:	2b59      	cmp	r3, #89	; 0x59
 8026b1e:	d199      	bne.n	8026a54 <_scanf_float+0x60>
 8026b20:	2d07      	cmp	r5, #7
 8026b22:	d197      	bne.n	8026a54 <_scanf_float+0x60>
 8026b24:	2508      	movs	r5, #8
 8026b26:	e029      	b.n	8026b7c <_scanf_float+0x188>
 8026b28:	2b74      	cmp	r3, #116	; 0x74
 8026b2a:	d06f      	beq.n	8026c0c <_scanf_float+0x218>
 8026b2c:	2b79      	cmp	r3, #121	; 0x79
 8026b2e:	e7f6      	b.n	8026b1e <_scanf_float+0x12a>
 8026b30:	6821      	ldr	r1, [r4, #0]
 8026b32:	05c8      	lsls	r0, r1, #23
 8026b34:	d51a      	bpl.n	8026b6c <_scanf_float+0x178>
 8026b36:	9b02      	ldr	r3, [sp, #8]
 8026b38:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8026b3c:	6021      	str	r1, [r4, #0]
 8026b3e:	f109 0901 	add.w	r9, r9, #1
 8026b42:	b11b      	cbz	r3, 8026b4c <_scanf_float+0x158>
 8026b44:	3b01      	subs	r3, #1
 8026b46:	3201      	adds	r2, #1
 8026b48:	9302      	str	r3, [sp, #8]
 8026b4a:	60a2      	str	r2, [r4, #8]
 8026b4c:	68a3      	ldr	r3, [r4, #8]
 8026b4e:	3b01      	subs	r3, #1
 8026b50:	60a3      	str	r3, [r4, #8]
 8026b52:	6923      	ldr	r3, [r4, #16]
 8026b54:	3301      	adds	r3, #1
 8026b56:	6123      	str	r3, [r4, #16]
 8026b58:	687b      	ldr	r3, [r7, #4]
 8026b5a:	3b01      	subs	r3, #1
 8026b5c:	2b00      	cmp	r3, #0
 8026b5e:	607b      	str	r3, [r7, #4]
 8026b60:	f340 8084 	ble.w	8026c6c <_scanf_float+0x278>
 8026b64:	683b      	ldr	r3, [r7, #0]
 8026b66:	3301      	adds	r3, #1
 8026b68:	603b      	str	r3, [r7, #0]
 8026b6a:	e766      	b.n	8026a3a <_scanf_float+0x46>
 8026b6c:	eb1a 0f05 	cmn.w	sl, r5
 8026b70:	f47f af70 	bne.w	8026a54 <_scanf_float+0x60>
 8026b74:	6822      	ldr	r2, [r4, #0]
 8026b76:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8026b7a:	6022      	str	r2, [r4, #0]
 8026b7c:	f806 3b01 	strb.w	r3, [r6], #1
 8026b80:	e7e4      	b.n	8026b4c <_scanf_float+0x158>
 8026b82:	6822      	ldr	r2, [r4, #0]
 8026b84:	0610      	lsls	r0, r2, #24
 8026b86:	f57f af65 	bpl.w	8026a54 <_scanf_float+0x60>
 8026b8a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8026b8e:	e7f4      	b.n	8026b7a <_scanf_float+0x186>
 8026b90:	f1ba 0f00 	cmp.w	sl, #0
 8026b94:	d10e      	bne.n	8026bb4 <_scanf_float+0x1c0>
 8026b96:	f1b9 0f00 	cmp.w	r9, #0
 8026b9a:	d10e      	bne.n	8026bba <_scanf_float+0x1c6>
 8026b9c:	6822      	ldr	r2, [r4, #0]
 8026b9e:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8026ba2:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8026ba6:	d108      	bne.n	8026bba <_scanf_float+0x1c6>
 8026ba8:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8026bac:	6022      	str	r2, [r4, #0]
 8026bae:	f04f 0a01 	mov.w	sl, #1
 8026bb2:	e7e3      	b.n	8026b7c <_scanf_float+0x188>
 8026bb4:	f1ba 0f02 	cmp.w	sl, #2
 8026bb8:	d055      	beq.n	8026c66 <_scanf_float+0x272>
 8026bba:	2d01      	cmp	r5, #1
 8026bbc:	d002      	beq.n	8026bc4 <_scanf_float+0x1d0>
 8026bbe:	2d04      	cmp	r5, #4
 8026bc0:	f47f af48 	bne.w	8026a54 <_scanf_float+0x60>
 8026bc4:	3501      	adds	r5, #1
 8026bc6:	b2ed      	uxtb	r5, r5
 8026bc8:	e7d8      	b.n	8026b7c <_scanf_float+0x188>
 8026bca:	f1ba 0f01 	cmp.w	sl, #1
 8026bce:	f47f af41 	bne.w	8026a54 <_scanf_float+0x60>
 8026bd2:	f04f 0a02 	mov.w	sl, #2
 8026bd6:	e7d1      	b.n	8026b7c <_scanf_float+0x188>
 8026bd8:	b97d      	cbnz	r5, 8026bfa <_scanf_float+0x206>
 8026bda:	f1b9 0f00 	cmp.w	r9, #0
 8026bde:	f47f af3c 	bne.w	8026a5a <_scanf_float+0x66>
 8026be2:	6822      	ldr	r2, [r4, #0]
 8026be4:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8026be8:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8026bec:	f47f af39 	bne.w	8026a62 <_scanf_float+0x6e>
 8026bf0:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8026bf4:	6022      	str	r2, [r4, #0]
 8026bf6:	2501      	movs	r5, #1
 8026bf8:	e7c0      	b.n	8026b7c <_scanf_float+0x188>
 8026bfa:	2d03      	cmp	r5, #3
 8026bfc:	d0e2      	beq.n	8026bc4 <_scanf_float+0x1d0>
 8026bfe:	2d05      	cmp	r5, #5
 8026c00:	e7de      	b.n	8026bc0 <_scanf_float+0x1cc>
 8026c02:	2d02      	cmp	r5, #2
 8026c04:	f47f af26 	bne.w	8026a54 <_scanf_float+0x60>
 8026c08:	2503      	movs	r5, #3
 8026c0a:	e7b7      	b.n	8026b7c <_scanf_float+0x188>
 8026c0c:	2d06      	cmp	r5, #6
 8026c0e:	f47f af21 	bne.w	8026a54 <_scanf_float+0x60>
 8026c12:	2507      	movs	r5, #7
 8026c14:	e7b2      	b.n	8026b7c <_scanf_float+0x188>
 8026c16:	6822      	ldr	r2, [r4, #0]
 8026c18:	0591      	lsls	r1, r2, #22
 8026c1a:	f57f af1b 	bpl.w	8026a54 <_scanf_float+0x60>
 8026c1e:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8026c22:	6022      	str	r2, [r4, #0]
 8026c24:	f8cd 9004 	str.w	r9, [sp, #4]
 8026c28:	e7a8      	b.n	8026b7c <_scanf_float+0x188>
 8026c2a:	6822      	ldr	r2, [r4, #0]
 8026c2c:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8026c30:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8026c34:	d006      	beq.n	8026c44 <_scanf_float+0x250>
 8026c36:	0550      	lsls	r0, r2, #21
 8026c38:	f57f af0c 	bpl.w	8026a54 <_scanf_float+0x60>
 8026c3c:	f1b9 0f00 	cmp.w	r9, #0
 8026c40:	f43f af0f 	beq.w	8026a62 <_scanf_float+0x6e>
 8026c44:	0591      	lsls	r1, r2, #22
 8026c46:	bf58      	it	pl
 8026c48:	9901      	ldrpl	r1, [sp, #4]
 8026c4a:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8026c4e:	bf58      	it	pl
 8026c50:	eba9 0101 	subpl.w	r1, r9, r1
 8026c54:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8026c58:	bf58      	it	pl
 8026c5a:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8026c5e:	6022      	str	r2, [r4, #0]
 8026c60:	f04f 0900 	mov.w	r9, #0
 8026c64:	e78a      	b.n	8026b7c <_scanf_float+0x188>
 8026c66:	f04f 0a03 	mov.w	sl, #3
 8026c6a:	e787      	b.n	8026b7c <_scanf_float+0x188>
 8026c6c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8026c70:	4639      	mov	r1, r7
 8026c72:	4640      	mov	r0, r8
 8026c74:	4798      	blx	r3
 8026c76:	2800      	cmp	r0, #0
 8026c78:	f43f aedf 	beq.w	8026a3a <_scanf_float+0x46>
 8026c7c:	e6ea      	b.n	8026a54 <_scanf_float+0x60>
 8026c7e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8026c82:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8026c86:	463a      	mov	r2, r7
 8026c88:	4640      	mov	r0, r8
 8026c8a:	4798      	blx	r3
 8026c8c:	6923      	ldr	r3, [r4, #16]
 8026c8e:	3b01      	subs	r3, #1
 8026c90:	6123      	str	r3, [r4, #16]
 8026c92:	e6ec      	b.n	8026a6e <_scanf_float+0x7a>
 8026c94:	1e6b      	subs	r3, r5, #1
 8026c96:	2b06      	cmp	r3, #6
 8026c98:	d825      	bhi.n	8026ce6 <_scanf_float+0x2f2>
 8026c9a:	2d02      	cmp	r5, #2
 8026c9c:	d836      	bhi.n	8026d0c <_scanf_float+0x318>
 8026c9e:	455e      	cmp	r6, fp
 8026ca0:	f67f aee8 	bls.w	8026a74 <_scanf_float+0x80>
 8026ca4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8026ca8:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8026cac:	463a      	mov	r2, r7
 8026cae:	4640      	mov	r0, r8
 8026cb0:	4798      	blx	r3
 8026cb2:	6923      	ldr	r3, [r4, #16]
 8026cb4:	3b01      	subs	r3, #1
 8026cb6:	6123      	str	r3, [r4, #16]
 8026cb8:	e7f1      	b.n	8026c9e <_scanf_float+0x2aa>
 8026cba:	9802      	ldr	r0, [sp, #8]
 8026cbc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8026cc0:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8026cc4:	9002      	str	r0, [sp, #8]
 8026cc6:	463a      	mov	r2, r7
 8026cc8:	4640      	mov	r0, r8
 8026cca:	4798      	blx	r3
 8026ccc:	6923      	ldr	r3, [r4, #16]
 8026cce:	3b01      	subs	r3, #1
 8026cd0:	6123      	str	r3, [r4, #16]
 8026cd2:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8026cd6:	fa5f fa8a 	uxtb.w	sl, sl
 8026cda:	f1ba 0f02 	cmp.w	sl, #2
 8026cde:	d1ec      	bne.n	8026cba <_scanf_float+0x2c6>
 8026ce0:	3d03      	subs	r5, #3
 8026ce2:	b2ed      	uxtb	r5, r5
 8026ce4:	1b76      	subs	r6, r6, r5
 8026ce6:	6823      	ldr	r3, [r4, #0]
 8026ce8:	05da      	lsls	r2, r3, #23
 8026cea:	d52f      	bpl.n	8026d4c <_scanf_float+0x358>
 8026cec:	055b      	lsls	r3, r3, #21
 8026cee:	d510      	bpl.n	8026d12 <_scanf_float+0x31e>
 8026cf0:	455e      	cmp	r6, fp
 8026cf2:	f67f aebf 	bls.w	8026a74 <_scanf_float+0x80>
 8026cf6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8026cfa:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8026cfe:	463a      	mov	r2, r7
 8026d00:	4640      	mov	r0, r8
 8026d02:	4798      	blx	r3
 8026d04:	6923      	ldr	r3, [r4, #16]
 8026d06:	3b01      	subs	r3, #1
 8026d08:	6123      	str	r3, [r4, #16]
 8026d0a:	e7f1      	b.n	8026cf0 <_scanf_float+0x2fc>
 8026d0c:	46aa      	mov	sl, r5
 8026d0e:	9602      	str	r6, [sp, #8]
 8026d10:	e7df      	b.n	8026cd2 <_scanf_float+0x2de>
 8026d12:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8026d16:	6923      	ldr	r3, [r4, #16]
 8026d18:	2965      	cmp	r1, #101	; 0x65
 8026d1a:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8026d1e:	f106 35ff 	add.w	r5, r6, #4294967295	; 0xffffffff
 8026d22:	6123      	str	r3, [r4, #16]
 8026d24:	d00c      	beq.n	8026d40 <_scanf_float+0x34c>
 8026d26:	2945      	cmp	r1, #69	; 0x45
 8026d28:	d00a      	beq.n	8026d40 <_scanf_float+0x34c>
 8026d2a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8026d2e:	463a      	mov	r2, r7
 8026d30:	4640      	mov	r0, r8
 8026d32:	4798      	blx	r3
 8026d34:	6923      	ldr	r3, [r4, #16]
 8026d36:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8026d3a:	3b01      	subs	r3, #1
 8026d3c:	1eb5      	subs	r5, r6, #2
 8026d3e:	6123      	str	r3, [r4, #16]
 8026d40:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8026d44:	463a      	mov	r2, r7
 8026d46:	4640      	mov	r0, r8
 8026d48:	4798      	blx	r3
 8026d4a:	462e      	mov	r6, r5
 8026d4c:	6825      	ldr	r5, [r4, #0]
 8026d4e:	f015 0510 	ands.w	r5, r5, #16
 8026d52:	d159      	bne.n	8026e08 <_scanf_float+0x414>
 8026d54:	7035      	strb	r5, [r6, #0]
 8026d56:	6823      	ldr	r3, [r4, #0]
 8026d58:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8026d5c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8026d60:	d11b      	bne.n	8026d9a <_scanf_float+0x3a6>
 8026d62:	9b01      	ldr	r3, [sp, #4]
 8026d64:	454b      	cmp	r3, r9
 8026d66:	eba3 0209 	sub.w	r2, r3, r9
 8026d6a:	d123      	bne.n	8026db4 <_scanf_float+0x3c0>
 8026d6c:	2200      	movs	r2, #0
 8026d6e:	4659      	mov	r1, fp
 8026d70:	4640      	mov	r0, r8
 8026d72:	f002 f89b 	bl	8028eac <_strtod_r>
 8026d76:	6822      	ldr	r2, [r4, #0]
 8026d78:	9b03      	ldr	r3, [sp, #12]
 8026d7a:	f012 0f02 	tst.w	r2, #2
 8026d7e:	ec57 6b10 	vmov	r6, r7, d0
 8026d82:	681b      	ldr	r3, [r3, #0]
 8026d84:	d021      	beq.n	8026dca <_scanf_float+0x3d6>
 8026d86:	9903      	ldr	r1, [sp, #12]
 8026d88:	1d1a      	adds	r2, r3, #4
 8026d8a:	600a      	str	r2, [r1, #0]
 8026d8c:	681b      	ldr	r3, [r3, #0]
 8026d8e:	e9c3 6700 	strd	r6, r7, [r3]
 8026d92:	68e3      	ldr	r3, [r4, #12]
 8026d94:	3301      	adds	r3, #1
 8026d96:	60e3      	str	r3, [r4, #12]
 8026d98:	e66d      	b.n	8026a76 <_scanf_float+0x82>
 8026d9a:	9b04      	ldr	r3, [sp, #16]
 8026d9c:	2b00      	cmp	r3, #0
 8026d9e:	d0e5      	beq.n	8026d6c <_scanf_float+0x378>
 8026da0:	9905      	ldr	r1, [sp, #20]
 8026da2:	230a      	movs	r3, #10
 8026da4:	462a      	mov	r2, r5
 8026da6:	3101      	adds	r1, #1
 8026da8:	4640      	mov	r0, r8
 8026daa:	f002 f9cb 	bl	8029144 <_strtol_r>
 8026dae:	9b04      	ldr	r3, [sp, #16]
 8026db0:	9e05      	ldr	r6, [sp, #20]
 8026db2:	1ac2      	subs	r2, r0, r3
 8026db4:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8026db8:	429e      	cmp	r6, r3
 8026dba:	bf28      	it	cs
 8026dbc:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8026dc0:	4912      	ldr	r1, [pc, #72]	; (8026e0c <_scanf_float+0x418>)
 8026dc2:	4630      	mov	r0, r6
 8026dc4:	f000 fa8a 	bl	80272dc <siprintf>
 8026dc8:	e7d0      	b.n	8026d6c <_scanf_float+0x378>
 8026dca:	9903      	ldr	r1, [sp, #12]
 8026dcc:	f012 0f04 	tst.w	r2, #4
 8026dd0:	f103 0204 	add.w	r2, r3, #4
 8026dd4:	600a      	str	r2, [r1, #0]
 8026dd6:	d1d9      	bne.n	8026d8c <_scanf_float+0x398>
 8026dd8:	f8d3 8000 	ldr.w	r8, [r3]
 8026ddc:	ee10 2a10 	vmov	r2, s0
 8026de0:	ee10 0a10 	vmov	r0, s0
 8026de4:	463b      	mov	r3, r7
 8026de6:	4639      	mov	r1, r7
 8026de8:	f7d9 feaa 	bl	8000b40 <__aeabi_dcmpun>
 8026dec:	b128      	cbz	r0, 8026dfa <_scanf_float+0x406>
 8026dee:	4808      	ldr	r0, [pc, #32]	; (8026e10 <_scanf_float+0x41c>)
 8026df0:	f000 fa2a 	bl	8027248 <nanf>
 8026df4:	ed88 0a00 	vstr	s0, [r8]
 8026df8:	e7cb      	b.n	8026d92 <_scanf_float+0x39e>
 8026dfa:	4630      	mov	r0, r6
 8026dfc:	4639      	mov	r1, r7
 8026dfe:	f7d9 fefd 	bl	8000bfc <__aeabi_d2f>
 8026e02:	f8c8 0000 	str.w	r0, [r8]
 8026e06:	e7c4      	b.n	8026d92 <_scanf_float+0x39e>
 8026e08:	2500      	movs	r5, #0
 8026e0a:	e634      	b.n	8026a76 <_scanf_float+0x82>
 8026e0c:	080321a5 	.word	0x080321a5
 8026e10:	08032cb9 	.word	0x08032cb9

08026e14 <iprintf>:
 8026e14:	b40f      	push	{r0, r1, r2, r3}
 8026e16:	4b0a      	ldr	r3, [pc, #40]	; (8026e40 <iprintf+0x2c>)
 8026e18:	b513      	push	{r0, r1, r4, lr}
 8026e1a:	681c      	ldr	r4, [r3, #0]
 8026e1c:	b124      	cbz	r4, 8026e28 <iprintf+0x14>
 8026e1e:	69a3      	ldr	r3, [r4, #24]
 8026e20:	b913      	cbnz	r3, 8026e28 <iprintf+0x14>
 8026e22:	4620      	mov	r0, r4
 8026e24:	f7fe fb94 	bl	8025550 <__sinit>
 8026e28:	ab05      	add	r3, sp, #20
 8026e2a:	9a04      	ldr	r2, [sp, #16]
 8026e2c:	68a1      	ldr	r1, [r4, #8]
 8026e2e:	9301      	str	r3, [sp, #4]
 8026e30:	4620      	mov	r0, r4
 8026e32:	f006 f995 	bl	802d160 <_vfiprintf_r>
 8026e36:	b002      	add	sp, #8
 8026e38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026e3c:	b004      	add	sp, #16
 8026e3e:	4770      	bx	lr
 8026e40:	200000bc 	.word	0x200000bc

08026e44 <_putc_r>:
 8026e44:	b570      	push	{r4, r5, r6, lr}
 8026e46:	460d      	mov	r5, r1
 8026e48:	4614      	mov	r4, r2
 8026e4a:	4606      	mov	r6, r0
 8026e4c:	b118      	cbz	r0, 8026e56 <_putc_r+0x12>
 8026e4e:	6983      	ldr	r3, [r0, #24]
 8026e50:	b90b      	cbnz	r3, 8026e56 <_putc_r+0x12>
 8026e52:	f7fe fb7d 	bl	8025550 <__sinit>
 8026e56:	4b1c      	ldr	r3, [pc, #112]	; (8026ec8 <_putc_r+0x84>)
 8026e58:	429c      	cmp	r4, r3
 8026e5a:	d124      	bne.n	8026ea6 <_putc_r+0x62>
 8026e5c:	6874      	ldr	r4, [r6, #4]
 8026e5e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8026e60:	07d8      	lsls	r0, r3, #31
 8026e62:	d405      	bmi.n	8026e70 <_putc_r+0x2c>
 8026e64:	89a3      	ldrh	r3, [r4, #12]
 8026e66:	0599      	lsls	r1, r3, #22
 8026e68:	d402      	bmi.n	8026e70 <_putc_r+0x2c>
 8026e6a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8026e6c:	f7fe ff86 	bl	8025d7c <__retarget_lock_acquire_recursive>
 8026e70:	68a3      	ldr	r3, [r4, #8]
 8026e72:	3b01      	subs	r3, #1
 8026e74:	2b00      	cmp	r3, #0
 8026e76:	60a3      	str	r3, [r4, #8]
 8026e78:	da05      	bge.n	8026e86 <_putc_r+0x42>
 8026e7a:	69a2      	ldr	r2, [r4, #24]
 8026e7c:	4293      	cmp	r3, r2
 8026e7e:	db1c      	blt.n	8026eba <_putc_r+0x76>
 8026e80:	b2eb      	uxtb	r3, r5
 8026e82:	2b0a      	cmp	r3, #10
 8026e84:	d019      	beq.n	8026eba <_putc_r+0x76>
 8026e86:	6823      	ldr	r3, [r4, #0]
 8026e88:	1c5a      	adds	r2, r3, #1
 8026e8a:	6022      	str	r2, [r4, #0]
 8026e8c:	701d      	strb	r5, [r3, #0]
 8026e8e:	b2ed      	uxtb	r5, r5
 8026e90:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8026e92:	07da      	lsls	r2, r3, #31
 8026e94:	d405      	bmi.n	8026ea2 <_putc_r+0x5e>
 8026e96:	89a3      	ldrh	r3, [r4, #12]
 8026e98:	059b      	lsls	r3, r3, #22
 8026e9a:	d402      	bmi.n	8026ea2 <_putc_r+0x5e>
 8026e9c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8026e9e:	f7fe ff6f 	bl	8025d80 <__retarget_lock_release_recursive>
 8026ea2:	4628      	mov	r0, r5
 8026ea4:	bd70      	pop	{r4, r5, r6, pc}
 8026ea6:	4b09      	ldr	r3, [pc, #36]	; (8026ecc <_putc_r+0x88>)
 8026ea8:	429c      	cmp	r4, r3
 8026eaa:	d101      	bne.n	8026eb0 <_putc_r+0x6c>
 8026eac:	68b4      	ldr	r4, [r6, #8]
 8026eae:	e7d6      	b.n	8026e5e <_putc_r+0x1a>
 8026eb0:	4b07      	ldr	r3, [pc, #28]	; (8026ed0 <_putc_r+0x8c>)
 8026eb2:	429c      	cmp	r4, r3
 8026eb4:	bf08      	it	eq
 8026eb6:	68f4      	ldreq	r4, [r6, #12]
 8026eb8:	e7d1      	b.n	8026e5e <_putc_r+0x1a>
 8026eba:	4629      	mov	r1, r5
 8026ebc:	4622      	mov	r2, r4
 8026ebe:	4630      	mov	r0, r6
 8026ec0:	f002 fd04 	bl	80298cc <__swbuf_r>
 8026ec4:	4605      	mov	r5, r0
 8026ec6:	e7e3      	b.n	8026e90 <_putc_r+0x4c>
 8026ec8:	08032138 	.word	0x08032138
 8026ecc:	08032158 	.word	0x08032158
 8026ed0:	08032118 	.word	0x08032118

08026ed4 <putc>:
 8026ed4:	4b02      	ldr	r3, [pc, #8]	; (8026ee0 <putc+0xc>)
 8026ed6:	460a      	mov	r2, r1
 8026ed8:	4601      	mov	r1, r0
 8026eda:	6818      	ldr	r0, [r3, #0]
 8026edc:	f7ff bfb2 	b.w	8026e44 <_putc_r>
 8026ee0:	200000bc 	.word	0x200000bc

08026ee4 <_puts_r>:
 8026ee4:	b570      	push	{r4, r5, r6, lr}
 8026ee6:	460e      	mov	r6, r1
 8026ee8:	4605      	mov	r5, r0
 8026eea:	b118      	cbz	r0, 8026ef4 <_puts_r+0x10>
 8026eec:	6983      	ldr	r3, [r0, #24]
 8026eee:	b90b      	cbnz	r3, 8026ef4 <_puts_r+0x10>
 8026ef0:	f7fe fb2e 	bl	8025550 <__sinit>
 8026ef4:	69ab      	ldr	r3, [r5, #24]
 8026ef6:	68ac      	ldr	r4, [r5, #8]
 8026ef8:	b913      	cbnz	r3, 8026f00 <_puts_r+0x1c>
 8026efa:	4628      	mov	r0, r5
 8026efc:	f7fe fb28 	bl	8025550 <__sinit>
 8026f00:	4b2c      	ldr	r3, [pc, #176]	; (8026fb4 <_puts_r+0xd0>)
 8026f02:	429c      	cmp	r4, r3
 8026f04:	d120      	bne.n	8026f48 <_puts_r+0x64>
 8026f06:	686c      	ldr	r4, [r5, #4]
 8026f08:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8026f0a:	07db      	lsls	r3, r3, #31
 8026f0c:	d405      	bmi.n	8026f1a <_puts_r+0x36>
 8026f0e:	89a3      	ldrh	r3, [r4, #12]
 8026f10:	0598      	lsls	r0, r3, #22
 8026f12:	d402      	bmi.n	8026f1a <_puts_r+0x36>
 8026f14:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8026f16:	f7fe ff31 	bl	8025d7c <__retarget_lock_acquire_recursive>
 8026f1a:	89a3      	ldrh	r3, [r4, #12]
 8026f1c:	0719      	lsls	r1, r3, #28
 8026f1e:	d51d      	bpl.n	8026f5c <_puts_r+0x78>
 8026f20:	6923      	ldr	r3, [r4, #16]
 8026f22:	b1db      	cbz	r3, 8026f5c <_puts_r+0x78>
 8026f24:	3e01      	subs	r6, #1
 8026f26:	68a3      	ldr	r3, [r4, #8]
 8026f28:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8026f2c:	3b01      	subs	r3, #1
 8026f2e:	60a3      	str	r3, [r4, #8]
 8026f30:	bb39      	cbnz	r1, 8026f82 <_puts_r+0x9e>
 8026f32:	2b00      	cmp	r3, #0
 8026f34:	da38      	bge.n	8026fa8 <_puts_r+0xc4>
 8026f36:	4622      	mov	r2, r4
 8026f38:	210a      	movs	r1, #10
 8026f3a:	4628      	mov	r0, r5
 8026f3c:	f002 fcc6 	bl	80298cc <__swbuf_r>
 8026f40:	3001      	adds	r0, #1
 8026f42:	d011      	beq.n	8026f68 <_puts_r+0x84>
 8026f44:	250a      	movs	r5, #10
 8026f46:	e011      	b.n	8026f6c <_puts_r+0x88>
 8026f48:	4b1b      	ldr	r3, [pc, #108]	; (8026fb8 <_puts_r+0xd4>)
 8026f4a:	429c      	cmp	r4, r3
 8026f4c:	d101      	bne.n	8026f52 <_puts_r+0x6e>
 8026f4e:	68ac      	ldr	r4, [r5, #8]
 8026f50:	e7da      	b.n	8026f08 <_puts_r+0x24>
 8026f52:	4b1a      	ldr	r3, [pc, #104]	; (8026fbc <_puts_r+0xd8>)
 8026f54:	429c      	cmp	r4, r3
 8026f56:	bf08      	it	eq
 8026f58:	68ec      	ldreq	r4, [r5, #12]
 8026f5a:	e7d5      	b.n	8026f08 <_puts_r+0x24>
 8026f5c:	4621      	mov	r1, r4
 8026f5e:	4628      	mov	r0, r5
 8026f60:	f003 fc1a 	bl	802a798 <__swsetup_r>
 8026f64:	2800      	cmp	r0, #0
 8026f66:	d0dd      	beq.n	8026f24 <_puts_r+0x40>
 8026f68:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8026f6c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8026f6e:	07da      	lsls	r2, r3, #31
 8026f70:	d405      	bmi.n	8026f7e <_puts_r+0x9a>
 8026f72:	89a3      	ldrh	r3, [r4, #12]
 8026f74:	059b      	lsls	r3, r3, #22
 8026f76:	d402      	bmi.n	8026f7e <_puts_r+0x9a>
 8026f78:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8026f7a:	f7fe ff01 	bl	8025d80 <__retarget_lock_release_recursive>
 8026f7e:	4628      	mov	r0, r5
 8026f80:	bd70      	pop	{r4, r5, r6, pc}
 8026f82:	2b00      	cmp	r3, #0
 8026f84:	da04      	bge.n	8026f90 <_puts_r+0xac>
 8026f86:	69a2      	ldr	r2, [r4, #24]
 8026f88:	429a      	cmp	r2, r3
 8026f8a:	dc06      	bgt.n	8026f9a <_puts_r+0xb6>
 8026f8c:	290a      	cmp	r1, #10
 8026f8e:	d004      	beq.n	8026f9a <_puts_r+0xb6>
 8026f90:	6823      	ldr	r3, [r4, #0]
 8026f92:	1c5a      	adds	r2, r3, #1
 8026f94:	6022      	str	r2, [r4, #0]
 8026f96:	7019      	strb	r1, [r3, #0]
 8026f98:	e7c5      	b.n	8026f26 <_puts_r+0x42>
 8026f9a:	4622      	mov	r2, r4
 8026f9c:	4628      	mov	r0, r5
 8026f9e:	f002 fc95 	bl	80298cc <__swbuf_r>
 8026fa2:	3001      	adds	r0, #1
 8026fa4:	d1bf      	bne.n	8026f26 <_puts_r+0x42>
 8026fa6:	e7df      	b.n	8026f68 <_puts_r+0x84>
 8026fa8:	6823      	ldr	r3, [r4, #0]
 8026faa:	250a      	movs	r5, #10
 8026fac:	1c5a      	adds	r2, r3, #1
 8026fae:	6022      	str	r2, [r4, #0]
 8026fb0:	701d      	strb	r5, [r3, #0]
 8026fb2:	e7db      	b.n	8026f6c <_puts_r+0x88>
 8026fb4:	08032138 	.word	0x08032138
 8026fb8:	08032158 	.word	0x08032158
 8026fbc:	08032118 	.word	0x08032118

08026fc0 <puts>:
 8026fc0:	4b02      	ldr	r3, [pc, #8]	; (8026fcc <puts+0xc>)
 8026fc2:	4601      	mov	r1, r0
 8026fc4:	6818      	ldr	r0, [r3, #0]
 8026fc6:	f7ff bf8d 	b.w	8026ee4 <_puts_r>
 8026fca:	bf00      	nop
 8026fcc:	200000bc 	.word	0x200000bc

08026fd0 <putwc>:
 8026fd0:	f004 bbf2 	b.w	802b7b8 <fputwc>

08026fd4 <cleanup_glue>:
 8026fd4:	b538      	push	{r3, r4, r5, lr}
 8026fd6:	460c      	mov	r4, r1
 8026fd8:	6809      	ldr	r1, [r1, #0]
 8026fda:	4605      	mov	r5, r0
 8026fdc:	b109      	cbz	r1, 8026fe2 <cleanup_glue+0xe>
 8026fde:	f7ff fff9 	bl	8026fd4 <cleanup_glue>
 8026fe2:	4621      	mov	r1, r4
 8026fe4:	4628      	mov	r0, r5
 8026fe6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8026fea:	f7fe bfb9 	b.w	8025f60 <_free_r>
	...

08026ff0 <_reclaim_reent>:
 8026ff0:	4b2c      	ldr	r3, [pc, #176]	; (80270a4 <_reclaim_reent+0xb4>)
 8026ff2:	681b      	ldr	r3, [r3, #0]
 8026ff4:	4283      	cmp	r3, r0
 8026ff6:	b570      	push	{r4, r5, r6, lr}
 8026ff8:	4604      	mov	r4, r0
 8026ffa:	d051      	beq.n	80270a0 <_reclaim_reent+0xb0>
 8026ffc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8026ffe:	b143      	cbz	r3, 8027012 <_reclaim_reent+0x22>
 8027000:	68db      	ldr	r3, [r3, #12]
 8027002:	2b00      	cmp	r3, #0
 8027004:	d14a      	bne.n	802709c <_reclaim_reent+0xac>
 8027006:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8027008:	6819      	ldr	r1, [r3, #0]
 802700a:	b111      	cbz	r1, 8027012 <_reclaim_reent+0x22>
 802700c:	4620      	mov	r0, r4
 802700e:	f7fe ffa7 	bl	8025f60 <_free_r>
 8027012:	6961      	ldr	r1, [r4, #20]
 8027014:	b111      	cbz	r1, 802701c <_reclaim_reent+0x2c>
 8027016:	4620      	mov	r0, r4
 8027018:	f7fe ffa2 	bl	8025f60 <_free_r>
 802701c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802701e:	b111      	cbz	r1, 8027026 <_reclaim_reent+0x36>
 8027020:	4620      	mov	r0, r4
 8027022:	f7fe ff9d 	bl	8025f60 <_free_r>
 8027026:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8027028:	b111      	cbz	r1, 8027030 <_reclaim_reent+0x40>
 802702a:	4620      	mov	r0, r4
 802702c:	f7fe ff98 	bl	8025f60 <_free_r>
 8027030:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8027032:	b111      	cbz	r1, 802703a <_reclaim_reent+0x4a>
 8027034:	4620      	mov	r0, r4
 8027036:	f7fe ff93 	bl	8025f60 <_free_r>
 802703a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802703c:	b111      	cbz	r1, 8027044 <_reclaim_reent+0x54>
 802703e:	4620      	mov	r0, r4
 8027040:	f7fe ff8e 	bl	8025f60 <_free_r>
 8027044:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8027046:	b111      	cbz	r1, 802704e <_reclaim_reent+0x5e>
 8027048:	4620      	mov	r0, r4
 802704a:	f7fe ff89 	bl	8025f60 <_free_r>
 802704e:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8027050:	b111      	cbz	r1, 8027058 <_reclaim_reent+0x68>
 8027052:	4620      	mov	r0, r4
 8027054:	f7fe ff84 	bl	8025f60 <_free_r>
 8027058:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802705a:	b111      	cbz	r1, 8027062 <_reclaim_reent+0x72>
 802705c:	4620      	mov	r0, r4
 802705e:	f7fe ff7f 	bl	8025f60 <_free_r>
 8027062:	69a3      	ldr	r3, [r4, #24]
 8027064:	b1e3      	cbz	r3, 80270a0 <_reclaim_reent+0xb0>
 8027066:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8027068:	4620      	mov	r0, r4
 802706a:	4798      	blx	r3
 802706c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802706e:	b1b9      	cbz	r1, 80270a0 <_reclaim_reent+0xb0>
 8027070:	4620      	mov	r0, r4
 8027072:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027076:	f7ff bfad 	b.w	8026fd4 <cleanup_glue>
 802707a:	5949      	ldr	r1, [r1, r5]
 802707c:	b941      	cbnz	r1, 8027090 <_reclaim_reent+0xa0>
 802707e:	3504      	adds	r5, #4
 8027080:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8027082:	2d80      	cmp	r5, #128	; 0x80
 8027084:	68d9      	ldr	r1, [r3, #12]
 8027086:	d1f8      	bne.n	802707a <_reclaim_reent+0x8a>
 8027088:	4620      	mov	r0, r4
 802708a:	f7fe ff69 	bl	8025f60 <_free_r>
 802708e:	e7ba      	b.n	8027006 <_reclaim_reent+0x16>
 8027090:	680e      	ldr	r6, [r1, #0]
 8027092:	4620      	mov	r0, r4
 8027094:	f7fe ff64 	bl	8025f60 <_free_r>
 8027098:	4631      	mov	r1, r6
 802709a:	e7ef      	b.n	802707c <_reclaim_reent+0x8c>
 802709c:	2500      	movs	r5, #0
 802709e:	e7ef      	b.n	8027080 <_reclaim_reent+0x90>
 80270a0:	bd70      	pop	{r4, r5, r6, pc}
 80270a2:	bf00      	nop
 80270a4:	200000bc 	.word	0x200000bc

080270a8 <lflush>:
 80270a8:	8983      	ldrh	r3, [r0, #12]
 80270aa:	f003 0309 	and.w	r3, r3, #9
 80270ae:	2b09      	cmp	r3, #9
 80270b0:	d101      	bne.n	80270b6 <lflush+0xe>
 80270b2:	f7fe b9e3 	b.w	802547c <fflush>
 80270b6:	2000      	movs	r0, #0
 80270b8:	4770      	bx	lr
	...

080270bc <__srefill_r>:
 80270bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80270be:	460c      	mov	r4, r1
 80270c0:	4605      	mov	r5, r0
 80270c2:	b118      	cbz	r0, 80270cc <__srefill_r+0x10>
 80270c4:	6983      	ldr	r3, [r0, #24]
 80270c6:	b90b      	cbnz	r3, 80270cc <__srefill_r+0x10>
 80270c8:	f7fe fa42 	bl	8025550 <__sinit>
 80270cc:	4b3b      	ldr	r3, [pc, #236]	; (80271bc <__srefill_r+0x100>)
 80270ce:	429c      	cmp	r4, r3
 80270d0:	d10a      	bne.n	80270e8 <__srefill_r+0x2c>
 80270d2:	686c      	ldr	r4, [r5, #4]
 80270d4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80270d8:	2300      	movs	r3, #0
 80270da:	6063      	str	r3, [r4, #4]
 80270dc:	89a3      	ldrh	r3, [r4, #12]
 80270de:	069e      	lsls	r6, r3, #26
 80270e0:	d50c      	bpl.n	80270fc <__srefill_r+0x40>
 80270e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80270e6:	e066      	b.n	80271b6 <__srefill_r+0xfa>
 80270e8:	4b35      	ldr	r3, [pc, #212]	; (80271c0 <__srefill_r+0x104>)
 80270ea:	429c      	cmp	r4, r3
 80270ec:	d101      	bne.n	80270f2 <__srefill_r+0x36>
 80270ee:	68ac      	ldr	r4, [r5, #8]
 80270f0:	e7f0      	b.n	80270d4 <__srefill_r+0x18>
 80270f2:	4b34      	ldr	r3, [pc, #208]	; (80271c4 <__srefill_r+0x108>)
 80270f4:	429c      	cmp	r4, r3
 80270f6:	bf08      	it	eq
 80270f8:	68ec      	ldreq	r4, [r5, #12]
 80270fa:	e7eb      	b.n	80270d4 <__srefill_r+0x18>
 80270fc:	0758      	lsls	r0, r3, #29
 80270fe:	d448      	bmi.n	8027192 <__srefill_r+0xd6>
 8027100:	06d9      	lsls	r1, r3, #27
 8027102:	d405      	bmi.n	8027110 <__srefill_r+0x54>
 8027104:	2309      	movs	r3, #9
 8027106:	602b      	str	r3, [r5, #0]
 8027108:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802710c:	81a3      	strh	r3, [r4, #12]
 802710e:	e7e8      	b.n	80270e2 <__srefill_r+0x26>
 8027110:	071a      	lsls	r2, r3, #28
 8027112:	d50b      	bpl.n	802712c <__srefill_r+0x70>
 8027114:	4621      	mov	r1, r4
 8027116:	4628      	mov	r0, r5
 8027118:	f7fe f974 	bl	8025404 <_fflush_r>
 802711c:	2800      	cmp	r0, #0
 802711e:	d1e0      	bne.n	80270e2 <__srefill_r+0x26>
 8027120:	89a3      	ldrh	r3, [r4, #12]
 8027122:	60a0      	str	r0, [r4, #8]
 8027124:	f023 0308 	bic.w	r3, r3, #8
 8027128:	81a3      	strh	r3, [r4, #12]
 802712a:	61a0      	str	r0, [r4, #24]
 802712c:	89a3      	ldrh	r3, [r4, #12]
 802712e:	f043 0304 	orr.w	r3, r3, #4
 8027132:	81a3      	strh	r3, [r4, #12]
 8027134:	6923      	ldr	r3, [r4, #16]
 8027136:	b91b      	cbnz	r3, 8027140 <__srefill_r+0x84>
 8027138:	4621      	mov	r1, r4
 802713a:	4628      	mov	r0, r5
 802713c:	f7fe fe46 	bl	8025dcc <__smakebuf_r>
 8027140:	89a6      	ldrh	r6, [r4, #12]
 8027142:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 8027146:	07b3      	lsls	r3, r6, #30
 8027148:	d00f      	beq.n	802716a <__srefill_r+0xae>
 802714a:	2301      	movs	r3, #1
 802714c:	81a3      	strh	r3, [r4, #12]
 802714e:	4b1e      	ldr	r3, [pc, #120]	; (80271c8 <__srefill_r+0x10c>)
 8027150:	491e      	ldr	r1, [pc, #120]	; (80271cc <__srefill_r+0x110>)
 8027152:	6818      	ldr	r0, [r3, #0]
 8027154:	f006 0609 	and.w	r6, r6, #9
 8027158:	f7fe fc34 	bl	80259c4 <_fwalk>
 802715c:	2e09      	cmp	r6, #9
 802715e:	81a7      	strh	r7, [r4, #12]
 8027160:	d103      	bne.n	802716a <__srefill_r+0xae>
 8027162:	4621      	mov	r1, r4
 8027164:	4628      	mov	r0, r5
 8027166:	f7fe f8c7 	bl	80252f8 <__sflush_r>
 802716a:	6922      	ldr	r2, [r4, #16]
 802716c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 802716e:	6963      	ldr	r3, [r4, #20]
 8027170:	6a21      	ldr	r1, [r4, #32]
 8027172:	6022      	str	r2, [r4, #0]
 8027174:	4628      	mov	r0, r5
 8027176:	47b0      	blx	r6
 8027178:	2800      	cmp	r0, #0
 802717a:	6060      	str	r0, [r4, #4]
 802717c:	dc1c      	bgt.n	80271b8 <__srefill_r+0xfc>
 802717e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8027182:	bf17      	itett	ne
 8027184:	2200      	movne	r2, #0
 8027186:	f043 0320 	orreq.w	r3, r3, #32
 802718a:	6062      	strne	r2, [r4, #4]
 802718c:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 8027190:	e7bc      	b.n	802710c <__srefill_r+0x50>
 8027192:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8027194:	2900      	cmp	r1, #0
 8027196:	d0cd      	beq.n	8027134 <__srefill_r+0x78>
 8027198:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802719c:	4299      	cmp	r1, r3
 802719e:	d002      	beq.n	80271a6 <__srefill_r+0xea>
 80271a0:	4628      	mov	r0, r5
 80271a2:	f7fe fedd 	bl	8025f60 <_free_r>
 80271a6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80271a8:	6063      	str	r3, [r4, #4]
 80271aa:	2000      	movs	r0, #0
 80271ac:	6360      	str	r0, [r4, #52]	; 0x34
 80271ae:	2b00      	cmp	r3, #0
 80271b0:	d0c0      	beq.n	8027134 <__srefill_r+0x78>
 80271b2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80271b4:	6023      	str	r3, [r4, #0]
 80271b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80271b8:	2000      	movs	r0, #0
 80271ba:	e7fc      	b.n	80271b6 <__srefill_r+0xfa>
 80271bc:	08032138 	.word	0x08032138
 80271c0:	08032158 	.word	0x08032158
 80271c4:	08032118 	.word	0x08032118
 80271c8:	08032178 	.word	0x08032178
 80271cc:	080270a9 	.word	0x080270a9

080271d0 <__srget_r>:
 80271d0:	b538      	push	{r3, r4, r5, lr}
 80271d2:	460c      	mov	r4, r1
 80271d4:	4605      	mov	r5, r0
 80271d6:	b118      	cbz	r0, 80271e0 <__srget_r+0x10>
 80271d8:	6983      	ldr	r3, [r0, #24]
 80271da:	b90b      	cbnz	r3, 80271e0 <__srget_r+0x10>
 80271dc:	f7fe f9b8 	bl	8025550 <__sinit>
 80271e0:	4b0e      	ldr	r3, [pc, #56]	; (802721c <__srget_r+0x4c>)
 80271e2:	429c      	cmp	r4, r3
 80271e4:	d10d      	bne.n	8027202 <__srget_r+0x32>
 80271e6:	686c      	ldr	r4, [r5, #4]
 80271e8:	4621      	mov	r1, r4
 80271ea:	4628      	mov	r0, r5
 80271ec:	f7ff ff66 	bl	80270bc <__srefill_r>
 80271f0:	b988      	cbnz	r0, 8027216 <__srget_r+0x46>
 80271f2:	6863      	ldr	r3, [r4, #4]
 80271f4:	3b01      	subs	r3, #1
 80271f6:	6063      	str	r3, [r4, #4]
 80271f8:	6823      	ldr	r3, [r4, #0]
 80271fa:	1c5a      	adds	r2, r3, #1
 80271fc:	6022      	str	r2, [r4, #0]
 80271fe:	7818      	ldrb	r0, [r3, #0]
 8027200:	bd38      	pop	{r3, r4, r5, pc}
 8027202:	4b07      	ldr	r3, [pc, #28]	; (8027220 <__srget_r+0x50>)
 8027204:	429c      	cmp	r4, r3
 8027206:	d101      	bne.n	802720c <__srget_r+0x3c>
 8027208:	68ac      	ldr	r4, [r5, #8]
 802720a:	e7ed      	b.n	80271e8 <__srget_r+0x18>
 802720c:	4b05      	ldr	r3, [pc, #20]	; (8027224 <__srget_r+0x54>)
 802720e:	429c      	cmp	r4, r3
 8027210:	bf08      	it	eq
 8027212:	68ec      	ldreq	r4, [r5, #12]
 8027214:	e7e8      	b.n	80271e8 <__srget_r+0x18>
 8027216:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802721a:	e7f1      	b.n	8027200 <__srget_r+0x30>
 802721c:	08032138 	.word	0x08032138
 8027220:	08032158 	.word	0x08032158
 8027224:	08032118 	.word	0x08032118

08027228 <_sbrk_r>:
 8027228:	b538      	push	{r3, r4, r5, lr}
 802722a:	4d06      	ldr	r5, [pc, #24]	; (8027244 <_sbrk_r+0x1c>)
 802722c:	2300      	movs	r3, #0
 802722e:	4604      	mov	r4, r0
 8027230:	4608      	mov	r0, r1
 8027232:	602b      	str	r3, [r5, #0]
 8027234:	f7db ff16 	bl	8003064 <_sbrk>
 8027238:	1c43      	adds	r3, r0, #1
 802723a:	d102      	bne.n	8027242 <_sbrk_r+0x1a>
 802723c:	682b      	ldr	r3, [r5, #0]
 802723e:	b103      	cbz	r3, 8027242 <_sbrk_r+0x1a>
 8027240:	6023      	str	r3, [r4, #0]
 8027242:	bd38      	pop	{r3, r4, r5, pc}
 8027244:	200042d4 	.word	0x200042d4

08027248 <nanf>:
 8027248:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8027250 <nanf+0x8>
 802724c:	4770      	bx	lr
 802724e:	bf00      	nop
 8027250:	7fc00000 	.word	0x7fc00000

08027254 <_raise_r>:
 8027254:	291f      	cmp	r1, #31
 8027256:	b538      	push	{r3, r4, r5, lr}
 8027258:	4604      	mov	r4, r0
 802725a:	460d      	mov	r5, r1
 802725c:	d904      	bls.n	8027268 <_raise_r+0x14>
 802725e:	2316      	movs	r3, #22
 8027260:	6003      	str	r3, [r0, #0]
 8027262:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8027266:	bd38      	pop	{r3, r4, r5, pc}
 8027268:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802726a:	b112      	cbz	r2, 8027272 <_raise_r+0x1e>
 802726c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8027270:	b94b      	cbnz	r3, 8027286 <_raise_r+0x32>
 8027272:	4620      	mov	r0, r4
 8027274:	f000 f830 	bl	80272d8 <_getpid_r>
 8027278:	462a      	mov	r2, r5
 802727a:	4601      	mov	r1, r0
 802727c:	4620      	mov	r0, r4
 802727e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8027282:	f000 b817 	b.w	80272b4 <_kill_r>
 8027286:	2b01      	cmp	r3, #1
 8027288:	d00a      	beq.n	80272a0 <_raise_r+0x4c>
 802728a:	1c59      	adds	r1, r3, #1
 802728c:	d103      	bne.n	8027296 <_raise_r+0x42>
 802728e:	2316      	movs	r3, #22
 8027290:	6003      	str	r3, [r0, #0]
 8027292:	2001      	movs	r0, #1
 8027294:	e7e7      	b.n	8027266 <_raise_r+0x12>
 8027296:	2400      	movs	r4, #0
 8027298:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802729c:	4628      	mov	r0, r5
 802729e:	4798      	blx	r3
 80272a0:	2000      	movs	r0, #0
 80272a2:	e7e0      	b.n	8027266 <_raise_r+0x12>

080272a4 <raise>:
 80272a4:	4b02      	ldr	r3, [pc, #8]	; (80272b0 <raise+0xc>)
 80272a6:	4601      	mov	r1, r0
 80272a8:	6818      	ldr	r0, [r3, #0]
 80272aa:	f7ff bfd3 	b.w	8027254 <_raise_r>
 80272ae:	bf00      	nop
 80272b0:	200000bc 	.word	0x200000bc

080272b4 <_kill_r>:
 80272b4:	b538      	push	{r3, r4, r5, lr}
 80272b6:	4d07      	ldr	r5, [pc, #28]	; (80272d4 <_kill_r+0x20>)
 80272b8:	2300      	movs	r3, #0
 80272ba:	4604      	mov	r4, r0
 80272bc:	4608      	mov	r0, r1
 80272be:	4611      	mov	r1, r2
 80272c0:	602b      	str	r3, [r5, #0]
 80272c2:	f7db fe63 	bl	8002f8c <_kill>
 80272c6:	1c43      	adds	r3, r0, #1
 80272c8:	d102      	bne.n	80272d0 <_kill_r+0x1c>
 80272ca:	682b      	ldr	r3, [r5, #0]
 80272cc:	b103      	cbz	r3, 80272d0 <_kill_r+0x1c>
 80272ce:	6023      	str	r3, [r4, #0]
 80272d0:	bd38      	pop	{r3, r4, r5, pc}
 80272d2:	bf00      	nop
 80272d4:	200042d4 	.word	0x200042d4

080272d8 <_getpid_r>:
 80272d8:	f7db be50 	b.w	8002f7c <_getpid>

080272dc <siprintf>:
 80272dc:	b40e      	push	{r1, r2, r3}
 80272de:	b500      	push	{lr}
 80272e0:	b09c      	sub	sp, #112	; 0x70
 80272e2:	ab1d      	add	r3, sp, #116	; 0x74
 80272e4:	9002      	str	r0, [sp, #8]
 80272e6:	9006      	str	r0, [sp, #24]
 80272e8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80272ec:	4809      	ldr	r0, [pc, #36]	; (8027314 <siprintf+0x38>)
 80272ee:	9107      	str	r1, [sp, #28]
 80272f0:	9104      	str	r1, [sp, #16]
 80272f2:	4909      	ldr	r1, [pc, #36]	; (8027318 <siprintf+0x3c>)
 80272f4:	f853 2b04 	ldr.w	r2, [r3], #4
 80272f8:	9105      	str	r1, [sp, #20]
 80272fa:	6800      	ldr	r0, [r0, #0]
 80272fc:	9301      	str	r3, [sp, #4]
 80272fe:	a902      	add	r1, sp, #8
 8027300:	f005 fc32 	bl	802cb68 <_svfiprintf_r>
 8027304:	9b02      	ldr	r3, [sp, #8]
 8027306:	2200      	movs	r2, #0
 8027308:	701a      	strb	r2, [r3, #0]
 802730a:	b01c      	add	sp, #112	; 0x70
 802730c:	f85d eb04 	ldr.w	lr, [sp], #4
 8027310:	b003      	add	sp, #12
 8027312:	4770      	bx	lr
 8027314:	200000bc 	.word	0x200000bc
 8027318:	ffff0208 	.word	0xffff0208

0802731c <siscanf>:
 802731c:	b40e      	push	{r1, r2, r3}
 802731e:	b510      	push	{r4, lr}
 8027320:	b09f      	sub	sp, #124	; 0x7c
 8027322:	ac21      	add	r4, sp, #132	; 0x84
 8027324:	f44f 7101 	mov.w	r1, #516	; 0x204
 8027328:	f854 2b04 	ldr.w	r2, [r4], #4
 802732c:	9201      	str	r2, [sp, #4]
 802732e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8027332:	9004      	str	r0, [sp, #16]
 8027334:	9008      	str	r0, [sp, #32]
 8027336:	f7d8 ffa5 	bl	8000284 <strlen>
 802733a:	4b0c      	ldr	r3, [pc, #48]	; (802736c <siscanf+0x50>)
 802733c:	9005      	str	r0, [sp, #20]
 802733e:	9009      	str	r0, [sp, #36]	; 0x24
 8027340:	930d      	str	r3, [sp, #52]	; 0x34
 8027342:	480b      	ldr	r0, [pc, #44]	; (8027370 <siscanf+0x54>)
 8027344:	9a01      	ldr	r2, [sp, #4]
 8027346:	6800      	ldr	r0, [r0, #0]
 8027348:	9403      	str	r4, [sp, #12]
 802734a:	2300      	movs	r3, #0
 802734c:	9311      	str	r3, [sp, #68]	; 0x44
 802734e:	9316      	str	r3, [sp, #88]	; 0x58
 8027350:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8027354:	f8ad 301e 	strh.w	r3, [sp, #30]
 8027358:	a904      	add	r1, sp, #16
 802735a:	4623      	mov	r3, r4
 802735c:	f005 fd5e 	bl	802ce1c <__ssvfiscanf_r>
 8027360:	b01f      	add	sp, #124	; 0x7c
 8027362:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027366:	b003      	add	sp, #12
 8027368:	4770      	bx	lr
 802736a:	bf00      	nop
 802736c:	08027397 	.word	0x08027397
 8027370:	200000bc 	.word	0x200000bc

08027374 <__sread>:
 8027374:	b510      	push	{r4, lr}
 8027376:	460c      	mov	r4, r1
 8027378:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802737c:	f006 f972 	bl	802d664 <_read_r>
 8027380:	2800      	cmp	r0, #0
 8027382:	bfab      	itete	ge
 8027384:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8027386:	89a3      	ldrhlt	r3, [r4, #12]
 8027388:	181b      	addge	r3, r3, r0
 802738a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802738e:	bfac      	ite	ge
 8027390:	6563      	strge	r3, [r4, #84]	; 0x54
 8027392:	81a3      	strhlt	r3, [r4, #12]
 8027394:	bd10      	pop	{r4, pc}

08027396 <__seofread>:
 8027396:	2000      	movs	r0, #0
 8027398:	4770      	bx	lr

0802739a <__swrite>:
 802739a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802739e:	461f      	mov	r7, r3
 80273a0:	898b      	ldrh	r3, [r1, #12]
 80273a2:	05db      	lsls	r3, r3, #23
 80273a4:	4605      	mov	r5, r0
 80273a6:	460c      	mov	r4, r1
 80273a8:	4616      	mov	r6, r2
 80273aa:	d505      	bpl.n	80273b8 <__swrite+0x1e>
 80273ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80273b0:	2302      	movs	r3, #2
 80273b2:	2200      	movs	r2, #0
 80273b4:	f004 fe4a 	bl	802c04c <_lseek_r>
 80273b8:	89a3      	ldrh	r3, [r4, #12]
 80273ba:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80273be:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80273c2:	81a3      	strh	r3, [r4, #12]
 80273c4:	4632      	mov	r2, r6
 80273c6:	463b      	mov	r3, r7
 80273c8:	4628      	mov	r0, r5
 80273ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80273ce:	f003 b9d1 	b.w	802a774 <_write_r>

080273d2 <__sseek>:
 80273d2:	b510      	push	{r4, lr}
 80273d4:	460c      	mov	r4, r1
 80273d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80273da:	f004 fe37 	bl	802c04c <_lseek_r>
 80273de:	1c43      	adds	r3, r0, #1
 80273e0:	89a3      	ldrh	r3, [r4, #12]
 80273e2:	bf15      	itete	ne
 80273e4:	6560      	strne	r0, [r4, #84]	; 0x54
 80273e6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80273ea:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80273ee:	81a3      	strheq	r3, [r4, #12]
 80273f0:	bf18      	it	ne
 80273f2:	81a3      	strhne	r3, [r4, #12]
 80273f4:	bd10      	pop	{r4, pc}

080273f6 <__sclose>:
 80273f6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80273fa:	f003 ba5d 	b.w	802a8b8 <_close_r>

080273fe <strcoll>:
 80273fe:	f7d8 bf37 	b.w	8000270 <strcmp>

08027402 <strcpy>:
 8027402:	4603      	mov	r3, r0
 8027404:	f811 2b01 	ldrb.w	r2, [r1], #1
 8027408:	f803 2b01 	strb.w	r2, [r3], #1
 802740c:	2a00      	cmp	r2, #0
 802740e:	d1f9      	bne.n	8027404 <strcpy+0x2>
 8027410:	4770      	bx	lr
	...

08027414 <_strerror_r>:
 8027414:	b510      	push	{r4, lr}
 8027416:	4604      	mov	r4, r0
 8027418:	4608      	mov	r0, r1
 802741a:	4611      	mov	r1, r2
 802741c:	288e      	cmp	r0, #142	; 0x8e
 802741e:	f200 8130 	bhi.w	8027682 <_strerror_r+0x26e>
 8027422:	e8df f010 	tbh	[pc, r0, lsl #1]
 8027426:	0139      	.short	0x0139
 8027428:	0092008f 	.word	0x0092008f
 802742c:	00960094 	.word	0x00960094
 8027430:	009a0098 	.word	0x009a0098
 8027434:	009e009c 	.word	0x009e009c
 8027438:	00a400a2 	.word	0x00a400a2
 802743c:	00aa00a8 	.word	0x00aa00a8
 8027440:	00ae00ac 	.word	0x00ae00ac
 8027444:	00b0012e 	.word	0x00b0012e
 8027448:	00b400b2 	.word	0x00b400b2
 802744c:	00b800b6 	.word	0x00b800b6
 8027450:	00c000be 	.word	0x00c000be
 8027454:	00c800c6 	.word	0x00c800c6
 8027458:	00cc00ca 	.word	0x00cc00ca
 802745c:	00d200ce 	.word	0x00d200ce
 8027460:	00d800d6 	.word	0x00d800d6
 8027464:	00dc00da 	.word	0x00dc00da
 8027468:	00e000de 	.word	0x00e000de
 802746c:	00e400e2 	.word	0x00e400e2
 8027470:	012e012e 	.word	0x012e012e
 8027474:	012e012e 	.word	0x012e012e
 8027478:	012e012e 	.word	0x012e012e
 802747c:	012e012e 	.word	0x012e012e
 8027480:	00ec00e8 	.word	0x00ec00e8
 8027484:	012e012e 	.word	0x012e012e
 8027488:	012e012e 	.word	0x012e012e
 802748c:	012e012e 	.word	0x012e012e
 8027490:	012e012e 	.word	0x012e012e
 8027494:	012e012e 	.word	0x012e012e
 8027498:	012e012e 	.word	0x012e012e
 802749c:	00ee012e 	.word	0x00ee012e
 80274a0:	00f00108 	.word	0x00f00108
 80274a4:	012e00f2 	.word	0x012e00f2
 80274a8:	012e012e 	.word	0x012e012e
 80274ac:	012e00f4 	.word	0x012e00f4
 80274b0:	012e012e 	.word	0x012e012e
 80274b4:	012e00f6 	.word	0x012e00f6
 80274b8:	00fa012e 	.word	0x00fa012e
 80274bc:	012e012e 	.word	0x012e012e
 80274c0:	012e00fc 	.word	0x012e00fc
 80274c4:	012e012e 	.word	0x012e012e
 80274c8:	012e012e 	.word	0x012e012e
 80274cc:	012e012e 	.word	0x012e012e
 80274d0:	012e012e 	.word	0x012e012e
 80274d4:	00fe012e 	.word	0x00fe012e
 80274d8:	0100012e 	.word	0x0100012e
 80274dc:	01040102 	.word	0x01040102
 80274e0:	012e012e 	.word	0x012e012e
 80274e4:	012e0126 	.word	0x012e0126
 80274e8:	012e012e 	.word	0x012e012e
 80274ec:	012e012e 	.word	0x012e012e
 80274f0:	012e012e 	.word	0x012e012e
 80274f4:	0114012e 	.word	0x0114012e
 80274f8:	010a0106 	.word	0x010a0106
 80274fc:	010e010c 	.word	0x010e010c
 8027500:	012e0110 	.word	0x012e0110
 8027504:	01160112 	.word	0x01160112
 8027508:	00ea011a 	.word	0x00ea011a
 802750c:	012c00c2 	.word	0x012c00c2
 8027510:	00d000ba 	.word	0x00d000ba
 8027514:	00a000bc 	.word	0x00a000bc
 8027518:	012a00a6 	.word	0x012a00a6
 802751c:	012e00f8 	.word	0x012e00f8
 8027520:	00c40118 	.word	0x00c40118
 8027524:	011c011e 	.word	0x011c011e
 8027528:	012e012e 	.word	0x012e012e
 802752c:	012e012e 	.word	0x012e012e
 8027530:	00d4012e 	.word	0x00d4012e
 8027534:	012e012e 	.word	0x012e012e
 8027538:	00e6012e 	.word	0x00e6012e
 802753c:	01200128 	.word	0x01200128
 8027540:	01240122 	.word	0x01240122
 8027544:	4b55      	ldr	r3, [pc, #340]	; (802769c <_strerror_r+0x288>)
 8027546:	4618      	mov	r0, r3
 8027548:	bd10      	pop	{r4, pc}
 802754a:	4b55      	ldr	r3, [pc, #340]	; (80276a0 <_strerror_r+0x28c>)
 802754c:	e7fb      	b.n	8027546 <_strerror_r+0x132>
 802754e:	4b55      	ldr	r3, [pc, #340]	; (80276a4 <_strerror_r+0x290>)
 8027550:	e7f9      	b.n	8027546 <_strerror_r+0x132>
 8027552:	4b55      	ldr	r3, [pc, #340]	; (80276a8 <_strerror_r+0x294>)
 8027554:	e7f7      	b.n	8027546 <_strerror_r+0x132>
 8027556:	4b55      	ldr	r3, [pc, #340]	; (80276ac <_strerror_r+0x298>)
 8027558:	e7f5      	b.n	8027546 <_strerror_r+0x132>
 802755a:	4b55      	ldr	r3, [pc, #340]	; (80276b0 <_strerror_r+0x29c>)
 802755c:	e7f3      	b.n	8027546 <_strerror_r+0x132>
 802755e:	4b55      	ldr	r3, [pc, #340]	; (80276b4 <_strerror_r+0x2a0>)
 8027560:	e7f1      	b.n	8027546 <_strerror_r+0x132>
 8027562:	4b55      	ldr	r3, [pc, #340]	; (80276b8 <_strerror_r+0x2a4>)
 8027564:	e7ef      	b.n	8027546 <_strerror_r+0x132>
 8027566:	4b55      	ldr	r3, [pc, #340]	; (80276bc <_strerror_r+0x2a8>)
 8027568:	e7ed      	b.n	8027546 <_strerror_r+0x132>
 802756a:	4b55      	ldr	r3, [pc, #340]	; (80276c0 <_strerror_r+0x2ac>)
 802756c:	e7eb      	b.n	8027546 <_strerror_r+0x132>
 802756e:	4b55      	ldr	r3, [pc, #340]	; (80276c4 <_strerror_r+0x2b0>)
 8027570:	e7e9      	b.n	8027546 <_strerror_r+0x132>
 8027572:	4b55      	ldr	r3, [pc, #340]	; (80276c8 <_strerror_r+0x2b4>)
 8027574:	e7e7      	b.n	8027546 <_strerror_r+0x132>
 8027576:	4b55      	ldr	r3, [pc, #340]	; (80276cc <_strerror_r+0x2b8>)
 8027578:	e7e5      	b.n	8027546 <_strerror_r+0x132>
 802757a:	4b55      	ldr	r3, [pc, #340]	; (80276d0 <_strerror_r+0x2bc>)
 802757c:	e7e3      	b.n	8027546 <_strerror_r+0x132>
 802757e:	4b55      	ldr	r3, [pc, #340]	; (80276d4 <_strerror_r+0x2c0>)
 8027580:	e7e1      	b.n	8027546 <_strerror_r+0x132>
 8027582:	4b55      	ldr	r3, [pc, #340]	; (80276d8 <_strerror_r+0x2c4>)
 8027584:	e7df      	b.n	8027546 <_strerror_r+0x132>
 8027586:	4b55      	ldr	r3, [pc, #340]	; (80276dc <_strerror_r+0x2c8>)
 8027588:	e7dd      	b.n	8027546 <_strerror_r+0x132>
 802758a:	4b55      	ldr	r3, [pc, #340]	; (80276e0 <_strerror_r+0x2cc>)
 802758c:	e7db      	b.n	8027546 <_strerror_r+0x132>
 802758e:	4b55      	ldr	r3, [pc, #340]	; (80276e4 <_strerror_r+0x2d0>)
 8027590:	e7d9      	b.n	8027546 <_strerror_r+0x132>
 8027592:	4b55      	ldr	r3, [pc, #340]	; (80276e8 <_strerror_r+0x2d4>)
 8027594:	e7d7      	b.n	8027546 <_strerror_r+0x132>
 8027596:	4b55      	ldr	r3, [pc, #340]	; (80276ec <_strerror_r+0x2d8>)
 8027598:	e7d5      	b.n	8027546 <_strerror_r+0x132>
 802759a:	4b55      	ldr	r3, [pc, #340]	; (80276f0 <_strerror_r+0x2dc>)
 802759c:	e7d3      	b.n	8027546 <_strerror_r+0x132>
 802759e:	4b55      	ldr	r3, [pc, #340]	; (80276f4 <_strerror_r+0x2e0>)
 80275a0:	e7d1      	b.n	8027546 <_strerror_r+0x132>
 80275a2:	4b55      	ldr	r3, [pc, #340]	; (80276f8 <_strerror_r+0x2e4>)
 80275a4:	e7cf      	b.n	8027546 <_strerror_r+0x132>
 80275a6:	4b55      	ldr	r3, [pc, #340]	; (80276fc <_strerror_r+0x2e8>)
 80275a8:	e7cd      	b.n	8027546 <_strerror_r+0x132>
 80275aa:	4b55      	ldr	r3, [pc, #340]	; (8027700 <_strerror_r+0x2ec>)
 80275ac:	e7cb      	b.n	8027546 <_strerror_r+0x132>
 80275ae:	4b55      	ldr	r3, [pc, #340]	; (8027704 <_strerror_r+0x2f0>)
 80275b0:	e7c9      	b.n	8027546 <_strerror_r+0x132>
 80275b2:	4b55      	ldr	r3, [pc, #340]	; (8027708 <_strerror_r+0x2f4>)
 80275b4:	e7c7      	b.n	8027546 <_strerror_r+0x132>
 80275b6:	4b55      	ldr	r3, [pc, #340]	; (802770c <_strerror_r+0x2f8>)
 80275b8:	e7c5      	b.n	8027546 <_strerror_r+0x132>
 80275ba:	4b55      	ldr	r3, [pc, #340]	; (8027710 <_strerror_r+0x2fc>)
 80275bc:	e7c3      	b.n	8027546 <_strerror_r+0x132>
 80275be:	4b55      	ldr	r3, [pc, #340]	; (8027714 <_strerror_r+0x300>)
 80275c0:	e7c1      	b.n	8027546 <_strerror_r+0x132>
 80275c2:	4b55      	ldr	r3, [pc, #340]	; (8027718 <_strerror_r+0x304>)
 80275c4:	e7bf      	b.n	8027546 <_strerror_r+0x132>
 80275c6:	4b55      	ldr	r3, [pc, #340]	; (802771c <_strerror_r+0x308>)
 80275c8:	e7bd      	b.n	8027546 <_strerror_r+0x132>
 80275ca:	4b55      	ldr	r3, [pc, #340]	; (8027720 <_strerror_r+0x30c>)
 80275cc:	e7bb      	b.n	8027546 <_strerror_r+0x132>
 80275ce:	4b55      	ldr	r3, [pc, #340]	; (8027724 <_strerror_r+0x310>)
 80275d0:	e7b9      	b.n	8027546 <_strerror_r+0x132>
 80275d2:	4b55      	ldr	r3, [pc, #340]	; (8027728 <_strerror_r+0x314>)
 80275d4:	e7b7      	b.n	8027546 <_strerror_r+0x132>
 80275d6:	4b55      	ldr	r3, [pc, #340]	; (802772c <_strerror_r+0x318>)
 80275d8:	e7b5      	b.n	8027546 <_strerror_r+0x132>
 80275da:	4b55      	ldr	r3, [pc, #340]	; (8027730 <_strerror_r+0x31c>)
 80275dc:	e7b3      	b.n	8027546 <_strerror_r+0x132>
 80275de:	4b55      	ldr	r3, [pc, #340]	; (8027734 <_strerror_r+0x320>)
 80275e0:	e7b1      	b.n	8027546 <_strerror_r+0x132>
 80275e2:	4b55      	ldr	r3, [pc, #340]	; (8027738 <_strerror_r+0x324>)
 80275e4:	e7af      	b.n	8027546 <_strerror_r+0x132>
 80275e6:	4b55      	ldr	r3, [pc, #340]	; (802773c <_strerror_r+0x328>)
 80275e8:	e7ad      	b.n	8027546 <_strerror_r+0x132>
 80275ea:	4b55      	ldr	r3, [pc, #340]	; (8027740 <_strerror_r+0x32c>)
 80275ec:	e7ab      	b.n	8027546 <_strerror_r+0x132>
 80275ee:	4b55      	ldr	r3, [pc, #340]	; (8027744 <_strerror_r+0x330>)
 80275f0:	e7a9      	b.n	8027546 <_strerror_r+0x132>
 80275f2:	4b55      	ldr	r3, [pc, #340]	; (8027748 <_strerror_r+0x334>)
 80275f4:	e7a7      	b.n	8027546 <_strerror_r+0x132>
 80275f6:	4b55      	ldr	r3, [pc, #340]	; (802774c <_strerror_r+0x338>)
 80275f8:	e7a5      	b.n	8027546 <_strerror_r+0x132>
 80275fa:	4b55      	ldr	r3, [pc, #340]	; (8027750 <_strerror_r+0x33c>)
 80275fc:	e7a3      	b.n	8027546 <_strerror_r+0x132>
 80275fe:	4b55      	ldr	r3, [pc, #340]	; (8027754 <_strerror_r+0x340>)
 8027600:	e7a1      	b.n	8027546 <_strerror_r+0x132>
 8027602:	4b55      	ldr	r3, [pc, #340]	; (8027758 <_strerror_r+0x344>)
 8027604:	e79f      	b.n	8027546 <_strerror_r+0x132>
 8027606:	4b55      	ldr	r3, [pc, #340]	; (802775c <_strerror_r+0x348>)
 8027608:	e79d      	b.n	8027546 <_strerror_r+0x132>
 802760a:	4b55      	ldr	r3, [pc, #340]	; (8027760 <_strerror_r+0x34c>)
 802760c:	e79b      	b.n	8027546 <_strerror_r+0x132>
 802760e:	4b55      	ldr	r3, [pc, #340]	; (8027764 <_strerror_r+0x350>)
 8027610:	e799      	b.n	8027546 <_strerror_r+0x132>
 8027612:	4b55      	ldr	r3, [pc, #340]	; (8027768 <_strerror_r+0x354>)
 8027614:	e797      	b.n	8027546 <_strerror_r+0x132>
 8027616:	4b55      	ldr	r3, [pc, #340]	; (802776c <_strerror_r+0x358>)
 8027618:	e795      	b.n	8027546 <_strerror_r+0x132>
 802761a:	4b55      	ldr	r3, [pc, #340]	; (8027770 <_strerror_r+0x35c>)
 802761c:	e793      	b.n	8027546 <_strerror_r+0x132>
 802761e:	4b55      	ldr	r3, [pc, #340]	; (8027774 <_strerror_r+0x360>)
 8027620:	e791      	b.n	8027546 <_strerror_r+0x132>
 8027622:	4b55      	ldr	r3, [pc, #340]	; (8027778 <_strerror_r+0x364>)
 8027624:	e78f      	b.n	8027546 <_strerror_r+0x132>
 8027626:	4b55      	ldr	r3, [pc, #340]	; (802777c <_strerror_r+0x368>)
 8027628:	e78d      	b.n	8027546 <_strerror_r+0x132>
 802762a:	4b55      	ldr	r3, [pc, #340]	; (8027780 <_strerror_r+0x36c>)
 802762c:	e78b      	b.n	8027546 <_strerror_r+0x132>
 802762e:	4b55      	ldr	r3, [pc, #340]	; (8027784 <_strerror_r+0x370>)
 8027630:	e789      	b.n	8027546 <_strerror_r+0x132>
 8027632:	4b55      	ldr	r3, [pc, #340]	; (8027788 <_strerror_r+0x374>)
 8027634:	e787      	b.n	8027546 <_strerror_r+0x132>
 8027636:	4b55      	ldr	r3, [pc, #340]	; (802778c <_strerror_r+0x378>)
 8027638:	e785      	b.n	8027546 <_strerror_r+0x132>
 802763a:	4b55      	ldr	r3, [pc, #340]	; (8027790 <_strerror_r+0x37c>)
 802763c:	e783      	b.n	8027546 <_strerror_r+0x132>
 802763e:	4b55      	ldr	r3, [pc, #340]	; (8027794 <_strerror_r+0x380>)
 8027640:	e781      	b.n	8027546 <_strerror_r+0x132>
 8027642:	4b55      	ldr	r3, [pc, #340]	; (8027798 <_strerror_r+0x384>)
 8027644:	e77f      	b.n	8027546 <_strerror_r+0x132>
 8027646:	4b55      	ldr	r3, [pc, #340]	; (802779c <_strerror_r+0x388>)
 8027648:	e77d      	b.n	8027546 <_strerror_r+0x132>
 802764a:	4b55      	ldr	r3, [pc, #340]	; (80277a0 <_strerror_r+0x38c>)
 802764c:	e77b      	b.n	8027546 <_strerror_r+0x132>
 802764e:	4b55      	ldr	r3, [pc, #340]	; (80277a4 <_strerror_r+0x390>)
 8027650:	e779      	b.n	8027546 <_strerror_r+0x132>
 8027652:	4b55      	ldr	r3, [pc, #340]	; (80277a8 <_strerror_r+0x394>)
 8027654:	e777      	b.n	8027546 <_strerror_r+0x132>
 8027656:	4b55      	ldr	r3, [pc, #340]	; (80277ac <_strerror_r+0x398>)
 8027658:	e775      	b.n	8027546 <_strerror_r+0x132>
 802765a:	4b55      	ldr	r3, [pc, #340]	; (80277b0 <_strerror_r+0x39c>)
 802765c:	e773      	b.n	8027546 <_strerror_r+0x132>
 802765e:	4b55      	ldr	r3, [pc, #340]	; (80277b4 <_strerror_r+0x3a0>)
 8027660:	e771      	b.n	8027546 <_strerror_r+0x132>
 8027662:	4b55      	ldr	r3, [pc, #340]	; (80277b8 <_strerror_r+0x3a4>)
 8027664:	e76f      	b.n	8027546 <_strerror_r+0x132>
 8027666:	4b55      	ldr	r3, [pc, #340]	; (80277bc <_strerror_r+0x3a8>)
 8027668:	e76d      	b.n	8027546 <_strerror_r+0x132>
 802766a:	4b55      	ldr	r3, [pc, #340]	; (80277c0 <_strerror_r+0x3ac>)
 802766c:	e76b      	b.n	8027546 <_strerror_r+0x132>
 802766e:	4b55      	ldr	r3, [pc, #340]	; (80277c4 <_strerror_r+0x3b0>)
 8027670:	e769      	b.n	8027546 <_strerror_r+0x132>
 8027672:	4b55      	ldr	r3, [pc, #340]	; (80277c8 <_strerror_r+0x3b4>)
 8027674:	e767      	b.n	8027546 <_strerror_r+0x132>
 8027676:	4b55      	ldr	r3, [pc, #340]	; (80277cc <_strerror_r+0x3b8>)
 8027678:	e765      	b.n	8027546 <_strerror_r+0x132>
 802767a:	4b55      	ldr	r3, [pc, #340]	; (80277d0 <_strerror_r+0x3bc>)
 802767c:	e763      	b.n	8027546 <_strerror_r+0x132>
 802767e:	4b55      	ldr	r3, [pc, #340]	; (80277d4 <_strerror_r+0x3c0>)
 8027680:	e761      	b.n	8027546 <_strerror_r+0x132>
 8027682:	2b00      	cmp	r3, #0
 8027684:	bf14      	ite	ne
 8027686:	461a      	movne	r2, r3
 8027688:	4622      	moveq	r2, r4
 802768a:	f001 ffa5 	bl	80295d8 <_user_strerror>
 802768e:	4b52      	ldr	r3, [pc, #328]	; (80277d8 <_strerror_r+0x3c4>)
 8027690:	2800      	cmp	r0, #0
 8027692:	bf18      	it	ne
 8027694:	4603      	movne	r3, r0
 8027696:	e756      	b.n	8027546 <_strerror_r+0x132>
 8027698:	4b50      	ldr	r3, [pc, #320]	; (80277dc <_strerror_r+0x3c8>)
 802769a:	e754      	b.n	8027546 <_strerror_r+0x132>
 802769c:	080321aa 	.word	0x080321aa
 80276a0:	080321b4 	.word	0x080321b4
 80276a4:	080321ce 	.word	0x080321ce
 80276a8:	080321de 	.word	0x080321de
 80276ac:	080321f6 	.word	0x080321f6
 80276b0:	08032200 	.word	0x08032200
 80276b4:	0803221a 	.word	0x0803221a
 80276b8:	0803222c 	.word	0x0803222c
 80276bc:	0803223e 	.word	0x0803223e
 80276c0:	08032257 	.word	0x08032257
 80276c4:	08032267 	.word	0x08032267
 80276c8:	08032273 	.word	0x08032273
 80276cc:	08032290 	.word	0x08032290
 80276d0:	080322a2 	.word	0x080322a2
 80276d4:	080322b3 	.word	0x080322b3
 80276d8:	080322c5 	.word	0x080322c5
 80276dc:	080322d1 	.word	0x080322d1
 80276e0:	080322e9 	.word	0x080322e9
 80276e4:	080322f5 	.word	0x080322f5
 80276e8:	08032307 	.word	0x08032307
 80276ec:	08032316 	.word	0x08032316
 80276f0:	08032326 	.word	0x08032326
 80276f4:	08032333 	.word	0x08032333
 80276f8:	08032352 	.word	0x08032352
 80276fc:	08032361 	.word	0x08032361
 8027700:	08032372 	.word	0x08032372
 8027704:	08032396 	.word	0x08032396
 8027708:	080323b4 	.word	0x080323b4
 802770c:	080323d2 	.word	0x080323d2
 8027710:	080323f2 	.word	0x080323f2
 8027714:	08032409 	.word	0x08032409
 8027718:	08032418 	.word	0x08032418
 802771c:	08032427 	.word	0x08032427
 8027720:	0803243b 	.word	0x0803243b
 8027724:	08032453 	.word	0x08032453
 8027728:	08032461 	.word	0x08032461
 802772c:	0803246e 	.word	0x0803246e
 8027730:	08032484 	.word	0x08032484
 8027734:	08032493 	.word	0x08032493
 8027738:	0803249f 	.word	0x0803249f
 802773c:	080324ce 	.word	0x080324ce
 8027740:	080324df 	.word	0x080324df
 8027744:	080324fa 	.word	0x080324fa
 8027748:	0803250d 	.word	0x0803250d
 802774c:	08032523 	.word	0x08032523
 8027750:	0803252c 	.word	0x0803252c
 8027754:	08032543 	.word	0x08032543
 8027758:	0803254b 	.word	0x0803254b
 802775c:	08032558 	.word	0x08032558
 8027760:	0803256d 	.word	0x0803256d
 8027764:	08032581 	.word	0x08032581
 8027768:	08032599 	.word	0x08032599
 802776c:	080325a8 	.word	0x080325a8
 8027770:	080325b9 	.word	0x080325b9
 8027774:	080325cc 	.word	0x080325cc
 8027778:	080325d8 	.word	0x080325d8
 802777c:	080325f1 	.word	0x080325f1
 8027780:	08032605 	.word	0x08032605
 8027784:	08032620 	.word	0x08032620
 8027788:	08032638 	.word	0x08032638
 802778c:	08032652 	.word	0x08032652
 8027790:	0803265a 	.word	0x0803265a
 8027794:	0803268a 	.word	0x0803268a
 8027798:	080326a9 	.word	0x080326a9
 802779c:	080326c8 	.word	0x080326c8
 80277a0:	080326df 	.word	0x080326df
 80277a4:	080326f2 	.word	0x080326f2
 80277a8:	0803270b 	.word	0x0803270b
 80277ac:	08032722 	.word	0x08032722
 80277b0:	08032738 	.word	0x08032738
 80277b4:	08032759 	.word	0x08032759
 80277b8:	08032771 	.word	0x08032771
 80277bc:	0803278d 	.word	0x0803278d
 80277c0:	080327a0 	.word	0x080327a0
 80277c4:	080327b6 	.word	0x080327b6
 80277c8:	080327ca 	.word	0x080327ca
 80277cc:	080327ec 	.word	0x080327ec
 80277d0:	08032812 	.word	0x08032812
 80277d4:	08032823 	.word	0x08032823
 80277d8:	08032cb9 	.word	0x08032cb9
 80277dc:	08032838 	.word	0x08032838

080277e0 <strerror>:
 80277e0:	4601      	mov	r1, r0
 80277e2:	4803      	ldr	r0, [pc, #12]	; (80277f0 <strerror+0x10>)
 80277e4:	2300      	movs	r3, #0
 80277e6:	6800      	ldr	r0, [r0, #0]
 80277e8:	461a      	mov	r2, r3
 80277ea:	f7ff be13 	b.w	8027414 <_strerror_r>
 80277ee:	bf00      	nop
 80277f0:	200000bc 	.word	0x200000bc

080277f4 <iso_year_adjust>:
 80277f4:	6942      	ldr	r2, [r0, #20]
 80277f6:	2a00      	cmp	r2, #0
 80277f8:	f240 736c 	movw	r3, #1900	; 0x76c
 80277fc:	bfa8      	it	ge
 80277fe:	f06f 0363 	mvnge.w	r3, #99	; 0x63
 8027802:	4413      	add	r3, r2
 8027804:	0792      	lsls	r2, r2, #30
 8027806:	d105      	bne.n	8027814 <iso_year_adjust+0x20>
 8027808:	2164      	movs	r1, #100	; 0x64
 802780a:	fb93 f2f1 	sdiv	r2, r3, r1
 802780e:	fb01 3212 	mls	r2, r1, r2, r3
 8027812:	b9da      	cbnz	r2, 802784c <iso_year_adjust+0x58>
 8027814:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8027818:	fb93 f1f2 	sdiv	r1, r3, r2
 802781c:	fb02 3311 	mls	r3, r2, r1, r3
 8027820:	fab3 f383 	clz	r3, r3
 8027824:	095b      	lsrs	r3, r3, #5
 8027826:	e9d0 0206 	ldrd	r0, r2, [r0, #24]
 802782a:	0040      	lsls	r0, r0, #1
 802782c:	eb00 1002 	add.w	r0, r0, r2, lsl #4
 8027830:	4418      	add	r0, r3
 8027832:	f241 63a2 	movw	r3, #5794	; 0x16a2
 8027836:	4298      	cmp	r0, r3
 8027838:	d03a      	beq.n	80278b0 <iso_year_adjust+0xbc>
 802783a:	dc21      	bgt.n	8027880 <iso_year_adjust+0x8c>
 802783c:	2801      	cmp	r0, #1
 802783e:	dc1a      	bgt.n	8027876 <iso_year_adjust+0x82>
 8027840:	2800      	cmp	r0, #0
 8027842:	bfb4      	ite	lt
 8027844:	2000      	movlt	r0, #0
 8027846:	f04f 30ff 	movge.w	r0, #4294967295	; 0xffffffff
 802784a:	4770      	bx	lr
 802784c:	2301      	movs	r3, #1
 802784e:	e7ea      	b.n	8027826 <iso_year_adjust+0x32>
 8027850:	2817      	cmp	r0, #23
 8027852:	d813      	bhi.n	802787c <iso_year_adjust+0x88>
 8027854:	e8df f000 	tbb	[pc, r0]
 8027858:	0c0c0c0c 	.word	0x0c0c0c0c
 802785c:	0c0c1212 	.word	0x0c0c1212
 8027860:	12121212 	.word	0x12121212
 8027864:	12121212 	.word	0x12121212
 8027868:	0c0c1212 	.word	0x0c0c1212
 802786c:	0c0c1212 	.word	0x0c0c1212
 8027870:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8027874:	4770      	bx	lr
 8027876:	380a      	subs	r0, #10
 8027878:	2817      	cmp	r0, #23
 802787a:	d9e9      	bls.n	8027850 <iso_year_adjust+0x5c>
 802787c:	2000      	movs	r0, #0
 802787e:	4770      	bx	lr
 8027880:	f241 63b4 	movw	r3, #5812	; 0x16b4
 8027884:	4298      	cmp	r0, r3
 8027886:	dc06      	bgt.n	8027896 <iso_year_adjust+0xa2>
 8027888:	f241 63b1 	movw	r3, #5809	; 0x16b1
 802788c:	4298      	cmp	r0, r3
 802788e:	bfd4      	ite	le
 8027890:	2000      	movle	r0, #0
 8027892:	2001      	movgt	r0, #1
 8027894:	4770      	bx	lr
 8027896:	f5a0 50b6 	sub.w	r0, r0, #5824	; 0x16c0
 802789a:	3802      	subs	r0, #2
 802789c:	2815      	cmp	r0, #21
 802789e:	d8ed      	bhi.n	802787c <iso_year_adjust+0x88>
 80278a0:	2301      	movs	r3, #1
 80278a2:	4083      	lsls	r3, r0
 80278a4:	4803      	ldr	r0, [pc, #12]	; (80278b4 <iso_year_adjust+0xc0>)
 80278a6:	4018      	ands	r0, r3
 80278a8:	3800      	subs	r0, #0
 80278aa:	bf18      	it	ne
 80278ac:	2001      	movne	r0, #1
 80278ae:	4770      	bx	lr
 80278b0:	2001      	movs	r0, #1
 80278b2:	4770      	bx	lr
 80278b4:	002a001f 	.word	0x002a001f

080278b8 <__strftime.isra.0>:
 80278b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80278bc:	b08f      	sub	sp, #60	; 0x3c
 80278be:	461e      	mov	r6, r3
 80278c0:	2300      	movs	r3, #0
 80278c2:	4607      	mov	r7, r0
 80278c4:	460d      	mov	r5, r1
 80278c6:	9302      	str	r3, [sp, #8]
 80278c8:	461c      	mov	r4, r3
 80278ca:	7813      	ldrb	r3, [r2, #0]
 80278cc:	2b00      	cmp	r3, #0
 80278ce:	f000 84ba 	beq.w	8028246 <__strftime.isra.0+0x98e>
 80278d2:	2b25      	cmp	r3, #37	; 0x25
 80278d4:	d11f      	bne.n	8027916 <__strftime.isra.0+0x5e>
 80278d6:	f892 b001 	ldrb.w	fp, [r2, #1]
 80278da:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
 80278de:	d024      	beq.n	802792a <__strftime.isra.0+0x72>
 80278e0:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
 80278e4:	d021      	beq.n	802792a <__strftime.isra.0+0x72>
 80278e6:	f102 0801 	add.w	r8, r2, #1
 80278ea:	f04f 0b00 	mov.w	fp, #0
 80278ee:	f898 2000 	ldrb.w	r2, [r8]
 80278f2:	3a31      	subs	r2, #49	; 0x31
 80278f4:	2a08      	cmp	r2, #8
 80278f6:	d81b      	bhi.n	8027930 <__strftime.isra.0+0x78>
 80278f8:	4640      	mov	r0, r8
 80278fa:	220a      	movs	r2, #10
 80278fc:	a906      	add	r1, sp, #24
 80278fe:	f001 fca1 	bl	8029244 <strtoul>
 8027902:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8027906:	4681      	mov	r9, r0
 8027908:	f898 2000 	ldrb.w	r2, [r8]
 802790c:	2a45      	cmp	r2, #69	; 0x45
 802790e:	d112      	bne.n	8027936 <__strftime.isra.0+0x7e>
 8027910:	f108 0801 	add.w	r8, r8, #1
 8027914:	e011      	b.n	802793a <__strftime.isra.0+0x82>
 8027916:	1e69      	subs	r1, r5, #1
 8027918:	42a1      	cmp	r1, r4
 802791a:	d802      	bhi.n	8027922 <__strftime.isra.0+0x6a>
 802791c:	2400      	movs	r4, #0
 802791e:	f000 bc95 	b.w	802824c <__strftime.isra.0+0x994>
 8027922:	553b      	strb	r3, [r7, r4]
 8027924:	3201      	adds	r2, #1
 8027926:	3401      	adds	r4, #1
 8027928:	e7cf      	b.n	80278ca <__strftime.isra.0+0x12>
 802792a:	f102 0802 	add.w	r8, r2, #2
 802792e:	e7de      	b.n	80278ee <__strftime.isra.0+0x36>
 8027930:	f04f 0900 	mov.w	r9, #0
 8027934:	e7e8      	b.n	8027908 <__strftime.isra.0+0x50>
 8027936:	2a4f      	cmp	r2, #79	; 0x4f
 8027938:	d0ea      	beq.n	8027910 <__strftime.isra.0+0x58>
 802793a:	f898 0000 	ldrb.w	r0, [r8]
 802793e:	f1a0 0225 	sub.w	r2, r0, #37	; 0x25
 8027942:	2a55      	cmp	r2, #85	; 0x55
 8027944:	d8ea      	bhi.n	802791c <__strftime.isra.0+0x64>
 8027946:	a301      	add	r3, pc, #4	; (adr r3, 802794c <__strftime.isra.0+0x94>)
 8027948:	f853 f022 	ldr.w	pc, [r3, r2, lsl #2]
 802794c:	0802823b 	.word	0x0802823b
 8027950:	0802791d 	.word	0x0802791d
 8027954:	0802791d 	.word	0x0802791d
 8027958:	0802791d 	.word	0x0802791d
 802795c:	0802791d 	.word	0x0802791d
 8027960:	0802791d 	.word	0x0802791d
 8027964:	0802791d 	.word	0x0802791d
 8027968:	0802791d 	.word	0x0802791d
 802796c:	0802791d 	.word	0x0802791d
 8027970:	0802791d 	.word	0x0802791d
 8027974:	0802791d 	.word	0x0802791d
 8027978:	0802791d 	.word	0x0802791d
 802797c:	0802791d 	.word	0x0802791d
 8027980:	0802791d 	.word	0x0802791d
 8027984:	0802791d 	.word	0x0802791d
 8027988:	0802791d 	.word	0x0802791d
 802798c:	0802791d 	.word	0x0802791d
 8027990:	0802791d 	.word	0x0802791d
 8027994:	0802791d 	.word	0x0802791d
 8027998:	0802791d 	.word	0x0802791d
 802799c:	0802791d 	.word	0x0802791d
 80279a0:	0802791d 	.word	0x0802791d
 80279a4:	0802791d 	.word	0x0802791d
 80279a8:	0802791d 	.word	0x0802791d
 80279ac:	0802791d 	.word	0x0802791d
 80279b0:	0802791d 	.word	0x0802791d
 80279b4:	0802791d 	.word	0x0802791d
 80279b8:	0802791d 	.word	0x0802791d
 80279bc:	08027ae1 	.word	0x08027ae1
 80279c0:	08027b39 	.word	0x08027b39
 80279c4:	08027ba7 	.word	0x08027ba7
 80279c8:	08027c45 	.word	0x08027c45
 80279cc:	0802791d 	.word	0x0802791d
 80279d0:	08027c91 	.word	0x08027c91
 80279d4:	08027d7d 	.word	0x08027d7d
 80279d8:	08027e57 	.word	0x08027e57
 80279dc:	08027e65 	.word	0x08027e65
 80279e0:	0802791d 	.word	0x0802791d
 80279e4:	0802791d 	.word	0x0802791d
 80279e8:	0802791d 	.word	0x0802791d
 80279ec:	08027e95 	.word	0x08027e95
 80279f0:	0802791d 	.word	0x0802791d
 80279f4:	0802791d 	.word	0x0802791d
 80279f8:	08027ea9 	.word	0x08027ea9
 80279fc:	0802791d 	.word	0x0802791d
 8027a00:	08027efb 	.word	0x08027efb
 8027a04:	0802800f 	.word	0x0802800f
 8027a08:	0802801f 	.word	0x0802801f
 8027a0c:	08028047 	.word	0x08028047
 8027a10:	08028081 	.word	0x08028081
 8027a14:	080280f5 	.word	0x080280f5
 8027a18:	08027b9f 	.word	0x08027b9f
 8027a1c:	08028121 	.word	0x08028121
 8027a20:	080281e9 	.word	0x080281e9
 8027a24:	0802791d 	.word	0x0802791d
 8027a28:	0802791d 	.word	0x0802791d
 8027a2c:	0802791d 	.word	0x0802791d
 8027a30:	0802791d 	.word	0x0802791d
 8027a34:	0802791d 	.word	0x0802791d
 8027a38:	0802791d 	.word	0x0802791d
 8027a3c:	08027aa5 	.word	0x08027aa5
 8027a40:	08027b0f 	.word	0x08027b0f
 8027a44:	08027b65 	.word	0x08027b65
 8027a48:	08027c21 	.word	0x08027c21
 8027a4c:	08027c21 	.word	0x08027c21
 8027a50:	0802791d 	.word	0x0802791d
 8027a54:	08027ce3 	.word	0x08027ce3
 8027a58:	08027b0f 	.word	0x08027b0f
 8027a5c:	0802791d 	.word	0x0802791d
 8027a60:	08027e87 	.word	0x08027e87
 8027a64:	08027e57 	.word	0x08027e57
 8027a68:	08027e65 	.word	0x08027e65
 8027a6c:	08027e8f 	.word	0x08027e8f
 8027a70:	08027e99 	.word	0x08027e99
 8027a74:	0802791d 	.word	0x0802791d
 8027a78:	08027ea9 	.word	0x08027ea9
 8027a7c:	0802791d 	.word	0x0802791d
 8027a80:	08027b8f 	.word	0x08027b8f
 8027a84:	08027f0d 	.word	0x08027f0d
 8027a88:	08028013 	.word	0x08028013
 8027a8c:	0802802d 	.word	0x0802802d
 8027a90:	0802791d 	.word	0x0802791d
 8027a94:	080280e7 	.word	0x080280e7
 8027a98:	08027b97 	.word	0x08027b97
 8027a9c:	08028105 	.word	0x08028105
 8027aa0:	08028173 	.word	0x08028173
 8027aa4:	69b3      	ldr	r3, [r6, #24]
 8027aa6:	4aa9      	ldr	r2, [pc, #676]	; (8027d4c <__strftime.isra.0+0x494>)
 8027aa8:	3318      	adds	r3, #24
 8027aaa:	f852 9023 	ldr.w	r9, [r2, r3, lsl #2]
 8027aae:	4648      	mov	r0, r9
 8027ab0:	f7d8 fbe8 	bl	8000284 <strlen>
 8027ab4:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8027ab8:	4420      	add	r0, r4
 8027aba:	1e6b      	subs	r3, r5, #1
 8027abc:	42a0      	cmp	r0, r4
 8027abe:	d107      	bne.n	8027ad0 <__strftime.isra.0+0x218>
 8027ac0:	f898 3000 	ldrb.w	r3, [r8]
 8027ac4:	2b00      	cmp	r3, #0
 8027ac6:	f000 83be 	beq.w	8028246 <__strftime.isra.0+0x98e>
 8027aca:	f108 0201 	add.w	r2, r8, #1
 8027ace:	e6fc      	b.n	80278ca <__strftime.isra.0+0x12>
 8027ad0:	42a3      	cmp	r3, r4
 8027ad2:	f67f af23 	bls.w	802791c <__strftime.isra.0+0x64>
 8027ad6:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 8027ada:	553a      	strb	r2, [r7, r4]
 8027adc:	3401      	adds	r4, #1
 8027ade:	e7ed      	b.n	8027abc <__strftime.isra.0+0x204>
 8027ae0:	69b2      	ldr	r2, [r6, #24]
 8027ae2:	4b9a      	ldr	r3, [pc, #616]	; (8027d4c <__strftime.isra.0+0x494>)
 8027ae4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8027ae8:	f8d3 907c 	ldr.w	r9, [r3, #124]	; 0x7c
 8027aec:	4648      	mov	r0, r9
 8027aee:	f7d8 fbc9 	bl	8000284 <strlen>
 8027af2:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8027af6:	4420      	add	r0, r4
 8027af8:	1e6b      	subs	r3, r5, #1
 8027afa:	42a0      	cmp	r0, r4
 8027afc:	d0e0      	beq.n	8027ac0 <__strftime.isra.0+0x208>
 8027afe:	42a3      	cmp	r3, r4
 8027b00:	f67f af0c 	bls.w	802791c <__strftime.isra.0+0x64>
 8027b04:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 8027b08:	553a      	strb	r2, [r7, r4]
 8027b0a:	3401      	adds	r4, #1
 8027b0c:	e7f5      	b.n	8027afa <__strftime.isra.0+0x242>
 8027b0e:	4b8f      	ldr	r3, [pc, #572]	; (8027d4c <__strftime.isra.0+0x494>)
 8027b10:	6932      	ldr	r2, [r6, #16]
 8027b12:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
 8027b16:	4648      	mov	r0, r9
 8027b18:	f7d8 fbb4 	bl	8000284 <strlen>
 8027b1c:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8027b20:	4420      	add	r0, r4
 8027b22:	1e6b      	subs	r3, r5, #1
 8027b24:	42a0      	cmp	r0, r4
 8027b26:	d0cb      	beq.n	8027ac0 <__strftime.isra.0+0x208>
 8027b28:	42a3      	cmp	r3, r4
 8027b2a:	f67f aef7 	bls.w	802791c <__strftime.isra.0+0x64>
 8027b2e:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 8027b32:	553a      	strb	r2, [r7, r4]
 8027b34:	3401      	adds	r4, #1
 8027b36:	e7f5      	b.n	8027b24 <__strftime.isra.0+0x26c>
 8027b38:	6933      	ldr	r3, [r6, #16]
 8027b3a:	4a84      	ldr	r2, [pc, #528]	; (8027d4c <__strftime.isra.0+0x494>)
 8027b3c:	330c      	adds	r3, #12
 8027b3e:	f852 9023 	ldr.w	r9, [r2, r3, lsl #2]
 8027b42:	4648      	mov	r0, r9
 8027b44:	f7d8 fb9e 	bl	8000284 <strlen>
 8027b48:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8027b4c:	4420      	add	r0, r4
 8027b4e:	1e6b      	subs	r3, r5, #1
 8027b50:	42a0      	cmp	r0, r4
 8027b52:	d0b5      	beq.n	8027ac0 <__strftime.isra.0+0x208>
 8027b54:	42a3      	cmp	r3, r4
 8027b56:	f67f aee1 	bls.w	802791c <__strftime.isra.0+0x64>
 8027b5a:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 8027b5e:	553a      	strb	r2, [r7, r4]
 8027b60:	3401      	adds	r4, #1
 8027b62:	e7f5      	b.n	8027b50 <__strftime.isra.0+0x298>
 8027b64:	4b79      	ldr	r3, [pc, #484]	; (8027d4c <__strftime.isra.0+0x494>)
 8027b66:	f8d3 90a0 	ldr.w	r9, [r3, #160]	; 0xa0
 8027b6a:	4648      	mov	r0, r9
 8027b6c:	f7d8 fb8a 	bl	8000284 <strlen>
 8027b70:	f899 3000 	ldrb.w	r3, [r9]
 8027b74:	2b00      	cmp	r3, #0
 8027b76:	d0a3      	beq.n	8027ac0 <__strftime.isra.0+0x208>
 8027b78:	4633      	mov	r3, r6
 8027b7a:	464a      	mov	r2, r9
 8027b7c:	1b29      	subs	r1, r5, r4
 8027b7e:	1938      	adds	r0, r7, r4
 8027b80:	f7ff fe9a 	bl	80278b8 <__strftime.isra.0>
 8027b84:	2800      	cmp	r0, #0
 8027b86:	f77f aec9 	ble.w	802791c <__strftime.isra.0+0x64>
 8027b8a:	4404      	add	r4, r0
 8027b8c:	e798      	b.n	8027ac0 <__strftime.isra.0+0x208>
 8027b8e:	4b6f      	ldr	r3, [pc, #444]	; (8027d4c <__strftime.isra.0+0x494>)
 8027b90:	f8d3 90e4 	ldr.w	r9, [r3, #228]	; 0xe4
 8027b94:	e7e9      	b.n	8027b6a <__strftime.isra.0+0x2b2>
 8027b96:	4b6d      	ldr	r3, [pc, #436]	; (8027d4c <__strftime.isra.0+0x494>)
 8027b98:	f8d3 909c 	ldr.w	r9, [r3, #156]	; 0x9c
 8027b9c:	e7e5      	b.n	8027b6a <__strftime.isra.0+0x2b2>
 8027b9e:	4b6b      	ldr	r3, [pc, #428]	; (8027d4c <__strftime.isra.0+0x494>)
 8027ba0:	f8d3 9098 	ldr.w	r9, [r3, #152]	; 0x98
 8027ba4:	e7e1      	b.n	8027b6a <__strftime.isra.0+0x2b2>
 8027ba6:	496a      	ldr	r1, [pc, #424]	; (8027d50 <__strftime.isra.0+0x498>)
 8027ba8:	f8d6 a014 	ldr.w	sl, [r6, #20]
 8027bac:	458a      	cmp	sl, r1
 8027bae:	bfac      	ite	ge
 8027bb0:	2100      	movge	r1, #0
 8027bb2:	2101      	movlt	r1, #1
 8027bb4:	f1ba 0f00 	cmp.w	sl, #0
 8027bb8:	db11      	blt.n	8027bde <__strftime.isra.0+0x326>
 8027bba:	2064      	movs	r0, #100	; 0x64
 8027bbc:	fb9a f0f0 	sdiv	r0, sl, r0
 8027bc0:	3013      	adds	r0, #19
 8027bc2:	f1bb 0f00 	cmp.w	fp, #0
 8027bc6:	d014      	beq.n	8027bf2 <__strftime.isra.0+0x33a>
 8027bc8:	2863      	cmp	r0, #99	; 0x63
 8027bca:	dd27      	ble.n	8027c1c <__strftime.isra.0+0x364>
 8027bcc:	4b61      	ldr	r3, [pc, #388]	; (8027d54 <__strftime.isra.0+0x49c>)
 8027bce:	4a62      	ldr	r2, [pc, #392]	; (8027d58 <__strftime.isra.0+0x4a0>)
 8027bd0:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
 8027bd4:	bf18      	it	ne
 8027bd6:	461a      	movne	r2, r3
 8027bd8:	f8df c198 	ldr.w	ip, [pc, #408]	; 8027d74 <__strftime.isra.0+0x4bc>
 8027bdc:	e00c      	b.n	8027bf8 <__strftime.isra.0+0x340>
 8027bde:	f20a 706c 	addw	r0, sl, #1900	; 0x76c
 8027be2:	9103      	str	r1, [sp, #12]
 8027be4:	f002 fe46 	bl	802a874 <abs>
 8027be8:	2264      	movs	r2, #100	; 0x64
 8027bea:	9903      	ldr	r1, [sp, #12]
 8027bec:	fb90 f0f2 	sdiv	r0, r0, r2
 8027bf0:	e7e7      	b.n	8027bc2 <__strftime.isra.0+0x30a>
 8027bf2:	4a58      	ldr	r2, [pc, #352]	; (8027d54 <__strftime.isra.0+0x49c>)
 8027bf4:	f8df c180 	ldr.w	ip, [pc, #384]	; 8027d78 <__strftime.isra.0+0x4c0>
 8027bf8:	4b58      	ldr	r3, [pc, #352]	; (8027d5c <__strftime.isra.0+0x4a4>)
 8027bfa:	9001      	str	r0, [sp, #4]
 8027bfc:	f1b9 0f02 	cmp.w	r9, #2
 8027c00:	bf2c      	ite	cs
 8027c02:	ebc1 0109 	rsbcs	r1, r1, r9
 8027c06:	f1c1 0102 	rsbcc	r1, r1, #2
 8027c0a:	9100      	str	r1, [sp, #0]
 8027c0c:	4950      	ldr	r1, [pc, #320]	; (8027d50 <__strftime.isra.0+0x498>)
 8027c0e:	458a      	cmp	sl, r1
 8027c10:	bfa8      	it	ge
 8027c12:	4613      	movge	r3, r2
 8027c14:	4662      	mov	r2, ip
 8027c16:	1b29      	subs	r1, r5, r4
 8027c18:	1938      	adds	r0, r7, r4
 8027c1a:	e028      	b.n	8027c6e <__strftime.isra.0+0x3b6>
 8027c1c:	4a4d      	ldr	r2, [pc, #308]	; (8027d54 <__strftime.isra.0+0x49c>)
 8027c1e:	e7db      	b.n	8027bd8 <__strftime.isra.0+0x320>
 8027c20:	494f      	ldr	r1, [pc, #316]	; (8027d60 <__strftime.isra.0+0x4a8>)
 8027c22:	4a50      	ldr	r2, [pc, #320]	; (8027d64 <__strftime.isra.0+0x4ac>)
 8027c24:	68f3      	ldr	r3, [r6, #12]
 8027c26:	2864      	cmp	r0, #100	; 0x64
 8027c28:	bf08      	it	eq
 8027c2a:	460a      	moveq	r2, r1
 8027c2c:	1b29      	subs	r1, r5, r4
 8027c2e:	1938      	adds	r0, r7, r4
 8027c30:	f005 fd6a 	bl	802d708 <sniprintf>
 8027c34:	2800      	cmp	r0, #0
 8027c36:	f6ff ae71 	blt.w	802791c <__strftime.isra.0+0x64>
 8027c3a:	4404      	add	r4, r0
 8027c3c:	42a5      	cmp	r5, r4
 8027c3e:	f63f af3f 	bhi.w	8027ac0 <__strftime.isra.0+0x208>
 8027c42:	e66b      	b.n	802791c <__strftime.isra.0+0x64>
 8027c44:	6970      	ldr	r0, [r6, #20]
 8027c46:	6933      	ldr	r3, [r6, #16]
 8027c48:	f8d6 a00c 	ldr.w	sl, [r6, #12]
 8027c4c:	2800      	cmp	r0, #0
 8027c4e:	eb07 0904 	add.w	r9, r7, r4
 8027c52:	eba5 0104 	sub.w	r1, r5, r4
 8027c56:	f103 0301 	add.w	r3, r3, #1
 8027c5a:	db0b      	blt.n	8027c74 <__strftime.isra.0+0x3bc>
 8027c5c:	2264      	movs	r2, #100	; 0x64
 8027c5e:	fb90 fcf2 	sdiv	ip, r0, r2
 8027c62:	fb02 001c 	mls	r0, r2, ip, r0
 8027c66:	4a40      	ldr	r2, [pc, #256]	; (8027d68 <__strftime.isra.0+0x4b0>)
 8027c68:	e9cd a000 	strd	sl, r0, [sp]
 8027c6c:	4648      	mov	r0, r9
 8027c6e:	f005 fd4b 	bl	802d708 <sniprintf>
 8027c72:	e7df      	b.n	8027c34 <__strftime.isra.0+0x37c>
 8027c74:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 8027c78:	e9cd 1303 	strd	r1, r3, [sp, #12]
 8027c7c:	f002 fdfa 	bl	802a874 <abs>
 8027c80:	2264      	movs	r2, #100	; 0x64
 8027c82:	e9dd 1303 	ldrd	r1, r3, [sp, #12]
 8027c86:	fb90 fcf2 	sdiv	ip, r0, r2
 8027c8a:	fb0c 0012 	mls	r0, ip, r2, r0
 8027c8e:	e7ea      	b.n	8027c66 <__strftime.isra.0+0x3ae>
 8027c90:	2225      	movs	r2, #37	; 0x25
 8027c92:	f88d 2018 	strb.w	r2, [sp, #24]
 8027c96:	f1bb 0f00 	cmp.w	fp, #0
 8027c9a:	d011      	beq.n	8027cc0 <__strftime.isra.0+0x408>
 8027c9c:	f1b9 0f06 	cmp.w	r9, #6
 8027ca0:	bf38      	it	cc
 8027ca2:	f04f 0906 	movcc.w	r9, #6
 8027ca6:	f1b9 0306 	subs.w	r3, r9, #6
 8027caa:	f88d b019 	strb.w	fp, [sp, #25]
 8027cae:	d10c      	bne.n	8027cca <__strftime.isra.0+0x412>
 8027cb0:	f10d 001a 	add.w	r0, sp, #26
 8027cb4:	492d      	ldr	r1, [pc, #180]	; (8027d6c <__strftime.isra.0+0x4b4>)
 8027cb6:	f7ff fba4 	bl	8027402 <strcpy>
 8027cba:	4633      	mov	r3, r6
 8027cbc:	aa06      	add	r2, sp, #24
 8027cbe:	e75d      	b.n	8027b7c <__strftime.isra.0+0x2c4>
 8027cc0:	f04f 0b2b 	mov.w	fp, #43	; 0x2b
 8027cc4:	f04f 090a 	mov.w	r9, #10
 8027cc8:	e7ed      	b.n	8027ca6 <__strftime.isra.0+0x3ee>
 8027cca:	4a29      	ldr	r2, [pc, #164]	; (8027d70 <__strftime.isra.0+0x4b8>)
 8027ccc:	211e      	movs	r1, #30
 8027cce:	f10d 001a 	add.w	r0, sp, #26
 8027cd2:	f005 fd19 	bl	802d708 <sniprintf>
 8027cd6:	2800      	cmp	r0, #0
 8027cd8:	ddea      	ble.n	8027cb0 <__strftime.isra.0+0x3f8>
 8027cda:	f10d 031a 	add.w	r3, sp, #26
 8027cde:	4418      	add	r0, r3
 8027ce0:	e7e8      	b.n	8027cb4 <__strftime.isra.0+0x3fc>
 8027ce2:	4630      	mov	r0, r6
 8027ce4:	f7ff fd86 	bl	80277f4 <iso_year_adjust>
 8027ce8:	4681      	mov	r9, r0
 8027cea:	6970      	ldr	r0, [r6, #20]
 8027cec:	2800      	cmp	r0, #0
 8027cee:	db11      	blt.n	8027d14 <__strftime.isra.0+0x45c>
 8027cf0:	2364      	movs	r3, #100	; 0x64
 8027cf2:	fb90 f2f3 	sdiv	r2, r0, r3
 8027cf6:	fb03 0012 	mls	r0, r3, r2, r0
 8027cfa:	2264      	movs	r2, #100	; 0x64
 8027cfc:	4481      	add	r9, r0
 8027cfe:	fb99 f3f2 	sdiv	r3, r9, r2
 8027d02:	fb02 9913 	mls	r9, r2, r3, r9
 8027d06:	4491      	add	r9, r2
 8027d08:	fbb9 f3f2 	udiv	r3, r9, r2
 8027d0c:	fb02 9313 	mls	r3, r2, r3, r9
 8027d10:	4a13      	ldr	r2, [pc, #76]	; (8027d60 <__strftime.isra.0+0x4a8>)
 8027d12:	e78b      	b.n	8027c2c <__strftime.isra.0+0x374>
 8027d14:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 8027d18:	f002 fdac 	bl	802a874 <abs>
 8027d1c:	2364      	movs	r3, #100	; 0x64
 8027d1e:	f1b9 0f00 	cmp.w	r9, #0
 8027d22:	fb90 f2f3 	sdiv	r2, r0, r3
 8027d26:	fb02 0013 	mls	r0, r2, r3, r0
 8027d2a:	da07      	bge.n	8027d3c <__strftime.isra.0+0x484>
 8027d2c:	6972      	ldr	r2, [r6, #20]
 8027d2e:	f2a3 73cf 	subw	r3, r3, #1999	; 0x7cf
 8027d32:	429a      	cmp	r2, r3
 8027d34:	bfb8      	it	lt
 8027d36:	f04f 0901 	movlt.w	r9, #1
 8027d3a:	e7de      	b.n	8027cfa <__strftime.isra.0+0x442>
 8027d3c:	d0dd      	beq.n	8027cfa <__strftime.isra.0+0x442>
 8027d3e:	6972      	ldr	r2, [r6, #20]
 8027d40:	4b03      	ldr	r3, [pc, #12]	; (8027d50 <__strftime.isra.0+0x498>)
 8027d42:	429a      	cmp	r2, r3
 8027d44:	bfb8      	it	lt
 8027d46:	f04f 39ff 	movlt.w	r9, #4294967295	; 0xffffffff
 8027d4a:	e7d6      	b.n	8027cfa <__strftime.isra.0+0x442>
 8027d4c:	0803298c 	.word	0x0803298c
 8027d50:	fffff894 	.word	0xfffff894
 8027d54:	08032cb9 	.word	0x08032cb9
 8027d58:	0803284f 	.word	0x0803284f
 8027d5c:	08032f0e 	.word	0x08032f0e
 8027d60:	0803285f 	.word	0x0803285f
 8027d64:	08032851 	.word	0x08032851
 8027d68:	08032855 	.word	0x08032855
 8027d6c:	08032868 	.word	0x08032868
 8027d70:	08032864 	.word	0x08032864
 8027d74:	08032847 	.word	0x08032847
 8027d78:	08032840 	.word	0x08032840
 8027d7c:	6971      	ldr	r1, [r6, #20]
 8027d7e:	4ab6      	ldr	r2, [pc, #728]	; (8028058 <__strftime.isra.0+0x7a0>)
 8027d80:	4291      	cmp	r1, r2
 8027d82:	bfac      	ite	ge
 8027d84:	2300      	movge	r3, #0
 8027d86:	2301      	movlt	r3, #1
 8027d88:	4630      	mov	r0, r6
 8027d8a:	e9cd 3103 	strd	r3, r1, [sp, #12]
 8027d8e:	f7ff fd31 	bl	80277f4 <iso_year_adjust>
 8027d92:	9904      	ldr	r1, [sp, #16]
 8027d94:	2900      	cmp	r1, #0
 8027d96:	4682      	mov	sl, r0
 8027d98:	db2c      	blt.n	8027df4 <__strftime.isra.0+0x53c>
 8027d9a:	2264      	movs	r2, #100	; 0x64
 8027d9c:	fb91 f2f2 	sdiv	r2, r1, r2
 8027da0:	3213      	adds	r2, #19
 8027da2:	6970      	ldr	r0, [r6, #20]
 8027da4:	2800      	cmp	r0, #0
 8027da6:	db30      	blt.n	8027e0a <__strftime.isra.0+0x552>
 8027da8:	f04f 0c64 	mov.w	ip, #100	; 0x64
 8027dac:	fb90 fefc 	sdiv	lr, r0, ip
 8027db0:	fb0c 001e 	mls	r0, ip, lr, r0
 8027db4:	f1ba 0f00 	cmp.w	sl, #0
 8027db8:	da36      	bge.n	8027e28 <__strftime.isra.0+0x570>
 8027dba:	6971      	ldr	r1, [r6, #20]
 8027dbc:	4ba7      	ldr	r3, [pc, #668]	; (802805c <__strftime.isra.0+0x7a4>)
 8027dbe:	4299      	cmp	r1, r3
 8027dc0:	db3d      	blt.n	8027e3e <__strftime.isra.0+0x586>
 8027dc2:	4482      	add	sl, r0
 8027dc4:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
 8027dc8:	d13e      	bne.n	8027e48 <__strftime.isra.0+0x590>
 8027dca:	3a01      	subs	r2, #1
 8027dcc:	f04f 0a63 	mov.w	sl, #99	; 0x63
 8027dd0:	9b03      	ldr	r3, [sp, #12]
 8027dd2:	2064      	movs	r0, #100	; 0x64
 8027dd4:	fb00 aa02 	mla	sl, r0, r2, sl
 8027dd8:	2b00      	cmp	r3, #0
 8027dda:	f000 81ad 	beq.w	8028138 <__strftime.isra.0+0x880>
 8027dde:	222d      	movs	r2, #45	; 0x2d
 8027de0:	f88d 2018 	strb.w	r2, [sp, #24]
 8027de4:	f1b9 0f00 	cmp.w	r9, #0
 8027de8:	d001      	beq.n	8027dee <__strftime.isra.0+0x536>
 8027dea:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8027dee:	f10d 0219 	add.w	r2, sp, #25
 8027df2:	e1ac      	b.n	802814e <__strftime.isra.0+0x896>
 8027df4:	f201 706c 	addw	r0, r1, #1900	; 0x76c
 8027df8:	9104      	str	r1, [sp, #16]
 8027dfa:	f002 fd3b 	bl	802a874 <abs>
 8027dfe:	f04f 0c64 	mov.w	ip, #100	; 0x64
 8027e02:	9904      	ldr	r1, [sp, #16]
 8027e04:	fb90 f2fc 	sdiv	r2, r0, ip
 8027e08:	e7cb      	b.n	8027da2 <__strftime.isra.0+0x4ea>
 8027e0a:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 8027e0e:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8027e12:	f002 fd2f 	bl	802a874 <abs>
 8027e16:	f04f 0c64 	mov.w	ip, #100	; 0x64
 8027e1a:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
 8027e1e:	fb90 fefc 	sdiv	lr, r0, ip
 8027e22:	fb0e 001c 	mls	r0, lr, ip, r0
 8027e26:	e7c5      	b.n	8027db4 <__strftime.isra.0+0x4fc>
 8027e28:	d0cb      	beq.n	8027dc2 <__strftime.isra.0+0x50a>
 8027e2a:	4b8b      	ldr	r3, [pc, #556]	; (8028058 <__strftime.isra.0+0x7a0>)
 8027e2c:	4299      	cmp	r1, r3
 8027e2e:	bfb4      	ite	lt
 8027e30:	2301      	movlt	r3, #1
 8027e32:	2300      	movge	r3, #0
 8027e34:	9303      	str	r3, [sp, #12]
 8027e36:	bfb8      	it	lt
 8027e38:	f04f 3aff 	movlt.w	sl, #4294967295	; 0xffffffff
 8027e3c:	e7c1      	b.n	8027dc2 <__strftime.isra.0+0x50a>
 8027e3e:	f04f 0a01 	mov.w	sl, #1
 8027e42:	f8cd a00c 	str.w	sl, [sp, #12]
 8027e46:	e7bc      	b.n	8027dc2 <__strftime.isra.0+0x50a>
 8027e48:	f1ba 0f64 	cmp.w	sl, #100	; 0x64
 8027e4c:	bf04      	itt	eq
 8027e4e:	3201      	addeq	r2, #1
 8027e50:	f04f 0a00 	moveq.w	sl, #0
 8027e54:	e7bc      	b.n	8027dd0 <__strftime.isra.0+0x518>
 8027e56:	4982      	ldr	r1, [pc, #520]	; (8028060 <__strftime.isra.0+0x7a8>)
 8027e58:	4a82      	ldr	r2, [pc, #520]	; (8028064 <__strftime.isra.0+0x7ac>)
 8027e5a:	68b3      	ldr	r3, [r6, #8]
 8027e5c:	286b      	cmp	r0, #107	; 0x6b
 8027e5e:	bf08      	it	eq
 8027e60:	460a      	moveq	r2, r1
 8027e62:	e6e3      	b.n	8027c2c <__strftime.isra.0+0x374>
 8027e64:	68b3      	ldr	r3, [r6, #8]
 8027e66:	b163      	cbz	r3, 8027e82 <__strftime.isra.0+0x5ca>
 8027e68:	2b0c      	cmp	r3, #12
 8027e6a:	d004      	beq.n	8027e76 <__strftime.isra.0+0x5be>
 8027e6c:	210c      	movs	r1, #12
 8027e6e:	fb93 f2f1 	sdiv	r2, r3, r1
 8027e72:	fb01 3312 	mls	r3, r1, r2, r3
 8027e76:	497b      	ldr	r1, [pc, #492]	; (8028064 <__strftime.isra.0+0x7ac>)
 8027e78:	4a79      	ldr	r2, [pc, #484]	; (8028060 <__strftime.isra.0+0x7a8>)
 8027e7a:	2849      	cmp	r0, #73	; 0x49
 8027e7c:	bf08      	it	eq
 8027e7e:	460a      	moveq	r2, r1
 8027e80:	e6d4      	b.n	8027c2c <__strftime.isra.0+0x374>
 8027e82:	230c      	movs	r3, #12
 8027e84:	e7f7      	b.n	8027e76 <__strftime.isra.0+0x5be>
 8027e86:	69f3      	ldr	r3, [r6, #28]
 8027e88:	4a77      	ldr	r2, [pc, #476]	; (8028068 <__strftime.isra.0+0x7b0>)
 8027e8a:	3301      	adds	r3, #1
 8027e8c:	e6ce      	b.n	8027c2c <__strftime.isra.0+0x374>
 8027e8e:	6933      	ldr	r3, [r6, #16]
 8027e90:	3301      	adds	r3, #1
 8027e92:	e73d      	b.n	8027d10 <__strftime.isra.0+0x458>
 8027e94:	6873      	ldr	r3, [r6, #4]
 8027e96:	e73b      	b.n	8027d10 <__strftime.isra.0+0x458>
 8027e98:	1e6b      	subs	r3, r5, #1
 8027e9a:	429c      	cmp	r4, r3
 8027e9c:	f4bf ad3e 	bcs.w	802791c <__strftime.isra.0+0x64>
 8027ea0:	230a      	movs	r3, #10
 8027ea2:	553b      	strb	r3, [r7, r4]
 8027ea4:	3401      	adds	r4, #1
 8027ea6:	e60b      	b.n	8027ac0 <__strftime.isra.0+0x208>
 8027ea8:	68b3      	ldr	r3, [r6, #8]
 8027eaa:	2b0b      	cmp	r3, #11
 8027eac:	4b6f      	ldr	r3, [pc, #444]	; (802806c <__strftime.isra.0+0x7b4>)
 8027eae:	bfd4      	ite	le
 8027eb0:	2200      	movle	r2, #0
 8027eb2:	2201      	movgt	r2, #1
 8027eb4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8027eb8:	f8d3 90a4 	ldr.w	r9, [r3, #164]	; 0xa4
 8027ebc:	4648      	mov	r0, r9
 8027ebe:	f7d8 f9e1 	bl	8000284 <strlen>
 8027ec2:	f109 32ff 	add.w	r2, r9, #4294967295	; 0xffffffff
 8027ec6:	4420      	add	r0, r4
 8027ec8:	f105 3cff 	add.w	ip, r5, #4294967295	; 0xffffffff
 8027ecc:	42a0      	cmp	r0, r4
 8027ece:	f43f adf7 	beq.w	8027ac0 <__strftime.isra.0+0x208>
 8027ed2:	45a4      	cmp	ip, r4
 8027ed4:	f67f ad22 	bls.w	802791c <__strftime.isra.0+0x64>
 8027ed8:	f898 1000 	ldrb.w	r1, [r8]
 8027edc:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8027ee0:	2950      	cmp	r1, #80	; 0x50
 8027ee2:	d107      	bne.n	8027ef4 <__strftime.isra.0+0x63c>
 8027ee4:	4962      	ldr	r1, [pc, #392]	; (8028070 <__strftime.isra.0+0x7b8>)
 8027ee6:	5cc9      	ldrb	r1, [r1, r3]
 8027ee8:	f001 0103 	and.w	r1, r1, #3
 8027eec:	2901      	cmp	r1, #1
 8027eee:	bf08      	it	eq
 8027ef0:	3320      	addeq	r3, #32
 8027ef2:	b2db      	uxtb	r3, r3
 8027ef4:	553b      	strb	r3, [r7, r4]
 8027ef6:	3401      	adds	r4, #1
 8027ef8:	e7e8      	b.n	8027ecc <__strftime.isra.0+0x614>
 8027efa:	6873      	ldr	r3, [r6, #4]
 8027efc:	9300      	str	r3, [sp, #0]
 8027efe:	4a5d      	ldr	r2, [pc, #372]	; (8028074 <__strftime.isra.0+0x7bc>)
 8027f00:	68b3      	ldr	r3, [r6, #8]
 8027f02:	1b29      	subs	r1, r5, r4
 8027f04:	1938      	adds	r0, r7, r4
 8027f06:	f005 fbff 	bl	802d708 <sniprintf>
 8027f0a:	e693      	b.n	8027c34 <__strftime.isra.0+0x37c>
 8027f0c:	6a33      	ldr	r3, [r6, #32]
 8027f0e:	2b00      	cmp	r3, #0
 8027f10:	db7a      	blt.n	8028008 <__strftime.isra.0+0x750>
 8027f12:	f001 f9cf 	bl	80292b4 <__tz_lock>
 8027f16:	9b02      	ldr	r3, [sp, #8]
 8027f18:	b90b      	cbnz	r3, 8027f1e <__strftime.isra.0+0x666>
 8027f1a:	f001 f9d7 	bl	80292cc <_tzset_unlocked>
 8027f1e:	f004 f839 	bl	802bf94 <__gettzinfo>
 8027f22:	6a33      	ldr	r3, [r6, #32]
 8027f24:	2b00      	cmp	r3, #0
 8027f26:	bfd4      	ite	le
 8027f28:	2200      	movle	r2, #0
 8027f2a:	2201      	movgt	r2, #1
 8027f2c:	2328      	movs	r3, #40	; 0x28
 8027f2e:	fb02 3303 	mla	r3, r2, r3, r3
 8027f32:	58c3      	ldr	r3, [r0, r3]
 8027f34:	f1c3 0900 	rsb	r9, r3, #0
 8027f38:	f001 f9c2 	bl	80292c0 <__tz_unlock>
 8027f3c:	2301      	movs	r3, #1
 8027f3e:	9302      	str	r3, [sp, #8]
 8027f40:	6972      	ldr	r2, [r6, #20]
 8027f42:	f1b2 0345 	subs.w	r3, r2, #69	; 0x45
 8027f46:	ea4f 7ce2 	mov.w	ip, r2, asr #31
 8027f4a:	f16c 0c00 	sbc.w	ip, ip, #0
 8027f4e:	f1bc 0f00 	cmp.w	ip, #0
 8027f52:	eba5 0104 	sub.w	r1, r5, r4
 8027f56:	eb07 0004 	add.w	r0, r7, r4
 8027f5a:	da02      	bge.n	8027f62 <__strftime.isra.0+0x6aa>
 8027f5c:	3303      	adds	r3, #3
 8027f5e:	f14c 0c00 	adc.w	ip, ip, #0
 8027f62:	089b      	lsrs	r3, r3, #2
 8027f64:	ea43 738c 	orr.w	r3, r3, ip, lsl #30
 8027f68:	f102 3aff 	add.w	sl, r2, #4294967295	; 0xffffffff
 8027f6c:	ea4f 0cac 	mov.w	ip, ip, asr #2
 8027f70:	f04f 0e64 	mov.w	lr, #100	; 0x64
 8027f74:	fb9a fefe 	sdiv	lr, sl, lr
 8027f78:	ebb3 030e 	subs.w	r3, r3, lr
 8027f7c:	eb6c 7cee 	sbc.w	ip, ip, lr, asr #31
 8027f80:	f202 1a2b 	addw	sl, r2, #299	; 0x12b
 8027f84:	f44f 7ec8 	mov.w	lr, #400	; 0x190
 8027f88:	fb9a fefe 	sdiv	lr, sl, lr
 8027f8c:	eb13 030e 	adds.w	r3, r3, lr
 8027f90:	eb4c 7eee 	adc.w	lr, ip, lr, asr #31
 8027f94:	3a46      	subs	r2, #70	; 0x46
 8027f96:	f240 1c6d 	movw	ip, #365	; 0x16d
 8027f9a:	fb0c f202 	mul.w	r2, ip, r2
 8027f9e:	189b      	adds	r3, r3, r2
 8027fa0:	eb4e 72e2 	adc.w	r2, lr, r2, asr #31
 8027fa4:	f8d6 e01c 	ldr.w	lr, [r6, #28]
 8027fa8:	f04f 0c18 	mov.w	ip, #24
 8027fac:	eb13 030e 	adds.w	r3, r3, lr
 8027fb0:	eb42 72ee 	adc.w	r2, r2, lr, asr #31
 8027fb4:	fba3 3e0c 	umull	r3, lr, r3, ip
 8027fb8:	fb0c e202 	mla	r2, ip, r2, lr
 8027fbc:	f8d6 e008 	ldr.w	lr, [r6, #8]
 8027fc0:	f04f 0c3c 	mov.w	ip, #60	; 0x3c
 8027fc4:	eb13 030e 	adds.w	r3, r3, lr
 8027fc8:	eb42 7eee 	adc.w	lr, r2, lr, asr #31
 8027fcc:	fba3 320c 	umull	r3, r2, r3, ip
 8027fd0:	fb0c 220e 	mla	r2, ip, lr, r2
 8027fd4:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8027fd8:	eb13 030e 	adds.w	r3, r3, lr
 8027fdc:	eb42 72ee 	adc.w	r2, r2, lr, asr #31
 8027fe0:	fba3 3e0c 	umull	r3, lr, r3, ip
 8027fe4:	fb0c e202 	mla	r2, ip, r2, lr
 8027fe8:	f8d6 e000 	ldr.w	lr, [r6]
 8027fec:	eb13 030e 	adds.w	r3, r3, lr
 8027ff0:	eb42 72ee 	adc.w	r2, r2, lr, asr #31
 8027ff4:	ebb3 0309 	subs.w	r3, r3, r9
 8027ff8:	eb62 72e9 	sbc.w	r2, r2, r9, asr #31
 8027ffc:	e9cd 3200 	strd	r3, r2, [sp]
 8028000:	4a1d      	ldr	r2, [pc, #116]	; (8028078 <__strftime.isra.0+0x7c0>)
 8028002:	f005 fb81 	bl	802d708 <sniprintf>
 8028006:	e615      	b.n	8027c34 <__strftime.isra.0+0x37c>
 8028008:	f04f 0900 	mov.w	r9, #0
 802800c:	e798      	b.n	8027f40 <__strftime.isra.0+0x688>
 802800e:	6833      	ldr	r3, [r6, #0]
 8028010:	e67e      	b.n	8027d10 <__strftime.isra.0+0x458>
 8028012:	1e6b      	subs	r3, r5, #1
 8028014:	429c      	cmp	r4, r3
 8028016:	f4bf ac81 	bcs.w	802791c <__strftime.isra.0+0x64>
 802801a:	2309      	movs	r3, #9
 802801c:	e741      	b.n	8027ea2 <__strftime.isra.0+0x5ea>
 802801e:	6833      	ldr	r3, [r6, #0]
 8028020:	9301      	str	r3, [sp, #4]
 8028022:	6873      	ldr	r3, [r6, #4]
 8028024:	9300      	str	r3, [sp, #0]
 8028026:	4a15      	ldr	r2, [pc, #84]	; (802807c <__strftime.isra.0+0x7c4>)
 8028028:	68b3      	ldr	r3, [r6, #8]
 802802a:	e5f4      	b.n	8027c16 <__strftime.isra.0+0x35e>
 802802c:	1e6b      	subs	r3, r5, #1
 802802e:	429c      	cmp	r4, r3
 8028030:	f4bf ac74 	bcs.w	802791c <__strftime.isra.0+0x64>
 8028034:	69b3      	ldr	r3, [r6, #24]
 8028036:	1c62      	adds	r2, r4, #1
 8028038:	b91b      	cbnz	r3, 8028042 <__strftime.isra.0+0x78a>
 802803a:	2337      	movs	r3, #55	; 0x37
 802803c:	553b      	strb	r3, [r7, r4]
 802803e:	4614      	mov	r4, r2
 8028040:	e53e      	b.n	8027ac0 <__strftime.isra.0+0x208>
 8028042:	3330      	adds	r3, #48	; 0x30
 8028044:	e7fa      	b.n	802803c <__strftime.isra.0+0x784>
 8028046:	69f3      	ldr	r3, [r6, #28]
 8028048:	69b2      	ldr	r2, [r6, #24]
 802804a:	3307      	adds	r3, #7
 802804c:	1a9b      	subs	r3, r3, r2
 802804e:	2207      	movs	r2, #7
 8028050:	fb93 f3f2 	sdiv	r3, r3, r2
 8028054:	e65c      	b.n	8027d10 <__strftime.isra.0+0x458>
 8028056:	bf00      	nop
 8028058:	fffff894 	.word	0xfffff894
 802805c:	fffff895 	.word	0xfffff895
 8028060:	08032851 	.word	0x08032851
 8028064:	0803285f 	.word	0x0803285f
 8028068:	08032874 	.word	0x08032874
 802806c:	0803298c 	.word	0x0803298c
 8028070:	08032018 	.word	0x08032018
 8028074:	08032883 	.word	0x08032883
 8028078:	08032879 	.word	0x08032879
 802807c:	0803287e 	.word	0x0803287e
 8028080:	4630      	mov	r0, r6
 8028082:	f7ff fbb7 	bl	80277f4 <iso_year_adjust>
 8028086:	69b2      	ldr	r2, [r6, #24]
 8028088:	b132      	cbz	r2, 8028098 <__strftime.isra.0+0x7e0>
 802808a:	3a01      	subs	r2, #1
 802808c:	2800      	cmp	r0, #0
 802808e:	dc28      	bgt.n	80280e2 <__strftime.isra.0+0x82a>
 8028090:	69f3      	ldr	r3, [r6, #28]
 8028092:	d103      	bne.n	802809c <__strftime.isra.0+0x7e4>
 8028094:	330a      	adds	r3, #10
 8028096:	e7d9      	b.n	802804c <__strftime.isra.0+0x794>
 8028098:	2206      	movs	r2, #6
 802809a:	e7f7      	b.n	802808c <__strftime.isra.0+0x7d4>
 802809c:	6971      	ldr	r1, [r6, #20]
 802809e:	2900      	cmp	r1, #0
 80280a0:	eba2 0203 	sub.w	r2, r2, r3
 80280a4:	f240 736b 	movw	r3, #1899	; 0x76b
 80280a8:	bfa8      	it	ge
 80280aa:	f06f 0364 	mvnge.w	r3, #100	; 0x64
 80280ae:	440b      	add	r3, r1
 80280b0:	0799      	lsls	r1, r3, #30
 80280b2:	d105      	bne.n	80280c0 <__strftime.isra.0+0x808>
 80280b4:	2064      	movs	r0, #100	; 0x64
 80280b6:	fb93 f1f0 	sdiv	r1, r3, r0
 80280ba:	fb00 3111 	mls	r1, r0, r1, r3
 80280be:	b971      	cbnz	r1, 80280de <__strftime.isra.0+0x826>
 80280c0:	f44f 71c8 	mov.w	r1, #400	; 0x190
 80280c4:	fb93 f0f1 	sdiv	r0, r3, r1
 80280c8:	fb01 3310 	mls	r3, r1, r0, r3
 80280cc:	fab3 f383 	clz	r3, r3
 80280d0:	095b      	lsrs	r3, r3, #5
 80280d2:	1ad3      	subs	r3, r2, r3
 80280d4:	2b05      	cmp	r3, #5
 80280d6:	bfb4      	ite	lt
 80280d8:	2335      	movlt	r3, #53	; 0x35
 80280da:	2334      	movge	r3, #52	; 0x34
 80280dc:	e618      	b.n	8027d10 <__strftime.isra.0+0x458>
 80280de:	2301      	movs	r3, #1
 80280e0:	e7f7      	b.n	80280d2 <__strftime.isra.0+0x81a>
 80280e2:	2301      	movs	r3, #1
 80280e4:	e614      	b.n	8027d10 <__strftime.isra.0+0x458>
 80280e6:	1e6b      	subs	r3, r5, #1
 80280e8:	429c      	cmp	r4, r3
 80280ea:	f4bf ac17 	bcs.w	802791c <__strftime.isra.0+0x64>
 80280ee:	69b3      	ldr	r3, [r6, #24]
 80280f0:	3330      	adds	r3, #48	; 0x30
 80280f2:	e6d6      	b.n	8027ea2 <__strftime.isra.0+0x5ea>
 80280f4:	69b2      	ldr	r2, [r6, #24]
 80280f6:	b11a      	cbz	r2, 8028100 <__strftime.isra.0+0x848>
 80280f8:	3a01      	subs	r2, #1
 80280fa:	69f3      	ldr	r3, [r6, #28]
 80280fc:	3307      	adds	r3, #7
 80280fe:	e7a5      	b.n	802804c <__strftime.isra.0+0x794>
 8028100:	2206      	movs	r2, #6
 8028102:	e7fa      	b.n	80280fa <__strftime.isra.0+0x842>
 8028104:	6970      	ldr	r0, [r6, #20]
 8028106:	2800      	cmp	r0, #0
 8028108:	db05      	blt.n	8028116 <__strftime.isra.0+0x85e>
 802810a:	2364      	movs	r3, #100	; 0x64
 802810c:	fb90 f2f3 	sdiv	r2, r0, r3
 8028110:	fb02 0313 	mls	r3, r2, r3, r0
 8028114:	e5fc      	b.n	8027d10 <__strftime.isra.0+0x458>
 8028116:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 802811a:	f002 fbab 	bl	802a874 <abs>
 802811e:	e7f4      	b.n	802810a <__strftime.isra.0+0x852>
 8028120:	6972      	ldr	r2, [r6, #20]
 8028122:	494c      	ldr	r1, [pc, #304]	; (8028254 <__strftime.isra.0+0x99c>)
 8028124:	428a      	cmp	r2, r1
 8028126:	da05      	bge.n	8028134 <__strftime.isra.0+0x87c>
 8028128:	202d      	movs	r0, #45	; 0x2d
 802812a:	f88d 0018 	strb.w	r0, [sp, #24]
 802812e:	eba1 0a02 	sub.w	sl, r1, r2
 8028132:	e657      	b.n	8027de4 <__strftime.isra.0+0x52c>
 8028134:	f202 7a6c 	addw	sl, r2, #1900	; 0x76c
 8028138:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
 802813c:	d106      	bne.n	802814c <__strftime.isra.0+0x894>
 802813e:	f242 720f 	movw	r2, #9999	; 0x270f
 8028142:	4592      	cmp	sl, r2
 8028144:	d902      	bls.n	802814c <__strftime.isra.0+0x894>
 8028146:	f88d b018 	strb.w	fp, [sp, #24]
 802814a:	e64b      	b.n	8027de4 <__strftime.isra.0+0x52c>
 802814c:	aa06      	add	r2, sp, #24
 802814e:	2125      	movs	r1, #37	; 0x25
 8028150:	7011      	strb	r1, [r2, #0]
 8028152:	f1bb 0f00 	cmp.w	fp, #0
 8028156:	d108      	bne.n	802816a <__strftime.isra.0+0x8b2>
 8028158:	1c50      	adds	r0, r2, #1
 802815a:	493f      	ldr	r1, [pc, #252]	; (8028258 <__strftime.isra.0+0x9a0>)
 802815c:	f7ff f951 	bl	8027402 <strcpy>
 8028160:	f8cd a000 	str.w	sl, [sp]
 8028164:	464b      	mov	r3, r9
 8028166:	aa06      	add	r2, sp, #24
 8028168:	e6cb      	b.n	8027f02 <__strftime.isra.0+0x64a>
 802816a:	2330      	movs	r3, #48	; 0x30
 802816c:	1c90      	adds	r0, r2, #2
 802816e:	7053      	strb	r3, [r2, #1]
 8028170:	e7f3      	b.n	802815a <__strftime.isra.0+0x8a2>
 8028172:	6a33      	ldr	r3, [r6, #32]
 8028174:	2b00      	cmp	r3, #0
 8028176:	f6ff aca3 	blt.w	8027ac0 <__strftime.isra.0+0x208>
 802817a:	f001 f89b 	bl	80292b4 <__tz_lock>
 802817e:	9b02      	ldr	r3, [sp, #8]
 8028180:	b90b      	cbnz	r3, 8028186 <__strftime.isra.0+0x8ce>
 8028182:	f001 f8a3 	bl	80292cc <_tzset_unlocked>
 8028186:	f003 ff05 	bl	802bf94 <__gettzinfo>
 802818a:	6a33      	ldr	r3, [r6, #32]
 802818c:	2b00      	cmp	r3, #0
 802818e:	bfd4      	ite	le
 8028190:	2200      	movle	r2, #0
 8028192:	2201      	movgt	r2, #1
 8028194:	2328      	movs	r3, #40	; 0x28
 8028196:	fb02 3303 	mla	r3, r2, r3, r3
 802819a:	eb07 0a04 	add.w	sl, r7, r4
 802819e:	58c3      	ldr	r3, [r0, r3]
 80281a0:	f1c3 0900 	rsb	r9, r3, #0
 80281a4:	f001 f88c 	bl	80292c0 <__tz_unlock>
 80281a8:	233c      	movs	r3, #60	; 0x3c
 80281aa:	fb99 f0f3 	sdiv	r0, r9, r3
 80281ae:	f003 ff45 	bl	802c03c <labs>
 80281b2:	233c      	movs	r3, #60	; 0x3c
 80281b4:	eba5 0b04 	sub.w	fp, r5, r4
 80281b8:	fb90 f2f3 	sdiv	r2, r0, r3
 80281bc:	fb02 0013 	mls	r0, r2, r3, r0
 80281c0:	9000      	str	r0, [sp, #0]
 80281c2:	4a26      	ldr	r2, [pc, #152]	; (802825c <__strftime.isra.0+0x9a4>)
 80281c4:	f44f 6361 	mov.w	r3, #3600	; 0xe10
 80281c8:	4659      	mov	r1, fp
 80281ca:	4650      	mov	r0, sl
 80281cc:	fb99 f3f3 	sdiv	r3, r9, r3
 80281d0:	f005 fa9a 	bl	802d708 <sniprintf>
 80281d4:	2800      	cmp	r0, #0
 80281d6:	f6ff aba1 	blt.w	802791c <__strftime.isra.0+0x64>
 80281da:	4404      	add	r4, r0
 80281dc:	42a5      	cmp	r5, r4
 80281de:	f67f ab9d 	bls.w	802791c <__strftime.isra.0+0x64>
 80281e2:	2301      	movs	r3, #1
 80281e4:	9302      	str	r3, [sp, #8]
 80281e6:	e46b      	b.n	8027ac0 <__strftime.isra.0+0x208>
 80281e8:	6a33      	ldr	r3, [r6, #32]
 80281ea:	2b00      	cmp	r3, #0
 80281ec:	f6ff ac68 	blt.w	8027ac0 <__strftime.isra.0+0x208>
 80281f0:	f001 f860 	bl	80292b4 <__tz_lock>
 80281f4:	9b02      	ldr	r3, [sp, #8]
 80281f6:	b90b      	cbnz	r3, 80281fc <__strftime.isra.0+0x944>
 80281f8:	f001 f868 	bl	80292cc <_tzset_unlocked>
 80281fc:	6a33      	ldr	r3, [r6, #32]
 80281fe:	4a18      	ldr	r2, [pc, #96]	; (8028260 <__strftime.isra.0+0x9a8>)
 8028200:	2b00      	cmp	r3, #0
 8028202:	bfd4      	ite	le
 8028204:	2300      	movle	r3, #0
 8028206:	2301      	movgt	r3, #1
 8028208:	f852 9023 	ldr.w	r9, [r2, r3, lsl #2]
 802820c:	4648      	mov	r0, r9
 802820e:	f7d8 f839 	bl	8000284 <strlen>
 8028212:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8028216:	4420      	add	r0, r4
 8028218:	1e6b      	subs	r3, r5, #1
 802821a:	42a0      	cmp	r0, r4
 802821c:	d102      	bne.n	8028224 <__strftime.isra.0+0x96c>
 802821e:	f001 f84f 	bl	80292c0 <__tz_unlock>
 8028222:	e7de      	b.n	80281e2 <__strftime.isra.0+0x92a>
 8028224:	42a3      	cmp	r3, r4
 8028226:	d904      	bls.n	8028232 <__strftime.isra.0+0x97a>
 8028228:	f819 2f01 	ldrb.w	r2, [r9, #1]!
 802822c:	553a      	strb	r2, [r7, r4]
 802822e:	3401      	adds	r4, #1
 8028230:	e7f3      	b.n	802821a <__strftime.isra.0+0x962>
 8028232:	f001 f845 	bl	80292c0 <__tz_unlock>
 8028236:	f7ff bb71 	b.w	802791c <__strftime.isra.0+0x64>
 802823a:	1e6b      	subs	r3, r5, #1
 802823c:	429c      	cmp	r4, r3
 802823e:	f4bf ab6d 	bcs.w	802791c <__strftime.isra.0+0x64>
 8028242:	2325      	movs	r3, #37	; 0x25
 8028244:	e62d      	b.n	8027ea2 <__strftime.isra.0+0x5ea>
 8028246:	b10d      	cbz	r5, 802824c <__strftime.isra.0+0x994>
 8028248:	2300      	movs	r3, #0
 802824a:	553b      	strb	r3, [r7, r4]
 802824c:	4620      	mov	r0, r4
 802824e:	b00f      	add	sp, #60	; 0x3c
 8028250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028254:	fffff894 	.word	0xfffff894
 8028258:	08032870 	.word	0x08032870
 802825c:	0803288d 	.word	0x0803288d
 8028260:	2000028c 	.word	0x2000028c

08028264 <strftime>:
 8028264:	f7ff bb28 	b.w	80278b8 <__strftime.isra.0>

08028268 <sulp>:
 8028268:	b570      	push	{r4, r5, r6, lr}
 802826a:	4604      	mov	r4, r0
 802826c:	460d      	mov	r5, r1
 802826e:	ec45 4b10 	vmov	d0, r4, r5
 8028272:	4616      	mov	r6, r2
 8028274:	f004 fa88 	bl	802c788 <__ulp>
 8028278:	ec51 0b10 	vmov	r0, r1, d0
 802827c:	b17e      	cbz	r6, 802829e <sulp+0x36>
 802827e:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8028282:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8028286:	2b00      	cmp	r3, #0
 8028288:	dd09      	ble.n	802829e <sulp+0x36>
 802828a:	051b      	lsls	r3, r3, #20
 802828c:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8028290:	2400      	movs	r4, #0
 8028292:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8028296:	4622      	mov	r2, r4
 8028298:	462b      	mov	r3, r5
 802829a:	f7d8 f9b7 	bl	800060c <__aeabi_dmul>
 802829e:	bd70      	pop	{r4, r5, r6, pc}

080282a0 <_strtod_l>:
 80282a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80282a4:	ed2d 8b02 	vpush	{d8}
 80282a8:	b09d      	sub	sp, #116	; 0x74
 80282aa:	461f      	mov	r7, r3
 80282ac:	2300      	movs	r3, #0
 80282ae:	9318      	str	r3, [sp, #96]	; 0x60
 80282b0:	4ba2      	ldr	r3, [pc, #648]	; (802853c <_strtod_l+0x29c>)
 80282b2:	9213      	str	r2, [sp, #76]	; 0x4c
 80282b4:	681b      	ldr	r3, [r3, #0]
 80282b6:	9305      	str	r3, [sp, #20]
 80282b8:	4604      	mov	r4, r0
 80282ba:	4618      	mov	r0, r3
 80282bc:	4688      	mov	r8, r1
 80282be:	f7d7 ffe1 	bl	8000284 <strlen>
 80282c2:	f04f 0a00 	mov.w	sl, #0
 80282c6:	4605      	mov	r5, r0
 80282c8:	f04f 0b00 	mov.w	fp, #0
 80282cc:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 80282d0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80282d2:	781a      	ldrb	r2, [r3, #0]
 80282d4:	2a2b      	cmp	r2, #43	; 0x2b
 80282d6:	d04e      	beq.n	8028376 <_strtod_l+0xd6>
 80282d8:	d83b      	bhi.n	8028352 <_strtod_l+0xb2>
 80282da:	2a0d      	cmp	r2, #13
 80282dc:	d834      	bhi.n	8028348 <_strtod_l+0xa8>
 80282de:	2a08      	cmp	r2, #8
 80282e0:	d834      	bhi.n	802834c <_strtod_l+0xac>
 80282e2:	2a00      	cmp	r2, #0
 80282e4:	d03e      	beq.n	8028364 <_strtod_l+0xc4>
 80282e6:	2300      	movs	r3, #0
 80282e8:	930a      	str	r3, [sp, #40]	; 0x28
 80282ea:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 80282ec:	7833      	ldrb	r3, [r6, #0]
 80282ee:	2b30      	cmp	r3, #48	; 0x30
 80282f0:	f040 80b0 	bne.w	8028454 <_strtod_l+0x1b4>
 80282f4:	7873      	ldrb	r3, [r6, #1]
 80282f6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80282fa:	2b58      	cmp	r3, #88	; 0x58
 80282fc:	d168      	bne.n	80283d0 <_strtod_l+0x130>
 80282fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028300:	9301      	str	r3, [sp, #4]
 8028302:	ab18      	add	r3, sp, #96	; 0x60
 8028304:	9702      	str	r7, [sp, #8]
 8028306:	9300      	str	r3, [sp, #0]
 8028308:	4a8d      	ldr	r2, [pc, #564]	; (8028540 <_strtod_l+0x2a0>)
 802830a:	ab19      	add	r3, sp, #100	; 0x64
 802830c:	a917      	add	r1, sp, #92	; 0x5c
 802830e:	4620      	mov	r0, r4
 8028310:	f003 faf4 	bl	802b8fc <__gethex>
 8028314:	f010 0707 	ands.w	r7, r0, #7
 8028318:	4605      	mov	r5, r0
 802831a:	d005      	beq.n	8028328 <_strtod_l+0x88>
 802831c:	2f06      	cmp	r7, #6
 802831e:	d12c      	bne.n	802837a <_strtod_l+0xda>
 8028320:	3601      	adds	r6, #1
 8028322:	2300      	movs	r3, #0
 8028324:	9617      	str	r6, [sp, #92]	; 0x5c
 8028326:	930a      	str	r3, [sp, #40]	; 0x28
 8028328:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802832a:	2b00      	cmp	r3, #0
 802832c:	f040 8590 	bne.w	8028e50 <_strtod_l+0xbb0>
 8028330:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028332:	b1eb      	cbz	r3, 8028370 <_strtod_l+0xd0>
 8028334:	4652      	mov	r2, sl
 8028336:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 802833a:	ec43 2b10 	vmov	d0, r2, r3
 802833e:	b01d      	add	sp, #116	; 0x74
 8028340:	ecbd 8b02 	vpop	{d8}
 8028344:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028348:	2a20      	cmp	r2, #32
 802834a:	d1cc      	bne.n	80282e6 <_strtod_l+0x46>
 802834c:	3301      	adds	r3, #1
 802834e:	9317      	str	r3, [sp, #92]	; 0x5c
 8028350:	e7be      	b.n	80282d0 <_strtod_l+0x30>
 8028352:	2a2d      	cmp	r2, #45	; 0x2d
 8028354:	d1c7      	bne.n	80282e6 <_strtod_l+0x46>
 8028356:	2201      	movs	r2, #1
 8028358:	920a      	str	r2, [sp, #40]	; 0x28
 802835a:	1c5a      	adds	r2, r3, #1
 802835c:	9217      	str	r2, [sp, #92]	; 0x5c
 802835e:	785b      	ldrb	r3, [r3, #1]
 8028360:	2b00      	cmp	r3, #0
 8028362:	d1c2      	bne.n	80282ea <_strtod_l+0x4a>
 8028364:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8028366:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 802836a:	2b00      	cmp	r3, #0
 802836c:	f040 856e 	bne.w	8028e4c <_strtod_l+0xbac>
 8028370:	4652      	mov	r2, sl
 8028372:	465b      	mov	r3, fp
 8028374:	e7e1      	b.n	802833a <_strtod_l+0x9a>
 8028376:	2200      	movs	r2, #0
 8028378:	e7ee      	b.n	8028358 <_strtod_l+0xb8>
 802837a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802837c:	b13a      	cbz	r2, 802838e <_strtod_l+0xee>
 802837e:	2135      	movs	r1, #53	; 0x35
 8028380:	a81a      	add	r0, sp, #104	; 0x68
 8028382:	f004 fb0c 	bl	802c99e <__copybits>
 8028386:	9918      	ldr	r1, [sp, #96]	; 0x60
 8028388:	4620      	mov	r0, r4
 802838a:	f003 fecb 	bl	802c124 <_Bfree>
 802838e:	3f01      	subs	r7, #1
 8028390:	2f04      	cmp	r7, #4
 8028392:	d806      	bhi.n	80283a2 <_strtod_l+0x102>
 8028394:	e8df f007 	tbb	[pc, r7]
 8028398:	1714030a 	.word	0x1714030a
 802839c:	0a          	.byte	0x0a
 802839d:	00          	.byte	0x00
 802839e:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 80283a2:	0728      	lsls	r0, r5, #28
 80283a4:	d5c0      	bpl.n	8028328 <_strtod_l+0x88>
 80283a6:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 80283aa:	e7bd      	b.n	8028328 <_strtod_l+0x88>
 80283ac:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 80283b0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80283b2:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80283b6:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80283ba:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 80283be:	e7f0      	b.n	80283a2 <_strtod_l+0x102>
 80283c0:	f8df b180 	ldr.w	fp, [pc, #384]	; 8028544 <_strtod_l+0x2a4>
 80283c4:	e7ed      	b.n	80283a2 <_strtod_l+0x102>
 80283c6:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 80283ca:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 80283ce:	e7e8      	b.n	80283a2 <_strtod_l+0x102>
 80283d0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80283d2:	1c5a      	adds	r2, r3, #1
 80283d4:	9217      	str	r2, [sp, #92]	; 0x5c
 80283d6:	785b      	ldrb	r3, [r3, #1]
 80283d8:	2b30      	cmp	r3, #48	; 0x30
 80283da:	d0f9      	beq.n	80283d0 <_strtod_l+0x130>
 80283dc:	2b00      	cmp	r3, #0
 80283de:	d0a3      	beq.n	8028328 <_strtod_l+0x88>
 80283e0:	2301      	movs	r3, #1
 80283e2:	f04f 0900 	mov.w	r9, #0
 80283e6:	9304      	str	r3, [sp, #16]
 80283e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80283ea:	9308      	str	r3, [sp, #32]
 80283ec:	f8cd 901c 	str.w	r9, [sp, #28]
 80283f0:	464f      	mov	r7, r9
 80283f2:	220a      	movs	r2, #10
 80283f4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80283f6:	7806      	ldrb	r6, [r0, #0]
 80283f8:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 80283fc:	b2d9      	uxtb	r1, r3
 80283fe:	2909      	cmp	r1, #9
 8028400:	d92a      	bls.n	8028458 <_strtod_l+0x1b8>
 8028402:	9905      	ldr	r1, [sp, #20]
 8028404:	462a      	mov	r2, r5
 8028406:	f005 f9b3 	bl	802d770 <strncmp>
 802840a:	b398      	cbz	r0, 8028474 <_strtod_l+0x1d4>
 802840c:	2000      	movs	r0, #0
 802840e:	4632      	mov	r2, r6
 8028410:	463d      	mov	r5, r7
 8028412:	9005      	str	r0, [sp, #20]
 8028414:	4603      	mov	r3, r0
 8028416:	2a65      	cmp	r2, #101	; 0x65
 8028418:	d001      	beq.n	802841e <_strtod_l+0x17e>
 802841a:	2a45      	cmp	r2, #69	; 0x45
 802841c:	d118      	bne.n	8028450 <_strtod_l+0x1b0>
 802841e:	b91d      	cbnz	r5, 8028428 <_strtod_l+0x188>
 8028420:	9a04      	ldr	r2, [sp, #16]
 8028422:	4302      	orrs	r2, r0
 8028424:	d09e      	beq.n	8028364 <_strtod_l+0xc4>
 8028426:	2500      	movs	r5, #0
 8028428:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 802842c:	f108 0201 	add.w	r2, r8, #1
 8028430:	9217      	str	r2, [sp, #92]	; 0x5c
 8028432:	f898 2001 	ldrb.w	r2, [r8, #1]
 8028436:	2a2b      	cmp	r2, #43	; 0x2b
 8028438:	d075      	beq.n	8028526 <_strtod_l+0x286>
 802843a:	2a2d      	cmp	r2, #45	; 0x2d
 802843c:	d07b      	beq.n	8028536 <_strtod_l+0x296>
 802843e:	f04f 0c00 	mov.w	ip, #0
 8028442:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8028446:	2909      	cmp	r1, #9
 8028448:	f240 8082 	bls.w	8028550 <_strtod_l+0x2b0>
 802844c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8028450:	2600      	movs	r6, #0
 8028452:	e09d      	b.n	8028590 <_strtod_l+0x2f0>
 8028454:	2300      	movs	r3, #0
 8028456:	e7c4      	b.n	80283e2 <_strtod_l+0x142>
 8028458:	2f08      	cmp	r7, #8
 802845a:	bfd8      	it	le
 802845c:	9907      	ldrle	r1, [sp, #28]
 802845e:	f100 0001 	add.w	r0, r0, #1
 8028462:	bfda      	itte	le
 8028464:	fb02 3301 	mlale	r3, r2, r1, r3
 8028468:	9307      	strle	r3, [sp, #28]
 802846a:	fb02 3909 	mlagt	r9, r2, r9, r3
 802846e:	3701      	adds	r7, #1
 8028470:	9017      	str	r0, [sp, #92]	; 0x5c
 8028472:	e7bf      	b.n	80283f4 <_strtod_l+0x154>
 8028474:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8028476:	195a      	adds	r2, r3, r5
 8028478:	9217      	str	r2, [sp, #92]	; 0x5c
 802847a:	5d5a      	ldrb	r2, [r3, r5]
 802847c:	2f00      	cmp	r7, #0
 802847e:	d037      	beq.n	80284f0 <_strtod_l+0x250>
 8028480:	9005      	str	r0, [sp, #20]
 8028482:	463d      	mov	r5, r7
 8028484:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8028488:	2b09      	cmp	r3, #9
 802848a:	d912      	bls.n	80284b2 <_strtod_l+0x212>
 802848c:	2301      	movs	r3, #1
 802848e:	e7c2      	b.n	8028416 <_strtod_l+0x176>
 8028490:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8028492:	1c5a      	adds	r2, r3, #1
 8028494:	9217      	str	r2, [sp, #92]	; 0x5c
 8028496:	785a      	ldrb	r2, [r3, #1]
 8028498:	3001      	adds	r0, #1
 802849a:	2a30      	cmp	r2, #48	; 0x30
 802849c:	d0f8      	beq.n	8028490 <_strtod_l+0x1f0>
 802849e:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 80284a2:	2b08      	cmp	r3, #8
 80284a4:	f200 84d9 	bhi.w	8028e5a <_strtod_l+0xbba>
 80284a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80284aa:	9005      	str	r0, [sp, #20]
 80284ac:	2000      	movs	r0, #0
 80284ae:	9308      	str	r3, [sp, #32]
 80284b0:	4605      	mov	r5, r0
 80284b2:	3a30      	subs	r2, #48	; 0x30
 80284b4:	f100 0301 	add.w	r3, r0, #1
 80284b8:	d014      	beq.n	80284e4 <_strtod_l+0x244>
 80284ba:	9905      	ldr	r1, [sp, #20]
 80284bc:	4419      	add	r1, r3
 80284be:	9105      	str	r1, [sp, #20]
 80284c0:	462b      	mov	r3, r5
 80284c2:	eb00 0e05 	add.w	lr, r0, r5
 80284c6:	210a      	movs	r1, #10
 80284c8:	4573      	cmp	r3, lr
 80284ca:	d113      	bne.n	80284f4 <_strtod_l+0x254>
 80284cc:	182b      	adds	r3, r5, r0
 80284ce:	2b08      	cmp	r3, #8
 80284d0:	f105 0501 	add.w	r5, r5, #1
 80284d4:	4405      	add	r5, r0
 80284d6:	dc1c      	bgt.n	8028512 <_strtod_l+0x272>
 80284d8:	9907      	ldr	r1, [sp, #28]
 80284da:	230a      	movs	r3, #10
 80284dc:	fb03 2301 	mla	r3, r3, r1, r2
 80284e0:	9307      	str	r3, [sp, #28]
 80284e2:	2300      	movs	r3, #0
 80284e4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80284e6:	1c51      	adds	r1, r2, #1
 80284e8:	9117      	str	r1, [sp, #92]	; 0x5c
 80284ea:	7852      	ldrb	r2, [r2, #1]
 80284ec:	4618      	mov	r0, r3
 80284ee:	e7c9      	b.n	8028484 <_strtod_l+0x1e4>
 80284f0:	4638      	mov	r0, r7
 80284f2:	e7d2      	b.n	802849a <_strtod_l+0x1fa>
 80284f4:	2b08      	cmp	r3, #8
 80284f6:	dc04      	bgt.n	8028502 <_strtod_l+0x262>
 80284f8:	9e07      	ldr	r6, [sp, #28]
 80284fa:	434e      	muls	r6, r1
 80284fc:	9607      	str	r6, [sp, #28]
 80284fe:	3301      	adds	r3, #1
 8028500:	e7e2      	b.n	80284c8 <_strtod_l+0x228>
 8028502:	f103 0c01 	add.w	ip, r3, #1
 8028506:	f1bc 0f10 	cmp.w	ip, #16
 802850a:	bfd8      	it	le
 802850c:	fb01 f909 	mulle.w	r9, r1, r9
 8028510:	e7f5      	b.n	80284fe <_strtod_l+0x25e>
 8028512:	2d10      	cmp	r5, #16
 8028514:	bfdc      	itt	le
 8028516:	230a      	movle	r3, #10
 8028518:	fb03 2909 	mlale	r9, r3, r9, r2
 802851c:	e7e1      	b.n	80284e2 <_strtod_l+0x242>
 802851e:	2300      	movs	r3, #0
 8028520:	9305      	str	r3, [sp, #20]
 8028522:	2301      	movs	r3, #1
 8028524:	e77c      	b.n	8028420 <_strtod_l+0x180>
 8028526:	f04f 0c00 	mov.w	ip, #0
 802852a:	f108 0202 	add.w	r2, r8, #2
 802852e:	9217      	str	r2, [sp, #92]	; 0x5c
 8028530:	f898 2002 	ldrb.w	r2, [r8, #2]
 8028534:	e785      	b.n	8028442 <_strtod_l+0x1a2>
 8028536:	f04f 0c01 	mov.w	ip, #1
 802853a:	e7f6      	b.n	802852a <_strtod_l+0x28a>
 802853c:	08032d98 	.word	0x08032d98
 8028540:	0803289c 	.word	0x0803289c
 8028544:	7ff00000 	.word	0x7ff00000
 8028548:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 802854a:	1c51      	adds	r1, r2, #1
 802854c:	9117      	str	r1, [sp, #92]	; 0x5c
 802854e:	7852      	ldrb	r2, [r2, #1]
 8028550:	2a30      	cmp	r2, #48	; 0x30
 8028552:	d0f9      	beq.n	8028548 <_strtod_l+0x2a8>
 8028554:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8028558:	2908      	cmp	r1, #8
 802855a:	f63f af79 	bhi.w	8028450 <_strtod_l+0x1b0>
 802855e:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8028562:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8028564:	9206      	str	r2, [sp, #24]
 8028566:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8028568:	1c51      	adds	r1, r2, #1
 802856a:	9117      	str	r1, [sp, #92]	; 0x5c
 802856c:	7852      	ldrb	r2, [r2, #1]
 802856e:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 8028572:	2e09      	cmp	r6, #9
 8028574:	d937      	bls.n	80285e6 <_strtod_l+0x346>
 8028576:	9e06      	ldr	r6, [sp, #24]
 8028578:	1b89      	subs	r1, r1, r6
 802857a:	2908      	cmp	r1, #8
 802857c:	f644 661f 	movw	r6, #19999	; 0x4e1f
 8028580:	dc02      	bgt.n	8028588 <_strtod_l+0x2e8>
 8028582:	4576      	cmp	r6, lr
 8028584:	bfa8      	it	ge
 8028586:	4676      	movge	r6, lr
 8028588:	f1bc 0f00 	cmp.w	ip, #0
 802858c:	d000      	beq.n	8028590 <_strtod_l+0x2f0>
 802858e:	4276      	negs	r6, r6
 8028590:	2d00      	cmp	r5, #0
 8028592:	d14d      	bne.n	8028630 <_strtod_l+0x390>
 8028594:	9904      	ldr	r1, [sp, #16]
 8028596:	4301      	orrs	r1, r0
 8028598:	f47f aec6 	bne.w	8028328 <_strtod_l+0x88>
 802859c:	2b00      	cmp	r3, #0
 802859e:	f47f aee1 	bne.w	8028364 <_strtod_l+0xc4>
 80285a2:	2a69      	cmp	r2, #105	; 0x69
 80285a4:	d027      	beq.n	80285f6 <_strtod_l+0x356>
 80285a6:	dc24      	bgt.n	80285f2 <_strtod_l+0x352>
 80285a8:	2a49      	cmp	r2, #73	; 0x49
 80285aa:	d024      	beq.n	80285f6 <_strtod_l+0x356>
 80285ac:	2a4e      	cmp	r2, #78	; 0x4e
 80285ae:	f47f aed9 	bne.w	8028364 <_strtod_l+0xc4>
 80285b2:	499f      	ldr	r1, [pc, #636]	; (8028830 <_strtod_l+0x590>)
 80285b4:	a817      	add	r0, sp, #92	; 0x5c
 80285b6:	f003 fbf9 	bl	802bdac <__match>
 80285ba:	2800      	cmp	r0, #0
 80285bc:	f43f aed2 	beq.w	8028364 <_strtod_l+0xc4>
 80285c0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80285c2:	781b      	ldrb	r3, [r3, #0]
 80285c4:	2b28      	cmp	r3, #40	; 0x28
 80285c6:	d12d      	bne.n	8028624 <_strtod_l+0x384>
 80285c8:	499a      	ldr	r1, [pc, #616]	; (8028834 <_strtod_l+0x594>)
 80285ca:	aa1a      	add	r2, sp, #104	; 0x68
 80285cc:	a817      	add	r0, sp, #92	; 0x5c
 80285ce:	f003 fc01 	bl	802bdd4 <__hexnan>
 80285d2:	2805      	cmp	r0, #5
 80285d4:	d126      	bne.n	8028624 <_strtod_l+0x384>
 80285d6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80285d8:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 80285dc:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 80285e0:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 80285e4:	e6a0      	b.n	8028328 <_strtod_l+0x88>
 80285e6:	210a      	movs	r1, #10
 80285e8:	fb01 2e0e 	mla	lr, r1, lr, r2
 80285ec:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 80285f0:	e7b9      	b.n	8028566 <_strtod_l+0x2c6>
 80285f2:	2a6e      	cmp	r2, #110	; 0x6e
 80285f4:	e7db      	b.n	80285ae <_strtod_l+0x30e>
 80285f6:	4990      	ldr	r1, [pc, #576]	; (8028838 <_strtod_l+0x598>)
 80285f8:	a817      	add	r0, sp, #92	; 0x5c
 80285fa:	f003 fbd7 	bl	802bdac <__match>
 80285fe:	2800      	cmp	r0, #0
 8028600:	f43f aeb0 	beq.w	8028364 <_strtod_l+0xc4>
 8028604:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8028606:	498d      	ldr	r1, [pc, #564]	; (802883c <_strtod_l+0x59c>)
 8028608:	3b01      	subs	r3, #1
 802860a:	a817      	add	r0, sp, #92	; 0x5c
 802860c:	9317      	str	r3, [sp, #92]	; 0x5c
 802860e:	f003 fbcd 	bl	802bdac <__match>
 8028612:	b910      	cbnz	r0, 802861a <_strtod_l+0x37a>
 8028614:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8028616:	3301      	adds	r3, #1
 8028618:	9317      	str	r3, [sp, #92]	; 0x5c
 802861a:	f8df b230 	ldr.w	fp, [pc, #560]	; 802884c <_strtod_l+0x5ac>
 802861e:	f04f 0a00 	mov.w	sl, #0
 8028622:	e681      	b.n	8028328 <_strtod_l+0x88>
 8028624:	4886      	ldr	r0, [pc, #536]	; (8028840 <_strtod_l+0x5a0>)
 8028626:	f005 f82f 	bl	802d688 <nan>
 802862a:	ec5b ab10 	vmov	sl, fp, d0
 802862e:	e67b      	b.n	8028328 <_strtod_l+0x88>
 8028630:	9b05      	ldr	r3, [sp, #20]
 8028632:	9807      	ldr	r0, [sp, #28]
 8028634:	1af3      	subs	r3, r6, r3
 8028636:	2f00      	cmp	r7, #0
 8028638:	bf08      	it	eq
 802863a:	462f      	moveq	r7, r5
 802863c:	2d10      	cmp	r5, #16
 802863e:	9306      	str	r3, [sp, #24]
 8028640:	46a8      	mov	r8, r5
 8028642:	bfa8      	it	ge
 8028644:	f04f 0810 	movge.w	r8, #16
 8028648:	f7d7 ff66 	bl	8000518 <__aeabi_ui2d>
 802864c:	2d09      	cmp	r5, #9
 802864e:	4682      	mov	sl, r0
 8028650:	468b      	mov	fp, r1
 8028652:	dd13      	ble.n	802867c <_strtod_l+0x3dc>
 8028654:	4b7b      	ldr	r3, [pc, #492]	; (8028844 <_strtod_l+0x5a4>)
 8028656:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 802865a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 802865e:	f7d7 ffd5 	bl	800060c <__aeabi_dmul>
 8028662:	4682      	mov	sl, r0
 8028664:	4648      	mov	r0, r9
 8028666:	468b      	mov	fp, r1
 8028668:	f7d7 ff56 	bl	8000518 <__aeabi_ui2d>
 802866c:	4602      	mov	r2, r0
 802866e:	460b      	mov	r3, r1
 8028670:	4650      	mov	r0, sl
 8028672:	4659      	mov	r1, fp
 8028674:	f7d7 fe14 	bl	80002a0 <__adddf3>
 8028678:	4682      	mov	sl, r0
 802867a:	468b      	mov	fp, r1
 802867c:	2d0f      	cmp	r5, #15
 802867e:	dc38      	bgt.n	80286f2 <_strtod_l+0x452>
 8028680:	9b06      	ldr	r3, [sp, #24]
 8028682:	2b00      	cmp	r3, #0
 8028684:	f43f ae50 	beq.w	8028328 <_strtod_l+0x88>
 8028688:	dd24      	ble.n	80286d4 <_strtod_l+0x434>
 802868a:	2b16      	cmp	r3, #22
 802868c:	dc0b      	bgt.n	80286a6 <_strtod_l+0x406>
 802868e:	496d      	ldr	r1, [pc, #436]	; (8028844 <_strtod_l+0x5a4>)
 8028690:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8028694:	e9d1 0100 	ldrd	r0, r1, [r1]
 8028698:	4652      	mov	r2, sl
 802869a:	465b      	mov	r3, fp
 802869c:	f7d7 ffb6 	bl	800060c <__aeabi_dmul>
 80286a0:	4682      	mov	sl, r0
 80286a2:	468b      	mov	fp, r1
 80286a4:	e640      	b.n	8028328 <_strtod_l+0x88>
 80286a6:	9a06      	ldr	r2, [sp, #24]
 80286a8:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 80286ac:	4293      	cmp	r3, r2
 80286ae:	db20      	blt.n	80286f2 <_strtod_l+0x452>
 80286b0:	4c64      	ldr	r4, [pc, #400]	; (8028844 <_strtod_l+0x5a4>)
 80286b2:	f1c5 050f 	rsb	r5, r5, #15
 80286b6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80286ba:	4652      	mov	r2, sl
 80286bc:	465b      	mov	r3, fp
 80286be:	e9d1 0100 	ldrd	r0, r1, [r1]
 80286c2:	f7d7 ffa3 	bl	800060c <__aeabi_dmul>
 80286c6:	9b06      	ldr	r3, [sp, #24]
 80286c8:	1b5d      	subs	r5, r3, r5
 80286ca:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80286ce:	e9d4 2300 	ldrd	r2, r3, [r4]
 80286d2:	e7e3      	b.n	802869c <_strtod_l+0x3fc>
 80286d4:	9b06      	ldr	r3, [sp, #24]
 80286d6:	3316      	adds	r3, #22
 80286d8:	db0b      	blt.n	80286f2 <_strtod_l+0x452>
 80286da:	9b05      	ldr	r3, [sp, #20]
 80286dc:	1b9e      	subs	r6, r3, r6
 80286de:	4b59      	ldr	r3, [pc, #356]	; (8028844 <_strtod_l+0x5a4>)
 80286e0:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 80286e4:	e9d6 2300 	ldrd	r2, r3, [r6]
 80286e8:	4650      	mov	r0, sl
 80286ea:	4659      	mov	r1, fp
 80286ec:	f7d8 f8b8 	bl	8000860 <__aeabi_ddiv>
 80286f0:	e7d6      	b.n	80286a0 <_strtod_l+0x400>
 80286f2:	9b06      	ldr	r3, [sp, #24]
 80286f4:	eba5 0808 	sub.w	r8, r5, r8
 80286f8:	4498      	add	r8, r3
 80286fa:	f1b8 0f00 	cmp.w	r8, #0
 80286fe:	dd74      	ble.n	80287ea <_strtod_l+0x54a>
 8028700:	f018 030f 	ands.w	r3, r8, #15
 8028704:	d00a      	beq.n	802871c <_strtod_l+0x47c>
 8028706:	494f      	ldr	r1, [pc, #316]	; (8028844 <_strtod_l+0x5a4>)
 8028708:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 802870c:	4652      	mov	r2, sl
 802870e:	465b      	mov	r3, fp
 8028710:	e9d1 0100 	ldrd	r0, r1, [r1]
 8028714:	f7d7 ff7a 	bl	800060c <__aeabi_dmul>
 8028718:	4682      	mov	sl, r0
 802871a:	468b      	mov	fp, r1
 802871c:	f038 080f 	bics.w	r8, r8, #15
 8028720:	d04f      	beq.n	80287c2 <_strtod_l+0x522>
 8028722:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8028726:	dd22      	ble.n	802876e <_strtod_l+0x4ce>
 8028728:	2500      	movs	r5, #0
 802872a:	462e      	mov	r6, r5
 802872c:	9507      	str	r5, [sp, #28]
 802872e:	9505      	str	r5, [sp, #20]
 8028730:	2322      	movs	r3, #34	; 0x22
 8028732:	f8df b118 	ldr.w	fp, [pc, #280]	; 802884c <_strtod_l+0x5ac>
 8028736:	6023      	str	r3, [r4, #0]
 8028738:	f04f 0a00 	mov.w	sl, #0
 802873c:	9b07      	ldr	r3, [sp, #28]
 802873e:	2b00      	cmp	r3, #0
 8028740:	f43f adf2 	beq.w	8028328 <_strtod_l+0x88>
 8028744:	9918      	ldr	r1, [sp, #96]	; 0x60
 8028746:	4620      	mov	r0, r4
 8028748:	f003 fcec 	bl	802c124 <_Bfree>
 802874c:	9905      	ldr	r1, [sp, #20]
 802874e:	4620      	mov	r0, r4
 8028750:	f003 fce8 	bl	802c124 <_Bfree>
 8028754:	4631      	mov	r1, r6
 8028756:	4620      	mov	r0, r4
 8028758:	f003 fce4 	bl	802c124 <_Bfree>
 802875c:	9907      	ldr	r1, [sp, #28]
 802875e:	4620      	mov	r0, r4
 8028760:	f003 fce0 	bl	802c124 <_Bfree>
 8028764:	4629      	mov	r1, r5
 8028766:	4620      	mov	r0, r4
 8028768:	f003 fcdc 	bl	802c124 <_Bfree>
 802876c:	e5dc      	b.n	8028328 <_strtod_l+0x88>
 802876e:	4b36      	ldr	r3, [pc, #216]	; (8028848 <_strtod_l+0x5a8>)
 8028770:	9304      	str	r3, [sp, #16]
 8028772:	2300      	movs	r3, #0
 8028774:	ea4f 1828 	mov.w	r8, r8, asr #4
 8028778:	4650      	mov	r0, sl
 802877a:	4659      	mov	r1, fp
 802877c:	4699      	mov	r9, r3
 802877e:	f1b8 0f01 	cmp.w	r8, #1
 8028782:	dc21      	bgt.n	80287c8 <_strtod_l+0x528>
 8028784:	b10b      	cbz	r3, 802878a <_strtod_l+0x4ea>
 8028786:	4682      	mov	sl, r0
 8028788:	468b      	mov	fp, r1
 802878a:	4b2f      	ldr	r3, [pc, #188]	; (8028848 <_strtod_l+0x5a8>)
 802878c:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8028790:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8028794:	4652      	mov	r2, sl
 8028796:	465b      	mov	r3, fp
 8028798:	e9d9 0100 	ldrd	r0, r1, [r9]
 802879c:	f7d7 ff36 	bl	800060c <__aeabi_dmul>
 80287a0:	4b2a      	ldr	r3, [pc, #168]	; (802884c <_strtod_l+0x5ac>)
 80287a2:	460a      	mov	r2, r1
 80287a4:	400b      	ands	r3, r1
 80287a6:	492a      	ldr	r1, [pc, #168]	; (8028850 <_strtod_l+0x5b0>)
 80287a8:	428b      	cmp	r3, r1
 80287aa:	4682      	mov	sl, r0
 80287ac:	d8bc      	bhi.n	8028728 <_strtod_l+0x488>
 80287ae:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80287b2:	428b      	cmp	r3, r1
 80287b4:	bf86      	itte	hi
 80287b6:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 8028854 <_strtod_l+0x5b4>
 80287ba:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
 80287be:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 80287c2:	2300      	movs	r3, #0
 80287c4:	9304      	str	r3, [sp, #16]
 80287c6:	e084      	b.n	80288d2 <_strtod_l+0x632>
 80287c8:	f018 0f01 	tst.w	r8, #1
 80287cc:	d005      	beq.n	80287da <_strtod_l+0x53a>
 80287ce:	9b04      	ldr	r3, [sp, #16]
 80287d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80287d4:	f7d7 ff1a 	bl	800060c <__aeabi_dmul>
 80287d8:	2301      	movs	r3, #1
 80287da:	9a04      	ldr	r2, [sp, #16]
 80287dc:	3208      	adds	r2, #8
 80287de:	f109 0901 	add.w	r9, r9, #1
 80287e2:	ea4f 0868 	mov.w	r8, r8, asr #1
 80287e6:	9204      	str	r2, [sp, #16]
 80287e8:	e7c9      	b.n	802877e <_strtod_l+0x4de>
 80287ea:	d0ea      	beq.n	80287c2 <_strtod_l+0x522>
 80287ec:	f1c8 0800 	rsb	r8, r8, #0
 80287f0:	f018 020f 	ands.w	r2, r8, #15
 80287f4:	d00a      	beq.n	802880c <_strtod_l+0x56c>
 80287f6:	4b13      	ldr	r3, [pc, #76]	; (8028844 <_strtod_l+0x5a4>)
 80287f8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80287fc:	4650      	mov	r0, sl
 80287fe:	4659      	mov	r1, fp
 8028800:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028804:	f7d8 f82c 	bl	8000860 <__aeabi_ddiv>
 8028808:	4682      	mov	sl, r0
 802880a:	468b      	mov	fp, r1
 802880c:	ea5f 1828 	movs.w	r8, r8, asr #4
 8028810:	d0d7      	beq.n	80287c2 <_strtod_l+0x522>
 8028812:	f1b8 0f1f 	cmp.w	r8, #31
 8028816:	dd1f      	ble.n	8028858 <_strtod_l+0x5b8>
 8028818:	2500      	movs	r5, #0
 802881a:	462e      	mov	r6, r5
 802881c:	9507      	str	r5, [sp, #28]
 802881e:	9505      	str	r5, [sp, #20]
 8028820:	2322      	movs	r3, #34	; 0x22
 8028822:	f04f 0a00 	mov.w	sl, #0
 8028826:	f04f 0b00 	mov.w	fp, #0
 802882a:	6023      	str	r3, [r4, #0]
 802882c:	e786      	b.n	802873c <_strtod_l+0x49c>
 802882e:	bf00      	nop
 8028830:	08031ad6 	.word	0x08031ad6
 8028834:	080328b0 	.word	0x080328b0
 8028838:	08032189 	.word	0x08032189
 802883c:	08032cbd 	.word	0x08032cbd
 8028840:	08032cb9 	.word	0x08032cb9
 8028844:	08032e28 	.word	0x08032e28
 8028848:	08032e00 	.word	0x08032e00
 802884c:	7ff00000 	.word	0x7ff00000
 8028850:	7ca00000 	.word	0x7ca00000
 8028854:	7fefffff 	.word	0x7fefffff
 8028858:	f018 0310 	ands.w	r3, r8, #16
 802885c:	bf18      	it	ne
 802885e:	236a      	movne	r3, #106	; 0x6a
 8028860:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 8028c10 <_strtod_l+0x970>
 8028864:	9304      	str	r3, [sp, #16]
 8028866:	4650      	mov	r0, sl
 8028868:	4659      	mov	r1, fp
 802886a:	2300      	movs	r3, #0
 802886c:	f018 0f01 	tst.w	r8, #1
 8028870:	d004      	beq.n	802887c <_strtod_l+0x5dc>
 8028872:	e9d9 2300 	ldrd	r2, r3, [r9]
 8028876:	f7d7 fec9 	bl	800060c <__aeabi_dmul>
 802887a:	2301      	movs	r3, #1
 802887c:	ea5f 0868 	movs.w	r8, r8, asr #1
 8028880:	f109 0908 	add.w	r9, r9, #8
 8028884:	d1f2      	bne.n	802886c <_strtod_l+0x5cc>
 8028886:	b10b      	cbz	r3, 802888c <_strtod_l+0x5ec>
 8028888:	4682      	mov	sl, r0
 802888a:	468b      	mov	fp, r1
 802888c:	9b04      	ldr	r3, [sp, #16]
 802888e:	b1c3      	cbz	r3, 80288c2 <_strtod_l+0x622>
 8028890:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8028894:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8028898:	2b00      	cmp	r3, #0
 802889a:	4659      	mov	r1, fp
 802889c:	dd11      	ble.n	80288c2 <_strtod_l+0x622>
 802889e:	2b1f      	cmp	r3, #31
 80288a0:	f340 8124 	ble.w	8028aec <_strtod_l+0x84c>
 80288a4:	2b34      	cmp	r3, #52	; 0x34
 80288a6:	bfde      	ittt	le
 80288a8:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 80288ac:	f04f 33ff 	movle.w	r3, #4294967295	; 0xffffffff
 80288b0:	fa03 f202 	lslle.w	r2, r3, r2
 80288b4:	f04f 0a00 	mov.w	sl, #0
 80288b8:	bfcc      	ite	gt
 80288ba:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 80288be:	ea02 0b01 	andle.w	fp, r2, r1
 80288c2:	2200      	movs	r2, #0
 80288c4:	2300      	movs	r3, #0
 80288c6:	4650      	mov	r0, sl
 80288c8:	4659      	mov	r1, fp
 80288ca:	f7d8 f907 	bl	8000adc <__aeabi_dcmpeq>
 80288ce:	2800      	cmp	r0, #0
 80288d0:	d1a2      	bne.n	8028818 <_strtod_l+0x578>
 80288d2:	9b07      	ldr	r3, [sp, #28]
 80288d4:	9300      	str	r3, [sp, #0]
 80288d6:	9908      	ldr	r1, [sp, #32]
 80288d8:	462b      	mov	r3, r5
 80288da:	463a      	mov	r2, r7
 80288dc:	4620      	mov	r0, r4
 80288de:	f003 fc89 	bl	802c1f4 <__s2b>
 80288e2:	9007      	str	r0, [sp, #28]
 80288e4:	2800      	cmp	r0, #0
 80288e6:	f43f af1f 	beq.w	8028728 <_strtod_l+0x488>
 80288ea:	9b05      	ldr	r3, [sp, #20]
 80288ec:	1b9e      	subs	r6, r3, r6
 80288ee:	9b06      	ldr	r3, [sp, #24]
 80288f0:	2b00      	cmp	r3, #0
 80288f2:	bfb4      	ite	lt
 80288f4:	4633      	movlt	r3, r6
 80288f6:	2300      	movge	r3, #0
 80288f8:	930c      	str	r3, [sp, #48]	; 0x30
 80288fa:	9b06      	ldr	r3, [sp, #24]
 80288fc:	2500      	movs	r5, #0
 80288fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8028902:	9312      	str	r3, [sp, #72]	; 0x48
 8028904:	462e      	mov	r6, r5
 8028906:	9b07      	ldr	r3, [sp, #28]
 8028908:	4620      	mov	r0, r4
 802890a:	6859      	ldr	r1, [r3, #4]
 802890c:	f003 fbca 	bl	802c0a4 <_Balloc>
 8028910:	9005      	str	r0, [sp, #20]
 8028912:	2800      	cmp	r0, #0
 8028914:	f43f af0c 	beq.w	8028730 <_strtod_l+0x490>
 8028918:	9b07      	ldr	r3, [sp, #28]
 802891a:	691a      	ldr	r2, [r3, #16]
 802891c:	3202      	adds	r2, #2
 802891e:	f103 010c 	add.w	r1, r3, #12
 8028922:	0092      	lsls	r2, r2, #2
 8028924:	300c      	adds	r0, #12
 8028926:	f7fd faeb 	bl	8025f00 <memcpy>
 802892a:	ec4b ab10 	vmov	d0, sl, fp
 802892e:	aa1a      	add	r2, sp, #104	; 0x68
 8028930:	a919      	add	r1, sp, #100	; 0x64
 8028932:	4620      	mov	r0, r4
 8028934:	f003 ffa4 	bl	802c880 <__d2b>
 8028938:	ec4b ab18 	vmov	d8, sl, fp
 802893c:	9018      	str	r0, [sp, #96]	; 0x60
 802893e:	2800      	cmp	r0, #0
 8028940:	f43f aef6 	beq.w	8028730 <_strtod_l+0x490>
 8028944:	2101      	movs	r1, #1
 8028946:	4620      	mov	r0, r4
 8028948:	f003 fcee 	bl	802c328 <__i2b>
 802894c:	4606      	mov	r6, r0
 802894e:	2800      	cmp	r0, #0
 8028950:	f43f aeee 	beq.w	8028730 <_strtod_l+0x490>
 8028954:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8028956:	9904      	ldr	r1, [sp, #16]
 8028958:	2b00      	cmp	r3, #0
 802895a:	bfab      	itete	ge
 802895c:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 802895e:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 8028960:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 8028962:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 8028966:	bfac      	ite	ge
 8028968:	eb03 0902 	addge.w	r9, r3, r2
 802896c:	1ad7      	sublt	r7, r2, r3
 802896e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8028970:	eba3 0801 	sub.w	r8, r3, r1
 8028974:	4490      	add	r8, r2
 8028976:	4ba1      	ldr	r3, [pc, #644]	; (8028bfc <_strtod_l+0x95c>)
 8028978:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 802897c:	4598      	cmp	r8, r3
 802897e:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8028982:	f280 80c7 	bge.w	8028b14 <_strtod_l+0x874>
 8028986:	eba3 0308 	sub.w	r3, r3, r8
 802898a:	2b1f      	cmp	r3, #31
 802898c:	eba2 0203 	sub.w	r2, r2, r3
 8028990:	f04f 0101 	mov.w	r1, #1
 8028994:	f300 80b1 	bgt.w	8028afa <_strtod_l+0x85a>
 8028998:	fa01 f303 	lsl.w	r3, r1, r3
 802899c:	930d      	str	r3, [sp, #52]	; 0x34
 802899e:	2300      	movs	r3, #0
 80289a0:	9308      	str	r3, [sp, #32]
 80289a2:	eb09 0802 	add.w	r8, r9, r2
 80289a6:	9b04      	ldr	r3, [sp, #16]
 80289a8:	45c1      	cmp	r9, r8
 80289aa:	4417      	add	r7, r2
 80289ac:	441f      	add	r7, r3
 80289ae:	464b      	mov	r3, r9
 80289b0:	bfa8      	it	ge
 80289b2:	4643      	movge	r3, r8
 80289b4:	42bb      	cmp	r3, r7
 80289b6:	bfa8      	it	ge
 80289b8:	463b      	movge	r3, r7
 80289ba:	2b00      	cmp	r3, #0
 80289bc:	bfc2      	ittt	gt
 80289be:	eba8 0803 	subgt.w	r8, r8, r3
 80289c2:	1aff      	subgt	r7, r7, r3
 80289c4:	eba9 0903 	subgt.w	r9, r9, r3
 80289c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80289ca:	2b00      	cmp	r3, #0
 80289cc:	dd17      	ble.n	80289fe <_strtod_l+0x75e>
 80289ce:	4631      	mov	r1, r6
 80289d0:	461a      	mov	r2, r3
 80289d2:	4620      	mov	r0, r4
 80289d4:	f003 fd68 	bl	802c4a8 <__pow5mult>
 80289d8:	4606      	mov	r6, r0
 80289da:	2800      	cmp	r0, #0
 80289dc:	f43f aea8 	beq.w	8028730 <_strtod_l+0x490>
 80289e0:	4601      	mov	r1, r0
 80289e2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80289e4:	4620      	mov	r0, r4
 80289e6:	f003 fcb5 	bl	802c354 <__multiply>
 80289ea:	900b      	str	r0, [sp, #44]	; 0x2c
 80289ec:	2800      	cmp	r0, #0
 80289ee:	f43f ae9f 	beq.w	8028730 <_strtod_l+0x490>
 80289f2:	9918      	ldr	r1, [sp, #96]	; 0x60
 80289f4:	4620      	mov	r0, r4
 80289f6:	f003 fb95 	bl	802c124 <_Bfree>
 80289fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80289fc:	9318      	str	r3, [sp, #96]	; 0x60
 80289fe:	f1b8 0f00 	cmp.w	r8, #0
 8028a02:	f300 808c 	bgt.w	8028b1e <_strtod_l+0x87e>
 8028a06:	9b06      	ldr	r3, [sp, #24]
 8028a08:	2b00      	cmp	r3, #0
 8028a0a:	dd08      	ble.n	8028a1e <_strtod_l+0x77e>
 8028a0c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8028a0e:	9905      	ldr	r1, [sp, #20]
 8028a10:	4620      	mov	r0, r4
 8028a12:	f003 fd49 	bl	802c4a8 <__pow5mult>
 8028a16:	9005      	str	r0, [sp, #20]
 8028a18:	2800      	cmp	r0, #0
 8028a1a:	f43f ae89 	beq.w	8028730 <_strtod_l+0x490>
 8028a1e:	2f00      	cmp	r7, #0
 8028a20:	dd08      	ble.n	8028a34 <_strtod_l+0x794>
 8028a22:	9905      	ldr	r1, [sp, #20]
 8028a24:	463a      	mov	r2, r7
 8028a26:	4620      	mov	r0, r4
 8028a28:	f003 fd98 	bl	802c55c <__lshift>
 8028a2c:	9005      	str	r0, [sp, #20]
 8028a2e:	2800      	cmp	r0, #0
 8028a30:	f43f ae7e 	beq.w	8028730 <_strtod_l+0x490>
 8028a34:	f1b9 0f00 	cmp.w	r9, #0
 8028a38:	dd08      	ble.n	8028a4c <_strtod_l+0x7ac>
 8028a3a:	4631      	mov	r1, r6
 8028a3c:	464a      	mov	r2, r9
 8028a3e:	4620      	mov	r0, r4
 8028a40:	f003 fd8c 	bl	802c55c <__lshift>
 8028a44:	4606      	mov	r6, r0
 8028a46:	2800      	cmp	r0, #0
 8028a48:	f43f ae72 	beq.w	8028730 <_strtod_l+0x490>
 8028a4c:	9a05      	ldr	r2, [sp, #20]
 8028a4e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8028a50:	4620      	mov	r0, r4
 8028a52:	f003 fe0f 	bl	802c674 <__mdiff>
 8028a56:	4605      	mov	r5, r0
 8028a58:	2800      	cmp	r0, #0
 8028a5a:	f43f ae69 	beq.w	8028730 <_strtod_l+0x490>
 8028a5e:	68c3      	ldr	r3, [r0, #12]
 8028a60:	930b      	str	r3, [sp, #44]	; 0x2c
 8028a62:	2300      	movs	r3, #0
 8028a64:	60c3      	str	r3, [r0, #12]
 8028a66:	4631      	mov	r1, r6
 8028a68:	f003 fde8 	bl	802c63c <__mcmp>
 8028a6c:	2800      	cmp	r0, #0
 8028a6e:	da60      	bge.n	8028b32 <_strtod_l+0x892>
 8028a70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8028a72:	ea53 030a 	orrs.w	r3, r3, sl
 8028a76:	f040 8082 	bne.w	8028b7e <_strtod_l+0x8de>
 8028a7a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8028a7e:	2b00      	cmp	r3, #0
 8028a80:	d17d      	bne.n	8028b7e <_strtod_l+0x8de>
 8028a82:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8028a86:	0d1b      	lsrs	r3, r3, #20
 8028a88:	051b      	lsls	r3, r3, #20
 8028a8a:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8028a8e:	d976      	bls.n	8028b7e <_strtod_l+0x8de>
 8028a90:	696b      	ldr	r3, [r5, #20]
 8028a92:	b913      	cbnz	r3, 8028a9a <_strtod_l+0x7fa>
 8028a94:	692b      	ldr	r3, [r5, #16]
 8028a96:	2b01      	cmp	r3, #1
 8028a98:	dd71      	ble.n	8028b7e <_strtod_l+0x8de>
 8028a9a:	4629      	mov	r1, r5
 8028a9c:	2201      	movs	r2, #1
 8028a9e:	4620      	mov	r0, r4
 8028aa0:	f003 fd5c 	bl	802c55c <__lshift>
 8028aa4:	4631      	mov	r1, r6
 8028aa6:	4605      	mov	r5, r0
 8028aa8:	f003 fdc8 	bl	802c63c <__mcmp>
 8028aac:	2800      	cmp	r0, #0
 8028aae:	dd66      	ble.n	8028b7e <_strtod_l+0x8de>
 8028ab0:	9904      	ldr	r1, [sp, #16]
 8028ab2:	4a53      	ldr	r2, [pc, #332]	; (8028c00 <_strtod_l+0x960>)
 8028ab4:	465b      	mov	r3, fp
 8028ab6:	2900      	cmp	r1, #0
 8028ab8:	f000 8081 	beq.w	8028bbe <_strtod_l+0x91e>
 8028abc:	ea02 010b 	and.w	r1, r2, fp
 8028ac0:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8028ac4:	dc7b      	bgt.n	8028bbe <_strtod_l+0x91e>
 8028ac6:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8028aca:	f77f aea9 	ble.w	8028820 <_strtod_l+0x580>
 8028ace:	4b4d      	ldr	r3, [pc, #308]	; (8028c04 <_strtod_l+0x964>)
 8028ad0:	4650      	mov	r0, sl
 8028ad2:	4659      	mov	r1, fp
 8028ad4:	2200      	movs	r2, #0
 8028ad6:	f7d7 fd99 	bl	800060c <__aeabi_dmul>
 8028ada:	460b      	mov	r3, r1
 8028adc:	4303      	orrs	r3, r0
 8028ade:	bf08      	it	eq
 8028ae0:	2322      	moveq	r3, #34	; 0x22
 8028ae2:	4682      	mov	sl, r0
 8028ae4:	468b      	mov	fp, r1
 8028ae6:	bf08      	it	eq
 8028ae8:	6023      	streq	r3, [r4, #0]
 8028aea:	e62b      	b.n	8028744 <_strtod_l+0x4a4>
 8028aec:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8028af0:	fa02 f303 	lsl.w	r3, r2, r3
 8028af4:	ea03 0a0a 	and.w	sl, r3, sl
 8028af8:	e6e3      	b.n	80288c2 <_strtod_l+0x622>
 8028afa:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 8028afe:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8028b02:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8028b06:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 8028b0a:	fa01 f308 	lsl.w	r3, r1, r8
 8028b0e:	9308      	str	r3, [sp, #32]
 8028b10:	910d      	str	r1, [sp, #52]	; 0x34
 8028b12:	e746      	b.n	80289a2 <_strtod_l+0x702>
 8028b14:	2300      	movs	r3, #0
 8028b16:	9308      	str	r3, [sp, #32]
 8028b18:	2301      	movs	r3, #1
 8028b1a:	930d      	str	r3, [sp, #52]	; 0x34
 8028b1c:	e741      	b.n	80289a2 <_strtod_l+0x702>
 8028b1e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8028b20:	4642      	mov	r2, r8
 8028b22:	4620      	mov	r0, r4
 8028b24:	f003 fd1a 	bl	802c55c <__lshift>
 8028b28:	9018      	str	r0, [sp, #96]	; 0x60
 8028b2a:	2800      	cmp	r0, #0
 8028b2c:	f47f af6b 	bne.w	8028a06 <_strtod_l+0x766>
 8028b30:	e5fe      	b.n	8028730 <_strtod_l+0x490>
 8028b32:	465f      	mov	r7, fp
 8028b34:	d16e      	bne.n	8028c14 <_strtod_l+0x974>
 8028b36:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8028b38:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8028b3c:	b342      	cbz	r2, 8028b90 <_strtod_l+0x8f0>
 8028b3e:	4a32      	ldr	r2, [pc, #200]	; (8028c08 <_strtod_l+0x968>)
 8028b40:	4293      	cmp	r3, r2
 8028b42:	d128      	bne.n	8028b96 <_strtod_l+0x8f6>
 8028b44:	9b04      	ldr	r3, [sp, #16]
 8028b46:	4651      	mov	r1, sl
 8028b48:	b1eb      	cbz	r3, 8028b86 <_strtod_l+0x8e6>
 8028b4a:	4b2d      	ldr	r3, [pc, #180]	; (8028c00 <_strtod_l+0x960>)
 8028b4c:	403b      	ands	r3, r7
 8028b4e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8028b52:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8028b56:	d819      	bhi.n	8028b8c <_strtod_l+0x8ec>
 8028b58:	0d1b      	lsrs	r3, r3, #20
 8028b5a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8028b5e:	fa02 f303 	lsl.w	r3, r2, r3
 8028b62:	4299      	cmp	r1, r3
 8028b64:	d117      	bne.n	8028b96 <_strtod_l+0x8f6>
 8028b66:	4b29      	ldr	r3, [pc, #164]	; (8028c0c <_strtod_l+0x96c>)
 8028b68:	429f      	cmp	r7, r3
 8028b6a:	d102      	bne.n	8028b72 <_strtod_l+0x8d2>
 8028b6c:	3101      	adds	r1, #1
 8028b6e:	f43f addf 	beq.w	8028730 <_strtod_l+0x490>
 8028b72:	4b23      	ldr	r3, [pc, #140]	; (8028c00 <_strtod_l+0x960>)
 8028b74:	403b      	ands	r3, r7
 8028b76:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 8028b7a:	f04f 0a00 	mov.w	sl, #0
 8028b7e:	9b04      	ldr	r3, [sp, #16]
 8028b80:	2b00      	cmp	r3, #0
 8028b82:	d1a4      	bne.n	8028ace <_strtod_l+0x82e>
 8028b84:	e5de      	b.n	8028744 <_strtod_l+0x4a4>
 8028b86:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8028b8a:	e7ea      	b.n	8028b62 <_strtod_l+0x8c2>
 8028b8c:	4613      	mov	r3, r2
 8028b8e:	e7e8      	b.n	8028b62 <_strtod_l+0x8c2>
 8028b90:	ea53 030a 	orrs.w	r3, r3, sl
 8028b94:	d08c      	beq.n	8028ab0 <_strtod_l+0x810>
 8028b96:	9b08      	ldr	r3, [sp, #32]
 8028b98:	b1db      	cbz	r3, 8028bd2 <_strtod_l+0x932>
 8028b9a:	423b      	tst	r3, r7
 8028b9c:	d0ef      	beq.n	8028b7e <_strtod_l+0x8de>
 8028b9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8028ba0:	9a04      	ldr	r2, [sp, #16]
 8028ba2:	4650      	mov	r0, sl
 8028ba4:	4659      	mov	r1, fp
 8028ba6:	b1c3      	cbz	r3, 8028bda <_strtod_l+0x93a>
 8028ba8:	f7ff fb5e 	bl	8028268 <sulp>
 8028bac:	4602      	mov	r2, r0
 8028bae:	460b      	mov	r3, r1
 8028bb0:	ec51 0b18 	vmov	r0, r1, d8
 8028bb4:	f7d7 fb74 	bl	80002a0 <__adddf3>
 8028bb8:	4682      	mov	sl, r0
 8028bba:	468b      	mov	fp, r1
 8028bbc:	e7df      	b.n	8028b7e <_strtod_l+0x8de>
 8028bbe:	4013      	ands	r3, r2
 8028bc0:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8028bc4:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8028bc8:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8028bcc:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8028bd0:	e7d5      	b.n	8028b7e <_strtod_l+0x8de>
 8028bd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028bd4:	ea13 0f0a 	tst.w	r3, sl
 8028bd8:	e7e0      	b.n	8028b9c <_strtod_l+0x8fc>
 8028bda:	f7ff fb45 	bl	8028268 <sulp>
 8028bde:	4602      	mov	r2, r0
 8028be0:	460b      	mov	r3, r1
 8028be2:	ec51 0b18 	vmov	r0, r1, d8
 8028be6:	f7d7 fb59 	bl	800029c <__aeabi_dsub>
 8028bea:	2200      	movs	r2, #0
 8028bec:	2300      	movs	r3, #0
 8028bee:	4682      	mov	sl, r0
 8028bf0:	468b      	mov	fp, r1
 8028bf2:	f7d7 ff73 	bl	8000adc <__aeabi_dcmpeq>
 8028bf6:	2800      	cmp	r0, #0
 8028bf8:	d0c1      	beq.n	8028b7e <_strtod_l+0x8de>
 8028bfa:	e611      	b.n	8028820 <_strtod_l+0x580>
 8028bfc:	fffffc02 	.word	0xfffffc02
 8028c00:	7ff00000 	.word	0x7ff00000
 8028c04:	39500000 	.word	0x39500000
 8028c08:	000fffff 	.word	0x000fffff
 8028c0c:	7fefffff 	.word	0x7fefffff
 8028c10:	080328c8 	.word	0x080328c8
 8028c14:	4631      	mov	r1, r6
 8028c16:	4628      	mov	r0, r5
 8028c18:	f003 fe8e 	bl	802c938 <__ratio>
 8028c1c:	ec59 8b10 	vmov	r8, r9, d0
 8028c20:	ee10 0a10 	vmov	r0, s0
 8028c24:	2200      	movs	r2, #0
 8028c26:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8028c2a:	4649      	mov	r1, r9
 8028c2c:	f7d7 ff6a 	bl	8000b04 <__aeabi_dcmple>
 8028c30:	2800      	cmp	r0, #0
 8028c32:	d07a      	beq.n	8028d2a <_strtod_l+0xa8a>
 8028c34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8028c36:	2b00      	cmp	r3, #0
 8028c38:	d04a      	beq.n	8028cd0 <_strtod_l+0xa30>
 8028c3a:	4b95      	ldr	r3, [pc, #596]	; (8028e90 <_strtod_l+0xbf0>)
 8028c3c:	2200      	movs	r2, #0
 8028c3e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8028c42:	f8df 924c 	ldr.w	r9, [pc, #588]	; 8028e90 <_strtod_l+0xbf0>
 8028c46:	f04f 0800 	mov.w	r8, #0
 8028c4a:	4b92      	ldr	r3, [pc, #584]	; (8028e94 <_strtod_l+0xbf4>)
 8028c4c:	403b      	ands	r3, r7
 8028c4e:	930d      	str	r3, [sp, #52]	; 0x34
 8028c50:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8028c52:	4b91      	ldr	r3, [pc, #580]	; (8028e98 <_strtod_l+0xbf8>)
 8028c54:	429a      	cmp	r2, r3
 8028c56:	f040 80b0 	bne.w	8028dba <_strtod_l+0xb1a>
 8028c5a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8028c5e:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 8028c62:	ec4b ab10 	vmov	d0, sl, fp
 8028c66:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8028c6a:	f003 fd8d 	bl	802c788 <__ulp>
 8028c6e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8028c72:	ec53 2b10 	vmov	r2, r3, d0
 8028c76:	f7d7 fcc9 	bl	800060c <__aeabi_dmul>
 8028c7a:	4652      	mov	r2, sl
 8028c7c:	465b      	mov	r3, fp
 8028c7e:	f7d7 fb0f 	bl	80002a0 <__adddf3>
 8028c82:	460b      	mov	r3, r1
 8028c84:	4983      	ldr	r1, [pc, #524]	; (8028e94 <_strtod_l+0xbf4>)
 8028c86:	4a85      	ldr	r2, [pc, #532]	; (8028e9c <_strtod_l+0xbfc>)
 8028c88:	4019      	ands	r1, r3
 8028c8a:	4291      	cmp	r1, r2
 8028c8c:	4682      	mov	sl, r0
 8028c8e:	d960      	bls.n	8028d52 <_strtod_l+0xab2>
 8028c90:	ee18 3a90 	vmov	r3, s17
 8028c94:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8028c98:	4293      	cmp	r3, r2
 8028c9a:	d104      	bne.n	8028ca6 <_strtod_l+0xa06>
 8028c9c:	ee18 3a10 	vmov	r3, s16
 8028ca0:	3301      	adds	r3, #1
 8028ca2:	f43f ad45 	beq.w	8028730 <_strtod_l+0x490>
 8028ca6:	f8df b200 	ldr.w	fp, [pc, #512]	; 8028ea8 <_strtod_l+0xc08>
 8028caa:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8028cae:	9918      	ldr	r1, [sp, #96]	; 0x60
 8028cb0:	4620      	mov	r0, r4
 8028cb2:	f003 fa37 	bl	802c124 <_Bfree>
 8028cb6:	9905      	ldr	r1, [sp, #20]
 8028cb8:	4620      	mov	r0, r4
 8028cba:	f003 fa33 	bl	802c124 <_Bfree>
 8028cbe:	4631      	mov	r1, r6
 8028cc0:	4620      	mov	r0, r4
 8028cc2:	f003 fa2f 	bl	802c124 <_Bfree>
 8028cc6:	4629      	mov	r1, r5
 8028cc8:	4620      	mov	r0, r4
 8028cca:	f003 fa2b 	bl	802c124 <_Bfree>
 8028cce:	e61a      	b.n	8028906 <_strtod_l+0x666>
 8028cd0:	f1ba 0f00 	cmp.w	sl, #0
 8028cd4:	d11b      	bne.n	8028d0e <_strtod_l+0xa6e>
 8028cd6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8028cda:	b9f3      	cbnz	r3, 8028d1a <_strtod_l+0xa7a>
 8028cdc:	4b6c      	ldr	r3, [pc, #432]	; (8028e90 <_strtod_l+0xbf0>)
 8028cde:	2200      	movs	r2, #0
 8028ce0:	4640      	mov	r0, r8
 8028ce2:	4649      	mov	r1, r9
 8028ce4:	f7d7 ff04 	bl	8000af0 <__aeabi_dcmplt>
 8028ce8:	b9d0      	cbnz	r0, 8028d20 <_strtod_l+0xa80>
 8028cea:	4640      	mov	r0, r8
 8028cec:	4649      	mov	r1, r9
 8028cee:	4b6c      	ldr	r3, [pc, #432]	; (8028ea0 <_strtod_l+0xc00>)
 8028cf0:	2200      	movs	r2, #0
 8028cf2:	f7d7 fc8b 	bl	800060c <__aeabi_dmul>
 8028cf6:	4680      	mov	r8, r0
 8028cf8:	4689      	mov	r9, r1
 8028cfa:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8028cfe:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 8028d02:	9315      	str	r3, [sp, #84]	; 0x54
 8028d04:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8028d08:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8028d0c:	e79d      	b.n	8028c4a <_strtod_l+0x9aa>
 8028d0e:	f1ba 0f01 	cmp.w	sl, #1
 8028d12:	d102      	bne.n	8028d1a <_strtod_l+0xa7a>
 8028d14:	2f00      	cmp	r7, #0
 8028d16:	f43f ad83 	beq.w	8028820 <_strtod_l+0x580>
 8028d1a:	4b62      	ldr	r3, [pc, #392]	; (8028ea4 <_strtod_l+0xc04>)
 8028d1c:	2200      	movs	r2, #0
 8028d1e:	e78e      	b.n	8028c3e <_strtod_l+0x99e>
 8028d20:	f8df 917c 	ldr.w	r9, [pc, #380]	; 8028ea0 <_strtod_l+0xc00>
 8028d24:	f04f 0800 	mov.w	r8, #0
 8028d28:	e7e7      	b.n	8028cfa <_strtod_l+0xa5a>
 8028d2a:	4b5d      	ldr	r3, [pc, #372]	; (8028ea0 <_strtod_l+0xc00>)
 8028d2c:	4640      	mov	r0, r8
 8028d2e:	4649      	mov	r1, r9
 8028d30:	2200      	movs	r2, #0
 8028d32:	f7d7 fc6b 	bl	800060c <__aeabi_dmul>
 8028d36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8028d38:	4680      	mov	r8, r0
 8028d3a:	4689      	mov	r9, r1
 8028d3c:	b933      	cbnz	r3, 8028d4c <_strtod_l+0xaac>
 8028d3e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8028d42:	900e      	str	r0, [sp, #56]	; 0x38
 8028d44:	930f      	str	r3, [sp, #60]	; 0x3c
 8028d46:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8028d4a:	e7dd      	b.n	8028d08 <_strtod_l+0xa68>
 8028d4c:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 8028d50:	e7f9      	b.n	8028d46 <_strtod_l+0xaa6>
 8028d52:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 8028d56:	9b04      	ldr	r3, [sp, #16]
 8028d58:	2b00      	cmp	r3, #0
 8028d5a:	d1a8      	bne.n	8028cae <_strtod_l+0xa0e>
 8028d5c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8028d60:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8028d62:	0d1b      	lsrs	r3, r3, #20
 8028d64:	051b      	lsls	r3, r3, #20
 8028d66:	429a      	cmp	r2, r3
 8028d68:	d1a1      	bne.n	8028cae <_strtod_l+0xa0e>
 8028d6a:	4640      	mov	r0, r8
 8028d6c:	4649      	mov	r1, r9
 8028d6e:	f7d7 ffad 	bl	8000ccc <__aeabi_d2lz>
 8028d72:	f7d7 fc1d 	bl	80005b0 <__aeabi_l2d>
 8028d76:	4602      	mov	r2, r0
 8028d78:	460b      	mov	r3, r1
 8028d7a:	4640      	mov	r0, r8
 8028d7c:	4649      	mov	r1, r9
 8028d7e:	f7d7 fa8d 	bl	800029c <__aeabi_dsub>
 8028d82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8028d84:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8028d88:	ea43 030a 	orr.w	r3, r3, sl
 8028d8c:	4313      	orrs	r3, r2
 8028d8e:	4680      	mov	r8, r0
 8028d90:	4689      	mov	r9, r1
 8028d92:	d055      	beq.n	8028e40 <_strtod_l+0xba0>
 8028d94:	a336      	add	r3, pc, #216	; (adr r3, 8028e70 <_strtod_l+0xbd0>)
 8028d96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028d9a:	f7d7 fea9 	bl	8000af0 <__aeabi_dcmplt>
 8028d9e:	2800      	cmp	r0, #0
 8028da0:	f47f acd0 	bne.w	8028744 <_strtod_l+0x4a4>
 8028da4:	a334      	add	r3, pc, #208	; (adr r3, 8028e78 <_strtod_l+0xbd8>)
 8028da6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028daa:	4640      	mov	r0, r8
 8028dac:	4649      	mov	r1, r9
 8028dae:	f7d7 febd 	bl	8000b2c <__aeabi_dcmpgt>
 8028db2:	2800      	cmp	r0, #0
 8028db4:	f43f af7b 	beq.w	8028cae <_strtod_l+0xa0e>
 8028db8:	e4c4      	b.n	8028744 <_strtod_l+0x4a4>
 8028dba:	9b04      	ldr	r3, [sp, #16]
 8028dbc:	b333      	cbz	r3, 8028e0c <_strtod_l+0xb6c>
 8028dbe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028dc0:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8028dc4:	d822      	bhi.n	8028e0c <_strtod_l+0xb6c>
 8028dc6:	a32e      	add	r3, pc, #184	; (adr r3, 8028e80 <_strtod_l+0xbe0>)
 8028dc8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028dcc:	4640      	mov	r0, r8
 8028dce:	4649      	mov	r1, r9
 8028dd0:	f7d7 fe98 	bl	8000b04 <__aeabi_dcmple>
 8028dd4:	b1a0      	cbz	r0, 8028e00 <_strtod_l+0xb60>
 8028dd6:	4649      	mov	r1, r9
 8028dd8:	4640      	mov	r0, r8
 8028dda:	f7d7 feef 	bl	8000bbc <__aeabi_d2uiz>
 8028dde:	2801      	cmp	r0, #1
 8028de0:	bf38      	it	cc
 8028de2:	2001      	movcc	r0, #1
 8028de4:	f7d7 fb98 	bl	8000518 <__aeabi_ui2d>
 8028de8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8028dea:	4680      	mov	r8, r0
 8028dec:	4689      	mov	r9, r1
 8028dee:	bb23      	cbnz	r3, 8028e3a <_strtod_l+0xb9a>
 8028df0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8028df4:	9010      	str	r0, [sp, #64]	; 0x40
 8028df6:	9311      	str	r3, [sp, #68]	; 0x44
 8028df8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8028dfc:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8028e00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028e02:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8028e04:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8028e08:	1a9b      	subs	r3, r3, r2
 8028e0a:	9309      	str	r3, [sp, #36]	; 0x24
 8028e0c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8028e10:	eeb0 0a48 	vmov.f32	s0, s16
 8028e14:	eef0 0a68 	vmov.f32	s1, s17
 8028e18:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8028e1c:	f003 fcb4 	bl	802c788 <__ulp>
 8028e20:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8028e24:	ec53 2b10 	vmov	r2, r3, d0
 8028e28:	f7d7 fbf0 	bl	800060c <__aeabi_dmul>
 8028e2c:	ec53 2b18 	vmov	r2, r3, d8
 8028e30:	f7d7 fa36 	bl	80002a0 <__adddf3>
 8028e34:	4682      	mov	sl, r0
 8028e36:	468b      	mov	fp, r1
 8028e38:	e78d      	b.n	8028d56 <_strtod_l+0xab6>
 8028e3a:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 8028e3e:	e7db      	b.n	8028df8 <_strtod_l+0xb58>
 8028e40:	a311      	add	r3, pc, #68	; (adr r3, 8028e88 <_strtod_l+0xbe8>)
 8028e42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028e46:	f7d7 fe53 	bl	8000af0 <__aeabi_dcmplt>
 8028e4a:	e7b2      	b.n	8028db2 <_strtod_l+0xb12>
 8028e4c:	2300      	movs	r3, #0
 8028e4e:	930a      	str	r3, [sp, #40]	; 0x28
 8028e50:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8028e52:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8028e54:	6013      	str	r3, [r2, #0]
 8028e56:	f7ff ba6b 	b.w	8028330 <_strtod_l+0x90>
 8028e5a:	2a65      	cmp	r2, #101	; 0x65
 8028e5c:	f43f ab5f 	beq.w	802851e <_strtod_l+0x27e>
 8028e60:	2a45      	cmp	r2, #69	; 0x45
 8028e62:	f43f ab5c 	beq.w	802851e <_strtod_l+0x27e>
 8028e66:	2301      	movs	r3, #1
 8028e68:	f7ff bb94 	b.w	8028594 <_strtod_l+0x2f4>
 8028e6c:	f3af 8000 	nop.w
 8028e70:	94a03595 	.word	0x94a03595
 8028e74:	3fdfffff 	.word	0x3fdfffff
 8028e78:	35afe535 	.word	0x35afe535
 8028e7c:	3fe00000 	.word	0x3fe00000
 8028e80:	ffc00000 	.word	0xffc00000
 8028e84:	41dfffff 	.word	0x41dfffff
 8028e88:	94a03595 	.word	0x94a03595
 8028e8c:	3fcfffff 	.word	0x3fcfffff
 8028e90:	3ff00000 	.word	0x3ff00000
 8028e94:	7ff00000 	.word	0x7ff00000
 8028e98:	7fe00000 	.word	0x7fe00000
 8028e9c:	7c9fffff 	.word	0x7c9fffff
 8028ea0:	3fe00000 	.word	0x3fe00000
 8028ea4:	bff00000 	.word	0xbff00000
 8028ea8:	7fefffff 	.word	0x7fefffff

08028eac <_strtod_r>:
 8028eac:	4b01      	ldr	r3, [pc, #4]	; (8028eb4 <_strtod_r+0x8>)
 8028eae:	f7ff b9f7 	b.w	80282a0 <_strtod_l>
 8028eb2:	bf00      	nop
 8028eb4:	20000120 	.word	0x20000120

08028eb8 <strtod>:
 8028eb8:	460a      	mov	r2, r1
 8028eba:	4601      	mov	r1, r0
 8028ebc:	4802      	ldr	r0, [pc, #8]	; (8028ec8 <strtod+0x10>)
 8028ebe:	4b03      	ldr	r3, [pc, #12]	; (8028ecc <strtod+0x14>)
 8028ec0:	6800      	ldr	r0, [r0, #0]
 8028ec2:	f7ff b9ed 	b.w	80282a0 <_strtod_l>
 8028ec6:	bf00      	nop
 8028ec8:	200000bc 	.word	0x200000bc
 8028ecc:	20000120 	.word	0x20000120

08028ed0 <strtof>:
 8028ed0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028ed4:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 8028f84 <strtof+0xb4>
 8028ed8:	4b26      	ldr	r3, [pc, #152]	; (8028f74 <strtof+0xa4>)
 8028eda:	460a      	mov	r2, r1
 8028edc:	ed2d 8b02 	vpush	{d8}
 8028ee0:	4601      	mov	r1, r0
 8028ee2:	f8d8 0000 	ldr.w	r0, [r8]
 8028ee6:	f7ff f9db 	bl	80282a0 <_strtod_l>
 8028eea:	ec55 4b10 	vmov	r4, r5, d0
 8028eee:	ee10 2a10 	vmov	r2, s0
 8028ef2:	ee10 0a10 	vmov	r0, s0
 8028ef6:	462b      	mov	r3, r5
 8028ef8:	4629      	mov	r1, r5
 8028efa:	f7d7 fe21 	bl	8000b40 <__aeabi_dcmpun>
 8028efe:	b190      	cbz	r0, 8028f26 <strtof+0x56>
 8028f00:	2d00      	cmp	r5, #0
 8028f02:	481d      	ldr	r0, [pc, #116]	; (8028f78 <strtof+0xa8>)
 8028f04:	da09      	bge.n	8028f1a <strtof+0x4a>
 8028f06:	f7fe f99f 	bl	8027248 <nanf>
 8028f0a:	eeb1 8a40 	vneg.f32	s16, s0
 8028f0e:	eeb0 0a48 	vmov.f32	s0, s16
 8028f12:	ecbd 8b02 	vpop	{d8}
 8028f16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028f1a:	ecbd 8b02 	vpop	{d8}
 8028f1e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028f22:	f7fe b991 	b.w	8027248 <nanf>
 8028f26:	4620      	mov	r0, r4
 8028f28:	4629      	mov	r1, r5
 8028f2a:	f7d7 fe67 	bl	8000bfc <__aeabi_d2f>
 8028f2e:	ee08 0a10 	vmov	s16, r0
 8028f32:	eddf 7a12 	vldr	s15, [pc, #72]	; 8028f7c <strtof+0xac>
 8028f36:	eeb0 7ac8 	vabs.f32	s14, s16
 8028f3a:	eeb4 7a67 	vcmp.f32	s14, s15
 8028f3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f42:	dde4      	ble.n	8028f0e <strtof+0x3e>
 8028f44:	f025 4700 	bic.w	r7, r5, #2147483648	; 0x80000000
 8028f48:	4b0d      	ldr	r3, [pc, #52]	; (8028f80 <strtof+0xb0>)
 8028f4a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8028f4e:	4620      	mov	r0, r4
 8028f50:	4639      	mov	r1, r7
 8028f52:	f7d7 fdf5 	bl	8000b40 <__aeabi_dcmpun>
 8028f56:	b940      	cbnz	r0, 8028f6a <strtof+0x9a>
 8028f58:	4b09      	ldr	r3, [pc, #36]	; (8028f80 <strtof+0xb0>)
 8028f5a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8028f5e:	4620      	mov	r0, r4
 8028f60:	4639      	mov	r1, r7
 8028f62:	f7d7 fdcf 	bl	8000b04 <__aeabi_dcmple>
 8028f66:	2800      	cmp	r0, #0
 8028f68:	d0d1      	beq.n	8028f0e <strtof+0x3e>
 8028f6a:	f8d8 3000 	ldr.w	r3, [r8]
 8028f6e:	2222      	movs	r2, #34	; 0x22
 8028f70:	601a      	str	r2, [r3, #0]
 8028f72:	e7cc      	b.n	8028f0e <strtof+0x3e>
 8028f74:	20000120 	.word	0x20000120
 8028f78:	08032cb9 	.word	0x08032cb9
 8028f7c:	7f7fffff 	.word	0x7f7fffff
 8028f80:	7fefffff 	.word	0x7fefffff
 8028f84:	200000bc 	.word	0x200000bc

08028f88 <strtok>:
 8028f88:	4b16      	ldr	r3, [pc, #88]	; (8028fe4 <strtok+0x5c>)
 8028f8a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8028f8c:	681e      	ldr	r6, [r3, #0]
 8028f8e:	6db4      	ldr	r4, [r6, #88]	; 0x58
 8028f90:	4605      	mov	r5, r0
 8028f92:	b9fc      	cbnz	r4, 8028fd4 <strtok+0x4c>
 8028f94:	2050      	movs	r0, #80	; 0x50
 8028f96:	9101      	str	r1, [sp, #4]
 8028f98:	f7fc ff58 	bl	8025e4c <malloc>
 8028f9c:	9901      	ldr	r1, [sp, #4]
 8028f9e:	65b0      	str	r0, [r6, #88]	; 0x58
 8028fa0:	4602      	mov	r2, r0
 8028fa2:	b920      	cbnz	r0, 8028fae <strtok+0x26>
 8028fa4:	4b10      	ldr	r3, [pc, #64]	; (8028fe8 <strtok+0x60>)
 8028fa6:	4811      	ldr	r0, [pc, #68]	; (8028fec <strtok+0x64>)
 8028fa8:	2157      	movs	r1, #87	; 0x57
 8028faa:	f001 fc67 	bl	802a87c <__assert_func>
 8028fae:	e9c0 4400 	strd	r4, r4, [r0]
 8028fb2:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8028fb6:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8028fba:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 8028fbe:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 8028fc2:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 8028fc6:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 8028fca:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8028fce:	6184      	str	r4, [r0, #24]
 8028fd0:	7704      	strb	r4, [r0, #28]
 8028fd2:	6244      	str	r4, [r0, #36]	; 0x24
 8028fd4:	6db2      	ldr	r2, [r6, #88]	; 0x58
 8028fd6:	2301      	movs	r3, #1
 8028fd8:	4628      	mov	r0, r5
 8028fda:	b002      	add	sp, #8
 8028fdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8028fe0:	f000 b806 	b.w	8028ff0 <__strtok_r>
 8028fe4:	200000bc 	.word	0x200000bc
 8028fe8:	08031fa4 	.word	0x08031fa4
 8028fec:	080328f0 	.word	0x080328f0

08028ff0 <__strtok_r>:
 8028ff0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028ff2:	b908      	cbnz	r0, 8028ff8 <__strtok_r+0x8>
 8028ff4:	6810      	ldr	r0, [r2, #0]
 8028ff6:	b188      	cbz	r0, 802901c <__strtok_r+0x2c>
 8028ff8:	4604      	mov	r4, r0
 8028ffa:	4620      	mov	r0, r4
 8028ffc:	f814 5b01 	ldrb.w	r5, [r4], #1
 8029000:	460f      	mov	r7, r1
 8029002:	f817 6b01 	ldrb.w	r6, [r7], #1
 8029006:	b91e      	cbnz	r6, 8029010 <__strtok_r+0x20>
 8029008:	b965      	cbnz	r5, 8029024 <__strtok_r+0x34>
 802900a:	6015      	str	r5, [r2, #0]
 802900c:	4628      	mov	r0, r5
 802900e:	e005      	b.n	802901c <__strtok_r+0x2c>
 8029010:	42b5      	cmp	r5, r6
 8029012:	d1f6      	bne.n	8029002 <__strtok_r+0x12>
 8029014:	2b00      	cmp	r3, #0
 8029016:	d1f0      	bne.n	8028ffa <__strtok_r+0xa>
 8029018:	6014      	str	r4, [r2, #0]
 802901a:	7003      	strb	r3, [r0, #0]
 802901c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802901e:	461c      	mov	r4, r3
 8029020:	e00c      	b.n	802903c <__strtok_r+0x4c>
 8029022:	b915      	cbnz	r5, 802902a <__strtok_r+0x3a>
 8029024:	f814 3b01 	ldrb.w	r3, [r4], #1
 8029028:	460e      	mov	r6, r1
 802902a:	f816 5b01 	ldrb.w	r5, [r6], #1
 802902e:	42ab      	cmp	r3, r5
 8029030:	d1f7      	bne.n	8029022 <__strtok_r+0x32>
 8029032:	2b00      	cmp	r3, #0
 8029034:	d0f3      	beq.n	802901e <__strtok_r+0x2e>
 8029036:	2300      	movs	r3, #0
 8029038:	f804 3c01 	strb.w	r3, [r4, #-1]
 802903c:	6014      	str	r4, [r2, #0]
 802903e:	e7ed      	b.n	802901c <__strtok_r+0x2c>

08029040 <_strtol_l.constprop.0>:
 8029040:	2b01      	cmp	r3, #1
 8029042:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8029046:	d001      	beq.n	802904c <_strtol_l.constprop.0+0xc>
 8029048:	2b24      	cmp	r3, #36	; 0x24
 802904a:	d906      	bls.n	802905a <_strtol_l.constprop.0+0x1a>
 802904c:	f7fc f94e 	bl	80252ec <__errno>
 8029050:	2316      	movs	r3, #22
 8029052:	6003      	str	r3, [r0, #0]
 8029054:	2000      	movs	r0, #0
 8029056:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802905a:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8029140 <_strtol_l.constprop.0+0x100>
 802905e:	460d      	mov	r5, r1
 8029060:	462e      	mov	r6, r5
 8029062:	f815 4b01 	ldrb.w	r4, [r5], #1
 8029066:	f814 700c 	ldrb.w	r7, [r4, ip]
 802906a:	f017 0708 	ands.w	r7, r7, #8
 802906e:	d1f7      	bne.n	8029060 <_strtol_l.constprop.0+0x20>
 8029070:	2c2d      	cmp	r4, #45	; 0x2d
 8029072:	d132      	bne.n	80290da <_strtol_l.constprop.0+0x9a>
 8029074:	782c      	ldrb	r4, [r5, #0]
 8029076:	2701      	movs	r7, #1
 8029078:	1cb5      	adds	r5, r6, #2
 802907a:	2b00      	cmp	r3, #0
 802907c:	d05b      	beq.n	8029136 <_strtol_l.constprop.0+0xf6>
 802907e:	2b10      	cmp	r3, #16
 8029080:	d109      	bne.n	8029096 <_strtol_l.constprop.0+0x56>
 8029082:	2c30      	cmp	r4, #48	; 0x30
 8029084:	d107      	bne.n	8029096 <_strtol_l.constprop.0+0x56>
 8029086:	782c      	ldrb	r4, [r5, #0]
 8029088:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 802908c:	2c58      	cmp	r4, #88	; 0x58
 802908e:	d14d      	bne.n	802912c <_strtol_l.constprop.0+0xec>
 8029090:	786c      	ldrb	r4, [r5, #1]
 8029092:	2310      	movs	r3, #16
 8029094:	3502      	adds	r5, #2
 8029096:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 802909a:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 802909e:	f04f 0c00 	mov.w	ip, #0
 80290a2:	fbb8 f9f3 	udiv	r9, r8, r3
 80290a6:	4666      	mov	r6, ip
 80290a8:	fb03 8a19 	mls	sl, r3, r9, r8
 80290ac:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 80290b0:	f1be 0f09 	cmp.w	lr, #9
 80290b4:	d816      	bhi.n	80290e4 <_strtol_l.constprop.0+0xa4>
 80290b6:	4674      	mov	r4, lr
 80290b8:	42a3      	cmp	r3, r4
 80290ba:	dd24      	ble.n	8029106 <_strtol_l.constprop.0+0xc6>
 80290bc:	f1bc 0f00 	cmp.w	ip, #0
 80290c0:	db1e      	blt.n	8029100 <_strtol_l.constprop.0+0xc0>
 80290c2:	45b1      	cmp	r9, r6
 80290c4:	d31c      	bcc.n	8029100 <_strtol_l.constprop.0+0xc0>
 80290c6:	d101      	bne.n	80290cc <_strtol_l.constprop.0+0x8c>
 80290c8:	45a2      	cmp	sl, r4
 80290ca:	db19      	blt.n	8029100 <_strtol_l.constprop.0+0xc0>
 80290cc:	fb06 4603 	mla	r6, r6, r3, r4
 80290d0:	f04f 0c01 	mov.w	ip, #1
 80290d4:	f815 4b01 	ldrb.w	r4, [r5], #1
 80290d8:	e7e8      	b.n	80290ac <_strtol_l.constprop.0+0x6c>
 80290da:	2c2b      	cmp	r4, #43	; 0x2b
 80290dc:	bf04      	itt	eq
 80290de:	782c      	ldrbeq	r4, [r5, #0]
 80290e0:	1cb5      	addeq	r5, r6, #2
 80290e2:	e7ca      	b.n	802907a <_strtol_l.constprop.0+0x3a>
 80290e4:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 80290e8:	f1be 0f19 	cmp.w	lr, #25
 80290ec:	d801      	bhi.n	80290f2 <_strtol_l.constprop.0+0xb2>
 80290ee:	3c37      	subs	r4, #55	; 0x37
 80290f0:	e7e2      	b.n	80290b8 <_strtol_l.constprop.0+0x78>
 80290f2:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 80290f6:	f1be 0f19 	cmp.w	lr, #25
 80290fa:	d804      	bhi.n	8029106 <_strtol_l.constprop.0+0xc6>
 80290fc:	3c57      	subs	r4, #87	; 0x57
 80290fe:	e7db      	b.n	80290b8 <_strtol_l.constprop.0+0x78>
 8029100:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8029104:	e7e6      	b.n	80290d4 <_strtol_l.constprop.0+0x94>
 8029106:	f1bc 0f00 	cmp.w	ip, #0
 802910a:	da05      	bge.n	8029118 <_strtol_l.constprop.0+0xd8>
 802910c:	2322      	movs	r3, #34	; 0x22
 802910e:	6003      	str	r3, [r0, #0]
 8029110:	4646      	mov	r6, r8
 8029112:	b942      	cbnz	r2, 8029126 <_strtol_l.constprop.0+0xe6>
 8029114:	4630      	mov	r0, r6
 8029116:	e79e      	b.n	8029056 <_strtol_l.constprop.0+0x16>
 8029118:	b107      	cbz	r7, 802911c <_strtol_l.constprop.0+0xdc>
 802911a:	4276      	negs	r6, r6
 802911c:	2a00      	cmp	r2, #0
 802911e:	d0f9      	beq.n	8029114 <_strtol_l.constprop.0+0xd4>
 8029120:	f1bc 0f00 	cmp.w	ip, #0
 8029124:	d000      	beq.n	8029128 <_strtol_l.constprop.0+0xe8>
 8029126:	1e69      	subs	r1, r5, #1
 8029128:	6011      	str	r1, [r2, #0]
 802912a:	e7f3      	b.n	8029114 <_strtol_l.constprop.0+0xd4>
 802912c:	2430      	movs	r4, #48	; 0x30
 802912e:	2b00      	cmp	r3, #0
 8029130:	d1b1      	bne.n	8029096 <_strtol_l.constprop.0+0x56>
 8029132:	2308      	movs	r3, #8
 8029134:	e7af      	b.n	8029096 <_strtol_l.constprop.0+0x56>
 8029136:	2c30      	cmp	r4, #48	; 0x30
 8029138:	d0a5      	beq.n	8029086 <_strtol_l.constprop.0+0x46>
 802913a:	230a      	movs	r3, #10
 802913c:	e7ab      	b.n	8029096 <_strtol_l.constprop.0+0x56>
 802913e:	bf00      	nop
 8029140:	08032018 	.word	0x08032018

08029144 <_strtol_r>:
 8029144:	f7ff bf7c 	b.w	8029040 <_strtol_l.constprop.0>

08029148 <strtol>:
 8029148:	4613      	mov	r3, r2
 802914a:	460a      	mov	r2, r1
 802914c:	4601      	mov	r1, r0
 802914e:	4802      	ldr	r0, [pc, #8]	; (8029158 <strtol+0x10>)
 8029150:	6800      	ldr	r0, [r0, #0]
 8029152:	f7ff bf75 	b.w	8029040 <_strtol_l.constprop.0>
 8029156:	bf00      	nop
 8029158:	200000bc 	.word	0x200000bc

0802915c <_strtoul_l.constprop.0>:
 802915c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8029160:	4f36      	ldr	r7, [pc, #216]	; (802923c <_strtoul_l.constprop.0+0xe0>)
 8029162:	4686      	mov	lr, r0
 8029164:	460d      	mov	r5, r1
 8029166:	4628      	mov	r0, r5
 8029168:	f815 4b01 	ldrb.w	r4, [r5], #1
 802916c:	5de6      	ldrb	r6, [r4, r7]
 802916e:	f016 0608 	ands.w	r6, r6, #8
 8029172:	d1f8      	bne.n	8029166 <_strtoul_l.constprop.0+0xa>
 8029174:	2c2d      	cmp	r4, #45	; 0x2d
 8029176:	d12f      	bne.n	80291d8 <_strtoul_l.constprop.0+0x7c>
 8029178:	782c      	ldrb	r4, [r5, #0]
 802917a:	2601      	movs	r6, #1
 802917c:	1c85      	adds	r5, r0, #2
 802917e:	2b00      	cmp	r3, #0
 8029180:	d057      	beq.n	8029232 <_strtoul_l.constprop.0+0xd6>
 8029182:	2b10      	cmp	r3, #16
 8029184:	d109      	bne.n	802919a <_strtoul_l.constprop.0+0x3e>
 8029186:	2c30      	cmp	r4, #48	; 0x30
 8029188:	d107      	bne.n	802919a <_strtoul_l.constprop.0+0x3e>
 802918a:	7828      	ldrb	r0, [r5, #0]
 802918c:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8029190:	2858      	cmp	r0, #88	; 0x58
 8029192:	d149      	bne.n	8029228 <_strtoul_l.constprop.0+0xcc>
 8029194:	786c      	ldrb	r4, [r5, #1]
 8029196:	2310      	movs	r3, #16
 8029198:	3502      	adds	r5, #2
 802919a:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 802919e:	2700      	movs	r7, #0
 80291a0:	fbb8 f8f3 	udiv	r8, r8, r3
 80291a4:	fb03 f908 	mul.w	r9, r3, r8
 80291a8:	ea6f 0909 	mvn.w	r9, r9
 80291ac:	4638      	mov	r0, r7
 80291ae:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80291b2:	f1bc 0f09 	cmp.w	ip, #9
 80291b6:	d814      	bhi.n	80291e2 <_strtoul_l.constprop.0+0x86>
 80291b8:	4664      	mov	r4, ip
 80291ba:	42a3      	cmp	r3, r4
 80291bc:	dd22      	ble.n	8029204 <_strtoul_l.constprop.0+0xa8>
 80291be:	2f00      	cmp	r7, #0
 80291c0:	db1d      	blt.n	80291fe <_strtoul_l.constprop.0+0xa2>
 80291c2:	4580      	cmp	r8, r0
 80291c4:	d31b      	bcc.n	80291fe <_strtoul_l.constprop.0+0xa2>
 80291c6:	d101      	bne.n	80291cc <_strtoul_l.constprop.0+0x70>
 80291c8:	45a1      	cmp	r9, r4
 80291ca:	db18      	blt.n	80291fe <_strtoul_l.constprop.0+0xa2>
 80291cc:	fb00 4003 	mla	r0, r0, r3, r4
 80291d0:	2701      	movs	r7, #1
 80291d2:	f815 4b01 	ldrb.w	r4, [r5], #1
 80291d6:	e7ea      	b.n	80291ae <_strtoul_l.constprop.0+0x52>
 80291d8:	2c2b      	cmp	r4, #43	; 0x2b
 80291da:	bf04      	itt	eq
 80291dc:	782c      	ldrbeq	r4, [r5, #0]
 80291de:	1c85      	addeq	r5, r0, #2
 80291e0:	e7cd      	b.n	802917e <_strtoul_l.constprop.0+0x22>
 80291e2:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 80291e6:	f1bc 0f19 	cmp.w	ip, #25
 80291ea:	d801      	bhi.n	80291f0 <_strtoul_l.constprop.0+0x94>
 80291ec:	3c37      	subs	r4, #55	; 0x37
 80291ee:	e7e4      	b.n	80291ba <_strtoul_l.constprop.0+0x5e>
 80291f0:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 80291f4:	f1bc 0f19 	cmp.w	ip, #25
 80291f8:	d804      	bhi.n	8029204 <_strtoul_l.constprop.0+0xa8>
 80291fa:	3c57      	subs	r4, #87	; 0x57
 80291fc:	e7dd      	b.n	80291ba <_strtoul_l.constprop.0+0x5e>
 80291fe:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8029202:	e7e6      	b.n	80291d2 <_strtoul_l.constprop.0+0x76>
 8029204:	2f00      	cmp	r7, #0
 8029206:	da07      	bge.n	8029218 <_strtoul_l.constprop.0+0xbc>
 8029208:	2322      	movs	r3, #34	; 0x22
 802920a:	f8ce 3000 	str.w	r3, [lr]
 802920e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8029212:	b932      	cbnz	r2, 8029222 <_strtoul_l.constprop.0+0xc6>
 8029214:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8029218:	b106      	cbz	r6, 802921c <_strtoul_l.constprop.0+0xc0>
 802921a:	4240      	negs	r0, r0
 802921c:	2a00      	cmp	r2, #0
 802921e:	d0f9      	beq.n	8029214 <_strtoul_l.constprop.0+0xb8>
 8029220:	b107      	cbz	r7, 8029224 <_strtoul_l.constprop.0+0xc8>
 8029222:	1e69      	subs	r1, r5, #1
 8029224:	6011      	str	r1, [r2, #0]
 8029226:	e7f5      	b.n	8029214 <_strtoul_l.constprop.0+0xb8>
 8029228:	2430      	movs	r4, #48	; 0x30
 802922a:	2b00      	cmp	r3, #0
 802922c:	d1b5      	bne.n	802919a <_strtoul_l.constprop.0+0x3e>
 802922e:	2308      	movs	r3, #8
 8029230:	e7b3      	b.n	802919a <_strtoul_l.constprop.0+0x3e>
 8029232:	2c30      	cmp	r4, #48	; 0x30
 8029234:	d0a9      	beq.n	802918a <_strtoul_l.constprop.0+0x2e>
 8029236:	230a      	movs	r3, #10
 8029238:	e7af      	b.n	802919a <_strtoul_l.constprop.0+0x3e>
 802923a:	bf00      	nop
 802923c:	08032018 	.word	0x08032018

08029240 <_strtoul_r>:
 8029240:	f7ff bf8c 	b.w	802915c <_strtoul_l.constprop.0>

08029244 <strtoul>:
 8029244:	4613      	mov	r3, r2
 8029246:	460a      	mov	r2, r1
 8029248:	4601      	mov	r1, r0
 802924a:	4802      	ldr	r0, [pc, #8]	; (8029254 <strtoul+0x10>)
 802924c:	6800      	ldr	r0, [r0, #0]
 802924e:	f7ff bf85 	b.w	802915c <_strtoul_l.constprop.0>
 8029252:	bf00      	nop
 8029254:	200000bc 	.word	0x200000bc

08029258 <strxfrm>:
 8029258:	b530      	push	{r4, r5, lr}
 802925a:	4604      	mov	r4, r0
 802925c:	2000      	movs	r0, #0
 802925e:	460b      	mov	r3, r1
 8029260:	4290      	cmp	r0, r2
 8029262:	f813 5b01 	ldrb.w	r5, [r3], #1
 8029266:	d106      	bne.n	8029276 <strxfrm+0x1e>
 8029268:	1a42      	subs	r2, r0, r1
 802926a:	1850      	adds	r0, r2, r1
 802926c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8029270:	2b00      	cmp	r3, #0
 8029272:	d1fa      	bne.n	802926a <strxfrm+0x12>
 8029274:	bd30      	pop	{r4, r5, pc}
 8029276:	5425      	strb	r5, [r4, r0]
 8029278:	2d00      	cmp	r5, #0
 802927a:	d0fb      	beq.n	8029274 <strxfrm+0x1c>
 802927c:	3001      	adds	r0, #1
 802927e:	4619      	mov	r1, r3
 8029280:	e7ed      	b.n	802925e <strxfrm+0x6>
	...

08029284 <towlower>:
 8029284:	28fe      	cmp	r0, #254	; 0xfe
 8029286:	d806      	bhi.n	8029296 <towlower+0x12>
 8029288:	4b03      	ldr	r3, [pc, #12]	; (8029298 <towlower+0x14>)
 802928a:	5c1b      	ldrb	r3, [r3, r0]
 802928c:	f003 0303 	and.w	r3, r3, #3
 8029290:	2b01      	cmp	r3, #1
 8029292:	bf08      	it	eq
 8029294:	3020      	addeq	r0, #32
 8029296:	4770      	bx	lr
 8029298:	08032018 	.word	0x08032018

0802929c <towupper>:
 802929c:	28fe      	cmp	r0, #254	; 0xfe
 802929e:	d806      	bhi.n	80292ae <towupper+0x12>
 80292a0:	4b03      	ldr	r3, [pc, #12]	; (80292b0 <towupper+0x14>)
 80292a2:	5c1b      	ldrb	r3, [r3, r0]
 80292a4:	f003 0303 	and.w	r3, r3, #3
 80292a8:	2b02      	cmp	r3, #2
 80292aa:	bf08      	it	eq
 80292ac:	3820      	subeq	r0, #32
 80292ae:	4770      	bx	lr
 80292b0:	08032018 	.word	0x08032018

080292b4 <__tz_lock>:
 80292b4:	4801      	ldr	r0, [pc, #4]	; (80292bc <__tz_lock+0x8>)
 80292b6:	f7fc bd60 	b.w	8025d7a <__retarget_lock_acquire>
 80292ba:	bf00      	nop
 80292bc:	200042c8 	.word	0x200042c8

080292c0 <__tz_unlock>:
 80292c0:	4801      	ldr	r0, [pc, #4]	; (80292c8 <__tz_unlock+0x8>)
 80292c2:	f7fc bd5c 	b.w	8025d7e <__retarget_lock_release>
 80292c6:	bf00      	nop
 80292c8:	200042c8 	.word	0x200042c8

080292cc <_tzset_unlocked>:
 80292cc:	4b01      	ldr	r3, [pc, #4]	; (80292d4 <_tzset_unlocked+0x8>)
 80292ce:	6818      	ldr	r0, [r3, #0]
 80292d0:	f000 b802 	b.w	80292d8 <_tzset_unlocked_r>
 80292d4:	200000bc 	.word	0x200000bc

080292d8 <_tzset_unlocked_r>:
 80292d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80292dc:	b08d      	sub	sp, #52	; 0x34
 80292de:	4607      	mov	r7, r0
 80292e0:	f002 fe58 	bl	802bf94 <__gettzinfo>
 80292e4:	49b0      	ldr	r1, [pc, #704]	; (80295a8 <_tzset_unlocked_r+0x2d0>)
 80292e6:	4eb1      	ldr	r6, [pc, #708]	; (80295ac <_tzset_unlocked_r+0x2d4>)
 80292e8:	4605      	mov	r5, r0
 80292ea:	4638      	mov	r0, r7
 80292ec:	f002 fe4a 	bl	802bf84 <_getenv_r>
 80292f0:	4604      	mov	r4, r0
 80292f2:	b970      	cbnz	r0, 8029312 <_tzset_unlocked_r+0x3a>
 80292f4:	4bae      	ldr	r3, [pc, #696]	; (80295b0 <_tzset_unlocked_r+0x2d8>)
 80292f6:	4aaf      	ldr	r2, [pc, #700]	; (80295b4 <_tzset_unlocked_r+0x2dc>)
 80292f8:	6018      	str	r0, [r3, #0]
 80292fa:	4baf      	ldr	r3, [pc, #700]	; (80295b8 <_tzset_unlocked_r+0x2e0>)
 80292fc:	6018      	str	r0, [r3, #0]
 80292fe:	4baf      	ldr	r3, [pc, #700]	; (80295bc <_tzset_unlocked_r+0x2e4>)
 8029300:	6830      	ldr	r0, [r6, #0]
 8029302:	e9c3 2200 	strd	r2, r2, [r3]
 8029306:	f7fc fda9 	bl	8025e5c <free>
 802930a:	6034      	str	r4, [r6, #0]
 802930c:	b00d      	add	sp, #52	; 0x34
 802930e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029312:	6831      	ldr	r1, [r6, #0]
 8029314:	2900      	cmp	r1, #0
 8029316:	d162      	bne.n	80293de <_tzset_unlocked_r+0x106>
 8029318:	6830      	ldr	r0, [r6, #0]
 802931a:	f7fc fd9f 	bl	8025e5c <free>
 802931e:	4620      	mov	r0, r4
 8029320:	f7d6 ffb0 	bl	8000284 <strlen>
 8029324:	1c41      	adds	r1, r0, #1
 8029326:	4638      	mov	r0, r7
 8029328:	f7fc fe86 	bl	8026038 <_malloc_r>
 802932c:	6030      	str	r0, [r6, #0]
 802932e:	2800      	cmp	r0, #0
 8029330:	d15a      	bne.n	80293e8 <_tzset_unlocked_r+0x110>
 8029332:	7823      	ldrb	r3, [r4, #0]
 8029334:	4aa2      	ldr	r2, [pc, #648]	; (80295c0 <_tzset_unlocked_r+0x2e8>)
 8029336:	49a3      	ldr	r1, [pc, #652]	; (80295c4 <_tzset_unlocked_r+0x2ec>)
 8029338:	2b3a      	cmp	r3, #58	; 0x3a
 802933a:	bf08      	it	eq
 802933c:	3401      	addeq	r4, #1
 802933e:	ae0a      	add	r6, sp, #40	; 0x28
 8029340:	4633      	mov	r3, r6
 8029342:	4620      	mov	r0, r4
 8029344:	f7fd ffea 	bl	802731c <siscanf>
 8029348:	2800      	cmp	r0, #0
 802934a:	dddf      	ble.n	802930c <_tzset_unlocked_r+0x34>
 802934c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802934e:	18e7      	adds	r7, r4, r3
 8029350:	5ce3      	ldrb	r3, [r4, r3]
 8029352:	2b2d      	cmp	r3, #45	; 0x2d
 8029354:	d14c      	bne.n	80293f0 <_tzset_unlocked_r+0x118>
 8029356:	3701      	adds	r7, #1
 8029358:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 802935c:	f10d 0a20 	add.w	sl, sp, #32
 8029360:	f10d 0b1e 	add.w	fp, sp, #30
 8029364:	2400      	movs	r4, #0
 8029366:	e9cd 6a01 	strd	r6, sl, [sp, #4]
 802936a:	4997      	ldr	r1, [pc, #604]	; (80295c8 <_tzset_unlocked_r+0x2f0>)
 802936c:	9603      	str	r6, [sp, #12]
 802936e:	f8cd b000 	str.w	fp, [sp]
 8029372:	4633      	mov	r3, r6
 8029374:	aa07      	add	r2, sp, #28
 8029376:	4638      	mov	r0, r7
 8029378:	f8ad 401e 	strh.w	r4, [sp, #30]
 802937c:	f8ad 4020 	strh.w	r4, [sp, #32]
 8029380:	f7fd ffcc 	bl	802731c <siscanf>
 8029384:	42a0      	cmp	r0, r4
 8029386:	ddc1      	ble.n	802930c <_tzset_unlocked_r+0x34>
 8029388:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 802938c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8029390:	f8df 9240 	ldr.w	r9, [pc, #576]	; 80295d4 <_tzset_unlocked_r+0x2fc>
 8029394:	213c      	movs	r1, #60	; 0x3c
 8029396:	fb01 3302 	mla	r3, r1, r2, r3
 802939a:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 802939e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80293a2:	fb01 3302 	mla	r3, r1, r2, r3
 80293a6:	fb08 f303 	mul.w	r3, r8, r3
 80293aa:	f8df 8210 	ldr.w	r8, [pc, #528]	; 80295bc <_tzset_unlocked_r+0x2e4>
 80293ae:	62ab      	str	r3, [r5, #40]	; 0x28
 80293b0:	4b83      	ldr	r3, [pc, #524]	; (80295c0 <_tzset_unlocked_r+0x2e8>)
 80293b2:	f8c8 3000 	str.w	r3, [r8]
 80293b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80293b8:	4982      	ldr	r1, [pc, #520]	; (80295c4 <_tzset_unlocked_r+0x2ec>)
 80293ba:	441f      	add	r7, r3
 80293bc:	464a      	mov	r2, r9
 80293be:	4633      	mov	r3, r6
 80293c0:	4638      	mov	r0, r7
 80293c2:	f7fd ffab 	bl	802731c <siscanf>
 80293c6:	42a0      	cmp	r0, r4
 80293c8:	dc18      	bgt.n	80293fc <_tzset_unlocked_r+0x124>
 80293ca:	f8d8 3000 	ldr.w	r3, [r8]
 80293ce:	f8c8 3004 	str.w	r3, [r8, #4]
 80293d2:	4b77      	ldr	r3, [pc, #476]	; (80295b0 <_tzset_unlocked_r+0x2d8>)
 80293d4:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 80293d6:	601a      	str	r2, [r3, #0]
 80293d8:	4b77      	ldr	r3, [pc, #476]	; (80295b8 <_tzset_unlocked_r+0x2e0>)
 80293da:	601c      	str	r4, [r3, #0]
 80293dc:	e796      	b.n	802930c <_tzset_unlocked_r+0x34>
 80293de:	f7d6 ff47 	bl	8000270 <strcmp>
 80293e2:	2800      	cmp	r0, #0
 80293e4:	d198      	bne.n	8029318 <_tzset_unlocked_r+0x40>
 80293e6:	e791      	b.n	802930c <_tzset_unlocked_r+0x34>
 80293e8:	4621      	mov	r1, r4
 80293ea:	f7fe f80a 	bl	8027402 <strcpy>
 80293ee:	e7a0      	b.n	8029332 <_tzset_unlocked_r+0x5a>
 80293f0:	2b2b      	cmp	r3, #43	; 0x2b
 80293f2:	bf08      	it	eq
 80293f4:	3701      	addeq	r7, #1
 80293f6:	f04f 0801 	mov.w	r8, #1
 80293fa:	e7af      	b.n	802935c <_tzset_unlocked_r+0x84>
 80293fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80293fe:	f8c8 9004 	str.w	r9, [r8, #4]
 8029402:	18fc      	adds	r4, r7, r3
 8029404:	5cfb      	ldrb	r3, [r7, r3]
 8029406:	2b2d      	cmp	r3, #45	; 0x2d
 8029408:	f040 808b 	bne.w	8029522 <_tzset_unlocked_r+0x24a>
 802940c:	3401      	adds	r4, #1
 802940e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8029412:	2300      	movs	r3, #0
 8029414:	f8ad 301c 	strh.w	r3, [sp, #28]
 8029418:	f8ad 301e 	strh.w	r3, [sp, #30]
 802941c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8029420:	930a      	str	r3, [sp, #40]	; 0x28
 8029422:	e9cd a602 	strd	sl, r6, [sp, #8]
 8029426:	e9cd b600 	strd	fp, r6, [sp]
 802942a:	4967      	ldr	r1, [pc, #412]	; (80295c8 <_tzset_unlocked_r+0x2f0>)
 802942c:	4633      	mov	r3, r6
 802942e:	aa07      	add	r2, sp, #28
 8029430:	4620      	mov	r0, r4
 8029432:	f7fd ff73 	bl	802731c <siscanf>
 8029436:	2800      	cmp	r0, #0
 8029438:	dc78      	bgt.n	802952c <_tzset_unlocked_r+0x254>
 802943a:	6aab      	ldr	r3, [r5, #40]	; 0x28
 802943c:	f5a3 6361 	sub.w	r3, r3, #3600	; 0xe10
 8029440:	652b      	str	r3, [r5, #80]	; 0x50
 8029442:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8029444:	462f      	mov	r7, r5
 8029446:	441c      	add	r4, r3
 8029448:	f04f 0900 	mov.w	r9, #0
 802944c:	7823      	ldrb	r3, [r4, #0]
 802944e:	2b2c      	cmp	r3, #44	; 0x2c
 8029450:	bf08      	it	eq
 8029452:	3401      	addeq	r4, #1
 8029454:	f894 8000 	ldrb.w	r8, [r4]
 8029458:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
 802945c:	d178      	bne.n	8029550 <_tzset_unlocked_r+0x278>
 802945e:	f10d 0326 	add.w	r3, sp, #38	; 0x26
 8029462:	e9cd 6301 	strd	r6, r3, [sp, #4]
 8029466:	ab09      	add	r3, sp, #36	; 0x24
 8029468:	9300      	str	r3, [sp, #0]
 802946a:	4958      	ldr	r1, [pc, #352]	; (80295cc <_tzset_unlocked_r+0x2f4>)
 802946c:	9603      	str	r6, [sp, #12]
 802946e:	4633      	mov	r3, r6
 8029470:	f10d 0222 	add.w	r2, sp, #34	; 0x22
 8029474:	4620      	mov	r0, r4
 8029476:	f7fd ff51 	bl	802731c <siscanf>
 802947a:	2803      	cmp	r0, #3
 802947c:	f47f af46 	bne.w	802930c <_tzset_unlocked_r+0x34>
 8029480:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8029484:	1e4b      	subs	r3, r1, #1
 8029486:	2b0b      	cmp	r3, #11
 8029488:	f63f af40 	bhi.w	802930c <_tzset_unlocked_r+0x34>
 802948c:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8029490:	1e53      	subs	r3, r2, #1
 8029492:	2b04      	cmp	r3, #4
 8029494:	f63f af3a 	bhi.w	802930c <_tzset_unlocked_r+0x34>
 8029498:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 802949c:	2b06      	cmp	r3, #6
 802949e:	f63f af35 	bhi.w	802930c <_tzset_unlocked_r+0x34>
 80294a2:	e9c7 1203 	strd	r1, r2, [r7, #12]
 80294a6:	f887 8008 	strb.w	r8, [r7, #8]
 80294aa:	617b      	str	r3, [r7, #20]
 80294ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80294ae:	eb04 0803 	add.w	r8, r4, r3
 80294b2:	2302      	movs	r3, #2
 80294b4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80294b8:	2300      	movs	r3, #0
 80294ba:	f8ad 301e 	strh.w	r3, [sp, #30]
 80294be:	f8ad 3020 	strh.w	r3, [sp, #32]
 80294c2:	930a      	str	r3, [sp, #40]	; 0x28
 80294c4:	f898 3000 	ldrb.w	r3, [r8]
 80294c8:	2b2f      	cmp	r3, #47	; 0x2f
 80294ca:	d109      	bne.n	80294e0 <_tzset_unlocked_r+0x208>
 80294cc:	e9cd a602 	strd	sl, r6, [sp, #8]
 80294d0:	e9cd b600 	strd	fp, r6, [sp]
 80294d4:	493e      	ldr	r1, [pc, #248]	; (80295d0 <_tzset_unlocked_r+0x2f8>)
 80294d6:	4633      	mov	r3, r6
 80294d8:	aa07      	add	r2, sp, #28
 80294da:	4640      	mov	r0, r8
 80294dc:	f7fd ff1e 	bl	802731c <siscanf>
 80294e0:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80294e4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80294e8:	213c      	movs	r1, #60	; 0x3c
 80294ea:	fb01 3302 	mla	r3, r1, r2, r3
 80294ee:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 80294f2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80294f6:	fb01 3302 	mla	r3, r1, r2, r3
 80294fa:	61bb      	str	r3, [r7, #24]
 80294fc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80294fe:	3728      	adds	r7, #40	; 0x28
 8029500:	4444      	add	r4, r8
 8029502:	f1b9 0f00 	cmp.w	r9, #0
 8029506:	d020      	beq.n	802954a <_tzset_unlocked_r+0x272>
 8029508:	6868      	ldr	r0, [r5, #4]
 802950a:	f004 f979 	bl	802d800 <__tzcalc_limits>
 802950e:	4b28      	ldr	r3, [pc, #160]	; (80295b0 <_tzset_unlocked_r+0x2d8>)
 8029510:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 8029512:	601a      	str	r2, [r3, #0]
 8029514:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8029516:	1a9b      	subs	r3, r3, r2
 8029518:	4a27      	ldr	r2, [pc, #156]	; (80295b8 <_tzset_unlocked_r+0x2e0>)
 802951a:	bf18      	it	ne
 802951c:	2301      	movne	r3, #1
 802951e:	6013      	str	r3, [r2, #0]
 8029520:	e6f4      	b.n	802930c <_tzset_unlocked_r+0x34>
 8029522:	2b2b      	cmp	r3, #43	; 0x2b
 8029524:	bf08      	it	eq
 8029526:	3401      	addeq	r4, #1
 8029528:	2701      	movs	r7, #1
 802952a:	e772      	b.n	8029412 <_tzset_unlocked_r+0x13a>
 802952c:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8029530:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8029534:	213c      	movs	r1, #60	; 0x3c
 8029536:	fb01 3302 	mla	r3, r1, r2, r3
 802953a:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 802953e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8029542:	fb01 3302 	mla	r3, r1, r2, r3
 8029546:	437b      	muls	r3, r7
 8029548:	e77a      	b.n	8029440 <_tzset_unlocked_r+0x168>
 802954a:	f04f 0901 	mov.w	r9, #1
 802954e:	e77d      	b.n	802944c <_tzset_unlocked_r+0x174>
 8029550:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
 8029554:	bf06      	itte	eq
 8029556:	3401      	addeq	r4, #1
 8029558:	4643      	moveq	r3, r8
 802955a:	2344      	movne	r3, #68	; 0x44
 802955c:	220a      	movs	r2, #10
 802955e:	a90b      	add	r1, sp, #44	; 0x2c
 8029560:	4620      	mov	r0, r4
 8029562:	9305      	str	r3, [sp, #20]
 8029564:	f7ff fe6e 	bl	8029244 <strtoul>
 8029568:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
 802956c:	9b05      	ldr	r3, [sp, #20]
 802956e:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
 8029572:	45a0      	cmp	r8, r4
 8029574:	d114      	bne.n	80295a0 <_tzset_unlocked_r+0x2c8>
 8029576:	234d      	movs	r3, #77	; 0x4d
 8029578:	f1b9 0f00 	cmp.w	r9, #0
 802957c:	d107      	bne.n	802958e <_tzset_unlocked_r+0x2b6>
 802957e:	722b      	strb	r3, [r5, #8]
 8029580:	2103      	movs	r1, #3
 8029582:	2302      	movs	r3, #2
 8029584:	e9c5 1303 	strd	r1, r3, [r5, #12]
 8029588:	f8c5 9014 	str.w	r9, [r5, #20]
 802958c:	e791      	b.n	80294b2 <_tzset_unlocked_r+0x1da>
 802958e:	f885 3030 	strb.w	r3, [r5, #48]	; 0x30
 8029592:	220b      	movs	r2, #11
 8029594:	2301      	movs	r3, #1
 8029596:	e9c5 230d 	strd	r2, r3, [r5, #52]	; 0x34
 802959a:	2300      	movs	r3, #0
 802959c:	63eb      	str	r3, [r5, #60]	; 0x3c
 802959e:	e788      	b.n	80294b2 <_tzset_unlocked_r+0x1da>
 80295a0:	b280      	uxth	r0, r0
 80295a2:	723b      	strb	r3, [r7, #8]
 80295a4:	6178      	str	r0, [r7, #20]
 80295a6:	e784      	b.n	80294b2 <_tzset_unlocked_r+0x1da>
 80295a8:	08032a88 	.word	0x08032a88
 80295ac:	200042f0 	.word	0x200042f0
 80295b0:	200042f8 	.word	0x200042f8
 80295b4:	08031914 	.word	0x08031914
 80295b8:	200042f4 	.word	0x200042f4
 80295bc:	2000028c 	.word	0x2000028c
 80295c0:	200042e3 	.word	0x200042e3
 80295c4:	08032a8b 	.word	0x08032a8b
 80295c8:	08032aae 	.word	0x08032aae
 80295cc:	08032a9a 	.word	0x08032a9a
 80295d0:	08032aad 	.word	0x08032aad
 80295d4:	200042d8 	.word	0x200042d8

080295d8 <_user_strerror>:
 80295d8:	2000      	movs	r0, #0
 80295da:	4770      	bx	lr

080295dc <__submore>:
 80295dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80295e0:	460c      	mov	r4, r1
 80295e2:	6b49      	ldr	r1, [r1, #52]	; 0x34
 80295e4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80295e8:	4299      	cmp	r1, r3
 80295ea:	d11d      	bne.n	8029628 <__submore+0x4c>
 80295ec:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80295f0:	f7fc fd22 	bl	8026038 <_malloc_r>
 80295f4:	b918      	cbnz	r0, 80295fe <__submore+0x22>
 80295f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80295fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80295fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8029602:	63a3      	str	r3, [r4, #56]	; 0x38
 8029604:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8029608:	6360      	str	r0, [r4, #52]	; 0x34
 802960a:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 802960e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8029612:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 8029616:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 802961a:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 802961e:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 8029622:	6020      	str	r0, [r4, #0]
 8029624:	2000      	movs	r0, #0
 8029626:	e7e8      	b.n	80295fa <__submore+0x1e>
 8029628:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 802962a:	0077      	lsls	r7, r6, #1
 802962c:	463a      	mov	r2, r7
 802962e:	f003 fa10 	bl	802ca52 <_realloc_r>
 8029632:	4605      	mov	r5, r0
 8029634:	2800      	cmp	r0, #0
 8029636:	d0de      	beq.n	80295f6 <__submore+0x1a>
 8029638:	eb00 0806 	add.w	r8, r0, r6
 802963c:	4601      	mov	r1, r0
 802963e:	4632      	mov	r2, r6
 8029640:	4640      	mov	r0, r8
 8029642:	f7fc fc5d 	bl	8025f00 <memcpy>
 8029646:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 802964a:	f8c4 8000 	str.w	r8, [r4]
 802964e:	e7e9      	b.n	8029624 <__submore+0x48>

08029650 <_ungetc_r>:
 8029650:	b570      	push	{r4, r5, r6, lr}
 8029652:	4614      	mov	r4, r2
 8029654:	1c4a      	adds	r2, r1, #1
 8029656:	4606      	mov	r6, r0
 8029658:	460d      	mov	r5, r1
 802965a:	d103      	bne.n	8029664 <_ungetc_r+0x14>
 802965c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8029660:	4628      	mov	r0, r5
 8029662:	bd70      	pop	{r4, r5, r6, pc}
 8029664:	b118      	cbz	r0, 802966e <_ungetc_r+0x1e>
 8029666:	6983      	ldr	r3, [r0, #24]
 8029668:	b90b      	cbnz	r3, 802966e <_ungetc_r+0x1e>
 802966a:	f7fb ff71 	bl	8025550 <__sinit>
 802966e:	4b41      	ldr	r3, [pc, #260]	; (8029774 <_ungetc_r+0x124>)
 8029670:	429c      	cmp	r4, r3
 8029672:	d11d      	bne.n	80296b0 <_ungetc_r+0x60>
 8029674:	6874      	ldr	r4, [r6, #4]
 8029676:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8029678:	07db      	lsls	r3, r3, #31
 802967a:	d405      	bmi.n	8029688 <_ungetc_r+0x38>
 802967c:	89a3      	ldrh	r3, [r4, #12]
 802967e:	0598      	lsls	r0, r3, #22
 8029680:	d402      	bmi.n	8029688 <_ungetc_r+0x38>
 8029682:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8029684:	f7fc fb7a 	bl	8025d7c <__retarget_lock_acquire_recursive>
 8029688:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802968c:	f023 0320 	bic.w	r3, r3, #32
 8029690:	0759      	lsls	r1, r3, #29
 8029692:	81a3      	strh	r3, [r4, #12]
 8029694:	b29a      	uxth	r2, r3
 8029696:	d42d      	bmi.n	80296f4 <_ungetc_r+0xa4>
 8029698:	06d3      	lsls	r3, r2, #27
 802969a:	d413      	bmi.n	80296c4 <_ungetc_r+0x74>
 802969c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802969e:	07dd      	lsls	r5, r3, #31
 80296a0:	d4dc      	bmi.n	802965c <_ungetc_r+0xc>
 80296a2:	f412 7f00 	tst.w	r2, #512	; 0x200
 80296a6:	d1d9      	bne.n	802965c <_ungetc_r+0xc>
 80296a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80296aa:	f7fc fb69 	bl	8025d80 <__retarget_lock_release_recursive>
 80296ae:	e7d5      	b.n	802965c <_ungetc_r+0xc>
 80296b0:	4b31      	ldr	r3, [pc, #196]	; (8029778 <_ungetc_r+0x128>)
 80296b2:	429c      	cmp	r4, r3
 80296b4:	d101      	bne.n	80296ba <_ungetc_r+0x6a>
 80296b6:	68b4      	ldr	r4, [r6, #8]
 80296b8:	e7dd      	b.n	8029676 <_ungetc_r+0x26>
 80296ba:	4b30      	ldr	r3, [pc, #192]	; (802977c <_ungetc_r+0x12c>)
 80296bc:	429c      	cmp	r4, r3
 80296be:	bf08      	it	eq
 80296c0:	68f4      	ldreq	r4, [r6, #12]
 80296c2:	e7d8      	b.n	8029676 <_ungetc_r+0x26>
 80296c4:	0710      	lsls	r0, r2, #28
 80296c6:	d511      	bpl.n	80296ec <_ungetc_r+0x9c>
 80296c8:	4621      	mov	r1, r4
 80296ca:	4630      	mov	r0, r6
 80296cc:	f7fb fe9a 	bl	8025404 <_fflush_r>
 80296d0:	b130      	cbz	r0, 80296e0 <_ungetc_r+0x90>
 80296d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80296d4:	07d9      	lsls	r1, r3, #31
 80296d6:	d4c1      	bmi.n	802965c <_ungetc_r+0xc>
 80296d8:	89a3      	ldrh	r3, [r4, #12]
 80296da:	f413 7f00 	tst.w	r3, #512	; 0x200
 80296de:	e7e2      	b.n	80296a6 <_ungetc_r+0x56>
 80296e0:	89a3      	ldrh	r3, [r4, #12]
 80296e2:	60a0      	str	r0, [r4, #8]
 80296e4:	f023 0308 	bic.w	r3, r3, #8
 80296e8:	81a3      	strh	r3, [r4, #12]
 80296ea:	61a0      	str	r0, [r4, #24]
 80296ec:	89a3      	ldrh	r3, [r4, #12]
 80296ee:	f043 0304 	orr.w	r3, r3, #4
 80296f2:	81a3      	strh	r3, [r4, #12]
 80296f4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80296f6:	6862      	ldr	r2, [r4, #4]
 80296f8:	b2ed      	uxtb	r5, r5
 80296fa:	b1d3      	cbz	r3, 8029732 <_ungetc_r+0xe2>
 80296fc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80296fe:	4293      	cmp	r3, r2
 8029700:	dc05      	bgt.n	802970e <_ungetc_r+0xbe>
 8029702:	4621      	mov	r1, r4
 8029704:	4630      	mov	r0, r6
 8029706:	f7ff ff69 	bl	80295dc <__submore>
 802970a:	2800      	cmp	r0, #0
 802970c:	d1e1      	bne.n	80296d2 <_ungetc_r+0x82>
 802970e:	6823      	ldr	r3, [r4, #0]
 8029710:	1e5a      	subs	r2, r3, #1
 8029712:	6022      	str	r2, [r4, #0]
 8029714:	f803 5c01 	strb.w	r5, [r3, #-1]
 8029718:	6863      	ldr	r3, [r4, #4]
 802971a:	3301      	adds	r3, #1
 802971c:	6063      	str	r3, [r4, #4]
 802971e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8029720:	07da      	lsls	r2, r3, #31
 8029722:	d49d      	bmi.n	8029660 <_ungetc_r+0x10>
 8029724:	89a3      	ldrh	r3, [r4, #12]
 8029726:	059b      	lsls	r3, r3, #22
 8029728:	d49a      	bmi.n	8029660 <_ungetc_r+0x10>
 802972a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802972c:	f7fc fb28 	bl	8025d80 <__retarget_lock_release_recursive>
 8029730:	e796      	b.n	8029660 <_ungetc_r+0x10>
 8029732:	6e61      	ldr	r1, [r4, #100]	; 0x64
 8029734:	6920      	ldr	r0, [r4, #16]
 8029736:	6823      	ldr	r3, [r4, #0]
 8029738:	f001 0101 	and.w	r1, r1, #1
 802973c:	b160      	cbz	r0, 8029758 <_ungetc_r+0x108>
 802973e:	4298      	cmp	r0, r3
 8029740:	d20a      	bcs.n	8029758 <_ungetc_r+0x108>
 8029742:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8029746:	42a8      	cmp	r0, r5
 8029748:	d106      	bne.n	8029758 <_ungetc_r+0x108>
 802974a:	3b01      	subs	r3, #1
 802974c:	3201      	adds	r2, #1
 802974e:	6023      	str	r3, [r4, #0]
 8029750:	6062      	str	r2, [r4, #4]
 8029752:	2900      	cmp	r1, #0
 8029754:	d184      	bne.n	8029660 <_ungetc_r+0x10>
 8029756:	e7e5      	b.n	8029724 <_ungetc_r+0xd4>
 8029758:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 802975c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8029760:	6363      	str	r3, [r4, #52]	; 0x34
 8029762:	2303      	movs	r3, #3
 8029764:	63a3      	str	r3, [r4, #56]	; 0x38
 8029766:	4623      	mov	r3, r4
 8029768:	f803 5f46 	strb.w	r5, [r3, #70]!
 802976c:	6023      	str	r3, [r4, #0]
 802976e:	2301      	movs	r3, #1
 8029770:	6063      	str	r3, [r4, #4]
 8029772:	e7ee      	b.n	8029752 <_ungetc_r+0x102>
 8029774:	08032138 	.word	0x08032138
 8029778:	08032158 	.word	0x08032158
 802977c:	08032118 	.word	0x08032118

08029780 <ungetc>:
 8029780:	4b02      	ldr	r3, [pc, #8]	; (802978c <ungetc+0xc>)
 8029782:	460a      	mov	r2, r1
 8029784:	4601      	mov	r1, r0
 8029786:	6818      	ldr	r0, [r3, #0]
 8029788:	f7ff bf62 	b.w	8029650 <_ungetc_r>
 802978c:	200000bc 	.word	0x200000bc

08029790 <_ungetwc_r>:
 8029790:	6e53      	ldr	r3, [r2, #100]	; 0x64
 8029792:	07db      	lsls	r3, r3, #31
 8029794:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8029798:	4607      	mov	r7, r0
 802979a:	460e      	mov	r6, r1
 802979c:	4614      	mov	r4, r2
 802979e:	d405      	bmi.n	80297ac <_ungetwc_r+0x1c>
 80297a0:	8993      	ldrh	r3, [r2, #12]
 80297a2:	059d      	lsls	r5, r3, #22
 80297a4:	d402      	bmi.n	80297ac <_ungetwc_r+0x1c>
 80297a6:	6d90      	ldr	r0, [r2, #88]	; 0x58
 80297a8:	f7fc fae8 	bl	8025d7c <__retarget_lock_acquire_recursive>
 80297ac:	1c70      	adds	r0, r6, #1
 80297ae:	d10e      	bne.n	80297ce <_ungetwc_r+0x3e>
 80297b0:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 80297b4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80297b6:	07da      	lsls	r2, r3, #31
 80297b8:	d405      	bmi.n	80297c6 <_ungetwc_r+0x36>
 80297ba:	89a3      	ldrh	r3, [r4, #12]
 80297bc:	059b      	lsls	r3, r3, #22
 80297be:	d402      	bmi.n	80297c6 <_ungetwc_r+0x36>
 80297c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80297c2:	f7fc fadd 	bl	8025d80 <__retarget_lock_release_recursive>
 80297c6:	4630      	mov	r0, r6
 80297c8:	b002      	add	sp, #8
 80297ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80297ce:	f10d 0804 	add.w	r8, sp, #4
 80297d2:	4641      	mov	r1, r8
 80297d4:	f104 035c 	add.w	r3, r4, #92	; 0x5c
 80297d8:	4632      	mov	r2, r6
 80297da:	4638      	mov	r0, r7
 80297dc:	f000 f8c8 	bl	8029970 <_wcrtomb_r>
 80297e0:	1c41      	adds	r1, r0, #1
 80297e2:	4605      	mov	r5, r0
 80297e4:	d10c      	bne.n	8029800 <_ungetwc_r+0x70>
 80297e6:	89a3      	ldrh	r3, [r4, #12]
 80297e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80297ec:	81a3      	strh	r3, [r4, #12]
 80297ee:	e7df      	b.n	80297b0 <_ungetwc_r+0x20>
 80297f0:	f818 1005 	ldrb.w	r1, [r8, r5]
 80297f4:	4622      	mov	r2, r4
 80297f6:	4638      	mov	r0, r7
 80297f8:	f7ff ff2a 	bl	8029650 <_ungetc_r>
 80297fc:	3001      	adds	r0, #1
 80297fe:	d0d7      	beq.n	80297b0 <_ungetwc_r+0x20>
 8029800:	3d01      	subs	r5, #1
 8029802:	d2f5      	bcs.n	80297f0 <_ungetwc_r+0x60>
 8029804:	e7d6      	b.n	80297b4 <_ungetwc_r+0x24>
	...

08029808 <ungetwc>:
 8029808:	4b0f      	ldr	r3, [pc, #60]	; (8029848 <ungetwc+0x40>)
 802980a:	b570      	push	{r4, r5, r6, lr}
 802980c:	681d      	ldr	r5, [r3, #0]
 802980e:	4606      	mov	r6, r0
 8029810:	460c      	mov	r4, r1
 8029812:	b125      	cbz	r5, 802981e <ungetwc+0x16>
 8029814:	69ab      	ldr	r3, [r5, #24]
 8029816:	b913      	cbnz	r3, 802981e <ungetwc+0x16>
 8029818:	4628      	mov	r0, r5
 802981a:	f7fb fe99 	bl	8025550 <__sinit>
 802981e:	4b0b      	ldr	r3, [pc, #44]	; (802984c <ungetwc+0x44>)
 8029820:	429c      	cmp	r4, r3
 8029822:	d107      	bne.n	8029834 <ungetwc+0x2c>
 8029824:	686c      	ldr	r4, [r5, #4]
 8029826:	4622      	mov	r2, r4
 8029828:	4631      	mov	r1, r6
 802982a:	4628      	mov	r0, r5
 802982c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8029830:	f7ff bfae 	b.w	8029790 <_ungetwc_r>
 8029834:	4b06      	ldr	r3, [pc, #24]	; (8029850 <ungetwc+0x48>)
 8029836:	429c      	cmp	r4, r3
 8029838:	d101      	bne.n	802983e <ungetwc+0x36>
 802983a:	68ac      	ldr	r4, [r5, #8]
 802983c:	e7f3      	b.n	8029826 <ungetwc+0x1e>
 802983e:	4b05      	ldr	r3, [pc, #20]	; (8029854 <ungetwc+0x4c>)
 8029840:	429c      	cmp	r4, r3
 8029842:	bf08      	it	eq
 8029844:	68ec      	ldreq	r4, [r5, #12]
 8029846:	e7ee      	b.n	8029826 <ungetwc+0x1e>
 8029848:	200000bc 	.word	0x200000bc
 802984c:	08032138 	.word	0x08032138
 8029850:	08032158 	.word	0x08032158
 8029854:	08032118 	.word	0x08032118

08029858 <_vsniprintf_r>:
 8029858:	b530      	push	{r4, r5, lr}
 802985a:	4614      	mov	r4, r2
 802985c:	2c00      	cmp	r4, #0
 802985e:	b09b      	sub	sp, #108	; 0x6c
 8029860:	4605      	mov	r5, r0
 8029862:	461a      	mov	r2, r3
 8029864:	da05      	bge.n	8029872 <_vsniprintf_r+0x1a>
 8029866:	238b      	movs	r3, #139	; 0x8b
 8029868:	6003      	str	r3, [r0, #0]
 802986a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802986e:	b01b      	add	sp, #108	; 0x6c
 8029870:	bd30      	pop	{r4, r5, pc}
 8029872:	f44f 7302 	mov.w	r3, #520	; 0x208
 8029876:	f8ad 300c 	strh.w	r3, [sp, #12]
 802987a:	bf14      	ite	ne
 802987c:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
 8029880:	4623      	moveq	r3, r4
 8029882:	9302      	str	r3, [sp, #8]
 8029884:	9305      	str	r3, [sp, #20]
 8029886:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802988a:	9100      	str	r1, [sp, #0]
 802988c:	9104      	str	r1, [sp, #16]
 802988e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029892:	4669      	mov	r1, sp
 8029894:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8029896:	f003 f967 	bl	802cb68 <_svfiprintf_r>
 802989a:	1c43      	adds	r3, r0, #1
 802989c:	bfbc      	itt	lt
 802989e:	238b      	movlt	r3, #139	; 0x8b
 80298a0:	602b      	strlt	r3, [r5, #0]
 80298a2:	2c00      	cmp	r4, #0
 80298a4:	d0e3      	beq.n	802986e <_vsniprintf_r+0x16>
 80298a6:	9b00      	ldr	r3, [sp, #0]
 80298a8:	2200      	movs	r2, #0
 80298aa:	701a      	strb	r2, [r3, #0]
 80298ac:	e7df      	b.n	802986e <_vsniprintf_r+0x16>
	...

080298b0 <vsniprintf>:
 80298b0:	b507      	push	{r0, r1, r2, lr}
 80298b2:	9300      	str	r3, [sp, #0]
 80298b4:	4613      	mov	r3, r2
 80298b6:	460a      	mov	r2, r1
 80298b8:	4601      	mov	r1, r0
 80298ba:	4803      	ldr	r0, [pc, #12]	; (80298c8 <vsniprintf+0x18>)
 80298bc:	6800      	ldr	r0, [r0, #0]
 80298be:	f7ff ffcb 	bl	8029858 <_vsniprintf_r>
 80298c2:	b003      	add	sp, #12
 80298c4:	f85d fb04 	ldr.w	pc, [sp], #4
 80298c8:	200000bc 	.word	0x200000bc

080298cc <__swbuf_r>:
 80298cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80298ce:	460e      	mov	r6, r1
 80298d0:	4614      	mov	r4, r2
 80298d2:	4605      	mov	r5, r0
 80298d4:	b118      	cbz	r0, 80298de <__swbuf_r+0x12>
 80298d6:	6983      	ldr	r3, [r0, #24]
 80298d8:	b90b      	cbnz	r3, 80298de <__swbuf_r+0x12>
 80298da:	f7fb fe39 	bl	8025550 <__sinit>
 80298de:	4b21      	ldr	r3, [pc, #132]	; (8029964 <__swbuf_r+0x98>)
 80298e0:	429c      	cmp	r4, r3
 80298e2:	d12b      	bne.n	802993c <__swbuf_r+0x70>
 80298e4:	686c      	ldr	r4, [r5, #4]
 80298e6:	69a3      	ldr	r3, [r4, #24]
 80298e8:	60a3      	str	r3, [r4, #8]
 80298ea:	89a3      	ldrh	r3, [r4, #12]
 80298ec:	071a      	lsls	r2, r3, #28
 80298ee:	d52f      	bpl.n	8029950 <__swbuf_r+0x84>
 80298f0:	6923      	ldr	r3, [r4, #16]
 80298f2:	b36b      	cbz	r3, 8029950 <__swbuf_r+0x84>
 80298f4:	6923      	ldr	r3, [r4, #16]
 80298f6:	6820      	ldr	r0, [r4, #0]
 80298f8:	1ac0      	subs	r0, r0, r3
 80298fa:	6963      	ldr	r3, [r4, #20]
 80298fc:	b2f6      	uxtb	r6, r6
 80298fe:	4283      	cmp	r3, r0
 8029900:	4637      	mov	r7, r6
 8029902:	dc04      	bgt.n	802990e <__swbuf_r+0x42>
 8029904:	4621      	mov	r1, r4
 8029906:	4628      	mov	r0, r5
 8029908:	f7fb fd7c 	bl	8025404 <_fflush_r>
 802990c:	bb30      	cbnz	r0, 802995c <__swbuf_r+0x90>
 802990e:	68a3      	ldr	r3, [r4, #8]
 8029910:	3b01      	subs	r3, #1
 8029912:	60a3      	str	r3, [r4, #8]
 8029914:	6823      	ldr	r3, [r4, #0]
 8029916:	1c5a      	adds	r2, r3, #1
 8029918:	6022      	str	r2, [r4, #0]
 802991a:	701e      	strb	r6, [r3, #0]
 802991c:	6963      	ldr	r3, [r4, #20]
 802991e:	3001      	adds	r0, #1
 8029920:	4283      	cmp	r3, r0
 8029922:	d004      	beq.n	802992e <__swbuf_r+0x62>
 8029924:	89a3      	ldrh	r3, [r4, #12]
 8029926:	07db      	lsls	r3, r3, #31
 8029928:	d506      	bpl.n	8029938 <__swbuf_r+0x6c>
 802992a:	2e0a      	cmp	r6, #10
 802992c:	d104      	bne.n	8029938 <__swbuf_r+0x6c>
 802992e:	4621      	mov	r1, r4
 8029930:	4628      	mov	r0, r5
 8029932:	f7fb fd67 	bl	8025404 <_fflush_r>
 8029936:	b988      	cbnz	r0, 802995c <__swbuf_r+0x90>
 8029938:	4638      	mov	r0, r7
 802993a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802993c:	4b0a      	ldr	r3, [pc, #40]	; (8029968 <__swbuf_r+0x9c>)
 802993e:	429c      	cmp	r4, r3
 8029940:	d101      	bne.n	8029946 <__swbuf_r+0x7a>
 8029942:	68ac      	ldr	r4, [r5, #8]
 8029944:	e7cf      	b.n	80298e6 <__swbuf_r+0x1a>
 8029946:	4b09      	ldr	r3, [pc, #36]	; (802996c <__swbuf_r+0xa0>)
 8029948:	429c      	cmp	r4, r3
 802994a:	bf08      	it	eq
 802994c:	68ec      	ldreq	r4, [r5, #12]
 802994e:	e7ca      	b.n	80298e6 <__swbuf_r+0x1a>
 8029950:	4621      	mov	r1, r4
 8029952:	4628      	mov	r0, r5
 8029954:	f000 ff20 	bl	802a798 <__swsetup_r>
 8029958:	2800      	cmp	r0, #0
 802995a:	d0cb      	beq.n	80298f4 <__swbuf_r+0x28>
 802995c:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8029960:	e7ea      	b.n	8029938 <__swbuf_r+0x6c>
 8029962:	bf00      	nop
 8029964:	08032138 	.word	0x08032138
 8029968:	08032158 	.word	0x08032158
 802996c:	08032118 	.word	0x08032118

08029970 <_wcrtomb_r>:
 8029970:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029972:	4c09      	ldr	r4, [pc, #36]	; (8029998 <_wcrtomb_r+0x28>)
 8029974:	b085      	sub	sp, #20
 8029976:	f8d4 70e0 	ldr.w	r7, [r4, #224]	; 0xe0
 802997a:	4605      	mov	r5, r0
 802997c:	461e      	mov	r6, r3
 802997e:	b909      	cbnz	r1, 8029984 <_wcrtomb_r+0x14>
 8029980:	460a      	mov	r2, r1
 8029982:	a901      	add	r1, sp, #4
 8029984:	47b8      	blx	r7
 8029986:	1c43      	adds	r3, r0, #1
 8029988:	bf01      	itttt	eq
 802998a:	2300      	moveq	r3, #0
 802998c:	6033      	streq	r3, [r6, #0]
 802998e:	238a      	moveq	r3, #138	; 0x8a
 8029990:	602b      	streq	r3, [r5, #0]
 8029992:	b005      	add	sp, #20
 8029994:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029996:	bf00      	nop
 8029998:	20000120 	.word	0x20000120

0802999c <wcrtomb>:
 802999c:	4613      	mov	r3, r2
 802999e:	460a      	mov	r2, r1
 80299a0:	4601      	mov	r1, r0
 80299a2:	4802      	ldr	r0, [pc, #8]	; (80299ac <wcrtomb+0x10>)
 80299a4:	6800      	ldr	r0, [r0, #0]
 80299a6:	f7ff bfe3 	b.w	8029970 <_wcrtomb_r>
 80299aa:	bf00      	nop
 80299ac:	200000bc 	.word	0x200000bc

080299b0 <wcscoll>:
 80299b0:	f003 bfd0 	b.w	802d954 <wcscmp>

080299b4 <iso_year_adjust>:
 80299b4:	6942      	ldr	r2, [r0, #20]
 80299b6:	2a00      	cmp	r2, #0
 80299b8:	f240 736c 	movw	r3, #1900	; 0x76c
 80299bc:	bfa8      	it	ge
 80299be:	f06f 0363 	mvnge.w	r3, #99	; 0x63
 80299c2:	4413      	add	r3, r2
 80299c4:	0792      	lsls	r2, r2, #30
 80299c6:	d105      	bne.n	80299d4 <iso_year_adjust+0x20>
 80299c8:	2164      	movs	r1, #100	; 0x64
 80299ca:	fb93 f2f1 	sdiv	r2, r3, r1
 80299ce:	fb01 3212 	mls	r2, r1, r2, r3
 80299d2:	b9da      	cbnz	r2, 8029a0c <iso_year_adjust+0x58>
 80299d4:	f44f 72c8 	mov.w	r2, #400	; 0x190
 80299d8:	fb93 f1f2 	sdiv	r1, r3, r2
 80299dc:	fb02 3311 	mls	r3, r2, r1, r3
 80299e0:	fab3 f383 	clz	r3, r3
 80299e4:	095b      	lsrs	r3, r3, #5
 80299e6:	e9d0 0206 	ldrd	r0, r2, [r0, #24]
 80299ea:	0040      	lsls	r0, r0, #1
 80299ec:	eb00 1002 	add.w	r0, r0, r2, lsl #4
 80299f0:	4418      	add	r0, r3
 80299f2:	f241 63a2 	movw	r3, #5794	; 0x16a2
 80299f6:	4298      	cmp	r0, r3
 80299f8:	d03a      	beq.n	8029a70 <iso_year_adjust+0xbc>
 80299fa:	dc21      	bgt.n	8029a40 <iso_year_adjust+0x8c>
 80299fc:	2801      	cmp	r0, #1
 80299fe:	dc1a      	bgt.n	8029a36 <iso_year_adjust+0x82>
 8029a00:	2800      	cmp	r0, #0
 8029a02:	bfb4      	ite	lt
 8029a04:	2000      	movlt	r0, #0
 8029a06:	f04f 30ff 	movge.w	r0, #4294967295	; 0xffffffff
 8029a0a:	4770      	bx	lr
 8029a0c:	2301      	movs	r3, #1
 8029a0e:	e7ea      	b.n	80299e6 <iso_year_adjust+0x32>
 8029a10:	2817      	cmp	r0, #23
 8029a12:	d813      	bhi.n	8029a3c <iso_year_adjust+0x88>
 8029a14:	e8df f000 	tbb	[pc, r0]
 8029a18:	0c0c0c0c 	.word	0x0c0c0c0c
 8029a1c:	0c0c1212 	.word	0x0c0c1212
 8029a20:	12121212 	.word	0x12121212
 8029a24:	12121212 	.word	0x12121212
 8029a28:	0c0c1212 	.word	0x0c0c1212
 8029a2c:	0c0c1212 	.word	0x0c0c1212
 8029a30:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8029a34:	4770      	bx	lr
 8029a36:	380a      	subs	r0, #10
 8029a38:	2817      	cmp	r0, #23
 8029a3a:	d9e9      	bls.n	8029a10 <iso_year_adjust+0x5c>
 8029a3c:	2000      	movs	r0, #0
 8029a3e:	4770      	bx	lr
 8029a40:	f241 63b4 	movw	r3, #5812	; 0x16b4
 8029a44:	4298      	cmp	r0, r3
 8029a46:	dc06      	bgt.n	8029a56 <iso_year_adjust+0xa2>
 8029a48:	f241 63b1 	movw	r3, #5809	; 0x16b1
 8029a4c:	4298      	cmp	r0, r3
 8029a4e:	bfd4      	ite	le
 8029a50:	2000      	movle	r0, #0
 8029a52:	2001      	movgt	r0, #1
 8029a54:	4770      	bx	lr
 8029a56:	f5a0 50b6 	sub.w	r0, r0, #5824	; 0x16c0
 8029a5a:	3802      	subs	r0, #2
 8029a5c:	2815      	cmp	r0, #21
 8029a5e:	d8ed      	bhi.n	8029a3c <iso_year_adjust+0x88>
 8029a60:	2301      	movs	r3, #1
 8029a62:	4083      	lsls	r3, r0
 8029a64:	4803      	ldr	r0, [pc, #12]	; (8029a74 <iso_year_adjust+0xc0>)
 8029a66:	4018      	ands	r0, r3
 8029a68:	3800      	subs	r0, #0
 8029a6a:	bf18      	it	ne
 8029a6c:	2001      	movne	r0, #1
 8029a6e:	4770      	bx	lr
 8029a70:	2001      	movs	r0, #1
 8029a72:	4770      	bx	lr
 8029a74:	002a001f 	.word	0x002a001f

08029a78 <__ctloc>:
 8029a78:	b538      	push	{r3, r4, r5, lr}
 8029a7a:	2300      	movs	r3, #0
 8029a7c:	4615      	mov	r5, r2
 8029a7e:	f8c0 33fc 	str.w	r3, [r0, #1020]	; 0x3fc
 8029a82:	22ff      	movs	r2, #255	; 0xff
 8029a84:	4604      	mov	r4, r0
 8029a86:	f002 faf3 	bl	802c070 <mbstowcs>
 8029a8a:	1c43      	adds	r3, r0, #1
 8029a8c:	bf08      	it	eq
 8029a8e:	2000      	moveq	r0, #0
 8029a90:	6028      	str	r0, [r5, #0]
 8029a92:	4620      	mov	r0, r4
 8029a94:	bd38      	pop	{r3, r4, r5, pc}
	...

08029a98 <__strftime.isra.0>:
 8029a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029a9c:	f2ad 4dac 	subw	sp, sp, #1196	; 0x4ac
 8029aa0:	461d      	mov	r5, r3
 8029aa2:	2300      	movs	r3, #0
 8029aa4:	4607      	mov	r7, r0
 8029aa6:	460e      	mov	r6, r1
 8029aa8:	9303      	str	r3, [sp, #12]
 8029aaa:	461c      	mov	r4, r3
 8029aac:	f101 3bff 	add.w	fp, r1, #4294967295	; 0xffffffff
 8029ab0:	6813      	ldr	r3, [r2, #0]
 8029ab2:	2b00      	cmp	r3, #0
 8029ab4:	f000 84b3 	beq.w	802a41e <__strftime.isra.0+0x986>
 8029ab8:	2b25      	cmp	r3, #37	; 0x25
 8029aba:	d11d      	bne.n	8029af8 <__strftime.isra.0+0x60>
 8029abc:	6853      	ldr	r3, [r2, #4]
 8029abe:	2b30      	cmp	r3, #48	; 0x30
 8029ac0:	d024      	beq.n	8029b0c <__strftime.isra.0+0x74>
 8029ac2:	2b2b      	cmp	r3, #43	; 0x2b
 8029ac4:	d022      	beq.n	8029b0c <__strftime.isra.0+0x74>
 8029ac6:	f102 0804 	add.w	r8, r2, #4
 8029aca:	2300      	movs	r3, #0
 8029acc:	f8d8 2000 	ldr.w	r2, [r8]
 8029ad0:	3a31      	subs	r2, #49	; 0x31
 8029ad2:	2a08      	cmp	r2, #8
 8029ad4:	d81d      	bhi.n	8029b12 <__strftime.isra.0+0x7a>
 8029ad6:	4640      	mov	r0, r8
 8029ad8:	220a      	movs	r2, #10
 8029ada:	a90a      	add	r1, sp, #40	; 0x28
 8029adc:	9304      	str	r3, [sp, #16]
 8029ade:	f000 fd33 	bl	802a548 <wcstoul>
 8029ae2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8029ae6:	9b04      	ldr	r3, [sp, #16]
 8029ae8:	4681      	mov	r9, r0
 8029aea:	f8d8 2000 	ldr.w	r2, [r8]
 8029aee:	2a45      	cmp	r2, #69	; 0x45
 8029af0:	d112      	bne.n	8029b18 <__strftime.isra.0+0x80>
 8029af2:	f108 0804 	add.w	r8, r8, #4
 8029af6:	e011      	b.n	8029b1c <__strftime.isra.0+0x84>
 8029af8:	45a3      	cmp	fp, r4
 8029afa:	d802      	bhi.n	8029b02 <__strftime.isra.0+0x6a>
 8029afc:	2400      	movs	r4, #0
 8029afe:	f000 bc92 	b.w	802a426 <__strftime.isra.0+0x98e>
 8029b02:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 8029b06:	3204      	adds	r2, #4
 8029b08:	3401      	adds	r4, #1
 8029b0a:	e7d1      	b.n	8029ab0 <__strftime.isra.0+0x18>
 8029b0c:	f102 0808 	add.w	r8, r2, #8
 8029b10:	e7dc      	b.n	8029acc <__strftime.isra.0+0x34>
 8029b12:	f04f 0900 	mov.w	r9, #0
 8029b16:	e7e8      	b.n	8029aea <__strftime.isra.0+0x52>
 8029b18:	2a4f      	cmp	r2, #79	; 0x4f
 8029b1a:	d0ea      	beq.n	8029af2 <__strftime.isra.0+0x5a>
 8029b1c:	f8d8 0000 	ldr.w	r0, [r8]
 8029b20:	f1a0 0225 	sub.w	r2, r0, #37	; 0x25
 8029b24:	2a55      	cmp	r2, #85	; 0x55
 8029b26:	d8e9      	bhi.n	8029afc <__strftime.isra.0+0x64>
 8029b28:	a101      	add	r1, pc, #4	; (adr r1, 8029b30 <__strftime.isra.0+0x98>)
 8029b2a:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8029b2e:	bf00      	nop
 8029b30:	0802a415 	.word	0x0802a415
 8029b34:	08029afd 	.word	0x08029afd
 8029b38:	08029afd 	.word	0x08029afd
 8029b3c:	08029afd 	.word	0x08029afd
 8029b40:	08029afd 	.word	0x08029afd
 8029b44:	08029afd 	.word	0x08029afd
 8029b48:	08029afd 	.word	0x08029afd
 8029b4c:	08029afd 	.word	0x08029afd
 8029b50:	08029afd 	.word	0x08029afd
 8029b54:	08029afd 	.word	0x08029afd
 8029b58:	08029afd 	.word	0x08029afd
 8029b5c:	08029afd 	.word	0x08029afd
 8029b60:	08029afd 	.word	0x08029afd
 8029b64:	08029afd 	.word	0x08029afd
 8029b68:	08029afd 	.word	0x08029afd
 8029b6c:	08029afd 	.word	0x08029afd
 8029b70:	08029afd 	.word	0x08029afd
 8029b74:	08029afd 	.word	0x08029afd
 8029b78:	08029afd 	.word	0x08029afd
 8029b7c:	08029afd 	.word	0x08029afd
 8029b80:	08029afd 	.word	0x08029afd
 8029b84:	08029afd 	.word	0x08029afd
 8029b88:	08029afd 	.word	0x08029afd
 8029b8c:	08029afd 	.word	0x08029afd
 8029b90:	08029afd 	.word	0x08029afd
 8029b94:	08029afd 	.word	0x08029afd
 8029b98:	08029afd 	.word	0x08029afd
 8029b9c:	08029afd 	.word	0x08029afd
 8029ba0:	08029cc7 	.word	0x08029cc7
 8029ba4:	08029d21 	.word	0x08029d21
 8029ba8:	08029d99 	.word	0x08029d99
 8029bac:	08029e3b 	.word	0x08029e3b
 8029bb0:	08029afd 	.word	0x08029afd
 8029bb4:	08029e87 	.word	0x08029e87
 8029bb8:	08029f65 	.word	0x08029f65
 8029bbc:	0802a045 	.word	0x0802a045
 8029bc0:	0802a053 	.word	0x0802a053
 8029bc4:	08029afd 	.word	0x08029afd
 8029bc8:	08029afd 	.word	0x08029afd
 8029bcc:	08029afd 	.word	0x08029afd
 8029bd0:	0802a083 	.word	0x0802a083
 8029bd4:	08029afd 	.word	0x08029afd
 8029bd8:	08029afd 	.word	0x08029afd
 8029bdc:	0802a097 	.word	0x0802a097
 8029be0:	08029afd 	.word	0x08029afd
 8029be4:	0802a0e3 	.word	0x0802a0e3
 8029be8:	0802a1f9 	.word	0x0802a1f9
 8029bec:	0802a207 	.word	0x0802a207
 8029bf0:	0802a22f 	.word	0x0802a22f
 8029bf4:	0802a265 	.word	0x0802a265
 8029bf8:	0802a2d7 	.word	0x0802a2d7
 8029bfc:	08029d8f 	.word	0x08029d8f
 8029c00:	0802a303 	.word	0x0802a303
 8029c04:	0802a3c3 	.word	0x0802a3c3
 8029c08:	08029afd 	.word	0x08029afd
 8029c0c:	08029afd 	.word	0x08029afd
 8029c10:	08029afd 	.word	0x08029afd
 8029c14:	08029afd 	.word	0x08029afd
 8029c18:	08029afd 	.word	0x08029afd
 8029c1c:	08029afd 	.word	0x08029afd
 8029c20:	08029c89 	.word	0x08029c89
 8029c24:	08029cf5 	.word	0x08029cf5
 8029c28:	08029d4f 	.word	0x08029d4f
 8029c2c:	08029e15 	.word	0x08029e15
 8029c30:	08029e15 	.word	0x08029e15
 8029c34:	08029afd 	.word	0x08029afd
 8029c38:	08029ecb 	.word	0x08029ecb
 8029c3c:	08029cf5 	.word	0x08029cf5
 8029c40:	08029afd 	.word	0x08029afd
 8029c44:	0802a075 	.word	0x0802a075
 8029c48:	0802a045 	.word	0x0802a045
 8029c4c:	0802a053 	.word	0x0802a053
 8029c50:	0802a07d 	.word	0x0802a07d
 8029c54:	0802a087 	.word	0x0802a087
 8029c58:	08029afd 	.word	0x08029afd
 8029c5c:	0802a097 	.word	0x0802a097
 8029c60:	08029afd 	.word	0x08029afd
 8029c64:	08029d7b 	.word	0x08029d7b
 8029c68:	0802a0f7 	.word	0x0802a0f7
 8029c6c:	0802a1fd 	.word	0x0802a1fd
 8029c70:	0802a215 	.word	0x0802a215
 8029c74:	08029afd 	.word	0x08029afd
 8029c78:	0802a2cb 	.word	0x0802a2cb
 8029c7c:	08029d85 	.word	0x08029d85
 8029c80:	0802a2e7 	.word	0x0802a2e7
 8029c84:	0802a34d 	.word	0x0802a34d
 8029c88:	69ab      	ldr	r3, [r5, #24]
 8029c8a:	49aa      	ldr	r1, [pc, #680]	; (8029f34 <__strftime.isra.0+0x49c>)
 8029c8c:	3318      	adds	r3, #24
 8029c8e:	aa09      	add	r2, sp, #36	; 0x24
 8029c90:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8029c94:	a82a      	add	r0, sp, #168	; 0xa8
 8029c96:	f7ff feef 	bl	8029a78 <__ctloc>
 8029c9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029c9c:	3804      	subs	r0, #4
 8029c9e:	4423      	add	r3, r4
 8029ca0:	42a3      	cmp	r3, r4
 8029ca2:	d107      	bne.n	8029cb4 <__strftime.isra.0+0x21c>
 8029ca4:	f8d8 3000 	ldr.w	r3, [r8]
 8029ca8:	2b00      	cmp	r3, #0
 8029caa:	f000 83b8 	beq.w	802a41e <__strftime.isra.0+0x986>
 8029cae:	f108 0204 	add.w	r2, r8, #4
 8029cb2:	e6fd      	b.n	8029ab0 <__strftime.isra.0+0x18>
 8029cb4:	45a3      	cmp	fp, r4
 8029cb6:	f67f af21 	bls.w	8029afc <__strftime.isra.0+0x64>
 8029cba:	f850 2f04 	ldr.w	r2, [r0, #4]!
 8029cbe:	f847 2024 	str.w	r2, [r7, r4, lsl #2]
 8029cc2:	3401      	adds	r4, #1
 8029cc4:	e7ec      	b.n	8029ca0 <__strftime.isra.0+0x208>
 8029cc6:	69aa      	ldr	r2, [r5, #24]
 8029cc8:	4b9a      	ldr	r3, [pc, #616]	; (8029f34 <__strftime.isra.0+0x49c>)
 8029cca:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8029cce:	a82a      	add	r0, sp, #168	; 0xa8
 8029cd0:	6fd9      	ldr	r1, [r3, #124]	; 0x7c
 8029cd2:	aa09      	add	r2, sp, #36	; 0x24
 8029cd4:	f7ff fed0 	bl	8029a78 <__ctloc>
 8029cd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029cda:	3804      	subs	r0, #4
 8029cdc:	4423      	add	r3, r4
 8029cde:	42a3      	cmp	r3, r4
 8029ce0:	d0e0      	beq.n	8029ca4 <__strftime.isra.0+0x20c>
 8029ce2:	45a3      	cmp	fp, r4
 8029ce4:	f67f af0a 	bls.w	8029afc <__strftime.isra.0+0x64>
 8029ce8:	f850 2f04 	ldr.w	r2, [r0, #4]!
 8029cec:	f847 2024 	str.w	r2, [r7, r4, lsl #2]
 8029cf0:	3401      	adds	r4, #1
 8029cf2:	e7f4      	b.n	8029cde <__strftime.isra.0+0x246>
 8029cf4:	4b8f      	ldr	r3, [pc, #572]	; (8029f34 <__strftime.isra.0+0x49c>)
 8029cf6:	6929      	ldr	r1, [r5, #16]
 8029cf8:	aa09      	add	r2, sp, #36	; 0x24
 8029cfa:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8029cfe:	a82a      	add	r0, sp, #168	; 0xa8
 8029d00:	f7ff feba 	bl	8029a78 <__ctloc>
 8029d04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029d06:	3804      	subs	r0, #4
 8029d08:	4423      	add	r3, r4
 8029d0a:	42a3      	cmp	r3, r4
 8029d0c:	d0ca      	beq.n	8029ca4 <__strftime.isra.0+0x20c>
 8029d0e:	45a3      	cmp	fp, r4
 8029d10:	f67f aef4 	bls.w	8029afc <__strftime.isra.0+0x64>
 8029d14:	f850 2f04 	ldr.w	r2, [r0, #4]!
 8029d18:	f847 2024 	str.w	r2, [r7, r4, lsl #2]
 8029d1c:	3401      	adds	r4, #1
 8029d1e:	e7f4      	b.n	8029d0a <__strftime.isra.0+0x272>
 8029d20:	692b      	ldr	r3, [r5, #16]
 8029d22:	4984      	ldr	r1, [pc, #528]	; (8029f34 <__strftime.isra.0+0x49c>)
 8029d24:	330c      	adds	r3, #12
 8029d26:	aa09      	add	r2, sp, #36	; 0x24
 8029d28:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8029d2c:	a82a      	add	r0, sp, #168	; 0xa8
 8029d2e:	f7ff fea3 	bl	8029a78 <__ctloc>
 8029d32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029d34:	3804      	subs	r0, #4
 8029d36:	4423      	add	r3, r4
 8029d38:	42a3      	cmp	r3, r4
 8029d3a:	d0b3      	beq.n	8029ca4 <__strftime.isra.0+0x20c>
 8029d3c:	45a3      	cmp	fp, r4
 8029d3e:	f67f aedd 	bls.w	8029afc <__strftime.isra.0+0x64>
 8029d42:	f850 2f04 	ldr.w	r2, [r0, #4]!
 8029d46:	f847 2024 	str.w	r2, [r7, r4, lsl #2]
 8029d4a:	3401      	adds	r4, #1
 8029d4c:	e7f4      	b.n	8029d38 <__strftime.isra.0+0x2a0>
 8029d4e:	4b79      	ldr	r3, [pc, #484]	; (8029f34 <__strftime.isra.0+0x49c>)
 8029d50:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 8029d54:	aa09      	add	r2, sp, #36	; 0x24
 8029d56:	a82a      	add	r0, sp, #168	; 0xa8
 8029d58:	f7ff fe8e 	bl	8029a78 <__ctloc>
 8029d5c:	6803      	ldr	r3, [r0, #0]
 8029d5e:	2b00      	cmp	r3, #0
 8029d60:	d0a0      	beq.n	8029ca4 <__strftime.isra.0+0x20c>
 8029d62:	462b      	mov	r3, r5
 8029d64:	4602      	mov	r2, r0
 8029d66:	1b31      	subs	r1, r6, r4
 8029d68:	eb07 0084 	add.w	r0, r7, r4, lsl #2
 8029d6c:	f7ff fe94 	bl	8029a98 <__strftime.isra.0>
 8029d70:	2800      	cmp	r0, #0
 8029d72:	f77f aec3 	ble.w	8029afc <__strftime.isra.0+0x64>
 8029d76:	4404      	add	r4, r0
 8029d78:	e794      	b.n	8029ca4 <__strftime.isra.0+0x20c>
 8029d7a:	4b6e      	ldr	r3, [pc, #440]	; (8029f34 <__strftime.isra.0+0x49c>)
 8029d7c:	aa09      	add	r2, sp, #36	; 0x24
 8029d7e:	f8d3 10e4 	ldr.w	r1, [r3, #228]	; 0xe4
 8029d82:	e7e8      	b.n	8029d56 <__strftime.isra.0+0x2be>
 8029d84:	4b6b      	ldr	r3, [pc, #428]	; (8029f34 <__strftime.isra.0+0x49c>)
 8029d86:	aa09      	add	r2, sp, #36	; 0x24
 8029d88:	f8d3 109c 	ldr.w	r1, [r3, #156]	; 0x9c
 8029d8c:	e7e3      	b.n	8029d56 <__strftime.isra.0+0x2be>
 8029d8e:	4b69      	ldr	r3, [pc, #420]	; (8029f34 <__strftime.isra.0+0x49c>)
 8029d90:	aa09      	add	r2, sp, #36	; 0x24
 8029d92:	f8d3 1098 	ldr.w	r1, [r3, #152]	; 0x98
 8029d96:	e7de      	b.n	8029d56 <__strftime.isra.0+0x2be>
 8029d98:	4967      	ldr	r1, [pc, #412]	; (8029f38 <__strftime.isra.0+0x4a0>)
 8029d9a:	f8d5 a014 	ldr.w	sl, [r5, #20]
 8029d9e:	458a      	cmp	sl, r1
 8029da0:	bfac      	ite	ge
 8029da2:	2100      	movge	r1, #0
 8029da4:	2101      	movlt	r1, #1
 8029da6:	f1ba 0f00 	cmp.w	sl, #0
 8029daa:	db0f      	blt.n	8029dcc <__strftime.isra.0+0x334>
 8029dac:	2064      	movs	r0, #100	; 0x64
 8029dae:	fb9a f0f0 	sdiv	r0, sl, r0
 8029db2:	3013      	adds	r0, #19
 8029db4:	b1b3      	cbz	r3, 8029de4 <__strftime.isra.0+0x34c>
 8029db6:	2863      	cmp	r0, #99	; 0x63
 8029db8:	dd2a      	ble.n	8029e10 <__strftime.isra.0+0x378>
 8029dba:	f8df c184 	ldr.w	ip, [pc, #388]	; 8029f40 <__strftime.isra.0+0x4a8>
 8029dbe:	4a5f      	ldr	r2, [pc, #380]	; (8029f3c <__strftime.isra.0+0x4a4>)
 8029dc0:	2b2b      	cmp	r3, #43	; 0x2b
 8029dc2:	bf18      	it	ne
 8029dc4:	4662      	movne	r2, ip
 8029dc6:	f8df c194 	ldr.w	ip, [pc, #404]	; 8029f5c <__strftime.isra.0+0x4c4>
 8029dca:	e00e      	b.n	8029dea <__strftime.isra.0+0x352>
 8029dcc:	f20a 706c 	addw	r0, sl, #1900	; 0x76c
 8029dd0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8029dd4:	f000 fd4e 	bl	802a874 <abs>
 8029dd8:	2264      	movs	r2, #100	; 0x64
 8029dda:	e9dd 3104 	ldrd	r3, r1, [sp, #16]
 8029dde:	fb90 f0f2 	sdiv	r0, r0, r2
 8029de2:	e7e7      	b.n	8029db4 <__strftime.isra.0+0x31c>
 8029de4:	4a56      	ldr	r2, [pc, #344]	; (8029f40 <__strftime.isra.0+0x4a8>)
 8029de6:	f8df c178 	ldr.w	ip, [pc, #376]	; 8029f60 <__strftime.isra.0+0x4c8>
 8029dea:	4b56      	ldr	r3, [pc, #344]	; (8029f44 <__strftime.isra.0+0x4ac>)
 8029dec:	9001      	str	r0, [sp, #4]
 8029dee:	f1b9 0f02 	cmp.w	r9, #2
 8029df2:	bf2c      	ite	cs
 8029df4:	ebc1 0109 	rsbcs	r1, r1, r9
 8029df8:	f1c1 0102 	rsbcc	r1, r1, #2
 8029dfc:	9100      	str	r1, [sp, #0]
 8029dfe:	494e      	ldr	r1, [pc, #312]	; (8029f38 <__strftime.isra.0+0x4a0>)
 8029e00:	458a      	cmp	sl, r1
 8029e02:	bfa8      	it	ge
 8029e04:	4613      	movge	r3, r2
 8029e06:	4662      	mov	r2, ip
 8029e08:	1b31      	subs	r1, r6, r4
 8029e0a:	eb07 0084 	add.w	r0, r7, r4, lsl #2
 8029e0e:	e029      	b.n	8029e64 <__strftime.isra.0+0x3cc>
 8029e10:	4a4b      	ldr	r2, [pc, #300]	; (8029f40 <__strftime.isra.0+0x4a8>)
 8029e12:	e7d8      	b.n	8029dc6 <__strftime.isra.0+0x32e>
 8029e14:	494c      	ldr	r1, [pc, #304]	; (8029f48 <__strftime.isra.0+0x4b0>)
 8029e16:	4a4d      	ldr	r2, [pc, #308]	; (8029f4c <__strftime.isra.0+0x4b4>)
 8029e18:	68eb      	ldr	r3, [r5, #12]
 8029e1a:	2864      	cmp	r0, #100	; 0x64
 8029e1c:	bf08      	it	eq
 8029e1e:	460a      	moveq	r2, r1
 8029e20:	1b31      	subs	r1, r6, r4
 8029e22:	eb07 0084 	add.w	r0, r7, r4, lsl #2
 8029e26:	f003 fcb7 	bl	802d798 <swprintf>
 8029e2a:	2800      	cmp	r0, #0
 8029e2c:	f6ff ae66 	blt.w	8029afc <__strftime.isra.0+0x64>
 8029e30:	4404      	add	r4, r0
 8029e32:	42a6      	cmp	r6, r4
 8029e34:	f63f af36 	bhi.w	8029ca4 <__strftime.isra.0+0x20c>
 8029e38:	e660      	b.n	8029afc <__strftime.isra.0+0x64>
 8029e3a:	6968      	ldr	r0, [r5, #20]
 8029e3c:	692b      	ldr	r3, [r5, #16]
 8029e3e:	f8d5 a00c 	ldr.w	sl, [r5, #12]
 8029e42:	2800      	cmp	r0, #0
 8029e44:	eb07 0984 	add.w	r9, r7, r4, lsl #2
 8029e48:	eba6 0104 	sub.w	r1, r6, r4
 8029e4c:	f103 0301 	add.w	r3, r3, #1
 8029e50:	db0b      	blt.n	8029e6a <__strftime.isra.0+0x3d2>
 8029e52:	2264      	movs	r2, #100	; 0x64
 8029e54:	fb90 fcf2 	sdiv	ip, r0, r2
 8029e58:	fb02 001c 	mls	r0, r2, ip, r0
 8029e5c:	4a3c      	ldr	r2, [pc, #240]	; (8029f50 <__strftime.isra.0+0x4b8>)
 8029e5e:	e9cd a000 	strd	sl, r0, [sp]
 8029e62:	4648      	mov	r0, r9
 8029e64:	f003 fc98 	bl	802d798 <swprintf>
 8029e68:	e7df      	b.n	8029e2a <__strftime.isra.0+0x392>
 8029e6a:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 8029e6e:	e9cd 1304 	strd	r1, r3, [sp, #16]
 8029e72:	f000 fcff 	bl	802a874 <abs>
 8029e76:	2264      	movs	r2, #100	; 0x64
 8029e78:	e9dd 1304 	ldrd	r1, r3, [sp, #16]
 8029e7c:	fb90 fcf2 	sdiv	ip, r0, r2
 8029e80:	fb0c 0012 	mls	r0, ip, r2, r0
 8029e84:	e7ea      	b.n	8029e5c <__strftime.isra.0+0x3c4>
 8029e86:	2225      	movs	r2, #37	; 0x25
 8029e88:	920a      	str	r2, [sp, #40]	; 0x28
 8029e8a:	b17b      	cbz	r3, 8029eac <__strftime.isra.0+0x414>
 8029e8c:	f1b9 0f06 	cmp.w	r9, #6
 8029e90:	bf38      	it	cc
 8029e92:	f04f 0906 	movcc.w	r9, #6
 8029e96:	930b      	str	r3, [sp, #44]	; 0x2c
 8029e98:	f1b9 0306 	subs.w	r3, r9, #6
 8029e9c:	d10a      	bne.n	8029eb4 <__strftime.isra.0+0x41c>
 8029e9e:	a80c      	add	r0, sp, #48	; 0x30
 8029ea0:	492c      	ldr	r1, [pc, #176]	; (8029f54 <__strftime.isra.0+0x4bc>)
 8029ea2:	f003 fd63 	bl	802d96c <wcscpy>
 8029ea6:	462b      	mov	r3, r5
 8029ea8:	aa0a      	add	r2, sp, #40	; 0x28
 8029eaa:	e75c      	b.n	8029d66 <__strftime.isra.0+0x2ce>
 8029eac:	232b      	movs	r3, #43	; 0x2b
 8029eae:	f04f 090a 	mov.w	r9, #10
 8029eb2:	e7f0      	b.n	8029e96 <__strftime.isra.0+0x3fe>
 8029eb4:	4a28      	ldr	r2, [pc, #160]	; (8029f58 <__strftime.isra.0+0x4c0>)
 8029eb6:	211e      	movs	r1, #30
 8029eb8:	a80c      	add	r0, sp, #48	; 0x30
 8029eba:	f003 fc6d 	bl	802d798 <swprintf>
 8029ebe:	2800      	cmp	r0, #0
 8029ec0:	dded      	ble.n	8029e9e <__strftime.isra.0+0x406>
 8029ec2:	ab0c      	add	r3, sp, #48	; 0x30
 8029ec4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8029ec8:	e7ea      	b.n	8029ea0 <__strftime.isra.0+0x408>
 8029eca:	4628      	mov	r0, r5
 8029ecc:	f7ff fd72 	bl	80299b4 <iso_year_adjust>
 8029ed0:	4681      	mov	r9, r0
 8029ed2:	6968      	ldr	r0, [r5, #20]
 8029ed4:	2800      	cmp	r0, #0
 8029ed6:	db11      	blt.n	8029efc <__strftime.isra.0+0x464>
 8029ed8:	2364      	movs	r3, #100	; 0x64
 8029eda:	fb90 f2f3 	sdiv	r2, r0, r3
 8029ede:	fb03 0012 	mls	r0, r3, r2, r0
 8029ee2:	2264      	movs	r2, #100	; 0x64
 8029ee4:	4481      	add	r9, r0
 8029ee6:	fb99 f3f2 	sdiv	r3, r9, r2
 8029eea:	fb02 9913 	mls	r9, r2, r3, r9
 8029eee:	4491      	add	r9, r2
 8029ef0:	fbb9 f3f2 	udiv	r3, r9, r2
 8029ef4:	fb02 9313 	mls	r3, r2, r3, r9
 8029ef8:	4a13      	ldr	r2, [pc, #76]	; (8029f48 <__strftime.isra.0+0x4b0>)
 8029efa:	e791      	b.n	8029e20 <__strftime.isra.0+0x388>
 8029efc:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 8029f00:	f000 fcb8 	bl	802a874 <abs>
 8029f04:	2364      	movs	r3, #100	; 0x64
 8029f06:	f1b9 0f00 	cmp.w	r9, #0
 8029f0a:	fb90 f2f3 	sdiv	r2, r0, r3
 8029f0e:	fb02 0013 	mls	r0, r2, r3, r0
 8029f12:	da07      	bge.n	8029f24 <__strftime.isra.0+0x48c>
 8029f14:	696a      	ldr	r2, [r5, #20]
 8029f16:	f2a3 73cf 	subw	r3, r3, #1999	; 0x7cf
 8029f1a:	429a      	cmp	r2, r3
 8029f1c:	bfb8      	it	lt
 8029f1e:	f04f 0901 	movlt.w	r9, #1
 8029f22:	e7de      	b.n	8029ee2 <__strftime.isra.0+0x44a>
 8029f24:	d0dd      	beq.n	8029ee2 <__strftime.isra.0+0x44a>
 8029f26:	696a      	ldr	r2, [r5, #20]
 8029f28:	4b03      	ldr	r3, [pc, #12]	; (8029f38 <__strftime.isra.0+0x4a0>)
 8029f2a:	429a      	cmp	r2, r3
 8029f2c:	bfb8      	it	lt
 8029f2e:	f04f 39ff 	movlt.w	r9, #4294967295	; 0xffffffff
 8029f32:	e7d6      	b.n	8029ee2 <__strftime.isra.0+0x44a>
 8029f34:	0803298c 	.word	0x0803298c
 8029f38:	fffff894 	.word	0xfffff894
 8029f3c:	0803284f 	.word	0x0803284f
 8029f40:	08032cb9 	.word	0x08032cb9
 8029f44:	08032f0e 	.word	0x08032f0e
 8029f48:	08032b34 	.word	0x08032b34
 8029f4c:	08032afc 	.word	0x08032afc
 8029f50:	08032b0c 	.word	0x08032b0c
 8029f54:	08032b58 	.word	0x08032b58
 8029f58:	08032b48 	.word	0x08032b48
 8029f5c:	08032adc 	.word	0x08032adc
 8029f60:	08032ac0 	.word	0x08032ac0
 8029f64:	4ab6      	ldr	r2, [pc, #728]	; (802a240 <__strftime.isra.0+0x7a8>)
 8029f66:	9306      	str	r3, [sp, #24]
 8029f68:	696b      	ldr	r3, [r5, #20]
 8029f6a:	9304      	str	r3, [sp, #16]
 8029f6c:	4293      	cmp	r3, r2
 8029f6e:	bfac      	ite	ge
 8029f70:	2300      	movge	r3, #0
 8029f72:	2301      	movlt	r3, #1
 8029f74:	4628      	mov	r0, r5
 8029f76:	9305      	str	r3, [sp, #20]
 8029f78:	f7ff fd1c 	bl	80299b4 <iso_year_adjust>
 8029f7c:	9b04      	ldr	r3, [sp, #16]
 8029f7e:	2b00      	cmp	r3, #0
 8029f80:	4682      	mov	sl, r0
 8029f82:	9b06      	ldr	r3, [sp, #24]
 8029f84:	db2b      	blt.n	8029fde <__strftime.isra.0+0x546>
 8029f86:	9904      	ldr	r1, [sp, #16]
 8029f88:	2264      	movs	r2, #100	; 0x64
 8029f8a:	fb91 f2f2 	sdiv	r2, r1, r2
 8029f8e:	3213      	adds	r2, #19
 8029f90:	6968      	ldr	r0, [r5, #20]
 8029f92:	2800      	cmp	r0, #0
 8029f94:	db2f      	blt.n	8029ff6 <__strftime.isra.0+0x55e>
 8029f96:	f04f 0c64 	mov.w	ip, #100	; 0x64
 8029f9a:	fb90 fefc 	sdiv	lr, r0, ip
 8029f9e:	fb0c 0c1e 	mls	ip, ip, lr, r0
 8029fa2:	f1ba 0f00 	cmp.w	sl, #0
 8029fa6:	da35      	bge.n	802a014 <__strftime.isra.0+0x57c>
 8029fa8:	49a6      	ldr	r1, [pc, #664]	; (802a244 <__strftime.isra.0+0x7ac>)
 8029faa:	6968      	ldr	r0, [r5, #20]
 8029fac:	4288      	cmp	r0, r1
 8029fae:	db3d      	blt.n	802a02c <__strftime.isra.0+0x594>
 8029fb0:	44e2      	add	sl, ip
 8029fb2:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
 8029fb6:	d13e      	bne.n	802a036 <__strftime.isra.0+0x59e>
 8029fb8:	3a01      	subs	r2, #1
 8029fba:	f04f 0a63 	mov.w	sl, #99	; 0x63
 8029fbe:	2064      	movs	r0, #100	; 0x64
 8029fc0:	fb00 aa02 	mla	sl, r0, r2, sl
 8029fc4:	9a05      	ldr	r2, [sp, #20]
 8029fc6:	2a00      	cmp	r2, #0
 8029fc8:	f000 81a6 	beq.w	802a318 <__strftime.isra.0+0x880>
 8029fcc:	222d      	movs	r2, #45	; 0x2d
 8029fce:	920a      	str	r2, [sp, #40]	; 0x28
 8029fd0:	f1b9 0f00 	cmp.w	r9, #0
 8029fd4:	d001      	beq.n	8029fda <__strftime.isra.0+0x542>
 8029fd6:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8029fda:	aa0b      	add	r2, sp, #44	; 0x2c
 8029fdc:	e1a5      	b.n	802a32a <__strftime.isra.0+0x892>
 8029fde:	9306      	str	r3, [sp, #24]
 8029fe0:	9b04      	ldr	r3, [sp, #16]
 8029fe2:	f203 706c 	addw	r0, r3, #1900	; 0x76c
 8029fe6:	f000 fc45 	bl	802a874 <abs>
 8029fea:	f04f 0c64 	mov.w	ip, #100	; 0x64
 8029fee:	9b06      	ldr	r3, [sp, #24]
 8029ff0:	fb90 f2fc 	sdiv	r2, r0, ip
 8029ff4:	e7cc      	b.n	8029f90 <__strftime.isra.0+0x4f8>
 8029ff6:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 8029ffa:	e9cd 3206 	strd	r3, r2, [sp, #24]
 8029ffe:	f000 fc39 	bl	802a874 <abs>
 802a002:	f04f 0c64 	mov.w	ip, #100	; 0x64
 802a006:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 802a00a:	fb90 fefc 	sdiv	lr, r0, ip
 802a00e:	fb0e 0c1c 	mls	ip, lr, ip, r0
 802a012:	e7c6      	b.n	8029fa2 <__strftime.isra.0+0x50a>
 802a014:	d0cc      	beq.n	8029fb0 <__strftime.isra.0+0x518>
 802a016:	498a      	ldr	r1, [pc, #552]	; (802a240 <__strftime.isra.0+0x7a8>)
 802a018:	9804      	ldr	r0, [sp, #16]
 802a01a:	4288      	cmp	r0, r1
 802a01c:	bfb4      	ite	lt
 802a01e:	2101      	movlt	r1, #1
 802a020:	2100      	movge	r1, #0
 802a022:	9105      	str	r1, [sp, #20]
 802a024:	bfb8      	it	lt
 802a026:	f04f 3aff 	movlt.w	sl, #4294967295	; 0xffffffff
 802a02a:	e7c1      	b.n	8029fb0 <__strftime.isra.0+0x518>
 802a02c:	f04f 0a01 	mov.w	sl, #1
 802a030:	f8cd a014 	str.w	sl, [sp, #20]
 802a034:	e7bc      	b.n	8029fb0 <__strftime.isra.0+0x518>
 802a036:	f1ba 0f64 	cmp.w	sl, #100	; 0x64
 802a03a:	bf04      	itt	eq
 802a03c:	3201      	addeq	r2, #1
 802a03e:	f04f 0a00 	moveq.w	sl, #0
 802a042:	e7bc      	b.n	8029fbe <__strftime.isra.0+0x526>
 802a044:	4980      	ldr	r1, [pc, #512]	; (802a248 <__strftime.isra.0+0x7b0>)
 802a046:	4a81      	ldr	r2, [pc, #516]	; (802a24c <__strftime.isra.0+0x7b4>)
 802a048:	68ab      	ldr	r3, [r5, #8]
 802a04a:	286b      	cmp	r0, #107	; 0x6b
 802a04c:	bf08      	it	eq
 802a04e:	460a      	moveq	r2, r1
 802a050:	e6e6      	b.n	8029e20 <__strftime.isra.0+0x388>
 802a052:	68ab      	ldr	r3, [r5, #8]
 802a054:	b163      	cbz	r3, 802a070 <__strftime.isra.0+0x5d8>
 802a056:	2b0c      	cmp	r3, #12
 802a058:	d004      	beq.n	802a064 <__strftime.isra.0+0x5cc>
 802a05a:	210c      	movs	r1, #12
 802a05c:	fb93 f2f1 	sdiv	r2, r3, r1
 802a060:	fb01 3312 	mls	r3, r1, r2, r3
 802a064:	4979      	ldr	r1, [pc, #484]	; (802a24c <__strftime.isra.0+0x7b4>)
 802a066:	4a78      	ldr	r2, [pc, #480]	; (802a248 <__strftime.isra.0+0x7b0>)
 802a068:	2849      	cmp	r0, #73	; 0x49
 802a06a:	bf08      	it	eq
 802a06c:	460a      	moveq	r2, r1
 802a06e:	e6d7      	b.n	8029e20 <__strftime.isra.0+0x388>
 802a070:	230c      	movs	r3, #12
 802a072:	e7f7      	b.n	802a064 <__strftime.isra.0+0x5cc>
 802a074:	69eb      	ldr	r3, [r5, #28]
 802a076:	4a76      	ldr	r2, [pc, #472]	; (802a250 <__strftime.isra.0+0x7b8>)
 802a078:	3301      	adds	r3, #1
 802a07a:	e6d1      	b.n	8029e20 <__strftime.isra.0+0x388>
 802a07c:	692b      	ldr	r3, [r5, #16]
 802a07e:	3301      	adds	r3, #1
 802a080:	e73a      	b.n	8029ef8 <__strftime.isra.0+0x460>
 802a082:	686b      	ldr	r3, [r5, #4]
 802a084:	e738      	b.n	8029ef8 <__strftime.isra.0+0x460>
 802a086:	455c      	cmp	r4, fp
 802a088:	f4bf ad38 	bcs.w	8029afc <__strftime.isra.0+0x64>
 802a08c:	230a      	movs	r3, #10
 802a08e:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 802a092:	3401      	adds	r4, #1
 802a094:	e606      	b.n	8029ca4 <__strftime.isra.0+0x20c>
 802a096:	68ab      	ldr	r3, [r5, #8]
 802a098:	2b0b      	cmp	r3, #11
 802a09a:	4b6e      	ldr	r3, [pc, #440]	; (802a254 <__strftime.isra.0+0x7bc>)
 802a09c:	bfd4      	ite	le
 802a09e:	2200      	movle	r2, #0
 802a0a0:	2201      	movgt	r2, #1
 802a0a2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802a0a6:	a82a      	add	r0, sp, #168	; 0xa8
 802a0a8:	f8d3 10a4 	ldr.w	r1, [r3, #164]	; 0xa4
 802a0ac:	aa09      	add	r2, sp, #36	; 0x24
 802a0ae:	f7ff fce3 	bl	8029a78 <__ctloc>
 802a0b2:	f04f 0900 	mov.w	r9, #0
 802a0b6:	4682      	mov	sl, r0
 802a0b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a0ba:	4599      	cmp	r9, r3
 802a0bc:	f4bf adf2 	bcs.w	8029ca4 <__strftime.isra.0+0x20c>
 802a0c0:	45a3      	cmp	fp, r4
 802a0c2:	f67f ad1b 	bls.w	8029afc <__strftime.isra.0+0x64>
 802a0c6:	f8d8 3000 	ldr.w	r3, [r8]
 802a0ca:	f85a 0029 	ldr.w	r0, [sl, r9, lsl #2]
 802a0ce:	2b50      	cmp	r3, #80	; 0x50
 802a0d0:	d101      	bne.n	802a0d6 <__strftime.isra.0+0x63e>
 802a0d2:	f7ff f8d7 	bl	8029284 <towlower>
 802a0d6:	f847 0024 	str.w	r0, [r7, r4, lsl #2]
 802a0da:	f109 0901 	add.w	r9, r9, #1
 802a0de:	3401      	adds	r4, #1
 802a0e0:	e7ea      	b.n	802a0b8 <__strftime.isra.0+0x620>
 802a0e2:	686b      	ldr	r3, [r5, #4]
 802a0e4:	9300      	str	r3, [sp, #0]
 802a0e6:	4a5c      	ldr	r2, [pc, #368]	; (802a258 <__strftime.isra.0+0x7c0>)
 802a0e8:	68ab      	ldr	r3, [r5, #8]
 802a0ea:	1b31      	subs	r1, r6, r4
 802a0ec:	eb07 0084 	add.w	r0, r7, r4, lsl #2
 802a0f0:	f003 fb52 	bl	802d798 <swprintf>
 802a0f4:	e699      	b.n	8029e2a <__strftime.isra.0+0x392>
 802a0f6:	6a2b      	ldr	r3, [r5, #32]
 802a0f8:	2b00      	cmp	r3, #0
 802a0fa:	db7a      	blt.n	802a1f2 <__strftime.isra.0+0x75a>
 802a0fc:	f7ff f8da 	bl	80292b4 <__tz_lock>
 802a100:	9b03      	ldr	r3, [sp, #12]
 802a102:	b90b      	cbnz	r3, 802a108 <__strftime.isra.0+0x670>
 802a104:	f7ff f8e2 	bl	80292cc <_tzset_unlocked>
 802a108:	f001 ff44 	bl	802bf94 <__gettzinfo>
 802a10c:	6a2b      	ldr	r3, [r5, #32]
 802a10e:	2b00      	cmp	r3, #0
 802a110:	bfd4      	ite	le
 802a112:	2200      	movle	r2, #0
 802a114:	2201      	movgt	r2, #1
 802a116:	2328      	movs	r3, #40	; 0x28
 802a118:	fb02 3303 	mla	r3, r2, r3, r3
 802a11c:	58c3      	ldr	r3, [r0, r3]
 802a11e:	f1c3 0900 	rsb	r9, r3, #0
 802a122:	f7ff f8cd 	bl	80292c0 <__tz_unlock>
 802a126:	2301      	movs	r3, #1
 802a128:	9303      	str	r3, [sp, #12]
 802a12a:	696a      	ldr	r2, [r5, #20]
 802a12c:	f1b2 0345 	subs.w	r3, r2, #69	; 0x45
 802a130:	ea4f 7ce2 	mov.w	ip, r2, asr #31
 802a134:	f16c 0c00 	sbc.w	ip, ip, #0
 802a138:	f1bc 0f00 	cmp.w	ip, #0
 802a13c:	eba6 0104 	sub.w	r1, r6, r4
 802a140:	eb07 0084 	add.w	r0, r7, r4, lsl #2
 802a144:	da02      	bge.n	802a14c <__strftime.isra.0+0x6b4>
 802a146:	3303      	adds	r3, #3
 802a148:	f14c 0c00 	adc.w	ip, ip, #0
 802a14c:	089b      	lsrs	r3, r3, #2
 802a14e:	ea43 738c 	orr.w	r3, r3, ip, lsl #30
 802a152:	f102 3aff 	add.w	sl, r2, #4294967295	; 0xffffffff
 802a156:	ea4f 0cac 	mov.w	ip, ip, asr #2
 802a15a:	f04f 0e64 	mov.w	lr, #100	; 0x64
 802a15e:	fb9a fefe 	sdiv	lr, sl, lr
 802a162:	ebb3 030e 	subs.w	r3, r3, lr
 802a166:	eb6c 7cee 	sbc.w	ip, ip, lr, asr #31
 802a16a:	f202 1a2b 	addw	sl, r2, #299	; 0x12b
 802a16e:	f44f 7ec8 	mov.w	lr, #400	; 0x190
 802a172:	fb9a fefe 	sdiv	lr, sl, lr
 802a176:	eb13 030e 	adds.w	r3, r3, lr
 802a17a:	eb4c 7eee 	adc.w	lr, ip, lr, asr #31
 802a17e:	3a46      	subs	r2, #70	; 0x46
 802a180:	f240 1c6d 	movw	ip, #365	; 0x16d
 802a184:	fb0c f202 	mul.w	r2, ip, r2
 802a188:	189b      	adds	r3, r3, r2
 802a18a:	eb4e 72e2 	adc.w	r2, lr, r2, asr #31
 802a18e:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 802a192:	f04f 0c18 	mov.w	ip, #24
 802a196:	eb13 030e 	adds.w	r3, r3, lr
 802a19a:	eb42 72ee 	adc.w	r2, r2, lr, asr #31
 802a19e:	fba3 3e0c 	umull	r3, lr, r3, ip
 802a1a2:	fb0c e202 	mla	r2, ip, r2, lr
 802a1a6:	f8d5 e008 	ldr.w	lr, [r5, #8]
 802a1aa:	f04f 0c3c 	mov.w	ip, #60	; 0x3c
 802a1ae:	eb13 030e 	adds.w	r3, r3, lr
 802a1b2:	eb42 7eee 	adc.w	lr, r2, lr, asr #31
 802a1b6:	fba3 320c 	umull	r3, r2, r3, ip
 802a1ba:	fb0c 220e 	mla	r2, ip, lr, r2
 802a1be:	f8d5 e004 	ldr.w	lr, [r5, #4]
 802a1c2:	eb13 030e 	adds.w	r3, r3, lr
 802a1c6:	eb42 72ee 	adc.w	r2, r2, lr, asr #31
 802a1ca:	fba3 3e0c 	umull	r3, lr, r3, ip
 802a1ce:	fb0c e202 	mla	r2, ip, r2, lr
 802a1d2:	f8d5 e000 	ldr.w	lr, [r5]
 802a1d6:	eb13 030e 	adds.w	r3, r3, lr
 802a1da:	eb42 72ee 	adc.w	r2, r2, lr, asr #31
 802a1de:	ebb3 0309 	subs.w	r3, r3, r9
 802a1e2:	eb62 72e9 	sbc.w	r2, r2, r9, asr #31
 802a1e6:	e9cd 3200 	strd	r3, r2, [sp]
 802a1ea:	4a1c      	ldr	r2, [pc, #112]	; (802a25c <__strftime.isra.0+0x7c4>)
 802a1ec:	f003 fad4 	bl	802d798 <swprintf>
 802a1f0:	e61b      	b.n	8029e2a <__strftime.isra.0+0x392>
 802a1f2:	f04f 0900 	mov.w	r9, #0
 802a1f6:	e798      	b.n	802a12a <__strftime.isra.0+0x692>
 802a1f8:	682b      	ldr	r3, [r5, #0]
 802a1fa:	e67d      	b.n	8029ef8 <__strftime.isra.0+0x460>
 802a1fc:	455c      	cmp	r4, fp
 802a1fe:	f4bf ac7d 	bcs.w	8029afc <__strftime.isra.0+0x64>
 802a202:	2309      	movs	r3, #9
 802a204:	e743      	b.n	802a08e <__strftime.isra.0+0x5f6>
 802a206:	682b      	ldr	r3, [r5, #0]
 802a208:	9301      	str	r3, [sp, #4]
 802a20a:	686b      	ldr	r3, [r5, #4]
 802a20c:	9300      	str	r3, [sp, #0]
 802a20e:	4a14      	ldr	r2, [pc, #80]	; (802a260 <__strftime.isra.0+0x7c8>)
 802a210:	68ab      	ldr	r3, [r5, #8]
 802a212:	e5f9      	b.n	8029e08 <__strftime.isra.0+0x370>
 802a214:	455c      	cmp	r4, fp
 802a216:	f4bf ac71 	bcs.w	8029afc <__strftime.isra.0+0x64>
 802a21a:	69ab      	ldr	r3, [r5, #24]
 802a21c:	1c62      	adds	r2, r4, #1
 802a21e:	b923      	cbnz	r3, 802a22a <__strftime.isra.0+0x792>
 802a220:	2337      	movs	r3, #55	; 0x37
 802a222:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 802a226:	4614      	mov	r4, r2
 802a228:	e53c      	b.n	8029ca4 <__strftime.isra.0+0x20c>
 802a22a:	3330      	adds	r3, #48	; 0x30
 802a22c:	e7f9      	b.n	802a222 <__strftime.isra.0+0x78a>
 802a22e:	69eb      	ldr	r3, [r5, #28]
 802a230:	69aa      	ldr	r2, [r5, #24]
 802a232:	3307      	adds	r3, #7
 802a234:	1a9b      	subs	r3, r3, r2
 802a236:	2207      	movs	r2, #7
 802a238:	fb93 f3f2 	sdiv	r3, r3, r2
 802a23c:	e65c      	b.n	8029ef8 <__strftime.isra.0+0x460>
 802a23e:	bf00      	nop
 802a240:	fffff894 	.word	0xfffff894
 802a244:	fffff895 	.word	0xfffff895
 802a248:	08032afc 	.word	0x08032afc
 802a24c:	08032b34 	.word	0x08032b34
 802a250:	08032b88 	.word	0x08032b88
 802a254:	0803298c 	.word	0x0803298c
 802a258:	08032bc4 	.word	0x08032bc4
 802a25c:	08032b9c 	.word	0x08032b9c
 802a260:	08032bb0 	.word	0x08032bb0
 802a264:	4628      	mov	r0, r5
 802a266:	f7ff fba5 	bl	80299b4 <iso_year_adjust>
 802a26a:	69aa      	ldr	r2, [r5, #24]
 802a26c:	b132      	cbz	r2, 802a27c <__strftime.isra.0+0x7e4>
 802a26e:	3a01      	subs	r2, #1
 802a270:	2800      	cmp	r0, #0
 802a272:	dc28      	bgt.n	802a2c6 <__strftime.isra.0+0x82e>
 802a274:	69eb      	ldr	r3, [r5, #28]
 802a276:	d103      	bne.n	802a280 <__strftime.isra.0+0x7e8>
 802a278:	330a      	adds	r3, #10
 802a27a:	e7db      	b.n	802a234 <__strftime.isra.0+0x79c>
 802a27c:	2206      	movs	r2, #6
 802a27e:	e7f7      	b.n	802a270 <__strftime.isra.0+0x7d8>
 802a280:	6969      	ldr	r1, [r5, #20]
 802a282:	2900      	cmp	r1, #0
 802a284:	eba2 0203 	sub.w	r2, r2, r3
 802a288:	f240 736b 	movw	r3, #1899	; 0x76b
 802a28c:	bfa8      	it	ge
 802a28e:	f06f 0364 	mvnge.w	r3, #100	; 0x64
 802a292:	440b      	add	r3, r1
 802a294:	0799      	lsls	r1, r3, #30
 802a296:	d105      	bne.n	802a2a4 <__strftime.isra.0+0x80c>
 802a298:	2064      	movs	r0, #100	; 0x64
 802a29a:	fb93 f1f0 	sdiv	r1, r3, r0
 802a29e:	fb00 3111 	mls	r1, r0, r1, r3
 802a2a2:	b971      	cbnz	r1, 802a2c2 <__strftime.isra.0+0x82a>
 802a2a4:	f44f 71c8 	mov.w	r1, #400	; 0x190
 802a2a8:	fb93 f0f1 	sdiv	r0, r3, r1
 802a2ac:	fb01 3310 	mls	r3, r1, r0, r3
 802a2b0:	fab3 f383 	clz	r3, r3
 802a2b4:	095b      	lsrs	r3, r3, #5
 802a2b6:	1ad3      	subs	r3, r2, r3
 802a2b8:	2b05      	cmp	r3, #5
 802a2ba:	bfb4      	ite	lt
 802a2bc:	2335      	movlt	r3, #53	; 0x35
 802a2be:	2334      	movge	r3, #52	; 0x34
 802a2c0:	e61a      	b.n	8029ef8 <__strftime.isra.0+0x460>
 802a2c2:	2301      	movs	r3, #1
 802a2c4:	e7f7      	b.n	802a2b6 <__strftime.isra.0+0x81e>
 802a2c6:	2301      	movs	r3, #1
 802a2c8:	e616      	b.n	8029ef8 <__strftime.isra.0+0x460>
 802a2ca:	455c      	cmp	r4, fp
 802a2cc:	f4bf ac16 	bcs.w	8029afc <__strftime.isra.0+0x64>
 802a2d0:	69ab      	ldr	r3, [r5, #24]
 802a2d2:	3330      	adds	r3, #48	; 0x30
 802a2d4:	e6db      	b.n	802a08e <__strftime.isra.0+0x5f6>
 802a2d6:	69aa      	ldr	r2, [r5, #24]
 802a2d8:	b11a      	cbz	r2, 802a2e2 <__strftime.isra.0+0x84a>
 802a2da:	3a01      	subs	r2, #1
 802a2dc:	69eb      	ldr	r3, [r5, #28]
 802a2de:	3307      	adds	r3, #7
 802a2e0:	e7a8      	b.n	802a234 <__strftime.isra.0+0x79c>
 802a2e2:	2206      	movs	r2, #6
 802a2e4:	e7fa      	b.n	802a2dc <__strftime.isra.0+0x844>
 802a2e6:	6968      	ldr	r0, [r5, #20]
 802a2e8:	2800      	cmp	r0, #0
 802a2ea:	db05      	blt.n	802a2f8 <__strftime.isra.0+0x860>
 802a2ec:	2364      	movs	r3, #100	; 0x64
 802a2ee:	fb90 f2f3 	sdiv	r2, r0, r3
 802a2f2:	fb02 0313 	mls	r3, r2, r3, r0
 802a2f6:	e5ff      	b.n	8029ef8 <__strftime.isra.0+0x460>
 802a2f8:	f200 706c 	addw	r0, r0, #1900	; 0x76c
 802a2fc:	f000 faba 	bl	802a874 <abs>
 802a300:	e7f4      	b.n	802a2ec <__strftime.isra.0+0x854>
 802a302:	696a      	ldr	r2, [r5, #20]
 802a304:	494a      	ldr	r1, [pc, #296]	; (802a430 <__strftime.isra.0+0x998>)
 802a306:	428a      	cmp	r2, r1
 802a308:	da04      	bge.n	802a314 <__strftime.isra.0+0x87c>
 802a30a:	202d      	movs	r0, #45	; 0x2d
 802a30c:	900a      	str	r0, [sp, #40]	; 0x28
 802a30e:	eba1 0a02 	sub.w	sl, r1, r2
 802a312:	e65d      	b.n	8029fd0 <__strftime.isra.0+0x538>
 802a314:	f202 7a6c 	addw	sl, r2, #1900	; 0x76c
 802a318:	2b2b      	cmp	r3, #43	; 0x2b
 802a31a:	d105      	bne.n	802a328 <__strftime.isra.0+0x890>
 802a31c:	f242 720f 	movw	r2, #9999	; 0x270f
 802a320:	4592      	cmp	sl, r2
 802a322:	d901      	bls.n	802a328 <__strftime.isra.0+0x890>
 802a324:	930a      	str	r3, [sp, #40]	; 0x28
 802a326:	e653      	b.n	8029fd0 <__strftime.isra.0+0x538>
 802a328:	aa0a      	add	r2, sp, #40	; 0x28
 802a32a:	2125      	movs	r1, #37	; 0x25
 802a32c:	6011      	str	r1, [r2, #0]
 802a32e:	b943      	cbnz	r3, 802a342 <__strftime.isra.0+0x8aa>
 802a330:	1d10      	adds	r0, r2, #4
 802a332:	4940      	ldr	r1, [pc, #256]	; (802a434 <__strftime.isra.0+0x99c>)
 802a334:	f003 fb1a 	bl	802d96c <wcscpy>
 802a338:	f8cd a000 	str.w	sl, [sp]
 802a33c:	464b      	mov	r3, r9
 802a33e:	aa0a      	add	r2, sp, #40	; 0x28
 802a340:	e6d3      	b.n	802a0ea <__strftime.isra.0+0x652>
 802a342:	2330      	movs	r3, #48	; 0x30
 802a344:	f102 0008 	add.w	r0, r2, #8
 802a348:	6053      	str	r3, [r2, #4]
 802a34a:	e7f2      	b.n	802a332 <__strftime.isra.0+0x89a>
 802a34c:	6a2b      	ldr	r3, [r5, #32]
 802a34e:	2b00      	cmp	r3, #0
 802a350:	f6ff aca8 	blt.w	8029ca4 <__strftime.isra.0+0x20c>
 802a354:	f7fe ffae 	bl	80292b4 <__tz_lock>
 802a358:	9b03      	ldr	r3, [sp, #12]
 802a35a:	b90b      	cbnz	r3, 802a360 <__strftime.isra.0+0x8c8>
 802a35c:	f7fe ffb6 	bl	80292cc <_tzset_unlocked>
 802a360:	f001 fe18 	bl	802bf94 <__gettzinfo>
 802a364:	6a2b      	ldr	r3, [r5, #32]
 802a366:	2b00      	cmp	r3, #0
 802a368:	bfd4      	ite	le
 802a36a:	2200      	movle	r2, #0
 802a36c:	2201      	movgt	r2, #1
 802a36e:	2328      	movs	r3, #40	; 0x28
 802a370:	fb02 3303 	mla	r3, r2, r3, r3
 802a374:	eb07 0a84 	add.w	sl, r7, r4, lsl #2
 802a378:	58c3      	ldr	r3, [r0, r3]
 802a37a:	f1c3 0900 	rsb	r9, r3, #0
 802a37e:	f7fe ff9f 	bl	80292c0 <__tz_unlock>
 802a382:	1b31      	subs	r1, r6, r4
 802a384:	233c      	movs	r3, #60	; 0x3c
 802a386:	fb99 f0f3 	sdiv	r0, r9, r3
 802a38a:	9103      	str	r1, [sp, #12]
 802a38c:	f001 fe56 	bl	802c03c <labs>
 802a390:	233c      	movs	r3, #60	; 0x3c
 802a392:	fb90 f2f3 	sdiv	r2, r0, r3
 802a396:	fb02 0013 	mls	r0, r2, r3, r0
 802a39a:	9000      	str	r0, [sp, #0]
 802a39c:	4a26      	ldr	r2, [pc, #152]	; (802a438 <__strftime.isra.0+0x9a0>)
 802a39e:	9903      	ldr	r1, [sp, #12]
 802a3a0:	f44f 6361 	mov.w	r3, #3600	; 0xe10
 802a3a4:	4650      	mov	r0, sl
 802a3a6:	fb99 f3f3 	sdiv	r3, r9, r3
 802a3aa:	f003 f9f5 	bl	802d798 <swprintf>
 802a3ae:	2800      	cmp	r0, #0
 802a3b0:	f6ff aba4 	blt.w	8029afc <__strftime.isra.0+0x64>
 802a3b4:	4404      	add	r4, r0
 802a3b6:	42a6      	cmp	r6, r4
 802a3b8:	f67f aba0 	bls.w	8029afc <__strftime.isra.0+0x64>
 802a3bc:	2301      	movs	r3, #1
 802a3be:	9303      	str	r3, [sp, #12]
 802a3c0:	e470      	b.n	8029ca4 <__strftime.isra.0+0x20c>
 802a3c2:	6a2b      	ldr	r3, [r5, #32]
 802a3c4:	2b00      	cmp	r3, #0
 802a3c6:	f6ff ac6d 	blt.w	8029ca4 <__strftime.isra.0+0x20c>
 802a3ca:	f7fe ff73 	bl	80292b4 <__tz_lock>
 802a3ce:	9b03      	ldr	r3, [sp, #12]
 802a3d0:	b90b      	cbnz	r3, 802a3d6 <__strftime.isra.0+0x93e>
 802a3d2:	f7fe ff7b 	bl	80292cc <_tzset_unlocked>
 802a3d6:	6a2b      	ldr	r3, [r5, #32]
 802a3d8:	4a18      	ldr	r2, [pc, #96]	; (802a43c <__strftime.isra.0+0x9a4>)
 802a3da:	2b00      	cmp	r3, #0
 802a3dc:	bfd4      	ite	le
 802a3de:	2300      	movle	r3, #0
 802a3e0:	2301      	movgt	r3, #1
 802a3e2:	f852 9023 	ldr.w	r9, [r2, r3, lsl #2]
 802a3e6:	4648      	mov	r0, r9
 802a3e8:	f7d5 ff4c 	bl	8000284 <strlen>
 802a3ec:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 802a3f0:	4420      	add	r0, r4
 802a3f2:	42a0      	cmp	r0, r4
 802a3f4:	d102      	bne.n	802a3fc <__strftime.isra.0+0x964>
 802a3f6:	f7fe ff63 	bl	80292c0 <__tz_unlock>
 802a3fa:	e7df      	b.n	802a3bc <__strftime.isra.0+0x924>
 802a3fc:	45a3      	cmp	fp, r4
 802a3fe:	d905      	bls.n	802a40c <__strftime.isra.0+0x974>
 802a400:	f819 3f01 	ldrb.w	r3, [r9, #1]!
 802a404:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 802a408:	3401      	adds	r4, #1
 802a40a:	e7f2      	b.n	802a3f2 <__strftime.isra.0+0x95a>
 802a40c:	f7fe ff58 	bl	80292c0 <__tz_unlock>
 802a410:	f7ff bb74 	b.w	8029afc <__strftime.isra.0+0x64>
 802a414:	455c      	cmp	r4, fp
 802a416:	f4bf ab71 	bcs.w	8029afc <__strftime.isra.0+0x64>
 802a41a:	2325      	movs	r3, #37	; 0x25
 802a41c:	e637      	b.n	802a08e <__strftime.isra.0+0x5f6>
 802a41e:	b116      	cbz	r6, 802a426 <__strftime.isra.0+0x98e>
 802a420:	2300      	movs	r3, #0
 802a422:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 802a426:	4620      	mov	r0, r4
 802a428:	f20d 4dac 	addw	sp, sp, #1196	; 0x4ac
 802a42c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a430:	fffff894 	.word	0xfffff894
 802a434:	08032b78 	.word	0x08032b78
 802a438:	08032bec 	.word	0x08032bec
 802a43c:	2000028c 	.word	0x2000028c

0802a440 <wcsftime>:
 802a440:	f7ff bb2a 	b.w	8029a98 <__strftime.isra.0>

0802a444 <wcslen>:
 802a444:	4602      	mov	r2, r0
 802a446:	4613      	mov	r3, r2
 802a448:	3204      	adds	r2, #4
 802a44a:	6819      	ldr	r1, [r3, #0]
 802a44c:	2900      	cmp	r1, #0
 802a44e:	d1fa      	bne.n	802a446 <wcslen+0x2>
 802a450:	1a18      	subs	r0, r3, r0
 802a452:	1080      	asrs	r0, r0, #2
 802a454:	4770      	bx	lr

0802a456 <_wcstoul_l>:
 802a456:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a45a:	4681      	mov	r9, r0
 802a45c:	4688      	mov	r8, r1
 802a45e:	4692      	mov	sl, r2
 802a460:	461f      	mov	r7, r3
 802a462:	460d      	mov	r5, r1
 802a464:	46ab      	mov	fp, r5
 802a466:	f855 4b04 	ldr.w	r4, [r5], #4
 802a46a:	990a      	ldr	r1, [sp, #40]	; 0x28
 802a46c:	4620      	mov	r0, r4
 802a46e:	f7fb fc2b 	bl	8025cc8 <iswspace_l>
 802a472:	4606      	mov	r6, r0
 802a474:	2800      	cmp	r0, #0
 802a476:	d1f5      	bne.n	802a464 <_wcstoul_l+0xe>
 802a478:	2c2d      	cmp	r4, #45	; 0x2d
 802a47a:	d12e      	bne.n	802a4da <_wcstoul_l+0x84>
 802a47c:	682c      	ldr	r4, [r5, #0]
 802a47e:	2101      	movs	r1, #1
 802a480:	f10b 0508 	add.w	r5, fp, #8
 802a484:	2f00      	cmp	r7, #0
 802a486:	d05b      	beq.n	802a540 <_wcstoul_l+0xea>
 802a488:	2f10      	cmp	r7, #16
 802a48a:	d109      	bne.n	802a4a0 <_wcstoul_l+0x4a>
 802a48c:	2c30      	cmp	r4, #48	; 0x30
 802a48e:	d107      	bne.n	802a4a0 <_wcstoul_l+0x4a>
 802a490:	682b      	ldr	r3, [r5, #0]
 802a492:	f023 0320 	bic.w	r3, r3, #32
 802a496:	2b58      	cmp	r3, #88	; 0x58
 802a498:	d14d      	bne.n	802a536 <_wcstoul_l+0xe0>
 802a49a:	686c      	ldr	r4, [r5, #4]
 802a49c:	2710      	movs	r7, #16
 802a49e:	3508      	adds	r5, #8
 802a4a0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 802a4a4:	fbb2 f2f7 	udiv	r2, r2, r7
 802a4a8:	fb07 fc02 	mul.w	ip, r7, r2
 802a4ac:	ea6f 0c0c 	mvn.w	ip, ip
 802a4b0:	2000      	movs	r0, #0
 802a4b2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 802a4b6:	2b09      	cmp	r3, #9
 802a4b8:	d817      	bhi.n	802a4ea <_wcstoul_l+0x94>
 802a4ba:	461c      	mov	r4, r3
 802a4bc:	42a7      	cmp	r7, r4
 802a4be:	dd23      	ble.n	802a508 <_wcstoul_l+0xb2>
 802a4c0:	2e00      	cmp	r6, #0
 802a4c2:	db1e      	blt.n	802a502 <_wcstoul_l+0xac>
 802a4c4:	4290      	cmp	r0, r2
 802a4c6:	d81c      	bhi.n	802a502 <_wcstoul_l+0xac>
 802a4c8:	d101      	bne.n	802a4ce <_wcstoul_l+0x78>
 802a4ca:	4564      	cmp	r4, ip
 802a4cc:	dc19      	bgt.n	802a502 <_wcstoul_l+0xac>
 802a4ce:	fb00 4007 	mla	r0, r0, r7, r4
 802a4d2:	2601      	movs	r6, #1
 802a4d4:	f855 4b04 	ldr.w	r4, [r5], #4
 802a4d8:	e7eb      	b.n	802a4b2 <_wcstoul_l+0x5c>
 802a4da:	2c2b      	cmp	r4, #43	; 0x2b
 802a4dc:	bf03      	ittte	eq
 802a4de:	682c      	ldreq	r4, [r5, #0]
 802a4e0:	4601      	moveq	r1, r0
 802a4e2:	f10b 0508 	addeq.w	r5, fp, #8
 802a4e6:	4601      	movne	r1, r0
 802a4e8:	e7cc      	b.n	802a484 <_wcstoul_l+0x2e>
 802a4ea:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
 802a4ee:	2b19      	cmp	r3, #25
 802a4f0:	d801      	bhi.n	802a4f6 <_wcstoul_l+0xa0>
 802a4f2:	3c37      	subs	r4, #55	; 0x37
 802a4f4:	e7e2      	b.n	802a4bc <_wcstoul_l+0x66>
 802a4f6:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
 802a4fa:	2b19      	cmp	r3, #25
 802a4fc:	d804      	bhi.n	802a508 <_wcstoul_l+0xb2>
 802a4fe:	3c57      	subs	r4, #87	; 0x57
 802a500:	e7dc      	b.n	802a4bc <_wcstoul_l+0x66>
 802a502:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 802a506:	e7e5      	b.n	802a4d4 <_wcstoul_l+0x7e>
 802a508:	2e00      	cmp	r6, #0
 802a50a:	da09      	bge.n	802a520 <_wcstoul_l+0xca>
 802a50c:	2322      	movs	r3, #34	; 0x22
 802a50e:	f8c9 3000 	str.w	r3, [r9]
 802a512:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802a516:	f1ba 0f00 	cmp.w	sl, #0
 802a51a:	d107      	bne.n	802a52c <_wcstoul_l+0xd6>
 802a51c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a520:	b101      	cbz	r1, 802a524 <_wcstoul_l+0xce>
 802a522:	4240      	negs	r0, r0
 802a524:	f1ba 0f00 	cmp.w	sl, #0
 802a528:	d0f8      	beq.n	802a51c <_wcstoul_l+0xc6>
 802a52a:	b10e      	cbz	r6, 802a530 <_wcstoul_l+0xda>
 802a52c:	f1a5 0804 	sub.w	r8, r5, #4
 802a530:	f8ca 8000 	str.w	r8, [sl]
 802a534:	e7f2      	b.n	802a51c <_wcstoul_l+0xc6>
 802a536:	2430      	movs	r4, #48	; 0x30
 802a538:	2f00      	cmp	r7, #0
 802a53a:	d1b1      	bne.n	802a4a0 <_wcstoul_l+0x4a>
 802a53c:	2708      	movs	r7, #8
 802a53e:	e7af      	b.n	802a4a0 <_wcstoul_l+0x4a>
 802a540:	2c30      	cmp	r4, #48	; 0x30
 802a542:	d0a5      	beq.n	802a490 <_wcstoul_l+0x3a>
 802a544:	270a      	movs	r7, #10
 802a546:	e7ab      	b.n	802a4a0 <_wcstoul_l+0x4a>

0802a548 <wcstoul>:
 802a548:	b507      	push	{r0, r1, r2, lr}
 802a54a:	4613      	mov	r3, r2
 802a54c:	4a05      	ldr	r2, [pc, #20]	; (802a564 <wcstoul+0x1c>)
 802a54e:	9200      	str	r2, [sp, #0]
 802a550:	460a      	mov	r2, r1
 802a552:	4601      	mov	r1, r0
 802a554:	4804      	ldr	r0, [pc, #16]	; (802a568 <wcstoul+0x20>)
 802a556:	6800      	ldr	r0, [r0, #0]
 802a558:	f7ff ff7d 	bl	802a456 <_wcstoul_l>
 802a55c:	b003      	add	sp, #12
 802a55e:	f85d fb04 	ldr.w	pc, [sp], #4
 802a562:	bf00      	nop
 802a564:	20000120 	.word	0x20000120
 802a568:	200000bc 	.word	0x200000bc

0802a56c <wcsxfrm>:
 802a56c:	f003 ba0a 	b.w	802d984 <wcslcpy>

0802a570 <wctob>:
 802a570:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 802a572:	1c43      	adds	r3, r0, #1
 802a574:	4605      	mov	r5, r0
 802a576:	d103      	bne.n	802a580 <wctob+0x10>
 802a578:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802a57c:	b004      	add	sp, #16
 802a57e:	bd70      	pop	{r4, r5, r6, pc}
 802a580:	2208      	movs	r2, #8
 802a582:	2100      	movs	r1, #0
 802a584:	eb0d 0002 	add.w	r0, sp, r2
 802a588:	f7fb fce2 	bl	8025f50 <memset>
 802a58c:	4b17      	ldr	r3, [pc, #92]	; (802a5ec <wctob+0x7c>)
 802a58e:	681e      	ldr	r6, [r3, #0]
 802a590:	6db4      	ldr	r4, [r6, #88]	; 0x58
 802a592:	b9ec      	cbnz	r4, 802a5d0 <wctob+0x60>
 802a594:	2050      	movs	r0, #80	; 0x50
 802a596:	f7fb fc59 	bl	8025e4c <malloc>
 802a59a:	4602      	mov	r2, r0
 802a59c:	65b0      	str	r0, [r6, #88]	; 0x58
 802a59e:	b920      	cbnz	r0, 802a5aa <wctob+0x3a>
 802a5a0:	4b13      	ldr	r3, [pc, #76]	; (802a5f0 <wctob+0x80>)
 802a5a2:	4814      	ldr	r0, [pc, #80]	; (802a5f4 <wctob+0x84>)
 802a5a4:	2116      	movs	r1, #22
 802a5a6:	f000 f969 	bl	802a87c <__assert_func>
 802a5aa:	e9c0 4400 	strd	r4, r4, [r0]
 802a5ae:	e9c0 4402 	strd	r4, r4, [r0, #8]
 802a5b2:	e9c0 4404 	strd	r4, r4, [r0, #16]
 802a5b6:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 802a5ba:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 802a5be:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 802a5c2:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 802a5c6:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 802a5ca:	6184      	str	r4, [r0, #24]
 802a5cc:	7704      	strb	r4, [r0, #28]
 802a5ce:	6244      	str	r4, [r0, #36]	; 0x24
 802a5d0:	4b09      	ldr	r3, [pc, #36]	; (802a5f8 <wctob+0x88>)
 802a5d2:	462a      	mov	r2, r5
 802a5d4:	f8d3 40e0 	ldr.w	r4, [r3, #224]	; 0xe0
 802a5d8:	a901      	add	r1, sp, #4
 802a5da:	ab02      	add	r3, sp, #8
 802a5dc:	4630      	mov	r0, r6
 802a5de:	47a0      	blx	r4
 802a5e0:	2801      	cmp	r0, #1
 802a5e2:	d1c9      	bne.n	802a578 <wctob+0x8>
 802a5e4:	f89d 0004 	ldrb.w	r0, [sp, #4]
 802a5e8:	e7c8      	b.n	802a57c <wctob+0xc>
 802a5ea:	bf00      	nop
 802a5ec:	200000bc 	.word	0x200000bc
 802a5f0:	08031fa4 	.word	0x08031fa4
 802a5f4:	08032c1c 	.word	0x08032c1c
 802a5f8:	20000120 	.word	0x20000120

0802a5fc <__ascii_wctomb>:
 802a5fc:	b149      	cbz	r1, 802a612 <__ascii_wctomb+0x16>
 802a5fe:	2aff      	cmp	r2, #255	; 0xff
 802a600:	bf85      	ittet	hi
 802a602:	238a      	movhi	r3, #138	; 0x8a
 802a604:	6003      	strhi	r3, [r0, #0]
 802a606:	700a      	strbls	r2, [r1, #0]
 802a608:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 802a60c:	bf98      	it	ls
 802a60e:	2001      	movls	r0, #1
 802a610:	4770      	bx	lr
 802a612:	4608      	mov	r0, r1
 802a614:	4770      	bx	lr
	...

0802a618 <_wctype_r>:
 802a618:	b538      	push	{r3, r4, r5, lr}
 802a61a:	780b      	ldrb	r3, [r1, #0]
 802a61c:	3b61      	subs	r3, #97	; 0x61
 802a61e:	4605      	mov	r5, r0
 802a620:	460c      	mov	r4, r1
 802a622:	2b17      	cmp	r3, #23
 802a624:	d85e      	bhi.n	802a6e4 <_wctype_r+0xcc>
 802a626:	e8df f003 	tbb	[pc, r3]
 802a62a:	1a0c      	.short	0x1a0c
 802a62c:	5d5d2922 	.word	0x5d5d2922
 802a630:	5d5d5d30 	.word	0x5d5d5d30
 802a634:	5d5d375d 	.word	0x5d5d375d
 802a638:	5d5d3e5d 	.word	0x5d5d3e5d
 802a63c:	5d515d4a 	.word	0x5d515d4a
 802a640:	585d      	.short	0x585d
 802a642:	492d      	ldr	r1, [pc, #180]	; (802a6f8 <_wctype_r+0xe0>)
 802a644:	4620      	mov	r0, r4
 802a646:	f7d5 fe13 	bl	8000270 <strcmp>
 802a64a:	2800      	cmp	r0, #0
 802a64c:	d04e      	beq.n	802a6ec <_wctype_r+0xd4>
 802a64e:	492b      	ldr	r1, [pc, #172]	; (802a6fc <_wctype_r+0xe4>)
 802a650:	4620      	mov	r0, r4
 802a652:	f7d5 fe0d 	bl	8000270 <strcmp>
 802a656:	2800      	cmp	r0, #0
 802a658:	d144      	bne.n	802a6e4 <_wctype_r+0xcc>
 802a65a:	2002      	movs	r0, #2
 802a65c:	e045      	b.n	802a6ea <_wctype_r+0xd2>
 802a65e:	4928      	ldr	r1, [pc, #160]	; (802a700 <_wctype_r+0xe8>)
 802a660:	4620      	mov	r0, r4
 802a662:	f7d5 fe05 	bl	8000270 <strcmp>
 802a666:	2800      	cmp	r0, #0
 802a668:	d13c      	bne.n	802a6e4 <_wctype_r+0xcc>
 802a66a:	2003      	movs	r0, #3
 802a66c:	e03d      	b.n	802a6ea <_wctype_r+0xd2>
 802a66e:	4925      	ldr	r1, [pc, #148]	; (802a704 <_wctype_r+0xec>)
 802a670:	4620      	mov	r0, r4
 802a672:	f7d5 fdfd 	bl	8000270 <strcmp>
 802a676:	bba8      	cbnz	r0, 802a6e4 <_wctype_r+0xcc>
 802a678:	2004      	movs	r0, #4
 802a67a:	e036      	b.n	802a6ea <_wctype_r+0xd2>
 802a67c:	4922      	ldr	r1, [pc, #136]	; (802a708 <_wctype_r+0xf0>)
 802a67e:	4620      	mov	r0, r4
 802a680:	f7d5 fdf6 	bl	8000270 <strcmp>
 802a684:	bb70      	cbnz	r0, 802a6e4 <_wctype_r+0xcc>
 802a686:	2005      	movs	r0, #5
 802a688:	e02f      	b.n	802a6ea <_wctype_r+0xd2>
 802a68a:	4920      	ldr	r1, [pc, #128]	; (802a70c <_wctype_r+0xf4>)
 802a68c:	4620      	mov	r0, r4
 802a68e:	f7d5 fdef 	bl	8000270 <strcmp>
 802a692:	bb38      	cbnz	r0, 802a6e4 <_wctype_r+0xcc>
 802a694:	2006      	movs	r0, #6
 802a696:	e028      	b.n	802a6ea <_wctype_r+0xd2>
 802a698:	491d      	ldr	r1, [pc, #116]	; (802a710 <_wctype_r+0xf8>)
 802a69a:	4620      	mov	r0, r4
 802a69c:	f7d5 fde8 	bl	8000270 <strcmp>
 802a6a0:	bb00      	cbnz	r0, 802a6e4 <_wctype_r+0xcc>
 802a6a2:	2007      	movs	r0, #7
 802a6a4:	e021      	b.n	802a6ea <_wctype_r+0xd2>
 802a6a6:	491b      	ldr	r1, [pc, #108]	; (802a714 <_wctype_r+0xfc>)
 802a6a8:	4620      	mov	r0, r4
 802a6aa:	f7d5 fde1 	bl	8000270 <strcmp>
 802a6ae:	b1f8      	cbz	r0, 802a6f0 <_wctype_r+0xd8>
 802a6b0:	4919      	ldr	r1, [pc, #100]	; (802a718 <_wctype_r+0x100>)
 802a6b2:	4620      	mov	r0, r4
 802a6b4:	f7d5 fddc 	bl	8000270 <strcmp>
 802a6b8:	b9a0      	cbnz	r0, 802a6e4 <_wctype_r+0xcc>
 802a6ba:	2009      	movs	r0, #9
 802a6bc:	e015      	b.n	802a6ea <_wctype_r+0xd2>
 802a6be:	4917      	ldr	r1, [pc, #92]	; (802a71c <_wctype_r+0x104>)
 802a6c0:	4620      	mov	r0, r4
 802a6c2:	f7d5 fdd5 	bl	8000270 <strcmp>
 802a6c6:	b968      	cbnz	r0, 802a6e4 <_wctype_r+0xcc>
 802a6c8:	200a      	movs	r0, #10
 802a6ca:	e00e      	b.n	802a6ea <_wctype_r+0xd2>
 802a6cc:	4914      	ldr	r1, [pc, #80]	; (802a720 <_wctype_r+0x108>)
 802a6ce:	4620      	mov	r0, r4
 802a6d0:	f7d5 fdce 	bl	8000270 <strcmp>
 802a6d4:	b930      	cbnz	r0, 802a6e4 <_wctype_r+0xcc>
 802a6d6:	200b      	movs	r0, #11
 802a6d8:	e007      	b.n	802a6ea <_wctype_r+0xd2>
 802a6da:	4912      	ldr	r1, [pc, #72]	; (802a724 <_wctype_r+0x10c>)
 802a6dc:	4620      	mov	r0, r4
 802a6de:	f7d5 fdc7 	bl	8000270 <strcmp>
 802a6e2:	b138      	cbz	r0, 802a6f4 <_wctype_r+0xdc>
 802a6e4:	2316      	movs	r3, #22
 802a6e6:	602b      	str	r3, [r5, #0]
 802a6e8:	2000      	movs	r0, #0
 802a6ea:	bd38      	pop	{r3, r4, r5, pc}
 802a6ec:	2001      	movs	r0, #1
 802a6ee:	e7fc      	b.n	802a6ea <_wctype_r+0xd2>
 802a6f0:	2008      	movs	r0, #8
 802a6f2:	e7fa      	b.n	802a6ea <_wctype_r+0xd2>
 802a6f4:	200c      	movs	r0, #12
 802a6f6:	e7f8      	b.n	802a6ea <_wctype_r+0xd2>
 802a6f8:	0802f7cf 	.word	0x0802f7cf
 802a6fc:	0802f7bc 	.word	0x0802f7bc
 802a700:	08032c78 	.word	0x08032c78
 802a704:	0802f7aa 	.word	0x0802f7aa
 802a708:	0802f7c9 	.word	0x0802f7c9
 802a70c:	0802f7d5 	.word	0x0802f7d5
 802a710:	0802f7b6 	.word	0x0802f7b6
 802a714:	0802f7a4 	.word	0x0802f7a4
 802a718:	0802f7c2 	.word	0x0802f7c2
 802a71c:	080322ad 	.word	0x080322ad
 802a720:	0802f7b0 	.word	0x0802f7b0
 802a724:	0802f7c8 	.word	0x0802f7c8

0802a728 <wctype>:
 802a728:	4b02      	ldr	r3, [pc, #8]	; (802a734 <wctype+0xc>)
 802a72a:	4601      	mov	r1, r0
 802a72c:	6818      	ldr	r0, [r3, #0]
 802a72e:	f7ff bf73 	b.w	802a618 <_wctype_r>
 802a732:	bf00      	nop
 802a734:	200000bc 	.word	0x200000bc

0802a738 <wmemchr>:
 802a738:	b530      	push	{r4, r5, lr}
 802a73a:	2400      	movs	r4, #0
 802a73c:	4294      	cmp	r4, r2
 802a73e:	4603      	mov	r3, r0
 802a740:	d102      	bne.n	802a748 <wmemchr+0x10>
 802a742:	2300      	movs	r3, #0
 802a744:	4618      	mov	r0, r3
 802a746:	bd30      	pop	{r4, r5, pc}
 802a748:	681d      	ldr	r5, [r3, #0]
 802a74a:	428d      	cmp	r5, r1
 802a74c:	f100 0004 	add.w	r0, r0, #4
 802a750:	d0f8      	beq.n	802a744 <wmemchr+0xc>
 802a752:	3401      	adds	r4, #1
 802a754:	e7f2      	b.n	802a73c <wmemchr+0x4>

0802a756 <wmemcpy>:
 802a756:	0092      	lsls	r2, r2, #2
 802a758:	f7fb bbd2 	b.w	8025f00 <memcpy>

0802a75c <wmemmove>:
 802a75c:	0092      	lsls	r2, r2, #2
 802a75e:	f7fb bbdd 	b.w	8025f1c <memmove>

0802a762 <wmemset>:
 802a762:	2300      	movs	r3, #0
 802a764:	4293      	cmp	r3, r2
 802a766:	d100      	bne.n	802a76a <wmemset+0x8>
 802a768:	4770      	bx	lr
 802a76a:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
 802a76e:	3301      	adds	r3, #1
 802a770:	e7f8      	b.n	802a764 <wmemset+0x2>
	...

0802a774 <_write_r>:
 802a774:	b538      	push	{r3, r4, r5, lr}
 802a776:	4d07      	ldr	r5, [pc, #28]	; (802a794 <_write_r+0x20>)
 802a778:	4604      	mov	r4, r0
 802a77a:	4608      	mov	r0, r1
 802a77c:	4611      	mov	r1, r2
 802a77e:	2200      	movs	r2, #0
 802a780:	602a      	str	r2, [r5, #0]
 802a782:	461a      	mov	r2, r3
 802a784:	f7d7 feec 	bl	8002560 <_write>
 802a788:	1c43      	adds	r3, r0, #1
 802a78a:	d102      	bne.n	802a792 <_write_r+0x1e>
 802a78c:	682b      	ldr	r3, [r5, #0]
 802a78e:	b103      	cbz	r3, 802a792 <_write_r+0x1e>
 802a790:	6023      	str	r3, [r4, #0]
 802a792:	bd38      	pop	{r3, r4, r5, pc}
 802a794:	200042d4 	.word	0x200042d4

0802a798 <__swsetup_r>:
 802a798:	4b32      	ldr	r3, [pc, #200]	; (802a864 <__swsetup_r+0xcc>)
 802a79a:	b570      	push	{r4, r5, r6, lr}
 802a79c:	681d      	ldr	r5, [r3, #0]
 802a79e:	4606      	mov	r6, r0
 802a7a0:	460c      	mov	r4, r1
 802a7a2:	b125      	cbz	r5, 802a7ae <__swsetup_r+0x16>
 802a7a4:	69ab      	ldr	r3, [r5, #24]
 802a7a6:	b913      	cbnz	r3, 802a7ae <__swsetup_r+0x16>
 802a7a8:	4628      	mov	r0, r5
 802a7aa:	f7fa fed1 	bl	8025550 <__sinit>
 802a7ae:	4b2e      	ldr	r3, [pc, #184]	; (802a868 <__swsetup_r+0xd0>)
 802a7b0:	429c      	cmp	r4, r3
 802a7b2:	d10f      	bne.n	802a7d4 <__swsetup_r+0x3c>
 802a7b4:	686c      	ldr	r4, [r5, #4]
 802a7b6:	89a3      	ldrh	r3, [r4, #12]
 802a7b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802a7bc:	0719      	lsls	r1, r3, #28
 802a7be:	d42c      	bmi.n	802a81a <__swsetup_r+0x82>
 802a7c0:	06dd      	lsls	r5, r3, #27
 802a7c2:	d411      	bmi.n	802a7e8 <__swsetup_r+0x50>
 802a7c4:	2309      	movs	r3, #9
 802a7c6:	6033      	str	r3, [r6, #0]
 802a7c8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802a7cc:	81a3      	strh	r3, [r4, #12]
 802a7ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802a7d2:	e03e      	b.n	802a852 <__swsetup_r+0xba>
 802a7d4:	4b25      	ldr	r3, [pc, #148]	; (802a86c <__swsetup_r+0xd4>)
 802a7d6:	429c      	cmp	r4, r3
 802a7d8:	d101      	bne.n	802a7de <__swsetup_r+0x46>
 802a7da:	68ac      	ldr	r4, [r5, #8]
 802a7dc:	e7eb      	b.n	802a7b6 <__swsetup_r+0x1e>
 802a7de:	4b24      	ldr	r3, [pc, #144]	; (802a870 <__swsetup_r+0xd8>)
 802a7e0:	429c      	cmp	r4, r3
 802a7e2:	bf08      	it	eq
 802a7e4:	68ec      	ldreq	r4, [r5, #12]
 802a7e6:	e7e6      	b.n	802a7b6 <__swsetup_r+0x1e>
 802a7e8:	0758      	lsls	r0, r3, #29
 802a7ea:	d512      	bpl.n	802a812 <__swsetup_r+0x7a>
 802a7ec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802a7ee:	b141      	cbz	r1, 802a802 <__swsetup_r+0x6a>
 802a7f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802a7f4:	4299      	cmp	r1, r3
 802a7f6:	d002      	beq.n	802a7fe <__swsetup_r+0x66>
 802a7f8:	4630      	mov	r0, r6
 802a7fa:	f7fb fbb1 	bl	8025f60 <_free_r>
 802a7fe:	2300      	movs	r3, #0
 802a800:	6363      	str	r3, [r4, #52]	; 0x34
 802a802:	89a3      	ldrh	r3, [r4, #12]
 802a804:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802a808:	81a3      	strh	r3, [r4, #12]
 802a80a:	2300      	movs	r3, #0
 802a80c:	6063      	str	r3, [r4, #4]
 802a80e:	6923      	ldr	r3, [r4, #16]
 802a810:	6023      	str	r3, [r4, #0]
 802a812:	89a3      	ldrh	r3, [r4, #12]
 802a814:	f043 0308 	orr.w	r3, r3, #8
 802a818:	81a3      	strh	r3, [r4, #12]
 802a81a:	6923      	ldr	r3, [r4, #16]
 802a81c:	b94b      	cbnz	r3, 802a832 <__swsetup_r+0x9a>
 802a81e:	89a3      	ldrh	r3, [r4, #12]
 802a820:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802a824:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802a828:	d003      	beq.n	802a832 <__swsetup_r+0x9a>
 802a82a:	4621      	mov	r1, r4
 802a82c:	4630      	mov	r0, r6
 802a82e:	f7fb facd 	bl	8025dcc <__smakebuf_r>
 802a832:	89a0      	ldrh	r0, [r4, #12]
 802a834:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802a838:	f010 0301 	ands.w	r3, r0, #1
 802a83c:	d00a      	beq.n	802a854 <__swsetup_r+0xbc>
 802a83e:	2300      	movs	r3, #0
 802a840:	60a3      	str	r3, [r4, #8]
 802a842:	6963      	ldr	r3, [r4, #20]
 802a844:	425b      	negs	r3, r3
 802a846:	61a3      	str	r3, [r4, #24]
 802a848:	6923      	ldr	r3, [r4, #16]
 802a84a:	b943      	cbnz	r3, 802a85e <__swsetup_r+0xc6>
 802a84c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802a850:	d1ba      	bne.n	802a7c8 <__swsetup_r+0x30>
 802a852:	bd70      	pop	{r4, r5, r6, pc}
 802a854:	0781      	lsls	r1, r0, #30
 802a856:	bf58      	it	pl
 802a858:	6963      	ldrpl	r3, [r4, #20]
 802a85a:	60a3      	str	r3, [r4, #8]
 802a85c:	e7f4      	b.n	802a848 <__swsetup_r+0xb0>
 802a85e:	2000      	movs	r0, #0
 802a860:	e7f7      	b.n	802a852 <__swsetup_r+0xba>
 802a862:	bf00      	nop
 802a864:	200000bc 	.word	0x200000bc
 802a868:	08032138 	.word	0x08032138
 802a86c:	08032158 	.word	0x08032158
 802a870:	08032118 	.word	0x08032118

0802a874 <abs>:
 802a874:	2800      	cmp	r0, #0
 802a876:	bfb8      	it	lt
 802a878:	4240      	neglt	r0, r0
 802a87a:	4770      	bx	lr

0802a87c <__assert_func>:
 802a87c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802a87e:	4614      	mov	r4, r2
 802a880:	461a      	mov	r2, r3
 802a882:	4b09      	ldr	r3, [pc, #36]	; (802a8a8 <__assert_func+0x2c>)
 802a884:	681b      	ldr	r3, [r3, #0]
 802a886:	4605      	mov	r5, r0
 802a888:	68d8      	ldr	r0, [r3, #12]
 802a88a:	b14c      	cbz	r4, 802a8a0 <__assert_func+0x24>
 802a88c:	4b07      	ldr	r3, [pc, #28]	; (802a8ac <__assert_func+0x30>)
 802a88e:	9100      	str	r1, [sp, #0]
 802a890:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802a894:	4906      	ldr	r1, [pc, #24]	; (802a8b0 <__assert_func+0x34>)
 802a896:	462b      	mov	r3, r5
 802a898:	f000 ff1c 	bl	802b6d4 <fiprintf>
 802a89c:	f7fa fcc3 	bl	8025226 <abort>
 802a8a0:	4b04      	ldr	r3, [pc, #16]	; (802a8b4 <__assert_func+0x38>)
 802a8a2:	461c      	mov	r4, r3
 802a8a4:	e7f3      	b.n	802a88e <__assert_func+0x12>
 802a8a6:	bf00      	nop
 802a8a8:	200000bc 	.word	0x200000bc
 802a8ac:	08032c7e 	.word	0x08032c7e
 802a8b0:	08032c8b 	.word	0x08032c8b
 802a8b4:	08032cb9 	.word	0x08032cb9

0802a8b8 <_close_r>:
 802a8b8:	b538      	push	{r3, r4, r5, lr}
 802a8ba:	4d06      	ldr	r5, [pc, #24]	; (802a8d4 <_close_r+0x1c>)
 802a8bc:	2300      	movs	r3, #0
 802a8be:	4604      	mov	r4, r0
 802a8c0:	4608      	mov	r0, r1
 802a8c2:	602b      	str	r3, [r5, #0]
 802a8c4:	f7d8 fb99 	bl	8002ffa <_close>
 802a8c8:	1c43      	adds	r3, r0, #1
 802a8ca:	d102      	bne.n	802a8d2 <_close_r+0x1a>
 802a8cc:	682b      	ldr	r3, [r5, #0]
 802a8ce:	b103      	cbz	r3, 802a8d2 <_close_r+0x1a>
 802a8d0:	6023      	str	r3, [r4, #0]
 802a8d2:	bd38      	pop	{r3, r4, r5, pc}
 802a8d4:	200042d4 	.word	0x200042d4

0802a8d8 <quorem>:
 802a8d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a8dc:	6903      	ldr	r3, [r0, #16]
 802a8de:	690c      	ldr	r4, [r1, #16]
 802a8e0:	42a3      	cmp	r3, r4
 802a8e2:	4607      	mov	r7, r0
 802a8e4:	f2c0 8081 	blt.w	802a9ea <quorem+0x112>
 802a8e8:	3c01      	subs	r4, #1
 802a8ea:	f101 0814 	add.w	r8, r1, #20
 802a8ee:	f100 0514 	add.w	r5, r0, #20
 802a8f2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802a8f6:	9301      	str	r3, [sp, #4]
 802a8f8:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 802a8fc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 802a900:	3301      	adds	r3, #1
 802a902:	429a      	cmp	r2, r3
 802a904:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 802a908:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 802a90c:	fbb2 f6f3 	udiv	r6, r2, r3
 802a910:	d331      	bcc.n	802a976 <quorem+0x9e>
 802a912:	f04f 0e00 	mov.w	lr, #0
 802a916:	4640      	mov	r0, r8
 802a918:	46ac      	mov	ip, r5
 802a91a:	46f2      	mov	sl, lr
 802a91c:	f850 2b04 	ldr.w	r2, [r0], #4
 802a920:	b293      	uxth	r3, r2
 802a922:	fb06 e303 	mla	r3, r6, r3, lr
 802a926:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 802a92a:	b29b      	uxth	r3, r3
 802a92c:	ebaa 0303 	sub.w	r3, sl, r3
 802a930:	f8dc a000 	ldr.w	sl, [ip]
 802a934:	0c12      	lsrs	r2, r2, #16
 802a936:	fa13 f38a 	uxtah	r3, r3, sl
 802a93a:	fb06 e202 	mla	r2, r6, r2, lr
 802a93e:	9300      	str	r3, [sp, #0]
 802a940:	9b00      	ldr	r3, [sp, #0]
 802a942:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 802a946:	b292      	uxth	r2, r2
 802a948:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 802a94c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 802a950:	f8bd 3000 	ldrh.w	r3, [sp]
 802a954:	4581      	cmp	r9, r0
 802a956:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802a95a:	f84c 3b04 	str.w	r3, [ip], #4
 802a95e:	ea4f 4a22 	mov.w	sl, r2, asr #16
 802a962:	d2db      	bcs.n	802a91c <quorem+0x44>
 802a964:	f855 300b 	ldr.w	r3, [r5, fp]
 802a968:	b92b      	cbnz	r3, 802a976 <quorem+0x9e>
 802a96a:	9b01      	ldr	r3, [sp, #4]
 802a96c:	3b04      	subs	r3, #4
 802a96e:	429d      	cmp	r5, r3
 802a970:	461a      	mov	r2, r3
 802a972:	d32e      	bcc.n	802a9d2 <quorem+0xfa>
 802a974:	613c      	str	r4, [r7, #16]
 802a976:	4638      	mov	r0, r7
 802a978:	f001 fe60 	bl	802c63c <__mcmp>
 802a97c:	2800      	cmp	r0, #0
 802a97e:	db24      	blt.n	802a9ca <quorem+0xf2>
 802a980:	3601      	adds	r6, #1
 802a982:	4628      	mov	r0, r5
 802a984:	f04f 0c00 	mov.w	ip, #0
 802a988:	f858 2b04 	ldr.w	r2, [r8], #4
 802a98c:	f8d0 e000 	ldr.w	lr, [r0]
 802a990:	b293      	uxth	r3, r2
 802a992:	ebac 0303 	sub.w	r3, ip, r3
 802a996:	0c12      	lsrs	r2, r2, #16
 802a998:	fa13 f38e 	uxtah	r3, r3, lr
 802a99c:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 802a9a0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 802a9a4:	b29b      	uxth	r3, r3
 802a9a6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802a9aa:	45c1      	cmp	r9, r8
 802a9ac:	f840 3b04 	str.w	r3, [r0], #4
 802a9b0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 802a9b4:	d2e8      	bcs.n	802a988 <quorem+0xb0>
 802a9b6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 802a9ba:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802a9be:	b922      	cbnz	r2, 802a9ca <quorem+0xf2>
 802a9c0:	3b04      	subs	r3, #4
 802a9c2:	429d      	cmp	r5, r3
 802a9c4:	461a      	mov	r2, r3
 802a9c6:	d30a      	bcc.n	802a9de <quorem+0x106>
 802a9c8:	613c      	str	r4, [r7, #16]
 802a9ca:	4630      	mov	r0, r6
 802a9cc:	b003      	add	sp, #12
 802a9ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a9d2:	6812      	ldr	r2, [r2, #0]
 802a9d4:	3b04      	subs	r3, #4
 802a9d6:	2a00      	cmp	r2, #0
 802a9d8:	d1cc      	bne.n	802a974 <quorem+0x9c>
 802a9da:	3c01      	subs	r4, #1
 802a9dc:	e7c7      	b.n	802a96e <quorem+0x96>
 802a9de:	6812      	ldr	r2, [r2, #0]
 802a9e0:	3b04      	subs	r3, #4
 802a9e2:	2a00      	cmp	r2, #0
 802a9e4:	d1f0      	bne.n	802a9c8 <quorem+0xf0>
 802a9e6:	3c01      	subs	r4, #1
 802a9e8:	e7eb      	b.n	802a9c2 <quorem+0xea>
 802a9ea:	2000      	movs	r0, #0
 802a9ec:	e7ee      	b.n	802a9cc <quorem+0xf4>
	...

0802a9f0 <_dtoa_r>:
 802a9f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a9f4:	ed2d 8b04 	vpush	{d8-d9}
 802a9f8:	ec57 6b10 	vmov	r6, r7, d0
 802a9fc:	b093      	sub	sp, #76	; 0x4c
 802a9fe:	6a45      	ldr	r5, [r0, #36]	; 0x24
 802aa00:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 802aa04:	9106      	str	r1, [sp, #24]
 802aa06:	ee10 aa10 	vmov	sl, s0
 802aa0a:	4604      	mov	r4, r0
 802aa0c:	9209      	str	r2, [sp, #36]	; 0x24
 802aa0e:	930c      	str	r3, [sp, #48]	; 0x30
 802aa10:	46bb      	mov	fp, r7
 802aa12:	b975      	cbnz	r5, 802aa32 <_dtoa_r+0x42>
 802aa14:	2010      	movs	r0, #16
 802aa16:	f7fb fa19 	bl	8025e4c <malloc>
 802aa1a:	4602      	mov	r2, r0
 802aa1c:	6260      	str	r0, [r4, #36]	; 0x24
 802aa1e:	b920      	cbnz	r0, 802aa2a <_dtoa_r+0x3a>
 802aa20:	4ba7      	ldr	r3, [pc, #668]	; (802acc0 <_dtoa_r+0x2d0>)
 802aa22:	21ea      	movs	r1, #234	; 0xea
 802aa24:	48a7      	ldr	r0, [pc, #668]	; (802acc4 <_dtoa_r+0x2d4>)
 802aa26:	f7ff ff29 	bl	802a87c <__assert_func>
 802aa2a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 802aa2e:	6005      	str	r5, [r0, #0]
 802aa30:	60c5      	str	r5, [r0, #12]
 802aa32:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802aa34:	6819      	ldr	r1, [r3, #0]
 802aa36:	b151      	cbz	r1, 802aa4e <_dtoa_r+0x5e>
 802aa38:	685a      	ldr	r2, [r3, #4]
 802aa3a:	604a      	str	r2, [r1, #4]
 802aa3c:	2301      	movs	r3, #1
 802aa3e:	4093      	lsls	r3, r2
 802aa40:	608b      	str	r3, [r1, #8]
 802aa42:	4620      	mov	r0, r4
 802aa44:	f001 fb6e 	bl	802c124 <_Bfree>
 802aa48:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802aa4a:	2200      	movs	r2, #0
 802aa4c:	601a      	str	r2, [r3, #0]
 802aa4e:	1e3b      	subs	r3, r7, #0
 802aa50:	bfaa      	itet	ge
 802aa52:	2300      	movge	r3, #0
 802aa54:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 802aa58:	f8c8 3000 	strge.w	r3, [r8]
 802aa5c:	4b9a      	ldr	r3, [pc, #616]	; (802acc8 <_dtoa_r+0x2d8>)
 802aa5e:	bfbc      	itt	lt
 802aa60:	2201      	movlt	r2, #1
 802aa62:	f8c8 2000 	strlt.w	r2, [r8]
 802aa66:	ea33 030b 	bics.w	r3, r3, fp
 802aa6a:	d11b      	bne.n	802aaa4 <_dtoa_r+0xb4>
 802aa6c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802aa6e:	f242 730f 	movw	r3, #9999	; 0x270f
 802aa72:	6013      	str	r3, [r2, #0]
 802aa74:	f3cb 0313 	ubfx	r3, fp, #0, #20
 802aa78:	4333      	orrs	r3, r6
 802aa7a:	f000 8592 	beq.w	802b5a2 <_dtoa_r+0xbb2>
 802aa7e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802aa80:	b963      	cbnz	r3, 802aa9c <_dtoa_r+0xac>
 802aa82:	4b92      	ldr	r3, [pc, #584]	; (802accc <_dtoa_r+0x2dc>)
 802aa84:	e022      	b.n	802aacc <_dtoa_r+0xdc>
 802aa86:	4b92      	ldr	r3, [pc, #584]	; (802acd0 <_dtoa_r+0x2e0>)
 802aa88:	9301      	str	r3, [sp, #4]
 802aa8a:	3308      	adds	r3, #8
 802aa8c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802aa8e:	6013      	str	r3, [r2, #0]
 802aa90:	9801      	ldr	r0, [sp, #4]
 802aa92:	b013      	add	sp, #76	; 0x4c
 802aa94:	ecbd 8b04 	vpop	{d8-d9}
 802aa98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802aa9c:	4b8b      	ldr	r3, [pc, #556]	; (802accc <_dtoa_r+0x2dc>)
 802aa9e:	9301      	str	r3, [sp, #4]
 802aaa0:	3303      	adds	r3, #3
 802aaa2:	e7f3      	b.n	802aa8c <_dtoa_r+0x9c>
 802aaa4:	2200      	movs	r2, #0
 802aaa6:	2300      	movs	r3, #0
 802aaa8:	4650      	mov	r0, sl
 802aaaa:	4659      	mov	r1, fp
 802aaac:	f7d6 f816 	bl	8000adc <__aeabi_dcmpeq>
 802aab0:	ec4b ab19 	vmov	d9, sl, fp
 802aab4:	4680      	mov	r8, r0
 802aab6:	b158      	cbz	r0, 802aad0 <_dtoa_r+0xe0>
 802aab8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802aaba:	2301      	movs	r3, #1
 802aabc:	6013      	str	r3, [r2, #0]
 802aabe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802aac0:	2b00      	cmp	r3, #0
 802aac2:	f000 856b 	beq.w	802b59c <_dtoa_r+0xbac>
 802aac6:	4883      	ldr	r0, [pc, #524]	; (802acd4 <_dtoa_r+0x2e4>)
 802aac8:	6018      	str	r0, [r3, #0]
 802aaca:	1e43      	subs	r3, r0, #1
 802aacc:	9301      	str	r3, [sp, #4]
 802aace:	e7df      	b.n	802aa90 <_dtoa_r+0xa0>
 802aad0:	ec4b ab10 	vmov	d0, sl, fp
 802aad4:	aa10      	add	r2, sp, #64	; 0x40
 802aad6:	a911      	add	r1, sp, #68	; 0x44
 802aad8:	4620      	mov	r0, r4
 802aada:	f001 fed1 	bl	802c880 <__d2b>
 802aade:	f3cb 550a 	ubfx	r5, fp, #20, #11
 802aae2:	ee08 0a10 	vmov	s16, r0
 802aae6:	2d00      	cmp	r5, #0
 802aae8:	f000 8084 	beq.w	802abf4 <_dtoa_r+0x204>
 802aaec:	ee19 3a90 	vmov	r3, s19
 802aaf0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 802aaf4:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 802aaf8:	4656      	mov	r6, sl
 802aafa:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 802aafe:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 802ab02:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 802ab06:	4b74      	ldr	r3, [pc, #464]	; (802acd8 <_dtoa_r+0x2e8>)
 802ab08:	2200      	movs	r2, #0
 802ab0a:	4630      	mov	r0, r6
 802ab0c:	4639      	mov	r1, r7
 802ab0e:	f7d5 fbc5 	bl	800029c <__aeabi_dsub>
 802ab12:	a365      	add	r3, pc, #404	; (adr r3, 802aca8 <_dtoa_r+0x2b8>)
 802ab14:	e9d3 2300 	ldrd	r2, r3, [r3]
 802ab18:	f7d5 fd78 	bl	800060c <__aeabi_dmul>
 802ab1c:	a364      	add	r3, pc, #400	; (adr r3, 802acb0 <_dtoa_r+0x2c0>)
 802ab1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802ab22:	f7d5 fbbd 	bl	80002a0 <__adddf3>
 802ab26:	4606      	mov	r6, r0
 802ab28:	4628      	mov	r0, r5
 802ab2a:	460f      	mov	r7, r1
 802ab2c:	f7d5 fd04 	bl	8000538 <__aeabi_i2d>
 802ab30:	a361      	add	r3, pc, #388	; (adr r3, 802acb8 <_dtoa_r+0x2c8>)
 802ab32:	e9d3 2300 	ldrd	r2, r3, [r3]
 802ab36:	f7d5 fd69 	bl	800060c <__aeabi_dmul>
 802ab3a:	4602      	mov	r2, r0
 802ab3c:	460b      	mov	r3, r1
 802ab3e:	4630      	mov	r0, r6
 802ab40:	4639      	mov	r1, r7
 802ab42:	f7d5 fbad 	bl	80002a0 <__adddf3>
 802ab46:	4606      	mov	r6, r0
 802ab48:	460f      	mov	r7, r1
 802ab4a:	f7d6 f80f 	bl	8000b6c <__aeabi_d2iz>
 802ab4e:	2200      	movs	r2, #0
 802ab50:	9000      	str	r0, [sp, #0]
 802ab52:	2300      	movs	r3, #0
 802ab54:	4630      	mov	r0, r6
 802ab56:	4639      	mov	r1, r7
 802ab58:	f7d5 ffca 	bl	8000af0 <__aeabi_dcmplt>
 802ab5c:	b150      	cbz	r0, 802ab74 <_dtoa_r+0x184>
 802ab5e:	9800      	ldr	r0, [sp, #0]
 802ab60:	f7d5 fcea 	bl	8000538 <__aeabi_i2d>
 802ab64:	4632      	mov	r2, r6
 802ab66:	463b      	mov	r3, r7
 802ab68:	f7d5 ffb8 	bl	8000adc <__aeabi_dcmpeq>
 802ab6c:	b910      	cbnz	r0, 802ab74 <_dtoa_r+0x184>
 802ab6e:	9b00      	ldr	r3, [sp, #0]
 802ab70:	3b01      	subs	r3, #1
 802ab72:	9300      	str	r3, [sp, #0]
 802ab74:	9b00      	ldr	r3, [sp, #0]
 802ab76:	2b16      	cmp	r3, #22
 802ab78:	d85a      	bhi.n	802ac30 <_dtoa_r+0x240>
 802ab7a:	9a00      	ldr	r2, [sp, #0]
 802ab7c:	4b57      	ldr	r3, [pc, #348]	; (802acdc <_dtoa_r+0x2ec>)
 802ab7e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802ab82:	e9d3 2300 	ldrd	r2, r3, [r3]
 802ab86:	ec51 0b19 	vmov	r0, r1, d9
 802ab8a:	f7d5 ffb1 	bl	8000af0 <__aeabi_dcmplt>
 802ab8e:	2800      	cmp	r0, #0
 802ab90:	d050      	beq.n	802ac34 <_dtoa_r+0x244>
 802ab92:	9b00      	ldr	r3, [sp, #0]
 802ab94:	3b01      	subs	r3, #1
 802ab96:	9300      	str	r3, [sp, #0]
 802ab98:	2300      	movs	r3, #0
 802ab9a:	930b      	str	r3, [sp, #44]	; 0x2c
 802ab9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802ab9e:	1b5d      	subs	r5, r3, r5
 802aba0:	1e6b      	subs	r3, r5, #1
 802aba2:	9305      	str	r3, [sp, #20]
 802aba4:	bf45      	ittet	mi
 802aba6:	f1c5 0301 	rsbmi	r3, r5, #1
 802abaa:	9304      	strmi	r3, [sp, #16]
 802abac:	2300      	movpl	r3, #0
 802abae:	2300      	movmi	r3, #0
 802abb0:	bf4c      	ite	mi
 802abb2:	9305      	strmi	r3, [sp, #20]
 802abb4:	9304      	strpl	r3, [sp, #16]
 802abb6:	9b00      	ldr	r3, [sp, #0]
 802abb8:	2b00      	cmp	r3, #0
 802abba:	db3d      	blt.n	802ac38 <_dtoa_r+0x248>
 802abbc:	9b05      	ldr	r3, [sp, #20]
 802abbe:	9a00      	ldr	r2, [sp, #0]
 802abc0:	920a      	str	r2, [sp, #40]	; 0x28
 802abc2:	4413      	add	r3, r2
 802abc4:	9305      	str	r3, [sp, #20]
 802abc6:	2300      	movs	r3, #0
 802abc8:	9307      	str	r3, [sp, #28]
 802abca:	9b06      	ldr	r3, [sp, #24]
 802abcc:	2b09      	cmp	r3, #9
 802abce:	f200 8089 	bhi.w	802ace4 <_dtoa_r+0x2f4>
 802abd2:	2b05      	cmp	r3, #5
 802abd4:	bfc4      	itt	gt
 802abd6:	3b04      	subgt	r3, #4
 802abd8:	9306      	strgt	r3, [sp, #24]
 802abda:	9b06      	ldr	r3, [sp, #24]
 802abdc:	f1a3 0302 	sub.w	r3, r3, #2
 802abe0:	bfcc      	ite	gt
 802abe2:	2500      	movgt	r5, #0
 802abe4:	2501      	movle	r5, #1
 802abe6:	2b03      	cmp	r3, #3
 802abe8:	f200 8087 	bhi.w	802acfa <_dtoa_r+0x30a>
 802abec:	e8df f003 	tbb	[pc, r3]
 802abf0:	59383a2d 	.word	0x59383a2d
 802abf4:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 802abf8:	441d      	add	r5, r3
 802abfa:	f205 4332 	addw	r3, r5, #1074	; 0x432
 802abfe:	2b20      	cmp	r3, #32
 802ac00:	bfc1      	itttt	gt
 802ac02:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 802ac06:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 802ac0a:	fa0b f303 	lslgt.w	r3, fp, r3
 802ac0e:	fa26 f000 	lsrgt.w	r0, r6, r0
 802ac12:	bfda      	itte	le
 802ac14:	f1c3 0320 	rsble	r3, r3, #32
 802ac18:	fa06 f003 	lslle.w	r0, r6, r3
 802ac1c:	4318      	orrgt	r0, r3
 802ac1e:	f7d5 fc7b 	bl	8000518 <__aeabi_ui2d>
 802ac22:	2301      	movs	r3, #1
 802ac24:	4606      	mov	r6, r0
 802ac26:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 802ac2a:	3d01      	subs	r5, #1
 802ac2c:	930e      	str	r3, [sp, #56]	; 0x38
 802ac2e:	e76a      	b.n	802ab06 <_dtoa_r+0x116>
 802ac30:	2301      	movs	r3, #1
 802ac32:	e7b2      	b.n	802ab9a <_dtoa_r+0x1aa>
 802ac34:	900b      	str	r0, [sp, #44]	; 0x2c
 802ac36:	e7b1      	b.n	802ab9c <_dtoa_r+0x1ac>
 802ac38:	9b04      	ldr	r3, [sp, #16]
 802ac3a:	9a00      	ldr	r2, [sp, #0]
 802ac3c:	1a9b      	subs	r3, r3, r2
 802ac3e:	9304      	str	r3, [sp, #16]
 802ac40:	4253      	negs	r3, r2
 802ac42:	9307      	str	r3, [sp, #28]
 802ac44:	2300      	movs	r3, #0
 802ac46:	930a      	str	r3, [sp, #40]	; 0x28
 802ac48:	e7bf      	b.n	802abca <_dtoa_r+0x1da>
 802ac4a:	2300      	movs	r3, #0
 802ac4c:	9308      	str	r3, [sp, #32]
 802ac4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802ac50:	2b00      	cmp	r3, #0
 802ac52:	dc55      	bgt.n	802ad00 <_dtoa_r+0x310>
 802ac54:	2301      	movs	r3, #1
 802ac56:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802ac5a:	461a      	mov	r2, r3
 802ac5c:	9209      	str	r2, [sp, #36]	; 0x24
 802ac5e:	e00c      	b.n	802ac7a <_dtoa_r+0x28a>
 802ac60:	2301      	movs	r3, #1
 802ac62:	e7f3      	b.n	802ac4c <_dtoa_r+0x25c>
 802ac64:	2300      	movs	r3, #0
 802ac66:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802ac68:	9308      	str	r3, [sp, #32]
 802ac6a:	9b00      	ldr	r3, [sp, #0]
 802ac6c:	4413      	add	r3, r2
 802ac6e:	9302      	str	r3, [sp, #8]
 802ac70:	3301      	adds	r3, #1
 802ac72:	2b01      	cmp	r3, #1
 802ac74:	9303      	str	r3, [sp, #12]
 802ac76:	bfb8      	it	lt
 802ac78:	2301      	movlt	r3, #1
 802ac7a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 802ac7c:	2200      	movs	r2, #0
 802ac7e:	6042      	str	r2, [r0, #4]
 802ac80:	2204      	movs	r2, #4
 802ac82:	f102 0614 	add.w	r6, r2, #20
 802ac86:	429e      	cmp	r6, r3
 802ac88:	6841      	ldr	r1, [r0, #4]
 802ac8a:	d93d      	bls.n	802ad08 <_dtoa_r+0x318>
 802ac8c:	4620      	mov	r0, r4
 802ac8e:	f001 fa09 	bl	802c0a4 <_Balloc>
 802ac92:	9001      	str	r0, [sp, #4]
 802ac94:	2800      	cmp	r0, #0
 802ac96:	d13b      	bne.n	802ad10 <_dtoa_r+0x320>
 802ac98:	4b11      	ldr	r3, [pc, #68]	; (802ace0 <_dtoa_r+0x2f0>)
 802ac9a:	4602      	mov	r2, r0
 802ac9c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 802aca0:	e6c0      	b.n	802aa24 <_dtoa_r+0x34>
 802aca2:	2301      	movs	r3, #1
 802aca4:	e7df      	b.n	802ac66 <_dtoa_r+0x276>
 802aca6:	bf00      	nop
 802aca8:	636f4361 	.word	0x636f4361
 802acac:	3fd287a7 	.word	0x3fd287a7
 802acb0:	8b60c8b3 	.word	0x8b60c8b3
 802acb4:	3fc68a28 	.word	0x3fc68a28
 802acb8:	509f79fb 	.word	0x509f79fb
 802acbc:	3fd34413 	.word	0x3fd34413
 802acc0:	08031fa4 	.word	0x08031fa4
 802acc4:	08032cc7 	.word	0x08032cc7
 802acc8:	7ff00000 	.word	0x7ff00000
 802accc:	08032cc3 	.word	0x08032cc3
 802acd0:	08032cba 	.word	0x08032cba
 802acd4:	08032f12 	.word	0x08032f12
 802acd8:	3ff80000 	.word	0x3ff80000
 802acdc:	08032e28 	.word	0x08032e28
 802ace0:	08032d22 	.word	0x08032d22
 802ace4:	2501      	movs	r5, #1
 802ace6:	2300      	movs	r3, #0
 802ace8:	9306      	str	r3, [sp, #24]
 802acea:	9508      	str	r5, [sp, #32]
 802acec:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 802acf0:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802acf4:	2200      	movs	r2, #0
 802acf6:	2312      	movs	r3, #18
 802acf8:	e7b0      	b.n	802ac5c <_dtoa_r+0x26c>
 802acfa:	2301      	movs	r3, #1
 802acfc:	9308      	str	r3, [sp, #32]
 802acfe:	e7f5      	b.n	802acec <_dtoa_r+0x2fc>
 802ad00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802ad02:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802ad06:	e7b8      	b.n	802ac7a <_dtoa_r+0x28a>
 802ad08:	3101      	adds	r1, #1
 802ad0a:	6041      	str	r1, [r0, #4]
 802ad0c:	0052      	lsls	r2, r2, #1
 802ad0e:	e7b8      	b.n	802ac82 <_dtoa_r+0x292>
 802ad10:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802ad12:	9a01      	ldr	r2, [sp, #4]
 802ad14:	601a      	str	r2, [r3, #0]
 802ad16:	9b03      	ldr	r3, [sp, #12]
 802ad18:	2b0e      	cmp	r3, #14
 802ad1a:	f200 809d 	bhi.w	802ae58 <_dtoa_r+0x468>
 802ad1e:	2d00      	cmp	r5, #0
 802ad20:	f000 809a 	beq.w	802ae58 <_dtoa_r+0x468>
 802ad24:	9b00      	ldr	r3, [sp, #0]
 802ad26:	2b00      	cmp	r3, #0
 802ad28:	dd32      	ble.n	802ad90 <_dtoa_r+0x3a0>
 802ad2a:	4ab7      	ldr	r2, [pc, #732]	; (802b008 <_dtoa_r+0x618>)
 802ad2c:	f003 030f 	and.w	r3, r3, #15
 802ad30:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 802ad34:	e9d3 8900 	ldrd	r8, r9, [r3]
 802ad38:	9b00      	ldr	r3, [sp, #0]
 802ad3a:	05d8      	lsls	r0, r3, #23
 802ad3c:	ea4f 1723 	mov.w	r7, r3, asr #4
 802ad40:	d516      	bpl.n	802ad70 <_dtoa_r+0x380>
 802ad42:	4bb2      	ldr	r3, [pc, #712]	; (802b00c <_dtoa_r+0x61c>)
 802ad44:	ec51 0b19 	vmov	r0, r1, d9
 802ad48:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 802ad4c:	f7d5 fd88 	bl	8000860 <__aeabi_ddiv>
 802ad50:	f007 070f 	and.w	r7, r7, #15
 802ad54:	4682      	mov	sl, r0
 802ad56:	468b      	mov	fp, r1
 802ad58:	2503      	movs	r5, #3
 802ad5a:	4eac      	ldr	r6, [pc, #688]	; (802b00c <_dtoa_r+0x61c>)
 802ad5c:	b957      	cbnz	r7, 802ad74 <_dtoa_r+0x384>
 802ad5e:	4642      	mov	r2, r8
 802ad60:	464b      	mov	r3, r9
 802ad62:	4650      	mov	r0, sl
 802ad64:	4659      	mov	r1, fp
 802ad66:	f7d5 fd7b 	bl	8000860 <__aeabi_ddiv>
 802ad6a:	4682      	mov	sl, r0
 802ad6c:	468b      	mov	fp, r1
 802ad6e:	e028      	b.n	802adc2 <_dtoa_r+0x3d2>
 802ad70:	2502      	movs	r5, #2
 802ad72:	e7f2      	b.n	802ad5a <_dtoa_r+0x36a>
 802ad74:	07f9      	lsls	r1, r7, #31
 802ad76:	d508      	bpl.n	802ad8a <_dtoa_r+0x39a>
 802ad78:	4640      	mov	r0, r8
 802ad7a:	4649      	mov	r1, r9
 802ad7c:	e9d6 2300 	ldrd	r2, r3, [r6]
 802ad80:	f7d5 fc44 	bl	800060c <__aeabi_dmul>
 802ad84:	3501      	adds	r5, #1
 802ad86:	4680      	mov	r8, r0
 802ad88:	4689      	mov	r9, r1
 802ad8a:	107f      	asrs	r7, r7, #1
 802ad8c:	3608      	adds	r6, #8
 802ad8e:	e7e5      	b.n	802ad5c <_dtoa_r+0x36c>
 802ad90:	f000 809b 	beq.w	802aeca <_dtoa_r+0x4da>
 802ad94:	9b00      	ldr	r3, [sp, #0]
 802ad96:	4f9d      	ldr	r7, [pc, #628]	; (802b00c <_dtoa_r+0x61c>)
 802ad98:	425e      	negs	r6, r3
 802ad9a:	4b9b      	ldr	r3, [pc, #620]	; (802b008 <_dtoa_r+0x618>)
 802ad9c:	f006 020f 	and.w	r2, r6, #15
 802ada0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802ada4:	e9d3 2300 	ldrd	r2, r3, [r3]
 802ada8:	ec51 0b19 	vmov	r0, r1, d9
 802adac:	f7d5 fc2e 	bl	800060c <__aeabi_dmul>
 802adb0:	1136      	asrs	r6, r6, #4
 802adb2:	4682      	mov	sl, r0
 802adb4:	468b      	mov	fp, r1
 802adb6:	2300      	movs	r3, #0
 802adb8:	2502      	movs	r5, #2
 802adba:	2e00      	cmp	r6, #0
 802adbc:	d17a      	bne.n	802aeb4 <_dtoa_r+0x4c4>
 802adbe:	2b00      	cmp	r3, #0
 802adc0:	d1d3      	bne.n	802ad6a <_dtoa_r+0x37a>
 802adc2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802adc4:	2b00      	cmp	r3, #0
 802adc6:	f000 8082 	beq.w	802aece <_dtoa_r+0x4de>
 802adca:	4b91      	ldr	r3, [pc, #580]	; (802b010 <_dtoa_r+0x620>)
 802adcc:	2200      	movs	r2, #0
 802adce:	4650      	mov	r0, sl
 802add0:	4659      	mov	r1, fp
 802add2:	f7d5 fe8d 	bl	8000af0 <__aeabi_dcmplt>
 802add6:	2800      	cmp	r0, #0
 802add8:	d079      	beq.n	802aece <_dtoa_r+0x4de>
 802adda:	9b03      	ldr	r3, [sp, #12]
 802addc:	2b00      	cmp	r3, #0
 802adde:	d076      	beq.n	802aece <_dtoa_r+0x4de>
 802ade0:	9b02      	ldr	r3, [sp, #8]
 802ade2:	2b00      	cmp	r3, #0
 802ade4:	dd36      	ble.n	802ae54 <_dtoa_r+0x464>
 802ade6:	9b00      	ldr	r3, [sp, #0]
 802ade8:	4650      	mov	r0, sl
 802adea:	4659      	mov	r1, fp
 802adec:	1e5f      	subs	r7, r3, #1
 802adee:	2200      	movs	r2, #0
 802adf0:	4b88      	ldr	r3, [pc, #544]	; (802b014 <_dtoa_r+0x624>)
 802adf2:	f7d5 fc0b 	bl	800060c <__aeabi_dmul>
 802adf6:	9e02      	ldr	r6, [sp, #8]
 802adf8:	4682      	mov	sl, r0
 802adfa:	468b      	mov	fp, r1
 802adfc:	3501      	adds	r5, #1
 802adfe:	4628      	mov	r0, r5
 802ae00:	f7d5 fb9a 	bl	8000538 <__aeabi_i2d>
 802ae04:	4652      	mov	r2, sl
 802ae06:	465b      	mov	r3, fp
 802ae08:	f7d5 fc00 	bl	800060c <__aeabi_dmul>
 802ae0c:	4b82      	ldr	r3, [pc, #520]	; (802b018 <_dtoa_r+0x628>)
 802ae0e:	2200      	movs	r2, #0
 802ae10:	f7d5 fa46 	bl	80002a0 <__adddf3>
 802ae14:	46d0      	mov	r8, sl
 802ae16:	46d9      	mov	r9, fp
 802ae18:	4682      	mov	sl, r0
 802ae1a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 802ae1e:	2e00      	cmp	r6, #0
 802ae20:	d158      	bne.n	802aed4 <_dtoa_r+0x4e4>
 802ae22:	4b7e      	ldr	r3, [pc, #504]	; (802b01c <_dtoa_r+0x62c>)
 802ae24:	2200      	movs	r2, #0
 802ae26:	4640      	mov	r0, r8
 802ae28:	4649      	mov	r1, r9
 802ae2a:	f7d5 fa37 	bl	800029c <__aeabi_dsub>
 802ae2e:	4652      	mov	r2, sl
 802ae30:	465b      	mov	r3, fp
 802ae32:	4680      	mov	r8, r0
 802ae34:	4689      	mov	r9, r1
 802ae36:	f7d5 fe79 	bl	8000b2c <__aeabi_dcmpgt>
 802ae3a:	2800      	cmp	r0, #0
 802ae3c:	f040 8295 	bne.w	802b36a <_dtoa_r+0x97a>
 802ae40:	4652      	mov	r2, sl
 802ae42:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 802ae46:	4640      	mov	r0, r8
 802ae48:	4649      	mov	r1, r9
 802ae4a:	f7d5 fe51 	bl	8000af0 <__aeabi_dcmplt>
 802ae4e:	2800      	cmp	r0, #0
 802ae50:	f040 8289 	bne.w	802b366 <_dtoa_r+0x976>
 802ae54:	ec5b ab19 	vmov	sl, fp, d9
 802ae58:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802ae5a:	2b00      	cmp	r3, #0
 802ae5c:	f2c0 8148 	blt.w	802b0f0 <_dtoa_r+0x700>
 802ae60:	9a00      	ldr	r2, [sp, #0]
 802ae62:	2a0e      	cmp	r2, #14
 802ae64:	f300 8144 	bgt.w	802b0f0 <_dtoa_r+0x700>
 802ae68:	4b67      	ldr	r3, [pc, #412]	; (802b008 <_dtoa_r+0x618>)
 802ae6a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802ae6e:	e9d3 8900 	ldrd	r8, r9, [r3]
 802ae72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802ae74:	2b00      	cmp	r3, #0
 802ae76:	f280 80d5 	bge.w	802b024 <_dtoa_r+0x634>
 802ae7a:	9b03      	ldr	r3, [sp, #12]
 802ae7c:	2b00      	cmp	r3, #0
 802ae7e:	f300 80d1 	bgt.w	802b024 <_dtoa_r+0x634>
 802ae82:	f040 826f 	bne.w	802b364 <_dtoa_r+0x974>
 802ae86:	4b65      	ldr	r3, [pc, #404]	; (802b01c <_dtoa_r+0x62c>)
 802ae88:	2200      	movs	r2, #0
 802ae8a:	4640      	mov	r0, r8
 802ae8c:	4649      	mov	r1, r9
 802ae8e:	f7d5 fbbd 	bl	800060c <__aeabi_dmul>
 802ae92:	4652      	mov	r2, sl
 802ae94:	465b      	mov	r3, fp
 802ae96:	f7d5 fe3f 	bl	8000b18 <__aeabi_dcmpge>
 802ae9a:	9e03      	ldr	r6, [sp, #12]
 802ae9c:	4637      	mov	r7, r6
 802ae9e:	2800      	cmp	r0, #0
 802aea0:	f040 8245 	bne.w	802b32e <_dtoa_r+0x93e>
 802aea4:	9d01      	ldr	r5, [sp, #4]
 802aea6:	2331      	movs	r3, #49	; 0x31
 802aea8:	f805 3b01 	strb.w	r3, [r5], #1
 802aeac:	9b00      	ldr	r3, [sp, #0]
 802aeae:	3301      	adds	r3, #1
 802aeb0:	9300      	str	r3, [sp, #0]
 802aeb2:	e240      	b.n	802b336 <_dtoa_r+0x946>
 802aeb4:	07f2      	lsls	r2, r6, #31
 802aeb6:	d505      	bpl.n	802aec4 <_dtoa_r+0x4d4>
 802aeb8:	e9d7 2300 	ldrd	r2, r3, [r7]
 802aebc:	f7d5 fba6 	bl	800060c <__aeabi_dmul>
 802aec0:	3501      	adds	r5, #1
 802aec2:	2301      	movs	r3, #1
 802aec4:	1076      	asrs	r6, r6, #1
 802aec6:	3708      	adds	r7, #8
 802aec8:	e777      	b.n	802adba <_dtoa_r+0x3ca>
 802aeca:	2502      	movs	r5, #2
 802aecc:	e779      	b.n	802adc2 <_dtoa_r+0x3d2>
 802aece:	9f00      	ldr	r7, [sp, #0]
 802aed0:	9e03      	ldr	r6, [sp, #12]
 802aed2:	e794      	b.n	802adfe <_dtoa_r+0x40e>
 802aed4:	9901      	ldr	r1, [sp, #4]
 802aed6:	4b4c      	ldr	r3, [pc, #304]	; (802b008 <_dtoa_r+0x618>)
 802aed8:	4431      	add	r1, r6
 802aeda:	910d      	str	r1, [sp, #52]	; 0x34
 802aedc:	9908      	ldr	r1, [sp, #32]
 802aede:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 802aee2:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 802aee6:	2900      	cmp	r1, #0
 802aee8:	d043      	beq.n	802af72 <_dtoa_r+0x582>
 802aeea:	494d      	ldr	r1, [pc, #308]	; (802b020 <_dtoa_r+0x630>)
 802aeec:	2000      	movs	r0, #0
 802aeee:	f7d5 fcb7 	bl	8000860 <__aeabi_ddiv>
 802aef2:	4652      	mov	r2, sl
 802aef4:	465b      	mov	r3, fp
 802aef6:	f7d5 f9d1 	bl	800029c <__aeabi_dsub>
 802aefa:	9d01      	ldr	r5, [sp, #4]
 802aefc:	4682      	mov	sl, r0
 802aefe:	468b      	mov	fp, r1
 802af00:	4649      	mov	r1, r9
 802af02:	4640      	mov	r0, r8
 802af04:	f7d5 fe32 	bl	8000b6c <__aeabi_d2iz>
 802af08:	4606      	mov	r6, r0
 802af0a:	f7d5 fb15 	bl	8000538 <__aeabi_i2d>
 802af0e:	4602      	mov	r2, r0
 802af10:	460b      	mov	r3, r1
 802af12:	4640      	mov	r0, r8
 802af14:	4649      	mov	r1, r9
 802af16:	f7d5 f9c1 	bl	800029c <__aeabi_dsub>
 802af1a:	3630      	adds	r6, #48	; 0x30
 802af1c:	f805 6b01 	strb.w	r6, [r5], #1
 802af20:	4652      	mov	r2, sl
 802af22:	465b      	mov	r3, fp
 802af24:	4680      	mov	r8, r0
 802af26:	4689      	mov	r9, r1
 802af28:	f7d5 fde2 	bl	8000af0 <__aeabi_dcmplt>
 802af2c:	2800      	cmp	r0, #0
 802af2e:	d163      	bne.n	802aff8 <_dtoa_r+0x608>
 802af30:	4642      	mov	r2, r8
 802af32:	464b      	mov	r3, r9
 802af34:	4936      	ldr	r1, [pc, #216]	; (802b010 <_dtoa_r+0x620>)
 802af36:	2000      	movs	r0, #0
 802af38:	f7d5 f9b0 	bl	800029c <__aeabi_dsub>
 802af3c:	4652      	mov	r2, sl
 802af3e:	465b      	mov	r3, fp
 802af40:	f7d5 fdd6 	bl	8000af0 <__aeabi_dcmplt>
 802af44:	2800      	cmp	r0, #0
 802af46:	f040 80b5 	bne.w	802b0b4 <_dtoa_r+0x6c4>
 802af4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802af4c:	429d      	cmp	r5, r3
 802af4e:	d081      	beq.n	802ae54 <_dtoa_r+0x464>
 802af50:	4b30      	ldr	r3, [pc, #192]	; (802b014 <_dtoa_r+0x624>)
 802af52:	2200      	movs	r2, #0
 802af54:	4650      	mov	r0, sl
 802af56:	4659      	mov	r1, fp
 802af58:	f7d5 fb58 	bl	800060c <__aeabi_dmul>
 802af5c:	4b2d      	ldr	r3, [pc, #180]	; (802b014 <_dtoa_r+0x624>)
 802af5e:	4682      	mov	sl, r0
 802af60:	468b      	mov	fp, r1
 802af62:	4640      	mov	r0, r8
 802af64:	4649      	mov	r1, r9
 802af66:	2200      	movs	r2, #0
 802af68:	f7d5 fb50 	bl	800060c <__aeabi_dmul>
 802af6c:	4680      	mov	r8, r0
 802af6e:	4689      	mov	r9, r1
 802af70:	e7c6      	b.n	802af00 <_dtoa_r+0x510>
 802af72:	4650      	mov	r0, sl
 802af74:	4659      	mov	r1, fp
 802af76:	f7d5 fb49 	bl	800060c <__aeabi_dmul>
 802af7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802af7c:	9d01      	ldr	r5, [sp, #4]
 802af7e:	930f      	str	r3, [sp, #60]	; 0x3c
 802af80:	4682      	mov	sl, r0
 802af82:	468b      	mov	fp, r1
 802af84:	4649      	mov	r1, r9
 802af86:	4640      	mov	r0, r8
 802af88:	f7d5 fdf0 	bl	8000b6c <__aeabi_d2iz>
 802af8c:	4606      	mov	r6, r0
 802af8e:	f7d5 fad3 	bl	8000538 <__aeabi_i2d>
 802af92:	3630      	adds	r6, #48	; 0x30
 802af94:	4602      	mov	r2, r0
 802af96:	460b      	mov	r3, r1
 802af98:	4640      	mov	r0, r8
 802af9a:	4649      	mov	r1, r9
 802af9c:	f7d5 f97e 	bl	800029c <__aeabi_dsub>
 802afa0:	f805 6b01 	strb.w	r6, [r5], #1
 802afa4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802afa6:	429d      	cmp	r5, r3
 802afa8:	4680      	mov	r8, r0
 802afaa:	4689      	mov	r9, r1
 802afac:	f04f 0200 	mov.w	r2, #0
 802afb0:	d124      	bne.n	802affc <_dtoa_r+0x60c>
 802afb2:	4b1b      	ldr	r3, [pc, #108]	; (802b020 <_dtoa_r+0x630>)
 802afb4:	4650      	mov	r0, sl
 802afb6:	4659      	mov	r1, fp
 802afb8:	f7d5 f972 	bl	80002a0 <__adddf3>
 802afbc:	4602      	mov	r2, r0
 802afbe:	460b      	mov	r3, r1
 802afc0:	4640      	mov	r0, r8
 802afc2:	4649      	mov	r1, r9
 802afc4:	f7d5 fdb2 	bl	8000b2c <__aeabi_dcmpgt>
 802afc8:	2800      	cmp	r0, #0
 802afca:	d173      	bne.n	802b0b4 <_dtoa_r+0x6c4>
 802afcc:	4652      	mov	r2, sl
 802afce:	465b      	mov	r3, fp
 802afd0:	4913      	ldr	r1, [pc, #76]	; (802b020 <_dtoa_r+0x630>)
 802afd2:	2000      	movs	r0, #0
 802afd4:	f7d5 f962 	bl	800029c <__aeabi_dsub>
 802afd8:	4602      	mov	r2, r0
 802afda:	460b      	mov	r3, r1
 802afdc:	4640      	mov	r0, r8
 802afde:	4649      	mov	r1, r9
 802afe0:	f7d5 fd86 	bl	8000af0 <__aeabi_dcmplt>
 802afe4:	2800      	cmp	r0, #0
 802afe6:	f43f af35 	beq.w	802ae54 <_dtoa_r+0x464>
 802afea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802afec:	1e6b      	subs	r3, r5, #1
 802afee:	930f      	str	r3, [sp, #60]	; 0x3c
 802aff0:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 802aff4:	2b30      	cmp	r3, #48	; 0x30
 802aff6:	d0f8      	beq.n	802afea <_dtoa_r+0x5fa>
 802aff8:	9700      	str	r7, [sp, #0]
 802affa:	e049      	b.n	802b090 <_dtoa_r+0x6a0>
 802affc:	4b05      	ldr	r3, [pc, #20]	; (802b014 <_dtoa_r+0x624>)
 802affe:	f7d5 fb05 	bl	800060c <__aeabi_dmul>
 802b002:	4680      	mov	r8, r0
 802b004:	4689      	mov	r9, r1
 802b006:	e7bd      	b.n	802af84 <_dtoa_r+0x594>
 802b008:	08032e28 	.word	0x08032e28
 802b00c:	08032e00 	.word	0x08032e00
 802b010:	3ff00000 	.word	0x3ff00000
 802b014:	40240000 	.word	0x40240000
 802b018:	401c0000 	.word	0x401c0000
 802b01c:	40140000 	.word	0x40140000
 802b020:	3fe00000 	.word	0x3fe00000
 802b024:	9d01      	ldr	r5, [sp, #4]
 802b026:	4656      	mov	r6, sl
 802b028:	465f      	mov	r7, fp
 802b02a:	4642      	mov	r2, r8
 802b02c:	464b      	mov	r3, r9
 802b02e:	4630      	mov	r0, r6
 802b030:	4639      	mov	r1, r7
 802b032:	f7d5 fc15 	bl	8000860 <__aeabi_ddiv>
 802b036:	f7d5 fd99 	bl	8000b6c <__aeabi_d2iz>
 802b03a:	4682      	mov	sl, r0
 802b03c:	f7d5 fa7c 	bl	8000538 <__aeabi_i2d>
 802b040:	4642      	mov	r2, r8
 802b042:	464b      	mov	r3, r9
 802b044:	f7d5 fae2 	bl	800060c <__aeabi_dmul>
 802b048:	4602      	mov	r2, r0
 802b04a:	460b      	mov	r3, r1
 802b04c:	4630      	mov	r0, r6
 802b04e:	4639      	mov	r1, r7
 802b050:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 802b054:	f7d5 f922 	bl	800029c <__aeabi_dsub>
 802b058:	f805 6b01 	strb.w	r6, [r5], #1
 802b05c:	9e01      	ldr	r6, [sp, #4]
 802b05e:	9f03      	ldr	r7, [sp, #12]
 802b060:	1bae      	subs	r6, r5, r6
 802b062:	42b7      	cmp	r7, r6
 802b064:	4602      	mov	r2, r0
 802b066:	460b      	mov	r3, r1
 802b068:	d135      	bne.n	802b0d6 <_dtoa_r+0x6e6>
 802b06a:	f7d5 f919 	bl	80002a0 <__adddf3>
 802b06e:	4642      	mov	r2, r8
 802b070:	464b      	mov	r3, r9
 802b072:	4606      	mov	r6, r0
 802b074:	460f      	mov	r7, r1
 802b076:	f7d5 fd59 	bl	8000b2c <__aeabi_dcmpgt>
 802b07a:	b9d0      	cbnz	r0, 802b0b2 <_dtoa_r+0x6c2>
 802b07c:	4642      	mov	r2, r8
 802b07e:	464b      	mov	r3, r9
 802b080:	4630      	mov	r0, r6
 802b082:	4639      	mov	r1, r7
 802b084:	f7d5 fd2a 	bl	8000adc <__aeabi_dcmpeq>
 802b088:	b110      	cbz	r0, 802b090 <_dtoa_r+0x6a0>
 802b08a:	f01a 0f01 	tst.w	sl, #1
 802b08e:	d110      	bne.n	802b0b2 <_dtoa_r+0x6c2>
 802b090:	4620      	mov	r0, r4
 802b092:	ee18 1a10 	vmov	r1, s16
 802b096:	f001 f845 	bl	802c124 <_Bfree>
 802b09a:	2300      	movs	r3, #0
 802b09c:	9800      	ldr	r0, [sp, #0]
 802b09e:	702b      	strb	r3, [r5, #0]
 802b0a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802b0a2:	3001      	adds	r0, #1
 802b0a4:	6018      	str	r0, [r3, #0]
 802b0a6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802b0a8:	2b00      	cmp	r3, #0
 802b0aa:	f43f acf1 	beq.w	802aa90 <_dtoa_r+0xa0>
 802b0ae:	601d      	str	r5, [r3, #0]
 802b0b0:	e4ee      	b.n	802aa90 <_dtoa_r+0xa0>
 802b0b2:	9f00      	ldr	r7, [sp, #0]
 802b0b4:	462b      	mov	r3, r5
 802b0b6:	461d      	mov	r5, r3
 802b0b8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802b0bc:	2a39      	cmp	r2, #57	; 0x39
 802b0be:	d106      	bne.n	802b0ce <_dtoa_r+0x6de>
 802b0c0:	9a01      	ldr	r2, [sp, #4]
 802b0c2:	429a      	cmp	r2, r3
 802b0c4:	d1f7      	bne.n	802b0b6 <_dtoa_r+0x6c6>
 802b0c6:	9901      	ldr	r1, [sp, #4]
 802b0c8:	2230      	movs	r2, #48	; 0x30
 802b0ca:	3701      	adds	r7, #1
 802b0cc:	700a      	strb	r2, [r1, #0]
 802b0ce:	781a      	ldrb	r2, [r3, #0]
 802b0d0:	3201      	adds	r2, #1
 802b0d2:	701a      	strb	r2, [r3, #0]
 802b0d4:	e790      	b.n	802aff8 <_dtoa_r+0x608>
 802b0d6:	4ba6      	ldr	r3, [pc, #664]	; (802b370 <_dtoa_r+0x980>)
 802b0d8:	2200      	movs	r2, #0
 802b0da:	f7d5 fa97 	bl	800060c <__aeabi_dmul>
 802b0de:	2200      	movs	r2, #0
 802b0e0:	2300      	movs	r3, #0
 802b0e2:	4606      	mov	r6, r0
 802b0e4:	460f      	mov	r7, r1
 802b0e6:	f7d5 fcf9 	bl	8000adc <__aeabi_dcmpeq>
 802b0ea:	2800      	cmp	r0, #0
 802b0ec:	d09d      	beq.n	802b02a <_dtoa_r+0x63a>
 802b0ee:	e7cf      	b.n	802b090 <_dtoa_r+0x6a0>
 802b0f0:	9a08      	ldr	r2, [sp, #32]
 802b0f2:	2a00      	cmp	r2, #0
 802b0f4:	f000 80d7 	beq.w	802b2a6 <_dtoa_r+0x8b6>
 802b0f8:	9a06      	ldr	r2, [sp, #24]
 802b0fa:	2a01      	cmp	r2, #1
 802b0fc:	f300 80ba 	bgt.w	802b274 <_dtoa_r+0x884>
 802b100:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802b102:	2a00      	cmp	r2, #0
 802b104:	f000 80b2 	beq.w	802b26c <_dtoa_r+0x87c>
 802b108:	f203 4333 	addw	r3, r3, #1075	; 0x433
 802b10c:	9e07      	ldr	r6, [sp, #28]
 802b10e:	9d04      	ldr	r5, [sp, #16]
 802b110:	9a04      	ldr	r2, [sp, #16]
 802b112:	441a      	add	r2, r3
 802b114:	9204      	str	r2, [sp, #16]
 802b116:	9a05      	ldr	r2, [sp, #20]
 802b118:	2101      	movs	r1, #1
 802b11a:	441a      	add	r2, r3
 802b11c:	4620      	mov	r0, r4
 802b11e:	9205      	str	r2, [sp, #20]
 802b120:	f001 f902 	bl	802c328 <__i2b>
 802b124:	4607      	mov	r7, r0
 802b126:	2d00      	cmp	r5, #0
 802b128:	dd0c      	ble.n	802b144 <_dtoa_r+0x754>
 802b12a:	9b05      	ldr	r3, [sp, #20]
 802b12c:	2b00      	cmp	r3, #0
 802b12e:	dd09      	ble.n	802b144 <_dtoa_r+0x754>
 802b130:	42ab      	cmp	r3, r5
 802b132:	9a04      	ldr	r2, [sp, #16]
 802b134:	bfa8      	it	ge
 802b136:	462b      	movge	r3, r5
 802b138:	1ad2      	subs	r2, r2, r3
 802b13a:	9204      	str	r2, [sp, #16]
 802b13c:	9a05      	ldr	r2, [sp, #20]
 802b13e:	1aed      	subs	r5, r5, r3
 802b140:	1ad3      	subs	r3, r2, r3
 802b142:	9305      	str	r3, [sp, #20]
 802b144:	9b07      	ldr	r3, [sp, #28]
 802b146:	b31b      	cbz	r3, 802b190 <_dtoa_r+0x7a0>
 802b148:	9b08      	ldr	r3, [sp, #32]
 802b14a:	2b00      	cmp	r3, #0
 802b14c:	f000 80af 	beq.w	802b2ae <_dtoa_r+0x8be>
 802b150:	2e00      	cmp	r6, #0
 802b152:	dd13      	ble.n	802b17c <_dtoa_r+0x78c>
 802b154:	4639      	mov	r1, r7
 802b156:	4632      	mov	r2, r6
 802b158:	4620      	mov	r0, r4
 802b15a:	f001 f9a5 	bl	802c4a8 <__pow5mult>
 802b15e:	ee18 2a10 	vmov	r2, s16
 802b162:	4601      	mov	r1, r0
 802b164:	4607      	mov	r7, r0
 802b166:	4620      	mov	r0, r4
 802b168:	f001 f8f4 	bl	802c354 <__multiply>
 802b16c:	ee18 1a10 	vmov	r1, s16
 802b170:	4680      	mov	r8, r0
 802b172:	4620      	mov	r0, r4
 802b174:	f000 ffd6 	bl	802c124 <_Bfree>
 802b178:	ee08 8a10 	vmov	s16, r8
 802b17c:	9b07      	ldr	r3, [sp, #28]
 802b17e:	1b9a      	subs	r2, r3, r6
 802b180:	d006      	beq.n	802b190 <_dtoa_r+0x7a0>
 802b182:	ee18 1a10 	vmov	r1, s16
 802b186:	4620      	mov	r0, r4
 802b188:	f001 f98e 	bl	802c4a8 <__pow5mult>
 802b18c:	ee08 0a10 	vmov	s16, r0
 802b190:	2101      	movs	r1, #1
 802b192:	4620      	mov	r0, r4
 802b194:	f001 f8c8 	bl	802c328 <__i2b>
 802b198:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802b19a:	2b00      	cmp	r3, #0
 802b19c:	4606      	mov	r6, r0
 802b19e:	f340 8088 	ble.w	802b2b2 <_dtoa_r+0x8c2>
 802b1a2:	461a      	mov	r2, r3
 802b1a4:	4601      	mov	r1, r0
 802b1a6:	4620      	mov	r0, r4
 802b1a8:	f001 f97e 	bl	802c4a8 <__pow5mult>
 802b1ac:	9b06      	ldr	r3, [sp, #24]
 802b1ae:	2b01      	cmp	r3, #1
 802b1b0:	4606      	mov	r6, r0
 802b1b2:	f340 8081 	ble.w	802b2b8 <_dtoa_r+0x8c8>
 802b1b6:	f04f 0800 	mov.w	r8, #0
 802b1ba:	6933      	ldr	r3, [r6, #16]
 802b1bc:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 802b1c0:	6918      	ldr	r0, [r3, #16]
 802b1c2:	f001 f861 	bl	802c288 <__hi0bits>
 802b1c6:	f1c0 0020 	rsb	r0, r0, #32
 802b1ca:	9b05      	ldr	r3, [sp, #20]
 802b1cc:	4418      	add	r0, r3
 802b1ce:	f010 001f 	ands.w	r0, r0, #31
 802b1d2:	f000 8092 	beq.w	802b2fa <_dtoa_r+0x90a>
 802b1d6:	f1c0 0320 	rsb	r3, r0, #32
 802b1da:	2b04      	cmp	r3, #4
 802b1dc:	f340 808a 	ble.w	802b2f4 <_dtoa_r+0x904>
 802b1e0:	f1c0 001c 	rsb	r0, r0, #28
 802b1e4:	9b04      	ldr	r3, [sp, #16]
 802b1e6:	4403      	add	r3, r0
 802b1e8:	9304      	str	r3, [sp, #16]
 802b1ea:	9b05      	ldr	r3, [sp, #20]
 802b1ec:	4403      	add	r3, r0
 802b1ee:	4405      	add	r5, r0
 802b1f0:	9305      	str	r3, [sp, #20]
 802b1f2:	9b04      	ldr	r3, [sp, #16]
 802b1f4:	2b00      	cmp	r3, #0
 802b1f6:	dd07      	ble.n	802b208 <_dtoa_r+0x818>
 802b1f8:	ee18 1a10 	vmov	r1, s16
 802b1fc:	461a      	mov	r2, r3
 802b1fe:	4620      	mov	r0, r4
 802b200:	f001 f9ac 	bl	802c55c <__lshift>
 802b204:	ee08 0a10 	vmov	s16, r0
 802b208:	9b05      	ldr	r3, [sp, #20]
 802b20a:	2b00      	cmp	r3, #0
 802b20c:	dd05      	ble.n	802b21a <_dtoa_r+0x82a>
 802b20e:	4631      	mov	r1, r6
 802b210:	461a      	mov	r2, r3
 802b212:	4620      	mov	r0, r4
 802b214:	f001 f9a2 	bl	802c55c <__lshift>
 802b218:	4606      	mov	r6, r0
 802b21a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802b21c:	2b00      	cmp	r3, #0
 802b21e:	d06e      	beq.n	802b2fe <_dtoa_r+0x90e>
 802b220:	ee18 0a10 	vmov	r0, s16
 802b224:	4631      	mov	r1, r6
 802b226:	f001 fa09 	bl	802c63c <__mcmp>
 802b22a:	2800      	cmp	r0, #0
 802b22c:	da67      	bge.n	802b2fe <_dtoa_r+0x90e>
 802b22e:	9b00      	ldr	r3, [sp, #0]
 802b230:	3b01      	subs	r3, #1
 802b232:	ee18 1a10 	vmov	r1, s16
 802b236:	9300      	str	r3, [sp, #0]
 802b238:	220a      	movs	r2, #10
 802b23a:	2300      	movs	r3, #0
 802b23c:	4620      	mov	r0, r4
 802b23e:	f000 ff93 	bl	802c168 <__multadd>
 802b242:	9b08      	ldr	r3, [sp, #32]
 802b244:	ee08 0a10 	vmov	s16, r0
 802b248:	2b00      	cmp	r3, #0
 802b24a:	f000 81b1 	beq.w	802b5b0 <_dtoa_r+0xbc0>
 802b24e:	2300      	movs	r3, #0
 802b250:	4639      	mov	r1, r7
 802b252:	220a      	movs	r2, #10
 802b254:	4620      	mov	r0, r4
 802b256:	f000 ff87 	bl	802c168 <__multadd>
 802b25a:	9b02      	ldr	r3, [sp, #8]
 802b25c:	2b00      	cmp	r3, #0
 802b25e:	4607      	mov	r7, r0
 802b260:	f300 808e 	bgt.w	802b380 <_dtoa_r+0x990>
 802b264:	9b06      	ldr	r3, [sp, #24]
 802b266:	2b02      	cmp	r3, #2
 802b268:	dc51      	bgt.n	802b30e <_dtoa_r+0x91e>
 802b26a:	e089      	b.n	802b380 <_dtoa_r+0x990>
 802b26c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802b26e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 802b272:	e74b      	b.n	802b10c <_dtoa_r+0x71c>
 802b274:	9b03      	ldr	r3, [sp, #12]
 802b276:	1e5e      	subs	r6, r3, #1
 802b278:	9b07      	ldr	r3, [sp, #28]
 802b27a:	42b3      	cmp	r3, r6
 802b27c:	bfbf      	itttt	lt
 802b27e:	9b07      	ldrlt	r3, [sp, #28]
 802b280:	9607      	strlt	r6, [sp, #28]
 802b282:	1af2      	sublt	r2, r6, r3
 802b284:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 802b286:	bfb6      	itet	lt
 802b288:	189b      	addlt	r3, r3, r2
 802b28a:	1b9e      	subge	r6, r3, r6
 802b28c:	930a      	strlt	r3, [sp, #40]	; 0x28
 802b28e:	9b03      	ldr	r3, [sp, #12]
 802b290:	bfb8      	it	lt
 802b292:	2600      	movlt	r6, #0
 802b294:	2b00      	cmp	r3, #0
 802b296:	bfb7      	itett	lt
 802b298:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 802b29c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 802b2a0:	1a9d      	sublt	r5, r3, r2
 802b2a2:	2300      	movlt	r3, #0
 802b2a4:	e734      	b.n	802b110 <_dtoa_r+0x720>
 802b2a6:	9e07      	ldr	r6, [sp, #28]
 802b2a8:	9d04      	ldr	r5, [sp, #16]
 802b2aa:	9f08      	ldr	r7, [sp, #32]
 802b2ac:	e73b      	b.n	802b126 <_dtoa_r+0x736>
 802b2ae:	9a07      	ldr	r2, [sp, #28]
 802b2b0:	e767      	b.n	802b182 <_dtoa_r+0x792>
 802b2b2:	9b06      	ldr	r3, [sp, #24]
 802b2b4:	2b01      	cmp	r3, #1
 802b2b6:	dc18      	bgt.n	802b2ea <_dtoa_r+0x8fa>
 802b2b8:	f1ba 0f00 	cmp.w	sl, #0
 802b2bc:	d115      	bne.n	802b2ea <_dtoa_r+0x8fa>
 802b2be:	f3cb 0313 	ubfx	r3, fp, #0, #20
 802b2c2:	b993      	cbnz	r3, 802b2ea <_dtoa_r+0x8fa>
 802b2c4:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 802b2c8:	0d1b      	lsrs	r3, r3, #20
 802b2ca:	051b      	lsls	r3, r3, #20
 802b2cc:	b183      	cbz	r3, 802b2f0 <_dtoa_r+0x900>
 802b2ce:	9b04      	ldr	r3, [sp, #16]
 802b2d0:	3301      	adds	r3, #1
 802b2d2:	9304      	str	r3, [sp, #16]
 802b2d4:	9b05      	ldr	r3, [sp, #20]
 802b2d6:	3301      	adds	r3, #1
 802b2d8:	9305      	str	r3, [sp, #20]
 802b2da:	f04f 0801 	mov.w	r8, #1
 802b2de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802b2e0:	2b00      	cmp	r3, #0
 802b2e2:	f47f af6a 	bne.w	802b1ba <_dtoa_r+0x7ca>
 802b2e6:	2001      	movs	r0, #1
 802b2e8:	e76f      	b.n	802b1ca <_dtoa_r+0x7da>
 802b2ea:	f04f 0800 	mov.w	r8, #0
 802b2ee:	e7f6      	b.n	802b2de <_dtoa_r+0x8ee>
 802b2f0:	4698      	mov	r8, r3
 802b2f2:	e7f4      	b.n	802b2de <_dtoa_r+0x8ee>
 802b2f4:	f43f af7d 	beq.w	802b1f2 <_dtoa_r+0x802>
 802b2f8:	4618      	mov	r0, r3
 802b2fa:	301c      	adds	r0, #28
 802b2fc:	e772      	b.n	802b1e4 <_dtoa_r+0x7f4>
 802b2fe:	9b03      	ldr	r3, [sp, #12]
 802b300:	2b00      	cmp	r3, #0
 802b302:	dc37      	bgt.n	802b374 <_dtoa_r+0x984>
 802b304:	9b06      	ldr	r3, [sp, #24]
 802b306:	2b02      	cmp	r3, #2
 802b308:	dd34      	ble.n	802b374 <_dtoa_r+0x984>
 802b30a:	9b03      	ldr	r3, [sp, #12]
 802b30c:	9302      	str	r3, [sp, #8]
 802b30e:	9b02      	ldr	r3, [sp, #8]
 802b310:	b96b      	cbnz	r3, 802b32e <_dtoa_r+0x93e>
 802b312:	4631      	mov	r1, r6
 802b314:	2205      	movs	r2, #5
 802b316:	4620      	mov	r0, r4
 802b318:	f000 ff26 	bl	802c168 <__multadd>
 802b31c:	4601      	mov	r1, r0
 802b31e:	4606      	mov	r6, r0
 802b320:	ee18 0a10 	vmov	r0, s16
 802b324:	f001 f98a 	bl	802c63c <__mcmp>
 802b328:	2800      	cmp	r0, #0
 802b32a:	f73f adbb 	bgt.w	802aea4 <_dtoa_r+0x4b4>
 802b32e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b330:	9d01      	ldr	r5, [sp, #4]
 802b332:	43db      	mvns	r3, r3
 802b334:	9300      	str	r3, [sp, #0]
 802b336:	f04f 0800 	mov.w	r8, #0
 802b33a:	4631      	mov	r1, r6
 802b33c:	4620      	mov	r0, r4
 802b33e:	f000 fef1 	bl	802c124 <_Bfree>
 802b342:	2f00      	cmp	r7, #0
 802b344:	f43f aea4 	beq.w	802b090 <_dtoa_r+0x6a0>
 802b348:	f1b8 0f00 	cmp.w	r8, #0
 802b34c:	d005      	beq.n	802b35a <_dtoa_r+0x96a>
 802b34e:	45b8      	cmp	r8, r7
 802b350:	d003      	beq.n	802b35a <_dtoa_r+0x96a>
 802b352:	4641      	mov	r1, r8
 802b354:	4620      	mov	r0, r4
 802b356:	f000 fee5 	bl	802c124 <_Bfree>
 802b35a:	4639      	mov	r1, r7
 802b35c:	4620      	mov	r0, r4
 802b35e:	f000 fee1 	bl	802c124 <_Bfree>
 802b362:	e695      	b.n	802b090 <_dtoa_r+0x6a0>
 802b364:	2600      	movs	r6, #0
 802b366:	4637      	mov	r7, r6
 802b368:	e7e1      	b.n	802b32e <_dtoa_r+0x93e>
 802b36a:	9700      	str	r7, [sp, #0]
 802b36c:	4637      	mov	r7, r6
 802b36e:	e599      	b.n	802aea4 <_dtoa_r+0x4b4>
 802b370:	40240000 	.word	0x40240000
 802b374:	9b08      	ldr	r3, [sp, #32]
 802b376:	2b00      	cmp	r3, #0
 802b378:	f000 80ca 	beq.w	802b510 <_dtoa_r+0xb20>
 802b37c:	9b03      	ldr	r3, [sp, #12]
 802b37e:	9302      	str	r3, [sp, #8]
 802b380:	2d00      	cmp	r5, #0
 802b382:	dd05      	ble.n	802b390 <_dtoa_r+0x9a0>
 802b384:	4639      	mov	r1, r7
 802b386:	462a      	mov	r2, r5
 802b388:	4620      	mov	r0, r4
 802b38a:	f001 f8e7 	bl	802c55c <__lshift>
 802b38e:	4607      	mov	r7, r0
 802b390:	f1b8 0f00 	cmp.w	r8, #0
 802b394:	d05b      	beq.n	802b44e <_dtoa_r+0xa5e>
 802b396:	6879      	ldr	r1, [r7, #4]
 802b398:	4620      	mov	r0, r4
 802b39a:	f000 fe83 	bl	802c0a4 <_Balloc>
 802b39e:	4605      	mov	r5, r0
 802b3a0:	b928      	cbnz	r0, 802b3ae <_dtoa_r+0x9be>
 802b3a2:	4b87      	ldr	r3, [pc, #540]	; (802b5c0 <_dtoa_r+0xbd0>)
 802b3a4:	4602      	mov	r2, r0
 802b3a6:	f240 21ea 	movw	r1, #746	; 0x2ea
 802b3aa:	f7ff bb3b 	b.w	802aa24 <_dtoa_r+0x34>
 802b3ae:	693a      	ldr	r2, [r7, #16]
 802b3b0:	3202      	adds	r2, #2
 802b3b2:	0092      	lsls	r2, r2, #2
 802b3b4:	f107 010c 	add.w	r1, r7, #12
 802b3b8:	300c      	adds	r0, #12
 802b3ba:	f7fa fda1 	bl	8025f00 <memcpy>
 802b3be:	2201      	movs	r2, #1
 802b3c0:	4629      	mov	r1, r5
 802b3c2:	4620      	mov	r0, r4
 802b3c4:	f001 f8ca 	bl	802c55c <__lshift>
 802b3c8:	9b01      	ldr	r3, [sp, #4]
 802b3ca:	f103 0901 	add.w	r9, r3, #1
 802b3ce:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 802b3d2:	4413      	add	r3, r2
 802b3d4:	9305      	str	r3, [sp, #20]
 802b3d6:	f00a 0301 	and.w	r3, sl, #1
 802b3da:	46b8      	mov	r8, r7
 802b3dc:	9304      	str	r3, [sp, #16]
 802b3de:	4607      	mov	r7, r0
 802b3e0:	4631      	mov	r1, r6
 802b3e2:	ee18 0a10 	vmov	r0, s16
 802b3e6:	f7ff fa77 	bl	802a8d8 <quorem>
 802b3ea:	4641      	mov	r1, r8
 802b3ec:	9002      	str	r0, [sp, #8]
 802b3ee:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 802b3f2:	ee18 0a10 	vmov	r0, s16
 802b3f6:	f001 f921 	bl	802c63c <__mcmp>
 802b3fa:	463a      	mov	r2, r7
 802b3fc:	9003      	str	r0, [sp, #12]
 802b3fe:	4631      	mov	r1, r6
 802b400:	4620      	mov	r0, r4
 802b402:	f001 f937 	bl	802c674 <__mdiff>
 802b406:	68c2      	ldr	r2, [r0, #12]
 802b408:	f109 3bff 	add.w	fp, r9, #4294967295	; 0xffffffff
 802b40c:	4605      	mov	r5, r0
 802b40e:	bb02      	cbnz	r2, 802b452 <_dtoa_r+0xa62>
 802b410:	4601      	mov	r1, r0
 802b412:	ee18 0a10 	vmov	r0, s16
 802b416:	f001 f911 	bl	802c63c <__mcmp>
 802b41a:	4602      	mov	r2, r0
 802b41c:	4629      	mov	r1, r5
 802b41e:	4620      	mov	r0, r4
 802b420:	9207      	str	r2, [sp, #28]
 802b422:	f000 fe7f 	bl	802c124 <_Bfree>
 802b426:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 802b42a:	ea43 0102 	orr.w	r1, r3, r2
 802b42e:	9b04      	ldr	r3, [sp, #16]
 802b430:	430b      	orrs	r3, r1
 802b432:	464d      	mov	r5, r9
 802b434:	d10f      	bne.n	802b456 <_dtoa_r+0xa66>
 802b436:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 802b43a:	d02a      	beq.n	802b492 <_dtoa_r+0xaa2>
 802b43c:	9b03      	ldr	r3, [sp, #12]
 802b43e:	2b00      	cmp	r3, #0
 802b440:	dd02      	ble.n	802b448 <_dtoa_r+0xa58>
 802b442:	9b02      	ldr	r3, [sp, #8]
 802b444:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 802b448:	f88b a000 	strb.w	sl, [fp]
 802b44c:	e775      	b.n	802b33a <_dtoa_r+0x94a>
 802b44e:	4638      	mov	r0, r7
 802b450:	e7ba      	b.n	802b3c8 <_dtoa_r+0x9d8>
 802b452:	2201      	movs	r2, #1
 802b454:	e7e2      	b.n	802b41c <_dtoa_r+0xa2c>
 802b456:	9b03      	ldr	r3, [sp, #12]
 802b458:	2b00      	cmp	r3, #0
 802b45a:	db04      	blt.n	802b466 <_dtoa_r+0xa76>
 802b45c:	9906      	ldr	r1, [sp, #24]
 802b45e:	430b      	orrs	r3, r1
 802b460:	9904      	ldr	r1, [sp, #16]
 802b462:	430b      	orrs	r3, r1
 802b464:	d122      	bne.n	802b4ac <_dtoa_r+0xabc>
 802b466:	2a00      	cmp	r2, #0
 802b468:	ddee      	ble.n	802b448 <_dtoa_r+0xa58>
 802b46a:	ee18 1a10 	vmov	r1, s16
 802b46e:	2201      	movs	r2, #1
 802b470:	4620      	mov	r0, r4
 802b472:	f001 f873 	bl	802c55c <__lshift>
 802b476:	4631      	mov	r1, r6
 802b478:	ee08 0a10 	vmov	s16, r0
 802b47c:	f001 f8de 	bl	802c63c <__mcmp>
 802b480:	2800      	cmp	r0, #0
 802b482:	dc03      	bgt.n	802b48c <_dtoa_r+0xa9c>
 802b484:	d1e0      	bne.n	802b448 <_dtoa_r+0xa58>
 802b486:	f01a 0f01 	tst.w	sl, #1
 802b48a:	d0dd      	beq.n	802b448 <_dtoa_r+0xa58>
 802b48c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 802b490:	d1d7      	bne.n	802b442 <_dtoa_r+0xa52>
 802b492:	2339      	movs	r3, #57	; 0x39
 802b494:	f88b 3000 	strb.w	r3, [fp]
 802b498:	462b      	mov	r3, r5
 802b49a:	461d      	mov	r5, r3
 802b49c:	3b01      	subs	r3, #1
 802b49e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 802b4a2:	2a39      	cmp	r2, #57	; 0x39
 802b4a4:	d071      	beq.n	802b58a <_dtoa_r+0xb9a>
 802b4a6:	3201      	adds	r2, #1
 802b4a8:	701a      	strb	r2, [r3, #0]
 802b4aa:	e746      	b.n	802b33a <_dtoa_r+0x94a>
 802b4ac:	2a00      	cmp	r2, #0
 802b4ae:	dd07      	ble.n	802b4c0 <_dtoa_r+0xad0>
 802b4b0:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 802b4b4:	d0ed      	beq.n	802b492 <_dtoa_r+0xaa2>
 802b4b6:	f10a 0301 	add.w	r3, sl, #1
 802b4ba:	f88b 3000 	strb.w	r3, [fp]
 802b4be:	e73c      	b.n	802b33a <_dtoa_r+0x94a>
 802b4c0:	9b05      	ldr	r3, [sp, #20]
 802b4c2:	f809 ac01 	strb.w	sl, [r9, #-1]
 802b4c6:	4599      	cmp	r9, r3
 802b4c8:	d047      	beq.n	802b55a <_dtoa_r+0xb6a>
 802b4ca:	ee18 1a10 	vmov	r1, s16
 802b4ce:	2300      	movs	r3, #0
 802b4d0:	220a      	movs	r2, #10
 802b4d2:	4620      	mov	r0, r4
 802b4d4:	f000 fe48 	bl	802c168 <__multadd>
 802b4d8:	45b8      	cmp	r8, r7
 802b4da:	ee08 0a10 	vmov	s16, r0
 802b4de:	f04f 0300 	mov.w	r3, #0
 802b4e2:	f04f 020a 	mov.w	r2, #10
 802b4e6:	4641      	mov	r1, r8
 802b4e8:	4620      	mov	r0, r4
 802b4ea:	d106      	bne.n	802b4fa <_dtoa_r+0xb0a>
 802b4ec:	f000 fe3c 	bl	802c168 <__multadd>
 802b4f0:	4680      	mov	r8, r0
 802b4f2:	4607      	mov	r7, r0
 802b4f4:	f109 0901 	add.w	r9, r9, #1
 802b4f8:	e772      	b.n	802b3e0 <_dtoa_r+0x9f0>
 802b4fa:	f000 fe35 	bl	802c168 <__multadd>
 802b4fe:	4639      	mov	r1, r7
 802b500:	4680      	mov	r8, r0
 802b502:	2300      	movs	r3, #0
 802b504:	220a      	movs	r2, #10
 802b506:	4620      	mov	r0, r4
 802b508:	f000 fe2e 	bl	802c168 <__multadd>
 802b50c:	4607      	mov	r7, r0
 802b50e:	e7f1      	b.n	802b4f4 <_dtoa_r+0xb04>
 802b510:	9b03      	ldr	r3, [sp, #12]
 802b512:	9302      	str	r3, [sp, #8]
 802b514:	9d01      	ldr	r5, [sp, #4]
 802b516:	ee18 0a10 	vmov	r0, s16
 802b51a:	4631      	mov	r1, r6
 802b51c:	f7ff f9dc 	bl	802a8d8 <quorem>
 802b520:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 802b524:	9b01      	ldr	r3, [sp, #4]
 802b526:	f805 ab01 	strb.w	sl, [r5], #1
 802b52a:	1aea      	subs	r2, r5, r3
 802b52c:	9b02      	ldr	r3, [sp, #8]
 802b52e:	4293      	cmp	r3, r2
 802b530:	dd09      	ble.n	802b546 <_dtoa_r+0xb56>
 802b532:	ee18 1a10 	vmov	r1, s16
 802b536:	2300      	movs	r3, #0
 802b538:	220a      	movs	r2, #10
 802b53a:	4620      	mov	r0, r4
 802b53c:	f000 fe14 	bl	802c168 <__multadd>
 802b540:	ee08 0a10 	vmov	s16, r0
 802b544:	e7e7      	b.n	802b516 <_dtoa_r+0xb26>
 802b546:	9b02      	ldr	r3, [sp, #8]
 802b548:	2b00      	cmp	r3, #0
 802b54a:	bfc8      	it	gt
 802b54c:	461d      	movgt	r5, r3
 802b54e:	9b01      	ldr	r3, [sp, #4]
 802b550:	bfd8      	it	le
 802b552:	2501      	movle	r5, #1
 802b554:	441d      	add	r5, r3
 802b556:	f04f 0800 	mov.w	r8, #0
 802b55a:	ee18 1a10 	vmov	r1, s16
 802b55e:	2201      	movs	r2, #1
 802b560:	4620      	mov	r0, r4
 802b562:	f000 fffb 	bl	802c55c <__lshift>
 802b566:	4631      	mov	r1, r6
 802b568:	ee08 0a10 	vmov	s16, r0
 802b56c:	f001 f866 	bl	802c63c <__mcmp>
 802b570:	2800      	cmp	r0, #0
 802b572:	dc91      	bgt.n	802b498 <_dtoa_r+0xaa8>
 802b574:	d102      	bne.n	802b57c <_dtoa_r+0xb8c>
 802b576:	f01a 0f01 	tst.w	sl, #1
 802b57a:	d18d      	bne.n	802b498 <_dtoa_r+0xaa8>
 802b57c:	462b      	mov	r3, r5
 802b57e:	461d      	mov	r5, r3
 802b580:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802b584:	2a30      	cmp	r2, #48	; 0x30
 802b586:	d0fa      	beq.n	802b57e <_dtoa_r+0xb8e>
 802b588:	e6d7      	b.n	802b33a <_dtoa_r+0x94a>
 802b58a:	9a01      	ldr	r2, [sp, #4]
 802b58c:	429a      	cmp	r2, r3
 802b58e:	d184      	bne.n	802b49a <_dtoa_r+0xaaa>
 802b590:	9b00      	ldr	r3, [sp, #0]
 802b592:	3301      	adds	r3, #1
 802b594:	9300      	str	r3, [sp, #0]
 802b596:	2331      	movs	r3, #49	; 0x31
 802b598:	7013      	strb	r3, [r2, #0]
 802b59a:	e6ce      	b.n	802b33a <_dtoa_r+0x94a>
 802b59c:	4b09      	ldr	r3, [pc, #36]	; (802b5c4 <_dtoa_r+0xbd4>)
 802b59e:	f7ff ba95 	b.w	802aacc <_dtoa_r+0xdc>
 802b5a2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802b5a4:	2b00      	cmp	r3, #0
 802b5a6:	f47f aa6e 	bne.w	802aa86 <_dtoa_r+0x96>
 802b5aa:	4b07      	ldr	r3, [pc, #28]	; (802b5c8 <_dtoa_r+0xbd8>)
 802b5ac:	f7ff ba8e 	b.w	802aacc <_dtoa_r+0xdc>
 802b5b0:	9b02      	ldr	r3, [sp, #8]
 802b5b2:	2b00      	cmp	r3, #0
 802b5b4:	dcae      	bgt.n	802b514 <_dtoa_r+0xb24>
 802b5b6:	9b06      	ldr	r3, [sp, #24]
 802b5b8:	2b02      	cmp	r3, #2
 802b5ba:	f73f aea8 	bgt.w	802b30e <_dtoa_r+0x91e>
 802b5be:	e7a9      	b.n	802b514 <_dtoa_r+0xb24>
 802b5c0:	08032d22 	.word	0x08032d22
 802b5c4:	08032f11 	.word	0x08032f11
 802b5c8:	08032cba 	.word	0x08032cba

0802b5cc <__fgetwc>:
 802b5cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 802b5ce:	684b      	ldr	r3, [r1, #4]
 802b5d0:	2b00      	cmp	r3, #0
 802b5d2:	4605      	mov	r5, r0
 802b5d4:	460c      	mov	r4, r1
 802b5d6:	dd1f      	ble.n	802b618 <__fgetwc+0x4c>
 802b5d8:	f7fa fbc0 	bl	8025d5c <__locale_mb_cur_max>
 802b5dc:	2801      	cmp	r0, #1
 802b5de:	d022      	beq.n	802b626 <__fgetwc+0x5a>
 802b5e0:	f104 065c 	add.w	r6, r4, #92	; 0x5c
 802b5e4:	e9d4 2300 	ldrd	r2, r3, [r4]
 802b5e8:	9600      	str	r6, [sp, #0]
 802b5ea:	a903      	add	r1, sp, #12
 802b5ec:	4628      	mov	r0, r5
 802b5ee:	f7fa fc3d 	bl	8025e6c <_mbrtowc_r>
 802b5f2:	1c42      	adds	r2, r0, #1
 802b5f4:	d007      	beq.n	802b606 <__fgetwc+0x3a>
 802b5f6:	1c83      	adds	r3, r0, #2
 802b5f8:	d11e      	bne.n	802b638 <__fgetwc+0x6c>
 802b5fa:	4621      	mov	r1, r4
 802b5fc:	4628      	mov	r0, r5
 802b5fe:	f7fb fd5d 	bl	80270bc <__srefill_r>
 802b602:	2800      	cmp	r0, #0
 802b604:	d0ee      	beq.n	802b5e4 <__fgetwc+0x18>
 802b606:	89a3      	ldrh	r3, [r4, #12]
 802b608:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b60c:	81a3      	strh	r3, [r4, #12]
 802b60e:	f7f9 fe6d 	bl	80252ec <__errno>
 802b612:	238a      	movs	r3, #138	; 0x8a
 802b614:	6003      	str	r3, [r0, #0]
 802b616:	e003      	b.n	802b620 <__fgetwc+0x54>
 802b618:	f7fb fd50 	bl	80270bc <__srefill_r>
 802b61c:	2800      	cmp	r0, #0
 802b61e:	d0db      	beq.n	802b5d8 <__fgetwc+0xc>
 802b620:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802b624:	e006      	b.n	802b634 <__fgetwc+0x68>
 802b626:	6823      	ldr	r3, [r4, #0]
 802b628:	1c5a      	adds	r2, r3, #1
 802b62a:	6022      	str	r2, [r4, #0]
 802b62c:	7818      	ldrb	r0, [r3, #0]
 802b62e:	6863      	ldr	r3, [r4, #4]
 802b630:	3b01      	subs	r3, #1
 802b632:	6063      	str	r3, [r4, #4]
 802b634:	b004      	add	sp, #16
 802b636:	bd70      	pop	{r4, r5, r6, pc}
 802b638:	e9d4 2300 	ldrd	r2, r3, [r4]
 802b63c:	b910      	cbnz	r0, 802b644 <__fgetwc+0x78>
 802b63e:	3201      	adds	r2, #1
 802b640:	6022      	str	r2, [r4, #0]
 802b642:	e7f5      	b.n	802b630 <__fgetwc+0x64>
 802b644:	4402      	add	r2, r0
 802b646:	1a18      	subs	r0, r3, r0
 802b648:	6060      	str	r0, [r4, #4]
 802b64a:	6022      	str	r2, [r4, #0]
 802b64c:	9803      	ldr	r0, [sp, #12]
 802b64e:	e7f1      	b.n	802b634 <__fgetwc+0x68>

0802b650 <_fgetwc_r>:
 802b650:	b538      	push	{r3, r4, r5, lr}
 802b652:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 802b654:	4605      	mov	r5, r0
 802b656:	07d8      	lsls	r0, r3, #31
 802b658:	460c      	mov	r4, r1
 802b65a:	d405      	bmi.n	802b668 <_fgetwc_r+0x18>
 802b65c:	898b      	ldrh	r3, [r1, #12]
 802b65e:	0599      	lsls	r1, r3, #22
 802b660:	d402      	bmi.n	802b668 <_fgetwc_r+0x18>
 802b662:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b664:	f7fa fb8a 	bl	8025d7c <__retarget_lock_acquire_recursive>
 802b668:	4628      	mov	r0, r5
 802b66a:	4621      	mov	r1, r4
 802b66c:	f7ff ffae 	bl	802b5cc <__fgetwc>
 802b670:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802b672:	07da      	lsls	r2, r3, #31
 802b674:	4605      	mov	r5, r0
 802b676:	d405      	bmi.n	802b684 <_fgetwc_r+0x34>
 802b678:	89a3      	ldrh	r3, [r4, #12]
 802b67a:	059b      	lsls	r3, r3, #22
 802b67c:	d402      	bmi.n	802b684 <_fgetwc_r+0x34>
 802b67e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b680:	f7fa fb7e 	bl	8025d80 <__retarget_lock_release_recursive>
 802b684:	4628      	mov	r0, r5
 802b686:	bd38      	pop	{r3, r4, r5, pc}

0802b688 <fgetwc>:
 802b688:	b538      	push	{r3, r4, r5, lr}
 802b68a:	4b0e      	ldr	r3, [pc, #56]	; (802b6c4 <fgetwc+0x3c>)
 802b68c:	681d      	ldr	r5, [r3, #0]
 802b68e:	4604      	mov	r4, r0
 802b690:	b125      	cbz	r5, 802b69c <fgetwc+0x14>
 802b692:	69ab      	ldr	r3, [r5, #24]
 802b694:	b913      	cbnz	r3, 802b69c <fgetwc+0x14>
 802b696:	4628      	mov	r0, r5
 802b698:	f7f9 ff5a 	bl	8025550 <__sinit>
 802b69c:	4b0a      	ldr	r3, [pc, #40]	; (802b6c8 <fgetwc+0x40>)
 802b69e:	429c      	cmp	r4, r3
 802b6a0:	d106      	bne.n	802b6b0 <fgetwc+0x28>
 802b6a2:	686c      	ldr	r4, [r5, #4]
 802b6a4:	4621      	mov	r1, r4
 802b6a6:	4628      	mov	r0, r5
 802b6a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b6ac:	f7ff bfd0 	b.w	802b650 <_fgetwc_r>
 802b6b0:	4b06      	ldr	r3, [pc, #24]	; (802b6cc <fgetwc+0x44>)
 802b6b2:	429c      	cmp	r4, r3
 802b6b4:	d101      	bne.n	802b6ba <fgetwc+0x32>
 802b6b6:	68ac      	ldr	r4, [r5, #8]
 802b6b8:	e7f4      	b.n	802b6a4 <fgetwc+0x1c>
 802b6ba:	4b05      	ldr	r3, [pc, #20]	; (802b6d0 <fgetwc+0x48>)
 802b6bc:	429c      	cmp	r4, r3
 802b6be:	bf08      	it	eq
 802b6c0:	68ec      	ldreq	r4, [r5, #12]
 802b6c2:	e7ef      	b.n	802b6a4 <fgetwc+0x1c>
 802b6c4:	200000bc 	.word	0x200000bc
 802b6c8:	08032138 	.word	0x08032138
 802b6cc:	08032158 	.word	0x08032158
 802b6d0:	08032118 	.word	0x08032118

0802b6d4 <fiprintf>:
 802b6d4:	b40e      	push	{r1, r2, r3}
 802b6d6:	b503      	push	{r0, r1, lr}
 802b6d8:	4601      	mov	r1, r0
 802b6da:	ab03      	add	r3, sp, #12
 802b6dc:	4805      	ldr	r0, [pc, #20]	; (802b6f4 <fiprintf+0x20>)
 802b6de:	f853 2b04 	ldr.w	r2, [r3], #4
 802b6e2:	6800      	ldr	r0, [r0, #0]
 802b6e4:	9301      	str	r3, [sp, #4]
 802b6e6:	f001 fd3b 	bl	802d160 <_vfiprintf_r>
 802b6ea:	b002      	add	sp, #8
 802b6ec:	f85d eb04 	ldr.w	lr, [sp], #4
 802b6f0:	b003      	add	sp, #12
 802b6f2:	4770      	bx	lr
 802b6f4:	200000bc 	.word	0x200000bc

0802b6f8 <__fputwc>:
 802b6f8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 802b6fc:	4680      	mov	r8, r0
 802b6fe:	460e      	mov	r6, r1
 802b700:	4615      	mov	r5, r2
 802b702:	f7fa fb2b 	bl	8025d5c <__locale_mb_cur_max>
 802b706:	2801      	cmp	r0, #1
 802b708:	d11c      	bne.n	802b744 <__fputwc+0x4c>
 802b70a:	1e73      	subs	r3, r6, #1
 802b70c:	2bfe      	cmp	r3, #254	; 0xfe
 802b70e:	d819      	bhi.n	802b744 <__fputwc+0x4c>
 802b710:	f88d 6004 	strb.w	r6, [sp, #4]
 802b714:	4604      	mov	r4, r0
 802b716:	2700      	movs	r7, #0
 802b718:	f10d 0904 	add.w	r9, sp, #4
 802b71c:	42a7      	cmp	r7, r4
 802b71e:	d020      	beq.n	802b762 <__fputwc+0x6a>
 802b720:	68ab      	ldr	r3, [r5, #8]
 802b722:	f817 1009 	ldrb.w	r1, [r7, r9]
 802b726:	3b01      	subs	r3, #1
 802b728:	2b00      	cmp	r3, #0
 802b72a:	60ab      	str	r3, [r5, #8]
 802b72c:	da04      	bge.n	802b738 <__fputwc+0x40>
 802b72e:	69aa      	ldr	r2, [r5, #24]
 802b730:	4293      	cmp	r3, r2
 802b732:	db1a      	blt.n	802b76a <__fputwc+0x72>
 802b734:	290a      	cmp	r1, #10
 802b736:	d018      	beq.n	802b76a <__fputwc+0x72>
 802b738:	682b      	ldr	r3, [r5, #0]
 802b73a:	1c5a      	adds	r2, r3, #1
 802b73c:	602a      	str	r2, [r5, #0]
 802b73e:	7019      	strb	r1, [r3, #0]
 802b740:	3701      	adds	r7, #1
 802b742:	e7eb      	b.n	802b71c <__fputwc+0x24>
 802b744:	a901      	add	r1, sp, #4
 802b746:	f105 035c 	add.w	r3, r5, #92	; 0x5c
 802b74a:	4632      	mov	r2, r6
 802b74c:	4640      	mov	r0, r8
 802b74e:	f7fe f90f 	bl	8029970 <_wcrtomb_r>
 802b752:	1c41      	adds	r1, r0, #1
 802b754:	4604      	mov	r4, r0
 802b756:	d1de      	bne.n	802b716 <__fputwc+0x1e>
 802b758:	89ab      	ldrh	r3, [r5, #12]
 802b75a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b75e:	81ab      	strh	r3, [r5, #12]
 802b760:	4606      	mov	r6, r0
 802b762:	4630      	mov	r0, r6
 802b764:	b003      	add	sp, #12
 802b766:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802b76a:	462a      	mov	r2, r5
 802b76c:	4640      	mov	r0, r8
 802b76e:	f7fe f8ad 	bl	80298cc <__swbuf_r>
 802b772:	1c42      	adds	r2, r0, #1
 802b774:	d1e4      	bne.n	802b740 <__fputwc+0x48>
 802b776:	4606      	mov	r6, r0
 802b778:	e7f3      	b.n	802b762 <__fputwc+0x6a>

0802b77a <_fputwc_r>:
 802b77a:	6e53      	ldr	r3, [r2, #100]	; 0x64
 802b77c:	07db      	lsls	r3, r3, #31
 802b77e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b780:	4605      	mov	r5, r0
 802b782:	4614      	mov	r4, r2
 802b784:	d407      	bmi.n	802b796 <_fputwc_r+0x1c>
 802b786:	8993      	ldrh	r3, [r2, #12]
 802b788:	0598      	lsls	r0, r3, #22
 802b78a:	d404      	bmi.n	802b796 <_fputwc_r+0x1c>
 802b78c:	6d90      	ldr	r0, [r2, #88]	; 0x58
 802b78e:	9101      	str	r1, [sp, #4]
 802b790:	f7fa faf4 	bl	8025d7c <__retarget_lock_acquire_recursive>
 802b794:	9901      	ldr	r1, [sp, #4]
 802b796:	4622      	mov	r2, r4
 802b798:	4628      	mov	r0, r5
 802b79a:	f7ff ffad 	bl	802b6f8 <__fputwc>
 802b79e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802b7a0:	07da      	lsls	r2, r3, #31
 802b7a2:	4605      	mov	r5, r0
 802b7a4:	d405      	bmi.n	802b7b2 <_fputwc_r+0x38>
 802b7a6:	89a3      	ldrh	r3, [r4, #12]
 802b7a8:	059b      	lsls	r3, r3, #22
 802b7aa:	d402      	bmi.n	802b7b2 <_fputwc_r+0x38>
 802b7ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b7ae:	f7fa fae7 	bl	8025d80 <__retarget_lock_release_recursive>
 802b7b2:	4628      	mov	r0, r5
 802b7b4:	b003      	add	sp, #12
 802b7b6:	bd30      	pop	{r4, r5, pc}

0802b7b8 <fputwc>:
 802b7b8:	4b0f      	ldr	r3, [pc, #60]	; (802b7f8 <fputwc+0x40>)
 802b7ba:	b570      	push	{r4, r5, r6, lr}
 802b7bc:	681d      	ldr	r5, [r3, #0]
 802b7be:	4606      	mov	r6, r0
 802b7c0:	460c      	mov	r4, r1
 802b7c2:	b125      	cbz	r5, 802b7ce <fputwc+0x16>
 802b7c4:	69ab      	ldr	r3, [r5, #24]
 802b7c6:	b913      	cbnz	r3, 802b7ce <fputwc+0x16>
 802b7c8:	4628      	mov	r0, r5
 802b7ca:	f7f9 fec1 	bl	8025550 <__sinit>
 802b7ce:	4b0b      	ldr	r3, [pc, #44]	; (802b7fc <fputwc+0x44>)
 802b7d0:	429c      	cmp	r4, r3
 802b7d2:	d107      	bne.n	802b7e4 <fputwc+0x2c>
 802b7d4:	686c      	ldr	r4, [r5, #4]
 802b7d6:	4622      	mov	r2, r4
 802b7d8:	4631      	mov	r1, r6
 802b7da:	4628      	mov	r0, r5
 802b7dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802b7e0:	f7ff bfcb 	b.w	802b77a <_fputwc_r>
 802b7e4:	4b06      	ldr	r3, [pc, #24]	; (802b800 <fputwc+0x48>)
 802b7e6:	429c      	cmp	r4, r3
 802b7e8:	d101      	bne.n	802b7ee <fputwc+0x36>
 802b7ea:	68ac      	ldr	r4, [r5, #8]
 802b7ec:	e7f3      	b.n	802b7d6 <fputwc+0x1e>
 802b7ee:	4b05      	ldr	r3, [pc, #20]	; (802b804 <fputwc+0x4c>)
 802b7f0:	429c      	cmp	r4, r3
 802b7f2:	bf08      	it	eq
 802b7f4:	68ec      	ldreq	r4, [r5, #12]
 802b7f6:	e7ee      	b.n	802b7d6 <fputwc+0x1e>
 802b7f8:	200000bc 	.word	0x200000bc
 802b7fc:	08032138 	.word	0x08032138
 802b800:	08032158 	.word	0x08032158
 802b804:	08032118 	.word	0x08032118

0802b808 <_fstat_r>:
 802b808:	b538      	push	{r3, r4, r5, lr}
 802b80a:	4d07      	ldr	r5, [pc, #28]	; (802b828 <_fstat_r+0x20>)
 802b80c:	2300      	movs	r3, #0
 802b80e:	4604      	mov	r4, r0
 802b810:	4608      	mov	r0, r1
 802b812:	4611      	mov	r1, r2
 802b814:	602b      	str	r3, [r5, #0]
 802b816:	f7d7 fbfc 	bl	8003012 <_fstat>
 802b81a:	1c43      	adds	r3, r0, #1
 802b81c:	d102      	bne.n	802b824 <_fstat_r+0x1c>
 802b81e:	682b      	ldr	r3, [r5, #0]
 802b820:	b103      	cbz	r3, 802b824 <_fstat_r+0x1c>
 802b822:	6023      	str	r3, [r4, #0]
 802b824:	bd38      	pop	{r3, r4, r5, pc}
 802b826:	bf00      	nop
 802b828:	200042d4 	.word	0x200042d4

0802b82c <rshift>:
 802b82c:	6903      	ldr	r3, [r0, #16]
 802b82e:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 802b832:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802b836:	ea4f 1261 	mov.w	r2, r1, asr #5
 802b83a:	f100 0414 	add.w	r4, r0, #20
 802b83e:	dd45      	ble.n	802b8cc <rshift+0xa0>
 802b840:	f011 011f 	ands.w	r1, r1, #31
 802b844:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 802b848:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 802b84c:	d10c      	bne.n	802b868 <rshift+0x3c>
 802b84e:	f100 0710 	add.w	r7, r0, #16
 802b852:	4629      	mov	r1, r5
 802b854:	42b1      	cmp	r1, r6
 802b856:	d334      	bcc.n	802b8c2 <rshift+0x96>
 802b858:	1a9b      	subs	r3, r3, r2
 802b85a:	009b      	lsls	r3, r3, #2
 802b85c:	1eea      	subs	r2, r5, #3
 802b85e:	4296      	cmp	r6, r2
 802b860:	bf38      	it	cc
 802b862:	2300      	movcc	r3, #0
 802b864:	4423      	add	r3, r4
 802b866:	e015      	b.n	802b894 <rshift+0x68>
 802b868:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 802b86c:	f1c1 0820 	rsb	r8, r1, #32
 802b870:	40cf      	lsrs	r7, r1
 802b872:	f105 0e04 	add.w	lr, r5, #4
 802b876:	46a1      	mov	r9, r4
 802b878:	4576      	cmp	r6, lr
 802b87a:	46f4      	mov	ip, lr
 802b87c:	d815      	bhi.n	802b8aa <rshift+0x7e>
 802b87e:	1a9a      	subs	r2, r3, r2
 802b880:	0092      	lsls	r2, r2, #2
 802b882:	3a04      	subs	r2, #4
 802b884:	3501      	adds	r5, #1
 802b886:	42ae      	cmp	r6, r5
 802b888:	bf38      	it	cc
 802b88a:	2200      	movcc	r2, #0
 802b88c:	18a3      	adds	r3, r4, r2
 802b88e:	50a7      	str	r7, [r4, r2]
 802b890:	b107      	cbz	r7, 802b894 <rshift+0x68>
 802b892:	3304      	adds	r3, #4
 802b894:	1b1a      	subs	r2, r3, r4
 802b896:	42a3      	cmp	r3, r4
 802b898:	ea4f 02a2 	mov.w	r2, r2, asr #2
 802b89c:	bf08      	it	eq
 802b89e:	2300      	moveq	r3, #0
 802b8a0:	6102      	str	r2, [r0, #16]
 802b8a2:	bf08      	it	eq
 802b8a4:	6143      	streq	r3, [r0, #20]
 802b8a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802b8aa:	f8dc c000 	ldr.w	ip, [ip]
 802b8ae:	fa0c fc08 	lsl.w	ip, ip, r8
 802b8b2:	ea4c 0707 	orr.w	r7, ip, r7
 802b8b6:	f849 7b04 	str.w	r7, [r9], #4
 802b8ba:	f85e 7b04 	ldr.w	r7, [lr], #4
 802b8be:	40cf      	lsrs	r7, r1
 802b8c0:	e7da      	b.n	802b878 <rshift+0x4c>
 802b8c2:	f851 cb04 	ldr.w	ip, [r1], #4
 802b8c6:	f847 cf04 	str.w	ip, [r7, #4]!
 802b8ca:	e7c3      	b.n	802b854 <rshift+0x28>
 802b8cc:	4623      	mov	r3, r4
 802b8ce:	e7e1      	b.n	802b894 <rshift+0x68>

0802b8d0 <__hexdig_fun>:
 802b8d0:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 802b8d4:	2b09      	cmp	r3, #9
 802b8d6:	d802      	bhi.n	802b8de <__hexdig_fun+0xe>
 802b8d8:	3820      	subs	r0, #32
 802b8da:	b2c0      	uxtb	r0, r0
 802b8dc:	4770      	bx	lr
 802b8de:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 802b8e2:	2b05      	cmp	r3, #5
 802b8e4:	d801      	bhi.n	802b8ea <__hexdig_fun+0x1a>
 802b8e6:	3847      	subs	r0, #71	; 0x47
 802b8e8:	e7f7      	b.n	802b8da <__hexdig_fun+0xa>
 802b8ea:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 802b8ee:	2b05      	cmp	r3, #5
 802b8f0:	d801      	bhi.n	802b8f6 <__hexdig_fun+0x26>
 802b8f2:	3827      	subs	r0, #39	; 0x27
 802b8f4:	e7f1      	b.n	802b8da <__hexdig_fun+0xa>
 802b8f6:	2000      	movs	r0, #0
 802b8f8:	4770      	bx	lr
	...

0802b8fc <__gethex>:
 802b8fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b900:	ed2d 8b02 	vpush	{d8}
 802b904:	b089      	sub	sp, #36	; 0x24
 802b906:	ee08 0a10 	vmov	s16, r0
 802b90a:	9304      	str	r3, [sp, #16]
 802b90c:	4bb4      	ldr	r3, [pc, #720]	; (802bbe0 <__gethex+0x2e4>)
 802b90e:	681b      	ldr	r3, [r3, #0]
 802b910:	9301      	str	r3, [sp, #4]
 802b912:	4618      	mov	r0, r3
 802b914:	468b      	mov	fp, r1
 802b916:	4690      	mov	r8, r2
 802b918:	f7d4 fcb4 	bl	8000284 <strlen>
 802b91c:	9b01      	ldr	r3, [sp, #4]
 802b91e:	f8db 2000 	ldr.w	r2, [fp]
 802b922:	4403      	add	r3, r0
 802b924:	4682      	mov	sl, r0
 802b926:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 802b92a:	9305      	str	r3, [sp, #20]
 802b92c:	1c93      	adds	r3, r2, #2
 802b92e:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 802b932:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 802b936:	32fe      	adds	r2, #254	; 0xfe
 802b938:	18d1      	adds	r1, r2, r3
 802b93a:	461f      	mov	r7, r3
 802b93c:	f813 0b01 	ldrb.w	r0, [r3], #1
 802b940:	9100      	str	r1, [sp, #0]
 802b942:	2830      	cmp	r0, #48	; 0x30
 802b944:	d0f8      	beq.n	802b938 <__gethex+0x3c>
 802b946:	f7ff ffc3 	bl	802b8d0 <__hexdig_fun>
 802b94a:	4604      	mov	r4, r0
 802b94c:	2800      	cmp	r0, #0
 802b94e:	d13a      	bne.n	802b9c6 <__gethex+0xca>
 802b950:	9901      	ldr	r1, [sp, #4]
 802b952:	4652      	mov	r2, sl
 802b954:	4638      	mov	r0, r7
 802b956:	f001 ff0b 	bl	802d770 <strncmp>
 802b95a:	4605      	mov	r5, r0
 802b95c:	2800      	cmp	r0, #0
 802b95e:	d168      	bne.n	802ba32 <__gethex+0x136>
 802b960:	f817 000a 	ldrb.w	r0, [r7, sl]
 802b964:	eb07 060a 	add.w	r6, r7, sl
 802b968:	f7ff ffb2 	bl	802b8d0 <__hexdig_fun>
 802b96c:	2800      	cmp	r0, #0
 802b96e:	d062      	beq.n	802ba36 <__gethex+0x13a>
 802b970:	4633      	mov	r3, r6
 802b972:	7818      	ldrb	r0, [r3, #0]
 802b974:	2830      	cmp	r0, #48	; 0x30
 802b976:	461f      	mov	r7, r3
 802b978:	f103 0301 	add.w	r3, r3, #1
 802b97c:	d0f9      	beq.n	802b972 <__gethex+0x76>
 802b97e:	f7ff ffa7 	bl	802b8d0 <__hexdig_fun>
 802b982:	2301      	movs	r3, #1
 802b984:	fab0 f480 	clz	r4, r0
 802b988:	0964      	lsrs	r4, r4, #5
 802b98a:	4635      	mov	r5, r6
 802b98c:	9300      	str	r3, [sp, #0]
 802b98e:	463a      	mov	r2, r7
 802b990:	4616      	mov	r6, r2
 802b992:	3201      	adds	r2, #1
 802b994:	7830      	ldrb	r0, [r6, #0]
 802b996:	f7ff ff9b 	bl	802b8d0 <__hexdig_fun>
 802b99a:	2800      	cmp	r0, #0
 802b99c:	d1f8      	bne.n	802b990 <__gethex+0x94>
 802b99e:	9901      	ldr	r1, [sp, #4]
 802b9a0:	4652      	mov	r2, sl
 802b9a2:	4630      	mov	r0, r6
 802b9a4:	f001 fee4 	bl	802d770 <strncmp>
 802b9a8:	b980      	cbnz	r0, 802b9cc <__gethex+0xd0>
 802b9aa:	b94d      	cbnz	r5, 802b9c0 <__gethex+0xc4>
 802b9ac:	eb06 050a 	add.w	r5, r6, sl
 802b9b0:	462a      	mov	r2, r5
 802b9b2:	4616      	mov	r6, r2
 802b9b4:	3201      	adds	r2, #1
 802b9b6:	7830      	ldrb	r0, [r6, #0]
 802b9b8:	f7ff ff8a 	bl	802b8d0 <__hexdig_fun>
 802b9bc:	2800      	cmp	r0, #0
 802b9be:	d1f8      	bne.n	802b9b2 <__gethex+0xb6>
 802b9c0:	1bad      	subs	r5, r5, r6
 802b9c2:	00ad      	lsls	r5, r5, #2
 802b9c4:	e004      	b.n	802b9d0 <__gethex+0xd4>
 802b9c6:	2400      	movs	r4, #0
 802b9c8:	4625      	mov	r5, r4
 802b9ca:	e7e0      	b.n	802b98e <__gethex+0x92>
 802b9cc:	2d00      	cmp	r5, #0
 802b9ce:	d1f7      	bne.n	802b9c0 <__gethex+0xc4>
 802b9d0:	7833      	ldrb	r3, [r6, #0]
 802b9d2:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 802b9d6:	2b50      	cmp	r3, #80	; 0x50
 802b9d8:	d13b      	bne.n	802ba52 <__gethex+0x156>
 802b9da:	7873      	ldrb	r3, [r6, #1]
 802b9dc:	2b2b      	cmp	r3, #43	; 0x2b
 802b9de:	d02c      	beq.n	802ba3a <__gethex+0x13e>
 802b9e0:	2b2d      	cmp	r3, #45	; 0x2d
 802b9e2:	d02e      	beq.n	802ba42 <__gethex+0x146>
 802b9e4:	1c71      	adds	r1, r6, #1
 802b9e6:	f04f 0900 	mov.w	r9, #0
 802b9ea:	7808      	ldrb	r0, [r1, #0]
 802b9ec:	f7ff ff70 	bl	802b8d0 <__hexdig_fun>
 802b9f0:	1e43      	subs	r3, r0, #1
 802b9f2:	b2db      	uxtb	r3, r3
 802b9f4:	2b18      	cmp	r3, #24
 802b9f6:	d82c      	bhi.n	802ba52 <__gethex+0x156>
 802b9f8:	f1a0 0210 	sub.w	r2, r0, #16
 802b9fc:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 802ba00:	f7ff ff66 	bl	802b8d0 <__hexdig_fun>
 802ba04:	1e43      	subs	r3, r0, #1
 802ba06:	b2db      	uxtb	r3, r3
 802ba08:	2b18      	cmp	r3, #24
 802ba0a:	d91d      	bls.n	802ba48 <__gethex+0x14c>
 802ba0c:	f1b9 0f00 	cmp.w	r9, #0
 802ba10:	d000      	beq.n	802ba14 <__gethex+0x118>
 802ba12:	4252      	negs	r2, r2
 802ba14:	4415      	add	r5, r2
 802ba16:	f8cb 1000 	str.w	r1, [fp]
 802ba1a:	b1e4      	cbz	r4, 802ba56 <__gethex+0x15a>
 802ba1c:	9b00      	ldr	r3, [sp, #0]
 802ba1e:	2b00      	cmp	r3, #0
 802ba20:	bf14      	ite	ne
 802ba22:	2700      	movne	r7, #0
 802ba24:	2706      	moveq	r7, #6
 802ba26:	4638      	mov	r0, r7
 802ba28:	b009      	add	sp, #36	; 0x24
 802ba2a:	ecbd 8b02 	vpop	{d8}
 802ba2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ba32:	463e      	mov	r6, r7
 802ba34:	4625      	mov	r5, r4
 802ba36:	2401      	movs	r4, #1
 802ba38:	e7ca      	b.n	802b9d0 <__gethex+0xd4>
 802ba3a:	f04f 0900 	mov.w	r9, #0
 802ba3e:	1cb1      	adds	r1, r6, #2
 802ba40:	e7d3      	b.n	802b9ea <__gethex+0xee>
 802ba42:	f04f 0901 	mov.w	r9, #1
 802ba46:	e7fa      	b.n	802ba3e <__gethex+0x142>
 802ba48:	230a      	movs	r3, #10
 802ba4a:	fb03 0202 	mla	r2, r3, r2, r0
 802ba4e:	3a10      	subs	r2, #16
 802ba50:	e7d4      	b.n	802b9fc <__gethex+0x100>
 802ba52:	4631      	mov	r1, r6
 802ba54:	e7df      	b.n	802ba16 <__gethex+0x11a>
 802ba56:	1bf3      	subs	r3, r6, r7
 802ba58:	3b01      	subs	r3, #1
 802ba5a:	4621      	mov	r1, r4
 802ba5c:	2b07      	cmp	r3, #7
 802ba5e:	dc0b      	bgt.n	802ba78 <__gethex+0x17c>
 802ba60:	ee18 0a10 	vmov	r0, s16
 802ba64:	f000 fb1e 	bl	802c0a4 <_Balloc>
 802ba68:	4604      	mov	r4, r0
 802ba6a:	b940      	cbnz	r0, 802ba7e <__gethex+0x182>
 802ba6c:	4b5d      	ldr	r3, [pc, #372]	; (802bbe4 <__gethex+0x2e8>)
 802ba6e:	4602      	mov	r2, r0
 802ba70:	21de      	movs	r1, #222	; 0xde
 802ba72:	485d      	ldr	r0, [pc, #372]	; (802bbe8 <__gethex+0x2ec>)
 802ba74:	f7fe ff02 	bl	802a87c <__assert_func>
 802ba78:	3101      	adds	r1, #1
 802ba7a:	105b      	asrs	r3, r3, #1
 802ba7c:	e7ee      	b.n	802ba5c <__gethex+0x160>
 802ba7e:	f100 0914 	add.w	r9, r0, #20
 802ba82:	f04f 0b00 	mov.w	fp, #0
 802ba86:	f1ca 0301 	rsb	r3, sl, #1
 802ba8a:	f8cd 9008 	str.w	r9, [sp, #8]
 802ba8e:	f8cd b000 	str.w	fp, [sp]
 802ba92:	9306      	str	r3, [sp, #24]
 802ba94:	42b7      	cmp	r7, r6
 802ba96:	d340      	bcc.n	802bb1a <__gethex+0x21e>
 802ba98:	9802      	ldr	r0, [sp, #8]
 802ba9a:	9b00      	ldr	r3, [sp, #0]
 802ba9c:	f840 3b04 	str.w	r3, [r0], #4
 802baa0:	eba0 0009 	sub.w	r0, r0, r9
 802baa4:	1080      	asrs	r0, r0, #2
 802baa6:	0146      	lsls	r6, r0, #5
 802baa8:	6120      	str	r0, [r4, #16]
 802baaa:	4618      	mov	r0, r3
 802baac:	f000 fbec 	bl	802c288 <__hi0bits>
 802bab0:	1a30      	subs	r0, r6, r0
 802bab2:	f8d8 6000 	ldr.w	r6, [r8]
 802bab6:	42b0      	cmp	r0, r6
 802bab8:	dd63      	ble.n	802bb82 <__gethex+0x286>
 802baba:	1b87      	subs	r7, r0, r6
 802babc:	4639      	mov	r1, r7
 802babe:	4620      	mov	r0, r4
 802bac0:	f000 ff90 	bl	802c9e4 <__any_on>
 802bac4:	4682      	mov	sl, r0
 802bac6:	b1a8      	cbz	r0, 802baf4 <__gethex+0x1f8>
 802bac8:	1e7b      	subs	r3, r7, #1
 802baca:	1159      	asrs	r1, r3, #5
 802bacc:	f003 021f 	and.w	r2, r3, #31
 802bad0:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 802bad4:	f04f 0a01 	mov.w	sl, #1
 802bad8:	fa0a f202 	lsl.w	r2, sl, r2
 802badc:	420a      	tst	r2, r1
 802bade:	d009      	beq.n	802baf4 <__gethex+0x1f8>
 802bae0:	4553      	cmp	r3, sl
 802bae2:	dd05      	ble.n	802baf0 <__gethex+0x1f4>
 802bae4:	1eb9      	subs	r1, r7, #2
 802bae6:	4620      	mov	r0, r4
 802bae8:	f000 ff7c 	bl	802c9e4 <__any_on>
 802baec:	2800      	cmp	r0, #0
 802baee:	d145      	bne.n	802bb7c <__gethex+0x280>
 802baf0:	f04f 0a02 	mov.w	sl, #2
 802baf4:	4639      	mov	r1, r7
 802baf6:	4620      	mov	r0, r4
 802baf8:	f7ff fe98 	bl	802b82c <rshift>
 802bafc:	443d      	add	r5, r7
 802bafe:	f8d8 3008 	ldr.w	r3, [r8, #8]
 802bb02:	42ab      	cmp	r3, r5
 802bb04:	da4c      	bge.n	802bba0 <__gethex+0x2a4>
 802bb06:	ee18 0a10 	vmov	r0, s16
 802bb0a:	4621      	mov	r1, r4
 802bb0c:	f000 fb0a 	bl	802c124 <_Bfree>
 802bb10:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802bb12:	2300      	movs	r3, #0
 802bb14:	6013      	str	r3, [r2, #0]
 802bb16:	27a3      	movs	r7, #163	; 0xa3
 802bb18:	e785      	b.n	802ba26 <__gethex+0x12a>
 802bb1a:	1e73      	subs	r3, r6, #1
 802bb1c:	9a05      	ldr	r2, [sp, #20]
 802bb1e:	9303      	str	r3, [sp, #12]
 802bb20:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 802bb24:	4293      	cmp	r3, r2
 802bb26:	d019      	beq.n	802bb5c <__gethex+0x260>
 802bb28:	f1bb 0f20 	cmp.w	fp, #32
 802bb2c:	d107      	bne.n	802bb3e <__gethex+0x242>
 802bb2e:	9b02      	ldr	r3, [sp, #8]
 802bb30:	9a00      	ldr	r2, [sp, #0]
 802bb32:	f843 2b04 	str.w	r2, [r3], #4
 802bb36:	9302      	str	r3, [sp, #8]
 802bb38:	2300      	movs	r3, #0
 802bb3a:	9300      	str	r3, [sp, #0]
 802bb3c:	469b      	mov	fp, r3
 802bb3e:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 802bb42:	f7ff fec5 	bl	802b8d0 <__hexdig_fun>
 802bb46:	9b00      	ldr	r3, [sp, #0]
 802bb48:	f000 000f 	and.w	r0, r0, #15
 802bb4c:	fa00 f00b 	lsl.w	r0, r0, fp
 802bb50:	4303      	orrs	r3, r0
 802bb52:	9300      	str	r3, [sp, #0]
 802bb54:	f10b 0b04 	add.w	fp, fp, #4
 802bb58:	9b03      	ldr	r3, [sp, #12]
 802bb5a:	e00d      	b.n	802bb78 <__gethex+0x27c>
 802bb5c:	9b03      	ldr	r3, [sp, #12]
 802bb5e:	9a06      	ldr	r2, [sp, #24]
 802bb60:	4413      	add	r3, r2
 802bb62:	42bb      	cmp	r3, r7
 802bb64:	d3e0      	bcc.n	802bb28 <__gethex+0x22c>
 802bb66:	4618      	mov	r0, r3
 802bb68:	9901      	ldr	r1, [sp, #4]
 802bb6a:	9307      	str	r3, [sp, #28]
 802bb6c:	4652      	mov	r2, sl
 802bb6e:	f001 fdff 	bl	802d770 <strncmp>
 802bb72:	9b07      	ldr	r3, [sp, #28]
 802bb74:	2800      	cmp	r0, #0
 802bb76:	d1d7      	bne.n	802bb28 <__gethex+0x22c>
 802bb78:	461e      	mov	r6, r3
 802bb7a:	e78b      	b.n	802ba94 <__gethex+0x198>
 802bb7c:	f04f 0a03 	mov.w	sl, #3
 802bb80:	e7b8      	b.n	802baf4 <__gethex+0x1f8>
 802bb82:	da0a      	bge.n	802bb9a <__gethex+0x29e>
 802bb84:	1a37      	subs	r7, r6, r0
 802bb86:	4621      	mov	r1, r4
 802bb88:	ee18 0a10 	vmov	r0, s16
 802bb8c:	463a      	mov	r2, r7
 802bb8e:	f000 fce5 	bl	802c55c <__lshift>
 802bb92:	1bed      	subs	r5, r5, r7
 802bb94:	4604      	mov	r4, r0
 802bb96:	f100 0914 	add.w	r9, r0, #20
 802bb9a:	f04f 0a00 	mov.w	sl, #0
 802bb9e:	e7ae      	b.n	802bafe <__gethex+0x202>
 802bba0:	f8d8 0004 	ldr.w	r0, [r8, #4]
 802bba4:	42a8      	cmp	r0, r5
 802bba6:	dd72      	ble.n	802bc8e <__gethex+0x392>
 802bba8:	1b45      	subs	r5, r0, r5
 802bbaa:	42ae      	cmp	r6, r5
 802bbac:	dc36      	bgt.n	802bc1c <__gethex+0x320>
 802bbae:	f8d8 300c 	ldr.w	r3, [r8, #12]
 802bbb2:	2b02      	cmp	r3, #2
 802bbb4:	d02a      	beq.n	802bc0c <__gethex+0x310>
 802bbb6:	2b03      	cmp	r3, #3
 802bbb8:	d02c      	beq.n	802bc14 <__gethex+0x318>
 802bbba:	2b01      	cmp	r3, #1
 802bbbc:	d11c      	bne.n	802bbf8 <__gethex+0x2fc>
 802bbbe:	42ae      	cmp	r6, r5
 802bbc0:	d11a      	bne.n	802bbf8 <__gethex+0x2fc>
 802bbc2:	2e01      	cmp	r6, #1
 802bbc4:	d112      	bne.n	802bbec <__gethex+0x2f0>
 802bbc6:	9a04      	ldr	r2, [sp, #16]
 802bbc8:	f8d8 3004 	ldr.w	r3, [r8, #4]
 802bbcc:	6013      	str	r3, [r2, #0]
 802bbce:	2301      	movs	r3, #1
 802bbd0:	6123      	str	r3, [r4, #16]
 802bbd2:	f8c9 3000 	str.w	r3, [r9]
 802bbd6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802bbd8:	2762      	movs	r7, #98	; 0x62
 802bbda:	601c      	str	r4, [r3, #0]
 802bbdc:	e723      	b.n	802ba26 <__gethex+0x12a>
 802bbde:	bf00      	nop
 802bbe0:	08032d98 	.word	0x08032d98
 802bbe4:	08032d22 	.word	0x08032d22
 802bbe8:	08032d33 	.word	0x08032d33
 802bbec:	1e71      	subs	r1, r6, #1
 802bbee:	4620      	mov	r0, r4
 802bbf0:	f000 fef8 	bl	802c9e4 <__any_on>
 802bbf4:	2800      	cmp	r0, #0
 802bbf6:	d1e6      	bne.n	802bbc6 <__gethex+0x2ca>
 802bbf8:	ee18 0a10 	vmov	r0, s16
 802bbfc:	4621      	mov	r1, r4
 802bbfe:	f000 fa91 	bl	802c124 <_Bfree>
 802bc02:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802bc04:	2300      	movs	r3, #0
 802bc06:	6013      	str	r3, [r2, #0]
 802bc08:	2750      	movs	r7, #80	; 0x50
 802bc0a:	e70c      	b.n	802ba26 <__gethex+0x12a>
 802bc0c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802bc0e:	2b00      	cmp	r3, #0
 802bc10:	d1f2      	bne.n	802bbf8 <__gethex+0x2fc>
 802bc12:	e7d8      	b.n	802bbc6 <__gethex+0x2ca>
 802bc14:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802bc16:	2b00      	cmp	r3, #0
 802bc18:	d1d5      	bne.n	802bbc6 <__gethex+0x2ca>
 802bc1a:	e7ed      	b.n	802bbf8 <__gethex+0x2fc>
 802bc1c:	1e6f      	subs	r7, r5, #1
 802bc1e:	f1ba 0f00 	cmp.w	sl, #0
 802bc22:	d131      	bne.n	802bc88 <__gethex+0x38c>
 802bc24:	b127      	cbz	r7, 802bc30 <__gethex+0x334>
 802bc26:	4639      	mov	r1, r7
 802bc28:	4620      	mov	r0, r4
 802bc2a:	f000 fedb 	bl	802c9e4 <__any_on>
 802bc2e:	4682      	mov	sl, r0
 802bc30:	117b      	asrs	r3, r7, #5
 802bc32:	2101      	movs	r1, #1
 802bc34:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 802bc38:	f007 071f 	and.w	r7, r7, #31
 802bc3c:	fa01 f707 	lsl.w	r7, r1, r7
 802bc40:	421f      	tst	r7, r3
 802bc42:	4629      	mov	r1, r5
 802bc44:	4620      	mov	r0, r4
 802bc46:	bf18      	it	ne
 802bc48:	f04a 0a02 	orrne.w	sl, sl, #2
 802bc4c:	1b76      	subs	r6, r6, r5
 802bc4e:	f7ff fded 	bl	802b82c <rshift>
 802bc52:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802bc56:	2702      	movs	r7, #2
 802bc58:	f1ba 0f00 	cmp.w	sl, #0
 802bc5c:	d048      	beq.n	802bcf0 <__gethex+0x3f4>
 802bc5e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 802bc62:	2b02      	cmp	r3, #2
 802bc64:	d015      	beq.n	802bc92 <__gethex+0x396>
 802bc66:	2b03      	cmp	r3, #3
 802bc68:	d017      	beq.n	802bc9a <__gethex+0x39e>
 802bc6a:	2b01      	cmp	r3, #1
 802bc6c:	d109      	bne.n	802bc82 <__gethex+0x386>
 802bc6e:	f01a 0f02 	tst.w	sl, #2
 802bc72:	d006      	beq.n	802bc82 <__gethex+0x386>
 802bc74:	f8d9 0000 	ldr.w	r0, [r9]
 802bc78:	ea4a 0a00 	orr.w	sl, sl, r0
 802bc7c:	f01a 0f01 	tst.w	sl, #1
 802bc80:	d10e      	bne.n	802bca0 <__gethex+0x3a4>
 802bc82:	f047 0710 	orr.w	r7, r7, #16
 802bc86:	e033      	b.n	802bcf0 <__gethex+0x3f4>
 802bc88:	f04f 0a01 	mov.w	sl, #1
 802bc8c:	e7d0      	b.n	802bc30 <__gethex+0x334>
 802bc8e:	2701      	movs	r7, #1
 802bc90:	e7e2      	b.n	802bc58 <__gethex+0x35c>
 802bc92:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802bc94:	f1c3 0301 	rsb	r3, r3, #1
 802bc98:	9315      	str	r3, [sp, #84]	; 0x54
 802bc9a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802bc9c:	2b00      	cmp	r3, #0
 802bc9e:	d0f0      	beq.n	802bc82 <__gethex+0x386>
 802bca0:	f8d4 b010 	ldr.w	fp, [r4, #16]
 802bca4:	f104 0314 	add.w	r3, r4, #20
 802bca8:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 802bcac:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 802bcb0:	f04f 0c00 	mov.w	ip, #0
 802bcb4:	4618      	mov	r0, r3
 802bcb6:	f853 2b04 	ldr.w	r2, [r3], #4
 802bcba:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 802bcbe:	d01c      	beq.n	802bcfa <__gethex+0x3fe>
 802bcc0:	3201      	adds	r2, #1
 802bcc2:	6002      	str	r2, [r0, #0]
 802bcc4:	2f02      	cmp	r7, #2
 802bcc6:	f104 0314 	add.w	r3, r4, #20
 802bcca:	d13f      	bne.n	802bd4c <__gethex+0x450>
 802bccc:	f8d8 2000 	ldr.w	r2, [r8]
 802bcd0:	3a01      	subs	r2, #1
 802bcd2:	42b2      	cmp	r2, r6
 802bcd4:	d10a      	bne.n	802bcec <__gethex+0x3f0>
 802bcd6:	1171      	asrs	r1, r6, #5
 802bcd8:	2201      	movs	r2, #1
 802bcda:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 802bcde:	f006 061f 	and.w	r6, r6, #31
 802bce2:	fa02 f606 	lsl.w	r6, r2, r6
 802bce6:	421e      	tst	r6, r3
 802bce8:	bf18      	it	ne
 802bcea:	4617      	movne	r7, r2
 802bcec:	f047 0720 	orr.w	r7, r7, #32
 802bcf0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802bcf2:	601c      	str	r4, [r3, #0]
 802bcf4:	9b04      	ldr	r3, [sp, #16]
 802bcf6:	601d      	str	r5, [r3, #0]
 802bcf8:	e695      	b.n	802ba26 <__gethex+0x12a>
 802bcfa:	4299      	cmp	r1, r3
 802bcfc:	f843 cc04 	str.w	ip, [r3, #-4]
 802bd00:	d8d8      	bhi.n	802bcb4 <__gethex+0x3b8>
 802bd02:	68a3      	ldr	r3, [r4, #8]
 802bd04:	459b      	cmp	fp, r3
 802bd06:	db19      	blt.n	802bd3c <__gethex+0x440>
 802bd08:	6861      	ldr	r1, [r4, #4]
 802bd0a:	ee18 0a10 	vmov	r0, s16
 802bd0e:	3101      	adds	r1, #1
 802bd10:	f000 f9c8 	bl	802c0a4 <_Balloc>
 802bd14:	4681      	mov	r9, r0
 802bd16:	b918      	cbnz	r0, 802bd20 <__gethex+0x424>
 802bd18:	4b1a      	ldr	r3, [pc, #104]	; (802bd84 <__gethex+0x488>)
 802bd1a:	4602      	mov	r2, r0
 802bd1c:	2184      	movs	r1, #132	; 0x84
 802bd1e:	e6a8      	b.n	802ba72 <__gethex+0x176>
 802bd20:	6922      	ldr	r2, [r4, #16]
 802bd22:	3202      	adds	r2, #2
 802bd24:	f104 010c 	add.w	r1, r4, #12
 802bd28:	0092      	lsls	r2, r2, #2
 802bd2a:	300c      	adds	r0, #12
 802bd2c:	f7fa f8e8 	bl	8025f00 <memcpy>
 802bd30:	4621      	mov	r1, r4
 802bd32:	ee18 0a10 	vmov	r0, s16
 802bd36:	f000 f9f5 	bl	802c124 <_Bfree>
 802bd3a:	464c      	mov	r4, r9
 802bd3c:	6923      	ldr	r3, [r4, #16]
 802bd3e:	1c5a      	adds	r2, r3, #1
 802bd40:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 802bd44:	6122      	str	r2, [r4, #16]
 802bd46:	2201      	movs	r2, #1
 802bd48:	615a      	str	r2, [r3, #20]
 802bd4a:	e7bb      	b.n	802bcc4 <__gethex+0x3c8>
 802bd4c:	6922      	ldr	r2, [r4, #16]
 802bd4e:	455a      	cmp	r2, fp
 802bd50:	dd0b      	ble.n	802bd6a <__gethex+0x46e>
 802bd52:	2101      	movs	r1, #1
 802bd54:	4620      	mov	r0, r4
 802bd56:	f7ff fd69 	bl	802b82c <rshift>
 802bd5a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 802bd5e:	3501      	adds	r5, #1
 802bd60:	42ab      	cmp	r3, r5
 802bd62:	f6ff aed0 	blt.w	802bb06 <__gethex+0x20a>
 802bd66:	2701      	movs	r7, #1
 802bd68:	e7c0      	b.n	802bcec <__gethex+0x3f0>
 802bd6a:	f016 061f 	ands.w	r6, r6, #31
 802bd6e:	d0fa      	beq.n	802bd66 <__gethex+0x46a>
 802bd70:	4453      	add	r3, sl
 802bd72:	f1c6 0620 	rsb	r6, r6, #32
 802bd76:	f853 0c04 	ldr.w	r0, [r3, #-4]
 802bd7a:	f000 fa85 	bl	802c288 <__hi0bits>
 802bd7e:	42b0      	cmp	r0, r6
 802bd80:	dbe7      	blt.n	802bd52 <__gethex+0x456>
 802bd82:	e7f0      	b.n	802bd66 <__gethex+0x46a>
 802bd84:	08032d22 	.word	0x08032d22

0802bd88 <L_shift>:
 802bd88:	f1c2 0208 	rsb	r2, r2, #8
 802bd8c:	0092      	lsls	r2, r2, #2
 802bd8e:	b570      	push	{r4, r5, r6, lr}
 802bd90:	f1c2 0620 	rsb	r6, r2, #32
 802bd94:	6843      	ldr	r3, [r0, #4]
 802bd96:	6804      	ldr	r4, [r0, #0]
 802bd98:	fa03 f506 	lsl.w	r5, r3, r6
 802bd9c:	432c      	orrs	r4, r5
 802bd9e:	40d3      	lsrs	r3, r2
 802bda0:	6004      	str	r4, [r0, #0]
 802bda2:	f840 3f04 	str.w	r3, [r0, #4]!
 802bda6:	4288      	cmp	r0, r1
 802bda8:	d3f4      	bcc.n	802bd94 <L_shift+0xc>
 802bdaa:	bd70      	pop	{r4, r5, r6, pc}

0802bdac <__match>:
 802bdac:	b530      	push	{r4, r5, lr}
 802bdae:	6803      	ldr	r3, [r0, #0]
 802bdb0:	3301      	adds	r3, #1
 802bdb2:	f811 4b01 	ldrb.w	r4, [r1], #1
 802bdb6:	b914      	cbnz	r4, 802bdbe <__match+0x12>
 802bdb8:	6003      	str	r3, [r0, #0]
 802bdba:	2001      	movs	r0, #1
 802bdbc:	bd30      	pop	{r4, r5, pc}
 802bdbe:	f813 2b01 	ldrb.w	r2, [r3], #1
 802bdc2:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 802bdc6:	2d19      	cmp	r5, #25
 802bdc8:	bf98      	it	ls
 802bdca:	3220      	addls	r2, #32
 802bdcc:	42a2      	cmp	r2, r4
 802bdce:	d0f0      	beq.n	802bdb2 <__match+0x6>
 802bdd0:	2000      	movs	r0, #0
 802bdd2:	e7f3      	b.n	802bdbc <__match+0x10>

0802bdd4 <__hexnan>:
 802bdd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bdd8:	680b      	ldr	r3, [r1, #0]
 802bdda:	115e      	asrs	r6, r3, #5
 802bddc:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 802bde0:	f013 031f 	ands.w	r3, r3, #31
 802bde4:	b087      	sub	sp, #28
 802bde6:	bf18      	it	ne
 802bde8:	3604      	addne	r6, #4
 802bdea:	2500      	movs	r5, #0
 802bdec:	1f37      	subs	r7, r6, #4
 802bdee:	4690      	mov	r8, r2
 802bdf0:	6802      	ldr	r2, [r0, #0]
 802bdf2:	9301      	str	r3, [sp, #4]
 802bdf4:	4682      	mov	sl, r0
 802bdf6:	f846 5c04 	str.w	r5, [r6, #-4]
 802bdfa:	46b9      	mov	r9, r7
 802bdfc:	463c      	mov	r4, r7
 802bdfe:	9502      	str	r5, [sp, #8]
 802be00:	46ab      	mov	fp, r5
 802be02:	7851      	ldrb	r1, [r2, #1]
 802be04:	1c53      	adds	r3, r2, #1
 802be06:	9303      	str	r3, [sp, #12]
 802be08:	b341      	cbz	r1, 802be5c <__hexnan+0x88>
 802be0a:	4608      	mov	r0, r1
 802be0c:	9205      	str	r2, [sp, #20]
 802be0e:	9104      	str	r1, [sp, #16]
 802be10:	f7ff fd5e 	bl	802b8d0 <__hexdig_fun>
 802be14:	2800      	cmp	r0, #0
 802be16:	d14f      	bne.n	802beb8 <__hexnan+0xe4>
 802be18:	9904      	ldr	r1, [sp, #16]
 802be1a:	9a05      	ldr	r2, [sp, #20]
 802be1c:	2920      	cmp	r1, #32
 802be1e:	d818      	bhi.n	802be52 <__hexnan+0x7e>
 802be20:	9b02      	ldr	r3, [sp, #8]
 802be22:	459b      	cmp	fp, r3
 802be24:	dd13      	ble.n	802be4e <__hexnan+0x7a>
 802be26:	454c      	cmp	r4, r9
 802be28:	d206      	bcs.n	802be38 <__hexnan+0x64>
 802be2a:	2d07      	cmp	r5, #7
 802be2c:	dc04      	bgt.n	802be38 <__hexnan+0x64>
 802be2e:	462a      	mov	r2, r5
 802be30:	4649      	mov	r1, r9
 802be32:	4620      	mov	r0, r4
 802be34:	f7ff ffa8 	bl	802bd88 <L_shift>
 802be38:	4544      	cmp	r4, r8
 802be3a:	d950      	bls.n	802bede <__hexnan+0x10a>
 802be3c:	2300      	movs	r3, #0
 802be3e:	f1a4 0904 	sub.w	r9, r4, #4
 802be42:	f844 3c04 	str.w	r3, [r4, #-4]
 802be46:	f8cd b008 	str.w	fp, [sp, #8]
 802be4a:	464c      	mov	r4, r9
 802be4c:	461d      	mov	r5, r3
 802be4e:	9a03      	ldr	r2, [sp, #12]
 802be50:	e7d7      	b.n	802be02 <__hexnan+0x2e>
 802be52:	2929      	cmp	r1, #41	; 0x29
 802be54:	d156      	bne.n	802bf04 <__hexnan+0x130>
 802be56:	3202      	adds	r2, #2
 802be58:	f8ca 2000 	str.w	r2, [sl]
 802be5c:	f1bb 0f00 	cmp.w	fp, #0
 802be60:	d050      	beq.n	802bf04 <__hexnan+0x130>
 802be62:	454c      	cmp	r4, r9
 802be64:	d206      	bcs.n	802be74 <__hexnan+0xa0>
 802be66:	2d07      	cmp	r5, #7
 802be68:	dc04      	bgt.n	802be74 <__hexnan+0xa0>
 802be6a:	462a      	mov	r2, r5
 802be6c:	4649      	mov	r1, r9
 802be6e:	4620      	mov	r0, r4
 802be70:	f7ff ff8a 	bl	802bd88 <L_shift>
 802be74:	4544      	cmp	r4, r8
 802be76:	d934      	bls.n	802bee2 <__hexnan+0x10e>
 802be78:	f1a8 0204 	sub.w	r2, r8, #4
 802be7c:	4623      	mov	r3, r4
 802be7e:	f853 1b04 	ldr.w	r1, [r3], #4
 802be82:	f842 1f04 	str.w	r1, [r2, #4]!
 802be86:	429f      	cmp	r7, r3
 802be88:	d2f9      	bcs.n	802be7e <__hexnan+0xaa>
 802be8a:	1b3b      	subs	r3, r7, r4
 802be8c:	f023 0303 	bic.w	r3, r3, #3
 802be90:	3304      	adds	r3, #4
 802be92:	3401      	adds	r4, #1
 802be94:	3e03      	subs	r6, #3
 802be96:	42b4      	cmp	r4, r6
 802be98:	bf88      	it	hi
 802be9a:	2304      	movhi	r3, #4
 802be9c:	4443      	add	r3, r8
 802be9e:	2200      	movs	r2, #0
 802bea0:	f843 2b04 	str.w	r2, [r3], #4
 802bea4:	429f      	cmp	r7, r3
 802bea6:	d2fb      	bcs.n	802bea0 <__hexnan+0xcc>
 802bea8:	683b      	ldr	r3, [r7, #0]
 802beaa:	b91b      	cbnz	r3, 802beb4 <__hexnan+0xe0>
 802beac:	4547      	cmp	r7, r8
 802beae:	d127      	bne.n	802bf00 <__hexnan+0x12c>
 802beb0:	2301      	movs	r3, #1
 802beb2:	603b      	str	r3, [r7, #0]
 802beb4:	2005      	movs	r0, #5
 802beb6:	e026      	b.n	802bf06 <__hexnan+0x132>
 802beb8:	3501      	adds	r5, #1
 802beba:	2d08      	cmp	r5, #8
 802bebc:	f10b 0b01 	add.w	fp, fp, #1
 802bec0:	dd06      	ble.n	802bed0 <__hexnan+0xfc>
 802bec2:	4544      	cmp	r4, r8
 802bec4:	d9c3      	bls.n	802be4e <__hexnan+0x7a>
 802bec6:	2300      	movs	r3, #0
 802bec8:	f844 3c04 	str.w	r3, [r4, #-4]
 802becc:	2501      	movs	r5, #1
 802bece:	3c04      	subs	r4, #4
 802bed0:	6822      	ldr	r2, [r4, #0]
 802bed2:	f000 000f 	and.w	r0, r0, #15
 802bed6:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 802beda:	6022      	str	r2, [r4, #0]
 802bedc:	e7b7      	b.n	802be4e <__hexnan+0x7a>
 802bede:	2508      	movs	r5, #8
 802bee0:	e7b5      	b.n	802be4e <__hexnan+0x7a>
 802bee2:	9b01      	ldr	r3, [sp, #4]
 802bee4:	2b00      	cmp	r3, #0
 802bee6:	d0df      	beq.n	802bea8 <__hexnan+0xd4>
 802bee8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 802beec:	f1c3 0320 	rsb	r3, r3, #32
 802bef0:	fa22 f303 	lsr.w	r3, r2, r3
 802bef4:	f856 2c04 	ldr.w	r2, [r6, #-4]
 802bef8:	401a      	ands	r2, r3
 802befa:	f846 2c04 	str.w	r2, [r6, #-4]
 802befe:	e7d3      	b.n	802bea8 <__hexnan+0xd4>
 802bf00:	3f04      	subs	r7, #4
 802bf02:	e7d1      	b.n	802bea8 <__hexnan+0xd4>
 802bf04:	2004      	movs	r0, #4
 802bf06:	b007      	add	sp, #28
 802bf08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802bf0c <_findenv_r>:
 802bf0c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bf10:	f8df a06c 	ldr.w	sl, [pc, #108]	; 802bf80 <_findenv_r+0x74>
 802bf14:	4607      	mov	r7, r0
 802bf16:	4689      	mov	r9, r1
 802bf18:	4616      	mov	r6, r2
 802bf1a:	f001 fd49 	bl	802d9b0 <__env_lock>
 802bf1e:	f8da 4000 	ldr.w	r4, [sl]
 802bf22:	b134      	cbz	r4, 802bf32 <_findenv_r+0x26>
 802bf24:	464b      	mov	r3, r9
 802bf26:	4698      	mov	r8, r3
 802bf28:	f813 2b01 	ldrb.w	r2, [r3], #1
 802bf2c:	b13a      	cbz	r2, 802bf3e <_findenv_r+0x32>
 802bf2e:	2a3d      	cmp	r2, #61	; 0x3d
 802bf30:	d1f9      	bne.n	802bf26 <_findenv_r+0x1a>
 802bf32:	4638      	mov	r0, r7
 802bf34:	f001 fd42 	bl	802d9bc <__env_unlock>
 802bf38:	2000      	movs	r0, #0
 802bf3a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bf3e:	eba8 0809 	sub.w	r8, r8, r9
 802bf42:	46a3      	mov	fp, r4
 802bf44:	f854 0b04 	ldr.w	r0, [r4], #4
 802bf48:	2800      	cmp	r0, #0
 802bf4a:	d0f2      	beq.n	802bf32 <_findenv_r+0x26>
 802bf4c:	4642      	mov	r2, r8
 802bf4e:	4649      	mov	r1, r9
 802bf50:	f001 fc0e 	bl	802d770 <strncmp>
 802bf54:	2800      	cmp	r0, #0
 802bf56:	d1f4      	bne.n	802bf42 <_findenv_r+0x36>
 802bf58:	f854 3c04 	ldr.w	r3, [r4, #-4]
 802bf5c:	eb03 0508 	add.w	r5, r3, r8
 802bf60:	f813 3008 	ldrb.w	r3, [r3, r8]
 802bf64:	2b3d      	cmp	r3, #61	; 0x3d
 802bf66:	d1ec      	bne.n	802bf42 <_findenv_r+0x36>
 802bf68:	f8da 3000 	ldr.w	r3, [sl]
 802bf6c:	ebab 0303 	sub.w	r3, fp, r3
 802bf70:	109b      	asrs	r3, r3, #2
 802bf72:	4638      	mov	r0, r7
 802bf74:	6033      	str	r3, [r6, #0]
 802bf76:	f001 fd21 	bl	802d9bc <__env_unlock>
 802bf7a:	1c68      	adds	r0, r5, #1
 802bf7c:	e7dd      	b.n	802bf3a <_findenv_r+0x2e>
 802bf7e:	bf00      	nop
 802bf80:	20000004 	.word	0x20000004

0802bf84 <_getenv_r>:
 802bf84:	b507      	push	{r0, r1, r2, lr}
 802bf86:	aa01      	add	r2, sp, #4
 802bf88:	f7ff ffc0 	bl	802bf0c <_findenv_r>
 802bf8c:	b003      	add	sp, #12
 802bf8e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0802bf94 <__gettzinfo>:
 802bf94:	4800      	ldr	r0, [pc, #0]	; (802bf98 <__gettzinfo+0x4>)
 802bf96:	4770      	bx	lr
 802bf98:	20000298 	.word	0x20000298

0802bf9c <_isatty_r>:
 802bf9c:	b538      	push	{r3, r4, r5, lr}
 802bf9e:	4d06      	ldr	r5, [pc, #24]	; (802bfb8 <_isatty_r+0x1c>)
 802bfa0:	2300      	movs	r3, #0
 802bfa2:	4604      	mov	r4, r0
 802bfa4:	4608      	mov	r0, r1
 802bfa6:	602b      	str	r3, [r5, #0]
 802bfa8:	f7d7 f843 	bl	8003032 <_isatty>
 802bfac:	1c43      	adds	r3, r0, #1
 802bfae:	d102      	bne.n	802bfb6 <_isatty_r+0x1a>
 802bfb0:	682b      	ldr	r3, [r5, #0]
 802bfb2:	b103      	cbz	r3, 802bfb6 <_isatty_r+0x1a>
 802bfb4:	6023      	str	r3, [r4, #0]
 802bfb6:	bd38      	pop	{r3, r4, r5, pc}
 802bfb8:	200042d4 	.word	0x200042d4

0802bfbc <iswalnum>:
 802bfbc:	2100      	movs	r1, #0
 802bfbe:	f000 b801 	b.w	802bfc4 <iswalnum_l>
	...

0802bfc4 <iswalnum_l>:
 802bfc4:	28ff      	cmp	r0, #255	; 0xff
 802bfc6:	bf9d      	ittte	ls
 802bfc8:	4b02      	ldrls	r3, [pc, #8]	; (802bfd4 <iswalnum_l+0x10>)
 802bfca:	5cc0      	ldrbls	r0, [r0, r3]
 802bfcc:	f000 0007 	andls.w	r0, r0, #7
 802bfd0:	2000      	movhi	r0, #0
 802bfd2:	4770      	bx	lr
 802bfd4:	08032018 	.word	0x08032018

0802bfd8 <iswalpha>:
 802bfd8:	2100      	movs	r1, #0
 802bfda:	f000 b801 	b.w	802bfe0 <iswalpha_l>
	...

0802bfe0 <iswalpha_l>:
 802bfe0:	28ff      	cmp	r0, #255	; 0xff
 802bfe2:	bf9d      	ittte	ls
 802bfe4:	4b02      	ldrls	r3, [pc, #8]	; (802bff0 <iswalpha_l+0x10>)
 802bfe6:	5cc0      	ldrbls	r0, [r0, r3]
 802bfe8:	f000 0003 	andls.w	r0, r0, #3
 802bfec:	2000      	movhi	r0, #0
 802bfee:	4770      	bx	lr
 802bff0:	08032018 	.word	0x08032018

0802bff4 <iswblank>:
 802bff4:	2100      	movs	r1, #0
 802bff6:	f000 b801 	b.w	802bffc <iswblank_l>
	...

0802bffc <iswblank_l>:
 802bffc:	28ff      	cmp	r0, #255	; 0xff
 802bffe:	d808      	bhi.n	802c012 <iswblank_l+0x16>
 802c000:	4b06      	ldr	r3, [pc, #24]	; (802c01c <iswblank_l+0x20>)
 802c002:	56c3      	ldrsb	r3, [r0, r3]
 802c004:	2b00      	cmp	r3, #0
 802c006:	db06      	blt.n	802c016 <iswblank_l+0x1a>
 802c008:	f1a0 0309 	sub.w	r3, r0, #9
 802c00c:	4258      	negs	r0, r3
 802c00e:	4158      	adcs	r0, r3
 802c010:	4770      	bx	lr
 802c012:	2000      	movs	r0, #0
 802c014:	4770      	bx	lr
 802c016:	2001      	movs	r0, #1
 802c018:	4770      	bx	lr
 802c01a:	bf00      	nop
 802c01c:	08032018 	.word	0x08032018

0802c020 <iswcntrl>:
 802c020:	2100      	movs	r1, #0
 802c022:	f000 b801 	b.w	802c028 <iswcntrl_l>
	...

0802c028 <iswcntrl_l>:
 802c028:	28ff      	cmp	r0, #255	; 0xff
 802c02a:	bf9d      	ittte	ls
 802c02c:	4b02      	ldrls	r3, [pc, #8]	; (802c038 <iswcntrl_l+0x10>)
 802c02e:	5cc0      	ldrbls	r0, [r0, r3]
 802c030:	f000 0020 	andls.w	r0, r0, #32
 802c034:	2000      	movhi	r0, #0
 802c036:	4770      	bx	lr
 802c038:	08032018 	.word	0x08032018

0802c03c <labs>:
 802c03c:	2800      	cmp	r0, #0
 802c03e:	bfb8      	it	lt
 802c040:	4240      	neglt	r0, r0
 802c042:	4770      	bx	lr

0802c044 <_localeconv_r>:
 802c044:	4800      	ldr	r0, [pc, #0]	; (802c048 <_localeconv_r+0x4>)
 802c046:	4770      	bx	lr
 802c048:	20000210 	.word	0x20000210

0802c04c <_lseek_r>:
 802c04c:	b538      	push	{r3, r4, r5, lr}
 802c04e:	4d07      	ldr	r5, [pc, #28]	; (802c06c <_lseek_r+0x20>)
 802c050:	4604      	mov	r4, r0
 802c052:	4608      	mov	r0, r1
 802c054:	4611      	mov	r1, r2
 802c056:	2200      	movs	r2, #0
 802c058:	602a      	str	r2, [r5, #0]
 802c05a:	461a      	mov	r2, r3
 802c05c:	f7d6 fff4 	bl	8003048 <_lseek>
 802c060:	1c43      	adds	r3, r0, #1
 802c062:	d102      	bne.n	802c06a <_lseek_r+0x1e>
 802c064:	682b      	ldr	r3, [r5, #0]
 802c066:	b103      	cbz	r3, 802c06a <_lseek_r+0x1e>
 802c068:	6023      	str	r3, [r4, #0]
 802c06a:	bd38      	pop	{r3, r4, r5, pc}
 802c06c:	200042d4 	.word	0x200042d4

0802c070 <mbstowcs>:
 802c070:	b510      	push	{r4, lr}
 802c072:	4603      	mov	r3, r0
 802c074:	b142      	cbz	r2, 802c088 <mbstowcs+0x18>
 802c076:	2000      	movs	r0, #0
 802c078:	5c0c      	ldrb	r4, [r1, r0]
 802c07a:	f843 4020 	str.w	r4, [r3, r0, lsl #2]
 802c07e:	b114      	cbz	r4, 802c086 <mbstowcs+0x16>
 802c080:	3001      	adds	r0, #1
 802c082:	4290      	cmp	r0, r2
 802c084:	d1f8      	bne.n	802c078 <mbstowcs+0x8>
 802c086:	bd10      	pop	{r4, pc}
 802c088:	4610      	mov	r0, r2
 802c08a:	e7fc      	b.n	802c086 <mbstowcs+0x16>

0802c08c <__malloc_lock>:
 802c08c:	4801      	ldr	r0, [pc, #4]	; (802c094 <__malloc_lock+0x8>)
 802c08e:	f7f9 be75 	b.w	8025d7c <__retarget_lock_acquire_recursive>
 802c092:	bf00      	nop
 802c094:	200042c5 	.word	0x200042c5

0802c098 <__malloc_unlock>:
 802c098:	4801      	ldr	r0, [pc, #4]	; (802c0a0 <__malloc_unlock+0x8>)
 802c09a:	f7f9 be71 	b.w	8025d80 <__retarget_lock_release_recursive>
 802c09e:	bf00      	nop
 802c0a0:	200042c5 	.word	0x200042c5

0802c0a4 <_Balloc>:
 802c0a4:	b570      	push	{r4, r5, r6, lr}
 802c0a6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 802c0a8:	4604      	mov	r4, r0
 802c0aa:	460d      	mov	r5, r1
 802c0ac:	b976      	cbnz	r6, 802c0cc <_Balloc+0x28>
 802c0ae:	2010      	movs	r0, #16
 802c0b0:	f7f9 fecc 	bl	8025e4c <malloc>
 802c0b4:	4602      	mov	r2, r0
 802c0b6:	6260      	str	r0, [r4, #36]	; 0x24
 802c0b8:	b920      	cbnz	r0, 802c0c4 <_Balloc+0x20>
 802c0ba:	4b18      	ldr	r3, [pc, #96]	; (802c11c <_Balloc+0x78>)
 802c0bc:	4818      	ldr	r0, [pc, #96]	; (802c120 <_Balloc+0x7c>)
 802c0be:	2166      	movs	r1, #102	; 0x66
 802c0c0:	f7fe fbdc 	bl	802a87c <__assert_func>
 802c0c4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 802c0c8:	6006      	str	r6, [r0, #0]
 802c0ca:	60c6      	str	r6, [r0, #12]
 802c0cc:	6a66      	ldr	r6, [r4, #36]	; 0x24
 802c0ce:	68f3      	ldr	r3, [r6, #12]
 802c0d0:	b183      	cbz	r3, 802c0f4 <_Balloc+0x50>
 802c0d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802c0d4:	68db      	ldr	r3, [r3, #12]
 802c0d6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 802c0da:	b9b8      	cbnz	r0, 802c10c <_Balloc+0x68>
 802c0dc:	2101      	movs	r1, #1
 802c0de:	fa01 f605 	lsl.w	r6, r1, r5
 802c0e2:	1d72      	adds	r2, r6, #5
 802c0e4:	0092      	lsls	r2, r2, #2
 802c0e6:	4620      	mov	r0, r4
 802c0e8:	f000 fc9d 	bl	802ca26 <_calloc_r>
 802c0ec:	b160      	cbz	r0, 802c108 <_Balloc+0x64>
 802c0ee:	e9c0 5601 	strd	r5, r6, [r0, #4]
 802c0f2:	e00e      	b.n	802c112 <_Balloc+0x6e>
 802c0f4:	2221      	movs	r2, #33	; 0x21
 802c0f6:	2104      	movs	r1, #4
 802c0f8:	4620      	mov	r0, r4
 802c0fa:	f000 fc94 	bl	802ca26 <_calloc_r>
 802c0fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802c100:	60f0      	str	r0, [r6, #12]
 802c102:	68db      	ldr	r3, [r3, #12]
 802c104:	2b00      	cmp	r3, #0
 802c106:	d1e4      	bne.n	802c0d2 <_Balloc+0x2e>
 802c108:	2000      	movs	r0, #0
 802c10a:	bd70      	pop	{r4, r5, r6, pc}
 802c10c:	6802      	ldr	r2, [r0, #0]
 802c10e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 802c112:	2300      	movs	r3, #0
 802c114:	e9c0 3303 	strd	r3, r3, [r0, #12]
 802c118:	e7f7      	b.n	802c10a <_Balloc+0x66>
 802c11a:	bf00      	nop
 802c11c:	08031fa4 	.word	0x08031fa4
 802c120:	08032da4 	.word	0x08032da4

0802c124 <_Bfree>:
 802c124:	b570      	push	{r4, r5, r6, lr}
 802c126:	6a46      	ldr	r6, [r0, #36]	; 0x24
 802c128:	4605      	mov	r5, r0
 802c12a:	460c      	mov	r4, r1
 802c12c:	b976      	cbnz	r6, 802c14c <_Bfree+0x28>
 802c12e:	2010      	movs	r0, #16
 802c130:	f7f9 fe8c 	bl	8025e4c <malloc>
 802c134:	4602      	mov	r2, r0
 802c136:	6268      	str	r0, [r5, #36]	; 0x24
 802c138:	b920      	cbnz	r0, 802c144 <_Bfree+0x20>
 802c13a:	4b09      	ldr	r3, [pc, #36]	; (802c160 <_Bfree+0x3c>)
 802c13c:	4809      	ldr	r0, [pc, #36]	; (802c164 <_Bfree+0x40>)
 802c13e:	218a      	movs	r1, #138	; 0x8a
 802c140:	f7fe fb9c 	bl	802a87c <__assert_func>
 802c144:	e9c0 6601 	strd	r6, r6, [r0, #4]
 802c148:	6006      	str	r6, [r0, #0]
 802c14a:	60c6      	str	r6, [r0, #12]
 802c14c:	b13c      	cbz	r4, 802c15e <_Bfree+0x3a>
 802c14e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 802c150:	6862      	ldr	r2, [r4, #4]
 802c152:	68db      	ldr	r3, [r3, #12]
 802c154:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802c158:	6021      	str	r1, [r4, #0]
 802c15a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 802c15e:	bd70      	pop	{r4, r5, r6, pc}
 802c160:	08031fa4 	.word	0x08031fa4
 802c164:	08032da4 	.word	0x08032da4

0802c168 <__multadd>:
 802c168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c16c:	690d      	ldr	r5, [r1, #16]
 802c16e:	4607      	mov	r7, r0
 802c170:	460c      	mov	r4, r1
 802c172:	461e      	mov	r6, r3
 802c174:	f101 0c14 	add.w	ip, r1, #20
 802c178:	2000      	movs	r0, #0
 802c17a:	f8dc 3000 	ldr.w	r3, [ip]
 802c17e:	b299      	uxth	r1, r3
 802c180:	fb02 6101 	mla	r1, r2, r1, r6
 802c184:	0c1e      	lsrs	r6, r3, #16
 802c186:	0c0b      	lsrs	r3, r1, #16
 802c188:	fb02 3306 	mla	r3, r2, r6, r3
 802c18c:	b289      	uxth	r1, r1
 802c18e:	3001      	adds	r0, #1
 802c190:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 802c194:	4285      	cmp	r5, r0
 802c196:	f84c 1b04 	str.w	r1, [ip], #4
 802c19a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 802c19e:	dcec      	bgt.n	802c17a <__multadd+0x12>
 802c1a0:	b30e      	cbz	r6, 802c1e6 <__multadd+0x7e>
 802c1a2:	68a3      	ldr	r3, [r4, #8]
 802c1a4:	42ab      	cmp	r3, r5
 802c1a6:	dc19      	bgt.n	802c1dc <__multadd+0x74>
 802c1a8:	6861      	ldr	r1, [r4, #4]
 802c1aa:	4638      	mov	r0, r7
 802c1ac:	3101      	adds	r1, #1
 802c1ae:	f7ff ff79 	bl	802c0a4 <_Balloc>
 802c1b2:	4680      	mov	r8, r0
 802c1b4:	b928      	cbnz	r0, 802c1c2 <__multadd+0x5a>
 802c1b6:	4602      	mov	r2, r0
 802c1b8:	4b0c      	ldr	r3, [pc, #48]	; (802c1ec <__multadd+0x84>)
 802c1ba:	480d      	ldr	r0, [pc, #52]	; (802c1f0 <__multadd+0x88>)
 802c1bc:	21b5      	movs	r1, #181	; 0xb5
 802c1be:	f7fe fb5d 	bl	802a87c <__assert_func>
 802c1c2:	6922      	ldr	r2, [r4, #16]
 802c1c4:	3202      	adds	r2, #2
 802c1c6:	f104 010c 	add.w	r1, r4, #12
 802c1ca:	0092      	lsls	r2, r2, #2
 802c1cc:	300c      	adds	r0, #12
 802c1ce:	f7f9 fe97 	bl	8025f00 <memcpy>
 802c1d2:	4621      	mov	r1, r4
 802c1d4:	4638      	mov	r0, r7
 802c1d6:	f7ff ffa5 	bl	802c124 <_Bfree>
 802c1da:	4644      	mov	r4, r8
 802c1dc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 802c1e0:	3501      	adds	r5, #1
 802c1e2:	615e      	str	r6, [r3, #20]
 802c1e4:	6125      	str	r5, [r4, #16]
 802c1e6:	4620      	mov	r0, r4
 802c1e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c1ec:	08032d22 	.word	0x08032d22
 802c1f0:	08032da4 	.word	0x08032da4

0802c1f4 <__s2b>:
 802c1f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802c1f8:	460c      	mov	r4, r1
 802c1fa:	4615      	mov	r5, r2
 802c1fc:	461f      	mov	r7, r3
 802c1fe:	2209      	movs	r2, #9
 802c200:	3308      	adds	r3, #8
 802c202:	4606      	mov	r6, r0
 802c204:	fb93 f3f2 	sdiv	r3, r3, r2
 802c208:	2100      	movs	r1, #0
 802c20a:	2201      	movs	r2, #1
 802c20c:	429a      	cmp	r2, r3
 802c20e:	db09      	blt.n	802c224 <__s2b+0x30>
 802c210:	4630      	mov	r0, r6
 802c212:	f7ff ff47 	bl	802c0a4 <_Balloc>
 802c216:	b940      	cbnz	r0, 802c22a <__s2b+0x36>
 802c218:	4602      	mov	r2, r0
 802c21a:	4b19      	ldr	r3, [pc, #100]	; (802c280 <__s2b+0x8c>)
 802c21c:	4819      	ldr	r0, [pc, #100]	; (802c284 <__s2b+0x90>)
 802c21e:	21ce      	movs	r1, #206	; 0xce
 802c220:	f7fe fb2c 	bl	802a87c <__assert_func>
 802c224:	0052      	lsls	r2, r2, #1
 802c226:	3101      	adds	r1, #1
 802c228:	e7f0      	b.n	802c20c <__s2b+0x18>
 802c22a:	9b08      	ldr	r3, [sp, #32]
 802c22c:	6143      	str	r3, [r0, #20]
 802c22e:	2d09      	cmp	r5, #9
 802c230:	f04f 0301 	mov.w	r3, #1
 802c234:	6103      	str	r3, [r0, #16]
 802c236:	dd16      	ble.n	802c266 <__s2b+0x72>
 802c238:	f104 0909 	add.w	r9, r4, #9
 802c23c:	46c8      	mov	r8, r9
 802c23e:	442c      	add	r4, r5
 802c240:	f818 3b01 	ldrb.w	r3, [r8], #1
 802c244:	4601      	mov	r1, r0
 802c246:	3b30      	subs	r3, #48	; 0x30
 802c248:	220a      	movs	r2, #10
 802c24a:	4630      	mov	r0, r6
 802c24c:	f7ff ff8c 	bl	802c168 <__multadd>
 802c250:	45a0      	cmp	r8, r4
 802c252:	d1f5      	bne.n	802c240 <__s2b+0x4c>
 802c254:	f1a5 0408 	sub.w	r4, r5, #8
 802c258:	444c      	add	r4, r9
 802c25a:	1b2d      	subs	r5, r5, r4
 802c25c:	1963      	adds	r3, r4, r5
 802c25e:	42bb      	cmp	r3, r7
 802c260:	db04      	blt.n	802c26c <__s2b+0x78>
 802c262:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802c266:	340a      	adds	r4, #10
 802c268:	2509      	movs	r5, #9
 802c26a:	e7f6      	b.n	802c25a <__s2b+0x66>
 802c26c:	f814 3b01 	ldrb.w	r3, [r4], #1
 802c270:	4601      	mov	r1, r0
 802c272:	3b30      	subs	r3, #48	; 0x30
 802c274:	220a      	movs	r2, #10
 802c276:	4630      	mov	r0, r6
 802c278:	f7ff ff76 	bl	802c168 <__multadd>
 802c27c:	e7ee      	b.n	802c25c <__s2b+0x68>
 802c27e:	bf00      	nop
 802c280:	08032d22 	.word	0x08032d22
 802c284:	08032da4 	.word	0x08032da4

0802c288 <__hi0bits>:
 802c288:	0c03      	lsrs	r3, r0, #16
 802c28a:	041b      	lsls	r3, r3, #16
 802c28c:	b9d3      	cbnz	r3, 802c2c4 <__hi0bits+0x3c>
 802c28e:	0400      	lsls	r0, r0, #16
 802c290:	2310      	movs	r3, #16
 802c292:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 802c296:	bf04      	itt	eq
 802c298:	0200      	lsleq	r0, r0, #8
 802c29a:	3308      	addeq	r3, #8
 802c29c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 802c2a0:	bf04      	itt	eq
 802c2a2:	0100      	lsleq	r0, r0, #4
 802c2a4:	3304      	addeq	r3, #4
 802c2a6:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 802c2aa:	bf04      	itt	eq
 802c2ac:	0080      	lsleq	r0, r0, #2
 802c2ae:	3302      	addeq	r3, #2
 802c2b0:	2800      	cmp	r0, #0
 802c2b2:	db05      	blt.n	802c2c0 <__hi0bits+0x38>
 802c2b4:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 802c2b8:	f103 0301 	add.w	r3, r3, #1
 802c2bc:	bf08      	it	eq
 802c2be:	2320      	moveq	r3, #32
 802c2c0:	4618      	mov	r0, r3
 802c2c2:	4770      	bx	lr
 802c2c4:	2300      	movs	r3, #0
 802c2c6:	e7e4      	b.n	802c292 <__hi0bits+0xa>

0802c2c8 <__lo0bits>:
 802c2c8:	6803      	ldr	r3, [r0, #0]
 802c2ca:	f013 0207 	ands.w	r2, r3, #7
 802c2ce:	4601      	mov	r1, r0
 802c2d0:	d00b      	beq.n	802c2ea <__lo0bits+0x22>
 802c2d2:	07da      	lsls	r2, r3, #31
 802c2d4:	d423      	bmi.n	802c31e <__lo0bits+0x56>
 802c2d6:	0798      	lsls	r0, r3, #30
 802c2d8:	bf49      	itett	mi
 802c2da:	085b      	lsrmi	r3, r3, #1
 802c2dc:	089b      	lsrpl	r3, r3, #2
 802c2de:	2001      	movmi	r0, #1
 802c2e0:	600b      	strmi	r3, [r1, #0]
 802c2e2:	bf5c      	itt	pl
 802c2e4:	600b      	strpl	r3, [r1, #0]
 802c2e6:	2002      	movpl	r0, #2
 802c2e8:	4770      	bx	lr
 802c2ea:	b298      	uxth	r0, r3
 802c2ec:	b9a8      	cbnz	r0, 802c31a <__lo0bits+0x52>
 802c2ee:	0c1b      	lsrs	r3, r3, #16
 802c2f0:	2010      	movs	r0, #16
 802c2f2:	b2da      	uxtb	r2, r3
 802c2f4:	b90a      	cbnz	r2, 802c2fa <__lo0bits+0x32>
 802c2f6:	3008      	adds	r0, #8
 802c2f8:	0a1b      	lsrs	r3, r3, #8
 802c2fa:	071a      	lsls	r2, r3, #28
 802c2fc:	bf04      	itt	eq
 802c2fe:	091b      	lsreq	r3, r3, #4
 802c300:	3004      	addeq	r0, #4
 802c302:	079a      	lsls	r2, r3, #30
 802c304:	bf04      	itt	eq
 802c306:	089b      	lsreq	r3, r3, #2
 802c308:	3002      	addeq	r0, #2
 802c30a:	07da      	lsls	r2, r3, #31
 802c30c:	d403      	bmi.n	802c316 <__lo0bits+0x4e>
 802c30e:	085b      	lsrs	r3, r3, #1
 802c310:	f100 0001 	add.w	r0, r0, #1
 802c314:	d005      	beq.n	802c322 <__lo0bits+0x5a>
 802c316:	600b      	str	r3, [r1, #0]
 802c318:	4770      	bx	lr
 802c31a:	4610      	mov	r0, r2
 802c31c:	e7e9      	b.n	802c2f2 <__lo0bits+0x2a>
 802c31e:	2000      	movs	r0, #0
 802c320:	4770      	bx	lr
 802c322:	2020      	movs	r0, #32
 802c324:	4770      	bx	lr
	...

0802c328 <__i2b>:
 802c328:	b510      	push	{r4, lr}
 802c32a:	460c      	mov	r4, r1
 802c32c:	2101      	movs	r1, #1
 802c32e:	f7ff feb9 	bl	802c0a4 <_Balloc>
 802c332:	4602      	mov	r2, r0
 802c334:	b928      	cbnz	r0, 802c342 <__i2b+0x1a>
 802c336:	4b05      	ldr	r3, [pc, #20]	; (802c34c <__i2b+0x24>)
 802c338:	4805      	ldr	r0, [pc, #20]	; (802c350 <__i2b+0x28>)
 802c33a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 802c33e:	f7fe fa9d 	bl	802a87c <__assert_func>
 802c342:	2301      	movs	r3, #1
 802c344:	6144      	str	r4, [r0, #20]
 802c346:	6103      	str	r3, [r0, #16]
 802c348:	bd10      	pop	{r4, pc}
 802c34a:	bf00      	nop
 802c34c:	08032d22 	.word	0x08032d22
 802c350:	08032da4 	.word	0x08032da4

0802c354 <__multiply>:
 802c354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c358:	4691      	mov	r9, r2
 802c35a:	690a      	ldr	r2, [r1, #16]
 802c35c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 802c360:	429a      	cmp	r2, r3
 802c362:	bfb8      	it	lt
 802c364:	460b      	movlt	r3, r1
 802c366:	460c      	mov	r4, r1
 802c368:	bfbc      	itt	lt
 802c36a:	464c      	movlt	r4, r9
 802c36c:	4699      	movlt	r9, r3
 802c36e:	6927      	ldr	r7, [r4, #16]
 802c370:	f8d9 a010 	ldr.w	sl, [r9, #16]
 802c374:	68a3      	ldr	r3, [r4, #8]
 802c376:	6861      	ldr	r1, [r4, #4]
 802c378:	eb07 060a 	add.w	r6, r7, sl
 802c37c:	42b3      	cmp	r3, r6
 802c37e:	b085      	sub	sp, #20
 802c380:	bfb8      	it	lt
 802c382:	3101      	addlt	r1, #1
 802c384:	f7ff fe8e 	bl	802c0a4 <_Balloc>
 802c388:	b930      	cbnz	r0, 802c398 <__multiply+0x44>
 802c38a:	4602      	mov	r2, r0
 802c38c:	4b44      	ldr	r3, [pc, #272]	; (802c4a0 <__multiply+0x14c>)
 802c38e:	4845      	ldr	r0, [pc, #276]	; (802c4a4 <__multiply+0x150>)
 802c390:	f240 115d 	movw	r1, #349	; 0x15d
 802c394:	f7fe fa72 	bl	802a87c <__assert_func>
 802c398:	f100 0514 	add.w	r5, r0, #20
 802c39c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 802c3a0:	462b      	mov	r3, r5
 802c3a2:	2200      	movs	r2, #0
 802c3a4:	4543      	cmp	r3, r8
 802c3a6:	d321      	bcc.n	802c3ec <__multiply+0x98>
 802c3a8:	f104 0314 	add.w	r3, r4, #20
 802c3ac:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802c3b0:	f109 0314 	add.w	r3, r9, #20
 802c3b4:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 802c3b8:	9202      	str	r2, [sp, #8]
 802c3ba:	1b3a      	subs	r2, r7, r4
 802c3bc:	3a15      	subs	r2, #21
 802c3be:	f022 0203 	bic.w	r2, r2, #3
 802c3c2:	3204      	adds	r2, #4
 802c3c4:	f104 0115 	add.w	r1, r4, #21
 802c3c8:	428f      	cmp	r7, r1
 802c3ca:	bf38      	it	cc
 802c3cc:	2204      	movcc	r2, #4
 802c3ce:	9201      	str	r2, [sp, #4]
 802c3d0:	9a02      	ldr	r2, [sp, #8]
 802c3d2:	9303      	str	r3, [sp, #12]
 802c3d4:	429a      	cmp	r2, r3
 802c3d6:	d80c      	bhi.n	802c3f2 <__multiply+0x9e>
 802c3d8:	2e00      	cmp	r6, #0
 802c3da:	dd03      	ble.n	802c3e4 <__multiply+0x90>
 802c3dc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 802c3e0:	2b00      	cmp	r3, #0
 802c3e2:	d05a      	beq.n	802c49a <__multiply+0x146>
 802c3e4:	6106      	str	r6, [r0, #16]
 802c3e6:	b005      	add	sp, #20
 802c3e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c3ec:	f843 2b04 	str.w	r2, [r3], #4
 802c3f0:	e7d8      	b.n	802c3a4 <__multiply+0x50>
 802c3f2:	f8b3 a000 	ldrh.w	sl, [r3]
 802c3f6:	f1ba 0f00 	cmp.w	sl, #0
 802c3fa:	d024      	beq.n	802c446 <__multiply+0xf2>
 802c3fc:	f104 0e14 	add.w	lr, r4, #20
 802c400:	46a9      	mov	r9, r5
 802c402:	f04f 0c00 	mov.w	ip, #0
 802c406:	f85e 2b04 	ldr.w	r2, [lr], #4
 802c40a:	f8d9 1000 	ldr.w	r1, [r9]
 802c40e:	fa1f fb82 	uxth.w	fp, r2
 802c412:	b289      	uxth	r1, r1
 802c414:	fb0a 110b 	mla	r1, sl, fp, r1
 802c418:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 802c41c:	f8d9 2000 	ldr.w	r2, [r9]
 802c420:	4461      	add	r1, ip
 802c422:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 802c426:	fb0a c20b 	mla	r2, sl, fp, ip
 802c42a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 802c42e:	b289      	uxth	r1, r1
 802c430:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 802c434:	4577      	cmp	r7, lr
 802c436:	f849 1b04 	str.w	r1, [r9], #4
 802c43a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 802c43e:	d8e2      	bhi.n	802c406 <__multiply+0xb2>
 802c440:	9a01      	ldr	r2, [sp, #4]
 802c442:	f845 c002 	str.w	ip, [r5, r2]
 802c446:	9a03      	ldr	r2, [sp, #12]
 802c448:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 802c44c:	3304      	adds	r3, #4
 802c44e:	f1b9 0f00 	cmp.w	r9, #0
 802c452:	d020      	beq.n	802c496 <__multiply+0x142>
 802c454:	6829      	ldr	r1, [r5, #0]
 802c456:	f104 0c14 	add.w	ip, r4, #20
 802c45a:	46ae      	mov	lr, r5
 802c45c:	f04f 0a00 	mov.w	sl, #0
 802c460:	f8bc b000 	ldrh.w	fp, [ip]
 802c464:	f8be 2002 	ldrh.w	r2, [lr, #2]
 802c468:	fb09 220b 	mla	r2, r9, fp, r2
 802c46c:	4492      	add	sl, r2
 802c46e:	b289      	uxth	r1, r1
 802c470:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 802c474:	f84e 1b04 	str.w	r1, [lr], #4
 802c478:	f85c 2b04 	ldr.w	r2, [ip], #4
 802c47c:	f8be 1000 	ldrh.w	r1, [lr]
 802c480:	0c12      	lsrs	r2, r2, #16
 802c482:	fb09 1102 	mla	r1, r9, r2, r1
 802c486:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 802c48a:	4567      	cmp	r7, ip
 802c48c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 802c490:	d8e6      	bhi.n	802c460 <__multiply+0x10c>
 802c492:	9a01      	ldr	r2, [sp, #4]
 802c494:	50a9      	str	r1, [r5, r2]
 802c496:	3504      	adds	r5, #4
 802c498:	e79a      	b.n	802c3d0 <__multiply+0x7c>
 802c49a:	3e01      	subs	r6, #1
 802c49c:	e79c      	b.n	802c3d8 <__multiply+0x84>
 802c49e:	bf00      	nop
 802c4a0:	08032d22 	.word	0x08032d22
 802c4a4:	08032da4 	.word	0x08032da4

0802c4a8 <__pow5mult>:
 802c4a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802c4ac:	4615      	mov	r5, r2
 802c4ae:	f012 0203 	ands.w	r2, r2, #3
 802c4b2:	4606      	mov	r6, r0
 802c4b4:	460f      	mov	r7, r1
 802c4b6:	d007      	beq.n	802c4c8 <__pow5mult+0x20>
 802c4b8:	4c25      	ldr	r4, [pc, #148]	; (802c550 <__pow5mult+0xa8>)
 802c4ba:	3a01      	subs	r2, #1
 802c4bc:	2300      	movs	r3, #0
 802c4be:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 802c4c2:	f7ff fe51 	bl	802c168 <__multadd>
 802c4c6:	4607      	mov	r7, r0
 802c4c8:	10ad      	asrs	r5, r5, #2
 802c4ca:	d03d      	beq.n	802c548 <__pow5mult+0xa0>
 802c4cc:	6a74      	ldr	r4, [r6, #36]	; 0x24
 802c4ce:	b97c      	cbnz	r4, 802c4f0 <__pow5mult+0x48>
 802c4d0:	2010      	movs	r0, #16
 802c4d2:	f7f9 fcbb 	bl	8025e4c <malloc>
 802c4d6:	4602      	mov	r2, r0
 802c4d8:	6270      	str	r0, [r6, #36]	; 0x24
 802c4da:	b928      	cbnz	r0, 802c4e8 <__pow5mult+0x40>
 802c4dc:	4b1d      	ldr	r3, [pc, #116]	; (802c554 <__pow5mult+0xac>)
 802c4de:	481e      	ldr	r0, [pc, #120]	; (802c558 <__pow5mult+0xb0>)
 802c4e0:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 802c4e4:	f7fe f9ca 	bl	802a87c <__assert_func>
 802c4e8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 802c4ec:	6004      	str	r4, [r0, #0]
 802c4ee:	60c4      	str	r4, [r0, #12]
 802c4f0:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 802c4f4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 802c4f8:	b94c      	cbnz	r4, 802c50e <__pow5mult+0x66>
 802c4fa:	f240 2171 	movw	r1, #625	; 0x271
 802c4fe:	4630      	mov	r0, r6
 802c500:	f7ff ff12 	bl	802c328 <__i2b>
 802c504:	2300      	movs	r3, #0
 802c506:	f8c8 0008 	str.w	r0, [r8, #8]
 802c50a:	4604      	mov	r4, r0
 802c50c:	6003      	str	r3, [r0, #0]
 802c50e:	f04f 0900 	mov.w	r9, #0
 802c512:	07eb      	lsls	r3, r5, #31
 802c514:	d50a      	bpl.n	802c52c <__pow5mult+0x84>
 802c516:	4639      	mov	r1, r7
 802c518:	4622      	mov	r2, r4
 802c51a:	4630      	mov	r0, r6
 802c51c:	f7ff ff1a 	bl	802c354 <__multiply>
 802c520:	4639      	mov	r1, r7
 802c522:	4680      	mov	r8, r0
 802c524:	4630      	mov	r0, r6
 802c526:	f7ff fdfd 	bl	802c124 <_Bfree>
 802c52a:	4647      	mov	r7, r8
 802c52c:	106d      	asrs	r5, r5, #1
 802c52e:	d00b      	beq.n	802c548 <__pow5mult+0xa0>
 802c530:	6820      	ldr	r0, [r4, #0]
 802c532:	b938      	cbnz	r0, 802c544 <__pow5mult+0x9c>
 802c534:	4622      	mov	r2, r4
 802c536:	4621      	mov	r1, r4
 802c538:	4630      	mov	r0, r6
 802c53a:	f7ff ff0b 	bl	802c354 <__multiply>
 802c53e:	6020      	str	r0, [r4, #0]
 802c540:	f8c0 9000 	str.w	r9, [r0]
 802c544:	4604      	mov	r4, r0
 802c546:	e7e4      	b.n	802c512 <__pow5mult+0x6a>
 802c548:	4638      	mov	r0, r7
 802c54a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802c54e:	bf00      	nop
 802c550:	08032ef0 	.word	0x08032ef0
 802c554:	08031fa4 	.word	0x08031fa4
 802c558:	08032da4 	.word	0x08032da4

0802c55c <__lshift>:
 802c55c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802c560:	460c      	mov	r4, r1
 802c562:	6849      	ldr	r1, [r1, #4]
 802c564:	6923      	ldr	r3, [r4, #16]
 802c566:	eb03 1862 	add.w	r8, r3, r2, asr #5
 802c56a:	68a3      	ldr	r3, [r4, #8]
 802c56c:	4607      	mov	r7, r0
 802c56e:	4691      	mov	r9, r2
 802c570:	ea4f 1a62 	mov.w	sl, r2, asr #5
 802c574:	f108 0601 	add.w	r6, r8, #1
 802c578:	42b3      	cmp	r3, r6
 802c57a:	db0b      	blt.n	802c594 <__lshift+0x38>
 802c57c:	4638      	mov	r0, r7
 802c57e:	f7ff fd91 	bl	802c0a4 <_Balloc>
 802c582:	4605      	mov	r5, r0
 802c584:	b948      	cbnz	r0, 802c59a <__lshift+0x3e>
 802c586:	4602      	mov	r2, r0
 802c588:	4b2a      	ldr	r3, [pc, #168]	; (802c634 <__lshift+0xd8>)
 802c58a:	482b      	ldr	r0, [pc, #172]	; (802c638 <__lshift+0xdc>)
 802c58c:	f240 11d9 	movw	r1, #473	; 0x1d9
 802c590:	f7fe f974 	bl	802a87c <__assert_func>
 802c594:	3101      	adds	r1, #1
 802c596:	005b      	lsls	r3, r3, #1
 802c598:	e7ee      	b.n	802c578 <__lshift+0x1c>
 802c59a:	2300      	movs	r3, #0
 802c59c:	f100 0114 	add.w	r1, r0, #20
 802c5a0:	f100 0210 	add.w	r2, r0, #16
 802c5a4:	4618      	mov	r0, r3
 802c5a6:	4553      	cmp	r3, sl
 802c5a8:	db37      	blt.n	802c61a <__lshift+0xbe>
 802c5aa:	6920      	ldr	r0, [r4, #16]
 802c5ac:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 802c5b0:	f104 0314 	add.w	r3, r4, #20
 802c5b4:	f019 091f 	ands.w	r9, r9, #31
 802c5b8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802c5bc:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 802c5c0:	d02f      	beq.n	802c622 <__lshift+0xc6>
 802c5c2:	f1c9 0e20 	rsb	lr, r9, #32
 802c5c6:	468a      	mov	sl, r1
 802c5c8:	f04f 0c00 	mov.w	ip, #0
 802c5cc:	681a      	ldr	r2, [r3, #0]
 802c5ce:	fa02 f209 	lsl.w	r2, r2, r9
 802c5d2:	ea42 020c 	orr.w	r2, r2, ip
 802c5d6:	f84a 2b04 	str.w	r2, [sl], #4
 802c5da:	f853 2b04 	ldr.w	r2, [r3], #4
 802c5de:	4298      	cmp	r0, r3
 802c5e0:	fa22 fc0e 	lsr.w	ip, r2, lr
 802c5e4:	d8f2      	bhi.n	802c5cc <__lshift+0x70>
 802c5e6:	1b03      	subs	r3, r0, r4
 802c5e8:	3b15      	subs	r3, #21
 802c5ea:	f023 0303 	bic.w	r3, r3, #3
 802c5ee:	3304      	adds	r3, #4
 802c5f0:	f104 0215 	add.w	r2, r4, #21
 802c5f4:	4290      	cmp	r0, r2
 802c5f6:	bf38      	it	cc
 802c5f8:	2304      	movcc	r3, #4
 802c5fa:	f841 c003 	str.w	ip, [r1, r3]
 802c5fe:	f1bc 0f00 	cmp.w	ip, #0
 802c602:	d001      	beq.n	802c608 <__lshift+0xac>
 802c604:	f108 0602 	add.w	r6, r8, #2
 802c608:	3e01      	subs	r6, #1
 802c60a:	4638      	mov	r0, r7
 802c60c:	612e      	str	r6, [r5, #16]
 802c60e:	4621      	mov	r1, r4
 802c610:	f7ff fd88 	bl	802c124 <_Bfree>
 802c614:	4628      	mov	r0, r5
 802c616:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c61a:	f842 0f04 	str.w	r0, [r2, #4]!
 802c61e:	3301      	adds	r3, #1
 802c620:	e7c1      	b.n	802c5a6 <__lshift+0x4a>
 802c622:	3904      	subs	r1, #4
 802c624:	f853 2b04 	ldr.w	r2, [r3], #4
 802c628:	f841 2f04 	str.w	r2, [r1, #4]!
 802c62c:	4298      	cmp	r0, r3
 802c62e:	d8f9      	bhi.n	802c624 <__lshift+0xc8>
 802c630:	e7ea      	b.n	802c608 <__lshift+0xac>
 802c632:	bf00      	nop
 802c634:	08032d22 	.word	0x08032d22
 802c638:	08032da4 	.word	0x08032da4

0802c63c <__mcmp>:
 802c63c:	b530      	push	{r4, r5, lr}
 802c63e:	6902      	ldr	r2, [r0, #16]
 802c640:	690c      	ldr	r4, [r1, #16]
 802c642:	1b12      	subs	r2, r2, r4
 802c644:	d10e      	bne.n	802c664 <__mcmp+0x28>
 802c646:	f100 0314 	add.w	r3, r0, #20
 802c64a:	3114      	adds	r1, #20
 802c64c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 802c650:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 802c654:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 802c658:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 802c65c:	42a5      	cmp	r5, r4
 802c65e:	d003      	beq.n	802c668 <__mcmp+0x2c>
 802c660:	d305      	bcc.n	802c66e <__mcmp+0x32>
 802c662:	2201      	movs	r2, #1
 802c664:	4610      	mov	r0, r2
 802c666:	bd30      	pop	{r4, r5, pc}
 802c668:	4283      	cmp	r3, r0
 802c66a:	d3f3      	bcc.n	802c654 <__mcmp+0x18>
 802c66c:	e7fa      	b.n	802c664 <__mcmp+0x28>
 802c66e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 802c672:	e7f7      	b.n	802c664 <__mcmp+0x28>

0802c674 <__mdiff>:
 802c674:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c678:	460c      	mov	r4, r1
 802c67a:	4606      	mov	r6, r0
 802c67c:	4611      	mov	r1, r2
 802c67e:	4620      	mov	r0, r4
 802c680:	4690      	mov	r8, r2
 802c682:	f7ff ffdb 	bl	802c63c <__mcmp>
 802c686:	1e05      	subs	r5, r0, #0
 802c688:	d110      	bne.n	802c6ac <__mdiff+0x38>
 802c68a:	4629      	mov	r1, r5
 802c68c:	4630      	mov	r0, r6
 802c68e:	f7ff fd09 	bl	802c0a4 <_Balloc>
 802c692:	b930      	cbnz	r0, 802c6a2 <__mdiff+0x2e>
 802c694:	4b3a      	ldr	r3, [pc, #232]	; (802c780 <__mdiff+0x10c>)
 802c696:	4602      	mov	r2, r0
 802c698:	f240 2132 	movw	r1, #562	; 0x232
 802c69c:	4839      	ldr	r0, [pc, #228]	; (802c784 <__mdiff+0x110>)
 802c69e:	f7fe f8ed 	bl	802a87c <__assert_func>
 802c6a2:	2301      	movs	r3, #1
 802c6a4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 802c6a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c6ac:	bfa4      	itt	ge
 802c6ae:	4643      	movge	r3, r8
 802c6b0:	46a0      	movge	r8, r4
 802c6b2:	4630      	mov	r0, r6
 802c6b4:	f8d8 1004 	ldr.w	r1, [r8, #4]
 802c6b8:	bfa6      	itte	ge
 802c6ba:	461c      	movge	r4, r3
 802c6bc:	2500      	movge	r5, #0
 802c6be:	2501      	movlt	r5, #1
 802c6c0:	f7ff fcf0 	bl	802c0a4 <_Balloc>
 802c6c4:	b920      	cbnz	r0, 802c6d0 <__mdiff+0x5c>
 802c6c6:	4b2e      	ldr	r3, [pc, #184]	; (802c780 <__mdiff+0x10c>)
 802c6c8:	4602      	mov	r2, r0
 802c6ca:	f44f 7110 	mov.w	r1, #576	; 0x240
 802c6ce:	e7e5      	b.n	802c69c <__mdiff+0x28>
 802c6d0:	f8d8 7010 	ldr.w	r7, [r8, #16]
 802c6d4:	6926      	ldr	r6, [r4, #16]
 802c6d6:	60c5      	str	r5, [r0, #12]
 802c6d8:	f104 0914 	add.w	r9, r4, #20
 802c6dc:	f108 0514 	add.w	r5, r8, #20
 802c6e0:	f100 0e14 	add.w	lr, r0, #20
 802c6e4:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 802c6e8:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 802c6ec:	f108 0210 	add.w	r2, r8, #16
 802c6f0:	46f2      	mov	sl, lr
 802c6f2:	2100      	movs	r1, #0
 802c6f4:	f859 3b04 	ldr.w	r3, [r9], #4
 802c6f8:	f852 bf04 	ldr.w	fp, [r2, #4]!
 802c6fc:	fa1f f883 	uxth.w	r8, r3
 802c700:	fa11 f18b 	uxtah	r1, r1, fp
 802c704:	0c1b      	lsrs	r3, r3, #16
 802c706:	eba1 0808 	sub.w	r8, r1, r8
 802c70a:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 802c70e:	eb03 4328 	add.w	r3, r3, r8, asr #16
 802c712:	fa1f f888 	uxth.w	r8, r8
 802c716:	1419      	asrs	r1, r3, #16
 802c718:	454e      	cmp	r6, r9
 802c71a:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 802c71e:	f84a 3b04 	str.w	r3, [sl], #4
 802c722:	d8e7      	bhi.n	802c6f4 <__mdiff+0x80>
 802c724:	1b33      	subs	r3, r6, r4
 802c726:	3b15      	subs	r3, #21
 802c728:	f023 0303 	bic.w	r3, r3, #3
 802c72c:	3304      	adds	r3, #4
 802c72e:	3415      	adds	r4, #21
 802c730:	42a6      	cmp	r6, r4
 802c732:	bf38      	it	cc
 802c734:	2304      	movcc	r3, #4
 802c736:	441d      	add	r5, r3
 802c738:	4473      	add	r3, lr
 802c73a:	469e      	mov	lr, r3
 802c73c:	462e      	mov	r6, r5
 802c73e:	4566      	cmp	r6, ip
 802c740:	d30e      	bcc.n	802c760 <__mdiff+0xec>
 802c742:	f10c 0203 	add.w	r2, ip, #3
 802c746:	1b52      	subs	r2, r2, r5
 802c748:	f022 0203 	bic.w	r2, r2, #3
 802c74c:	3d03      	subs	r5, #3
 802c74e:	45ac      	cmp	ip, r5
 802c750:	bf38      	it	cc
 802c752:	2200      	movcc	r2, #0
 802c754:	441a      	add	r2, r3
 802c756:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 802c75a:	b17b      	cbz	r3, 802c77c <__mdiff+0x108>
 802c75c:	6107      	str	r7, [r0, #16]
 802c75e:	e7a3      	b.n	802c6a8 <__mdiff+0x34>
 802c760:	f856 8b04 	ldr.w	r8, [r6], #4
 802c764:	fa11 f288 	uxtah	r2, r1, r8
 802c768:	1414      	asrs	r4, r2, #16
 802c76a:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 802c76e:	b292      	uxth	r2, r2
 802c770:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 802c774:	f84e 2b04 	str.w	r2, [lr], #4
 802c778:	1421      	asrs	r1, r4, #16
 802c77a:	e7e0      	b.n	802c73e <__mdiff+0xca>
 802c77c:	3f01      	subs	r7, #1
 802c77e:	e7ea      	b.n	802c756 <__mdiff+0xe2>
 802c780:	08032d22 	.word	0x08032d22
 802c784:	08032da4 	.word	0x08032da4

0802c788 <__ulp>:
 802c788:	b082      	sub	sp, #8
 802c78a:	ed8d 0b00 	vstr	d0, [sp]
 802c78e:	9b01      	ldr	r3, [sp, #4]
 802c790:	4912      	ldr	r1, [pc, #72]	; (802c7dc <__ulp+0x54>)
 802c792:	4019      	ands	r1, r3
 802c794:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 802c798:	2900      	cmp	r1, #0
 802c79a:	dd05      	ble.n	802c7a8 <__ulp+0x20>
 802c79c:	2200      	movs	r2, #0
 802c79e:	460b      	mov	r3, r1
 802c7a0:	ec43 2b10 	vmov	d0, r2, r3
 802c7a4:	b002      	add	sp, #8
 802c7a6:	4770      	bx	lr
 802c7a8:	4249      	negs	r1, r1
 802c7aa:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 802c7ae:	ea4f 5021 	mov.w	r0, r1, asr #20
 802c7b2:	f04f 0200 	mov.w	r2, #0
 802c7b6:	f04f 0300 	mov.w	r3, #0
 802c7ba:	da04      	bge.n	802c7c6 <__ulp+0x3e>
 802c7bc:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 802c7c0:	fa41 f300 	asr.w	r3, r1, r0
 802c7c4:	e7ec      	b.n	802c7a0 <__ulp+0x18>
 802c7c6:	f1a0 0114 	sub.w	r1, r0, #20
 802c7ca:	291e      	cmp	r1, #30
 802c7cc:	bfda      	itte	le
 802c7ce:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 802c7d2:	fa20 f101 	lsrle.w	r1, r0, r1
 802c7d6:	2101      	movgt	r1, #1
 802c7d8:	460a      	mov	r2, r1
 802c7da:	e7e1      	b.n	802c7a0 <__ulp+0x18>
 802c7dc:	7ff00000 	.word	0x7ff00000

0802c7e0 <__b2d>:
 802c7e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c7e2:	6905      	ldr	r5, [r0, #16]
 802c7e4:	f100 0714 	add.w	r7, r0, #20
 802c7e8:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 802c7ec:	1f2e      	subs	r6, r5, #4
 802c7ee:	f855 4c04 	ldr.w	r4, [r5, #-4]
 802c7f2:	4620      	mov	r0, r4
 802c7f4:	f7ff fd48 	bl	802c288 <__hi0bits>
 802c7f8:	f1c0 0320 	rsb	r3, r0, #32
 802c7fc:	280a      	cmp	r0, #10
 802c7fe:	f8df c07c 	ldr.w	ip, [pc, #124]	; 802c87c <__b2d+0x9c>
 802c802:	600b      	str	r3, [r1, #0]
 802c804:	dc14      	bgt.n	802c830 <__b2d+0x50>
 802c806:	f1c0 0e0b 	rsb	lr, r0, #11
 802c80a:	fa24 f10e 	lsr.w	r1, r4, lr
 802c80e:	42b7      	cmp	r7, r6
 802c810:	ea41 030c 	orr.w	r3, r1, ip
 802c814:	bf34      	ite	cc
 802c816:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 802c81a:	2100      	movcs	r1, #0
 802c81c:	3015      	adds	r0, #21
 802c81e:	fa04 f000 	lsl.w	r0, r4, r0
 802c822:	fa21 f10e 	lsr.w	r1, r1, lr
 802c826:	ea40 0201 	orr.w	r2, r0, r1
 802c82a:	ec43 2b10 	vmov	d0, r2, r3
 802c82e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c830:	42b7      	cmp	r7, r6
 802c832:	bf3a      	itte	cc
 802c834:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 802c838:	f1a5 0608 	subcc.w	r6, r5, #8
 802c83c:	2100      	movcs	r1, #0
 802c83e:	380b      	subs	r0, #11
 802c840:	d017      	beq.n	802c872 <__b2d+0x92>
 802c842:	f1c0 0c20 	rsb	ip, r0, #32
 802c846:	fa04 f500 	lsl.w	r5, r4, r0
 802c84a:	42be      	cmp	r6, r7
 802c84c:	fa21 f40c 	lsr.w	r4, r1, ip
 802c850:	ea45 0504 	orr.w	r5, r5, r4
 802c854:	bf8c      	ite	hi
 802c856:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 802c85a:	2400      	movls	r4, #0
 802c85c:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 802c860:	fa01 f000 	lsl.w	r0, r1, r0
 802c864:	fa24 f40c 	lsr.w	r4, r4, ip
 802c868:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 802c86c:	ea40 0204 	orr.w	r2, r0, r4
 802c870:	e7db      	b.n	802c82a <__b2d+0x4a>
 802c872:	ea44 030c 	orr.w	r3, r4, ip
 802c876:	460a      	mov	r2, r1
 802c878:	e7d7      	b.n	802c82a <__b2d+0x4a>
 802c87a:	bf00      	nop
 802c87c:	3ff00000 	.word	0x3ff00000

0802c880 <__d2b>:
 802c880:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 802c884:	4689      	mov	r9, r1
 802c886:	2101      	movs	r1, #1
 802c888:	ec57 6b10 	vmov	r6, r7, d0
 802c88c:	4690      	mov	r8, r2
 802c88e:	f7ff fc09 	bl	802c0a4 <_Balloc>
 802c892:	4604      	mov	r4, r0
 802c894:	b930      	cbnz	r0, 802c8a4 <__d2b+0x24>
 802c896:	4602      	mov	r2, r0
 802c898:	4b25      	ldr	r3, [pc, #148]	; (802c930 <__d2b+0xb0>)
 802c89a:	4826      	ldr	r0, [pc, #152]	; (802c934 <__d2b+0xb4>)
 802c89c:	f240 310a 	movw	r1, #778	; 0x30a
 802c8a0:	f7fd ffec 	bl	802a87c <__assert_func>
 802c8a4:	f3c7 550a 	ubfx	r5, r7, #20, #11
 802c8a8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 802c8ac:	bb35      	cbnz	r5, 802c8fc <__d2b+0x7c>
 802c8ae:	2e00      	cmp	r6, #0
 802c8b0:	9301      	str	r3, [sp, #4]
 802c8b2:	d028      	beq.n	802c906 <__d2b+0x86>
 802c8b4:	4668      	mov	r0, sp
 802c8b6:	9600      	str	r6, [sp, #0]
 802c8b8:	f7ff fd06 	bl	802c2c8 <__lo0bits>
 802c8bc:	9900      	ldr	r1, [sp, #0]
 802c8be:	b300      	cbz	r0, 802c902 <__d2b+0x82>
 802c8c0:	9a01      	ldr	r2, [sp, #4]
 802c8c2:	f1c0 0320 	rsb	r3, r0, #32
 802c8c6:	fa02 f303 	lsl.w	r3, r2, r3
 802c8ca:	430b      	orrs	r3, r1
 802c8cc:	40c2      	lsrs	r2, r0
 802c8ce:	6163      	str	r3, [r4, #20]
 802c8d0:	9201      	str	r2, [sp, #4]
 802c8d2:	9b01      	ldr	r3, [sp, #4]
 802c8d4:	61a3      	str	r3, [r4, #24]
 802c8d6:	2b00      	cmp	r3, #0
 802c8d8:	bf14      	ite	ne
 802c8da:	2202      	movne	r2, #2
 802c8dc:	2201      	moveq	r2, #1
 802c8de:	6122      	str	r2, [r4, #16]
 802c8e0:	b1d5      	cbz	r5, 802c918 <__d2b+0x98>
 802c8e2:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 802c8e6:	4405      	add	r5, r0
 802c8e8:	f8c9 5000 	str.w	r5, [r9]
 802c8ec:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 802c8f0:	f8c8 0000 	str.w	r0, [r8]
 802c8f4:	4620      	mov	r0, r4
 802c8f6:	b003      	add	sp, #12
 802c8f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802c8fc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 802c900:	e7d5      	b.n	802c8ae <__d2b+0x2e>
 802c902:	6161      	str	r1, [r4, #20]
 802c904:	e7e5      	b.n	802c8d2 <__d2b+0x52>
 802c906:	a801      	add	r0, sp, #4
 802c908:	f7ff fcde 	bl	802c2c8 <__lo0bits>
 802c90c:	9b01      	ldr	r3, [sp, #4]
 802c90e:	6163      	str	r3, [r4, #20]
 802c910:	2201      	movs	r2, #1
 802c912:	6122      	str	r2, [r4, #16]
 802c914:	3020      	adds	r0, #32
 802c916:	e7e3      	b.n	802c8e0 <__d2b+0x60>
 802c918:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 802c91c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 802c920:	f8c9 0000 	str.w	r0, [r9]
 802c924:	6918      	ldr	r0, [r3, #16]
 802c926:	f7ff fcaf 	bl	802c288 <__hi0bits>
 802c92a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 802c92e:	e7df      	b.n	802c8f0 <__d2b+0x70>
 802c930:	08032d22 	.word	0x08032d22
 802c934:	08032da4 	.word	0x08032da4

0802c938 <__ratio>:
 802c938:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c93c:	4688      	mov	r8, r1
 802c93e:	4669      	mov	r1, sp
 802c940:	4681      	mov	r9, r0
 802c942:	f7ff ff4d 	bl	802c7e0 <__b2d>
 802c946:	a901      	add	r1, sp, #4
 802c948:	4640      	mov	r0, r8
 802c94a:	ec55 4b10 	vmov	r4, r5, d0
 802c94e:	f7ff ff47 	bl	802c7e0 <__b2d>
 802c952:	f8d9 3010 	ldr.w	r3, [r9, #16]
 802c956:	f8d8 2010 	ldr.w	r2, [r8, #16]
 802c95a:	eba3 0c02 	sub.w	ip, r3, r2
 802c95e:	e9dd 3200 	ldrd	r3, r2, [sp]
 802c962:	1a9b      	subs	r3, r3, r2
 802c964:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 802c968:	ec51 0b10 	vmov	r0, r1, d0
 802c96c:	2b00      	cmp	r3, #0
 802c96e:	bfd6      	itet	le
 802c970:	460a      	movle	r2, r1
 802c972:	462a      	movgt	r2, r5
 802c974:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 802c978:	468b      	mov	fp, r1
 802c97a:	462f      	mov	r7, r5
 802c97c:	bfd4      	ite	le
 802c97e:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 802c982:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 802c986:	4620      	mov	r0, r4
 802c988:	ee10 2a10 	vmov	r2, s0
 802c98c:	465b      	mov	r3, fp
 802c98e:	4639      	mov	r1, r7
 802c990:	f7d3 ff66 	bl	8000860 <__aeabi_ddiv>
 802c994:	ec41 0b10 	vmov	d0, r0, r1
 802c998:	b003      	add	sp, #12
 802c99a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802c99e <__copybits>:
 802c99e:	3901      	subs	r1, #1
 802c9a0:	b570      	push	{r4, r5, r6, lr}
 802c9a2:	1149      	asrs	r1, r1, #5
 802c9a4:	6914      	ldr	r4, [r2, #16]
 802c9a6:	3101      	adds	r1, #1
 802c9a8:	f102 0314 	add.w	r3, r2, #20
 802c9ac:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 802c9b0:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 802c9b4:	1f05      	subs	r5, r0, #4
 802c9b6:	42a3      	cmp	r3, r4
 802c9b8:	d30c      	bcc.n	802c9d4 <__copybits+0x36>
 802c9ba:	1aa3      	subs	r3, r4, r2
 802c9bc:	3b11      	subs	r3, #17
 802c9be:	f023 0303 	bic.w	r3, r3, #3
 802c9c2:	3211      	adds	r2, #17
 802c9c4:	42a2      	cmp	r2, r4
 802c9c6:	bf88      	it	hi
 802c9c8:	2300      	movhi	r3, #0
 802c9ca:	4418      	add	r0, r3
 802c9cc:	2300      	movs	r3, #0
 802c9ce:	4288      	cmp	r0, r1
 802c9d0:	d305      	bcc.n	802c9de <__copybits+0x40>
 802c9d2:	bd70      	pop	{r4, r5, r6, pc}
 802c9d4:	f853 6b04 	ldr.w	r6, [r3], #4
 802c9d8:	f845 6f04 	str.w	r6, [r5, #4]!
 802c9dc:	e7eb      	b.n	802c9b6 <__copybits+0x18>
 802c9de:	f840 3b04 	str.w	r3, [r0], #4
 802c9e2:	e7f4      	b.n	802c9ce <__copybits+0x30>

0802c9e4 <__any_on>:
 802c9e4:	f100 0214 	add.w	r2, r0, #20
 802c9e8:	6900      	ldr	r0, [r0, #16]
 802c9ea:	114b      	asrs	r3, r1, #5
 802c9ec:	4298      	cmp	r0, r3
 802c9ee:	b510      	push	{r4, lr}
 802c9f0:	db11      	blt.n	802ca16 <__any_on+0x32>
 802c9f2:	dd0a      	ble.n	802ca0a <__any_on+0x26>
 802c9f4:	f011 011f 	ands.w	r1, r1, #31
 802c9f8:	d007      	beq.n	802ca0a <__any_on+0x26>
 802c9fa:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 802c9fe:	fa24 f001 	lsr.w	r0, r4, r1
 802ca02:	fa00 f101 	lsl.w	r1, r0, r1
 802ca06:	428c      	cmp	r4, r1
 802ca08:	d10b      	bne.n	802ca22 <__any_on+0x3e>
 802ca0a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802ca0e:	4293      	cmp	r3, r2
 802ca10:	d803      	bhi.n	802ca1a <__any_on+0x36>
 802ca12:	2000      	movs	r0, #0
 802ca14:	bd10      	pop	{r4, pc}
 802ca16:	4603      	mov	r3, r0
 802ca18:	e7f7      	b.n	802ca0a <__any_on+0x26>
 802ca1a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 802ca1e:	2900      	cmp	r1, #0
 802ca20:	d0f5      	beq.n	802ca0e <__any_on+0x2a>
 802ca22:	2001      	movs	r0, #1
 802ca24:	e7f6      	b.n	802ca14 <__any_on+0x30>

0802ca26 <_calloc_r>:
 802ca26:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802ca28:	fba1 2402 	umull	r2, r4, r1, r2
 802ca2c:	b94c      	cbnz	r4, 802ca42 <_calloc_r+0x1c>
 802ca2e:	4611      	mov	r1, r2
 802ca30:	9201      	str	r2, [sp, #4]
 802ca32:	f7f9 fb01 	bl	8026038 <_malloc_r>
 802ca36:	9a01      	ldr	r2, [sp, #4]
 802ca38:	4605      	mov	r5, r0
 802ca3a:	b930      	cbnz	r0, 802ca4a <_calloc_r+0x24>
 802ca3c:	4628      	mov	r0, r5
 802ca3e:	b003      	add	sp, #12
 802ca40:	bd30      	pop	{r4, r5, pc}
 802ca42:	220c      	movs	r2, #12
 802ca44:	6002      	str	r2, [r0, #0]
 802ca46:	2500      	movs	r5, #0
 802ca48:	e7f8      	b.n	802ca3c <_calloc_r+0x16>
 802ca4a:	4621      	mov	r1, r4
 802ca4c:	f7f9 fa80 	bl	8025f50 <memset>
 802ca50:	e7f4      	b.n	802ca3c <_calloc_r+0x16>

0802ca52 <_realloc_r>:
 802ca52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ca56:	4680      	mov	r8, r0
 802ca58:	4614      	mov	r4, r2
 802ca5a:	460e      	mov	r6, r1
 802ca5c:	b921      	cbnz	r1, 802ca68 <_realloc_r+0x16>
 802ca5e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802ca62:	4611      	mov	r1, r2
 802ca64:	f7f9 bae8 	b.w	8026038 <_malloc_r>
 802ca68:	b92a      	cbnz	r2, 802ca76 <_realloc_r+0x24>
 802ca6a:	f7f9 fa79 	bl	8025f60 <_free_r>
 802ca6e:	4625      	mov	r5, r4
 802ca70:	4628      	mov	r0, r5
 802ca72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ca76:	f000 ffa7 	bl	802d9c8 <_malloc_usable_size_r>
 802ca7a:	4284      	cmp	r4, r0
 802ca7c:	4607      	mov	r7, r0
 802ca7e:	d802      	bhi.n	802ca86 <_realloc_r+0x34>
 802ca80:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 802ca84:	d812      	bhi.n	802caac <_realloc_r+0x5a>
 802ca86:	4621      	mov	r1, r4
 802ca88:	4640      	mov	r0, r8
 802ca8a:	f7f9 fad5 	bl	8026038 <_malloc_r>
 802ca8e:	4605      	mov	r5, r0
 802ca90:	2800      	cmp	r0, #0
 802ca92:	d0ed      	beq.n	802ca70 <_realloc_r+0x1e>
 802ca94:	42bc      	cmp	r4, r7
 802ca96:	4622      	mov	r2, r4
 802ca98:	4631      	mov	r1, r6
 802ca9a:	bf28      	it	cs
 802ca9c:	463a      	movcs	r2, r7
 802ca9e:	f7f9 fa2f 	bl	8025f00 <memcpy>
 802caa2:	4631      	mov	r1, r6
 802caa4:	4640      	mov	r0, r8
 802caa6:	f7f9 fa5b 	bl	8025f60 <_free_r>
 802caaa:	e7e1      	b.n	802ca70 <_realloc_r+0x1e>
 802caac:	4635      	mov	r5, r6
 802caae:	e7df      	b.n	802ca70 <_realloc_r+0x1e>

0802cab0 <__ssputs_r>:
 802cab0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802cab4:	688e      	ldr	r6, [r1, #8]
 802cab6:	429e      	cmp	r6, r3
 802cab8:	4682      	mov	sl, r0
 802caba:	460c      	mov	r4, r1
 802cabc:	4690      	mov	r8, r2
 802cabe:	461f      	mov	r7, r3
 802cac0:	d838      	bhi.n	802cb34 <__ssputs_r+0x84>
 802cac2:	898a      	ldrh	r2, [r1, #12]
 802cac4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 802cac8:	d032      	beq.n	802cb30 <__ssputs_r+0x80>
 802caca:	6825      	ldr	r5, [r4, #0]
 802cacc:	6909      	ldr	r1, [r1, #16]
 802cace:	eba5 0901 	sub.w	r9, r5, r1
 802cad2:	6965      	ldr	r5, [r4, #20]
 802cad4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802cad8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 802cadc:	3301      	adds	r3, #1
 802cade:	444b      	add	r3, r9
 802cae0:	106d      	asrs	r5, r5, #1
 802cae2:	429d      	cmp	r5, r3
 802cae4:	bf38      	it	cc
 802cae6:	461d      	movcc	r5, r3
 802cae8:	0553      	lsls	r3, r2, #21
 802caea:	d531      	bpl.n	802cb50 <__ssputs_r+0xa0>
 802caec:	4629      	mov	r1, r5
 802caee:	f7f9 faa3 	bl	8026038 <_malloc_r>
 802caf2:	4606      	mov	r6, r0
 802caf4:	b950      	cbnz	r0, 802cb0c <__ssputs_r+0x5c>
 802caf6:	230c      	movs	r3, #12
 802caf8:	f8ca 3000 	str.w	r3, [sl]
 802cafc:	89a3      	ldrh	r3, [r4, #12]
 802cafe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802cb02:	81a3      	strh	r3, [r4, #12]
 802cb04:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802cb08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802cb0c:	6921      	ldr	r1, [r4, #16]
 802cb0e:	464a      	mov	r2, r9
 802cb10:	f7f9 f9f6 	bl	8025f00 <memcpy>
 802cb14:	89a3      	ldrh	r3, [r4, #12]
 802cb16:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 802cb1a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802cb1e:	81a3      	strh	r3, [r4, #12]
 802cb20:	6126      	str	r6, [r4, #16]
 802cb22:	6165      	str	r5, [r4, #20]
 802cb24:	444e      	add	r6, r9
 802cb26:	eba5 0509 	sub.w	r5, r5, r9
 802cb2a:	6026      	str	r6, [r4, #0]
 802cb2c:	60a5      	str	r5, [r4, #8]
 802cb2e:	463e      	mov	r6, r7
 802cb30:	42be      	cmp	r6, r7
 802cb32:	d900      	bls.n	802cb36 <__ssputs_r+0x86>
 802cb34:	463e      	mov	r6, r7
 802cb36:	6820      	ldr	r0, [r4, #0]
 802cb38:	4632      	mov	r2, r6
 802cb3a:	4641      	mov	r1, r8
 802cb3c:	f7f9 f9ee 	bl	8025f1c <memmove>
 802cb40:	68a3      	ldr	r3, [r4, #8]
 802cb42:	1b9b      	subs	r3, r3, r6
 802cb44:	60a3      	str	r3, [r4, #8]
 802cb46:	6823      	ldr	r3, [r4, #0]
 802cb48:	4433      	add	r3, r6
 802cb4a:	6023      	str	r3, [r4, #0]
 802cb4c:	2000      	movs	r0, #0
 802cb4e:	e7db      	b.n	802cb08 <__ssputs_r+0x58>
 802cb50:	462a      	mov	r2, r5
 802cb52:	f7ff ff7e 	bl	802ca52 <_realloc_r>
 802cb56:	4606      	mov	r6, r0
 802cb58:	2800      	cmp	r0, #0
 802cb5a:	d1e1      	bne.n	802cb20 <__ssputs_r+0x70>
 802cb5c:	6921      	ldr	r1, [r4, #16]
 802cb5e:	4650      	mov	r0, sl
 802cb60:	f7f9 f9fe 	bl	8025f60 <_free_r>
 802cb64:	e7c7      	b.n	802caf6 <__ssputs_r+0x46>
	...

0802cb68 <_svfiprintf_r>:
 802cb68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802cb6c:	4698      	mov	r8, r3
 802cb6e:	898b      	ldrh	r3, [r1, #12]
 802cb70:	061b      	lsls	r3, r3, #24
 802cb72:	b09d      	sub	sp, #116	; 0x74
 802cb74:	4607      	mov	r7, r0
 802cb76:	460d      	mov	r5, r1
 802cb78:	4614      	mov	r4, r2
 802cb7a:	d50e      	bpl.n	802cb9a <_svfiprintf_r+0x32>
 802cb7c:	690b      	ldr	r3, [r1, #16]
 802cb7e:	b963      	cbnz	r3, 802cb9a <_svfiprintf_r+0x32>
 802cb80:	2140      	movs	r1, #64	; 0x40
 802cb82:	f7f9 fa59 	bl	8026038 <_malloc_r>
 802cb86:	6028      	str	r0, [r5, #0]
 802cb88:	6128      	str	r0, [r5, #16]
 802cb8a:	b920      	cbnz	r0, 802cb96 <_svfiprintf_r+0x2e>
 802cb8c:	230c      	movs	r3, #12
 802cb8e:	603b      	str	r3, [r7, #0]
 802cb90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802cb94:	e0d1      	b.n	802cd3a <_svfiprintf_r+0x1d2>
 802cb96:	2340      	movs	r3, #64	; 0x40
 802cb98:	616b      	str	r3, [r5, #20]
 802cb9a:	2300      	movs	r3, #0
 802cb9c:	9309      	str	r3, [sp, #36]	; 0x24
 802cb9e:	2320      	movs	r3, #32
 802cba0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802cba4:	f8cd 800c 	str.w	r8, [sp, #12]
 802cba8:	2330      	movs	r3, #48	; 0x30
 802cbaa:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 802cd54 <_svfiprintf_r+0x1ec>
 802cbae:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802cbb2:	f04f 0901 	mov.w	r9, #1
 802cbb6:	4623      	mov	r3, r4
 802cbb8:	469a      	mov	sl, r3
 802cbba:	f813 2b01 	ldrb.w	r2, [r3], #1
 802cbbe:	b10a      	cbz	r2, 802cbc4 <_svfiprintf_r+0x5c>
 802cbc0:	2a25      	cmp	r2, #37	; 0x25
 802cbc2:	d1f9      	bne.n	802cbb8 <_svfiprintf_r+0x50>
 802cbc4:	ebba 0b04 	subs.w	fp, sl, r4
 802cbc8:	d00b      	beq.n	802cbe2 <_svfiprintf_r+0x7a>
 802cbca:	465b      	mov	r3, fp
 802cbcc:	4622      	mov	r2, r4
 802cbce:	4629      	mov	r1, r5
 802cbd0:	4638      	mov	r0, r7
 802cbd2:	f7ff ff6d 	bl	802cab0 <__ssputs_r>
 802cbd6:	3001      	adds	r0, #1
 802cbd8:	f000 80aa 	beq.w	802cd30 <_svfiprintf_r+0x1c8>
 802cbdc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802cbde:	445a      	add	r2, fp
 802cbe0:	9209      	str	r2, [sp, #36]	; 0x24
 802cbe2:	f89a 3000 	ldrb.w	r3, [sl]
 802cbe6:	2b00      	cmp	r3, #0
 802cbe8:	f000 80a2 	beq.w	802cd30 <_svfiprintf_r+0x1c8>
 802cbec:	2300      	movs	r3, #0
 802cbee:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 802cbf2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802cbf6:	f10a 0a01 	add.w	sl, sl, #1
 802cbfa:	9304      	str	r3, [sp, #16]
 802cbfc:	9307      	str	r3, [sp, #28]
 802cbfe:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802cc02:	931a      	str	r3, [sp, #104]	; 0x68
 802cc04:	4654      	mov	r4, sl
 802cc06:	2205      	movs	r2, #5
 802cc08:	f814 1b01 	ldrb.w	r1, [r4], #1
 802cc0c:	4851      	ldr	r0, [pc, #324]	; (802cd54 <_svfiprintf_r+0x1ec>)
 802cc0e:	f7d3 fadf 	bl	80001d0 <memchr>
 802cc12:	9a04      	ldr	r2, [sp, #16]
 802cc14:	b9d8      	cbnz	r0, 802cc4e <_svfiprintf_r+0xe6>
 802cc16:	06d0      	lsls	r0, r2, #27
 802cc18:	bf44      	itt	mi
 802cc1a:	2320      	movmi	r3, #32
 802cc1c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802cc20:	0711      	lsls	r1, r2, #28
 802cc22:	bf44      	itt	mi
 802cc24:	232b      	movmi	r3, #43	; 0x2b
 802cc26:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802cc2a:	f89a 3000 	ldrb.w	r3, [sl]
 802cc2e:	2b2a      	cmp	r3, #42	; 0x2a
 802cc30:	d015      	beq.n	802cc5e <_svfiprintf_r+0xf6>
 802cc32:	9a07      	ldr	r2, [sp, #28]
 802cc34:	4654      	mov	r4, sl
 802cc36:	2000      	movs	r0, #0
 802cc38:	f04f 0c0a 	mov.w	ip, #10
 802cc3c:	4621      	mov	r1, r4
 802cc3e:	f811 3b01 	ldrb.w	r3, [r1], #1
 802cc42:	3b30      	subs	r3, #48	; 0x30
 802cc44:	2b09      	cmp	r3, #9
 802cc46:	d94e      	bls.n	802cce6 <_svfiprintf_r+0x17e>
 802cc48:	b1b0      	cbz	r0, 802cc78 <_svfiprintf_r+0x110>
 802cc4a:	9207      	str	r2, [sp, #28]
 802cc4c:	e014      	b.n	802cc78 <_svfiprintf_r+0x110>
 802cc4e:	eba0 0308 	sub.w	r3, r0, r8
 802cc52:	fa09 f303 	lsl.w	r3, r9, r3
 802cc56:	4313      	orrs	r3, r2
 802cc58:	9304      	str	r3, [sp, #16]
 802cc5a:	46a2      	mov	sl, r4
 802cc5c:	e7d2      	b.n	802cc04 <_svfiprintf_r+0x9c>
 802cc5e:	9b03      	ldr	r3, [sp, #12]
 802cc60:	1d19      	adds	r1, r3, #4
 802cc62:	681b      	ldr	r3, [r3, #0]
 802cc64:	9103      	str	r1, [sp, #12]
 802cc66:	2b00      	cmp	r3, #0
 802cc68:	bfbb      	ittet	lt
 802cc6a:	425b      	neglt	r3, r3
 802cc6c:	f042 0202 	orrlt.w	r2, r2, #2
 802cc70:	9307      	strge	r3, [sp, #28]
 802cc72:	9307      	strlt	r3, [sp, #28]
 802cc74:	bfb8      	it	lt
 802cc76:	9204      	strlt	r2, [sp, #16]
 802cc78:	7823      	ldrb	r3, [r4, #0]
 802cc7a:	2b2e      	cmp	r3, #46	; 0x2e
 802cc7c:	d10c      	bne.n	802cc98 <_svfiprintf_r+0x130>
 802cc7e:	7863      	ldrb	r3, [r4, #1]
 802cc80:	2b2a      	cmp	r3, #42	; 0x2a
 802cc82:	d135      	bne.n	802ccf0 <_svfiprintf_r+0x188>
 802cc84:	9b03      	ldr	r3, [sp, #12]
 802cc86:	1d1a      	adds	r2, r3, #4
 802cc88:	681b      	ldr	r3, [r3, #0]
 802cc8a:	9203      	str	r2, [sp, #12]
 802cc8c:	2b00      	cmp	r3, #0
 802cc8e:	bfb8      	it	lt
 802cc90:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 802cc94:	3402      	adds	r4, #2
 802cc96:	9305      	str	r3, [sp, #20]
 802cc98:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 802cd64 <_svfiprintf_r+0x1fc>
 802cc9c:	7821      	ldrb	r1, [r4, #0]
 802cc9e:	2203      	movs	r2, #3
 802cca0:	4650      	mov	r0, sl
 802cca2:	f7d3 fa95 	bl	80001d0 <memchr>
 802cca6:	b140      	cbz	r0, 802ccba <_svfiprintf_r+0x152>
 802cca8:	2340      	movs	r3, #64	; 0x40
 802ccaa:	eba0 000a 	sub.w	r0, r0, sl
 802ccae:	fa03 f000 	lsl.w	r0, r3, r0
 802ccb2:	9b04      	ldr	r3, [sp, #16]
 802ccb4:	4303      	orrs	r3, r0
 802ccb6:	3401      	adds	r4, #1
 802ccb8:	9304      	str	r3, [sp, #16]
 802ccba:	f814 1b01 	ldrb.w	r1, [r4], #1
 802ccbe:	4826      	ldr	r0, [pc, #152]	; (802cd58 <_svfiprintf_r+0x1f0>)
 802ccc0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802ccc4:	2206      	movs	r2, #6
 802ccc6:	f7d3 fa83 	bl	80001d0 <memchr>
 802ccca:	2800      	cmp	r0, #0
 802cccc:	d038      	beq.n	802cd40 <_svfiprintf_r+0x1d8>
 802ccce:	4b23      	ldr	r3, [pc, #140]	; (802cd5c <_svfiprintf_r+0x1f4>)
 802ccd0:	bb1b      	cbnz	r3, 802cd1a <_svfiprintf_r+0x1b2>
 802ccd2:	9b03      	ldr	r3, [sp, #12]
 802ccd4:	3307      	adds	r3, #7
 802ccd6:	f023 0307 	bic.w	r3, r3, #7
 802ccda:	3308      	adds	r3, #8
 802ccdc:	9303      	str	r3, [sp, #12]
 802ccde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802cce0:	4433      	add	r3, r6
 802cce2:	9309      	str	r3, [sp, #36]	; 0x24
 802cce4:	e767      	b.n	802cbb6 <_svfiprintf_r+0x4e>
 802cce6:	fb0c 3202 	mla	r2, ip, r2, r3
 802ccea:	460c      	mov	r4, r1
 802ccec:	2001      	movs	r0, #1
 802ccee:	e7a5      	b.n	802cc3c <_svfiprintf_r+0xd4>
 802ccf0:	2300      	movs	r3, #0
 802ccf2:	3401      	adds	r4, #1
 802ccf4:	9305      	str	r3, [sp, #20]
 802ccf6:	4619      	mov	r1, r3
 802ccf8:	f04f 0c0a 	mov.w	ip, #10
 802ccfc:	4620      	mov	r0, r4
 802ccfe:	f810 2b01 	ldrb.w	r2, [r0], #1
 802cd02:	3a30      	subs	r2, #48	; 0x30
 802cd04:	2a09      	cmp	r2, #9
 802cd06:	d903      	bls.n	802cd10 <_svfiprintf_r+0x1a8>
 802cd08:	2b00      	cmp	r3, #0
 802cd0a:	d0c5      	beq.n	802cc98 <_svfiprintf_r+0x130>
 802cd0c:	9105      	str	r1, [sp, #20]
 802cd0e:	e7c3      	b.n	802cc98 <_svfiprintf_r+0x130>
 802cd10:	fb0c 2101 	mla	r1, ip, r1, r2
 802cd14:	4604      	mov	r4, r0
 802cd16:	2301      	movs	r3, #1
 802cd18:	e7f0      	b.n	802ccfc <_svfiprintf_r+0x194>
 802cd1a:	ab03      	add	r3, sp, #12
 802cd1c:	9300      	str	r3, [sp, #0]
 802cd1e:	462a      	mov	r2, r5
 802cd20:	4b0f      	ldr	r3, [pc, #60]	; (802cd60 <_svfiprintf_r+0x1f8>)
 802cd22:	a904      	add	r1, sp, #16
 802cd24:	4638      	mov	r0, r7
 802cd26:	f7f9 fa9b 	bl	8026260 <_printf_float>
 802cd2a:	1c42      	adds	r2, r0, #1
 802cd2c:	4606      	mov	r6, r0
 802cd2e:	d1d6      	bne.n	802ccde <_svfiprintf_r+0x176>
 802cd30:	89ab      	ldrh	r3, [r5, #12]
 802cd32:	065b      	lsls	r3, r3, #25
 802cd34:	f53f af2c 	bmi.w	802cb90 <_svfiprintf_r+0x28>
 802cd38:	9809      	ldr	r0, [sp, #36]	; 0x24
 802cd3a:	b01d      	add	sp, #116	; 0x74
 802cd3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cd40:	ab03      	add	r3, sp, #12
 802cd42:	9300      	str	r3, [sp, #0]
 802cd44:	462a      	mov	r2, r5
 802cd46:	4b06      	ldr	r3, [pc, #24]	; (802cd60 <_svfiprintf_r+0x1f8>)
 802cd48:	a904      	add	r1, sp, #16
 802cd4a:	4638      	mov	r0, r7
 802cd4c:	f7f9 fd2c 	bl	80267a8 <_printf_i>
 802cd50:	e7eb      	b.n	802cd2a <_svfiprintf_r+0x1c2>
 802cd52:	bf00      	nop
 802cd54:	08032efc 	.word	0x08032efc
 802cd58:	08032f06 	.word	0x08032f06
 802cd5c:	08026261 	.word	0x08026261
 802cd60:	0802cab1 	.word	0x0802cab1
 802cd64:	08032f02 	.word	0x08032f02

0802cd68 <_sungetc_r>:
 802cd68:	b538      	push	{r3, r4, r5, lr}
 802cd6a:	1c4b      	adds	r3, r1, #1
 802cd6c:	4614      	mov	r4, r2
 802cd6e:	d103      	bne.n	802cd78 <_sungetc_r+0x10>
 802cd70:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 802cd74:	4628      	mov	r0, r5
 802cd76:	bd38      	pop	{r3, r4, r5, pc}
 802cd78:	8993      	ldrh	r3, [r2, #12]
 802cd7a:	f023 0320 	bic.w	r3, r3, #32
 802cd7e:	8193      	strh	r3, [r2, #12]
 802cd80:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802cd82:	6852      	ldr	r2, [r2, #4]
 802cd84:	b2cd      	uxtb	r5, r1
 802cd86:	b18b      	cbz	r3, 802cdac <_sungetc_r+0x44>
 802cd88:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 802cd8a:	4293      	cmp	r3, r2
 802cd8c:	dd08      	ble.n	802cda0 <_sungetc_r+0x38>
 802cd8e:	6823      	ldr	r3, [r4, #0]
 802cd90:	1e5a      	subs	r2, r3, #1
 802cd92:	6022      	str	r2, [r4, #0]
 802cd94:	f803 5c01 	strb.w	r5, [r3, #-1]
 802cd98:	6863      	ldr	r3, [r4, #4]
 802cd9a:	3301      	adds	r3, #1
 802cd9c:	6063      	str	r3, [r4, #4]
 802cd9e:	e7e9      	b.n	802cd74 <_sungetc_r+0xc>
 802cda0:	4621      	mov	r1, r4
 802cda2:	f7fc fc1b 	bl	80295dc <__submore>
 802cda6:	2800      	cmp	r0, #0
 802cda8:	d0f1      	beq.n	802cd8e <_sungetc_r+0x26>
 802cdaa:	e7e1      	b.n	802cd70 <_sungetc_r+0x8>
 802cdac:	6921      	ldr	r1, [r4, #16]
 802cdae:	6823      	ldr	r3, [r4, #0]
 802cdb0:	b151      	cbz	r1, 802cdc8 <_sungetc_r+0x60>
 802cdb2:	4299      	cmp	r1, r3
 802cdb4:	d208      	bcs.n	802cdc8 <_sungetc_r+0x60>
 802cdb6:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 802cdba:	42a9      	cmp	r1, r5
 802cdbc:	d104      	bne.n	802cdc8 <_sungetc_r+0x60>
 802cdbe:	3b01      	subs	r3, #1
 802cdc0:	3201      	adds	r2, #1
 802cdc2:	6023      	str	r3, [r4, #0]
 802cdc4:	6062      	str	r2, [r4, #4]
 802cdc6:	e7d5      	b.n	802cd74 <_sungetc_r+0xc>
 802cdc8:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 802cdcc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802cdd0:	6363      	str	r3, [r4, #52]	; 0x34
 802cdd2:	2303      	movs	r3, #3
 802cdd4:	63a3      	str	r3, [r4, #56]	; 0x38
 802cdd6:	4623      	mov	r3, r4
 802cdd8:	f803 5f46 	strb.w	r5, [r3, #70]!
 802cddc:	6023      	str	r3, [r4, #0]
 802cdde:	2301      	movs	r3, #1
 802cde0:	e7dc      	b.n	802cd9c <_sungetc_r+0x34>

0802cde2 <__ssrefill_r>:
 802cde2:	b510      	push	{r4, lr}
 802cde4:	460c      	mov	r4, r1
 802cde6:	6b49      	ldr	r1, [r1, #52]	; 0x34
 802cde8:	b169      	cbz	r1, 802ce06 <__ssrefill_r+0x24>
 802cdea:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802cdee:	4299      	cmp	r1, r3
 802cdf0:	d001      	beq.n	802cdf6 <__ssrefill_r+0x14>
 802cdf2:	f7f9 f8b5 	bl	8025f60 <_free_r>
 802cdf6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802cdf8:	6063      	str	r3, [r4, #4]
 802cdfa:	2000      	movs	r0, #0
 802cdfc:	6360      	str	r0, [r4, #52]	; 0x34
 802cdfe:	b113      	cbz	r3, 802ce06 <__ssrefill_r+0x24>
 802ce00:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802ce02:	6023      	str	r3, [r4, #0]
 802ce04:	bd10      	pop	{r4, pc}
 802ce06:	6923      	ldr	r3, [r4, #16]
 802ce08:	6023      	str	r3, [r4, #0]
 802ce0a:	2300      	movs	r3, #0
 802ce0c:	6063      	str	r3, [r4, #4]
 802ce0e:	89a3      	ldrh	r3, [r4, #12]
 802ce10:	f043 0320 	orr.w	r3, r3, #32
 802ce14:	81a3      	strh	r3, [r4, #12]
 802ce16:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802ce1a:	e7f3      	b.n	802ce04 <__ssrefill_r+0x22>

0802ce1c <__ssvfiscanf_r>:
 802ce1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802ce20:	460c      	mov	r4, r1
 802ce22:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 802ce26:	2100      	movs	r1, #0
 802ce28:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 802ce2c:	49a6      	ldr	r1, [pc, #664]	; (802d0c8 <__ssvfiscanf_r+0x2ac>)
 802ce2e:	91a0      	str	r1, [sp, #640]	; 0x280
 802ce30:	f10d 0804 	add.w	r8, sp, #4
 802ce34:	49a5      	ldr	r1, [pc, #660]	; (802d0cc <__ssvfiscanf_r+0x2b0>)
 802ce36:	4fa6      	ldr	r7, [pc, #664]	; (802d0d0 <__ssvfiscanf_r+0x2b4>)
 802ce38:	f8df 9298 	ldr.w	r9, [pc, #664]	; 802d0d4 <__ssvfiscanf_r+0x2b8>
 802ce3c:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 802ce40:	4606      	mov	r6, r0
 802ce42:	91a1      	str	r1, [sp, #644]	; 0x284
 802ce44:	9300      	str	r3, [sp, #0]
 802ce46:	7813      	ldrb	r3, [r2, #0]
 802ce48:	2b00      	cmp	r3, #0
 802ce4a:	f000 815a 	beq.w	802d102 <__ssvfiscanf_r+0x2e6>
 802ce4e:	5dd9      	ldrb	r1, [r3, r7]
 802ce50:	f011 0108 	ands.w	r1, r1, #8
 802ce54:	f102 0501 	add.w	r5, r2, #1
 802ce58:	d019      	beq.n	802ce8e <__ssvfiscanf_r+0x72>
 802ce5a:	6863      	ldr	r3, [r4, #4]
 802ce5c:	2b00      	cmp	r3, #0
 802ce5e:	dd0f      	ble.n	802ce80 <__ssvfiscanf_r+0x64>
 802ce60:	6823      	ldr	r3, [r4, #0]
 802ce62:	781a      	ldrb	r2, [r3, #0]
 802ce64:	5cba      	ldrb	r2, [r7, r2]
 802ce66:	0712      	lsls	r2, r2, #28
 802ce68:	d401      	bmi.n	802ce6e <__ssvfiscanf_r+0x52>
 802ce6a:	462a      	mov	r2, r5
 802ce6c:	e7eb      	b.n	802ce46 <__ssvfiscanf_r+0x2a>
 802ce6e:	9a45      	ldr	r2, [sp, #276]	; 0x114
 802ce70:	3201      	adds	r2, #1
 802ce72:	9245      	str	r2, [sp, #276]	; 0x114
 802ce74:	6862      	ldr	r2, [r4, #4]
 802ce76:	3301      	adds	r3, #1
 802ce78:	3a01      	subs	r2, #1
 802ce7a:	6062      	str	r2, [r4, #4]
 802ce7c:	6023      	str	r3, [r4, #0]
 802ce7e:	e7ec      	b.n	802ce5a <__ssvfiscanf_r+0x3e>
 802ce80:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 802ce82:	4621      	mov	r1, r4
 802ce84:	4630      	mov	r0, r6
 802ce86:	4798      	blx	r3
 802ce88:	2800      	cmp	r0, #0
 802ce8a:	d0e9      	beq.n	802ce60 <__ssvfiscanf_r+0x44>
 802ce8c:	e7ed      	b.n	802ce6a <__ssvfiscanf_r+0x4e>
 802ce8e:	2b25      	cmp	r3, #37	; 0x25
 802ce90:	d012      	beq.n	802ceb8 <__ssvfiscanf_r+0x9c>
 802ce92:	469a      	mov	sl, r3
 802ce94:	6863      	ldr	r3, [r4, #4]
 802ce96:	2b00      	cmp	r3, #0
 802ce98:	f340 8091 	ble.w	802cfbe <__ssvfiscanf_r+0x1a2>
 802ce9c:	6822      	ldr	r2, [r4, #0]
 802ce9e:	7813      	ldrb	r3, [r2, #0]
 802cea0:	4553      	cmp	r3, sl
 802cea2:	f040 812e 	bne.w	802d102 <__ssvfiscanf_r+0x2e6>
 802cea6:	6863      	ldr	r3, [r4, #4]
 802cea8:	3b01      	subs	r3, #1
 802ceaa:	6063      	str	r3, [r4, #4]
 802ceac:	9b45      	ldr	r3, [sp, #276]	; 0x114
 802ceae:	3201      	adds	r2, #1
 802ceb0:	3301      	adds	r3, #1
 802ceb2:	6022      	str	r2, [r4, #0]
 802ceb4:	9345      	str	r3, [sp, #276]	; 0x114
 802ceb6:	e7d8      	b.n	802ce6a <__ssvfiscanf_r+0x4e>
 802ceb8:	9141      	str	r1, [sp, #260]	; 0x104
 802ceba:	9143      	str	r1, [sp, #268]	; 0x10c
 802cebc:	7853      	ldrb	r3, [r2, #1]
 802cebe:	2b2a      	cmp	r3, #42	; 0x2a
 802cec0:	bf02      	ittt	eq
 802cec2:	2310      	moveq	r3, #16
 802cec4:	1c95      	addeq	r5, r2, #2
 802cec6:	9341      	streq	r3, [sp, #260]	; 0x104
 802cec8:	220a      	movs	r2, #10
 802ceca:	46aa      	mov	sl, r5
 802cecc:	f81a 1b01 	ldrb.w	r1, [sl], #1
 802ced0:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 802ced4:	2b09      	cmp	r3, #9
 802ced6:	d91d      	bls.n	802cf14 <__ssvfiscanf_r+0xf8>
 802ced8:	487e      	ldr	r0, [pc, #504]	; (802d0d4 <__ssvfiscanf_r+0x2b8>)
 802ceda:	2203      	movs	r2, #3
 802cedc:	f7d3 f978 	bl	80001d0 <memchr>
 802cee0:	b140      	cbz	r0, 802cef4 <__ssvfiscanf_r+0xd8>
 802cee2:	2301      	movs	r3, #1
 802cee4:	eba0 0009 	sub.w	r0, r0, r9
 802cee8:	fa03 f000 	lsl.w	r0, r3, r0
 802ceec:	9b41      	ldr	r3, [sp, #260]	; 0x104
 802ceee:	4318      	orrs	r0, r3
 802cef0:	9041      	str	r0, [sp, #260]	; 0x104
 802cef2:	4655      	mov	r5, sl
 802cef4:	f815 3b01 	ldrb.w	r3, [r5], #1
 802cef8:	2b78      	cmp	r3, #120	; 0x78
 802cefa:	d806      	bhi.n	802cf0a <__ssvfiscanf_r+0xee>
 802cefc:	2b57      	cmp	r3, #87	; 0x57
 802cefe:	d810      	bhi.n	802cf22 <__ssvfiscanf_r+0x106>
 802cf00:	2b25      	cmp	r3, #37	; 0x25
 802cf02:	d0c6      	beq.n	802ce92 <__ssvfiscanf_r+0x76>
 802cf04:	d856      	bhi.n	802cfb4 <__ssvfiscanf_r+0x198>
 802cf06:	2b00      	cmp	r3, #0
 802cf08:	d064      	beq.n	802cfd4 <__ssvfiscanf_r+0x1b8>
 802cf0a:	2303      	movs	r3, #3
 802cf0c:	9347      	str	r3, [sp, #284]	; 0x11c
 802cf0e:	230a      	movs	r3, #10
 802cf10:	9342      	str	r3, [sp, #264]	; 0x108
 802cf12:	e071      	b.n	802cff8 <__ssvfiscanf_r+0x1dc>
 802cf14:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 802cf16:	fb02 1103 	mla	r1, r2, r3, r1
 802cf1a:	3930      	subs	r1, #48	; 0x30
 802cf1c:	9143      	str	r1, [sp, #268]	; 0x10c
 802cf1e:	4655      	mov	r5, sl
 802cf20:	e7d3      	b.n	802ceca <__ssvfiscanf_r+0xae>
 802cf22:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 802cf26:	2a20      	cmp	r2, #32
 802cf28:	d8ef      	bhi.n	802cf0a <__ssvfiscanf_r+0xee>
 802cf2a:	a101      	add	r1, pc, #4	; (adr r1, 802cf30 <__ssvfiscanf_r+0x114>)
 802cf2c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 802cf30:	0802cfe3 	.word	0x0802cfe3
 802cf34:	0802cf0b 	.word	0x0802cf0b
 802cf38:	0802cf0b 	.word	0x0802cf0b
 802cf3c:	0802d041 	.word	0x0802d041
 802cf40:	0802cf0b 	.word	0x0802cf0b
 802cf44:	0802cf0b 	.word	0x0802cf0b
 802cf48:	0802cf0b 	.word	0x0802cf0b
 802cf4c:	0802cf0b 	.word	0x0802cf0b
 802cf50:	0802cf0b 	.word	0x0802cf0b
 802cf54:	0802cf0b 	.word	0x0802cf0b
 802cf58:	0802cf0b 	.word	0x0802cf0b
 802cf5c:	0802d057 	.word	0x0802d057
 802cf60:	0802d02d 	.word	0x0802d02d
 802cf64:	0802cfbb 	.word	0x0802cfbb
 802cf68:	0802cfbb 	.word	0x0802cfbb
 802cf6c:	0802cfbb 	.word	0x0802cfbb
 802cf70:	0802cf0b 	.word	0x0802cf0b
 802cf74:	0802d031 	.word	0x0802d031
 802cf78:	0802cf0b 	.word	0x0802cf0b
 802cf7c:	0802cf0b 	.word	0x0802cf0b
 802cf80:	0802cf0b 	.word	0x0802cf0b
 802cf84:	0802cf0b 	.word	0x0802cf0b
 802cf88:	0802d067 	.word	0x0802d067
 802cf8c:	0802d039 	.word	0x0802d039
 802cf90:	0802cfdb 	.word	0x0802cfdb
 802cf94:	0802cf0b 	.word	0x0802cf0b
 802cf98:	0802cf0b 	.word	0x0802cf0b
 802cf9c:	0802d063 	.word	0x0802d063
 802cfa0:	0802cf0b 	.word	0x0802cf0b
 802cfa4:	0802d02d 	.word	0x0802d02d
 802cfa8:	0802cf0b 	.word	0x0802cf0b
 802cfac:	0802cf0b 	.word	0x0802cf0b
 802cfb0:	0802cfe3 	.word	0x0802cfe3
 802cfb4:	3b45      	subs	r3, #69	; 0x45
 802cfb6:	2b02      	cmp	r3, #2
 802cfb8:	d8a7      	bhi.n	802cf0a <__ssvfiscanf_r+0xee>
 802cfba:	2305      	movs	r3, #5
 802cfbc:	e01b      	b.n	802cff6 <__ssvfiscanf_r+0x1da>
 802cfbe:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 802cfc0:	4621      	mov	r1, r4
 802cfc2:	4630      	mov	r0, r6
 802cfc4:	4798      	blx	r3
 802cfc6:	2800      	cmp	r0, #0
 802cfc8:	f43f af68 	beq.w	802ce9c <__ssvfiscanf_r+0x80>
 802cfcc:	9844      	ldr	r0, [sp, #272]	; 0x110
 802cfce:	2800      	cmp	r0, #0
 802cfd0:	f040 808d 	bne.w	802d0ee <__ssvfiscanf_r+0x2d2>
 802cfd4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802cfd8:	e08f      	b.n	802d0fa <__ssvfiscanf_r+0x2de>
 802cfda:	9a41      	ldr	r2, [sp, #260]	; 0x104
 802cfdc:	f042 0220 	orr.w	r2, r2, #32
 802cfe0:	9241      	str	r2, [sp, #260]	; 0x104
 802cfe2:	9a41      	ldr	r2, [sp, #260]	; 0x104
 802cfe4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 802cfe8:	9241      	str	r2, [sp, #260]	; 0x104
 802cfea:	2210      	movs	r2, #16
 802cfec:	2b6f      	cmp	r3, #111	; 0x6f
 802cfee:	9242      	str	r2, [sp, #264]	; 0x108
 802cff0:	bf34      	ite	cc
 802cff2:	2303      	movcc	r3, #3
 802cff4:	2304      	movcs	r3, #4
 802cff6:	9347      	str	r3, [sp, #284]	; 0x11c
 802cff8:	6863      	ldr	r3, [r4, #4]
 802cffa:	2b00      	cmp	r3, #0
 802cffc:	dd42      	ble.n	802d084 <__ssvfiscanf_r+0x268>
 802cffe:	9b41      	ldr	r3, [sp, #260]	; 0x104
 802d000:	0659      	lsls	r1, r3, #25
 802d002:	d404      	bmi.n	802d00e <__ssvfiscanf_r+0x1f2>
 802d004:	6823      	ldr	r3, [r4, #0]
 802d006:	781a      	ldrb	r2, [r3, #0]
 802d008:	5cba      	ldrb	r2, [r7, r2]
 802d00a:	0712      	lsls	r2, r2, #28
 802d00c:	d441      	bmi.n	802d092 <__ssvfiscanf_r+0x276>
 802d00e:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 802d010:	2b02      	cmp	r3, #2
 802d012:	dc50      	bgt.n	802d0b6 <__ssvfiscanf_r+0x29a>
 802d014:	466b      	mov	r3, sp
 802d016:	4622      	mov	r2, r4
 802d018:	a941      	add	r1, sp, #260	; 0x104
 802d01a:	4630      	mov	r0, r6
 802d01c:	f000 f9d0 	bl	802d3c0 <_scanf_chars>
 802d020:	2801      	cmp	r0, #1
 802d022:	d06e      	beq.n	802d102 <__ssvfiscanf_r+0x2e6>
 802d024:	2802      	cmp	r0, #2
 802d026:	f47f af20 	bne.w	802ce6a <__ssvfiscanf_r+0x4e>
 802d02a:	e7cf      	b.n	802cfcc <__ssvfiscanf_r+0x1b0>
 802d02c:	220a      	movs	r2, #10
 802d02e:	e7dd      	b.n	802cfec <__ssvfiscanf_r+0x1d0>
 802d030:	2300      	movs	r3, #0
 802d032:	9342      	str	r3, [sp, #264]	; 0x108
 802d034:	2303      	movs	r3, #3
 802d036:	e7de      	b.n	802cff6 <__ssvfiscanf_r+0x1da>
 802d038:	2308      	movs	r3, #8
 802d03a:	9342      	str	r3, [sp, #264]	; 0x108
 802d03c:	2304      	movs	r3, #4
 802d03e:	e7da      	b.n	802cff6 <__ssvfiscanf_r+0x1da>
 802d040:	4629      	mov	r1, r5
 802d042:	4640      	mov	r0, r8
 802d044:	f000 fb28 	bl	802d698 <__sccl>
 802d048:	9b41      	ldr	r3, [sp, #260]	; 0x104
 802d04a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802d04e:	9341      	str	r3, [sp, #260]	; 0x104
 802d050:	4605      	mov	r5, r0
 802d052:	2301      	movs	r3, #1
 802d054:	e7cf      	b.n	802cff6 <__ssvfiscanf_r+0x1da>
 802d056:	9b41      	ldr	r3, [sp, #260]	; 0x104
 802d058:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802d05c:	9341      	str	r3, [sp, #260]	; 0x104
 802d05e:	2300      	movs	r3, #0
 802d060:	e7c9      	b.n	802cff6 <__ssvfiscanf_r+0x1da>
 802d062:	2302      	movs	r3, #2
 802d064:	e7c7      	b.n	802cff6 <__ssvfiscanf_r+0x1da>
 802d066:	9841      	ldr	r0, [sp, #260]	; 0x104
 802d068:	06c3      	lsls	r3, r0, #27
 802d06a:	f53f aefe 	bmi.w	802ce6a <__ssvfiscanf_r+0x4e>
 802d06e:	9b00      	ldr	r3, [sp, #0]
 802d070:	9a45      	ldr	r2, [sp, #276]	; 0x114
 802d072:	1d19      	adds	r1, r3, #4
 802d074:	9100      	str	r1, [sp, #0]
 802d076:	681b      	ldr	r3, [r3, #0]
 802d078:	f010 0f01 	tst.w	r0, #1
 802d07c:	bf14      	ite	ne
 802d07e:	801a      	strhne	r2, [r3, #0]
 802d080:	601a      	streq	r2, [r3, #0]
 802d082:	e6f2      	b.n	802ce6a <__ssvfiscanf_r+0x4e>
 802d084:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 802d086:	4621      	mov	r1, r4
 802d088:	4630      	mov	r0, r6
 802d08a:	4798      	blx	r3
 802d08c:	2800      	cmp	r0, #0
 802d08e:	d0b6      	beq.n	802cffe <__ssvfiscanf_r+0x1e2>
 802d090:	e79c      	b.n	802cfcc <__ssvfiscanf_r+0x1b0>
 802d092:	9a45      	ldr	r2, [sp, #276]	; 0x114
 802d094:	3201      	adds	r2, #1
 802d096:	9245      	str	r2, [sp, #276]	; 0x114
 802d098:	6862      	ldr	r2, [r4, #4]
 802d09a:	3a01      	subs	r2, #1
 802d09c:	2a00      	cmp	r2, #0
 802d09e:	6062      	str	r2, [r4, #4]
 802d0a0:	dd02      	ble.n	802d0a8 <__ssvfiscanf_r+0x28c>
 802d0a2:	3301      	adds	r3, #1
 802d0a4:	6023      	str	r3, [r4, #0]
 802d0a6:	e7ad      	b.n	802d004 <__ssvfiscanf_r+0x1e8>
 802d0a8:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 802d0aa:	4621      	mov	r1, r4
 802d0ac:	4630      	mov	r0, r6
 802d0ae:	4798      	blx	r3
 802d0b0:	2800      	cmp	r0, #0
 802d0b2:	d0a7      	beq.n	802d004 <__ssvfiscanf_r+0x1e8>
 802d0b4:	e78a      	b.n	802cfcc <__ssvfiscanf_r+0x1b0>
 802d0b6:	2b04      	cmp	r3, #4
 802d0b8:	dc0e      	bgt.n	802d0d8 <__ssvfiscanf_r+0x2bc>
 802d0ba:	466b      	mov	r3, sp
 802d0bc:	4622      	mov	r2, r4
 802d0be:	a941      	add	r1, sp, #260	; 0x104
 802d0c0:	4630      	mov	r0, r6
 802d0c2:	f000 f9d7 	bl	802d474 <_scanf_i>
 802d0c6:	e7ab      	b.n	802d020 <__ssvfiscanf_r+0x204>
 802d0c8:	0802cd69 	.word	0x0802cd69
 802d0cc:	0802cde3 	.word	0x0802cde3
 802d0d0:	08032018 	.word	0x08032018
 802d0d4:	08032f02 	.word	0x08032f02
 802d0d8:	4b0b      	ldr	r3, [pc, #44]	; (802d108 <__ssvfiscanf_r+0x2ec>)
 802d0da:	2b00      	cmp	r3, #0
 802d0dc:	f43f aec5 	beq.w	802ce6a <__ssvfiscanf_r+0x4e>
 802d0e0:	466b      	mov	r3, sp
 802d0e2:	4622      	mov	r2, r4
 802d0e4:	a941      	add	r1, sp, #260	; 0x104
 802d0e6:	4630      	mov	r0, r6
 802d0e8:	f7f9 fc84 	bl	80269f4 <_scanf_float>
 802d0ec:	e798      	b.n	802d020 <__ssvfiscanf_r+0x204>
 802d0ee:	89a3      	ldrh	r3, [r4, #12]
 802d0f0:	f013 0f40 	tst.w	r3, #64	; 0x40
 802d0f4:	bf18      	it	ne
 802d0f6:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 802d0fa:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 802d0fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802d102:	9844      	ldr	r0, [sp, #272]	; 0x110
 802d104:	e7f9      	b.n	802d0fa <__ssvfiscanf_r+0x2de>
 802d106:	bf00      	nop
 802d108:	080269f5 	.word	0x080269f5

0802d10c <__sfputc_r>:
 802d10c:	6893      	ldr	r3, [r2, #8]
 802d10e:	3b01      	subs	r3, #1
 802d110:	2b00      	cmp	r3, #0
 802d112:	b410      	push	{r4}
 802d114:	6093      	str	r3, [r2, #8]
 802d116:	da08      	bge.n	802d12a <__sfputc_r+0x1e>
 802d118:	6994      	ldr	r4, [r2, #24]
 802d11a:	42a3      	cmp	r3, r4
 802d11c:	db01      	blt.n	802d122 <__sfputc_r+0x16>
 802d11e:	290a      	cmp	r1, #10
 802d120:	d103      	bne.n	802d12a <__sfputc_r+0x1e>
 802d122:	f85d 4b04 	ldr.w	r4, [sp], #4
 802d126:	f7fc bbd1 	b.w	80298cc <__swbuf_r>
 802d12a:	6813      	ldr	r3, [r2, #0]
 802d12c:	1c58      	adds	r0, r3, #1
 802d12e:	6010      	str	r0, [r2, #0]
 802d130:	7019      	strb	r1, [r3, #0]
 802d132:	4608      	mov	r0, r1
 802d134:	f85d 4b04 	ldr.w	r4, [sp], #4
 802d138:	4770      	bx	lr

0802d13a <__sfputs_r>:
 802d13a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802d13c:	4606      	mov	r6, r0
 802d13e:	460f      	mov	r7, r1
 802d140:	4614      	mov	r4, r2
 802d142:	18d5      	adds	r5, r2, r3
 802d144:	42ac      	cmp	r4, r5
 802d146:	d101      	bne.n	802d14c <__sfputs_r+0x12>
 802d148:	2000      	movs	r0, #0
 802d14a:	e007      	b.n	802d15c <__sfputs_r+0x22>
 802d14c:	f814 1b01 	ldrb.w	r1, [r4], #1
 802d150:	463a      	mov	r2, r7
 802d152:	4630      	mov	r0, r6
 802d154:	f7ff ffda 	bl	802d10c <__sfputc_r>
 802d158:	1c43      	adds	r3, r0, #1
 802d15a:	d1f3      	bne.n	802d144 <__sfputs_r+0xa>
 802d15c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802d160 <_vfiprintf_r>:
 802d160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d164:	460d      	mov	r5, r1
 802d166:	b09d      	sub	sp, #116	; 0x74
 802d168:	4614      	mov	r4, r2
 802d16a:	4698      	mov	r8, r3
 802d16c:	4606      	mov	r6, r0
 802d16e:	b118      	cbz	r0, 802d178 <_vfiprintf_r+0x18>
 802d170:	6983      	ldr	r3, [r0, #24]
 802d172:	b90b      	cbnz	r3, 802d178 <_vfiprintf_r+0x18>
 802d174:	f7f8 f9ec 	bl	8025550 <__sinit>
 802d178:	4b89      	ldr	r3, [pc, #548]	; (802d3a0 <_vfiprintf_r+0x240>)
 802d17a:	429d      	cmp	r5, r3
 802d17c:	d11b      	bne.n	802d1b6 <_vfiprintf_r+0x56>
 802d17e:	6875      	ldr	r5, [r6, #4]
 802d180:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802d182:	07d9      	lsls	r1, r3, #31
 802d184:	d405      	bmi.n	802d192 <_vfiprintf_r+0x32>
 802d186:	89ab      	ldrh	r3, [r5, #12]
 802d188:	059a      	lsls	r2, r3, #22
 802d18a:	d402      	bmi.n	802d192 <_vfiprintf_r+0x32>
 802d18c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802d18e:	f7f8 fdf5 	bl	8025d7c <__retarget_lock_acquire_recursive>
 802d192:	89ab      	ldrh	r3, [r5, #12]
 802d194:	071b      	lsls	r3, r3, #28
 802d196:	d501      	bpl.n	802d19c <_vfiprintf_r+0x3c>
 802d198:	692b      	ldr	r3, [r5, #16]
 802d19a:	b9eb      	cbnz	r3, 802d1d8 <_vfiprintf_r+0x78>
 802d19c:	4629      	mov	r1, r5
 802d19e:	4630      	mov	r0, r6
 802d1a0:	f7fd fafa 	bl	802a798 <__swsetup_r>
 802d1a4:	b1c0      	cbz	r0, 802d1d8 <_vfiprintf_r+0x78>
 802d1a6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802d1a8:	07dc      	lsls	r4, r3, #31
 802d1aa:	d50e      	bpl.n	802d1ca <_vfiprintf_r+0x6a>
 802d1ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802d1b0:	b01d      	add	sp, #116	; 0x74
 802d1b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d1b6:	4b7b      	ldr	r3, [pc, #492]	; (802d3a4 <_vfiprintf_r+0x244>)
 802d1b8:	429d      	cmp	r5, r3
 802d1ba:	d101      	bne.n	802d1c0 <_vfiprintf_r+0x60>
 802d1bc:	68b5      	ldr	r5, [r6, #8]
 802d1be:	e7df      	b.n	802d180 <_vfiprintf_r+0x20>
 802d1c0:	4b79      	ldr	r3, [pc, #484]	; (802d3a8 <_vfiprintf_r+0x248>)
 802d1c2:	429d      	cmp	r5, r3
 802d1c4:	bf08      	it	eq
 802d1c6:	68f5      	ldreq	r5, [r6, #12]
 802d1c8:	e7da      	b.n	802d180 <_vfiprintf_r+0x20>
 802d1ca:	89ab      	ldrh	r3, [r5, #12]
 802d1cc:	0598      	lsls	r0, r3, #22
 802d1ce:	d4ed      	bmi.n	802d1ac <_vfiprintf_r+0x4c>
 802d1d0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802d1d2:	f7f8 fdd5 	bl	8025d80 <__retarget_lock_release_recursive>
 802d1d6:	e7e9      	b.n	802d1ac <_vfiprintf_r+0x4c>
 802d1d8:	2300      	movs	r3, #0
 802d1da:	9309      	str	r3, [sp, #36]	; 0x24
 802d1dc:	2320      	movs	r3, #32
 802d1de:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802d1e2:	f8cd 800c 	str.w	r8, [sp, #12]
 802d1e6:	2330      	movs	r3, #48	; 0x30
 802d1e8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 802d3ac <_vfiprintf_r+0x24c>
 802d1ec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802d1f0:	f04f 0901 	mov.w	r9, #1
 802d1f4:	4623      	mov	r3, r4
 802d1f6:	469a      	mov	sl, r3
 802d1f8:	f813 2b01 	ldrb.w	r2, [r3], #1
 802d1fc:	b10a      	cbz	r2, 802d202 <_vfiprintf_r+0xa2>
 802d1fe:	2a25      	cmp	r2, #37	; 0x25
 802d200:	d1f9      	bne.n	802d1f6 <_vfiprintf_r+0x96>
 802d202:	ebba 0b04 	subs.w	fp, sl, r4
 802d206:	d00b      	beq.n	802d220 <_vfiprintf_r+0xc0>
 802d208:	465b      	mov	r3, fp
 802d20a:	4622      	mov	r2, r4
 802d20c:	4629      	mov	r1, r5
 802d20e:	4630      	mov	r0, r6
 802d210:	f7ff ff93 	bl	802d13a <__sfputs_r>
 802d214:	3001      	adds	r0, #1
 802d216:	f000 80aa 	beq.w	802d36e <_vfiprintf_r+0x20e>
 802d21a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802d21c:	445a      	add	r2, fp
 802d21e:	9209      	str	r2, [sp, #36]	; 0x24
 802d220:	f89a 3000 	ldrb.w	r3, [sl]
 802d224:	2b00      	cmp	r3, #0
 802d226:	f000 80a2 	beq.w	802d36e <_vfiprintf_r+0x20e>
 802d22a:	2300      	movs	r3, #0
 802d22c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 802d230:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802d234:	f10a 0a01 	add.w	sl, sl, #1
 802d238:	9304      	str	r3, [sp, #16]
 802d23a:	9307      	str	r3, [sp, #28]
 802d23c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802d240:	931a      	str	r3, [sp, #104]	; 0x68
 802d242:	4654      	mov	r4, sl
 802d244:	2205      	movs	r2, #5
 802d246:	f814 1b01 	ldrb.w	r1, [r4], #1
 802d24a:	4858      	ldr	r0, [pc, #352]	; (802d3ac <_vfiprintf_r+0x24c>)
 802d24c:	f7d2 ffc0 	bl	80001d0 <memchr>
 802d250:	9a04      	ldr	r2, [sp, #16]
 802d252:	b9d8      	cbnz	r0, 802d28c <_vfiprintf_r+0x12c>
 802d254:	06d1      	lsls	r1, r2, #27
 802d256:	bf44      	itt	mi
 802d258:	2320      	movmi	r3, #32
 802d25a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802d25e:	0713      	lsls	r3, r2, #28
 802d260:	bf44      	itt	mi
 802d262:	232b      	movmi	r3, #43	; 0x2b
 802d264:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802d268:	f89a 3000 	ldrb.w	r3, [sl]
 802d26c:	2b2a      	cmp	r3, #42	; 0x2a
 802d26e:	d015      	beq.n	802d29c <_vfiprintf_r+0x13c>
 802d270:	9a07      	ldr	r2, [sp, #28]
 802d272:	4654      	mov	r4, sl
 802d274:	2000      	movs	r0, #0
 802d276:	f04f 0c0a 	mov.w	ip, #10
 802d27a:	4621      	mov	r1, r4
 802d27c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802d280:	3b30      	subs	r3, #48	; 0x30
 802d282:	2b09      	cmp	r3, #9
 802d284:	d94e      	bls.n	802d324 <_vfiprintf_r+0x1c4>
 802d286:	b1b0      	cbz	r0, 802d2b6 <_vfiprintf_r+0x156>
 802d288:	9207      	str	r2, [sp, #28]
 802d28a:	e014      	b.n	802d2b6 <_vfiprintf_r+0x156>
 802d28c:	eba0 0308 	sub.w	r3, r0, r8
 802d290:	fa09 f303 	lsl.w	r3, r9, r3
 802d294:	4313      	orrs	r3, r2
 802d296:	9304      	str	r3, [sp, #16]
 802d298:	46a2      	mov	sl, r4
 802d29a:	e7d2      	b.n	802d242 <_vfiprintf_r+0xe2>
 802d29c:	9b03      	ldr	r3, [sp, #12]
 802d29e:	1d19      	adds	r1, r3, #4
 802d2a0:	681b      	ldr	r3, [r3, #0]
 802d2a2:	9103      	str	r1, [sp, #12]
 802d2a4:	2b00      	cmp	r3, #0
 802d2a6:	bfbb      	ittet	lt
 802d2a8:	425b      	neglt	r3, r3
 802d2aa:	f042 0202 	orrlt.w	r2, r2, #2
 802d2ae:	9307      	strge	r3, [sp, #28]
 802d2b0:	9307      	strlt	r3, [sp, #28]
 802d2b2:	bfb8      	it	lt
 802d2b4:	9204      	strlt	r2, [sp, #16]
 802d2b6:	7823      	ldrb	r3, [r4, #0]
 802d2b8:	2b2e      	cmp	r3, #46	; 0x2e
 802d2ba:	d10c      	bne.n	802d2d6 <_vfiprintf_r+0x176>
 802d2bc:	7863      	ldrb	r3, [r4, #1]
 802d2be:	2b2a      	cmp	r3, #42	; 0x2a
 802d2c0:	d135      	bne.n	802d32e <_vfiprintf_r+0x1ce>
 802d2c2:	9b03      	ldr	r3, [sp, #12]
 802d2c4:	1d1a      	adds	r2, r3, #4
 802d2c6:	681b      	ldr	r3, [r3, #0]
 802d2c8:	9203      	str	r2, [sp, #12]
 802d2ca:	2b00      	cmp	r3, #0
 802d2cc:	bfb8      	it	lt
 802d2ce:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 802d2d2:	3402      	adds	r4, #2
 802d2d4:	9305      	str	r3, [sp, #20]
 802d2d6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 802d3bc <_vfiprintf_r+0x25c>
 802d2da:	7821      	ldrb	r1, [r4, #0]
 802d2dc:	2203      	movs	r2, #3
 802d2de:	4650      	mov	r0, sl
 802d2e0:	f7d2 ff76 	bl	80001d0 <memchr>
 802d2e4:	b140      	cbz	r0, 802d2f8 <_vfiprintf_r+0x198>
 802d2e6:	2340      	movs	r3, #64	; 0x40
 802d2e8:	eba0 000a 	sub.w	r0, r0, sl
 802d2ec:	fa03 f000 	lsl.w	r0, r3, r0
 802d2f0:	9b04      	ldr	r3, [sp, #16]
 802d2f2:	4303      	orrs	r3, r0
 802d2f4:	3401      	adds	r4, #1
 802d2f6:	9304      	str	r3, [sp, #16]
 802d2f8:	f814 1b01 	ldrb.w	r1, [r4], #1
 802d2fc:	482c      	ldr	r0, [pc, #176]	; (802d3b0 <_vfiprintf_r+0x250>)
 802d2fe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802d302:	2206      	movs	r2, #6
 802d304:	f7d2 ff64 	bl	80001d0 <memchr>
 802d308:	2800      	cmp	r0, #0
 802d30a:	d03f      	beq.n	802d38c <_vfiprintf_r+0x22c>
 802d30c:	4b29      	ldr	r3, [pc, #164]	; (802d3b4 <_vfiprintf_r+0x254>)
 802d30e:	bb1b      	cbnz	r3, 802d358 <_vfiprintf_r+0x1f8>
 802d310:	9b03      	ldr	r3, [sp, #12]
 802d312:	3307      	adds	r3, #7
 802d314:	f023 0307 	bic.w	r3, r3, #7
 802d318:	3308      	adds	r3, #8
 802d31a:	9303      	str	r3, [sp, #12]
 802d31c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802d31e:	443b      	add	r3, r7
 802d320:	9309      	str	r3, [sp, #36]	; 0x24
 802d322:	e767      	b.n	802d1f4 <_vfiprintf_r+0x94>
 802d324:	fb0c 3202 	mla	r2, ip, r2, r3
 802d328:	460c      	mov	r4, r1
 802d32a:	2001      	movs	r0, #1
 802d32c:	e7a5      	b.n	802d27a <_vfiprintf_r+0x11a>
 802d32e:	2300      	movs	r3, #0
 802d330:	3401      	adds	r4, #1
 802d332:	9305      	str	r3, [sp, #20]
 802d334:	4619      	mov	r1, r3
 802d336:	f04f 0c0a 	mov.w	ip, #10
 802d33a:	4620      	mov	r0, r4
 802d33c:	f810 2b01 	ldrb.w	r2, [r0], #1
 802d340:	3a30      	subs	r2, #48	; 0x30
 802d342:	2a09      	cmp	r2, #9
 802d344:	d903      	bls.n	802d34e <_vfiprintf_r+0x1ee>
 802d346:	2b00      	cmp	r3, #0
 802d348:	d0c5      	beq.n	802d2d6 <_vfiprintf_r+0x176>
 802d34a:	9105      	str	r1, [sp, #20]
 802d34c:	e7c3      	b.n	802d2d6 <_vfiprintf_r+0x176>
 802d34e:	fb0c 2101 	mla	r1, ip, r1, r2
 802d352:	4604      	mov	r4, r0
 802d354:	2301      	movs	r3, #1
 802d356:	e7f0      	b.n	802d33a <_vfiprintf_r+0x1da>
 802d358:	ab03      	add	r3, sp, #12
 802d35a:	9300      	str	r3, [sp, #0]
 802d35c:	462a      	mov	r2, r5
 802d35e:	4b16      	ldr	r3, [pc, #88]	; (802d3b8 <_vfiprintf_r+0x258>)
 802d360:	a904      	add	r1, sp, #16
 802d362:	4630      	mov	r0, r6
 802d364:	f7f8 ff7c 	bl	8026260 <_printf_float>
 802d368:	4607      	mov	r7, r0
 802d36a:	1c78      	adds	r0, r7, #1
 802d36c:	d1d6      	bne.n	802d31c <_vfiprintf_r+0x1bc>
 802d36e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802d370:	07d9      	lsls	r1, r3, #31
 802d372:	d405      	bmi.n	802d380 <_vfiprintf_r+0x220>
 802d374:	89ab      	ldrh	r3, [r5, #12]
 802d376:	059a      	lsls	r2, r3, #22
 802d378:	d402      	bmi.n	802d380 <_vfiprintf_r+0x220>
 802d37a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802d37c:	f7f8 fd00 	bl	8025d80 <__retarget_lock_release_recursive>
 802d380:	89ab      	ldrh	r3, [r5, #12]
 802d382:	065b      	lsls	r3, r3, #25
 802d384:	f53f af12 	bmi.w	802d1ac <_vfiprintf_r+0x4c>
 802d388:	9809      	ldr	r0, [sp, #36]	; 0x24
 802d38a:	e711      	b.n	802d1b0 <_vfiprintf_r+0x50>
 802d38c:	ab03      	add	r3, sp, #12
 802d38e:	9300      	str	r3, [sp, #0]
 802d390:	462a      	mov	r2, r5
 802d392:	4b09      	ldr	r3, [pc, #36]	; (802d3b8 <_vfiprintf_r+0x258>)
 802d394:	a904      	add	r1, sp, #16
 802d396:	4630      	mov	r0, r6
 802d398:	f7f9 fa06 	bl	80267a8 <_printf_i>
 802d39c:	e7e4      	b.n	802d368 <_vfiprintf_r+0x208>
 802d39e:	bf00      	nop
 802d3a0:	08032138 	.word	0x08032138
 802d3a4:	08032158 	.word	0x08032158
 802d3a8:	08032118 	.word	0x08032118
 802d3ac:	08032efc 	.word	0x08032efc
 802d3b0:	08032f06 	.word	0x08032f06
 802d3b4:	08026261 	.word	0x08026261
 802d3b8:	0802d13b 	.word	0x0802d13b
 802d3bc:	08032f02 	.word	0x08032f02

0802d3c0 <_scanf_chars>:
 802d3c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802d3c4:	4615      	mov	r5, r2
 802d3c6:	688a      	ldr	r2, [r1, #8]
 802d3c8:	4680      	mov	r8, r0
 802d3ca:	460c      	mov	r4, r1
 802d3cc:	b932      	cbnz	r2, 802d3dc <_scanf_chars+0x1c>
 802d3ce:	698a      	ldr	r2, [r1, #24]
 802d3d0:	2a00      	cmp	r2, #0
 802d3d2:	bf0c      	ite	eq
 802d3d4:	2201      	moveq	r2, #1
 802d3d6:	f04f 32ff 	movne.w	r2, #4294967295	; 0xffffffff
 802d3da:	608a      	str	r2, [r1, #8]
 802d3dc:	6822      	ldr	r2, [r4, #0]
 802d3de:	f8df 9090 	ldr.w	r9, [pc, #144]	; 802d470 <_scanf_chars+0xb0>
 802d3e2:	06d1      	lsls	r1, r2, #27
 802d3e4:	bf5f      	itttt	pl
 802d3e6:	681a      	ldrpl	r2, [r3, #0]
 802d3e8:	1d11      	addpl	r1, r2, #4
 802d3ea:	6019      	strpl	r1, [r3, #0]
 802d3ec:	6816      	ldrpl	r6, [r2, #0]
 802d3ee:	2700      	movs	r7, #0
 802d3f0:	69a0      	ldr	r0, [r4, #24]
 802d3f2:	b188      	cbz	r0, 802d418 <_scanf_chars+0x58>
 802d3f4:	2801      	cmp	r0, #1
 802d3f6:	d107      	bne.n	802d408 <_scanf_chars+0x48>
 802d3f8:	682a      	ldr	r2, [r5, #0]
 802d3fa:	7811      	ldrb	r1, [r2, #0]
 802d3fc:	6962      	ldr	r2, [r4, #20]
 802d3fe:	5c52      	ldrb	r2, [r2, r1]
 802d400:	b952      	cbnz	r2, 802d418 <_scanf_chars+0x58>
 802d402:	2f00      	cmp	r7, #0
 802d404:	d031      	beq.n	802d46a <_scanf_chars+0xaa>
 802d406:	e022      	b.n	802d44e <_scanf_chars+0x8e>
 802d408:	2802      	cmp	r0, #2
 802d40a:	d120      	bne.n	802d44e <_scanf_chars+0x8e>
 802d40c:	682b      	ldr	r3, [r5, #0]
 802d40e:	781b      	ldrb	r3, [r3, #0]
 802d410:	f813 3009 	ldrb.w	r3, [r3, r9]
 802d414:	071b      	lsls	r3, r3, #28
 802d416:	d41a      	bmi.n	802d44e <_scanf_chars+0x8e>
 802d418:	6823      	ldr	r3, [r4, #0]
 802d41a:	06da      	lsls	r2, r3, #27
 802d41c:	bf5e      	ittt	pl
 802d41e:	682b      	ldrpl	r3, [r5, #0]
 802d420:	781b      	ldrbpl	r3, [r3, #0]
 802d422:	f806 3b01 	strbpl.w	r3, [r6], #1
 802d426:	682a      	ldr	r2, [r5, #0]
 802d428:	686b      	ldr	r3, [r5, #4]
 802d42a:	3201      	adds	r2, #1
 802d42c:	602a      	str	r2, [r5, #0]
 802d42e:	68a2      	ldr	r2, [r4, #8]
 802d430:	3b01      	subs	r3, #1
 802d432:	3a01      	subs	r2, #1
 802d434:	606b      	str	r3, [r5, #4]
 802d436:	3701      	adds	r7, #1
 802d438:	60a2      	str	r2, [r4, #8]
 802d43a:	b142      	cbz	r2, 802d44e <_scanf_chars+0x8e>
 802d43c:	2b00      	cmp	r3, #0
 802d43e:	dcd7      	bgt.n	802d3f0 <_scanf_chars+0x30>
 802d440:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 802d444:	4629      	mov	r1, r5
 802d446:	4640      	mov	r0, r8
 802d448:	4798      	blx	r3
 802d44a:	2800      	cmp	r0, #0
 802d44c:	d0d0      	beq.n	802d3f0 <_scanf_chars+0x30>
 802d44e:	6823      	ldr	r3, [r4, #0]
 802d450:	f013 0310 	ands.w	r3, r3, #16
 802d454:	d105      	bne.n	802d462 <_scanf_chars+0xa2>
 802d456:	68e2      	ldr	r2, [r4, #12]
 802d458:	3201      	adds	r2, #1
 802d45a:	60e2      	str	r2, [r4, #12]
 802d45c:	69a2      	ldr	r2, [r4, #24]
 802d45e:	b102      	cbz	r2, 802d462 <_scanf_chars+0xa2>
 802d460:	7033      	strb	r3, [r6, #0]
 802d462:	6923      	ldr	r3, [r4, #16]
 802d464:	443b      	add	r3, r7
 802d466:	6123      	str	r3, [r4, #16]
 802d468:	2000      	movs	r0, #0
 802d46a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802d46e:	bf00      	nop
 802d470:	08032018 	.word	0x08032018

0802d474 <_scanf_i>:
 802d474:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d478:	4698      	mov	r8, r3
 802d47a:	4b76      	ldr	r3, [pc, #472]	; (802d654 <_scanf_i+0x1e0>)
 802d47c:	460c      	mov	r4, r1
 802d47e:	4682      	mov	sl, r0
 802d480:	4616      	mov	r6, r2
 802d482:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 802d486:	b087      	sub	sp, #28
 802d488:	ab03      	add	r3, sp, #12
 802d48a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 802d48e:	4b72      	ldr	r3, [pc, #456]	; (802d658 <_scanf_i+0x1e4>)
 802d490:	69a1      	ldr	r1, [r4, #24]
 802d492:	4a72      	ldr	r2, [pc, #456]	; (802d65c <_scanf_i+0x1e8>)
 802d494:	2903      	cmp	r1, #3
 802d496:	bf18      	it	ne
 802d498:	461a      	movne	r2, r3
 802d49a:	68a3      	ldr	r3, [r4, #8]
 802d49c:	9201      	str	r2, [sp, #4]
 802d49e:	1e5a      	subs	r2, r3, #1
 802d4a0:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 802d4a4:	bf88      	it	hi
 802d4a6:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 802d4aa:	4627      	mov	r7, r4
 802d4ac:	bf82      	ittt	hi
 802d4ae:	eb03 0905 	addhi.w	r9, r3, r5
 802d4b2:	f240 135d 	movwhi	r3, #349	; 0x15d
 802d4b6:	60a3      	strhi	r3, [r4, #8]
 802d4b8:	f857 3b1c 	ldr.w	r3, [r7], #28
 802d4bc:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 802d4c0:	bf98      	it	ls
 802d4c2:	f04f 0900 	movls.w	r9, #0
 802d4c6:	6023      	str	r3, [r4, #0]
 802d4c8:	463d      	mov	r5, r7
 802d4ca:	f04f 0b00 	mov.w	fp, #0
 802d4ce:	6831      	ldr	r1, [r6, #0]
 802d4d0:	ab03      	add	r3, sp, #12
 802d4d2:	7809      	ldrb	r1, [r1, #0]
 802d4d4:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 802d4d8:	2202      	movs	r2, #2
 802d4da:	f7d2 fe79 	bl	80001d0 <memchr>
 802d4de:	b328      	cbz	r0, 802d52c <_scanf_i+0xb8>
 802d4e0:	f1bb 0f01 	cmp.w	fp, #1
 802d4e4:	d159      	bne.n	802d59a <_scanf_i+0x126>
 802d4e6:	6862      	ldr	r2, [r4, #4]
 802d4e8:	b92a      	cbnz	r2, 802d4f6 <_scanf_i+0x82>
 802d4ea:	6822      	ldr	r2, [r4, #0]
 802d4ec:	2308      	movs	r3, #8
 802d4ee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 802d4f2:	6063      	str	r3, [r4, #4]
 802d4f4:	6022      	str	r2, [r4, #0]
 802d4f6:	6822      	ldr	r2, [r4, #0]
 802d4f8:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 802d4fc:	6022      	str	r2, [r4, #0]
 802d4fe:	68a2      	ldr	r2, [r4, #8]
 802d500:	1e51      	subs	r1, r2, #1
 802d502:	60a1      	str	r1, [r4, #8]
 802d504:	b192      	cbz	r2, 802d52c <_scanf_i+0xb8>
 802d506:	6832      	ldr	r2, [r6, #0]
 802d508:	1c51      	adds	r1, r2, #1
 802d50a:	6031      	str	r1, [r6, #0]
 802d50c:	7812      	ldrb	r2, [r2, #0]
 802d50e:	f805 2b01 	strb.w	r2, [r5], #1
 802d512:	6872      	ldr	r2, [r6, #4]
 802d514:	3a01      	subs	r2, #1
 802d516:	2a00      	cmp	r2, #0
 802d518:	6072      	str	r2, [r6, #4]
 802d51a:	dc07      	bgt.n	802d52c <_scanf_i+0xb8>
 802d51c:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 802d520:	4631      	mov	r1, r6
 802d522:	4650      	mov	r0, sl
 802d524:	4790      	blx	r2
 802d526:	2800      	cmp	r0, #0
 802d528:	f040 8085 	bne.w	802d636 <_scanf_i+0x1c2>
 802d52c:	f10b 0b01 	add.w	fp, fp, #1
 802d530:	f1bb 0f03 	cmp.w	fp, #3
 802d534:	d1cb      	bne.n	802d4ce <_scanf_i+0x5a>
 802d536:	6863      	ldr	r3, [r4, #4]
 802d538:	b90b      	cbnz	r3, 802d53e <_scanf_i+0xca>
 802d53a:	230a      	movs	r3, #10
 802d53c:	6063      	str	r3, [r4, #4]
 802d53e:	6863      	ldr	r3, [r4, #4]
 802d540:	4947      	ldr	r1, [pc, #284]	; (802d660 <_scanf_i+0x1ec>)
 802d542:	6960      	ldr	r0, [r4, #20]
 802d544:	1ac9      	subs	r1, r1, r3
 802d546:	f000 f8a7 	bl	802d698 <__sccl>
 802d54a:	f04f 0b00 	mov.w	fp, #0
 802d54e:	68a3      	ldr	r3, [r4, #8]
 802d550:	6822      	ldr	r2, [r4, #0]
 802d552:	2b00      	cmp	r3, #0
 802d554:	d03d      	beq.n	802d5d2 <_scanf_i+0x15e>
 802d556:	6831      	ldr	r1, [r6, #0]
 802d558:	6960      	ldr	r0, [r4, #20]
 802d55a:	f891 c000 	ldrb.w	ip, [r1]
 802d55e:	f810 000c 	ldrb.w	r0, [r0, ip]
 802d562:	2800      	cmp	r0, #0
 802d564:	d035      	beq.n	802d5d2 <_scanf_i+0x15e>
 802d566:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 802d56a:	d124      	bne.n	802d5b6 <_scanf_i+0x142>
 802d56c:	0510      	lsls	r0, r2, #20
 802d56e:	d522      	bpl.n	802d5b6 <_scanf_i+0x142>
 802d570:	f10b 0b01 	add.w	fp, fp, #1
 802d574:	f1b9 0f00 	cmp.w	r9, #0
 802d578:	d003      	beq.n	802d582 <_scanf_i+0x10e>
 802d57a:	3301      	adds	r3, #1
 802d57c:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 802d580:	60a3      	str	r3, [r4, #8]
 802d582:	6873      	ldr	r3, [r6, #4]
 802d584:	3b01      	subs	r3, #1
 802d586:	2b00      	cmp	r3, #0
 802d588:	6073      	str	r3, [r6, #4]
 802d58a:	dd1b      	ble.n	802d5c4 <_scanf_i+0x150>
 802d58c:	6833      	ldr	r3, [r6, #0]
 802d58e:	3301      	adds	r3, #1
 802d590:	6033      	str	r3, [r6, #0]
 802d592:	68a3      	ldr	r3, [r4, #8]
 802d594:	3b01      	subs	r3, #1
 802d596:	60a3      	str	r3, [r4, #8]
 802d598:	e7d9      	b.n	802d54e <_scanf_i+0xda>
 802d59a:	f1bb 0f02 	cmp.w	fp, #2
 802d59e:	d1ae      	bne.n	802d4fe <_scanf_i+0x8a>
 802d5a0:	6822      	ldr	r2, [r4, #0]
 802d5a2:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 802d5a6:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 802d5aa:	d1bf      	bne.n	802d52c <_scanf_i+0xb8>
 802d5ac:	2310      	movs	r3, #16
 802d5ae:	6063      	str	r3, [r4, #4]
 802d5b0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 802d5b4:	e7a2      	b.n	802d4fc <_scanf_i+0x88>
 802d5b6:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 802d5ba:	6022      	str	r2, [r4, #0]
 802d5bc:	780b      	ldrb	r3, [r1, #0]
 802d5be:	f805 3b01 	strb.w	r3, [r5], #1
 802d5c2:	e7de      	b.n	802d582 <_scanf_i+0x10e>
 802d5c4:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 802d5c8:	4631      	mov	r1, r6
 802d5ca:	4650      	mov	r0, sl
 802d5cc:	4798      	blx	r3
 802d5ce:	2800      	cmp	r0, #0
 802d5d0:	d0df      	beq.n	802d592 <_scanf_i+0x11e>
 802d5d2:	6823      	ldr	r3, [r4, #0]
 802d5d4:	05db      	lsls	r3, r3, #23
 802d5d6:	d50d      	bpl.n	802d5f4 <_scanf_i+0x180>
 802d5d8:	42bd      	cmp	r5, r7
 802d5da:	d909      	bls.n	802d5f0 <_scanf_i+0x17c>
 802d5dc:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 802d5e0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 802d5e4:	4632      	mov	r2, r6
 802d5e6:	4650      	mov	r0, sl
 802d5e8:	4798      	blx	r3
 802d5ea:	f105 39ff 	add.w	r9, r5, #4294967295	; 0xffffffff
 802d5ee:	464d      	mov	r5, r9
 802d5f0:	42bd      	cmp	r5, r7
 802d5f2:	d02d      	beq.n	802d650 <_scanf_i+0x1dc>
 802d5f4:	6822      	ldr	r2, [r4, #0]
 802d5f6:	f012 0210 	ands.w	r2, r2, #16
 802d5fa:	d113      	bne.n	802d624 <_scanf_i+0x1b0>
 802d5fc:	702a      	strb	r2, [r5, #0]
 802d5fe:	6863      	ldr	r3, [r4, #4]
 802d600:	9e01      	ldr	r6, [sp, #4]
 802d602:	4639      	mov	r1, r7
 802d604:	4650      	mov	r0, sl
 802d606:	47b0      	blx	r6
 802d608:	6821      	ldr	r1, [r4, #0]
 802d60a:	f8d8 3000 	ldr.w	r3, [r8]
 802d60e:	f011 0f20 	tst.w	r1, #32
 802d612:	d013      	beq.n	802d63c <_scanf_i+0x1c8>
 802d614:	1d1a      	adds	r2, r3, #4
 802d616:	f8c8 2000 	str.w	r2, [r8]
 802d61a:	681b      	ldr	r3, [r3, #0]
 802d61c:	6018      	str	r0, [r3, #0]
 802d61e:	68e3      	ldr	r3, [r4, #12]
 802d620:	3301      	adds	r3, #1
 802d622:	60e3      	str	r3, [r4, #12]
 802d624:	1bed      	subs	r5, r5, r7
 802d626:	44ab      	add	fp, r5
 802d628:	6925      	ldr	r5, [r4, #16]
 802d62a:	445d      	add	r5, fp
 802d62c:	6125      	str	r5, [r4, #16]
 802d62e:	2000      	movs	r0, #0
 802d630:	b007      	add	sp, #28
 802d632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d636:	f04f 0b00 	mov.w	fp, #0
 802d63a:	e7ca      	b.n	802d5d2 <_scanf_i+0x15e>
 802d63c:	1d1a      	adds	r2, r3, #4
 802d63e:	f8c8 2000 	str.w	r2, [r8]
 802d642:	681b      	ldr	r3, [r3, #0]
 802d644:	f011 0f01 	tst.w	r1, #1
 802d648:	bf14      	ite	ne
 802d64a:	8018      	strhne	r0, [r3, #0]
 802d64c:	6018      	streq	r0, [r3, #0]
 802d64e:	e7e6      	b.n	802d61e <_scanf_i+0x1aa>
 802d650:	2001      	movs	r0, #1
 802d652:	e7ed      	b.n	802d630 <_scanf_i+0x1bc>
 802d654:	0802e760 	.word	0x0802e760
 802d658:	08029241 	.word	0x08029241
 802d65c:	08029145 	.word	0x08029145
 802d660:	08032f26 	.word	0x08032f26

0802d664 <_read_r>:
 802d664:	b538      	push	{r3, r4, r5, lr}
 802d666:	4d07      	ldr	r5, [pc, #28]	; (802d684 <_read_r+0x20>)
 802d668:	4604      	mov	r4, r0
 802d66a:	4608      	mov	r0, r1
 802d66c:	4611      	mov	r1, r2
 802d66e:	2200      	movs	r2, #0
 802d670:	602a      	str	r2, [r5, #0]
 802d672:	461a      	mov	r2, r3
 802d674:	f7d5 fca4 	bl	8002fc0 <_read>
 802d678:	1c43      	adds	r3, r0, #1
 802d67a:	d102      	bne.n	802d682 <_read_r+0x1e>
 802d67c:	682b      	ldr	r3, [r5, #0]
 802d67e:	b103      	cbz	r3, 802d682 <_read_r+0x1e>
 802d680:	6023      	str	r3, [r4, #0]
 802d682:	bd38      	pop	{r3, r4, r5, pc}
 802d684:	200042d4 	.word	0x200042d4

0802d688 <nan>:
 802d688:	ed9f 0b01 	vldr	d0, [pc, #4]	; 802d690 <nan+0x8>
 802d68c:	4770      	bx	lr
 802d68e:	bf00      	nop
 802d690:	00000000 	.word	0x00000000
 802d694:	7ff80000 	.word	0x7ff80000

0802d698 <__sccl>:
 802d698:	b570      	push	{r4, r5, r6, lr}
 802d69a:	780b      	ldrb	r3, [r1, #0]
 802d69c:	4604      	mov	r4, r0
 802d69e:	2b5e      	cmp	r3, #94	; 0x5e
 802d6a0:	bf0b      	itete	eq
 802d6a2:	784b      	ldrbeq	r3, [r1, #1]
 802d6a4:	1c48      	addne	r0, r1, #1
 802d6a6:	1c88      	addeq	r0, r1, #2
 802d6a8:	2200      	movne	r2, #0
 802d6aa:	bf08      	it	eq
 802d6ac:	2201      	moveq	r2, #1
 802d6ae:	1e61      	subs	r1, r4, #1
 802d6b0:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 802d6b4:	f801 2f01 	strb.w	r2, [r1, #1]!
 802d6b8:	42a9      	cmp	r1, r5
 802d6ba:	d1fb      	bne.n	802d6b4 <__sccl+0x1c>
 802d6bc:	b90b      	cbnz	r3, 802d6c2 <__sccl+0x2a>
 802d6be:	3801      	subs	r0, #1
 802d6c0:	bd70      	pop	{r4, r5, r6, pc}
 802d6c2:	f082 0201 	eor.w	r2, r2, #1
 802d6c6:	54e2      	strb	r2, [r4, r3]
 802d6c8:	4605      	mov	r5, r0
 802d6ca:	4628      	mov	r0, r5
 802d6cc:	f810 1b01 	ldrb.w	r1, [r0], #1
 802d6d0:	292d      	cmp	r1, #45	; 0x2d
 802d6d2:	d006      	beq.n	802d6e2 <__sccl+0x4a>
 802d6d4:	295d      	cmp	r1, #93	; 0x5d
 802d6d6:	d0f3      	beq.n	802d6c0 <__sccl+0x28>
 802d6d8:	b909      	cbnz	r1, 802d6de <__sccl+0x46>
 802d6da:	4628      	mov	r0, r5
 802d6dc:	e7f0      	b.n	802d6c0 <__sccl+0x28>
 802d6de:	460b      	mov	r3, r1
 802d6e0:	e7f1      	b.n	802d6c6 <__sccl+0x2e>
 802d6e2:	786e      	ldrb	r6, [r5, #1]
 802d6e4:	2e5d      	cmp	r6, #93	; 0x5d
 802d6e6:	d0fa      	beq.n	802d6de <__sccl+0x46>
 802d6e8:	42b3      	cmp	r3, r6
 802d6ea:	dcf8      	bgt.n	802d6de <__sccl+0x46>
 802d6ec:	3502      	adds	r5, #2
 802d6ee:	4619      	mov	r1, r3
 802d6f0:	3101      	adds	r1, #1
 802d6f2:	428e      	cmp	r6, r1
 802d6f4:	5462      	strb	r2, [r4, r1]
 802d6f6:	dcfb      	bgt.n	802d6f0 <__sccl+0x58>
 802d6f8:	1af1      	subs	r1, r6, r3
 802d6fa:	3901      	subs	r1, #1
 802d6fc:	1c58      	adds	r0, r3, #1
 802d6fe:	42b3      	cmp	r3, r6
 802d700:	bfa8      	it	ge
 802d702:	2100      	movge	r1, #0
 802d704:	1843      	adds	r3, r0, r1
 802d706:	e7e0      	b.n	802d6ca <__sccl+0x32>

0802d708 <sniprintf>:
 802d708:	b40c      	push	{r2, r3}
 802d70a:	b530      	push	{r4, r5, lr}
 802d70c:	4b17      	ldr	r3, [pc, #92]	; (802d76c <sniprintf+0x64>)
 802d70e:	1e0c      	subs	r4, r1, #0
 802d710:	681d      	ldr	r5, [r3, #0]
 802d712:	b09d      	sub	sp, #116	; 0x74
 802d714:	da08      	bge.n	802d728 <sniprintf+0x20>
 802d716:	238b      	movs	r3, #139	; 0x8b
 802d718:	602b      	str	r3, [r5, #0]
 802d71a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802d71e:	b01d      	add	sp, #116	; 0x74
 802d720:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802d724:	b002      	add	sp, #8
 802d726:	4770      	bx	lr
 802d728:	f44f 7302 	mov.w	r3, #520	; 0x208
 802d72c:	f8ad 3014 	strh.w	r3, [sp, #20]
 802d730:	bf14      	ite	ne
 802d732:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
 802d736:	4623      	moveq	r3, r4
 802d738:	9304      	str	r3, [sp, #16]
 802d73a:	9307      	str	r3, [sp, #28]
 802d73c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802d740:	9002      	str	r0, [sp, #8]
 802d742:	9006      	str	r0, [sp, #24]
 802d744:	f8ad 3016 	strh.w	r3, [sp, #22]
 802d748:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802d74a:	ab21      	add	r3, sp, #132	; 0x84
 802d74c:	a902      	add	r1, sp, #8
 802d74e:	4628      	mov	r0, r5
 802d750:	9301      	str	r3, [sp, #4]
 802d752:	f7ff fa09 	bl	802cb68 <_svfiprintf_r>
 802d756:	1c43      	adds	r3, r0, #1
 802d758:	bfbc      	itt	lt
 802d75a:	238b      	movlt	r3, #139	; 0x8b
 802d75c:	602b      	strlt	r3, [r5, #0]
 802d75e:	2c00      	cmp	r4, #0
 802d760:	d0dd      	beq.n	802d71e <sniprintf+0x16>
 802d762:	9b02      	ldr	r3, [sp, #8]
 802d764:	2200      	movs	r2, #0
 802d766:	701a      	strb	r2, [r3, #0]
 802d768:	e7d9      	b.n	802d71e <sniprintf+0x16>
 802d76a:	bf00      	nop
 802d76c:	200000bc 	.word	0x200000bc

0802d770 <strncmp>:
 802d770:	b510      	push	{r4, lr}
 802d772:	b17a      	cbz	r2, 802d794 <strncmp+0x24>
 802d774:	4603      	mov	r3, r0
 802d776:	3901      	subs	r1, #1
 802d778:	1884      	adds	r4, r0, r2
 802d77a:	f813 0b01 	ldrb.w	r0, [r3], #1
 802d77e:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 802d782:	4290      	cmp	r0, r2
 802d784:	d101      	bne.n	802d78a <strncmp+0x1a>
 802d786:	42a3      	cmp	r3, r4
 802d788:	d101      	bne.n	802d78e <strncmp+0x1e>
 802d78a:	1a80      	subs	r0, r0, r2
 802d78c:	bd10      	pop	{r4, pc}
 802d78e:	2800      	cmp	r0, #0
 802d790:	d1f3      	bne.n	802d77a <strncmp+0xa>
 802d792:	e7fa      	b.n	802d78a <strncmp+0x1a>
 802d794:	4610      	mov	r0, r2
 802d796:	e7f9      	b.n	802d78c <strncmp+0x1c>

0802d798 <swprintf>:
 802d798:	b40c      	push	{r2, r3}
 802d79a:	b530      	push	{r4, r5, lr}
 802d79c:	4b17      	ldr	r3, [pc, #92]	; (802d7fc <swprintf+0x64>)
 802d79e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
 802d7a2:	681d      	ldr	r5, [r3, #0]
 802d7a4:	b09d      	sub	sp, #116	; 0x74
 802d7a6:	460c      	mov	r4, r1
 802d7a8:	d308      	bcc.n	802d7bc <swprintf+0x24>
 802d7aa:	238b      	movs	r3, #139	; 0x8b
 802d7ac:	602b      	str	r3, [r5, #0]
 802d7ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802d7b2:	b01d      	add	sp, #116	; 0x74
 802d7b4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802d7b8:	b002      	add	sp, #8
 802d7ba:	4770      	bx	lr
 802d7bc:	f44f 7302 	mov.w	r3, #520	; 0x208
 802d7c0:	f8ad 3014 	strh.w	r3, [sp, #20]
 802d7c4:	9002      	str	r0, [sp, #8]
 802d7c6:	9006      	str	r0, [sp, #24]
 802d7c8:	b1b1      	cbz	r1, 802d7f8 <swprintf+0x60>
 802d7ca:	1e4b      	subs	r3, r1, #1
 802d7cc:	009b      	lsls	r3, r3, #2
 802d7ce:	9304      	str	r3, [sp, #16]
 802d7d0:	9307      	str	r3, [sp, #28]
 802d7d2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802d7d6:	f8ad 3016 	strh.w	r3, [sp, #22]
 802d7da:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802d7dc:	ab21      	add	r3, sp, #132	; 0x84
 802d7de:	a902      	add	r1, sp, #8
 802d7e0:	4628      	mov	r0, r5
 802d7e2:	9301      	str	r3, [sp, #4]
 802d7e4:	f000 f968 	bl	802dab8 <_svfwprintf_r>
 802d7e8:	2c00      	cmp	r4, #0
 802d7ea:	d0de      	beq.n	802d7aa <swprintf+0x12>
 802d7ec:	9b02      	ldr	r3, [sp, #8]
 802d7ee:	2200      	movs	r2, #0
 802d7f0:	42a0      	cmp	r0, r4
 802d7f2:	601a      	str	r2, [r3, #0]
 802d7f4:	d3dd      	bcc.n	802d7b2 <swprintf+0x1a>
 802d7f6:	e7d8      	b.n	802d7aa <swprintf+0x12>
 802d7f8:	460b      	mov	r3, r1
 802d7fa:	e7e8      	b.n	802d7ce <swprintf+0x36>
 802d7fc:	200000bc 	.word	0x200000bc

0802d800 <__tzcalc_limits>:
 802d800:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d804:	4605      	mov	r5, r0
 802d806:	f7fe fbc5 	bl	802bf94 <__gettzinfo>
 802d80a:	f240 73b1 	movw	r3, #1969	; 0x7b1
 802d80e:	429d      	cmp	r5, r3
 802d810:	f340 8099 	ble.w	802d946 <__tzcalc_limits+0x146>
 802d814:	f46f 62f6 	mvn.w	r2, #1968	; 0x7b0
 802d818:	18ac      	adds	r4, r5, r2
 802d81a:	f2a5 73b2 	subw	r3, r5, #1970	; 0x7b2
 802d81e:	f240 126d 	movw	r2, #365	; 0x16d
 802d822:	10a4      	asrs	r4, r4, #2
 802d824:	fb02 4403 	mla	r4, r2, r3, r4
 802d828:	f06f 0263 	mvn.w	r2, #99	; 0x63
 802d82c:	f2a5 736d 	subw	r3, r5, #1901	; 0x76d
 802d830:	fb93 f3f2 	sdiv	r3, r3, r2
 802d834:	441c      	add	r4, r3
 802d836:	f44f 73c8 	mov.w	r3, #400	; 0x190
 802d83a:	f46f 61c8 	mvn.w	r1, #1600	; 0x640
 802d83e:	fb95 fcf3 	sdiv	ip, r5, r3
 802d842:	fb03 5c1c 	mls	ip, r3, ip, r5
 802d846:	186a      	adds	r2, r5, r1
 802d848:	fabc f68c 	clz	r6, ip
 802d84c:	fbb2 f2f3 	udiv	r2, r2, r3
 802d850:	f005 0303 	and.w	r3, r5, #3
 802d854:	4414      	add	r4, r2
 802d856:	2264      	movs	r2, #100	; 0x64
 802d858:	6045      	str	r5, [r0, #4]
 802d85a:	fb95 f7f2 	sdiv	r7, r5, r2
 802d85e:	0976      	lsrs	r6, r6, #5
 802d860:	fb02 5717 	mls	r7, r2, r7, r5
 802d864:	4601      	mov	r1, r0
 802d866:	f100 0b50 	add.w	fp, r0, #80	; 0x50
 802d86a:	9300      	str	r3, [sp, #0]
 802d86c:	f04f 0a07 	mov.w	sl, #7
 802d870:	7a0d      	ldrb	r5, [r1, #8]
 802d872:	694b      	ldr	r3, [r1, #20]
 802d874:	2d4a      	cmp	r5, #74	; 0x4a
 802d876:	d12d      	bne.n	802d8d4 <__tzcalc_limits+0xd4>
 802d878:	9a00      	ldr	r2, [sp, #0]
 802d87a:	eb04 0e03 	add.w	lr, r4, r3
 802d87e:	b902      	cbnz	r2, 802d882 <__tzcalc_limits+0x82>
 802d880:	b917      	cbnz	r7, 802d888 <__tzcalc_limits+0x88>
 802d882:	f1bc 0f00 	cmp.w	ip, #0
 802d886:	d123      	bne.n	802d8d0 <__tzcalc_limits+0xd0>
 802d888:	2b3b      	cmp	r3, #59	; 0x3b
 802d88a:	bfd4      	ite	le
 802d88c:	2300      	movle	r3, #0
 802d88e:	2301      	movgt	r3, #1
 802d890:	4473      	add	r3, lr
 802d892:	3b01      	subs	r3, #1
 802d894:	698d      	ldr	r5, [r1, #24]
 802d896:	4a2d      	ldr	r2, [pc, #180]	; (802d94c <__tzcalc_limits+0x14c>)
 802d898:	ea4f 7ee5 	mov.w	lr, r5, asr #31
 802d89c:	fbc3 5e02 	smlal	r5, lr, r3, r2
 802d8a0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 802d8a2:	18ed      	adds	r5, r5, r3
 802d8a4:	eb4e 73e3 	adc.w	r3, lr, r3, asr #31
 802d8a8:	e9c1 5308 	strd	r5, r3, [r1, #32]
 802d8ac:	3128      	adds	r1, #40	; 0x28
 802d8ae:	458b      	cmp	fp, r1
 802d8b0:	d1de      	bne.n	802d870 <__tzcalc_limits+0x70>
 802d8b2:	e9d0 1312 	ldrd	r1, r3, [r0, #72]	; 0x48
 802d8b6:	e9d0 4208 	ldrd	r4, r2, [r0, #32]
 802d8ba:	428c      	cmp	r4, r1
 802d8bc:	eb72 0303 	sbcs.w	r3, r2, r3
 802d8c0:	bfb4      	ite	lt
 802d8c2:	2301      	movlt	r3, #1
 802d8c4:	2300      	movge	r3, #0
 802d8c6:	6003      	str	r3, [r0, #0]
 802d8c8:	2001      	movs	r0, #1
 802d8ca:	b003      	add	sp, #12
 802d8cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d8d0:	2300      	movs	r3, #0
 802d8d2:	e7dd      	b.n	802d890 <__tzcalc_limits+0x90>
 802d8d4:	2d44      	cmp	r5, #68	; 0x44
 802d8d6:	d101      	bne.n	802d8dc <__tzcalc_limits+0xdc>
 802d8d8:	4423      	add	r3, r4
 802d8da:	e7db      	b.n	802d894 <__tzcalc_limits+0x94>
 802d8dc:	9a00      	ldr	r2, [sp, #0]
 802d8de:	bb62      	cbnz	r2, 802d93a <__tzcalc_limits+0x13a>
 802d8e0:	2f00      	cmp	r7, #0
 802d8e2:	bf0c      	ite	eq
 802d8e4:	4635      	moveq	r5, r6
 802d8e6:	2501      	movne	r5, #1
 802d8e8:	68ca      	ldr	r2, [r1, #12]
 802d8ea:	9201      	str	r2, [sp, #4]
 802d8ec:	4a18      	ldr	r2, [pc, #96]	; (802d950 <__tzcalc_limits+0x150>)
 802d8ee:	f04f 0930 	mov.w	r9, #48	; 0x30
 802d8f2:	fb09 2505 	mla	r5, r9, r5, r2
 802d8f6:	46a6      	mov	lr, r4
 802d8f8:	f04f 0800 	mov.w	r8, #0
 802d8fc:	3d04      	subs	r5, #4
 802d8fe:	9a01      	ldr	r2, [sp, #4]
 802d900:	f108 0801 	add.w	r8, r8, #1
 802d904:	4542      	cmp	r2, r8
 802d906:	f855 9028 	ldr.w	r9, [r5, r8, lsl #2]
 802d90a:	dc18      	bgt.n	802d93e <__tzcalc_limits+0x13e>
 802d90c:	f10e 0504 	add.w	r5, lr, #4
 802d910:	fb95 f8fa 	sdiv	r8, r5, sl
 802d914:	ebc8 08c8 	rsb	r8, r8, r8, lsl #3
 802d918:	eba5 0808 	sub.w	r8, r5, r8
 802d91c:	ebb3 0808 	subs.w	r8, r3, r8
 802d920:	690b      	ldr	r3, [r1, #16]
 802d922:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 802d926:	bf48      	it	mi
 802d928:	f108 0807 	addmi.w	r8, r8, #7
 802d92c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 802d930:	4443      	add	r3, r8
 802d932:	454b      	cmp	r3, r9
 802d934:	da05      	bge.n	802d942 <__tzcalc_limits+0x142>
 802d936:	4473      	add	r3, lr
 802d938:	e7ac      	b.n	802d894 <__tzcalc_limits+0x94>
 802d93a:	4635      	mov	r5, r6
 802d93c:	e7d4      	b.n	802d8e8 <__tzcalc_limits+0xe8>
 802d93e:	44ce      	add	lr, r9
 802d940:	e7dd      	b.n	802d8fe <__tzcalc_limits+0xfe>
 802d942:	3b07      	subs	r3, #7
 802d944:	e7f5      	b.n	802d932 <__tzcalc_limits+0x132>
 802d946:	2000      	movs	r0, #0
 802d948:	e7bf      	b.n	802d8ca <__tzcalc_limits+0xca>
 802d94a:	bf00      	nop
 802d94c:	00015180 	.word	0x00015180
 802d950:	08032f28 	.word	0x08032f28

0802d954 <wcscmp>:
 802d954:	1f03      	subs	r3, r0, #4
 802d956:	f853 0f04 	ldr.w	r0, [r3, #4]!
 802d95a:	f851 2b04 	ldr.w	r2, [r1], #4
 802d95e:	4290      	cmp	r0, r2
 802d960:	d001      	beq.n	802d966 <wcscmp+0x12>
 802d962:	1a80      	subs	r0, r0, r2
 802d964:	e001      	b.n	802d96a <wcscmp+0x16>
 802d966:	2800      	cmp	r0, #0
 802d968:	d1f5      	bne.n	802d956 <wcscmp+0x2>
 802d96a:	4770      	bx	lr

0802d96c <wcscpy>:
 802d96c:	2300      	movs	r3, #0
 802d96e:	6003      	str	r3, [r0, #0]
 802d970:	3904      	subs	r1, #4
 802d972:	4603      	mov	r3, r0
 802d974:	f851 2f04 	ldr.w	r2, [r1, #4]!
 802d978:	b90a      	cbnz	r2, 802d97e <wcscpy+0x12>
 802d97a:	601a      	str	r2, [r3, #0]
 802d97c:	4770      	bx	lr
 802d97e:	f843 2b04 	str.w	r2, [r3], #4
 802d982:	e7f7      	b.n	802d974 <wcscpy+0x8>

0802d984 <wcslcpy>:
 802d984:	b510      	push	{r4, lr}
 802d986:	460b      	mov	r3, r1
 802d988:	b16a      	cbz	r2, 802d9a6 <wcslcpy+0x22>
 802d98a:	3a01      	subs	r2, #1
 802d98c:	d009      	beq.n	802d9a2 <wcslcpy+0x1e>
 802d98e:	f853 4b04 	ldr.w	r4, [r3], #4
 802d992:	f840 4b04 	str.w	r4, [r0], #4
 802d996:	2c00      	cmp	r4, #0
 802d998:	d1f7      	bne.n	802d98a <wcslcpy+0x6>
 802d99a:	1a58      	subs	r0, r3, r1
 802d99c:	1080      	asrs	r0, r0, #2
 802d99e:	3801      	subs	r0, #1
 802d9a0:	bd10      	pop	{r4, pc}
 802d9a2:	2200      	movs	r2, #0
 802d9a4:	6002      	str	r2, [r0, #0]
 802d9a6:	f853 2b04 	ldr.w	r2, [r3], #4
 802d9aa:	2a00      	cmp	r2, #0
 802d9ac:	d1fb      	bne.n	802d9a6 <wcslcpy+0x22>
 802d9ae:	e7f4      	b.n	802d99a <wcslcpy+0x16>

0802d9b0 <__env_lock>:
 802d9b0:	4801      	ldr	r0, [pc, #4]	; (802d9b8 <__env_lock+0x8>)
 802d9b2:	f7f8 b9e3 	b.w	8025d7c <__retarget_lock_acquire_recursive>
 802d9b6:	bf00      	nop
 802d9b8:	200042c4 	.word	0x200042c4

0802d9bc <__env_unlock>:
 802d9bc:	4801      	ldr	r0, [pc, #4]	; (802d9c4 <__env_unlock+0x8>)
 802d9be:	f7f8 b9df 	b.w	8025d80 <__retarget_lock_release_recursive>
 802d9c2:	bf00      	nop
 802d9c4:	200042c4 	.word	0x200042c4

0802d9c8 <_malloc_usable_size_r>:
 802d9c8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802d9cc:	1f18      	subs	r0, r3, #4
 802d9ce:	2b00      	cmp	r3, #0
 802d9d0:	bfbc      	itt	lt
 802d9d2:	580b      	ldrlt	r3, [r1, r0]
 802d9d4:	18c0      	addlt	r0, r0, r3
 802d9d6:	4770      	bx	lr

0802d9d8 <wcvt>:
 802d9d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d9dc:	b085      	sub	sp, #20
 802d9de:	2b00      	cmp	r3, #0
 802d9e0:	461d      	mov	r5, r3
 802d9e2:	4614      	mov	r4, r2
 802d9e4:	bfbc      	itt	lt
 802d9e6:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 802d9ea:	4614      	movlt	r4, r2
 802d9ec:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802d9ee:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 802d9f0:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
 802d9f4:	f8dd b04c 	ldr.w	fp, [sp, #76]	; 0x4c
 802d9f8:	bfb6      	itet	lt
 802d9fa:	461d      	movlt	r5, r3
 802d9fc:	2300      	movge	r3, #0
 802d9fe:	232d      	movlt	r3, #45	; 0x2d
 802da00:	6013      	str	r3, [r2, #0]
 802da02:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802da04:	f023 0820 	bic.w	r8, r3, #32
 802da08:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 802da0c:	d005      	beq.n	802da1a <wcvt+0x42>
 802da0e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 802da12:	d100      	bne.n	802da16 <wcvt+0x3e>
 802da14:	3601      	adds	r6, #1
 802da16:	2102      	movs	r1, #2
 802da18:	e000      	b.n	802da1c <wcvt+0x44>
 802da1a:	2103      	movs	r1, #3
 802da1c:	ab03      	add	r3, sp, #12
 802da1e:	9301      	str	r3, [sp, #4]
 802da20:	ab02      	add	r3, sp, #8
 802da22:	9300      	str	r3, [sp, #0]
 802da24:	ec45 4b10 	vmov	d0, r4, r5
 802da28:	4653      	mov	r3, sl
 802da2a:	4632      	mov	r2, r6
 802da2c:	f7fc ffe0 	bl	802a9f0 <_dtoa_r>
 802da30:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 802da34:	4607      	mov	r7, r0
 802da36:	d112      	bne.n	802da5e <wcvt+0x86>
 802da38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802da3a:	07db      	lsls	r3, r3, #31
 802da3c:	d40f      	bmi.n	802da5e <wcvt+0x86>
 802da3e:	9b03      	ldr	r3, [sp, #12]
 802da40:	1bdb      	subs	r3, r3, r7
 802da42:	f8cb 3000 	str.w	r3, [fp]
 802da46:	2300      	movs	r3, #0
 802da48:	f8db 2000 	ldr.w	r2, [fp]
 802da4c:	429a      	cmp	r2, r3
 802da4e:	dd02      	ble.n	802da56 <wcvt+0x7e>
 802da50:	9a15      	ldr	r2, [sp, #84]	; 0x54
 802da52:	4293      	cmp	r3, r2
 802da54:	db2a      	blt.n	802daac <wcvt+0xd4>
 802da56:	9814      	ldr	r0, [sp, #80]	; 0x50
 802da58:	b005      	add	sp, #20
 802da5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802da5e:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 802da62:	eb07 0906 	add.w	r9, r7, r6
 802da66:	d110      	bne.n	802da8a <wcvt+0xb2>
 802da68:	783b      	ldrb	r3, [r7, #0]
 802da6a:	2b30      	cmp	r3, #48	; 0x30
 802da6c:	d10a      	bne.n	802da84 <wcvt+0xac>
 802da6e:	2200      	movs	r2, #0
 802da70:	2300      	movs	r3, #0
 802da72:	4620      	mov	r0, r4
 802da74:	4629      	mov	r1, r5
 802da76:	f7d3 f831 	bl	8000adc <__aeabi_dcmpeq>
 802da7a:	b918      	cbnz	r0, 802da84 <wcvt+0xac>
 802da7c:	f1c6 0601 	rsb	r6, r6, #1
 802da80:	f8ca 6000 	str.w	r6, [sl]
 802da84:	f8da 3000 	ldr.w	r3, [sl]
 802da88:	4499      	add	r9, r3
 802da8a:	2200      	movs	r2, #0
 802da8c:	2300      	movs	r3, #0
 802da8e:	4620      	mov	r0, r4
 802da90:	4629      	mov	r1, r5
 802da92:	f7d3 f823 	bl	8000adc <__aeabi_dcmpeq>
 802da96:	b108      	cbz	r0, 802da9c <wcvt+0xc4>
 802da98:	f8cd 900c 	str.w	r9, [sp, #12]
 802da9c:	2230      	movs	r2, #48	; 0x30
 802da9e:	9b03      	ldr	r3, [sp, #12]
 802daa0:	454b      	cmp	r3, r9
 802daa2:	d2cc      	bcs.n	802da3e <wcvt+0x66>
 802daa4:	1c59      	adds	r1, r3, #1
 802daa6:	9103      	str	r1, [sp, #12]
 802daa8:	701a      	strb	r2, [r3, #0]
 802daaa:	e7f8      	b.n	802da9e <wcvt+0xc6>
 802daac:	9914      	ldr	r1, [sp, #80]	; 0x50
 802daae:	5cfa      	ldrb	r2, [r7, r3]
 802dab0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 802dab4:	3301      	adds	r3, #1
 802dab6:	e7c7      	b.n	802da48 <wcvt+0x70>

0802dab8 <_svfwprintf_r>:
 802dab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802dabc:	ed2d 8b04 	vpush	{d8-d9}
 802dac0:	b0d3      	sub	sp, #332	; 0x14c
 802dac2:	461d      	mov	r5, r3
 802dac4:	2300      	movs	r3, #0
 802dac6:	4689      	mov	r9, r1
 802dac8:	9319      	str	r3, [sp, #100]	; 0x64
 802daca:	4683      	mov	fp, r0
 802dacc:	920b      	str	r2, [sp, #44]	; 0x2c
 802dace:	f7fe fab9 	bl	802c044 <_localeconv_r>
 802dad2:	6803      	ldr	r3, [r0, #0]
 802dad4:	781b      	ldrb	r3, [r3, #0]
 802dad6:	9316      	str	r3, [sp, #88]	; 0x58
 802dad8:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 802dadc:	061e      	lsls	r6, r3, #24
 802dade:	d51a      	bpl.n	802db16 <_svfwprintf_r+0x5e>
 802dae0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 802dae4:	b9bb      	cbnz	r3, 802db16 <_svfwprintf_r+0x5e>
 802dae6:	2140      	movs	r1, #64	; 0x40
 802dae8:	4658      	mov	r0, fp
 802daea:	f7f8 faa5 	bl	8026038 <_malloc_r>
 802daee:	f8c9 0000 	str.w	r0, [r9]
 802daf2:	f8c9 0010 	str.w	r0, [r9, #16]
 802daf6:	b958      	cbnz	r0, 802db10 <_svfwprintf_r+0x58>
 802daf8:	230c      	movs	r3, #12
 802dafa:	f8cb 3000 	str.w	r3, [fp]
 802dafe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 802db02:	930d      	str	r3, [sp, #52]	; 0x34
 802db04:	980d      	ldr	r0, [sp, #52]	; 0x34
 802db06:	b053      	add	sp, #332	; 0x14c
 802db08:	ecbd 8b04 	vpop	{d8-d9}
 802db0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802db10:	2340      	movs	r3, #64	; 0x40
 802db12:	f8c9 3014 	str.w	r3, [r9, #20]
 802db16:	ed9f 7b8e 	vldr	d7, [pc, #568]	; 802dd50 <_svfwprintf_r+0x298>
 802db1a:	2300      	movs	r3, #0
 802db1c:	930f      	str	r3, [sp, #60]	; 0x3c
 802db1e:	9311      	str	r3, [sp, #68]	; 0x44
 802db20:	930d      	str	r3, [sp, #52]	; 0x34
 802db22:	eeb0 8a47 	vmov.f32	s16, s14
 802db26:	eef0 8a67 	vmov.f32	s17, s15
 802db2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802db2c:	461c      	mov	r4, r3
 802db2e:	f853 2b04 	ldr.w	r2, [r3], #4
 802db32:	b10a      	cbz	r2, 802db38 <_svfwprintf_r+0x80>
 802db34:	2a25      	cmp	r2, #37	; 0x25
 802db36:	d1f9      	bne.n	802db2c <_svfwprintf_r+0x74>
 802db38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802db3a:	42a3      	cmp	r3, r4
 802db3c:	d00d      	beq.n	802db5a <_svfwprintf_r+0xa2>
 802db3e:	1ae6      	subs	r6, r4, r3
 802db40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802db42:	4633      	mov	r3, r6
 802db44:	4649      	mov	r1, r9
 802db46:	4658      	mov	r0, fp
 802db48:	f7fe ffb2 	bl	802cab0 <__ssputs_r>
 802db4c:	3001      	adds	r0, #1
 802db4e:	f000 80e9 	beq.w	802dd24 <_svfwprintf_r+0x26c>
 802db52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802db54:	eb03 03a6 	add.w	r3, r3, r6, asr #2
 802db58:	930d      	str	r3, [sp, #52]	; 0x34
 802db5a:	6823      	ldr	r3, [r4, #0]
 802db5c:	2b00      	cmp	r3, #0
 802db5e:	f000 80e1 	beq.w	802dd24 <_svfwprintf_r+0x26c>
 802db62:	2100      	movs	r1, #0
 802db64:	1d22      	adds	r2, r4, #4
 802db66:	9115      	str	r1, [sp, #84]	; 0x54
 802db68:	460e      	mov	r6, r1
 802db6a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 802db6e:	910c      	str	r1, [sp, #48]	; 0x30
 802db70:	460f      	mov	r7, r1
 802db72:	200a      	movs	r0, #10
 802db74:	4613      	mov	r3, r2
 802db76:	f853 2b04 	ldr.w	r2, [r3], #4
 802db7a:	9209      	str	r2, [sp, #36]	; 0x24
 802db7c:	930b      	str	r3, [sp, #44]	; 0x2c
 802db7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802db80:	2b39      	cmp	r3, #57	; 0x39
 802db82:	d84c      	bhi.n	802dc1e <_svfwprintf_r+0x166>
 802db84:	2b1f      	cmp	r3, #31
 802db86:	d94f      	bls.n	802dc28 <_svfwprintf_r+0x170>
 802db88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802db8a:	3b20      	subs	r3, #32
 802db8c:	2b19      	cmp	r3, #25
 802db8e:	d84a      	bhi.n	802dc26 <_svfwprintf_r+0x16e>
 802db90:	e8df f003 	tbb	[pc, r3]
 802db94:	7049496b 	.word	0x7049496b
 802db98:	49494949 	.word	0x49494949
 802db9c:	6c734949 	.word	0x6c734949
 802dba0:	497d7a49 	.word	0x497d7a49
 802dba4:	9b9b9b98 	.word	0x9b9b9b98
 802dba8:	9b9b9b9b 	.word	0x9b9b9b9b
 802dbac:	9b9b      	.short	0x9b9b
 802dbae:	2b33      	cmp	r3, #51	; 0x33
 802dbb0:	d839      	bhi.n	802dc26 <_svfwprintf_r+0x16e>
 802dbb2:	e8df f013 	tbh	[pc, r3, lsl #1]
 802dbb6:	00e5      	.short	0x00e5
 802dbb8:	00e50038 	.word	0x00e50038
 802dbbc:	00380038 	.word	0x00380038
 802dbc0:	00380038 	.word	0x00380038
 802dbc4:	0038009c 	.word	0x0038009c
 802dbc8:	00380038 	.word	0x00380038
 802dbcc:	00380038 	.word	0x00380038
 802dbd0:	00380038 	.word	0x00380038
 802dbd4:	00380038 	.word	0x00380038
 802dbd8:	00380038 	.word	0x00380038
 802dbdc:	0038031e 	.word	0x0038031e
 802dbe0:	00380038 	.word	0x00380038
 802dbe4:	00380038 	.word	0x00380038
 802dbe8:	00380038 	.word	0x00380038
 802dbec:	00380038 	.word	0x00380038
 802dbf0:	00a50038 	.word	0x00a50038
 802dbf4:	00e500d3 	.word	0x00e500d3
 802dbf8:	00e500e5 	.word	0x00e500e5
 802dbfc:	00d3009f 	.word	0x00d3009f
 802dc00:	00380038 	.word	0x00380038
 802dc04:	003800a2 	.word	0x003800a2
 802dc08:	02950284 	.word	0x02950284
 802dc0c:	00a202b3 	.word	0x00a202b3
 802dc10:	02c20038 	.word	0x02c20038
 802dc14:	03120038 	.word	0x03120038
 802dc18:	00380038 	.word	0x00380038
 802dc1c:	0042      	.short	0x0042
 802dc1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802dc20:	3b45      	subs	r3, #69	; 0x45
 802dc22:	2b33      	cmp	r3, #51	; 0x33
 802dc24:	d9c3      	bls.n	802dbae <_svfwprintf_r+0xf6>
 802dc26:	b111      	cbz	r1, 802dc2e <_svfwprintf_r+0x176>
 802dc28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802dc2a:	2b00      	cmp	r3, #0
 802dc2c:	d07a      	beq.n	802dd24 <_svfwprintf_r+0x26c>
 802dc2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802dc30:	932a      	str	r3, [sp, #168]	; 0xa8
 802dc32:	2000      	movs	r0, #0
 802dc34:	9015      	str	r0, [sp, #84]	; 0x54
 802dc36:	950a      	str	r5, [sp, #40]	; 0x28
 802dc38:	e081      	b.n	802dd3e <_svfwprintf_r+0x286>
 802dc3a:	b101      	cbz	r1, 802dc3e <_svfwprintf_r+0x186>
 802dc3c:	9615      	str	r6, [sp, #84]	; 0x54
 802dc3e:	4b46      	ldr	r3, [pc, #280]	; (802dd58 <_svfwprintf_r+0x2a0>)
 802dc40:	930f      	str	r3, [sp, #60]	; 0x3c
 802dc42:	462a      	mov	r2, r5
 802dc44:	06f8      	lsls	r0, r7, #27
 802dc46:	f852 3b04 	ldr.w	r3, [r2], #4
 802dc4a:	920a      	str	r2, [sp, #40]	; 0x28
 802dc4c:	d402      	bmi.n	802dc54 <_svfwprintf_r+0x19c>
 802dc4e:	0679      	lsls	r1, r7, #25
 802dc50:	bf48      	it	mi
 802dc52:	b29b      	uxthmi	r3, r3
 802dc54:	07fa      	lsls	r2, r7, #31
 802dc56:	d506      	bpl.n	802dc66 <_svfwprintf_r+0x1ae>
 802dc58:	b12b      	cbz	r3, 802dc66 <_svfwprintf_r+0x1ae>
 802dc5a:	2230      	movs	r2, #48	; 0x30
 802dc5c:	921a      	str	r2, [sp, #104]	; 0x68
 802dc5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802dc60:	921b      	str	r2, [sp, #108]	; 0x6c
 802dc62:	f047 0702 	orr.w	r7, r7, #2
 802dc66:	2202      	movs	r2, #2
 802dc68:	e242      	b.n	802e0f0 <_svfwprintf_r+0x638>
 802dc6a:	b90e      	cbnz	r6, 802dc70 <_svfwprintf_r+0x1b8>
 802dc6c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 802dc6e:	2101      	movs	r1, #1
 802dc70:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802dc72:	e77f      	b.n	802db74 <_svfwprintf_r+0xbc>
 802dc74:	f047 0701 	orr.w	r7, r7, #1
 802dc78:	e7fa      	b.n	802dc70 <_svfwprintf_r+0x1b8>
 802dc7a:	f855 3b04 	ldr.w	r3, [r5], #4
 802dc7e:	930c      	str	r3, [sp, #48]	; 0x30
 802dc80:	2b00      	cmp	r3, #0
 802dc82:	daf5      	bge.n	802dc70 <_svfwprintf_r+0x1b8>
 802dc84:	425b      	negs	r3, r3
 802dc86:	930c      	str	r3, [sp, #48]	; 0x30
 802dc88:	f047 0704 	orr.w	r7, r7, #4
 802dc8c:	e7f0      	b.n	802dc70 <_svfwprintf_r+0x1b8>
 802dc8e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802dc90:	f852 3b04 	ldr.w	r3, [r2], #4
 802dc94:	9309      	str	r3, [sp, #36]	; 0x24
 802dc96:	2b2a      	cmp	r3, #42	; 0x2a
 802dc98:	d112      	bne.n	802dcc0 <_svfwprintf_r+0x208>
 802dc9a:	f855 4b04 	ldr.w	r4, [r5], #4
 802dc9e:	920b      	str	r2, [sp, #44]	; 0x2c
 802dca0:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
 802dca4:	e7e4      	b.n	802dc70 <_svfwprintf_r+0x1b8>
 802dca6:	fb00 3404 	mla	r4, r0, r4, r3
 802dcaa:	f852 3b04 	ldr.w	r3, [r2], #4
 802dcae:	9309      	str	r3, [sp, #36]	; 0x24
 802dcb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802dcb2:	3b30      	subs	r3, #48	; 0x30
 802dcb4:	2b09      	cmp	r3, #9
 802dcb6:	d9f6      	bls.n	802dca6 <_svfwprintf_r+0x1ee>
 802dcb8:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
 802dcbc:	920b      	str	r2, [sp, #44]	; 0x2c
 802dcbe:	e75e      	b.n	802db7e <_svfwprintf_r+0xc6>
 802dcc0:	2400      	movs	r4, #0
 802dcc2:	e7f5      	b.n	802dcb0 <_svfwprintf_r+0x1f8>
 802dcc4:	f047 0780 	orr.w	r7, r7, #128	; 0x80
 802dcc8:	e7d2      	b.n	802dc70 <_svfwprintf_r+0x1b8>
 802dcca:	2300      	movs	r3, #0
 802dccc:	930c      	str	r3, [sp, #48]	; 0x30
 802dcce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802dcd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802dcd2:	fb00 3302 	mla	r3, r0, r2, r3
 802dcd6:	3b30      	subs	r3, #48	; 0x30
 802dcd8:	930c      	str	r3, [sp, #48]	; 0x30
 802dcda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802dcdc:	f853 2b04 	ldr.w	r2, [r3], #4
 802dce0:	930b      	str	r3, [sp, #44]	; 0x2c
 802dce2:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 802dce6:	2b09      	cmp	r3, #9
 802dce8:	9209      	str	r2, [sp, #36]	; 0x24
 802dcea:	d9f0      	bls.n	802dcce <_svfwprintf_r+0x216>
 802dcec:	e747      	b.n	802db7e <_svfwprintf_r+0xc6>
 802dcee:	f047 0708 	orr.w	r7, r7, #8
 802dcf2:	e7bd      	b.n	802dc70 <_svfwprintf_r+0x1b8>
 802dcf4:	f047 0740 	orr.w	r7, r7, #64	; 0x40
 802dcf8:	e7ba      	b.n	802dc70 <_svfwprintf_r+0x1b8>
 802dcfa:	f047 0710 	orr.w	r7, r7, #16
 802dcfe:	e7b7      	b.n	802dc70 <_svfwprintf_r+0x1b8>
 802dd00:	b101      	cbz	r1, 802dd04 <_svfwprintf_r+0x24c>
 802dd02:	9615      	str	r6, [sp, #84]	; 0x54
 802dd04:	462b      	mov	r3, r5
 802dd06:	06fd      	lsls	r5, r7, #27
 802dd08:	f853 0b04 	ldr.w	r0, [r3], #4
 802dd0c:	930a      	str	r3, [sp, #40]	; 0x28
 802dd0e:	d412      	bmi.n	802dd36 <_svfwprintf_r+0x27e>
 802dd10:	f7f7 fa94 	bl	802523c <btowc>
 802dd14:	1c44      	adds	r4, r0, #1
 802dd16:	d10e      	bne.n	802dd36 <_svfwprintf_r+0x27e>
 802dd18:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 802dd1c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802dd20:	f8a9 300c 	strh.w	r3, [r9, #12]
 802dd24:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 802dd28:	f013 0f40 	tst.w	r3, #64	; 0x40
 802dd2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802dd2e:	bf18      	it	ne
 802dd30:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
 802dd34:	e6e5      	b.n	802db02 <_svfwprintf_r+0x4a>
 802dd36:	902a      	str	r0, [sp, #168]	; 0xa8
 802dd38:	2000      	movs	r0, #0
 802dd3a:	902b      	str	r0, [sp, #172]	; 0xac
 802dd3c:	9015      	str	r0, [sp, #84]	; 0x54
 802dd3e:	4680      	mov	r8, r0
 802dd40:	2401      	movs	r4, #1
 802dd42:	4606      	mov	r6, r0
 802dd44:	4605      	mov	r5, r0
 802dd46:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
 802dd4a:	e104      	b.n	802df56 <_svfwprintf_r+0x49e>
 802dd4c:	f3af 8000 	nop.w
	...
 802dd58:	0803300c 	.word	0x0803300c
 802dd5c:	b101      	cbz	r1, 802dd60 <_svfwprintf_r+0x2a8>
 802dd5e:	9615      	str	r6, [sp, #84]	; 0x54
 802dd60:	462a      	mov	r2, r5
 802dd62:	06f9      	lsls	r1, r7, #27
 802dd64:	f852 3b04 	ldr.w	r3, [r2], #4
 802dd68:	920a      	str	r2, [sp, #40]	; 0x28
 802dd6a:	d402      	bmi.n	802dd72 <_svfwprintf_r+0x2ba>
 802dd6c:	067a      	lsls	r2, r7, #25
 802dd6e:	bf48      	it	mi
 802dd70:	b21b      	sxthmi	r3, r3
 802dd72:	2b00      	cmp	r3, #0
 802dd74:	da02      	bge.n	802dd7c <_svfwprintf_r+0x2c4>
 802dd76:	222d      	movs	r2, #45	; 0x2d
 802dd78:	425b      	negs	r3, r3
 802dd7a:	9215      	str	r2, [sp, #84]	; 0x54
 802dd7c:	2201      	movs	r2, #1
 802dd7e:	e1b9      	b.n	802e0f4 <_svfwprintf_r+0x63c>
 802dd80:	b101      	cbz	r1, 802dd84 <_svfwprintf_r+0x2cc>
 802dd82:	9615      	str	r6, [sp, #84]	; 0x54
 802dd84:	3507      	adds	r5, #7
 802dd86:	f025 0307 	bic.w	r3, r5, #7
 802dd8a:	ecb3 7b02 	vldmia	r3!, {d7}
 802dd8e:	930a      	str	r3, [sp, #40]	; 0x28
 802dd90:	eeb0 8a47 	vmov.f32	s16, s14
 802dd94:	eef0 8a67 	vmov.f32	s17, s15
 802dd98:	ee18 3a90 	vmov	r3, s17
 802dd9c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802dda0:	ee09 3a90 	vmov	s19, r3
 802dda4:	eeb0 9a47 	vmov.f32	s18, s14
 802dda8:	4ba6      	ldr	r3, [pc, #664]	; (802e044 <_svfwprintf_r+0x58c>)
 802ddaa:	ec51 0b19 	vmov	r0, r1, d9
 802ddae:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 802ddb2:	f7d2 fec5 	bl	8000b40 <__aeabi_dcmpun>
 802ddb6:	b9f0      	cbnz	r0, 802ddf6 <_svfwprintf_r+0x33e>
 802ddb8:	4ba2      	ldr	r3, [pc, #648]	; (802e044 <_svfwprintf_r+0x58c>)
 802ddba:	ec51 0b19 	vmov	r0, r1, d9
 802ddbe:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 802ddc2:	f7d2 fe9f 	bl	8000b04 <__aeabi_dcmple>
 802ddc6:	b9b0      	cbnz	r0, 802ddf6 <_svfwprintf_r+0x33e>
 802ddc8:	ec51 0b18 	vmov	r0, r1, d8
 802ddcc:	2200      	movs	r2, #0
 802ddce:	2300      	movs	r3, #0
 802ddd0:	f7d2 fe8e 	bl	8000af0 <__aeabi_dcmplt>
 802ddd4:	b108      	cbz	r0, 802ddda <_svfwprintf_r+0x322>
 802ddd6:	232d      	movs	r3, #45	; 0x2d
 802ddd8:	9315      	str	r3, [sp, #84]	; 0x54
 802ddda:	4b9b      	ldr	r3, [pc, #620]	; (802e048 <_svfwprintf_r+0x590>)
 802dddc:	489b      	ldr	r0, [pc, #620]	; (802e04c <_svfwprintf_r+0x594>)
 802ddde:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802dde0:	f027 0780 	bic.w	r7, r7, #128	; 0x80
 802dde4:	2a47      	cmp	r2, #71	; 0x47
 802dde6:	bf94      	ite	ls
 802dde8:	469a      	movls	sl, r3
 802ddea:	4682      	movhi	sl, r0
 802ddec:	f04f 0800 	mov.w	r8, #0
 802ddf0:	2403      	movs	r4, #3
 802ddf2:	4646      	mov	r6, r8
 802ddf4:	e3d4      	b.n	802e5a0 <_svfwprintf_r+0xae8>
 802ddf6:	ec53 2b18 	vmov	r2, r3, d8
 802ddfa:	ec51 0b18 	vmov	r0, r1, d8
 802ddfe:	f7d2 fe9f 	bl	8000b40 <__aeabi_dcmpun>
 802de02:	b140      	cbz	r0, 802de16 <_svfwprintf_r+0x35e>
 802de04:	ee18 3a90 	vmov	r3, s17
 802de08:	2b00      	cmp	r3, #0
 802de0a:	bfbc      	itt	lt
 802de0c:	232d      	movlt	r3, #45	; 0x2d
 802de0e:	9315      	strlt	r3, [sp, #84]	; 0x54
 802de10:	488f      	ldr	r0, [pc, #572]	; (802e050 <_svfwprintf_r+0x598>)
 802de12:	4b90      	ldr	r3, [pc, #576]	; (802e054 <_svfwprintf_r+0x59c>)
 802de14:	e7e3      	b.n	802ddde <_svfwprintf_r+0x326>
 802de16:	1c63      	adds	r3, r4, #1
 802de18:	f000 810f 	beq.w	802e03a <_svfwprintf_r+0x582>
 802de1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802de1e:	f023 0320 	bic.w	r3, r3, #32
 802de22:	2b47      	cmp	r3, #71	; 0x47
 802de24:	d102      	bne.n	802de2c <_svfwprintf_r+0x374>
 802de26:	2c00      	cmp	r4, #0
 802de28:	bf08      	it	eq
 802de2a:	2401      	moveq	r4, #1
 802de2c:	f447 7380 	orr.w	r3, r7, #256	; 0x100
 802de30:	930e      	str	r3, [sp, #56]	; 0x38
 802de32:	2328      	movs	r3, #40	; 0x28
 802de34:	9307      	str	r3, [sp, #28]
 802de36:	ab19      	add	r3, sp, #100	; 0x64
 802de38:	9305      	str	r3, [sp, #20]
 802de3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802de3c:	9304      	str	r3, [sp, #16]
 802de3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802de40:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802de44:	ae18      	add	r6, sp, #96	; 0x60
 802de46:	ad17      	add	r5, sp, #92	; 0x5c
 802de48:	e9cd 4300 	strd	r4, r3, [sp]
 802de4c:	f8cd 8018 	str.w	r8, [sp, #24]
 802de50:	ec53 2b18 	vmov	r2, r3, d8
 802de54:	9603      	str	r6, [sp, #12]
 802de56:	9502      	str	r5, [sp, #8]
 802de58:	4658      	mov	r0, fp
 802de5a:	f7ff fdbd 	bl	802d9d8 <wcvt>
 802de5e:	4540      	cmp	r0, r8
 802de60:	4682      	mov	sl, r0
 802de62:	f040 80ec 	bne.w	802e03e <_svfwprintf_r+0x586>
 802de66:	9919      	ldr	r1, [sp, #100]	; 0x64
 802de68:	2928      	cmp	r1, #40	; 0x28
 802de6a:	f340 80e8 	ble.w	802e03e <_svfwprintf_r+0x586>
 802de6e:	0089      	lsls	r1, r1, #2
 802de70:	4658      	mov	r0, fp
 802de72:	f7f8 f8e1 	bl	8026038 <_malloc_r>
 802de76:	4680      	mov	r8, r0
 802de78:	2800      	cmp	r0, #0
 802de7a:	f43f af4d 	beq.w	802dd18 <_svfwprintf_r+0x260>
 802de7e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802de80:	9502      	str	r5, [sp, #8]
 802de82:	e9cd 0306 	strd	r0, r3, [sp, #24]
 802de86:	ab19      	add	r3, sp, #100	; 0x64
 802de88:	9305      	str	r3, [sp, #20]
 802de8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802de8c:	e9cd 6303 	strd	r6, r3, [sp, #12]
 802de90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802de92:	4658      	mov	r0, fp
 802de94:	e9cd 4300 	strd	r4, r3, [sp]
 802de98:	ec53 2b18 	vmov	r2, r3, d8
 802de9c:	f7ff fd9c 	bl	802d9d8 <wcvt>
 802dea0:	4682      	mov	sl, r0
 802dea2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802dea4:	9d18      	ldr	r5, [sp, #96]	; 0x60
 802dea6:	f023 0320 	bic.w	r3, r3, #32
 802deaa:	2b47      	cmp	r3, #71	; 0x47
 802deac:	f040 80d6 	bne.w	802e05c <_svfwprintf_r+0x5a4>
 802deb0:	1cee      	adds	r6, r5, #3
 802deb2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802deb4:	db02      	blt.n	802debc <_svfwprintf_r+0x404>
 802deb6:	42ac      	cmp	r4, r5
 802deb8:	f280 80ec 	bge.w	802e094 <_svfwprintf_r+0x5dc>
 802debc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802debe:	3b02      	subs	r3, #2
 802dec0:	9309      	str	r3, [sp, #36]	; 0x24
 802dec2:	1e6b      	subs	r3, r5, #1
 802dec4:	2b00      	cmp	r3, #0
 802dec6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802dec8:	9318      	str	r3, [sp, #96]	; 0x60
 802deca:	bfb8      	it	lt
 802decc:	f1c5 0301 	rsblt	r3, r5, #1
 802ded0:	921c      	str	r2, [sp, #112]	; 0x70
 802ded2:	bfb4      	ite	lt
 802ded4:	222d      	movlt	r2, #45	; 0x2d
 802ded6:	222b      	movge	r2, #43	; 0x2b
 802ded8:	2b09      	cmp	r3, #9
 802deda:	921d      	str	r2, [sp, #116]	; 0x74
 802dedc:	f340 80d1 	ble.w	802e082 <_svfwprintf_r+0x5ca>
 802dee0:	a82a      	add	r0, sp, #168	; 0xa8
 802dee2:	250a      	movs	r5, #10
 802dee4:	4602      	mov	r2, r0
 802dee6:	fb93 f4f5 	sdiv	r4, r3, r5
 802deea:	fb05 3114 	mls	r1, r5, r4, r3
 802deee:	3130      	adds	r1, #48	; 0x30
 802def0:	f842 1c04 	str.w	r1, [r2, #-4]
 802def4:	4619      	mov	r1, r3
 802def6:	2963      	cmp	r1, #99	; 0x63
 802def8:	f1a0 0004 	sub.w	r0, r0, #4
 802defc:	4623      	mov	r3, r4
 802defe:	dcf1      	bgt.n	802dee4 <_svfwprintf_r+0x42c>
 802df00:	3330      	adds	r3, #48	; 0x30
 802df02:	f840 3c04 	str.w	r3, [r0, #-4]
 802df06:	f1a2 0108 	sub.w	r1, r2, #8
 802df0a:	a81e      	add	r0, sp, #120	; 0x78
 802df0c:	ab2a      	add	r3, sp, #168	; 0xa8
 802df0e:	4299      	cmp	r1, r3
 802df10:	f0c0 80b2 	bcc.w	802e078 <_svfwprintf_r+0x5c0>
 802df14:	f10d 04b3 	add.w	r4, sp, #179	; 0xb3
 802df18:	1aa4      	subs	r4, r4, r2
 802df1a:	f024 0403 	bic.w	r4, r4, #3
 802df1e:	3a0b      	subs	r2, #11
 802df20:	4293      	cmp	r3, r2
 802df22:	bf38      	it	cc
 802df24:	2400      	movcc	r4, #0
 802df26:	ab1e      	add	r3, sp, #120	; 0x78
 802df28:	441c      	add	r4, r3
 802df2a:	a81c      	add	r0, sp, #112	; 0x70
 802df2c:	1a24      	subs	r4, r4, r0
 802df2e:	10a3      	asrs	r3, r4, #2
 802df30:	9311      	str	r3, [sp, #68]	; 0x44
 802df32:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802df34:	2b01      	cmp	r3, #1
 802df36:	eb03 04a4 	add.w	r4, r3, r4, asr #2
 802df3a:	dc02      	bgt.n	802df42 <_svfwprintf_r+0x48a>
 802df3c:	f017 0501 	ands.w	r5, r7, #1
 802df40:	d001      	beq.n	802df46 <_svfwprintf_r+0x48e>
 802df42:	3401      	adds	r4, #1
 802df44:	2500      	movs	r5, #0
 802df46:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 802df48:	2e00      	cmp	r6, #0
 802df4a:	f000 817e 	beq.w	802e24a <_svfwprintf_r+0x792>
 802df4e:	232d      	movs	r3, #45	; 0x2d
 802df50:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 802df52:	9315      	str	r3, [sp, #84]	; 0x54
 802df54:	2600      	movs	r6, #0
 802df56:	42a6      	cmp	r6, r4
 802df58:	4633      	mov	r3, r6
 802df5a:	bfb8      	it	lt
 802df5c:	4623      	movlt	r3, r4
 802df5e:	930e      	str	r3, [sp, #56]	; 0x38
 802df60:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802df62:	b113      	cbz	r3, 802df6a <_svfwprintf_r+0x4b2>
 802df64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802df66:	3301      	adds	r3, #1
 802df68:	930e      	str	r3, [sp, #56]	; 0x38
 802df6a:	f017 0302 	ands.w	r3, r7, #2
 802df6e:	9312      	str	r3, [sp, #72]	; 0x48
 802df70:	bf1e      	ittt	ne
 802df72:	9b0e      	ldrne	r3, [sp, #56]	; 0x38
 802df74:	3302      	addne	r3, #2
 802df76:	930e      	strne	r3, [sp, #56]	; 0x38
 802df78:	f017 0384 	ands.w	r3, r7, #132	; 0x84
 802df7c:	9313      	str	r3, [sp, #76]	; 0x4c
 802df7e:	f000 8166 	beq.w	802e24e <_svfwprintf_r+0x796>
 802df82:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802df84:	b143      	cbz	r3, 802df98 <_svfwprintf_r+0x4e0>
 802df86:	2304      	movs	r3, #4
 802df88:	aa15      	add	r2, sp, #84	; 0x54
 802df8a:	4649      	mov	r1, r9
 802df8c:	4658      	mov	r0, fp
 802df8e:	f7fe fd8f 	bl	802cab0 <__ssputs_r>
 802df92:	3001      	adds	r0, #1
 802df94:	f000 816e 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802df98:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802df9a:	b143      	cbz	r3, 802dfae <_svfwprintf_r+0x4f6>
 802df9c:	2308      	movs	r3, #8
 802df9e:	aa1a      	add	r2, sp, #104	; 0x68
 802dfa0:	4649      	mov	r1, r9
 802dfa2:	4658      	mov	r0, fp
 802dfa4:	f7fe fd84 	bl	802cab0 <__ssputs_r>
 802dfa8:	3001      	adds	r0, #1
 802dfaa:	f000 8163 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802dfae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802dfb0:	2b80      	cmp	r3, #128	; 0x80
 802dfb2:	d113      	bne.n	802dfdc <_svfwprintf_r+0x524>
 802dfb4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802dfb6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802dfb8:	1a9b      	subs	r3, r3, r2
 802dfba:	2b00      	cmp	r3, #0
 802dfbc:	9310      	str	r3, [sp, #64]	; 0x40
 802dfbe:	dd0d      	ble.n	802dfdc <_svfwprintf_r+0x524>
 802dfc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802dfc2:	4a25      	ldr	r2, [pc, #148]	; (802e058 <_svfwprintf_r+0x5a0>)
 802dfc4:	2b10      	cmp	r3, #16
 802dfc6:	f300 816a 	bgt.w	802e29e <_svfwprintf_r+0x7e6>
 802dfca:	4a23      	ldr	r2, [pc, #140]	; (802e058 <_svfwprintf_r+0x5a0>)
 802dfcc:	009b      	lsls	r3, r3, #2
 802dfce:	4649      	mov	r1, r9
 802dfd0:	4658      	mov	r0, fp
 802dfd2:	f7fe fd6d 	bl	802cab0 <__ssputs_r>
 802dfd6:	3001      	adds	r0, #1
 802dfd8:	f000 814c 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802dfdc:	1b36      	subs	r6, r6, r4
 802dfde:	2e00      	cmp	r6, #0
 802dfe0:	dd0c      	ble.n	802dffc <_svfwprintf_r+0x544>
 802dfe2:	2e10      	cmp	r6, #16
 802dfe4:	4a1c      	ldr	r2, [pc, #112]	; (802e058 <_svfwprintf_r+0x5a0>)
 802dfe6:	f300 8165 	bgt.w	802e2b4 <_svfwprintf_r+0x7fc>
 802dfea:	4a1b      	ldr	r2, [pc, #108]	; (802e058 <_svfwprintf_r+0x5a0>)
 802dfec:	00b3      	lsls	r3, r6, #2
 802dfee:	4649      	mov	r1, r9
 802dff0:	4658      	mov	r0, fp
 802dff2:	f7fe fd5d 	bl	802cab0 <__ssputs_r>
 802dff6:	3001      	adds	r0, #1
 802dff8:	f000 813c 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802dffc:	05f9      	lsls	r1, r7, #23
 802dffe:	f100 8162 	bmi.w	802e2c6 <_svfwprintf_r+0x80e>
 802e002:	00a3      	lsls	r3, r4, #2
 802e004:	4652      	mov	r2, sl
 802e006:	4649      	mov	r1, r9
 802e008:	4658      	mov	r0, fp
 802e00a:	f7fe fd51 	bl	802cab0 <__ssputs_r>
 802e00e:	3001      	adds	r0, #1
 802e010:	f000 8130 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802e014:	077a      	lsls	r2, r7, #29
 802e016:	f100 8281 	bmi.w	802e51c <_svfwprintf_r+0xa64>
 802e01a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 802e01e:	990e      	ldr	r1, [sp, #56]	; 0x38
 802e020:	428a      	cmp	r2, r1
 802e022:	bfac      	ite	ge
 802e024:	189b      	addge	r3, r3, r2
 802e026:	185b      	addlt	r3, r3, r1
 802e028:	930d      	str	r3, [sp, #52]	; 0x34
 802e02a:	f1b8 0f00 	cmp.w	r8, #0
 802e02e:	d055      	beq.n	802e0dc <_svfwprintf_r+0x624>
 802e030:	4641      	mov	r1, r8
 802e032:	4658      	mov	r0, fp
 802e034:	f7f7 ff94 	bl	8025f60 <_free_r>
 802e038:	e050      	b.n	802e0dc <_svfwprintf_r+0x624>
 802e03a:	2406      	movs	r4, #6
 802e03c:	e6f6      	b.n	802de2c <_svfwprintf_r+0x374>
 802e03e:	f04f 0800 	mov.w	r8, #0
 802e042:	e72e      	b.n	802dea2 <_svfwprintf_r+0x3ea>
 802e044:	7fefffff 	.word	0x7fefffff
 802e048:	08032f88 	.word	0x08032f88
 802e04c:	08032f98 	.word	0x08032f98
 802e050:	08032fb8 	.word	0x08032fb8
 802e054:	08032fa8 	.word	0x08032fa8
 802e058:	08033098 	.word	0x08033098
 802e05c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802e05e:	2b66      	cmp	r3, #102	; 0x66
 802e060:	f47f af2f 	bne.w	802dec2 <_svfwprintf_r+0x40a>
 802e064:	f007 0301 	and.w	r3, r7, #1
 802e068:	2d00      	cmp	r5, #0
 802e06a:	ea43 0304 	orr.w	r3, r3, r4
 802e06e:	dd0e      	ble.n	802e08e <_svfwprintf_r+0x5d6>
 802e070:	b1fb      	cbz	r3, 802e0b2 <_svfwprintf_r+0x5fa>
 802e072:	3401      	adds	r4, #1
 802e074:	442c      	add	r4, r5
 802e076:	e766      	b.n	802df46 <_svfwprintf_r+0x48e>
 802e078:	f851 4b04 	ldr.w	r4, [r1], #4
 802e07c:	f840 4b04 	str.w	r4, [r0], #4
 802e080:	e745      	b.n	802df0e <_svfwprintf_r+0x456>
 802e082:	2230      	movs	r2, #48	; 0x30
 802e084:	4413      	add	r3, r2
 802e086:	921e      	str	r2, [sp, #120]	; 0x78
 802e088:	931f      	str	r3, [sp, #124]	; 0x7c
 802e08a:	ac20      	add	r4, sp, #128	; 0x80
 802e08c:	e74d      	b.n	802df2a <_svfwprintf_r+0x472>
 802e08e:	b193      	cbz	r3, 802e0b6 <_svfwprintf_r+0x5fe>
 802e090:	3402      	adds	r4, #2
 802e092:	e758      	b.n	802df46 <_svfwprintf_r+0x48e>
 802e094:	42ab      	cmp	r3, r5
 802e096:	dc05      	bgt.n	802e0a4 <_svfwprintf_r+0x5ec>
 802e098:	07fc      	lsls	r4, r7, #31
 802e09a:	d50e      	bpl.n	802e0ba <_svfwprintf_r+0x602>
 802e09c:	1c6c      	adds	r4, r5, #1
 802e09e:	2367      	movs	r3, #103	; 0x67
 802e0a0:	9309      	str	r3, [sp, #36]	; 0x24
 802e0a2:	e750      	b.n	802df46 <_svfwprintf_r+0x48e>
 802e0a4:	2d00      	cmp	r5, #0
 802e0a6:	bfd4      	ite	le
 802e0a8:	f1c5 0402 	rsble	r4, r5, #2
 802e0ac:	2401      	movgt	r4, #1
 802e0ae:	441c      	add	r4, r3
 802e0b0:	e7f5      	b.n	802e09e <_svfwprintf_r+0x5e6>
 802e0b2:	462c      	mov	r4, r5
 802e0b4:	e747      	b.n	802df46 <_svfwprintf_r+0x48e>
 802e0b6:	2401      	movs	r4, #1
 802e0b8:	e745      	b.n	802df46 <_svfwprintf_r+0x48e>
 802e0ba:	462c      	mov	r4, r5
 802e0bc:	e7ef      	b.n	802e09e <_svfwprintf_r+0x5e6>
 802e0be:	b101      	cbz	r1, 802e0c2 <_svfwprintf_r+0x60a>
 802e0c0:	9615      	str	r6, [sp, #84]	; 0x54
 802e0c2:	1d2b      	adds	r3, r5, #4
 802e0c4:	06f8      	lsls	r0, r7, #27
 802e0c6:	930a      	str	r3, [sp, #40]	; 0x28
 802e0c8:	d503      	bpl.n	802e0d2 <_svfwprintf_r+0x61a>
 802e0ca:	682b      	ldr	r3, [r5, #0]
 802e0cc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802e0ce:	601a      	str	r2, [r3, #0]
 802e0d0:	e004      	b.n	802e0dc <_svfwprintf_r+0x624>
 802e0d2:	0679      	lsls	r1, r7, #25
 802e0d4:	d5f9      	bpl.n	802e0ca <_svfwprintf_r+0x612>
 802e0d6:	682b      	ldr	r3, [r5, #0]
 802e0d8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802e0da:	801a      	strh	r2, [r3, #0]
 802e0dc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802e0de:	e524      	b.n	802db2a <_svfwprintf_r+0x72>
 802e0e0:	462a      	mov	r2, r5
 802e0e2:	f017 0110 	ands.w	r1, r7, #16
 802e0e6:	f852 3b04 	ldr.w	r3, [r2], #4
 802e0ea:	920a      	str	r2, [sp, #40]	; 0x28
 802e0ec:	d011      	beq.n	802e112 <_svfwprintf_r+0x65a>
 802e0ee:	2200      	movs	r2, #0
 802e0f0:	2100      	movs	r1, #0
 802e0f2:	9115      	str	r1, [sp, #84]	; 0x54
 802e0f4:	1c66      	adds	r6, r4, #1
 802e0f6:	f000 822e 	beq.w	802e556 <_svfwprintf_r+0xa9e>
 802e0fa:	f027 0180 	bic.w	r1, r7, #128	; 0x80
 802e0fe:	2b00      	cmp	r3, #0
 802e100:	f040 822d 	bne.w	802e55e <_svfwprintf_r+0xaa6>
 802e104:	2c00      	cmp	r4, #0
 802e106:	f000 8098 	beq.w	802e23a <_svfwprintf_r+0x782>
 802e10a:	2a01      	cmp	r2, #1
 802e10c:	f040 822a 	bne.w	802e564 <_svfwprintf_r+0xaac>
 802e110:	e075      	b.n	802e1fe <_svfwprintf_r+0x746>
 802e112:	f017 0240 	ands.w	r2, r7, #64	; 0x40
 802e116:	d0eb      	beq.n	802e0f0 <_svfwprintf_r+0x638>
 802e118:	b29b      	uxth	r3, r3
 802e11a:	e7e8      	b.n	802e0ee <_svfwprintf_r+0x636>
 802e11c:	462a      	mov	r2, r5
 802e11e:	2178      	movs	r1, #120	; 0x78
 802e120:	f852 3b04 	ldr.w	r3, [r2], #4
 802e124:	920a      	str	r2, [sp, #40]	; 0x28
 802e126:	2230      	movs	r2, #48	; 0x30
 802e128:	e9cd 211a 	strd	r2, r1, [sp, #104]	; 0x68
 802e12c:	4a9e      	ldr	r2, [pc, #632]	; (802e3a8 <_svfwprintf_r+0x8f0>)
 802e12e:	920f      	str	r2, [sp, #60]	; 0x3c
 802e130:	f047 0702 	orr.w	r7, r7, #2
 802e134:	2202      	movs	r2, #2
 802e136:	9109      	str	r1, [sp, #36]	; 0x24
 802e138:	e7da      	b.n	802e0f0 <_svfwprintf_r+0x638>
 802e13a:	462b      	mov	r3, r5
 802e13c:	2600      	movs	r6, #0
 802e13e:	f853 ab04 	ldr.w	sl, [r3], #4
 802e142:	930a      	str	r3, [sp, #40]	; 0x28
 802e144:	f017 0510 	ands.w	r5, r7, #16
 802e148:	9615      	str	r6, [sp, #84]	; 0x54
 802e14a:	d12d      	bne.n	802e1a8 <_svfwprintf_r+0x6f0>
 802e14c:	1c62      	adds	r2, r4, #1
 802e14e:	d014      	beq.n	802e17a <_svfwprintf_r+0x6c2>
 802e150:	4622      	mov	r2, r4
 802e152:	4629      	mov	r1, r5
 802e154:	4650      	mov	r0, sl
 802e156:	4626      	mov	r6, r4
 802e158:	f7d2 f83a 	bl	80001d0 <memchr>
 802e15c:	b108      	cbz	r0, 802e162 <_svfwprintf_r+0x6aa>
 802e15e:	eba0 060a 	sub.w	r6, r0, sl
 802e162:	2e27      	cmp	r6, #39	; 0x27
 802e164:	d90e      	bls.n	802e184 <_svfwprintf_r+0x6cc>
 802e166:	1c71      	adds	r1, r6, #1
 802e168:	0089      	lsls	r1, r1, #2
 802e16a:	4658      	mov	r0, fp
 802e16c:	f7f7 ff64 	bl	8026038 <_malloc_r>
 802e170:	2800      	cmp	r0, #0
 802e172:	f43f add1 	beq.w	802dd18 <_svfwprintf_r+0x260>
 802e176:	4680      	mov	r8, r0
 802e178:	e007      	b.n	802e18a <_svfwprintf_r+0x6d2>
 802e17a:	4650      	mov	r0, sl
 802e17c:	f7d2 f882 	bl	8000284 <strlen>
 802e180:	4606      	mov	r6, r0
 802e182:	e7ee      	b.n	802e162 <_svfwprintf_r+0x6aa>
 802e184:	f04f 0800 	mov.w	r8, #0
 802e188:	a82a      	add	r0, sp, #168	; 0xa8
 802e18a:	4634      	mov	r4, r6
 802e18c:	2300      	movs	r3, #0
 802e18e:	42b3      	cmp	r3, r6
 802e190:	d104      	bne.n	802e19c <_svfwprintf_r+0x6e4>
 802e192:	2600      	movs	r6, #0
 802e194:	f840 6023 	str.w	r6, [r0, r3, lsl #2]
 802e198:	4682      	mov	sl, r0
 802e19a:	e6dc      	b.n	802df56 <_svfwprintf_r+0x49e>
 802e19c:	f81a 2003 	ldrb.w	r2, [sl, r3]
 802e1a0:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 802e1a4:	3301      	adds	r3, #1
 802e1a6:	e7f2      	b.n	802e18e <_svfwprintf_r+0x6d6>
 802e1a8:	1c63      	adds	r3, r4, #1
 802e1aa:	d011      	beq.n	802e1d0 <_svfwprintf_r+0x718>
 802e1ac:	4622      	mov	r2, r4
 802e1ae:	4631      	mov	r1, r6
 802e1b0:	4650      	mov	r0, sl
 802e1b2:	f7fc fac1 	bl	802a738 <wmemchr>
 802e1b6:	4680      	mov	r8, r0
 802e1b8:	2800      	cmp	r0, #0
 802e1ba:	f43f ae1a 	beq.w	802ddf2 <_svfwprintf_r+0x33a>
 802e1be:	eba0 080a 	sub.w	r8, r0, sl
 802e1c2:	ea4f 08a8 	mov.w	r8, r8, asr #2
 802e1c6:	4544      	cmp	r4, r8
 802e1c8:	bfa8      	it	ge
 802e1ca:	4644      	movge	r4, r8
 802e1cc:	46b0      	mov	r8, r6
 802e1ce:	e610      	b.n	802ddf2 <_svfwprintf_r+0x33a>
 802e1d0:	4650      	mov	r0, sl
 802e1d2:	f7fc f937 	bl	802a444 <wcslen>
 802e1d6:	4604      	mov	r4, r0
 802e1d8:	e7f8      	b.n	802e1cc <_svfwprintf_r+0x714>
 802e1da:	462a      	mov	r2, r5
 802e1dc:	06fe      	lsls	r6, r7, #27
 802e1de:	f852 3b04 	ldr.w	r3, [r2], #4
 802e1e2:	920a      	str	r2, [sp, #40]	; 0x28
 802e1e4:	d501      	bpl.n	802e1ea <_svfwprintf_r+0x732>
 802e1e6:	2201      	movs	r2, #1
 802e1e8:	e782      	b.n	802e0f0 <_svfwprintf_r+0x638>
 802e1ea:	067d      	lsls	r5, r7, #25
 802e1ec:	bf48      	it	mi
 802e1ee:	b29b      	uxthmi	r3, r3
 802e1f0:	e7f9      	b.n	802e1e6 <_svfwprintf_r+0x72e>
 802e1f2:	b101      	cbz	r1, 802e1f6 <_svfwprintf_r+0x73e>
 802e1f4:	9615      	str	r6, [sp, #84]	; 0x54
 802e1f6:	4b6d      	ldr	r3, [pc, #436]	; (802e3ac <_svfwprintf_r+0x8f4>)
 802e1f8:	e522      	b.n	802dc40 <_svfwprintf_r+0x188>
 802e1fa:	2b09      	cmp	r3, #9
 802e1fc:	d804      	bhi.n	802e208 <_svfwprintf_r+0x750>
 802e1fe:	3330      	adds	r3, #48	; 0x30
 802e200:	9351      	str	r3, [sp, #324]	; 0x144
 802e202:	f50d 7aa2 	add.w	sl, sp, #324	; 0x144
 802e206:	e1c3      	b.n	802e590 <_svfwprintf_r+0xad8>
 802e208:	f50d 7aa4 	add.w	sl, sp, #328	; 0x148
 802e20c:	250a      	movs	r5, #10
 802e20e:	fbb3 f0f5 	udiv	r0, r3, r5
 802e212:	fb05 3210 	mls	r2, r5, r0, r3
 802e216:	3230      	adds	r2, #48	; 0x30
 802e218:	f84a 2d04 	str.w	r2, [sl, #-4]!
 802e21c:	461a      	mov	r2, r3
 802e21e:	2a09      	cmp	r2, #9
 802e220:	4603      	mov	r3, r0
 802e222:	d8f4      	bhi.n	802e20e <_svfwprintf_r+0x756>
 802e224:	e1b4      	b.n	802e590 <_svfwprintf_r+0xad8>
 802e226:	f003 020f 	and.w	r2, r3, #15
 802e22a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802e22c:	091b      	lsrs	r3, r3, #4
 802e22e:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 802e232:	f84a 2d04 	str.w	r2, [sl, #-4]!
 802e236:	d1f6      	bne.n	802e226 <_svfwprintf_r+0x76e>
 802e238:	e1aa      	b.n	802e590 <_svfwprintf_r+0xad8>
 802e23a:	b91a      	cbnz	r2, 802e244 <_svfwprintf_r+0x78c>
 802e23c:	07f8      	lsls	r0, r7, #31
 802e23e:	d501      	bpl.n	802e244 <_svfwprintf_r+0x78c>
 802e240:	2330      	movs	r3, #48	; 0x30
 802e242:	e7dd      	b.n	802e200 <_svfwprintf_r+0x748>
 802e244:	f50d 7aa4 	add.w	sl, sp, #328	; 0x148
 802e248:	e1a2      	b.n	802e590 <_svfwprintf_r+0xad8>
 802e24a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 802e24c:	e683      	b.n	802df56 <_svfwprintf_r+0x49e>
 802e24e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802e250:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802e252:	1a9b      	subs	r3, r3, r2
 802e254:	2b00      	cmp	r3, #0
 802e256:	9310      	str	r3, [sp, #64]	; 0x40
 802e258:	f77f ae93 	ble.w	802df82 <_svfwprintf_r+0x4ca>
 802e25c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802e25e:	2b10      	cmp	r3, #16
 802e260:	dc11      	bgt.n	802e286 <_svfwprintf_r+0x7ce>
 802e262:	4a53      	ldr	r2, [pc, #332]	; (802e3b0 <_svfwprintf_r+0x8f8>)
 802e264:	009b      	lsls	r3, r3, #2
 802e266:	4649      	mov	r1, r9
 802e268:	4658      	mov	r0, fp
 802e26a:	f7fe fc21 	bl	802cab0 <__ssputs_r>
 802e26e:	3001      	adds	r0, #1
 802e270:	f47f ae87 	bne.w	802df82 <_svfwprintf_r+0x4ca>
 802e274:	f1b8 0f00 	cmp.w	r8, #0
 802e278:	f43f ad54 	beq.w	802dd24 <_svfwprintf_r+0x26c>
 802e27c:	4641      	mov	r1, r8
 802e27e:	4658      	mov	r0, fp
 802e280:	f7f7 fe6e 	bl	8025f60 <_free_r>
 802e284:	e54e      	b.n	802dd24 <_svfwprintf_r+0x26c>
 802e286:	4a4a      	ldr	r2, [pc, #296]	; (802e3b0 <_svfwprintf_r+0x8f8>)
 802e288:	2340      	movs	r3, #64	; 0x40
 802e28a:	4649      	mov	r1, r9
 802e28c:	4658      	mov	r0, fp
 802e28e:	f7fe fc0f 	bl	802cab0 <__ssputs_r>
 802e292:	3001      	adds	r0, #1
 802e294:	d0ee      	beq.n	802e274 <_svfwprintf_r+0x7bc>
 802e296:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802e298:	3b10      	subs	r3, #16
 802e29a:	9310      	str	r3, [sp, #64]	; 0x40
 802e29c:	e7de      	b.n	802e25c <_svfwprintf_r+0x7a4>
 802e29e:	2340      	movs	r3, #64	; 0x40
 802e2a0:	4649      	mov	r1, r9
 802e2a2:	4658      	mov	r0, fp
 802e2a4:	f7fe fc04 	bl	802cab0 <__ssputs_r>
 802e2a8:	3001      	adds	r0, #1
 802e2aa:	d0e3      	beq.n	802e274 <_svfwprintf_r+0x7bc>
 802e2ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802e2ae:	3b10      	subs	r3, #16
 802e2b0:	9310      	str	r3, [sp, #64]	; 0x40
 802e2b2:	e685      	b.n	802dfc0 <_svfwprintf_r+0x508>
 802e2b4:	2340      	movs	r3, #64	; 0x40
 802e2b6:	4649      	mov	r1, r9
 802e2b8:	4658      	mov	r0, fp
 802e2ba:	f7fe fbf9 	bl	802cab0 <__ssputs_r>
 802e2be:	3001      	adds	r0, #1
 802e2c0:	d0d8      	beq.n	802e274 <_svfwprintf_r+0x7bc>
 802e2c2:	3e10      	subs	r6, #16
 802e2c4:	e68d      	b.n	802dfe2 <_svfwprintf_r+0x52a>
 802e2c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802e2c8:	2b65      	cmp	r3, #101	; 0x65
 802e2ca:	f240 80e5 	bls.w	802e498 <_svfwprintf_r+0x9e0>
 802e2ce:	ec51 0b18 	vmov	r0, r1, d8
 802e2d2:	2200      	movs	r2, #0
 802e2d4:	2300      	movs	r3, #0
 802e2d6:	f7d2 fc01 	bl	8000adc <__aeabi_dcmpeq>
 802e2da:	b358      	cbz	r0, 802e334 <_svfwprintf_r+0x87c>
 802e2dc:	4a35      	ldr	r2, [pc, #212]	; (802e3b4 <_svfwprintf_r+0x8fc>)
 802e2de:	2304      	movs	r3, #4
 802e2e0:	4649      	mov	r1, r9
 802e2e2:	4658      	mov	r0, fp
 802e2e4:	f7fe fbe4 	bl	802cab0 <__ssputs_r>
 802e2e8:	3001      	adds	r0, #1
 802e2ea:	d0c3      	beq.n	802e274 <_svfwprintf_r+0x7bc>
 802e2ec:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
 802e2f0:	429a      	cmp	r2, r3
 802e2f2:	db02      	blt.n	802e2fa <_svfwprintf_r+0x842>
 802e2f4:	07fb      	lsls	r3, r7, #31
 802e2f6:	f57f ae8d 	bpl.w	802e014 <_svfwprintf_r+0x55c>
 802e2fa:	2304      	movs	r3, #4
 802e2fc:	aa16      	add	r2, sp, #88	; 0x58
 802e2fe:	4649      	mov	r1, r9
 802e300:	4658      	mov	r0, fp
 802e302:	f7fe fbd5 	bl	802cab0 <__ssputs_r>
 802e306:	3001      	adds	r0, #1
 802e308:	d0b4      	beq.n	802e274 <_svfwprintf_r+0x7bc>
 802e30a:	9c19      	ldr	r4, [sp, #100]	; 0x64
 802e30c:	3c01      	subs	r4, #1
 802e30e:	2c00      	cmp	r4, #0
 802e310:	f77f ae80 	ble.w	802e014 <_svfwprintf_r+0x55c>
 802e314:	4d28      	ldr	r5, [pc, #160]	; (802e3b8 <_svfwprintf_r+0x900>)
 802e316:	2c10      	cmp	r4, #16
 802e318:	dc02      	bgt.n	802e320 <_svfwprintf_r+0x868>
 802e31a:	00a3      	lsls	r3, r4, #2
 802e31c:	4a26      	ldr	r2, [pc, #152]	; (802e3b8 <_svfwprintf_r+0x900>)
 802e31e:	e672      	b.n	802e006 <_svfwprintf_r+0x54e>
 802e320:	2340      	movs	r3, #64	; 0x40
 802e322:	462a      	mov	r2, r5
 802e324:	4649      	mov	r1, r9
 802e326:	4658      	mov	r0, fp
 802e328:	f7fe fbc2 	bl	802cab0 <__ssputs_r>
 802e32c:	3001      	adds	r0, #1
 802e32e:	d0a1      	beq.n	802e274 <_svfwprintf_r+0x7bc>
 802e330:	3c10      	subs	r4, #16
 802e332:	e7f0      	b.n	802e316 <_svfwprintf_r+0x85e>
 802e334:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802e336:	2b00      	cmp	r3, #0
 802e338:	dc40      	bgt.n	802e3bc <_svfwprintf_r+0x904>
 802e33a:	4a1e      	ldr	r2, [pc, #120]	; (802e3b4 <_svfwprintf_r+0x8fc>)
 802e33c:	2304      	movs	r3, #4
 802e33e:	4649      	mov	r1, r9
 802e340:	4658      	mov	r0, fp
 802e342:	f7fe fbb5 	bl	802cab0 <__ssputs_r>
 802e346:	3001      	adds	r0, #1
 802e348:	d094      	beq.n	802e274 <_svfwprintf_r+0x7bc>
 802e34a:	e9dd 3218 	ldrd	r3, r2, [sp, #96]	; 0x60
 802e34e:	4313      	orrs	r3, r2
 802e350:	f007 0201 	and.w	r2, r7, #1
 802e354:	4313      	orrs	r3, r2
 802e356:	f43f ae5d 	beq.w	802e014 <_svfwprintf_r+0x55c>
 802e35a:	2304      	movs	r3, #4
 802e35c:	aa16      	add	r2, sp, #88	; 0x58
 802e35e:	4649      	mov	r1, r9
 802e360:	4658      	mov	r0, fp
 802e362:	f7fe fba5 	bl	802cab0 <__ssputs_r>
 802e366:	3001      	adds	r0, #1
 802e368:	d084      	beq.n	802e274 <_svfwprintf_r+0x7bc>
 802e36a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802e36c:	2c00      	cmp	r4, #0
 802e36e:	da0c      	bge.n	802e38a <_svfwprintf_r+0x8d2>
 802e370:	4d11      	ldr	r5, [pc, #68]	; (802e3b8 <_svfwprintf_r+0x900>)
 802e372:	4264      	negs	r4, r4
 802e374:	2c10      	cmp	r4, #16
 802e376:	dc0b      	bgt.n	802e390 <_svfwprintf_r+0x8d8>
 802e378:	4a0f      	ldr	r2, [pc, #60]	; (802e3b8 <_svfwprintf_r+0x900>)
 802e37a:	00a3      	lsls	r3, r4, #2
 802e37c:	4649      	mov	r1, r9
 802e37e:	4658      	mov	r0, fp
 802e380:	f7fe fb96 	bl	802cab0 <__ssputs_r>
 802e384:	3001      	adds	r0, #1
 802e386:	f43f af75 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802e38a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802e38c:	009b      	lsls	r3, r3, #2
 802e38e:	e639      	b.n	802e004 <_svfwprintf_r+0x54c>
 802e390:	2340      	movs	r3, #64	; 0x40
 802e392:	462a      	mov	r2, r5
 802e394:	4649      	mov	r1, r9
 802e396:	4658      	mov	r0, fp
 802e398:	f7fe fb8a 	bl	802cab0 <__ssputs_r>
 802e39c:	3001      	adds	r0, #1
 802e39e:	f43f af69 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802e3a2:	3c10      	subs	r4, #16
 802e3a4:	e7e6      	b.n	802e374 <_svfwprintf_r+0x8bc>
 802e3a6:	bf00      	nop
 802e3a8:	0803300c 	.word	0x0803300c
 802e3ac:	08032fc8 	.word	0x08032fc8
 802e3b0:	08033058 	.word	0x08033058
 802e3b4:	08033050 	.word	0x08033050
 802e3b8:	08033098 	.word	0x08033098
 802e3bc:	9c19      	ldr	r4, [sp, #100]	; 0x64
 802e3be:	f344 041d 	sbfx	r4, r4, #0, #30
 802e3c2:	42ac      	cmp	r4, r5
 802e3c4:	bfa8      	it	ge
 802e3c6:	462c      	movge	r4, r5
 802e3c8:	2c00      	cmp	r4, #0
 802e3ca:	dc20      	bgt.n	802e40e <_svfwprintf_r+0x956>
 802e3cc:	2c00      	cmp	r4, #0
 802e3ce:	bfac      	ite	ge
 802e3d0:	1b2e      	subge	r6, r5, r4
 802e3d2:	462e      	movlt	r6, r5
 802e3d4:	2e00      	cmp	r6, #0
 802e3d6:	dd0b      	ble.n	802e3f0 <_svfwprintf_r+0x938>
 802e3d8:	4c72      	ldr	r4, [pc, #456]	; (802e5a4 <_svfwprintf_r+0xaec>)
 802e3da:	2e10      	cmp	r6, #16
 802e3dc:	dc20      	bgt.n	802e420 <_svfwprintf_r+0x968>
 802e3de:	4a71      	ldr	r2, [pc, #452]	; (802e5a4 <_svfwprintf_r+0xaec>)
 802e3e0:	00b3      	lsls	r3, r6, #2
 802e3e2:	4649      	mov	r1, r9
 802e3e4:	4658      	mov	r0, fp
 802e3e6:	f7fe fb63 	bl	802cab0 <__ssputs_r>
 802e3ea:	3001      	adds	r0, #1
 802e3ec:	f43f af42 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802e3f0:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
 802e3f4:	429a      	cmp	r2, r3
 802e3f6:	ea4f 0585 	mov.w	r5, r5, lsl #2
 802e3fa:	da1c      	bge.n	802e436 <_svfwprintf_r+0x97e>
 802e3fc:	2304      	movs	r3, #4
 802e3fe:	aa16      	add	r2, sp, #88	; 0x58
 802e400:	4649      	mov	r1, r9
 802e402:	4658      	mov	r0, fp
 802e404:	f7fe fb54 	bl	802cab0 <__ssputs_r>
 802e408:	3001      	adds	r0, #1
 802e40a:	d116      	bne.n	802e43a <_svfwprintf_r+0x982>
 802e40c:	e732      	b.n	802e274 <_svfwprintf_r+0x7bc>
 802e40e:	00a3      	lsls	r3, r4, #2
 802e410:	4652      	mov	r2, sl
 802e412:	4649      	mov	r1, r9
 802e414:	4658      	mov	r0, fp
 802e416:	f7fe fb4b 	bl	802cab0 <__ssputs_r>
 802e41a:	3001      	adds	r0, #1
 802e41c:	d1d6      	bne.n	802e3cc <_svfwprintf_r+0x914>
 802e41e:	e729      	b.n	802e274 <_svfwprintf_r+0x7bc>
 802e420:	2340      	movs	r3, #64	; 0x40
 802e422:	4622      	mov	r2, r4
 802e424:	4649      	mov	r1, r9
 802e426:	4658      	mov	r0, fp
 802e428:	f7fe fb42 	bl	802cab0 <__ssputs_r>
 802e42c:	3001      	adds	r0, #1
 802e42e:	f43f af21 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802e432:	3e10      	subs	r6, #16
 802e434:	e7d1      	b.n	802e3da <_svfwprintf_r+0x922>
 802e436:	07fe      	lsls	r6, r7, #31
 802e438:	d4e0      	bmi.n	802e3fc <_svfwprintf_r+0x944>
 802e43a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802e43c:	ebc5 0483 	rsb	r4, r5, r3, lsl #2
 802e440:	10a2      	asrs	r2, r4, #2
 802e442:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802e444:	1b1c      	subs	r4, r3, r4
 802e446:	4294      	cmp	r4, r2
 802e448:	bfa8      	it	ge
 802e44a:	4614      	movge	r4, r2
 802e44c:	2c00      	cmp	r4, #0
 802e44e:	dd09      	ble.n	802e464 <_svfwprintf_r+0x9ac>
 802e450:	00a3      	lsls	r3, r4, #2
 802e452:	eb0a 0205 	add.w	r2, sl, r5
 802e456:	4649      	mov	r1, r9
 802e458:	4658      	mov	r0, fp
 802e45a:	f7fe fb29 	bl	802cab0 <__ssputs_r>
 802e45e:	3001      	adds	r0, #1
 802e460:	f43f af08 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802e464:	e9dd 3518 	ldrd	r3, r5, [sp, #96]	; 0x60
 802e468:	2c00      	cmp	r4, #0
 802e46a:	eba5 0503 	sub.w	r5, r5, r3
 802e46e:	bfa8      	it	ge
 802e470:	1b2d      	subge	r5, r5, r4
 802e472:	2d00      	cmp	r5, #0
 802e474:	f77f adce 	ble.w	802e014 <_svfwprintf_r+0x55c>
 802e478:	4c4a      	ldr	r4, [pc, #296]	; (802e5a4 <_svfwprintf_r+0xaec>)
 802e47a:	2d10      	cmp	r5, #16
 802e47c:	dc01      	bgt.n	802e482 <_svfwprintf_r+0x9ca>
 802e47e:	00ab      	lsls	r3, r5, #2
 802e480:	e74c      	b.n	802e31c <_svfwprintf_r+0x864>
 802e482:	2340      	movs	r3, #64	; 0x40
 802e484:	4622      	mov	r2, r4
 802e486:	4649      	mov	r1, r9
 802e488:	4658      	mov	r0, fp
 802e48a:	f7fe fb11 	bl	802cab0 <__ssputs_r>
 802e48e:	3001      	adds	r0, #1
 802e490:	f43f aef0 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802e494:	3d10      	subs	r5, #16
 802e496:	e7f0      	b.n	802e47a <_svfwprintf_r+0x9c2>
 802e498:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802e49a:	2b01      	cmp	r3, #1
 802e49c:	4652      	mov	r2, sl
 802e49e:	f04f 0304 	mov.w	r3, #4
 802e4a2:	4649      	mov	r1, r9
 802e4a4:	4658      	mov	r0, fp
 802e4a6:	dc01      	bgt.n	802e4ac <_svfwprintf_r+0x9f4>
 802e4a8:	07fc      	lsls	r4, r7, #31
 802e4aa:	d51b      	bpl.n	802e4e4 <_svfwprintf_r+0xa2c>
 802e4ac:	f7fe fb00 	bl	802cab0 <__ssputs_r>
 802e4b0:	3001      	adds	r0, #1
 802e4b2:	f43f aedf 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802e4b6:	2304      	movs	r3, #4
 802e4b8:	aa16      	add	r2, sp, #88	; 0x58
 802e4ba:	4649      	mov	r1, r9
 802e4bc:	4658      	mov	r0, fp
 802e4be:	f7fe faf7 	bl	802cab0 <__ssputs_r>
 802e4c2:	3001      	adds	r0, #1
 802e4c4:	f43f aed6 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802e4c8:	9c19      	ldr	r4, [sp, #100]	; 0x64
 802e4ca:	ec51 0b18 	vmov	r0, r1, d8
 802e4ce:	2200      	movs	r2, #0
 802e4d0:	2300      	movs	r3, #0
 802e4d2:	3c01      	subs	r4, #1
 802e4d4:	f7d2 fb02 	bl	8000adc <__aeabi_dcmpeq>
 802e4d8:	b968      	cbnz	r0, 802e4f6 <_svfwprintf_r+0xa3e>
 802e4da:	00a3      	lsls	r3, r4, #2
 802e4dc:	f10a 0204 	add.w	r2, sl, #4
 802e4e0:	4649      	mov	r1, r9
 802e4e2:	4658      	mov	r0, fp
 802e4e4:	f7fe fae4 	bl	802cab0 <__ssputs_r>
 802e4e8:	3001      	adds	r0, #1
 802e4ea:	f43f aec3 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802e4ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802e4f0:	aa1c      	add	r2, sp, #112	; 0x70
 802e4f2:	009b      	lsls	r3, r3, #2
 802e4f4:	e587      	b.n	802e006 <_svfwprintf_r+0x54e>
 802e4f6:	2c00      	cmp	r4, #0
 802e4f8:	ddf9      	ble.n	802e4ee <_svfwprintf_r+0xa36>
 802e4fa:	4d2a      	ldr	r5, [pc, #168]	; (802e5a4 <_svfwprintf_r+0xaec>)
 802e4fc:	2c10      	cmp	r4, #16
 802e4fe:	dc02      	bgt.n	802e506 <_svfwprintf_r+0xa4e>
 802e500:	4a28      	ldr	r2, [pc, #160]	; (802e5a4 <_svfwprintf_r+0xaec>)
 802e502:	00a3      	lsls	r3, r4, #2
 802e504:	e7ec      	b.n	802e4e0 <_svfwprintf_r+0xa28>
 802e506:	2340      	movs	r3, #64	; 0x40
 802e508:	462a      	mov	r2, r5
 802e50a:	4649      	mov	r1, r9
 802e50c:	4658      	mov	r0, fp
 802e50e:	f7fe facf 	bl	802cab0 <__ssputs_r>
 802e512:	3001      	adds	r0, #1
 802e514:	f43f aeae 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802e518:	3c10      	subs	r4, #16
 802e51a:	e7ef      	b.n	802e4fc <_svfwprintf_r+0xa44>
 802e51c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802e51e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802e520:	1a9c      	subs	r4, r3, r2
 802e522:	2c00      	cmp	r4, #0
 802e524:	f77f ad79 	ble.w	802e01a <_svfwprintf_r+0x562>
 802e528:	2c10      	cmp	r4, #16
 802e52a:	dc09      	bgt.n	802e540 <_svfwprintf_r+0xa88>
 802e52c:	4a1e      	ldr	r2, [pc, #120]	; (802e5a8 <_svfwprintf_r+0xaf0>)
 802e52e:	00a3      	lsls	r3, r4, #2
 802e530:	4649      	mov	r1, r9
 802e532:	4658      	mov	r0, fp
 802e534:	f7fe fabc 	bl	802cab0 <__ssputs_r>
 802e538:	3001      	adds	r0, #1
 802e53a:	f47f ad6e 	bne.w	802e01a <_svfwprintf_r+0x562>
 802e53e:	e699      	b.n	802e274 <_svfwprintf_r+0x7bc>
 802e540:	4a19      	ldr	r2, [pc, #100]	; (802e5a8 <_svfwprintf_r+0xaf0>)
 802e542:	2340      	movs	r3, #64	; 0x40
 802e544:	4649      	mov	r1, r9
 802e546:	4658      	mov	r0, fp
 802e548:	f7fe fab2 	bl	802cab0 <__ssputs_r>
 802e54c:	3001      	adds	r0, #1
 802e54e:	f43f ae91 	beq.w	802e274 <_svfwprintf_r+0x7bc>
 802e552:	3c10      	subs	r4, #16
 802e554:	e7e8      	b.n	802e528 <_svfwprintf_r+0xa70>
 802e556:	4639      	mov	r1, r7
 802e558:	2b00      	cmp	r3, #0
 802e55a:	f43f add6 	beq.w	802e10a <_svfwprintf_r+0x652>
 802e55e:	2a01      	cmp	r2, #1
 802e560:	f43f ae4b 	beq.w	802e1fa <_svfwprintf_r+0x742>
 802e564:	2a02      	cmp	r2, #2
 802e566:	f50d 7aa4 	add.w	sl, sp, #328	; 0x148
 802e56a:	f43f ae5c 	beq.w	802e226 <_svfwprintf_r+0x76e>
 802e56e:	f003 0207 	and.w	r2, r3, #7
 802e572:	3230      	adds	r2, #48	; 0x30
 802e574:	08db      	lsrs	r3, r3, #3
 802e576:	4650      	mov	r0, sl
 802e578:	f84a 2d04 	str.w	r2, [sl, #-4]!
 802e57c:	d1f7      	bne.n	802e56e <_svfwprintf_r+0xab6>
 802e57e:	07cd      	lsls	r5, r1, #31
 802e580:	d506      	bpl.n	802e590 <_svfwprintf_r+0xad8>
 802e582:	2a30      	cmp	r2, #48	; 0x30
 802e584:	d004      	beq.n	802e590 <_svfwprintf_r+0xad8>
 802e586:	2330      	movs	r3, #48	; 0x30
 802e588:	f84a 3c04 	str.w	r3, [sl, #-4]
 802e58c:	f1a0 0a08 	sub.w	sl, r0, #8
 802e590:	ab52      	add	r3, sp, #328	; 0x148
 802e592:	4626      	mov	r6, r4
 802e594:	eba3 040a 	sub.w	r4, r3, sl
 802e598:	10a4      	asrs	r4, r4, #2
 802e59a:	460f      	mov	r7, r1
 802e59c:	f04f 0800 	mov.w	r8, #0
 802e5a0:	4645      	mov	r5, r8
 802e5a2:	e4d8      	b.n	802df56 <_svfwprintf_r+0x49e>
 802e5a4:	08033098 	.word	0x08033098
 802e5a8:	08033058 	.word	0x08033058

0802e5ac <_init>:
 802e5ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e5ae:	bf00      	nop
 802e5b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802e5b2:	bc08      	pop	{r3}
 802e5b4:	469e      	mov	lr, r3
 802e5b6:	4770      	bx	lr

0802e5b8 <_fini>:
 802e5b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e5ba:	bf00      	nop
 802e5bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802e5be:	bc08      	pop	{r3}
 802e5c0:	469e      	mov	lr, r3
 802e5c2:	4770      	bx	lr
